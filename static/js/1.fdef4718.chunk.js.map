{"version":3,"sources":["components/minHeight/minHeight.js","components/form/select.js","components/inventoryList/inventoryList.js","components/inventoryList/inventoryListHelpers.js","components/pagination/paginationHelpers.js","components/inventorySubscriptions/inventorySubscriptions.js","components/bannerMessages/bannerMessages.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardChartTooltip.js","components/graphCard/graphCardChartLegend.js","components/chartArea/chartArea.js","components/toolbar/toolbarFieldGranularity.js","components/graphCard/graphCard.js","components/tabs/tabs.js","components/inventoryTabs/inventoryTab.js","components/inventoryTabs/inventoryTabs.js","components/toolbar/toolbarHelpers.js","components/toolbar/toolbar.js","components/guestsList/guestsList.js","components/pagination/pagination.js"],"names":["MinHeight","containerRef","React","createRef","innerContainerRef","updatedContainerWidth","resizeObserver","helpers","noop","onResizeContainer","updateOnResize","props","clientWidth","current","setMinHeight","this","window","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","children","className","ref","Component","defaultProps","Select","state","isExpanded","options","selected","onSelect","event","titleSelection","id","name","variant","updatedOptions","optionsIndex","findIndex","option","title","SelectVariant","single","forEach","index","updateSelected","filter","opt","map","setState","mockUpdatedOptions","_cloneDeep","mockTarget","value","selectedIndex","type","checkbox","checked","mockEvent","target","currentTarget","persist","onToggle","expanded","formatOptions","prevProps","selectedOptions","_isEqual","_isPlainObject","Object","keys","key","activateOptions","convertedOption","text","textContent","label","includes","find","ariaLabel","isDisabled","isToggleText","placeholder","toggleIcon","pfSelectOptions","length","aria-label","selections","isOpen","placeholderText","btoa","data-value","data-title","generateId","InventoryList","onColumnSort","data","updatedDirection","direction","productId","updatedSortColumn","values","SORT_TYPES","_camelCase","SortByDirection","desc","SORT_DIRECTION_TYPES","DESCENDING","ASCENDING","store","dispatch","reduxTypes","query","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","RHSM_API_QUERY_TYPES","DIRECTION","viewId","SORT","onPage","offset","perPage","OFFSET","LIMIT","onUpdateInventoryData","getHostsInventory","filterGuestsData","filterInventoryData","listData","session","settings","updatedColumnHeaders","updatedRows","cellData","inventoryListHelpers","parseRowCellsListData","filters","parseInventoryFilters","onSort","columnHeaders","cells","guestsId","subscriptionManagerId","hasGuests","numberOfGuests","expandedContent","undefined","borders","TableVariant","compact","rows","error","fulfilled","itemCount","pending","perPageDefault","t","context","updatedPerPage","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","isCompact","onPerPage","tableProps","colCount","colWidth","cellWidth","rowCount","renderTable","isFooter","dropDirection","UI_DISABLED_TABLE_HOSTS","translate","makeMapStateToProps","reduxSelectors","inventoryList","makeInventoryList","ConnectedInventoryList","connect","reduxActions","rhsm","applySortFilters","updatedFilter","hasSort","sortActive","sortDirection","asc","isSortDefault","sortDefaultInitialDirection","applyWrappableFilters","Array","isArray","transforms","push","wrappable","isSortable","assign","isWrappable","updatedCells","allCells","entries","headerUpdated","cellUpdated","cell","header","isValidElement","concat","PfCellWidth","obj","calculatePageFromOffset","calculateOffsetFromPage","page","Math","ceil","InventorySubscriptions","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","getSubscriptionsInventory","UI_DISABLED_TABLE_SUBSCRIPTIONS","subscriptionsList","makeSubscriptionsList","ConnectedInventorySubscriptions","BannerMessages","onUpdateData","getMessageReports","graphTallyQuery","apiQueries","parseRhsmQuery","dateHelpers","getRangedDateTime","startDate","endDate","GRANULARITY","GRANULARITY_TYPES","DAILY","START_DATE","toISOString","END_DATE","appMessages","messages","updatedMessages","message","AlertVariant","info","actionClose","onClose","alerts","renderAlerts","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","appName","UI_DISPLAY_NAME","isInline","component","icon","iconPosition","href","makeAppMessages","ConnectedBannerMessages","getTooltipDate","date","granularity","momentDate","moment","utc","QUARTERLY","format","timestampQuarterFormats","yearShort","add","MONTHLY","timestampMonthFormats","yearLong","WEEKLY","timestampDayFormats","yAxisTickFormatFallback","tick","abs","updatedTick","updatedAbbr","pow","graphCardHelpers","getChartXAxisLabelIncrement","xAxisTickFormat","previousDate","formattedDate","isNewYear","Number","parseInt","year","replace","yAxisTickFormat","locale","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","GraphCardChartTooltip","datum","productLabel","itemsByKey","tempDataFacet","color","test","thresholdStringValue","hasInfinite","y","dataFactsValue","hasData","product","summary","colSpan","dataFacet","aria-hidden","backgroundColor","GraphCardChartLegend","onClick","chart","updatedToggle","toggle","graph","SET_GRAPH_LEGEND","legend","dataSets","isToggled","hide","chartId","isThreshold","labelContent","tooltipContent","checkIsToggled","button","Button","onKeyPress","tabIndex","visibility","borderTopColor","Tooltip","content","position","TooltipPosition","top","enableFlip","distance","entryDelay","exitDelay","Fragment","stroke","renderLegendItem","ConnectedGraphCardChartLegend","ChartArea","chartWidth","dataSetsToggle","tooltipRef","onHide","forceUpdate","onRevert","getIsToggled","setResizeObserve","containerElement","ResizeObserver","observe","unobserve","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","x","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","item","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","floored","floor","log10","maxY","chartDomain","chartTooltip","tooltipDataSet","fill","mockDatum","tooltip","cloneElement","v","VictoryVoronoiCursorContainer","createContainer","parsedTooltipData","getTooltipData","globalContainerBounds","globalTooltipBounds","FlyoutComponent","containerBounds","getBoundingClientRect","tooltipBounds","right","xCoordinate","width","htmlContent","applyParsedTooltipData","height","display","xmlns","cursorDimension","labels","labelComponent","voronoiPadding","chartLegend","legendProps","revert","stacked","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","themeColor","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","tooltipComponent","containerComponent","renderTooltip","chartProps","Chart","duration","ChartAxis","renderChart","ChartStack","renderLegend","bottom","left","toolbarFieldOptions","FIELD_TYPES","ToolbarFieldGranularity","updatedValue","useSelector","view","SET_QUERY_RHSM_TYPES","GraphCard","onUpdateGraphData","getGraphReportsCapacity","graphGranularity","getQueryGranularity","filterGraphData","graphData","chartAreaProps","JSON","stringify","filtered","tempFiltered","onLoad","chartColorGreenDark","filteredGraphData","cardTitle","Card","CardHeader","CardTitle","Title","headingLevel","size","CardActions","CardBody","UI_DISABLED_GRAPH","graphCard","makeGraphCard","ConnectedGraphCard","Tabs","updatedActiveTab","updatedTabs","onTab","setTabData","tabs","_isEqualWith","valueA","valueB","toString","activeTab","defaultActiveTab","active","Tab","eventKey","TabTitleText","hasOverflowScroll","activeKey","mountOnEnter","unmountOnExit","inset","default","md","Grid","GridItem","span","renderTabs","InventoryTab","InventoryTabs","inventory","SET_INVENTORY_TAB","updatedChildren","Children","toArray","count","UI_DISABLED_TABLE","ConnectedInventoryTabs","toolbarHelpers","optionsType","SLA","SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","USAGE","USAGE_TYPES","DEVELOPMENT","DISASTER","PRODUCTION","UNSPECIFIED","Toolbar","onClear","hardFilterReset","dispatchActions","toolbar","SET_ACTIVE_FILTERS","activeFilters","Set","SET_QUERY_CLEAR","clearFilters","SET_FILTER_TYPE","currentFilter","setDispatch","onClearFilter","categoryTitle","categoryValue","updatedActiveFilters","updatedCurrentFilter","onCategorySelect","field","actions","resetPage","updatedActions","SET_QUERY_CLEAR_INVENTORY_LIST","getCurrentFilter","optionsSelected","filterOptions","setSelectFilter","ToolbarFilter","chips","deleteChip","categoryName","showToolbarItem","categoryOptions","categoryOptionsSelected","collapseListedFiltersBreakpoint","clearAllFilters","ToolbarContent","ToolbarToggleGroup","breakpoint","ToolbarGroup","ToolbarItem","renderSelectFilter","filterType","UI_DISABLED_TOOLBAR","ConnectedToolbar","GuestsList","currentPage","limit","previousData","onUpdateGuestsData","getHostsInventoryGuests","updatedQuery","inventoryGuestsQuery","onScroll","scrollHeight","scrollTop","newPage","updatedData","prevState","scrollLoader","updatedHeight","renderLoader","guestsList","makeGuestsList","ConnectedGuestsList","Pagination","onSetPage","onPerPageSelect"],"mappings":"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","file":"static/js/1.fdef4718.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * FixMe: Patternfly React select generates a random ID for select options.\n * On the surface this seems like a legitimate update until you remember unit tests.\n * Quite a few apps use test snapshots causing certain rendered select snapshots to\n * fail consistently. Appears this may have been part of the \"favorites\" update.\n * The solution centers around updating the  \"GenerateId helper\" and detecting a\n * test, dev, or prod environment instead of generating a random string every time.\n *\n * This issue also has the side-effect of making the attribute inadvertently\n * \"required\" anywhere it's used in an effort to squash it.\n */\n/**\n * A wrapper for Patternfly Select. Provides additional event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @param expanded\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected =\n          activateOptions.includes(convertedOption.value) || activateOptions.includes(convertedOption.title);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, isToggleText, placeholder, toggleIcon, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select${(!isToggleText && '__no-toggle-text') || ''} ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isOpen={isExpanded}\n        toggleIcon={toggleIcon}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(`${option.title}-${option.value}`)}\n              id={window.btoa(`${option.title}-${option.value}`)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{isToggleText: boolean, toggleIcon: Node|Function, name: string, options: object,\n *     selectedOptions: (number|string|Array), variant: (object|string), className: string,\n *     id: string, isDisabled: boolean, placeholder: string, ariaLabel: string,\n *     onSelect: Function}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.string,\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{isToggleText: boolean, toggleIcon: null, name: null, options: Array, selectedOptions: null,\n *     variant: SelectVariant.single, className: string, id: string, isDisabled: boolean,\n *     placeholder: string, ariaLabel: string, onSelect: Function}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  isToggleText: true,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  selectedOptions: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport GuestsList from '../guestsList/guestsList';\nimport { inventoryListHelpers } from './inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A hosts system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventoryList extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getHostsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getHostsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterGuestsData, filterInventoryData, listData, query, session, settings } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      const guestsId = cellData?.subscriptionManagerId;\n      let hasGuests = cellData?.numberOfGuests > 0 && guestsId;\n\n      // Apply hasGuests callback, return boolean\n      if (typeof settings?.hasGuests === 'function') {\n        hasGuests = settings.hasGuests({ ...cellData }, { ...session });\n      }\n\n      return {\n        cells,\n        expandedContent:\n          (hasGuests && (\n            <GuestsList\n              key={guestsId}\n              filterGuestsData={filterGuestsData}\n              numberOfGuests={cellData?.numberOfGuests}\n              id={guestsId}\n              query={query}\n            />\n          )) ||\n          undefined\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader>\n            <CardActions className={(error && 'blur') || ''}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter className={(error && 'blur') || ''}>\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{settings:object, productId: string, listData: Array, session: object, pending: boolean,\n *     query: object, fulfilled: boolean, getHostsInventory: Function, error: boolean,\n *     itemCount: number, t: Function, filterInventoryData: Array, filterGuestsData: Array,\n *     perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterGuestsData: PropTypes.array,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  settings: PropTypes.shape({\n    hasGuests: PropTypes.func\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{settings: object, listData: Array, session: object, pending: boolean, fulfilled: boolean,\n *     getHostsInventory: Function, error: boolean, itemCount: number, t: translate,\n *     filterInventoryData: Array, filterGuestsData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterGuestsData: [],\n  filterInventoryData: [],\n  getHostsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_HOSTS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  settings: {},\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventory: (id, query) => dispatch(reduxActions.rhsm.getHostsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.inventoryList.makeInventoryList();\n\nconst ConnectedInventoryList = connect(makeMapStateToProps, mapDispatchToProps)(InventoryList);\n\nexport { ConnectedInventoryList as default, ConnectedInventoryList, InventoryList };\n","import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Apply sort filter to filters.\n *\n * @param {object} params\n * @param {object} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {object}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} }) => {\n  const { id } = filter;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === id\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  if (\n    hasSort &&\n    !updatedFilter.sortActive &&\n    !query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    updatedFilter.isSortDefault === true\n  ) {\n    updatedFilter.sortActive = true;\n\n    if (updatedFilter.sortDefaultInitialDirection) {\n      updatedFilter.sortDirection = updatedFilter.sortDefaultInitialDirection;\n    }\n  }\n\n  return updatedFilter;\n};\n\nconst applyWrappableFilters = ({ filter = {} }) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Apply additional properties to filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {Array}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} }) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.cellData\n * @param {object} params.session\n * @returns {{columnHeaders: Array, cells: Array, data: object}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, session = {} }) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value]) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value);\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    filters.forEach(({ id, cell, cellWidth, header, onSort, sortActive, sortDirection, transforms }) => {\n      let headerUpdated;\n      let cellUpdated;\n\n      if (allCells[id]) {\n        headerUpdated = allCells[id]?.title ?? id;\n        cellUpdated = allCells[id]?.value ?? '';\n      }\n\n      // set table header cell filter params\n      if (header) {\n        headerUpdated = (typeof header === 'function' && header({ ...allCells })) || header;\n      }\n\n      if (\n        typeof headerUpdated === 'string' ||\n        typeof headerUpdated === 'number' ||\n        React.isValidElement(headerUpdated)\n      ) {\n        headerUpdated = {\n          title: headerUpdated\n        };\n      }\n\n      headerUpdated.transforms = [];\n\n      if (Array.isArray(transforms)) {\n        headerUpdated.transforms = headerUpdated.transforms.concat([...transforms]);\n      }\n\n      if (typeof cellWidth === 'number') {\n        headerUpdated.transforms.push(PfCellWidth(cellWidth));\n      }\n\n      if (typeof onSort === 'function') {\n        headerUpdated = {\n          ...headerUpdated,\n          onSort: obj => onSort({ ...allCells }, { ...obj, id }),\n          sortActive,\n          sortDirection\n        };\n      }\n\n      // set table row cell filter params\n      if (cell) {\n        cellUpdated = (typeof cell === 'function' && cell({ ...allCells }, { ...session })) || cell;\n      }\n\n      if (typeof cellUpdated === 'string' || typeof cellUpdated === 'number' || React.isValidElement(cellUpdated)) {\n        cellUpdated = {\n          title: cellUpdated\n        };\n      }\n\n      updatedColumnHeaders.push(headerUpdated);\n      updatedCells.push(cellUpdated);\n    });\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryListHelpers = {\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryListHelpers as default,\n  inventoryListHelpers,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A subscriptions system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventorySubscriptions extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getSubscriptionsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getSubscriptionsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterInventoryData, listData, query, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader>\n            <CardActions className={(error && 'blur') || ''}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter className={(error && 'blur') || ''}>\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, listData: Array, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, error: boolean, getSubscriptionsInventory: Function, itemCount: number,\n *     t: Function, filterInventoryData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventorySubscriptions.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getSubscriptionsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, filterInventoryData: Array, listData: Array, session: object, pending: boolean,\n *     fulfilled: boolean, perPageDefault: number, isDisabled: boolean, error: boolean,\n *     getSubscriptionsInventory: Function, itemCount: number}}\n */\nInventorySubscriptions.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterInventoryData: [],\n  getSubscriptionsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getSubscriptionsInventory: (id, query) => dispatch(reduxActions.rhsm.getSubscriptionsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.subscriptionsList.makeSubscriptionsList();\n\nconst ConnectedInventorySubscriptions = connect(makeMapStateToProps, mapDispatchToProps)(InventorySubscriptions);\n\nexport { ConnectedInventorySubscriptions as default, ConnectedInventorySubscriptions, InventorySubscriptions };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertActionCloseButton, AlertVariant, Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport _isEqual from 'lodash/isEqual';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { dateHelpers, helpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Render banner messages.\n *\n * @augments React.Component\n */\nclass BannerMessages extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.onUpdateData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateData = () => {\n    const { getMessageReports, productId, query } = this.props;\n    const { graphTallyQuery } = apiQueries.parseRhsmQuery(query);\n\n    if (productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime('CURRENT');\n      const updatedGraphQuery = {\n        ...graphTallyQuery,\n        [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY,\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString()\n      };\n\n      getMessageReports(productId, updatedGraphQuery);\n    }\n  };\n\n  /**\n   * Apply messages' configuration to alerts.\n   *\n   * @returns {Node}\n   */\n  renderAlerts() {\n    const { state } = this;\n    const { appMessages, messages } = this.props;\n    const updatedMessages = [];\n\n    if (messages.length) {\n      Object.entries(appMessages).forEach(([key, value]) => {\n        if (state[key] !== true && value === true) {\n          const message = messages.find(({ id }) => id === key);\n\n          if (message) {\n            updatedMessages.push({\n              key,\n              ...message\n            });\n          }\n        }\n      });\n    }\n\n    return updatedMessages.map(({ key, message, title, variant = AlertVariant.info }) => {\n      const actionClose = <AlertActionCloseButton onClose={() => this.setState({ [key]: true })} />;\n\n      return (\n        <Alert actionClose={actionClose} key={key} title={title} variant={variant}>\n          {message}\n        </Alert>\n      );\n    });\n  }\n\n  /**\n   * Render a banner messages container.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const alerts = this.renderAlerts();\n\n    if (alerts.length) {\n      return <div className=\"curiosity-banner-messages\">{alerts}</div>;\n    }\n\n    return null;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{appMessages: object, productId: string, getMessageReports: Function, query: object, messages: Array}}\n */\nBannerMessages.propTypes = {\n  appMessages: PropTypes.object.isRequired,\n  getMessageReports: PropTypes.func,\n  query: PropTypes.object,\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.node.isRequired,\n      message: PropTypes.node.isRequired,\n      variant: PropTypes.oneOf([...Object.values(AlertVariant)])\n    })\n  ),\n  productId: PropTypes.string.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{getMessageReports: Function, query: object, messages: Array}}\n */\nBannerMessages.defaultProps = {\n  getMessageReports: helpers.noop,\n  query: {},\n  messages: [\n    {\n      id: 'cloudigradeMismatch',\n      title: translate('curiosity-banner.dataMismatchTitle'),\n      message: translate(\n        'curiosity-banner.dataMismatchMessage',\n        {\n          context: helpers.UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS !== '' && 'cloudigradeMismatch',\n          appName: helpers.UI_DISPLAY_NAME\n        },\n        [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS}\n          />\n        ]\n      )\n    }\n  ]\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getMessageReports: (id, query) => dispatch(reduxActions.rhsm.getMessageReports(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.appMessages.makeAppMessages();\n\nconst ConnectedBannerMessages = connect(makeMapStateToProps, mapDispatchToProps)(BannerMessages);\n\nexport { ConnectedBannerMessages as default, ConnectedBannerMessages, BannerMessages };\n","import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, productLabel, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      header = getTooltipDate({\n        date: itemsByKey[key]?.data.date,\n        granularity\n      });\n    }\n\n    const tempDataFacet = {\n      color: itemsByKey[key]?.color\n    };\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key]?.data.hasInfinite && t('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel'));\n\n      tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n      tempDataFacet.value = thresholdStringValue;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n      tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product: productLabel });\n      tempDataFacet.value = dataFactsValue;\n    }\n\n    data.push(tempDataFacet);\n  });\n\n  return (\n    <div className=\"victory-tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  <div\n                    aria-hidden\n                    className=\"legend-icon victory-legend-icon\"\n                    style={{\n                      backgroundColor: dataFacet.color || 'transparent'\n                    }}\n                  />\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, productLabel: string, t: translate}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  productLabel: '',\n  t: translate\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { connect, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @param {string} options.chartId\n   * @param {string} options.color\n   * @param {boolean} options.isDisabled\n   * @param {boolean} options.isThreshold\n   * @param {string} options.labelContent\n   * @param {string} options.tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"victory-legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: color\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: color\n              }}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *  - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, productLabel, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}Label`, `curiosity-graph.thresholdLabel`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t([`curiosity-graph.${id}Label`, `curiosity-graph.noLabel`], {\n              product: productLabel,\n              context: productLabel\n            });\n\n          const tooltipContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}LegendTooltip`, `curiosity-graph.thresholdLegendTooltip`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t(`curiosity-graph.${id}LegendTooltip`, { product: productLabel, context: productLabel });\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold,\n            tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, legend: object, chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {dataSets: Array}, productLabel: string, viewId: string, t: translate, legend: object,\n *     chart: {hide: Function, toggle: Function, isToggled: Function}}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connect(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer } from 'victory-create-container';\nimport {\n  Chart,\n  ChartAxis,\n  ChartStack,\n  ChartThreshold,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * ToDo: Evaluate Victory Charts combined with PF react-charts, updating adds 100+-kb to the output bundle\n * This appears to be related to Victory Charts itself, upgrading to versions after 35.3.1 of\n * the Victory Charts components also expands the bundle at a similar rate. Breaking out the imports\n * into individual direct imports from PF react-charts increases the build even more, by our estimates 200+-kb.\n * If Victory Charts combined with PF react-charts continues to balloon in size we may need to review pulling\n * the Victory components directly instead of through PF react-charts.\n */\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  dataSetsToggle = {};\n\n  resizeObserver = helpers.noop;\n\n  containerRef = React.createRef();\n\n  tooltipRef = React.createRef();\n\n  componentDidMount() {\n    this.setResizeObserve();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * Consumer exposed, hides chart layer.\n   *\n   * @event onHide\n   * @param {string} id\n   */\n  onHide = id => {\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: true };\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns all chart layers back on.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    this.dataSetsToggle = {};\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns chart layer on/off.\n   *\n   * @event onToggle\n   * @param {string} id\n   * @returns {boolean}\n   */\n  onToggle = id => {\n    const updatedToggle = !this.dataSetsToggle[id];\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: updatedToggle };\n    this.forceUpdate();\n\n    return updatedToggle;\n  };\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { chartWidth } = this.state;\n    const { clientWidth = 0 } = this.containerRef.current || {};\n\n    if (clientWidth !== chartWidth) {\n      this.setState({ chartWidth: clientWidth });\n    }\n  };\n\n  /**\n   * Consumer exposed, determine if chart layer on/off.\n   * Note: Using \"setState\" as related to this exposed check gives the appearance of a race condition.\n   * Using a class property with forceUpdate to bypass.\n   *\n   * @param {string} id\n   * @returns {boolean}\n   */\n  getIsToggled = id => this.dataSetsToggle[id] || false;\n\n  /**\n   * Set ResizeObserver for scenarios where the window.resize event doesn't fire.\n   */\n  setResizeObserve() {\n    const containerElement = this.containerRef.current;\n    const { ResizeObserver } = window;\n\n    if (containerElement && ResizeObserver) {\n      const resizeObserver = new ResizeObserver(this.onResizeContainer);\n      resizeObserver.observe(containerElement);\n      this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n    } else {\n      this.onResizeContainer();\n      window.addEventListener('resize', this.onResizeContainer);\n      this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n    }\n  }\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { dataSetsToggle } = this;\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply data set to custom tooltips.\n   *\n   * @returns {Array}\n   */\n  getTooltipData() {\n    const { dataSetsToggle } = this;\n    const { dataSets, chartTooltip } = this.props;\n    let tooltipDataSet = [];\n\n    if (chartTooltip && dataSets && dataSets[0] && dataSets[0].data) {\n      tooltipDataSet = dataSets[0].data.map((dataSet, index) => {\n        const itemsByKey = {};\n\n        dataSets.forEach(data => {\n          if (!dataSetsToggle[data.id] && data.data && data.data[index]) {\n            itemsByKey[data.id] = {\n              color: data.stroke || data.fill || data.color || '',\n              data: _cloneDeep(data.data[index])\n            };\n          }\n        });\n\n        const mockDatum = {\n          datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey, dataSets: _cloneDeep(dataSets) }\n        };\n\n        return {\n          x: dataSet.x,\n          y: null,\n          itemsByKey,\n          tooltip:\n            (React.isValidElement(chartTooltip) && React.cloneElement(chartTooltip, { ...mockDatum })) ||\n            chartTooltip({ ...mockDatum })\n        };\n      });\n    }\n\n    return tooltipDataSet;\n  }\n\n  /**\n   * ToDo: monitor Victory charts release version increment around Voronoi container attributes.\n   * Future updates could lead to additional unexpected behavior. Victory charts released a patch/fix\n   * around attribute behavior for Voronoi containers. The behavior was already \"unexpected\" in that there appears\n   * to be a need to provide the \"label\" attribute when using the \"labelComponent\" attribute, even if \"label\" is\n   * just a pass-through. Providing `label={() => ''}` was a work-around, that is now `label={obj => obj}`. See\n   * - https://github.com/FormidableLabs/victory/blob/master/CHANGELOG.md#3436-2020-05-18\n   * - https://github.com/FormidableLabs/victory/pull/1581\n   */\n  /**\n   * FixMe: Victory charts voronoi containers throw inaccurate coordinates on large graph widths\n   * Issue is \"patched\" by removing the \"x\" dimension attribute for voronoi.\n   * - https://github.com/RedHatInsights/curiosity-frontend/issues/318\n   */\n  /**\n   * Return a chart/graph tooltip Victory container component to allow custom HTML tooltips.\n   *\n   * @returns {Node}\n   */\n  renderTooltip() {\n    const { dataSetsToggle } = this;\n    const { chartTooltip, dataSets } = this.props;\n\n    if (!chartTooltip || Object.values(dataSetsToggle).filter(v => v === true).length === dataSets.length) {\n      return null;\n    }\n\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const parsedTooltipData = this.getTooltipData();\n    let globalContainerBounds = {};\n    let globalTooltipBounds = {};\n\n    const applyParsedTooltipData = ({ datum }) => {\n      const t = parsedTooltipData.find(v => v.x === datum.x) || {};\n      return t?.tooltip || '';\n    };\n\n    const FlyoutComponent = obj => {\n      const containerRef = this.containerRef.current;\n      const tooltipRef = this.tooltipRef.current;\n      const containerBounds = (containerRef && containerRef.getBoundingClientRect()) || {};\n      const tooltipBounds = (tooltipRef && tooltipRef.getBoundingClientRect()) || {};\n\n      if (containerBounds.right) {\n        globalContainerBounds = containerBounds;\n      }\n\n      if (tooltipBounds.right) {\n        globalTooltipBounds = tooltipBounds;\n      }\n\n      let xCoordinate = obj.x + 10;\n\n      if (\n        globalContainerBounds.right < globalTooltipBounds.right ||\n        obj.x + globalTooltipBounds.width > globalContainerBounds.right / 2\n      ) {\n        xCoordinate = obj.x - 10 - globalTooltipBounds.width;\n      }\n\n      const htmlContent = applyParsedTooltipData({ ...obj });\n\n      if (htmlContent) {\n        return (\n          <g>\n            <foreignObject x={xCoordinate} y={obj.y / 2.2} width=\"100%\" height=\"100%\">\n              <div ref={this.tooltipRef} style={{ display: 'inline-block' }} xmlns=\"http://www.w3.org/1999/xhtml\">\n                {htmlContent}\n              </div>\n            </foreignObject>\n          </g>\n        );\n      }\n\n      return <g />;\n    };\n\n    return (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={<FlyoutComponent />}\n        voronoiPadding={60}\n      />\n    );\n  }\n\n  /**\n   * Return a custom chart/graph legend component.\n   *\n   * @returns {Node}\n   */\n  renderLegend() {\n    const { chartLegend, dataSets } = this.props;\n\n    if (!chartLegend) {\n      return null;\n    }\n\n    const legendProps = {\n      datum: { dataSets: _cloneDeep(dataSets) },\n      chart: {\n        hide: this.onHide,\n        revert: this.onRevert,\n        toggle: this.onToggle,\n        isToggled: this.getIsToggled\n      }\n    };\n\n    return (\n      (React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n      chartLegend({ ...legendProps })\n    );\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const { dataSetsToggle } = this;\n    const { dataSets } = this.props;\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { chartLegend, padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const tooltipComponent = { containerComponent: (maxY >= 0 && this.renderTooltip()) || undefined };\n    const chartProps = { padding, ...chartDomain, ...tooltipComponent };\n\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n        {chartLegend && <div className=\"curiosity-chartarea-description victory-legend\">{this.renderLegend()}</div>}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartLegend: Node|Function, chartTooltip: Node|Function, padding, xAxisTickFormat: Function,\n *     themeColor: string, yAxisTickFormat: Function, domain: object|Array, dataSets: object,\n *     xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartLegend: null, chartTooltip: null, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: null, themeColor: string, yAxisTickFormat: null, domain: object,\n *     dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { reduxTypes, store, useSelector } from '../../redux';\nimport { Select } from '../form/select';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as FIELD_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Select field options.\n *\n * @type {{title: (string|Node), value: string, selected: boolean}[]}\n */\nconst toolbarFieldOptions = Object.values(FIELD_TYPES).map(type => ({\n  title: translate('curiosity-toolbar.granularity', { context: type }),\n  value: type,\n  selected: false\n}));\n\n/**\n * Display a granularity field with options.\n *\n * @fires onSelect\n * @param {object} props\n * @param {Array} props.options\n * @param {Function} props.t\n * @param {string} props.value\n * @param {string} props.viewId\n * @returns {Node}\n */\nconst ToolbarFieldGranularity = ({ options, t, value, viewId }) => {\n  const updatedValue = useSelector(\n    ({ view }) => view.graphTallyQuery?.[RHSM_API_QUERY_TYPES.GRANULARITY]?.[viewId],\n    value\n  );\n\n  const updatedOptions = options.map(option => ({ ...option, selected: option.value === updatedValue }));\n\n  /**\n   * On select, dispatch type.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @returns {void}\n   */\n  const onSelect = event =>\n    store.dispatch({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n      viewId,\n      [RHSM_API_QUERY_TYPES.GRANULARITY]: event.value\n    });\n\n  return (\n    <Select\n      aria-label={t('curiosity-toolbar.placeholder', { context: 'granularity' })}\n      onSelect={onSelect}\n      options={updatedOptions}\n      selectedOptions={updatedValue}\n      placeholder={t('curiosity-toolbar.placeholder', { context: 'granularity' })}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{viewId: string, t: Function, options: Array, value: string}}\n */\nToolbarFieldGranularity.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      value: PropTypes.any,\n      selected: PropTypes.bool\n    })\n  ),\n  t: PropTypes.func,\n  value: PropTypes.oneOf([...Object.values(FIELD_TYPES)]),\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, options: Array, value: string}}\n */\nToolbarFieldGranularity.defaultProps = {\n  options: toolbarFieldOptions,\n  t: translate,\n  value: FIELD_TYPES.DAILY,\n  viewId: 'toolbarFieldGranularity'\n};\n\nexport { ToolbarFieldGranularity as default, ToolbarFieldGranularity, toolbarFieldOptions };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport _isEqual from 'lodash/isEqual';\nimport { connect, reduxActions, reduxSelectors } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { ChartArea } from '../chartArea/chartArea';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { ToolbarFieldGranularity } from '../toolbar/toolbarFieldGranularity';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const graphQuery = {\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString(),\n        ...query\n      };\n\n      getGraphReportsCapacity(productId, graphQuery);\n    }\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, productLabel, query, viewId } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: graphGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(graphGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          strokeWidth: 2,\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 3;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <ChartArea\n        key={`chart_${JSON.stringify(query)}`}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend chart={chart} datum={datum} productLabel={productLabel} viewId={viewId} />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={graphGranularity} productLabel={productLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * ToDo: Evaluate applying a minHeight attr to the MinHeight component graphCard setup\n   * Appears there may be a minor page shift when compared to the prior hard-set min-height\n   * of 410px\n   */\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, isDisabled, pending, viewId } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const graphGranularity = this.getQueryGranularity();\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <MinHeight key=\"headerMinHeight\">\n          <CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                {cardTitle}\n              </Title>\n            </CardTitle>\n            <CardActions className={(error && 'blur') || ''}>\n              {children}\n              <ToolbarFieldGranularity viewId={viewId} value={graphGranularity} />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key=\"bodyMinHeight\">\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && <Loader variant=\"graph\" />}\n              {!pending && this.renderChart()}\n            </div>\n          </CardBody>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productLabel: string, productId: string, pending: boolean, error: boolean, query: object,\n *     cardTitle: string, filterGraphData: Array, getGraphReportsCapacity: Function,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productLabel: string, viewId: string, t: translate,\n *     children: Node, pending: boolean, graphData: object, isDisabled: boolean, error: boolean,\n *     cardTitle: string, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs as PfTabs, Tab, TabTitleText, Grid, GridItem } from '@patternfly/react-core';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: PF tabs misinterprets \"isElementInView\" when tab title nodes are loaded dynamically\n * It appears the use of isElementInView within PF tabs is trying to be predicative in using\n * \"getBoundingClientRect\" but produces questionable results in scenarios where content is\n * async created. isElementInView assumes some form of the content will always be there\n * instead of scenarios where someone tries to dynamically apply components. It may be good to\n * review using a window.setTimeout(() => handleScrollButtons()) in componentDidMount.\n *\n * Our temporary solution is to simply hide the buttons with a manual set flag affecting the\n * CSS class. This will most likely cause long-term issues.\n */\n/**\n * ToDo: Insights frontend components uses a custom tabs layout, investigate related CSS classes\n * Originally we applied the CSS classes, but they appeared to provide nothing. Since Insights\n * rolled its own tabs we're hesitant to apply said classes without understanding what they provide.\n */\n/**\n * A set of tabs.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass Tabs extends React.Component {\n  state = {\n    updatedActiveTab: null,\n    updatedTabs: null\n  };\n\n  componentDidMount() {\n    const { updatedTabs } = this.state;\n\n    if (updatedTabs === null) {\n      this.setTabData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tabs } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (!_isEqualWith(prevProps.tabs, tabs, customizer)) {\n      this.setTabData();\n    }\n  }\n\n  /**\n   * On tab selected\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {number} params.index\n   */\n  onTab = ({ index }) => {\n    const { onTab } = this.props;\n\n    this.setState(\n      {\n        updatedActiveTab: index\n      },\n      () => onTab({ index })\n    );\n  };\n\n  /**\n   * Convert tab objects into the required PF Tab format.\n   */\n  setTabData() {\n    const { activeTab, defaultActiveTab, tabs } = this.props;\n    let updatedActiveTab = defaultActiveTab;\n\n    const updatedTabs = tabs.map(({ active, content, title }, index) => {\n      updatedActiveTab = active ? index : updatedActiveTab;\n\n      return (\n        <Tab key={title} eventKey={index} title={<TabTitleText>{title}</TabTitleText>}>\n          {content}\n        </Tab>\n      );\n    });\n\n    if (typeof activeTab === 'number') {\n      updatedActiveTab = activeTab;\n    }\n\n    this.setState({\n      updatedActiveTab,\n      updatedTabs\n    });\n  }\n\n  /**\n   * Apply props to tabs.\n   *\n   * @returns {Node}\n   */\n  renderTabs() {\n    const { updatedActiveTab, updatedTabs } = this.state;\n    const { className, hasOverflowScroll } = this.props;\n\n    return (\n      <PfTabs\n        className={`curiosity-tabs${(!hasOverflowScroll && '__no-scroll') || ''} ${className || ''}`}\n        activeKey={updatedActiveTab}\n        onSelect={(event, index) => this.onTab({ event, index })}\n        mountOnEnter\n        unmountOnExit\n        inset={{\n          default: 'insetNone',\n          md: 'insetLg'\n        }}\n      >\n        {updatedTabs}\n      </PfTabs>\n    );\n  }\n\n  /**\n   * Render tabs.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"curiosity-tabs-container\">\n        <GridItem span={12}>{this.renderTabs()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.propTypes = {\n  activeTab: PropTypes.number,\n  className: PropTypes.string,\n  defaultActiveTab: PropTypes.number,\n  hasOverflowScroll: PropTypes.bool,\n  onTab: PropTypes.func,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      content: PropTypes.node.isRequired,\n      title: PropTypes.node.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.defaultProps = {\n  activeTab: null,\n  className: '',\n  defaultActiveTab: 0,\n  hasOverflowScroll: false,\n  onTab: helpers.noop,\n  tabs: []\n};\n\nexport { Tabs as default, Tabs };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * A tab pass-through component for passing props to InventoryTabs.\n *\n * @param {object} props\n * @param {boolean} props.active\n * @param {Node} props.children\n * @param {string} props.title\n * @returns {Node}\n */\n// eslint-disable-next-line no-unused-vars\nconst InventoryTab = ({ active, children, title }) => <React.Fragment>{children}</React.Fragment>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nInventoryTab.propTypes = {\n  children: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  title: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nInventoryTab.defaultProps = {\n  active: false\n};\n\nexport { InventoryTab as default, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { Tabs } from '../tabs/tabs';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { InventoryTab } from './inventoryTab';\n\n/**\n * A system inventory tabs component.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass InventoryTabs extends React.Component {\n  /**\n   * On tab update state.\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {string} params.index tab index\n   */\n  onTab = ({ index }) => {\n    const { productId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.inventory.SET_INVENTORY_TAB,\n      tabs: {\n        [productId]: index\n      }\n    });\n  };\n\n  /**\n   * Render inventory tabs using Inventory tab passed props only. A parallel outcome can be\n   * achieved by passing an array of objects through a prop.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { activeTab, children, defaultActiveTab, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const updatedChildren = React.Children.toArray(children).map(({ props = {} }) => ({\n      active: props.active || false,\n      content: props.children,\n      title: props.title\n    }));\n\n    return (\n      <React.Fragment>\n        <Title headingLevel=\"h2\" className=\"sr-only\">\n          {t('curiosity-inventory.tabHeading', { count: updatedChildren.length })}\n        </Title>\n        <Tabs activeTab={activeTab} defaultActiveTab={defaultActiveTab} onTab={this.onTab} tabs={updatedChildren} />\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, t: Function, children: Node, defaultActiveTab: number, isDisabled: boolean,\n *     activeTab: number}}\n */\nInventoryTabs.propTypes = {\n  activeTab: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  defaultActiveTab: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.defaultProps = {\n  activeTab: 0,\n  defaultActiveTab: 0,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  t: translate\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst mapStateToProps = ({ inventory }, { productId }) => ({ activeTab: inventory.tabs?.[productId] });\n\nconst ConnectedInventoryTabs = connect(mapStateToProps)(InventoryTabs);\n\nexport { ConnectedInventoryTabs as default, ConnectedInventoryTabs, InventoryTabs, InventoryTab };\n","import { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SLA_TYPES as SLA_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES as USAGE_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = optionsType => {\n  switch (optionsType) {\n    case RHSM_API_QUERY_TYPES.SLA:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.slaPremium'),\n            value: SLA_TYPES.PREMIUM\n          },\n          {\n            title: translate('curiosity-toolbar.slaStandard'),\n            value: SLA_TYPES.STANDARD\n          },\n          {\n            title: translate('curiosity-toolbar.slaSelfSupport'),\n            value: SLA_TYPES.SELF\n          },\n          {\n            title: translate('curiosity-toolbar.slaNone'),\n            value: SLA_TYPES.NONE\n          }\n        ]\n      };\n    case RHSM_API_QUERY_TYPES.USAGE:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.usageDevelopment'),\n            value: USAGE_TYPES.DEVELOPMENT\n          },\n          {\n            title: translate('curiosity-toolbar.usageDisaster'),\n            value: USAGE_TYPES.DISASTER\n          },\n          {\n            title: translate('curiosity-toolbar.usageProduction'),\n            value: USAGE_TYPES.PRODUCTION\n          },\n          {\n            title: translate('curiosity-toolbar.usageUnspecified'),\n            value: USAGE_TYPES.UNSPECIFIED\n          }\n        ]\n      };\n    default:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.SLA }),\n            value: RHSM_API_QUERY_TYPES.SLA\n          },\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.USAGE }),\n            value: RHSM_API_QUERY_TYPES.USAGE\n          }\n        ]\n      };\n  }\n};\n\nconst toolbarHelpers = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarHelpers as default, toolbarHelpers, getOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar as PfToolbar,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup\n} from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons';\nimport { Select } from '../form/select';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { toolbarHelpers } from './toolbarHelpers';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onClearFilter\n * @fires onCategorySelect\n * @fires onSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear all filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    const { hardFilterReset } = this.props;\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: new Set() } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [RHSM_API_QUERY_TYPES.SLA]: null,\n            [RHSM_API_QUERY_TYPES.USAGE]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: null } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Clear individual filter state.\n   *\n   * @event onClearFilter\n   * @param {string} categoryTitle\n   */\n  onClearFilter = categoryTitle => {\n    const { activeFilters, currentFilter, hardFilterReset } = this.props;\n\n    const categoryOptions = toolbarHelpers.getOptions();\n    const { value: categoryValue } = categoryOptions.options.find(({ title }) => title === categoryTitle) || {};\n\n    if (!categoryValue) {\n      return;\n    }\n\n    const updatedActiveFilters = new Set(activeFilters);\n    updatedActiveFilters.delete(categoryValue);\n\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: updatedActiveFilters } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [categoryValue]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      const updatedCurrentFilter = (updatedActiveFilters.size > 0 && currentFilter) || null;\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: updatedCurrentFilter } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Set Category selection.\n   *\n   * @event onCategorySelect\n   * @param {object} event\n   */\n  onCategorySelect = event => {\n    const { value } = event;\n    this.setDispatch({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: value } });\n  };\n\n  /**\n   * Set select filter selection for dispatch.\n   *\n   * @param {object} params\n   * @param {object} params.event\n   * @param {string} params.field\n   */\n  onSelect = ({ event, field }) => {\n    const { activeFilters } = this.props;\n    const { value } = event;\n    const updatedActiveFilters = new Set(activeFilters).add(field);\n\n    this.setDispatch(\n      [\n        {\n          type: reduxTypes.toolbar.SET_ACTIVE_FILTERS,\n          data: { activeFilters: updatedActiveFilters }\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_TYPES[field],\n          data: { [field]: value }\n        }\n      ],\n      true\n    );\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {Array|object} actions\n   * @param {boolean} resetPage\n   */\n  setDispatch(actions, resetPage = false) {\n    const { viewId } = this.props;\n    const updatedActions = ((Array.isArray(actions) && actions) || [actions]).map(({ type, data }) => ({\n      type,\n      viewId,\n      ...data\n    }));\n\n    if (resetPage) {\n      updatedActions.push({\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST\n      });\n    }\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Available, and selected select filter options.\n   *\n   * @param {string} field\n   * @returns {{optionsSelected: Array, options: Array }}\n   */\n  setSelectFilter(field) {\n    const { query } = this.props;\n    const options = toolbarHelpers.getOptions(field);\n    const currentFilter = this.getCurrentFilter();\n    let filter;\n\n    if (field) {\n      filter = typeof query?.[field] === 'string' && options.options.find(({ value }) => value === query?.[field]);\n    } else {\n      filter = options.options.find(({ value }) => value === currentFilter);\n    }\n\n    const optionsSelected = (filter?.title && [filter.title]) || (options?.selected && [options.selected]) || [];\n\n    return { options, optionsSelected };\n  }\n\n  /**\n   * Return the currentFilter, fallback to selected\n   *\n   * @returns {string|undefined}\n   */\n  getCurrentFilter() {\n    const { currentFilter, filterOptions } = this.props;\n\n    return (\n      currentFilter ||\n      filterOptions.find(({ selected }) => selected === true)?.id ||\n      (filterOptions.length === 1 && filterOptions[0]?.id)\n    );\n  }\n\n  /**\n   * A select filter node.\n   *\n   * @param {object} params\n   * @param {string} params.id\n   * @returns {object}\n   */\n  renderSelectFilter({ id: field }) {\n    const { t } = this.props;\n    const { options, optionsSelected } = this.setSelectFilter(field);\n    const currentFilter = this.getCurrentFilter();\n\n    return (\n      <ToolbarFilter\n        key={field}\n        chips={optionsSelected}\n        deleteChip={this.onClearFilter}\n        categoryName={t('curiosity-toolbar.category', { context: field })}\n        showToolbarItem={currentFilter === field}\n      >\n        <Select\n          aria-label={t('curiosity-toolbar.category', { context: field })}\n          onSelect={event => this.onSelect({ event, field })}\n          selectedOptions={optionsSelected}\n          placeholder={t('curiosity-toolbar.placeholder', { context: field })}\n          options={options.options}\n        />\n      </ToolbarFilter>\n    );\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { filterOptions, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options: categoryOptions, optionsSelected: categoryOptionsSelected } = this.setSelectFilter();\n\n    return (\n      <PfToolbar\n        id=\"curiosity-toolbar\"\n        className=\"curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"sm\"\n        clearAllFilters={this.onClear}\n      >\n        <ToolbarContent>\n          <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"md\">\n            <ToolbarGroup variant=\"filter-group\">\n              {filterOptions.length !== 1 && (\n                <ToolbarItem>\n                  <Select\n                    aria-label={t('curiosity-toolbar.category')}\n                    onSelect={this.onCategorySelect}\n                    selectedOptions={categoryOptionsSelected}\n                    placeholder={t('curiosity-toolbar.placeholder')}\n                    options={categoryOptions.options}\n                    toggleIcon={<FilterIcon />}\n                  />\n                </ToolbarItem>\n              )}\n              {filterOptions.map(({ id, selected }) => this.renderSelectFilter({ id, selected }))}\n            </ToolbarGroup>\n          </ToolbarToggleGroup>\n        </ToolbarContent>\n      </PfToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, Array}}\n */\nToolbar.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.SLA]: PropTypes.string,\n    [RHSM_API_QUERY_TYPES.USAGE]: PropTypes.string\n  }),\n  activeFilters: PropTypes.instanceOf(Set),\n  currentFilter: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n  filterOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      filterType: PropTypes.oneOf(['select']),\n      id: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n      selected: PropTypes.bool\n    })\n  ),\n  hardFilterReset: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, filterOptions: Array}}\n */\nToolbar.defaultProps = {\n  query: {},\n  activeFilters: new Set(),\n  currentFilter: null,\n  filterOptions: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA,\n      filterType: 'select'\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      filterType: 'select',\n      selected: true\n    }\n  ],\n  hardFilterReset: false,\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: translate,\n  viewId: 'toolbar'\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.toolbar\n * @param {object} props\n * @param {string} props.viewId\n * @returns {object}\n */\nconst mapStateToProps = ({ toolbar }, { viewId }) => ({ ...toolbar.filters?.[viewId] });\n\nconst ConnectedToolbar = connect(mapStateToProps)(Toolbar);\n\nexport { ConnectedToolbar as default, ConnectedToolbar, Toolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { helpers } from '../../common';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { Loader } from '../loader/loader';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { Table } from '../table/table';\n\n/**\n * ToDo: Consider removing the query prop entirely.\n * The current API doesn't allow setting more than \"offset\" and \"limit\"\n */\n/**\n * ToDo: Review moving the \"onScroll\" layout into a standalone component.\n */\n/**\n * A system inventory guests component.\n *\n * @augments React.Component\n * @fires onUpdateGuestsData\n * @fires onScroll\n */\nclass GuestsList extends React.Component {\n  state = { currentPage: 0, limit: 100, previousData: [] };\n\n  componentDidMount() {\n    this.onUpdateGuestsData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentPage } = this.state;\n\n    if (currentPage !== prevState.currentPage) {\n      this.onUpdateGuestsData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGuestsData\n   */\n  onUpdateGuestsData = () => {\n    const { currentPage, limit } = this.state;\n    const { getHostsInventoryGuests, query, id } = this.props;\n\n    if (id) {\n      const updatedQuery = {\n        ...query,\n        [RHSM_API_QUERY_TYPES.LIMIT]: limit,\n        [RHSM_API_QUERY_TYPES.OFFSET]: currentPage * limit || 0\n      };\n\n      const { inventoryGuestsQuery } = apiQueries.parseRhsmQuery(updatedQuery);\n      getHostsInventoryGuests(id, inventoryGuestsQuery);\n    }\n  };\n\n  /**\n   * Update page state.\n   *\n   * @event onScroll\n   * @param {object} event\n   */\n  onScroll = event => {\n    const { target } = event;\n    const { currentPage, limit, previousData } = this.state;\n    const { numberOfGuests, pending, listData } = this.props;\n\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > (currentPage + 1) * limit && bottom && !pending) {\n      const newPage = currentPage + 1;\n      const updatedData = [...previousData, ...(listData || [])];\n\n      this.setState({\n        previousData: updatedData,\n        currentPage: newPage\n      });\n    }\n  };\n\n  renderLoader() {\n    const { currentPage } = this.state;\n    const { filterGuestsData, listData, pending } = this.props;\n\n    if (currentPage > 0 && pending) {\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            rowCount: 0,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  }\n\n  /**\n   * ToDo: Consider moving the \"meaning of life\" into the default props on iteration.\n   * For everyone else... move the 42 into default props, possibly the 275.\n   */\n  /**\n   * Render a guests table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { previousData } = this.state;\n    const { filterGuestsData, listData, numberOfGuests, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = [...previousData, ...(listData || [])].map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: filterGuestsData,\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    // Include the table header\n    let updatedHeight = (numberOfGuests + 1) * 42;\n    updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n    return (\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={this.onScroll}\n        >\n          {this.renderLoader()}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render a guest list table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { currentPage } = this.state;\n    const { error, filterGuestsData, listData, numberOfGuests, pending, perPageDefault } = this.props;\n\n    return (\n      <div className={`fadein ${(error && 'blur') || ''}`}>\n        {pending && currentPage === 0 && (\n          <Loader\n            variant=\"table\"\n            tableProps={{\n              borders: false,\n              colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n              colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n              rowCount: numberOfGuests < perPageDefault ? numberOfGuests : perPageDefault,\n              variant: TableVariant.compact\n            }}\n          />\n        )}\n        {((!pending && currentPage === 0) || currentPage > 0) && this.renderTable()}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: object,\n *     pending: boolean, query: object, numberOfGuests: number, perPageDefault: number, id: string,\n *     error: boolean}}\n */\nGuestsList.propTypes = {\n  error: PropTypes.bool,\n  filterGuestsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventoryGuests: PropTypes.func,\n  listData: PropTypes.array,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  pending: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object,\n  session: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: Array,\n *     pending: boolean, query: object, perPageDefault: number, error: boolean}}\n */\nGuestsList.defaultProps = {\n  error: false,\n  filterGuestsData: [],\n  getHostsInventoryGuests: helpers.noop,\n  listData: [],\n  pending: false,\n  perPageDefault: 5,\n  query: {},\n  session: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventoryGuests: (id, query) => dispatch(reduxActions.rhsm.getHostsInventoryGuests(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.guestsList.makeGuestsList();\n\nconst ConnectedGuestsList = connect(makeMapStateToProps, mapDispatchToProps)(GuestsList);\n\nexport { ConnectedGuestsList as default, ConnectedGuestsList, GuestsList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    className={(!itemCount && 'hidden') || ''}\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n"],"sourceRoot":""}
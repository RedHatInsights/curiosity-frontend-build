{"version":3,"sources":["components/minHeight/minHeight.js","components/form/select.js","components/inventoryList/inventoryListHelpers.js","components/pagination/paginationHelpers.js","components/inventorySubscriptions/inventorySubscriptions.js","components/bannerMessages/bannerMessages.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardChartTooltip.js","components/graphCard/graphCardChartLegend.js","components/chartArea/chartArea.js","components/toolbar/toolbarFieldGranularity.js","components/graphCard/graphCard.js","components/form/formHelpers.js","components/form/textInput.js","components/toolbar/toolbarFieldDisplayName.js","components/inventoryList/inventoryList.js","components/tabs/tabs.js","components/inventoryTabs/inventoryTab.js","components/inventoryTabs/inventoryTabs.js","components/toolbar/toolbarHelpers.js","components/toolbar/toolbar.js","components/guestsList/guestsList.js","components/pagination/pagination.js"],"names":["MinHeight","containerRef","React","createRef","innerContainerRef","updatedContainerWidth","resizeObserver","helpers","noop","onResizeContainer","updateOnResize","props","clientWidth","current","setMinHeight","this","window","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","children","className","ref","Component","defaultProps","Select","state","isExpanded","options","selected","onSelect","event","titleSelection","id","name","variant","updatedOptions","optionsIndex","findIndex","option","title","SelectVariant","single","forEach","index","updateSelected","filter","opt","map","setState","mockUpdatedOptions","_cloneDeep","mockTarget","value","selectedIndex","type","checkbox","checked","mockEvent","target","currentTarget","persist","onToggle","expanded","formatOptions","prevProps","selectedOptions","_isEqual","_isPlainObject","Object","keys","key","activateOptions","convertedOption","text","textContent","label","includes","find","ariaLabel","isDisabled","isToggleText","placeholder","toggleIcon","pfSelectOptions","length","aria-label","selections","isOpen","placeholderText","btoa","data-value","data-title","generateId","applySortFilters","onSort","query","updatedFilter","hasSort","sortActive","RHSM_API_QUERY_TYPES","SORT","_camelCase","sortDirection","DIRECTION","SORT_DIRECTION_TYPES","DESCENDING","SortByDirection","desc","asc","isSortDefault","sortDefaultInitialDirection","applyWrappableFilters","Array","isArray","transforms","push","wrappable","inventoryListHelpers","parseInventoryFilters","filters","isSortable","assign","isWrappable","parseRowCellsListData","cellData","session","updatedColumnHeaders","updatedCells","allCells","entries","translate","context","headerUpdated","cellUpdated","cell","cellWidth","header","isValidElement","concat","PfCellWidth","obj","columnHeaders","cells","data","calculatePageFromOffset","offset","perPage","paginationHelpers","calculateOffsetFromPage","page","isLastPage","itemCount","Math","ceil","InventorySubscriptions","onColumnSort","updatedDirection","direction","productId","updatedSortColumn","values","SORT_TYPES","ASCENDING","store","dispatch","reduxTypes","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","viewId","onPage","OFFSET","LIMIT","onUpdateInventoryData","getSubscriptionsInventory","filterInventoryData","listData","updatedRows","borders","TableVariant","compact","rows","error","fulfilled","pending","perPageDefault","t","updatedPerPage","updatedOffset","minHeightContentRefreshKey","aria-hidden","isCompact","onPerPage","tableProps","colCount","colWidth","rowCount","renderTable","isFooter","dropDirection","UI_DISABLED_TABLE_SUBSCRIPTIONS","makeMapStateToProps","reduxSelectors","subscriptionsList","makeSubscriptionsList","ConnectedInventorySubscriptions","connect","reduxActions","rhsm","BannerMessages","onUpdateData","getMessageReports","graphTallyQuery","apiQueries","parseRhsmQuery","dateHelpers","getRangedDateTime","startDate","endDate","GRANULARITY","GRANULARITY_TYPES","DAILY","START_DATE","toISOString","END_DATE","appMessages","messages","updatedMessages","message","AlertVariant","info","actionClose","onClose","alerts","renderAlerts","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","appName","UI_DISPLAY_NAME","isInline","component","icon","iconPosition","href","makeAppMessages","ConnectedBannerMessages","getTooltipDate","date","granularity","momentDate","moment","utc","QUARTERLY","format","timestampQuarterFormats","yearShort","add","MONTHLY","timestampMonthFormats","yearLong","WEEKLY","timestampDayFormats","yAxisTickFormatFallback","tick","abs","updatedTick","updatedAbbr","pow","graphCardHelpers","getChartXAxisLabelIncrement","xAxisTickFormat","previousDate","formattedDate","isNewYear","Number","parseInt","year","replace","yAxisTickFormat","locale","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","GraphCardChartTooltip","datum","productLabel","itemsByKey","tempDataFacet","color","test","thresholdStringValue","hasInfinite","y","dataFactsValue","hasData","product","summary","colSpan","dataFacet","backgroundColor","GraphCardChartLegend","onClick","chart","updatedToggle","toggle","graph","SET_GRAPH_LEGEND","legend","dataSets","isToggled","hide","chartId","isThreshold","labelContent","tooltipContent","checkIsToggled","button","Button","onKeyPress","tabIndex","visibility","borderTopColor","Tooltip","content","position","TooltipPosition","top","enableFlip","distance","entryDelay","exitDelay","Fragment","stroke","renderLegendItem","ConnectedGraphCardChartLegend","ChartArea","chartWidth","dataSetsToggle","tooltipRef","onHide","forceUpdate","onRevert","getIsToggled","setResizeObserve","containerElement","ResizeObserver","observe","unobserve","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","x","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","item","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","floored","floor","log10","maxY","chartDomain","chartTooltip","tooltipDataSet","fill","mockDatum","tooltip","cloneElement","v","VictoryVoronoiCursorContainer","createContainer","parsedTooltipData","getTooltipData","globalContainerBounds","globalTooltipBounds","FlyoutComponent","containerBounds","getBoundingClientRect","tooltipBounds","right","xCoordinate","width","htmlContent","applyParsedTooltipData","height","display","xmlns","cursorDimension","labels","labelComponent","voronoiPadding","chartLegend","legendProps","revert","stacked","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","themeColor","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","tooltipComponent","containerComponent","renderTooltip","undefined","chartProps","Chart","duration","ChartAxis","renderChart","ChartStack","renderLegend","bottom","left","toolbarFieldOptions","FIELD_TYPES","ToolbarFieldGranularity","updatedValue","useSelector","view","SET_QUERY_RHSM_TYPES","GraphCard","onUpdateGraphData","getGraphReportsCapacity","graphGranularity","getQueryGranularity","filterGraphData","graphData","chartAreaProps","filtered","tempFiltered","onLoad","chartColorGreenDark","filteredGraphData","JSON","stringify","cardTitle","Card","CardHeader","CardTitle","Title","headingLevel","size","CardActions","CardBody","UI_DISABLED_GRAPH","graphCard","makeGraphCard","ConnectedGraphCard","createMockEvent","persistEvent","keyCode","TextInput","onKeyUp","onClear","clonedEvent","onMouseUp","onChange","isReadOnly","updatedName","updatedId","ToolbarFieldDisplayName","currentValue","inventoryHostsQuery","DISPLAY_NAME","onSubmit","submitValue","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","trim","debounced","_debounce","InputGroup","iconVariant","maxLength","InventoryList","getHostsInventory","filterGuestsData","settings","guestsId","subscriptionManagerId","hasGuests","numberOfGuests","expandedContent","Bullseye","CardHeaderMain","CardFooter","TableToolbar","UI_DISABLED_TABLE_HOSTS","inventoryList","makeInventoryList","ConnectedInventoryList","Tabs","updatedActiveTab","updatedTabs","onTab","setTabData","tabs","_isEqualWith","valueA","valueB","toString","activeTab","defaultActiveTab","active","Tab","eventKey","TabTitleText","hasOverflowScroll","activeKey","mountOnEnter","unmountOnExit","inset","default","md","Grid","GridItem","span","renderTabs","InventoryTab","InventoryTabs","inventory","SET_INVENTORY_TAB","updatedChildren","Children","toArray","count","UI_DISABLED_TABLE","ConnectedInventoryTabs","toolbarHelpers","optionsType","SLA","SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","USAGE","USAGE_TYPES","DEVELOPMENT","DISASTER","PRODUCTION","UNSPECIFIED","Toolbar","hardFilterReset","dispatchActions","toolbar","SET_ACTIVE_FILTERS","activeFilters","Set","SET_QUERY_CLEAR","clearFilters","SET_FILTER_TYPE","currentFilter","setDispatch","onClearFilter","categoryTitle","categoryValue","updatedActiveFilters","updatedCurrentFilter","onCategorySelect","field","actions","resetPage","updatedActions","SET_QUERY_RESET_INVENTORY_LIST","getCurrentFilter","optionsSelected","filterOptions","setSelectFilter","ToolbarFilter","chips","deleteChip","categoryName","showToolbarItem","categoryOptions","categoryOptionsSelected","collapseListedFiltersBreakpoint","clearAllFilters","clearFiltersButtonText","ToolbarContent","ToolbarToggleGroup","breakpoint","ToolbarGroup","ToolbarItem","renderSelectFilter","filterType","UI_DISABLED_TOOLBAR","ConnectedToolbar","initialQuery","GuestsList","currentPage","limit","previousData","onUpdateGuestsData","getHostsInventoryGuests","updatedQuery","inventoryGuestsQuery","onScroll","scrollHeight","scrollTop","newPage","updatedData","prevState","scrollLoader","updatedHeight","renderLoader","guestsList","makeGuestsList","ConnectedGuestsList","Pagination","onSetPage","onPerPageSelect"],"mappings":"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","file":"static/js/1.f38cc3fc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * FixMe: Patternfly React select generates a random ID for select options.\n * On the surface this seems like a legitimate update until you remember unit tests.\n * Quite a few apps use test snapshots causing certain rendered select snapshots to\n * fail consistently. Appears this may have been part of the \"favorites\" update.\n * The solution centers around updating the  \"GenerateId helper\" and detecting a\n * test, dev, or prod environment instead of generating a random string every time.\n *\n * This issue also has the side-effect of making the attribute inadvertently\n * \"required\" anywhere it's used in an effort to squash it.\n */\n/**\n * A wrapper for Patternfly Select. Provides restructured event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @fires onToggle\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @event onToggle\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected =\n          activateOptions.includes(convertedOption.value) || activateOptions.includes(convertedOption.title);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, isToggleText, placeholder, toggleIcon, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select${(!isToggleText && '__no-toggle-text') || ''} ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isOpen={isExpanded}\n        toggleIcon={toggleIcon}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(`${option.title}-${option.value}`)}\n              id={window.btoa(`${option.title}-${option.value}`)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{isToggleText: boolean, toggleIcon: (Node|Function), name: string, options: (Array|object),\n *     selectedOptions: (number|string|Array), variant: (object|string), className: string,\n *     id: string, isDisabled: boolean, placeholder: string, ariaLabel: string,\n *     onSelect: Function}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.string,\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{isToggleText: boolean, toggleIcon: (Node|Function), name: string, options: (Array|object),\n *     selectedOptions: (number|string|Array), variant: (object|string), className: string,\n *     id: string, isDisabled: boolean, placeholder: string, ariaLabel: string,\n *     onSelect: Function}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  isToggleText: true,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  selectedOptions: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Apply sort filter to filters.\n *\n * @param {object} params\n * @param {object} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {object}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} }) => {\n  const { id } = filter;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === id\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  if (\n    hasSort &&\n    !updatedFilter.sortActive &&\n    !query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    updatedFilter.isSortDefault === true\n  ) {\n    updatedFilter.sortActive = true;\n\n    if (updatedFilter.sortDefaultInitialDirection) {\n      updatedFilter.sortDirection = updatedFilter.sortDefaultInitialDirection;\n    }\n  }\n\n  return updatedFilter;\n};\n\nconst applyWrappableFilters = ({ filter = {} }) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Apply additional properties to filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {Array}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} }) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.cellData\n * @param {object} params.session\n * @returns {{columnHeaders: Array, cells: Array, data: object}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, session = {} }) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value]) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value);\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    filters.forEach(({ id, cell, cellWidth, header, onSort, sortActive, sortDirection, transforms }) => {\n      let headerUpdated;\n      let cellUpdated;\n\n      if (allCells[id]) {\n        headerUpdated = allCells[id]?.title ?? id;\n        cellUpdated = allCells[id]?.value ?? '';\n      }\n\n      // set table header cell filter params\n      if (header) {\n        headerUpdated = (typeof header === 'function' && header({ ...allCells })) || header;\n      }\n\n      if (\n        typeof headerUpdated === 'string' ||\n        typeof headerUpdated === 'number' ||\n        React.isValidElement(headerUpdated)\n      ) {\n        headerUpdated = {\n          title: headerUpdated\n        };\n      }\n\n      headerUpdated.transforms = [];\n\n      if (Array.isArray(transforms)) {\n        headerUpdated.transforms = headerUpdated.transforms.concat([...transforms]);\n      }\n\n      if (typeof cellWidth === 'number') {\n        headerUpdated.transforms.push(PfCellWidth(cellWidth));\n      }\n\n      if (typeof onSort === 'function') {\n        headerUpdated = {\n          ...headerUpdated,\n          onSort: obj => onSort({ ...allCells }, { ...obj, id }),\n          sortActive,\n          sortDirection\n        };\n      }\n\n      // set table row cell filter params\n      if (cell) {\n        cellUpdated = (typeof cell === 'function' && cell({ ...allCells }, { ...session })) || cell;\n      }\n\n      if (typeof cellUpdated === 'string' || typeof cellUpdated === 'number' || React.isValidElement(cellUpdated)) {\n        cellUpdated = {\n          title: cellUpdated\n        };\n      }\n\n      updatedColumnHeaders.push(headerUpdated);\n      updatedCells.push(cellUpdated);\n    });\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryListHelpers = {\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryListHelpers as default,\n  inventoryListHelpers,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A subscriptions system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventorySubscriptions extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getSubscriptionsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getSubscriptionsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterInventoryData, listData, query, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n            <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter\n            className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n            aria-hidden={error || !itemCount || false}\n          >\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, listData: Array, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, error: boolean, getSubscriptionsInventory: Function, itemCount: number,\n *     t: Function, filterInventoryData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventorySubscriptions.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getSubscriptionsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, filterInventoryData: Array, listData: Array, session: object, pending: boolean,\n *     fulfilled: boolean, perPageDefault: number, isDisabled: boolean, error: boolean,\n *     getSubscriptionsInventory: Function, itemCount: number}}\n */\nInventorySubscriptions.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterInventoryData: [],\n  getSubscriptionsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getSubscriptionsInventory: (id, query) => dispatch(reduxActions.rhsm.getSubscriptionsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.subscriptionsList.makeSubscriptionsList();\n\nconst ConnectedInventorySubscriptions = connect(makeMapStateToProps, mapDispatchToProps)(InventorySubscriptions);\n\nexport { ConnectedInventorySubscriptions as default, ConnectedInventorySubscriptions, InventorySubscriptions };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertActionCloseButton, AlertVariant, Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport _isEqual from 'lodash/isEqual';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { dateHelpers, helpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Render banner messages.\n *\n * @augments React.Component\n */\nclass BannerMessages extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.onUpdateData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateData = () => {\n    const { getMessageReports, productId, query } = this.props;\n    const { graphTallyQuery } = apiQueries.parseRhsmQuery(query);\n\n    if (productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime('CURRENT');\n      const updatedGraphQuery = {\n        ...graphTallyQuery,\n        [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY,\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString()\n      };\n\n      getMessageReports(productId, updatedGraphQuery);\n    }\n  };\n\n  /**\n   * Apply messages' configuration to alerts.\n   *\n   * @returns {Node}\n   */\n  renderAlerts() {\n    const { state } = this;\n    const { appMessages, messages } = this.props;\n    const updatedMessages = [];\n\n    if (messages.length) {\n      Object.entries(appMessages).forEach(([key, value]) => {\n        if (state[key] !== true && value === true) {\n          const message = messages.find(({ id }) => id === key);\n\n          if (message) {\n            updatedMessages.push({\n              key,\n              ...message\n            });\n          }\n        }\n      });\n    }\n\n    return updatedMessages.map(({ key, message, title, variant = AlertVariant.info }) => {\n      const actionClose = <AlertActionCloseButton onClose={() => this.setState({ [key]: true })} />;\n\n      return (\n        <Alert actionClose={actionClose} key={key} title={title} variant={variant}>\n          {message}\n        </Alert>\n      );\n    });\n  }\n\n  /**\n   * Render a banner messages container.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const alerts = this.renderAlerts();\n\n    if (alerts.length) {\n      return <div className=\"curiosity-banner-messages\">{alerts}</div>;\n    }\n\n    return null;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{appMessages: object, productId: string, getMessageReports: Function, query: object, messages: Array}}\n */\nBannerMessages.propTypes = {\n  appMessages: PropTypes.object.isRequired,\n  getMessageReports: PropTypes.func,\n  query: PropTypes.object,\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.node.isRequired,\n      message: PropTypes.node.isRequired,\n      variant: PropTypes.oneOf([...Object.values(AlertVariant)])\n    })\n  ),\n  productId: PropTypes.string.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{getMessageReports: Function, query: object, messages: Array}}\n */\nBannerMessages.defaultProps = {\n  getMessageReports: helpers.noop,\n  query: {},\n  messages: [\n    {\n      id: 'cloudigradeMismatch',\n      title: translate('curiosity-banner.dataMismatchTitle'),\n      message: translate(\n        'curiosity-banner.dataMismatchMessage',\n        {\n          context: helpers.UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS !== '' && 'cloudigradeMismatch',\n          appName: helpers.UI_DISPLAY_NAME\n        },\n        [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS}\n          />\n        ]\n      )\n    }\n  ]\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getMessageReports: (id, query) => dispatch(reduxActions.rhsm.getMessageReports(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.appMessages.makeAppMessages();\n\nconst ConnectedBannerMessages = connect(makeMapStateToProps, mapDispatchToProps)(BannerMessages);\n\nexport { ConnectedBannerMessages as default, ConnectedBannerMessages, BannerMessages };\n","import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, productLabel, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      header = getTooltipDate({\n        date: itemsByKey[key]?.data.date,\n        granularity\n      });\n    }\n\n    const tempDataFacet = {\n      color: itemsByKey[key]?.color\n    };\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key]?.data.hasInfinite && t('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel'));\n\n      tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n      tempDataFacet.value = thresholdStringValue;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n      tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product: productLabel });\n      tempDataFacet.value = dataFactsValue;\n    }\n\n    data.push(tempDataFacet);\n  });\n\n  return (\n    <div className=\"victory-tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  <div\n                    aria-hidden\n                    className=\"legend-icon victory-legend-icon\"\n                    style={{\n                      backgroundColor: dataFacet.color || 'transparent'\n                    }}\n                  />\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, productLabel: string, t: translate}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  productLabel: '',\n  t: translate\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { connect, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @param {string} options.chartId\n   * @param {string} options.color\n   * @param {boolean} options.isDisabled\n   * @param {boolean} options.isThreshold\n   * @param {string} options.labelContent\n   * @param {string} options.tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"victory-legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: color\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: color\n              }}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *  - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, productLabel, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}Label`, `curiosity-graph.thresholdLabel`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t([`curiosity-graph.${id}Label`, `curiosity-graph.noLabel`], {\n              product: productLabel,\n              context: productLabel\n            });\n\n          const tooltipContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}LegendTooltip`, `curiosity-graph.thresholdLegendTooltip`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t(`curiosity-graph.${id}LegendTooltip`, { product: productLabel, context: productLabel });\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold,\n            tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, legend: object, chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {dataSets: Array}, productLabel: string, viewId: string, t: translate, legend: object,\n *     chart: {hide: Function, toggle: Function, isToggled: Function}}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connect(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer } from 'victory-create-container';\nimport {\n  Chart,\n  ChartAxis,\n  ChartStack,\n  ChartThreshold,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: chart redraw issues, possibly related by...\n * - resize setup,\n * - internal caching of the graph, and\n * - restructuring how the query props are passed through product view\n */\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  dataSetsToggle = {};\n\n  resizeObserver = helpers.noop;\n\n  containerRef = React.createRef();\n\n  tooltipRef = React.createRef();\n\n  componentDidMount() {\n    this.setResizeObserve();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * Consumer exposed, hides chart layer.\n   *\n   * @event onHide\n   * @param {string} id\n   */\n  onHide = id => {\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: true };\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns all chart layers back on.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    this.dataSetsToggle = {};\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns chart layer on/off.\n   *\n   * @event onToggle\n   * @param {string} id\n   * @returns {boolean}\n   */\n  onToggle = id => {\n    const updatedToggle = !this.dataSetsToggle[id];\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: updatedToggle };\n    this.forceUpdate();\n\n    return updatedToggle;\n  };\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { chartWidth } = this.state;\n    const { clientWidth = 0 } = this.containerRef.current || {};\n\n    if (clientWidth !== chartWidth) {\n      this.setState({ chartWidth: clientWidth });\n    }\n  };\n\n  /**\n   * Consumer exposed, determine if chart layer on/off.\n   * Note: Using \"setState\" as related to this exposed check gives the appearance of a race condition.\n   * Using a class property with forceUpdate to bypass.\n   *\n   * @param {string} id\n   * @returns {boolean}\n   */\n  getIsToggled = id => this.dataSetsToggle[id] || false;\n\n  /**\n   * Set ResizeObserver for scenarios where the window.resize event doesn't fire.\n   */\n  setResizeObserve() {\n    const containerElement = this.containerRef.current;\n    const { ResizeObserver } = window;\n\n    if (containerElement && ResizeObserver) {\n      const resizeObserver = new ResizeObserver(this.onResizeContainer);\n      resizeObserver.observe(containerElement);\n      this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n    } else {\n      this.onResizeContainer();\n      window.addEventListener('resize', this.onResizeContainer);\n      this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n    }\n  }\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { dataSetsToggle } = this;\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply data set to custom tooltips.\n   *\n   * @returns {Array}\n   */\n  getTooltipData() {\n    const { dataSetsToggle } = this;\n    const { dataSets, chartTooltip } = this.props;\n    let tooltipDataSet = [];\n\n    if (chartTooltip && dataSets && dataSets[0] && dataSets[0].data) {\n      tooltipDataSet = dataSets[0].data.map((dataSet, index) => {\n        const itemsByKey = {};\n\n        dataSets.forEach(data => {\n          if (!dataSetsToggle[data.id] && data.data && data.data[index]) {\n            itemsByKey[data.id] = {\n              color: data.stroke || data.fill || data.color || '',\n              data: _cloneDeep(data.data[index])\n            };\n          }\n        });\n\n        const mockDatum = {\n          datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey, dataSets: _cloneDeep(dataSets) }\n        };\n\n        return {\n          x: dataSet.x,\n          y: null,\n          itemsByKey,\n          tooltip:\n            (React.isValidElement(chartTooltip) && React.cloneElement(chartTooltip, { ...mockDatum })) ||\n            chartTooltip({ ...mockDatum })\n        };\n      });\n    }\n\n    return tooltipDataSet;\n  }\n\n  /**\n   * ToDo: monitor Victory charts release version increment around Voronoi container attributes.\n   * Future updates could lead to additional unexpected behavior. Victory charts released a patch/fix\n   * around attribute behavior for Voronoi containers. The behavior was already \"unexpected\" in that there appears\n   * to be a need to provide the \"label\" attribute when using the \"labelComponent\" attribute, even if \"label\" is\n   * just a pass-through. Providing `label={() => ''}` was a work-around, that is now `label={obj => obj}`. See\n   * - https://github.com/FormidableLabs/victory/blob/master/CHANGELOG.md#3436-2020-05-18\n   * - https://github.com/FormidableLabs/victory/pull/1581\n   */\n  /**\n   * FixMe: Victory charts voronoi containers throw inaccurate coordinates on large graph widths\n   * Issue is \"patched\" by removing the \"x\" dimension attribute for voronoi.\n   * - https://github.com/RedHatInsights/curiosity-frontend/issues/318\n   */\n  /**\n   * Return a chart/graph tooltip Victory container component to allow custom HTML tooltips.\n   *\n   * @returns {Node}\n   */\n  renderTooltip() {\n    const { dataSetsToggle } = this;\n    const { chartTooltip, dataSets } = this.props;\n\n    if (!chartTooltip || Object.values(dataSetsToggle).filter(v => v === true).length === dataSets.length) {\n      return null;\n    }\n\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const parsedTooltipData = this.getTooltipData();\n    let globalContainerBounds = {};\n    let globalTooltipBounds = {};\n\n    const applyParsedTooltipData = ({ datum }) => {\n      const t = parsedTooltipData.find(v => v.x === datum.x) || {};\n      return t?.tooltip || '';\n    };\n\n    const FlyoutComponent = obj => {\n      const containerRef = this.containerRef.current;\n      const tooltipRef = this.tooltipRef.current;\n      const containerBounds = (containerRef && containerRef.getBoundingClientRect()) || {};\n      const tooltipBounds = (tooltipRef && tooltipRef.getBoundingClientRect()) || {};\n\n      if (containerBounds.right) {\n        globalContainerBounds = containerBounds;\n      }\n\n      if (tooltipBounds.right) {\n        globalTooltipBounds = tooltipBounds;\n      }\n\n      let xCoordinate = obj.x + 10;\n\n      if (\n        globalContainerBounds.right < globalTooltipBounds.right ||\n        obj.x + globalTooltipBounds.width > globalContainerBounds.right / 2\n      ) {\n        xCoordinate = obj.x - 10 - globalTooltipBounds.width;\n      }\n\n      const htmlContent = applyParsedTooltipData({ ...obj });\n\n      if (htmlContent) {\n        return (\n          <g>\n            <foreignObject x={xCoordinate} y={obj.y / 2.2} width=\"100%\" height=\"100%\">\n              <div ref={this.tooltipRef} style={{ display: 'inline-block' }} xmlns=\"http://www.w3.org/1999/xhtml\">\n                {htmlContent}\n              </div>\n            </foreignObject>\n          </g>\n        );\n      }\n\n      return <g />;\n    };\n\n    return (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={<FlyoutComponent />}\n        voronoiPadding={60}\n      />\n    );\n  }\n\n  /**\n   * Return a custom chart/graph legend component.\n   *\n   * @returns {Node}\n   */\n  renderLegend() {\n    const { chartLegend, dataSets } = this.props;\n\n    if (!chartLegend) {\n      return null;\n    }\n\n    const legendProps = {\n      datum: { dataSets: _cloneDeep(dataSets) },\n      chart: {\n        hide: this.onHide,\n        revert: this.onRevert,\n        toggle: this.onToggle,\n        isToggled: this.getIsToggled\n      }\n    };\n\n    return (\n      (React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n      chartLegend({ ...legendProps })\n    );\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const { dataSetsToggle } = this;\n    const { dataSets } = this.props;\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { chartLegend, padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const tooltipComponent = { containerComponent: (maxY >= 0 && this.renderTooltip()) || undefined };\n    const chartProps = { padding, ...chartDomain, ...tooltipComponent };\n\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n        {chartLegend && <div className=\"curiosity-chartarea-description victory-legend\">{this.renderLegend()}</div>}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartLegend: Node|Function, chartTooltip: Node|Function, padding, xAxisTickFormat: Function,\n *     themeColor: string, yAxisTickFormat: Function, domain: object|Array, dataSets: object,\n *     xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartLegend: null, chartTooltip: null, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: null, themeColor: string, yAxisTickFormat: null, domain: object,\n *     dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { reduxTypes, store, useSelector } from '../../redux';\nimport { Select } from '../form/select';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as FIELD_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Select field options.\n *\n * @type {{title: (string|Node), value: string, selected: boolean}[]}\n */\nconst toolbarFieldOptions = Object.values(FIELD_TYPES).map(type => ({\n  title: translate('curiosity-toolbar.granularity', { context: type }),\n  value: type,\n  selected: false\n}));\n\n/**\n * Display a granularity field with options.\n *\n * @fires onSelect\n * @param {object} props\n * @param {Array} props.options\n * @param {Function} props.t\n * @param {string} props.value\n * @param {string} props.viewId\n * @returns {Node}\n */\nconst ToolbarFieldGranularity = ({ options, t, value, viewId }) => {\n  const updatedValue = useSelector(\n    ({ view }) => view.graphTallyQuery?.[RHSM_API_QUERY_TYPES.GRANULARITY]?.[viewId],\n    value\n  );\n\n  const updatedOptions = options.map(option => ({ ...option, selected: option.value === updatedValue }));\n\n  /**\n   * On select, dispatch type.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @returns {void}\n   */\n  const onSelect = event =>\n    store.dispatch({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n      viewId,\n      [RHSM_API_QUERY_TYPES.GRANULARITY]: event.value\n    });\n\n  return (\n    <Select\n      aria-label={t('curiosity-toolbar.placeholder', { context: 'granularity' })}\n      onSelect={onSelect}\n      options={updatedOptions}\n      selectedOptions={updatedValue}\n      placeholder={t('curiosity-toolbar.placeholder', { context: 'granularity' })}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{viewId: string, t: Function, options: Array, value: string}}\n */\nToolbarFieldGranularity.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      value: PropTypes.any,\n      selected: PropTypes.bool\n    })\n  ),\n  t: PropTypes.func,\n  value: PropTypes.oneOf([...Object.values(FIELD_TYPES)]),\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, options: Array, value: string}}\n */\nToolbarFieldGranularity.defaultProps = {\n  options: toolbarFieldOptions,\n  t: translate,\n  value: FIELD_TYPES.DAILY,\n  viewId: 'toolbarFieldGranularity'\n};\n\nexport { ToolbarFieldGranularity as default, ToolbarFieldGranularity, toolbarFieldOptions };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport _isEqual from 'lodash/isEqual';\nimport { connect, reduxActions, reduxSelectors } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { ChartArea } from '../chartArea/chartArea';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { ToolbarFieldGranularity } from '../toolbar/toolbarFieldGranularity';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const graphQuery = {\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString(),\n        ...query\n      };\n\n      getGraphReportsCapacity(productId, graphQuery);\n    }\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, productLabel, query, viewId } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: graphGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(graphGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          strokeWidth: 2,\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 3;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <ChartArea\n        key={`chart_${JSON.stringify(query)}`}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend chart={chart} datum={datum} productLabel={productLabel} viewId={viewId} />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={graphGranularity} productLabel={productLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * ToDo: Evaluate applying a minHeight attr to the MinHeight component graphCard setup\n   * Appears there may be a minor page shift when compared to the prior hard-set min-height\n   * of 410px\n   */\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, isDisabled, pending, viewId } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const graphGranularity = this.getQueryGranularity();\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <MinHeight key=\"headerMinHeight\">\n          <CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                {cardTitle}\n              </Title>\n            </CardTitle>\n            <CardActions className={(error && 'blur') || ''}>\n              {children}\n              <ToolbarFieldGranularity viewId={viewId} value={graphGranularity} />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key=\"bodyMinHeight\">\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && <Loader variant=\"graph\" />}\n              {!pending && this.renderChart()}\n            </div>\n          </CardBody>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productLabel: string, productId: string, pending: boolean, error: boolean, query: object,\n *     cardTitle: string, filterGraphData: Array, getGraphReportsCapacity: Function,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productLabel: string, viewId: string, t: translate,\n *     children: Node, pending: boolean, graphData: object, isDisabled: boolean, error: boolean,\n *     cardTitle: string, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import { helpers } from '../../common/helpers';\n\n/**\n * Create a consistent mock event object.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget, name, id: *, persist: Function, value, target}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput as PfTextInput } from '@patternfly/react-core';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly TextInput. Provides restructured event data,\n * and an onClear event for the search type.\n *\n * @augments React.Component\n * @fires onKeyUp\n * @fires onMouseUp\n * @fires onChange\n */\nclass TextInput extends React.Component {\n  state = {\n    updatedValue: null\n  };\n\n  /**\n   * onKeyUp event, provide additional functionality for onClear event.\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  onKeyUp = event => {\n    const { onClear, onKeyUp, type } = this.props;\n    const { currentTarget, keyCode } = event;\n    const clonedEvent = { ...event };\n\n    onKeyUp(createMockEvent(event, true));\n\n    if (keyCode === 27) {\n      if (type === 'search' && currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      } else {\n        this.setState({ updatedValue: '' }, () => {\n          onClear(\n            createMockEvent({ ...clonedEvent, ...{ currentTarget: { ...clonedEvent.currentTarget, value: '' } } })\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * onMouseUp event, provide additional functionality for onClear event.\n   *\n   * @event onMouseUp\n   * @param {object} event\n   */\n  onMouseUp = event => {\n    const { onClear, onMouseUp, type } = this.props;\n    const { currentTarget } = event;\n    const clonedEvent = { ...event };\n\n    onMouseUp(createMockEvent(event, true));\n\n    if (type !== 'search' || currentTarget.value === '') {\n      return;\n    }\n\n    setTimeout(() => {\n      if (currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      }\n    });\n  };\n\n  /**\n   * onChange event, provide restructured event.\n   *\n   * @param {string} value\n   * @param {object} event\n   */\n  onChange = (value, event) => {\n    const { onChange } = this.props;\n    const clonedEvent = { ...event };\n\n    this.setState({ updatedValue: value }, () => {\n      onChange(createMockEvent(clonedEvent));\n    });\n  };\n\n  /**\n   * Render a text input.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedValue } = this.state;\n    const {\n      className,\n      id,\n      isDisabled,\n      name,\n      onChange,\n      onClear,\n      onKeyUp,\n      onMouseUp,\n      isReadOnly,\n      type,\n      value,\n      ...props\n    } = this.props;\n    const updatedName = name || helpers.generateId();\n    const updatedId = id || updatedName;\n\n    return (\n      <PfTextInput\n        id={updatedId}\n        name={updatedName}\n        className={`curiosity-text-input ${className}`}\n        isDisabled={isDisabled || false}\n        onChange={this.onChange}\n        onKeyUp={this.onKeyUp}\n        onMouseUp={this.onMouseUp}\n        isReadOnly={isReadOnly || false}\n        type={type}\n        value={updatedValue ?? value ?? ''}\n        {...props}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.defaultProps = {\n  className: '',\n  id: null,\n  isDisabled: false,\n  isReadOnly: false,\n  name: null,\n  onChange: helpers.noop,\n  onClear: helpers.noop,\n  onKeyUp: helpers.noop,\n  onMouseUp: helpers.noop,\n  type: 'text',\n  value: ''\n};\n\nexport { TextInput as default, TextInput };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup } from '@patternfly/react-core';\nimport _debounce from 'lodash/debounce';\nimport { reduxTypes, store, useSelector } from '../../redux';\nimport { TextInput } from '../form/textInput';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: evaluate the debounce milliseconds, currently based off platforms default 800 ms\n */\n/**\n * Display a display name input field for search.\n *\n * @fires onSubmit\n * @fires onClear\n * @fires onKeyUp\n * @param {object} props\n * @param {string} props.value\n * @param {Function} props.t\n * @param {string} props.viewId\n * @returns {Node}\n */\nconst ToolbarFieldDisplayName = ({ value, t, viewId }) => {\n  const currentValue = useSelector(\n    ({ view }) => view.inventoryHostsQuery?.[viewId]?.[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n    value\n  );\n\n  /**\n   * On submit, dispatch type.\n   *\n   * @event onSubmit\n   * @param {string} submitValue\n   * @returns {void}\n   */\n  const onSubmit = submitValue =>\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: submitValue?.trim() || null\n      }\n    ]);\n\n  /**\n   * On clear, dispatch type.\n   *\n   * @event onClear\n   * @returns {void}\n   */\n  const onClear = () => {\n    if (currentValue === '' || !currentValue) {\n      return;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: null\n      }\n    ]);\n  };\n\n  /**\n   * Set up submit debounce event to allow for bypass.\n   */\n  const debounced = _debounce(onSubmit, 700);\n\n  /**\n   * On enter submit value, on type submit value, and on esc ignore (clear value at component level).\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 13:\n        onSubmit(event.value);\n        break;\n      case 27:\n        break;\n      default:\n        debounced(event.value);\n        break;\n    }\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        aria-label={t('curiosity-toolbar.placeholder', { context: 'displayName' })}\n        className=\"curiosity-input__display-name\"\n        iconVariant=\"search\"\n        maxLength={255}\n        onClear={onClear}\n        onKeyUp={onKeyUp}\n        value={currentValue}\n        placeholder={t('curiosity-toolbar.placeholder', { context: 'displayName' })}\n      />\n    </InputGroup>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{viewId: string, t: Function, value: string}}\n */\nToolbarFieldDisplayName.propTypes = {\n  t: PropTypes.func,\n  value: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, value: string}}\n */\nToolbarFieldDisplayName.defaultProps = {\n  t: translate,\n  value: null,\n  viewId: 'toolbarFieldDisplayName'\n};\n\nexport { ToolbarFieldDisplayName as default, ToolbarFieldDisplayName };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader, CardHeaderMain } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport GuestsList from '../guestsList/guestsList';\nimport { inventoryListHelpers } from './inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { ToolbarFieldDisplayName } from '../toolbar/toolbarFieldDisplayName';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A hosts system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventoryList extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getHostsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getHostsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterGuestsData, filterInventoryData, listData, query, session, settings } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      const guestsId = cellData?.subscriptionManagerId;\n      let hasGuests = cellData?.numberOfGuests > 0 && guestsId;\n\n      // Apply hasGuests callback, return boolean\n      if (typeof settings?.hasGuests === 'function') {\n        hasGuests = settings.hasGuests({ ...cellData }, { ...session });\n      }\n\n      return {\n        cells,\n        expandedContent:\n          (hasGuests && (\n            <GuestsList\n              key={guestsId}\n              filterGuestsData={filterGuestsData}\n              numberOfGuests={cellData?.numberOfGuests}\n              id={guestsId}\n              query={query}\n            />\n          )) ||\n          undefined\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t,\n      viewId\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n            <CardHeaderMain>\n              <ToolbarFieldDisplayName viewId={viewId} />\n            </CardHeaderMain>\n            <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter\n            className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n            aria-hidden={error || !itemCount || false}\n          >\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{settings:object, productId: string, listData: Array, session: object, pending: boolean,\n *     query: object, fulfilled: boolean, getHostsInventory: Function, error: boolean,\n *     itemCount: number, viewId: string, t: Function, filterInventoryData: Array, filterGuestsData: Array,\n *     perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterGuestsData: PropTypes.array,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  settings: PropTypes.shape({\n    hasGuests: PropTypes.func\n  }),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{settings: object, listData: Array, session: object, pending: boolean, fulfilled: boolean,\n *     getHostsInventory: Function, error: boolean, itemCount: number, viewId: string, t: translate,\n *     filterInventoryData: Array, filterGuestsData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterGuestsData: [],\n  filterInventoryData: [],\n  getHostsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_HOSTS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  settings: {},\n  t: translate,\n  viewId: 'inventoryList'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventory: (id, query) => dispatch(reduxActions.rhsm.getHostsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.inventoryList.makeInventoryList();\n\nconst ConnectedInventoryList = connect(makeMapStateToProps, mapDispatchToProps)(InventoryList);\n\nexport { ConnectedInventoryList as default, ConnectedInventoryList, InventoryList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs as PfTabs, Tab, TabTitleText, Grid, GridItem } from '@patternfly/react-core';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: PF tabs misinterprets \"isElementInView\" when tab title nodes are loaded dynamically\n * It appears the use of isElementInView within PF tabs is trying to be predicative in using\n * \"getBoundingClientRect\" but produces questionable results in scenarios where content is\n * async created. isElementInView assumes some form of the content will always be there\n * instead of scenarios where someone tries to dynamically apply components. It may be good to\n * review using a window.setTimeout(() => handleScrollButtons()) in componentDidMount.\n *\n * Our temporary solution is to simply hide the buttons with a manual set flag affecting the\n * CSS class. This will most likely cause long-term issues.\n */\n/**\n * ToDo: Insights frontend components uses a custom tabs layout, investigate related CSS classes\n * Originally we applied the CSS classes, but they appeared to provide nothing. Since Insights\n * rolled its own tabs we're hesitant to apply said classes without understanding what they provide.\n */\n/**\n * A set of tabs.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass Tabs extends React.Component {\n  state = {\n    updatedActiveTab: null,\n    updatedTabs: null\n  };\n\n  componentDidMount() {\n    const { updatedTabs } = this.state;\n\n    if (updatedTabs === null) {\n      this.setTabData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tabs } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (!_isEqualWith(prevProps.tabs, tabs, customizer)) {\n      this.setTabData();\n    }\n  }\n\n  /**\n   * On tab selected\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {number} params.index\n   */\n  onTab = ({ index }) => {\n    const { onTab } = this.props;\n\n    this.setState(\n      {\n        updatedActiveTab: index\n      },\n      () => onTab({ index })\n    );\n  };\n\n  /**\n   * Convert tab objects into the required PF Tab format.\n   */\n  setTabData() {\n    const { activeTab, defaultActiveTab, tabs } = this.props;\n    let updatedActiveTab = defaultActiveTab;\n\n    const updatedTabs = tabs.map(({ active, content, title }, index) => {\n      updatedActiveTab = active ? index : updatedActiveTab;\n\n      return (\n        <Tab key={title} eventKey={index} title={<TabTitleText>{title}</TabTitleText>}>\n          {content}\n        </Tab>\n      );\n    });\n\n    if (typeof activeTab === 'number') {\n      updatedActiveTab = activeTab;\n    }\n\n    this.setState({\n      updatedActiveTab,\n      updatedTabs\n    });\n  }\n\n  /**\n   * Apply props to tabs.\n   *\n   * @returns {Node}\n   */\n  renderTabs() {\n    const { updatedActiveTab, updatedTabs } = this.state;\n    const { className, hasOverflowScroll } = this.props;\n\n    return (\n      <PfTabs\n        className={`curiosity-tabs${(!hasOverflowScroll && '__no-scroll') || ''} ${className || ''}`}\n        activeKey={updatedActiveTab}\n        onSelect={(event, index) => this.onTab({ event, index })}\n        mountOnEnter\n        unmountOnExit\n        inset={{\n          default: 'insetNone',\n          md: 'insetLg'\n        }}\n      >\n        {updatedTabs}\n      </PfTabs>\n    );\n  }\n\n  /**\n   * Render tabs.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"curiosity-tabs-container\">\n        <GridItem span={12}>{this.renderTabs()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.propTypes = {\n  activeTab: PropTypes.number,\n  className: PropTypes.string,\n  defaultActiveTab: PropTypes.number,\n  hasOverflowScroll: PropTypes.bool,\n  onTab: PropTypes.func,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      content: PropTypes.node.isRequired,\n      title: PropTypes.node.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.defaultProps = {\n  activeTab: null,\n  className: '',\n  defaultActiveTab: 0,\n  hasOverflowScroll: false,\n  onTab: helpers.noop,\n  tabs: []\n};\n\nexport { Tabs as default, Tabs };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * A tab pass-through component for passing props to InventoryTabs.\n *\n * @param {object} props\n * @param {boolean} props.active\n * @param {Node} props.children\n * @param {string} props.title\n * @returns {Node}\n */\n// eslint-disable-next-line no-unused-vars\nconst InventoryTab = ({ active, children, title }) => <React.Fragment>{children}</React.Fragment>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nInventoryTab.propTypes = {\n  children: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  title: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nInventoryTab.defaultProps = {\n  active: false\n};\n\nexport { InventoryTab as default, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { Tabs } from '../tabs/tabs';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { InventoryTab } from './inventoryTab';\n\n/**\n * A system inventory tabs component.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass InventoryTabs extends React.Component {\n  /**\n   * On tab update state.\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {string} params.index tab index\n   */\n  onTab = ({ index }) => {\n    const { productId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.inventory.SET_INVENTORY_TAB,\n      tabs: {\n        [productId]: index\n      }\n    });\n  };\n\n  /**\n   * Render inventory tabs using Inventory tab passed props only. A parallel outcome can be\n   * achieved by passing an array of objects through a prop.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { activeTab, children, defaultActiveTab, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const updatedChildren = React.Children.toArray(children).map(({ props = {} }) => ({\n      active: props.active || false,\n      content: props.children,\n      title: props.title\n    }));\n\n    return (\n      <React.Fragment>\n        <Title headingLevel=\"h2\" className=\"sr-only\">\n          {t('curiosity-inventory.tabHeading', { count: updatedChildren.length })}\n        </Title>\n        <Tabs activeTab={activeTab} defaultActiveTab={defaultActiveTab} onTab={this.onTab} tabs={updatedChildren} />\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, t: Function, children: Node, defaultActiveTab: number, isDisabled: boolean,\n *     activeTab: number}}\n */\nInventoryTabs.propTypes = {\n  activeTab: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  defaultActiveTab: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.defaultProps = {\n  activeTab: 0,\n  defaultActiveTab: 0,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  t: translate\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst mapStateToProps = ({ inventory }, { productId }) => ({ activeTab: inventory.tabs?.[productId] });\n\nconst ConnectedInventoryTabs = connect(mapStateToProps)(InventoryTabs);\n\nexport { ConnectedInventoryTabs as default, ConnectedInventoryTabs, InventoryTabs, InventoryTab };\n","import { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SLA_TYPES as SLA_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES as USAGE_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = optionsType => {\n  switch (optionsType) {\n    case RHSM_API_QUERY_TYPES.SLA:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.slaPremium'),\n            value: SLA_TYPES.PREMIUM\n          },\n          {\n            title: translate('curiosity-toolbar.slaStandard'),\n            value: SLA_TYPES.STANDARD\n          },\n          {\n            title: translate('curiosity-toolbar.slaSelfSupport'),\n            value: SLA_TYPES.SELF\n          },\n          {\n            title: translate('curiosity-toolbar.slaNone'),\n            value: SLA_TYPES.NONE\n          }\n        ]\n      };\n    case RHSM_API_QUERY_TYPES.USAGE:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.usageDevelopment'),\n            value: USAGE_TYPES.DEVELOPMENT\n          },\n          {\n            title: translate('curiosity-toolbar.usageDisaster'),\n            value: USAGE_TYPES.DISASTER\n          },\n          {\n            title: translate('curiosity-toolbar.usageProduction'),\n            value: USAGE_TYPES.PRODUCTION\n          },\n          {\n            title: translate('curiosity-toolbar.usageUnspecified'),\n            value: USAGE_TYPES.UNSPECIFIED\n          }\n        ]\n      };\n    default:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.SLA }),\n            value: RHSM_API_QUERY_TYPES.SLA\n          },\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.USAGE }),\n            value: RHSM_API_QUERY_TYPES.USAGE\n          }\n        ]\n      };\n  }\n};\n\nconst toolbarHelpers = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarHelpers as default, toolbarHelpers, getOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar as PfToolbar,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup\n} from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons';\nimport { Select } from '../form/select';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { toolbarHelpers } from './toolbarHelpers';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onClearFilter\n * @fires onCategorySelect\n * @fires onSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear all filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    const { hardFilterReset } = this.props;\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: new Set() } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [RHSM_API_QUERY_TYPES.SLA]: null,\n            [RHSM_API_QUERY_TYPES.USAGE]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: null } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Clear individual filter state.\n   *\n   * @event onClearFilter\n   * @param {string} categoryTitle\n   */\n  onClearFilter = categoryTitle => {\n    const { activeFilters, currentFilter, hardFilterReset } = this.props;\n\n    const categoryOptions = toolbarHelpers.getOptions();\n    const { value: categoryValue } = categoryOptions.options.find(({ title }) => title === categoryTitle) || {};\n\n    if (!categoryValue) {\n      return;\n    }\n\n    const updatedActiveFilters = new Set(activeFilters);\n    updatedActiveFilters.delete(categoryValue);\n\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: updatedActiveFilters } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [categoryValue]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      const updatedCurrentFilter = (updatedActiveFilters.size > 0 && currentFilter) || null;\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: updatedCurrentFilter } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Set Category selection.\n   *\n   * @event onCategorySelect\n   * @param {object} event\n   */\n  onCategorySelect = event => {\n    const { value } = event;\n    this.setDispatch({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: value } });\n  };\n\n  /**\n   * Set select filter selection for dispatch.\n   *\n   * @param {object} params\n   * @param {object} params.event\n   * @param {string} params.field\n   */\n  onSelect = ({ event, field }) => {\n    const { activeFilters } = this.props;\n    const { value } = event;\n    const updatedActiveFilters = new Set(activeFilters).add(field);\n\n    this.setDispatch(\n      [\n        {\n          type: reduxTypes.toolbar.SET_ACTIVE_FILTERS,\n          data: { activeFilters: updatedActiveFilters }\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_TYPES[field],\n          data: { [field]: value }\n        }\n      ],\n      true\n    );\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {Array|object} actions\n   * @param {boolean} resetPage\n   */\n  setDispatch(actions, resetPage = false) {\n    const { viewId } = this.props;\n    const updatedActions = ((Array.isArray(actions) && actions) || [actions]).map(({ type, data }) => ({\n      type,\n      viewId,\n      ...data\n    }));\n\n    if (resetPage) {\n      updatedActions.push({\n        type: reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST\n      });\n    }\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Available, and selected select filter options.\n   *\n   * @param {string} field\n   * @returns {{optionsSelected: Array, options: Array }}\n   */\n  setSelectFilter(field) {\n    const { query } = this.props;\n    const options = toolbarHelpers.getOptions(field);\n    const currentFilter = this.getCurrentFilter();\n    let filter;\n\n    if (field) {\n      filter = typeof query?.[field] === 'string' && options.options.find(({ value }) => value === query?.[field]);\n    } else {\n      filter = options.options.find(({ value }) => value === currentFilter);\n    }\n\n    const optionsSelected = (filter?.title && [filter.title]) || (options?.selected && [options.selected]) || [];\n\n    return { options, optionsSelected };\n  }\n\n  /**\n   * Return the currentFilter, fallback to selected\n   *\n   * @returns {string|undefined}\n   */\n  getCurrentFilter() {\n    const { currentFilter, filterOptions } = this.props;\n\n    return (\n      currentFilter ||\n      filterOptions.find(({ selected }) => selected === true)?.id ||\n      (filterOptions.length === 1 && filterOptions[0]?.id)\n    );\n  }\n\n  /**\n   * A select filter node.\n   *\n   * @param {object} params\n   * @param {string} params.id\n   * @returns {object}\n   */\n  renderSelectFilter({ id: field }) {\n    const { t } = this.props;\n    const { options, optionsSelected } = this.setSelectFilter(field);\n    const currentFilter = this.getCurrentFilter();\n\n    return (\n      <ToolbarFilter\n        key={field}\n        chips={optionsSelected}\n        deleteChip={this.onClearFilter}\n        categoryName={t('curiosity-toolbar.category', { context: field })}\n        showToolbarItem={currentFilter === field}\n      >\n        <Select\n          aria-label={t('curiosity-toolbar.category', { context: field })}\n          onSelect={event => this.onSelect({ event, field })}\n          selectedOptions={optionsSelected}\n          placeholder={t('curiosity-toolbar.placeholder', { context: field })}\n          options={options.options}\n        />\n      </ToolbarFilter>\n    );\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { filterOptions, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options: categoryOptions, optionsSelected: categoryOptionsSelected } = this.setSelectFilter();\n\n    return (\n      <PfToolbar\n        id=\"curiosity-toolbar\"\n        className=\"curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"sm\"\n        clearAllFilters={this.onClear}\n        clearFiltersButtonText={t('curiosity-toolbar.clearFilters')}\n      >\n        <ToolbarContent>\n          <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"md\">\n            <ToolbarGroup variant=\"filter-group\">\n              {filterOptions.length !== 1 && (\n                <ToolbarItem>\n                  <Select\n                    aria-label={t('curiosity-toolbar.category')}\n                    onSelect={this.onCategorySelect}\n                    selectedOptions={categoryOptionsSelected}\n                    placeholder={t('curiosity-toolbar.placeholder')}\n                    options={categoryOptions.options}\n                    toggleIcon={<FilterIcon />}\n                  />\n                </ToolbarItem>\n              )}\n              {filterOptions.map(({ id, selected }) => this.renderSelectFilter({ id, selected }))}\n            </ToolbarGroup>\n          </ToolbarToggleGroup>\n        </ToolbarContent>\n      </PfToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, Array}}\n */\nToolbar.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.SLA]: PropTypes.string,\n    [RHSM_API_QUERY_TYPES.USAGE]: PropTypes.string\n  }),\n  activeFilters: PropTypes.instanceOf(Set),\n  currentFilter: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n  filterOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      filterType: PropTypes.oneOf(['select']),\n      id: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n      selected: PropTypes.bool\n    })\n  ),\n  hardFilterReset: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, filterOptions: Array}}\n */\nToolbar.defaultProps = {\n  query: {},\n  activeFilters: new Set(),\n  currentFilter: null,\n  filterOptions: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA,\n      filterType: 'select'\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      filterType: 'select',\n      selected: true\n    }\n  ],\n  hardFilterReset: false,\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: translate,\n  viewId: 'toolbar'\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.toolbar\n * @param {object} state.view\n * @param {object} props\n * @param {string} props.query\n * @param {string} props.viewId\n * @returns {object}\n */\nconst mapStateToProps = ({ toolbar, view }, { query: initialQuery, viewId }) => ({\n  ...toolbar.filters?.[viewId],\n  query: view.query?.[viewId] || initialQuery\n});\n\nconst ConnectedToolbar = connect(mapStateToProps)(Toolbar);\n\nexport { ConnectedToolbar as default, ConnectedToolbar, Toolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { helpers } from '../../common';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { Loader } from '../loader/loader';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { Table } from '../table/table';\n\n/**\n * ToDo: Consider removing the query prop entirely.\n * The current API doesn't allow setting more than \"offset\" and \"limit\"\n */\n/**\n * ToDo: Review moving the \"onScroll\" layout into a standalone component.\n */\n/**\n * A system inventory guests component.\n *\n * @augments React.Component\n * @fires onUpdateGuestsData\n * @fires onScroll\n */\nclass GuestsList extends React.Component {\n  state = { currentPage: 0, limit: 100, previousData: [] };\n\n  componentDidMount() {\n    this.onUpdateGuestsData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentPage } = this.state;\n\n    if (currentPage !== prevState.currentPage) {\n      this.onUpdateGuestsData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGuestsData\n   */\n  onUpdateGuestsData = () => {\n    const { currentPage, limit } = this.state;\n    const { getHostsInventoryGuests, query, id } = this.props;\n\n    if (id) {\n      const updatedQuery = {\n        ...query,\n        [RHSM_API_QUERY_TYPES.LIMIT]: limit,\n        [RHSM_API_QUERY_TYPES.OFFSET]: currentPage * limit || 0\n      };\n\n      const { inventoryGuestsQuery } = apiQueries.parseRhsmQuery(updatedQuery);\n      getHostsInventoryGuests(id, inventoryGuestsQuery);\n    }\n  };\n\n  /**\n   * Update page state.\n   *\n   * @event onScroll\n   * @param {object} event\n   */\n  onScroll = event => {\n    const { target } = event;\n    const { currentPage, limit, previousData } = this.state;\n    const { numberOfGuests, pending, listData } = this.props;\n\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > (currentPage + 1) * limit && bottom && !pending) {\n      const newPage = currentPage + 1;\n      const updatedData = [...previousData, ...(listData || [])];\n\n      this.setState({\n        previousData: updatedData,\n        currentPage: newPage\n      });\n    }\n  };\n\n  renderLoader() {\n    const { currentPage } = this.state;\n    const { filterGuestsData, listData, pending } = this.props;\n\n    if (currentPage > 0 && pending) {\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n            rowCount: 0,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  }\n\n  /**\n   * ToDo: Consider moving the \"meaning of life\" into the default props on iteration.\n   * For everyone else... move the 42 into default props, possibly the 275.\n   */\n  /**\n   * Render a guests table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { previousData } = this.state;\n    const { filterGuestsData, listData, numberOfGuests, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = [...previousData, ...(listData || [])].map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: filterGuestsData,\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    // Include the table header\n    let updatedHeight = (numberOfGuests + 1) * 42;\n    updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n    return (\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={this.onScroll}\n        >\n          {this.renderLoader()}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render a guest list table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { currentPage } = this.state;\n    const { error, filterGuestsData, listData, numberOfGuests, pending, perPageDefault } = this.props;\n\n    return (\n      <div className={`fadein ${(error && 'blur') || ''}`}>\n        {pending && currentPage === 0 && (\n          <Loader\n            variant=\"table\"\n            tableProps={{\n              borders: false,\n              colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n              colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n              rowCount: numberOfGuests < perPageDefault ? numberOfGuests : perPageDefault,\n              variant: TableVariant.compact\n            }}\n          />\n        )}\n        {((!pending && currentPage === 0) || currentPage > 0) && this.renderTable()}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: object,\n *     pending: boolean, query: object, numberOfGuests: number, perPageDefault: number, id: string,\n *     error: boolean}}\n */\nGuestsList.propTypes = {\n  error: PropTypes.bool,\n  filterGuestsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventoryGuests: PropTypes.func,\n  listData: PropTypes.array,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  pending: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object,\n  session: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: Array,\n *     pending: boolean, query: object, perPageDefault: number, error: boolean}}\n */\nGuestsList.defaultProps = {\n  error: false,\n  filterGuestsData: [],\n  getHostsInventoryGuests: helpers.noop,\n  listData: [],\n  pending: false,\n  perPageDefault: 5,\n  query: {},\n  session: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventoryGuests: (id, query) => dispatch(reduxActions.rhsm.getHostsInventoryGuests(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.guestsList.makeGuestsList();\n\nconst ConnectedGuestsList = connect(makeMapStateToProps, mapDispatchToProps)(GuestsList);\n\nexport { ConnectedGuestsList as default, ConnectedGuestsList, GuestsList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n"],"sourceRoot":""}
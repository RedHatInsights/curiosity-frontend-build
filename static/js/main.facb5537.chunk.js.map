{"version":3,"sources":["images/subscriptions.svg","common/helpers.js","redux/common/reduxHelpers.js","redux/middleware/index.js","redux/types/rhsmTypes.js","redux/types/userTypes.js","redux/types/index.js","types/rhsmApiTypes.js","common/dateHelpers.js","redux/reducers/graphReducer.js","redux/reducers/viewReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store.js","services/config.js","services/rhsmServices.js","redux/actions/rhsmActions.js","services/userServices.js","redux/actions/index.js","redux/actions/userActions.js","redux/selectors/graphCardSelectors.js","redux/selectors/index.js","redux/index.js","components/select/select.js","components/i18n/i18n.js","components/rhelGraphCard/rhelGraphCardHelpers.js","components/rhelGraphCard/rhelGraphCardTypes.js","components/chartArea/chartArea.js","components/rhelGraphCard/rhelGraphCard.js","components/rhelView/rhelView.js","components/tourView/tourView.js","components/router/routerTypes.js","components/router/router.js","components/pageLayout/pageLayout.js","components/authentication/authentication.js","components/app.js","index.js"],"names":["module","exports","helpers","generateId","prefix","Math","ceil","random","noop","Function","prototype","noopPromise","Promise","resolve","noopTranslate","key","value","DEV_MODE","process","PROD_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LOGGER_ID","UI_NAME","UI_PATH","UI_VERSION","window","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","getMessageFromResults","results","filterField","status","_get","statusResponse","statusText","messageResponse","message","detailResponse","detail","serverStatus","undefined","getMessages","messageObject","filterKey","obj","_map","next","Array","isArray","_join","getStatusFromResults","setStateProp","prop","data","options","state","initialState","reset","reduxHelpers","types","action","type","expandedTypes","forEach","val","subVal","push","ref","filter","RegExp","test","whichType","baseState","error","errorMessage","fulfilled","metaData","meta","metaId","id","metaQuery","query","pending","update","setId","payload","errorStatus","date","headers","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","promiseMiddleware","notificationsMiddleware","rhsmTypes","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_RHSM","SET_GRAPH_GRANULARITY_RHSM","userTypes","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","rhsm","user","RHSM_API_PATH_RHEL_ID_TYPES","RHEL","COMPUTE_NODE","DESKTOP","SERVER","WORKSTATION","ARM","IBM_POWER","IBM_Z","X86","RHSM_API_QUERY_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","rhsmApiTypes","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","DATE","SOCKETS","PHYSICAL_SOCKETS","HYPERVISOR_SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_CAPACITY_META","RHSM_API_RESPONSE_CAPACITY_META_TYPES","COUNT","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","HAS_DATA","RHSM_API_RESPONSE_PRODUCTS_META","RHSM_API_RESPONSE_PRODUCTS_META_TYPES","RHSM_API_QUERY_GRANULARITY","RHSM_API_QUERY_LIMIT","RHSM_API_QUERY_OFFSET","RHSM_API_QUERY_START_DATE","RHSM_API_QUERY_END_DATE","getCurrentDate","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","subtract","measurement","startDate","moment","utc","startOf","toDate","endDate","endOf","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","capacity","component","report","graphReducer","graphGranularity","view","viewReducer","session","authorized","locale","userReducer","username","reducers","notifications","graph","reduxReducers","combineReducers","store","createStore","applyMiddleware","serviceConfig","passedConfig","timeout","rhsmServices","params","axios","url","rhsmActions","getGraphCapacity","dispatch","getGraphReports","getLocaleFromCookie","Cookies","get","replace","LocaleCode","getLanguageName","userServices","returnMethod","insights","chrome","auth","getUser","e","console","warn","defaultLocale","reduxActions","authorizeUser","userService","getLocale","graphCardCache","graphCardSelector","createSelector","reportGranularity","capacityGranularity","reportProductId","productId","cachedGranularity","initialLoad","updatedData","graphData","sockets","hypervisor","threshold","productsData","thresholdData","length","index","x","y","Number","parseInt","item","itemDate","isSame","checkThresholdDate","reduxSelectors","graphCard","makeGraphCard","connectTranslate","mapStateToProps","mapDispatchToProps","connect","withTranslation","connectRouter","withRouter","Select","isExpanded","selected","onSelect","event","titleSelection","props","name","variant","updatedOptions","optionsIndex","findIndex","option","title","SelectVariant","single","updateSelected","opt","map","setState","mockUpdatedOptions","_cloneDeep","mockTarget","selectedIndex","mockEvent","target","currentTarget","persist","onToggle","expanded","this","formatOptions","prevProps","_isEqual","selectedOptions","_isPlainObject","Object","keys","activateOptions","convertedOption","text","textContent","label","includes","find","ariaLabel","className","isDisabled","placeholder","pfSelectOptions","aria-label","selections","placeholderText","btoa","data-value","data-title","React","Component","defaultProps","translate","str","i18next","t","I18n","i18nInit","fallbackLng","loadPath","use","XHR","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","children","Fragment","getTooltipDate","formattedDateTooltip","momentDate","format","rhelGraphCardHelpers","getChartXAxisLabelIncrement","getTooltips","itemsByKey","product","trim","xAxisTickFormat","tick","previousDate","formattedDate","isNewYear","year","yAxisTickFormat","numbro","average","mantissa","optionalMantissa","rhelGraphCardTypes","ChartArea","chartWidth","containerRef","createRef","onResizeContainer","containerElement","current","clientWidth","addEventListener","removeEventListener","dataSets","tooltips","updatedDataSets","items","i","_tooltip","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","floored","pow","floor","log10","maxY","chartDomain","legendData","legendLabel","legendDataSettings","symbol","isThreshold","themeColor","fill","stroke","legendOrientation","legendPosition","legendComponent","ChartLegend","borderPadding","top","stacked","setDataSets","charts","chartsStacked","updatedDataSet","dataColorStroke","ChartThreshold","animate","interpolation","style","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","chartProps","getChartLegend","getContainerComponent","Chart","duration","width","ChartAxis","renderChart","ChartStack","VictoryVoronoiCursorContainer","createContainer","containerComponentProps","constrainToVisibleArea","cursorDimension","voronoiDimension","voronoiPadding","mouseFollowTooltips","labelComponent","ChartTooltip","pointerLength","centerOffset","tooltip","flyoutWidth","labels","datum","childName","containerComponent","height","bottom","left","right","RhelGraphCard","onUpdateGraphData","toISOString","chartAreaProps","onLoad","chartColorBlueLight","chartColorBlueDark","chartColorCyanLight","chartColorCyanDark","chartColorGreenDark","errorRoute","getDateMenuOptions","to","Card","CardHead","CardActions","CardBody","size","SkeletonSize","xs","sm","md","lg","ConnectedRhelGraphCard","getGraphCard","RhelView","routeDetail","routeItem","PageSection","pathParameter","ConnectedRhelView","TourView","EmptyState","EmptyStateVariant","full","src","subscriptionsSvg","alt","appName","aria-hidden","Title","headingLevel","EmptyStateBody","Button","EmptyStateSecondaryActions","href","TranslatedTourView","baseName","pathName","pathPrefix","path","split","shift","pathSlice","slice","join","dynamicBaseName","location","pathname","routes","redirect","exact","render","disabled","activateOnError","navigation","default","Router","routesType","activateOnErrorRoute","route","redirectRoot","renderRoutes","hasParameters","routeProps","navigationItem","values","getRouteDetail","match","PageLayout","Page","noPadding","Authentication","appNav","buildNav","buildNavigation","currentPath","active","history","identifyApp","on","navId","listen","EmptyStateIcon","icon","BinocularsIcon","BanIcon","appNavigation","ConnectedAuthentication","App","ConnectedApp","basename","document","getElementById"],"mappings":"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","file":"static/js/main.facb5537.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/subscriptions.0ad5eae0.svg\";","const generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\nconst noop = Function.prototype;\n\nconst noopPromise = Promise.resolve({});\n\nconst noopTranslate = (key, value) => `t(${key}${(value && `, ${value}`) || ''})`;\n\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\nconst helpers = {\n  generateId,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LOGGER_ID,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION\n};\n\nwindow[UI_LOGGER_ID] = { ...helpers };\n\nexport { helpers as default, helpers };\n","import _get from 'lodash/get';\nimport _join from 'lodash/join';\nimport _map from 'lodash/map';\n\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\nconst getMessageFromResults = (results, filterField = null) => {\n  const status = _get(results, 'response.status', results.status);\n  const statusResponse = _get(results, 'response.statusText', results.statusText);\n  const messageResponse = _get(results, 'response.data', results.message);\n  const detailResponse = _get(results, 'response.data', results.detail);\n\n  let serverStatus = '';\n\n  if (!messageResponse && !detailResponse) {\n    if (status < 400) {\n      return statusResponse;\n    }\n\n    if (status >= 500 || status === undefined) {\n      return `${status || ''} Server is currently unable to handle this request.`;\n    }\n  }\n\n  if (status >= 500 || status === undefined) {\n    serverStatus = status ? `${status} ` : '';\n  }\n\n  if (typeof messageResponse === 'string') {\n    return `${serverStatus}${messageResponse}`;\n  }\n\n  if (typeof detailResponse === 'string') {\n    return `${serverStatus}${detailResponse}`;\n  }\n\n  const getMessages = (messageObject, filterKey) => {\n    const obj = filterKey ? messageObject[filterKey] : messageObject;\n\n    return _map(\n      obj,\n      next => {\n        if (Array.isArray(next)) {\n          return getMessages(next);\n        }\n\n        return next;\n      },\n      null\n    );\n  };\n\n  return `${serverStatus}${_join(getMessages(messageResponse || detailResponse, filterField), '\\n')}`;\n};\n\nconst getStatusFromResults = results => {\n  let status = _get(results, 'response.status', results.status);\n\n  if (status === undefined) {\n    status = 0;\n  }\n\n  return status;\n};\n\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (process.env.REACT_APP_ENV === 'development' && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (process.env.REACT_APP_ENV === 'development' && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    metaData: action.meta && action.meta.data,\n    metaId: action.meta && action.meta.id,\n    metaQuery: action.meta && action.meta.query,\n    pending: false,\n    update: false\n  };\n\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          error: true,\n          errorMessage: getMessageFromResults(action.payload),\n          errorStatus: getStatusFromResults(action.payload)\n        }),\n        {\n          state\n        }\n      );\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: action.payload.headers && action.payload.headers.date,\n          data: (action.payload && action.payload.data) || {},\n          fulfilled: true\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  generatedPromiseActionReducer,\n  getMessageFromResults,\n  getStatusFromResults,\n  setStateProp\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 5000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\nconst reduxMiddleware = [thunkMiddleware, promiseMiddleware, notificationsMiddleware(notificationsOptions)];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  thunkMiddleware\n};\n","const GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_RHSM = 'GET_GRAPH_REPORT_RHSM';\nconst SET_GRAPH_GRANULARITY_RHSM = 'SET_GRAPH_GRANULARITY_RHSM';\n\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  SET_GRAPH_GRANULARITY_RHSM\n};\n\nexport { rhsmTypes as default, rhsmTypes, GET_GRAPH_CAPACITY_RHSM, GET_GRAPH_REPORT_RHSM, SET_GRAPH_GRANULARITY_RHSM };\n","const USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\nconst userTypes = { USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport { userTypes as default, userTypes, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n","import { rhsmTypes } from './rhsmTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  rhsm: rhsmTypes,\n  user: userTypes\n};\n\nexport { reduxTypes as default, reduxTypes, rhsmTypes, userTypes };\n","const RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  DATE: 'date',\n  SOCKETS: 'sockets',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\nconst RHSM_API_RESPONSE_CAPACITY_META = 'meta';\nconst RHSM_API_RESPONSE_CAPACITY_META_TYPES = {\n  COUNT: 'count'\n};\n\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  DATE: 'date',\n  SOCKETS: 'sockets',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  HAS_DATA: 'has_data'\n};\nconst RHSM_API_RESPONSE_PRODUCTS_META = 'meta';\nconst RHSM_API_RESPONSE_PRODUCTS_META_TYPES = {\n  COUNT: 'count'\n};\n\nconst RHSM_API_PATH_RHEL_ID_TYPES = {\n  RHEL: 'RHEL',\n  COMPUTE_NODE: 'RHEL Compute Node',\n  DESKTOP: 'RHEL Desktop',\n  SERVER: 'RHEL Server',\n  WORKSTATION: 'RHEL Workstation',\n  ARM: 'RHEL for ARM',\n  IBM_POWER: 'RHEL for IBM Power',\n  IBM_Z: 'RHEL for IBM z',\n  X86: 'RHEL for x86'\n};\n\nconst RHSM_API_QUERY_GRANULARITY = 'granularity';\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\nconst RHSM_API_QUERY_LIMIT = 'limit';\nconst RHSM_API_QUERY_OFFSET = 'offset';\nconst RHSM_API_QUERY_START_DATE = 'beginning';\nconst RHSM_API_QUERY_END_DATE = 'ending';\n\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_PATH_RHEL_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_PATH_RHEL_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\n\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\nconst setRangedDateTime = ({ date, subtract, measurement }) => ({\n  startDate: moment\n    .utc(date)\n    .startOf(measurement)\n    .subtract(subtract, measurement)\n    .toDate(),\n  endDate: moment\n    .utc(date)\n    .startOf(measurement)\n    .endOf('days')\n    .toDate()\n});\n\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\n\n/**\n * Return a range of time based on granularity.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n","import { reduxTypes, rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { dateHelpers } from '../../common/dateHelpers';\n\nconst initialState = {\n  capacity: {},\n  component: {},\n  report: {}\n};\n\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM:\n      return reduxHelpers.setStateProp(\n        'component',\n        {\n          graphGranularity: action.graphGranularity,\n          ...dateHelpers.getRangedDateTime(action.graphGranularity)\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'capacity', type: rhsmTypes.GET_GRAPH_CAPACITY_RHSM },\n          { ref: 'report', type: rhsmTypes.GET_GRAPH_REPORT_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","const initialState = {\n  view: {\n    data: [],\n    error: false,\n    errorStatus: null,\n    errorMessage: null,\n    pending: false,\n    fulfilled: false\n  }\n};\n\nconst viewReducer = (state = initialState) => state;\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { userTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\nconst initialState = {\n  session: {\n    error: false,\n    errorMessage: null,\n    errorStatus: null,\n    pending: false,\n    fulfilled: false,\n    authorized: false,\n    locale: null\n  }\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.REJECTED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          error: action.error,\n          errorMessage: reduxHelpers.getMessageFromResults(action.payload),\n          errorStatus: reduxHelpers.getStatusFromResults(action.payload),\n          locale: state.session.locale\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.PENDING_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: state.session.locale,\n          pending: true\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          authorized: true,\n          fulfilled: true,\n          locale: state.session.locale,\n          username: action.username\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport viewReducer from './viewReducer';\nimport userReducer from './userReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  view: viewReducer,\n  user: userReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport { reduxReducers as default, reduxReducers, graphReducer, viewReducer, userReducer };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","const serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\nexport { serviceConfig as default, serviceConfig };\n","import axios from 'axios';\nimport serviceConfig from './config';\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {ForceStatus} 200\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {Enum} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {Enum} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {Object} links\n * @apiSuccess {Object} meta\n * @apiSuccess {Enum} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {Enum} meta.product\n * - RHEL\n * @apiSuccess {Number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2018-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-05-26T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-02T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-09T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-16T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-23T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-30T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-01-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-02-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-03-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"hypervisor\": 0,\n *           \"sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-04-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-05-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"hypervisor\": 50,\n *           \"sockets\": 48\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} QUARTERLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-01-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"hypervisor\": 50,\n *           \"sockets\": 48\n *         },\n *         {\n *           \"date\": \"2018-04-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2018-07-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2018-10-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"hypervisor\": 10,\n *           \"sockets\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 4,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"quarterly\"\n *       }\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getGraphReports = (id, params = {}) =>\n  axios(\n    serviceConfig({\n      url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n      params\n    })\n  );\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2018-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getGraphCapacity = (id, params = {}) =>\n  axios(\n    serviceConfig({\n      url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n      params\n    })\n  );\n\nconst rhsmServices = { getGraphCapacity, getGraphReports };\n\nexport { rhsmServices as default, rhsmServices, getGraphCapacity, getGraphReports };\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsmServices';\n\n// ToDo: add notifications settings back once \"auth\" end point available from API\nconst getGraphReports = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_RHSM,\n    payload: rhsmServices.getGraphReports(id, query),\n    meta: {\n      data: { id },\n      query,\n      notifications: {}\n    }\n  });\n\n// ToDo: add notifications settings back once \"auth\" end point available from API\nconst getGraphCapacity = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_GRAPH_CAPACITY_RHSM,\n    payload: rhsmServices.getGraphCapacity(id, query),\n    meta: {\n      data: { id },\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActions = { getGraphCapacity, getGraphReports };\n\nexport { rhsmActions as default, rhsmActions, getGraphCapacity, getGraphReports };\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport axios from 'axios';\nimport serviceConfig from './config';\nimport { helpers } from '../common/helpers';\n\nconst authorizeUser = () => {\n  let returnMethod = helpers.noopPromise;\n\n  try {\n    if (!helpers.DEV_MODE) {\n      returnMethod = window.insights.chrome.auth.getUser;\n    }\n  } catch (e) {\n    if (!helpers.TEST_MODE) {\n      console.warn(`{ getUser } = insights.chrome.auth: ${e.message}`);\n    }\n  }\n\n  return returnMethod;\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *       \"version\": \"0.0.0\",\n *       \"gitDescription\": \"lorem ipsum\",\n *       \"artifact\": \"dolor sit\",\n *       \"name\": \"lorem\",\n *       \"group\": \"ipsum\",\n *       \"gitHash\": \"0000000000000000\"\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getApiVersion = () =>\n  axios(\n    serviceConfig({\n      url: process.env.REACT_APP_SERVICES_RHSM_VERSION\n    })\n  );\n\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\nconst getLocale = () => {\n  const defaultLocale = {\n    value: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n    key: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC\n  };\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\nconst userServices = { authorizeUser, getApiVersion, getLocale, logoutUser };\n\nexport { userServices as default, userServices, authorizeUser, getApiVersion, getLocale, logoutUser };\n","import { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, rhsmActions, userActions };\n","import { userTypes } from '../types';\nimport userService from '../../services/userServices';\n\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userService.authorizeUser()\n  });\n\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userService.getLocale()\n});\n\nconst userActions = { authorizeUser, getLocale };\n\nexport { userActions as default, userActions, authorizeUser, getLocale };\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\nimport _get from 'lodash/get';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\n\nconst graphCardCache = {};\n\nconst graph = state => state.graph;\n\nconst graphCardSelector = createSelector(\n  [graph],\n  graphReducer => {\n    const { component = {}, capacity = {}, report = {} } = graphReducer || {};\n\n    const graphGranularity = component.graphGranularity || null;\n    const reportGranularity = _get(report, ['metaQuery', rhsmApiTypes.RHSM_API_QUERY_GRANULARITY], null);\n    const capacityGranularity = _get(capacity, ['metaQuery', rhsmApiTypes.RHSM_API_QUERY_GRANULARITY], null);\n    const reportProductId = _get(report, ['metaData', 'id'], null);\n    const capacityProductId = _get(capacity, ['metaData', 'id'], null);\n\n    let productId = null;\n    let granularity = null;\n\n    if (\n      (graphGranularity && graphGranularity === reportGranularity && graphGranularity === capacityGranularity) ||\n      (!graphGranularity && reportGranularity === capacityGranularity)\n    ) {\n      granularity = reportGranularity;\n    }\n\n    if (reportProductId === capacityProductId) {\n      productId = reportProductId;\n    }\n\n    const cachedGranularity = (granularity && productId && graphCardCache[`${productId}_${granularity}`]) || {};\n    const initialLoad = typeof cachedGranularity.initialLoad === 'boolean' ? cachedGranularity.initialLoad : true;\n\n    const updatedData = {\n      error: false,\n      errorStatus: null,\n      fulfilled: false,\n      pending: false,\n      initialLoad,\n      graphData: {\n        sockets: [],\n        hypervisor: [],\n        threshold: []\n      },\n      ...cachedGranularity,\n      ...component\n    };\n\n    if (granularity === null || productId === null) {\n      updatedData.error = true;\n      return updatedData;\n    }\n\n    if (initialLoad) {\n      updatedData.pending = report.pending || capacity.pending || false;\n    }\n\n    updatedData.error = report.error || capacity.error || false;\n    updatedData.errorStatus = report.errorStatus || capacity.errorStatus || null;\n\n    if (capacity.fulfilled && report.fulfilled && granularity && productId) {\n      const productsData = _get(report, ['data', rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA], []);\n      const thresholdData = _get(capacity, ['data', rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA], []);\n\n      updatedData.graphData.sockets.length = 0;\n      updatedData.graphData.hypervisor.length = 0;\n      updatedData.graphData.threshold.length = 0;\n\n      productsData.forEach((value, index) => {\n        const date = moment\n          .utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE])\n          .startOf('day')\n          .toDate();\n\n        const checkThresholdDate = item => {\n          if (!item) {\n            return false;\n          }\n\n          const itemDate = moment\n            .utc(item[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.DATE])\n            .startOf('day')\n            .toDate();\n\n          return moment(date).isSame(itemDate);\n        };\n\n        updatedData.graphData.sockets.push({\n          date,\n          x: index,\n          y: Number.parseInt(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.PHYSICAL_SOCKETS], 10) || 0\n        });\n\n        updatedData.graphData.hypervisor.push({\n          date,\n          x: index,\n          y: Number.parseInt(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HYPERVISOR_SOCKETS], 10) || 0\n        });\n\n        updatedData.graphData.threshold.push({\n          date,\n          x: index,\n          y: Number.parseInt(\n            (checkThresholdDate(thresholdData && thresholdData[index]) &&\n              thresholdData[index][rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.SOCKETS]) ||\n              0,\n            10\n          )\n        });\n      });\n\n      updatedData.initialLoad = false;\n      updatedData.fulfilled = true;\n      graphCardCache[`${productId}_${granularity}`] = { ...updatedData };\n    }\n\n    return updatedData;\n  }\n);\n\nconst makeGraphCardSelector = () => graphCardSelector;\n\nconst graphCardSelectors = {\n  graphCard: graphCardSelector,\n  makeGraphCard: makeGraphCardSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, graphCardSelector, makeGraphCardSelector };\n","import graphCardSelectors from './graphCardSelectors';\n\nconst reduxSelectors = {\n  graphCard: graphCardSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\nimport { helpers } from '../common/helpers';\n\nconst connectTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )((!helpers.TEST_MODE && withTranslation()(component)) || component);\n\nconst connectRouterTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connectTranslate(mapStateToProps, mapDispatchToProps)(component));\n\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(component)\n  );\n\nexport {\n  connect,\n  connectRouter,\n  connectRouterTranslate,\n  connectTranslate,\n  reduxActions,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  store\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options } = this.props;\n\n    if (!_isEqual(prevProps.options, options)) {\n      this.formatOptions();\n    }\n  }\n\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected = activateOptions.includes(convertedOption.value);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, placeholder, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isExpanded={isExpanded}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(option.title)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  placeholder: PropTypes.string,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  selectedOptions: null,\n  placeholder: 'Select option',\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, withTranslation } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\nconst translate = (str, placeholder = null) =>\n  (!helpers.TEST_MODE && i18next.t(str, placeholder)) || helpers.noopTranslate(str, placeholder);\n\nconst translateComponent = component => (!helpers.TEST_MODE && withTranslation()(component)) || component;\n\n/**\n * ToDo: reevaluate the \"I18nextProvider\" on package update.\n * Appears to have timing issues, and subsequent firings of the\n * ajax/xhr setup. Reverting it to just a function call that populates behind\n * the scenes appears more predictable.\n */\nclass I18n extends React.Component {\n  componentDidMount() {\n    this.i18nInit();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { locale } = this.props;\n\n    if (locale !== prevProps.locale) {\n      this.i18nInit();\n    }\n  }\n\n  i18nInit() {\n    const { fallbackLng, loadPath, locale } = this.props;\n\n    i18next\n      .use(XHR)\n      .use(initReactI18next)\n      .init({\n        backend: {\n          loadPath\n        },\n        fallbackLng,\n        lng: locale,\n        debug: !helpers.PROD_MODE,\n        ns: ['default'],\n        defaultNS: 'default',\n        react: {\n          useSuspense: false\n        }\n      });\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return <React.Fragment>{children}</React.Fragment>;\n  }\n}\n\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, translate, translateComponent };\n","import moment from 'moment';\nimport numbro from 'numbro';\nimport { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers } from '../../common/dateHelpers';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity, see enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {Date} date\n * @param {string} granularity, see enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n  let formattedDateTooltip;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDateTooltip = dateHelpers.timestampQuarterFormats.yearLong;\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDateTooltip = dateHelpers.timestampMonthFormats.yearLong;\n      break;\n    default:\n      formattedDateTooltip = dateHelpers.timestampDayFormats.long;\n      break;\n  }\n\n  return momentDate.format(formattedDateTooltip);\n};\n\n/**\n * Get tooltips for x axis while displaying y axis values.\n *\n * @param {Object} itemsByKey\n * @param {string} granularity, see enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string | *}\n */\n/**\n * ToDo: we have access to the datasets and index which gives us access to the previous date.\n * Consider adding back in the year on tooltip cross year displays\n */\nconst getTooltips = ({ itemsByKey, granularity }) => {\n  let hypervisor = itemsByKey.hypervisor && itemsByKey.hypervisor.y;\n  let sockets = itemsByKey.sockets && itemsByKey.sockets.y;\n  let threshold = itemsByKey.threshold && itemsByKey.threshold.y;\n\n  hypervisor =\n    (hypervisor && `${translate('curiosity-graph.productHypervisorLabel', { product: 'RHEL' })}: ${hypervisor}`) || '';\n\n  sockets = (sockets && `${translate('curiosity-graph.productSocketsLabel', { product: 'RHEL' })}: ${sockets}`) || '';\n  threshold = (threshold && `${translate('curiosity-graph.thresholdLabel')}: ${threshold}`) || '';\n\n  const date =\n    ((hypervisor || sockets || threshold) &&\n      `${translate('curiosity-graph.dateLabel')}: ${getTooltipDate({\n        date: itemsByKey.sockets.date,\n        granularity\n      })}`) ||\n    '';\n\n  return (\n    `${threshold}\\n${sockets}${(sockets && '\\n') || ''}${hypervisor}${(hypervisor && '\\n') || ''}${date}`.trim() ||\n    translate('curiosity-graph.noDataLabel')\n  );\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {Date} date\n * @param {string} granularity, see enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} tick\n * @param {Date} previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear = tick !== 0 && parseInt(momentDate.year(), 10) !== parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {number|string} tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick }) => numbro(tick).format({ average: true, mantissa: 1, optionalMantissa: true });\n\nconst rhelGraphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  getTooltips,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  rhelGraphCardHelpers as default,\n  rhelGraphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  getTooltips,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\n\nconst getDateMenuOptionsType = () => [\n  { title: translate('curiosity-graph.dropdownDaily'), value: GRANULARITY_TYPES.DAILY },\n  { title: translate('curiosity-graph.dropdownWeekly'), value: GRANULARITY_TYPES.WEEKLY },\n  { title: translate('curiosity-graph.dropdownMonthly'), value: GRANULARITY_TYPES.MONTHLY },\n  { title: translate('curiosity-graph.dropdownQuarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n];\n\nconst rhelGraphCardTypes = {\n  getDateMenuOptions: getDateMenuOptionsType\n};\n\nexport { rhelGraphCardTypes as default, rhelGraphCardTypes, getDateMenuOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer, VictoryPortal } from 'victory';\nimport {\n  Chart,\n  ChartAxis,\n  ChartLegend,\n  ChartStack,\n  ChartThreshold,\n  ChartTooltip,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  containerRef = React.createRef();\n\n  componentDidMount() {\n    this.onResizeContainer();\n    window.addEventListener('resize', this.onResizeContainer);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  onResizeContainer = () => {\n    const containerElement = this.containerRef.current;\n\n    if (containerElement && containerElement.clientWidth) {\n      this.setState({ chartWidth: containerElement.clientWidth });\n    }\n  };\n\n  setDataSets() {\n    const { dataSets, tooltips } = this.props;\n\n    if (tooltips && dataSets && dataSets[0] && dataSets[0].data) {\n      const updatedDataSets = _cloneDeep(dataSets);\n\n      updatedDataSets[0].data = updatedDataSets[0].data.map((value, index) => {\n        const itemsByKey = {};\n        const items = [];\n\n        dataSets.forEach((data, i) => {\n          if (data.data && data.data[value.x]) {\n            itemsByKey[data.id || `dataSet-${i}`] = data.data[value.x];\n            items.push(data.data[value.x]);\n          }\n        });\n\n        return {\n          ...value,\n          _tooltip: tooltips({\n            x: value.x,\n            y: value.y,\n            index,\n            items,\n            itemsByKey,\n            dataSets: _cloneDeep(dataSets)\n          })\n        };\n      });\n\n      return updatedDataSets;\n    }\n\n    return dataSets;\n  }\n\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  // ToDo: the domain range needs to be update when additional datasets are added\n  getChartDomain({ isXAxisTicks }) {\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  getChartLegend() {\n    const { dataSets } = this.props;\n    const legendData = [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.legendLabel) {\n        const legendDataSettings = { symbol: {}, name: dataSet.legendLabel };\n\n        if (dataSet.isThreshold) {\n          legendDataSettings.symbol = { type: 'threshold' };\n        }\n\n        if (dataSet.themeColor) {\n          legendDataSettings.symbol.fill = dataSet.themeColor;\n        } else if (dataSet.stroke) {\n          legendDataSettings.symbol.fill = dataSet.stroke;\n        } else if (dataSet.fill) {\n          legendDataSettings.symbol.fill = dataSet.fill;\n        }\n\n        legendData.push(legendDataSettings);\n      }\n    });\n\n    return {\n      legendData,\n      legendOrientation: 'horizontal',\n      legendPosition: 'bottom-left',\n      legendComponent: <ChartLegend borderPadding={{ top: 20 }} />\n    };\n  }\n\n  static getContainerComponent() {\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const containerComponentProps = {\n      constrainToVisibleArea: true,\n      cursorDimension: 'x',\n      voronoiDimension: 'x',\n      voronoiPadding: 50,\n      mouseFollowTooltips: true\n    };\n\n    containerComponentProps.labelComponent = (\n      <VictoryPortal>\n        <ChartTooltip pointerLength={0} centerOffset={{ x: tooltip => tooltip.flyoutWidth / 2 + 5, y: 0 }} />\n      </VictoryPortal>\n    );\n\n    containerComponentProps.labels = ({ datum }) =>\n      (/^chartArea-0/.test(datum.childName) && datum._tooltip) || datum.tooltip || undefined;\n\n    return {\n      containerComponent: <VictoryVoronoiCursorContainer {...containerComponentProps} />\n    };\n  }\n\n  renderChart({ stacked = false }) {\n    const dataSets = this.setDataSets();\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  render() {\n    const { chartWidth } = this.state;\n    const { padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const chartLegendProps = this.getChartLegend();\n    const containerComponent = (maxY > 0 && ChartArea.getContainerComponent()) || {};\n    const chartProps = { padding, ...chartLegendProps, ...chartDomain, ...containerComponent };\n\n    /**\n     * FixMe: PFCharts or Victory, unable to return null or empty content.\n     * General practice of returning \"null\" shouldn't necessarily melt the\n     * graph. To avoid issues we return an empty array\n     */\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n      </div>\n    );\n  }\n}\n\nChartArea.propTypes = {\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number.isRequired,\n          tooltip: PropTypes.string,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  tooltips: PropTypes.func,\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\nChartArea.defaultProps = {\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  tooltips: null,\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\nimport { Card, CardHead, CardActions, CardBody } from '@patternfly/react-core';\nimport {\n  chart_color_green_300 as chartColorGreenDark,\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark\n} from '@patternfly/react-tokens';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport { Select } from '../select/select';\nimport { connectTranslate, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { rhsmApiTypes, RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { rhelGraphCardHelpers } from './rhelGraphCardHelpers';\nimport { rhelGraphCardTypes } from './rhelGraphCardTypes';\nimport ChartArea from '../chartArea/chartArea';\n\nclass RhelGraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphGranularity } = this.props;\n\n    if (graphGranularity !== prevProps.graphGranularity) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  onUpdateGraphData = () => {\n    const { getGraphCapacity, getGraphReports, graphGranularity, startDate, endDate, productId } = this.props;\n    const query = {\n      [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: graphGranularity,\n      [rhsmApiTypes.RHSM_API_QUERY_START_DATE]: startDate.toISOString(),\n      [rhsmApiTypes.RHSM_API_QUERY_END_DATE]: endDate.toISOString()\n    };\n\n    if (productId) {\n      getGraphCapacity(productId, query);\n      getGraphReports(productId, query);\n    }\n  };\n\n  onSelect = event => {\n    const { graphGranularity } = this.props;\n    const { value } = event;\n\n    if (graphGranularity !== value) {\n      store.dispatch({\n        type: reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM,\n        graphGranularity: value\n      });\n    }\n  };\n\n  renderChart() {\n    const { graphData, graphGranularity, t } = this.props;\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      rhelGraphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: graphGranularity\n      });\n\n    const tooltips = ({ itemsByKey }) =>\n      rhelGraphCardHelpers.getTooltips({\n        itemsByKey,\n        granularity: graphGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: rhelGraphCardHelpers.getChartXAxisLabelIncrement(graphGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: rhelGraphCardHelpers.yAxisTickFormat,\n      tooltips\n    };\n\n    return (\n      <ChartArea\n        {...chartAreaProps}\n        dataSets={[\n          {\n            data: graphData.sockets,\n            id: 'sockets',\n            animate: {\n              duration: 250,\n              onLoad: { duration: 250 }\n            },\n            fill: chartColorBlueLight.value,\n            stroke: chartColorBlueDark.value,\n            legendLabel: t('curiosity-graph.productSocketsLabel', { product: 'RHEL' }),\n            isStacked: true\n          },\n          {\n            data: graphData.hypervisor,\n            id: 'hypervisor',\n            animate: {\n              duration: 250,\n              onLoad: { duration: 250 }\n            },\n            fill: chartColorCyanLight.value,\n            stroke: chartColorCyanDark.value,\n            legendLabel: t('curiosity-graph.productHypervisorLabel', { product: 'RHEL' }),\n            isStacked: true\n          },\n          {\n            data: graphData.threshold,\n            id: 'threshold',\n            animate: {\n              duration: 100,\n              onLoad: { duration: 100 }\n            },\n            stroke: chartColorGreenDark.value,\n            legendLabel: t('curiosity-graph.thresholdLabel'),\n            isThreshold: true\n          }\n        ]}\n      />\n    );\n  }\n\n  // ToDo: combine \"curiosity-skeleton-container\" into a single class w/ --loading and BEM style\n  render() {\n    const { error, errorRoute, errorStatus, graphGranularity, pending, t } = this.props;\n    const getDateMenuOptions = rhelGraphCardTypes.getDateMenuOptions();\n\n    if (error && (errorStatus === 403 || errorStatus >= 500)) {\n      return (errorRoute && errorRoute.to && <Redirect to={errorRoute.to} />) || null;\n    }\n\n    return (\n      <Card className=\"curiosity-usage-graph fadein\">\n        <CardHead>\n          <h2>{t('curiosity-graph.heading')}</h2>\n          <CardActions>\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onSelect}\n              options={getDateMenuOptions}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHead>\n        <CardBody>\n          <div className=\"curiosity-skeleton-container\">\n            {pending && (\n              <React.Fragment>\n                <Skeleton size={SkeletonSize.xs} />\n                <Skeleton size={SkeletonSize.sm} />\n                <Skeleton size={SkeletonSize.md} />\n                <Skeleton size={SkeletonSize.lg} />\n              </React.Fragment>\n            )}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nRhelGraphCard.propTypes = {\n  error: PropTypes.bool,\n  errorRoute: PropTypes.shape({\n    to: PropTypes.string\n  }),\n  errorStatus: PropTypes.number,\n  getGraphCapacity: PropTypes.func,\n  getGraphReports: PropTypes.func,\n  graphData: PropTypes.shape({\n    sockets: PropTypes.arrayOf(\n      PropTypes.shape({\n        date: PropTypes.instanceOf(Date),\n        x: PropTypes.number,\n        y: PropTypes.number\n      })\n    ),\n    hypervisor: PropTypes.arrayOf(\n      PropTypes.shape({\n        date: PropTypes.instanceOf(Date),\n        x: PropTypes.number,\n        y: PropTypes.number\n      })\n    ),\n    threshold: PropTypes.arrayOf(\n      PropTypes.shape({\n        date: PropTypes.instanceOf(Date),\n        x: PropTypes.number,\n        y: PropTypes.number\n      })\n    )\n  }),\n  graphGranularity: PropTypes.oneOf([\n    GRANULARITY_TYPES.DAILY,\n    GRANULARITY_TYPES.WEEKLY,\n    GRANULARITY_TYPES.MONTHLY,\n    GRANULARITY_TYPES.QUARTERLY\n  ]),\n  pending: PropTypes.bool,\n  productId: PropTypes.string,\n  t: PropTypes.func,\n  startDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date)\n};\n\nRhelGraphCard.defaultProps = {\n  error: false,\n  errorRoute: {},\n  errorStatus: null,\n  getGraphCapacity: helpers.noop,\n  getGraphReports: helpers.noop,\n  graphData: {\n    sockets: [],\n    hypervisor: [],\n    threshold: []\n  },\n  graphGranularity: GRANULARITY_TYPES.DAILY,\n  pending: false,\n  productId: rhsmApiTypes.RHSM_API_PATH_RHEL_ID_TYPES.RHEL,\n  t: helpers.noopTranslate,\n  startDate: dateHelpers.defaultDateTime.startDate,\n  endDate: dateHelpers.defaultDateTime.endDate\n};\n\nconst makeMapStateToProps = () => {\n  const getGraphCard = reduxSelectors.graphCard.makeGraphCard();\n\n  return (state, props) => ({\n    ...getGraphCard(state, props)\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getGraphCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphCapacity(id, query)),\n  getGraphReports: (id, query) => dispatch(reduxActions.rhsm.getGraphReports(id, query))\n});\n\nconst ConnectedRhelGraphCard = connectTranslate(makeMapStateToProps, mapDispatchToProps)(RhelGraphCard);\n\nexport { ConnectedRhelGraphCard as default, ConnectedRhelGraphCard, RhelGraphCard };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { PageSection } from '@patternfly/react-core';\nimport { connectRouter } from '../../redux';\nimport RhelGraphCard from '../rhelGraphCard/rhelGraphCard';\nimport { helpers } from '../../common';\n\nclass RhelView extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    const { routeDetail } = this.props;\n\n    return (\n      <React.Fragment>\n        <PageHeader>\n          <PageHeaderTitle\n            title={(routeDetail.routeItem && routeDetail.routeItem.title) || helpers.UI_DISPLAY_CONFIG_NAME}\n          />\n        </PageHeader>\n        <PageSection>\n          <RhelGraphCard\n            key={routeDetail.pathParameter}\n            productId={routeDetail.pathParameter}\n            errorRoute={routeDetail.errorRoute}\n          />\n        </PageSection>\n      </React.Fragment>\n    );\n  }\n}\n\nRhelView.propTypes = {\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    }),\n    errorRoute: PropTypes.shape({\n      to: PropTypes.string\n    })\n  })\n};\n\nRhelView.defaultProps = {\n  routeDetail: {}\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = () => ({});\n\n// Todo: clean up \"connected\" component appears unnecessary, look at converting from class\nconst ConnectedRhelView = connectRouter(mapStateToProps, mapDispatchToProps)(RhelView);\n\nexport { ConnectedRhelView as default, ConnectedRhelView, RhelView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  PageSection,\n  Title\n} from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { translateComponent } from '../i18n/i18n';\nimport subscriptionsSvg from '../../images/subscriptions.svg';\n\n/**\n * FixMe: Patternfly EmptyStateIcon can't pass a basic image\n * Requires the use of function based component syntax\n */\n/**\n * FixMe: Patternfly EmptyStateBody and Title appear to throw an error on translate string replacement\n * Wrap with a fragment to pass.\n */\nconst TourView = ({ t }) => (\n  <React.Fragment>\n    <PageHeader>\n      <PageHeaderTitle title={helpers.UI_DISPLAY_CONFIG_NAME} />\n    </PageHeader>\n    <PageSection>\n      <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n        <img\n          src={subscriptionsSvg}\n          className=\"curiosity-emptystate-img-icon\"\n          alt={t('curiosity-tour.emptyStateIconAlt', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          aria-hidden\n        />\n        <Title headingLevel=\"h5\" size=\"lg\">\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateTitle', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </Title>\n        <EmptyStateBody>\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateDescription', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </EmptyStateBody>\n        <EmptyStateBody>\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateDescriptionExtended', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </EmptyStateBody>\n        <Button variant=\"primary\">{t('curiosity-tour.emptyStateButton')}</Button>\n        <EmptyStateSecondaryActions>\n          <Button\n            component=\"a\"\n            variant=\"link\"\n            target=\"_blank\"\n            href=\"https://access.redhat.com/documentation/Subscription_Central/\"\n          >\n            {t('curiosity-tour.emptyStateLinkLearnMore')}\n          </Button>\n          <Button component=\"a\" variant=\"link\" target=\"_blank\" href=\"https://access.redhat.com/account-team\">\n            {t('curiosity-tour.emptyStateLinkContactUs')}\n          </Button>\n        </EmptyStateSecondaryActions>\n      </EmptyState>\n    </PageSection>\n  </React.Fragment>\n);\n\nTourView.propTypes = {\n  routeDetail: PropTypes.shape({\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    })\n  }),\n  t: PropTypes.func\n};\n\nTourView.defaultProps = {\n  routeDetail: {},\n  t: helpers.noopTranslate\n};\n\nconst TranslatedTourView = translateComponent(TourView);\n\nexport { TranslatedTourView as default, TranslatedTourView, TourView };\n","import { helpers } from '../../common/helpers';\nimport RhelView from '../rhelView/rhelView';\nimport TourView from '../tourView/tourView';\nimport { RHSM_API_PATH_RHEL_ID_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Return an assumed dynamic route baseName directory\n * based on a predictable platform directory depth of\n * /[OPTIONAL]/[environment]/[APP NAME]\n *\n * @param pathName {string}\n * @param pathPrefix {string}\n * @return {string}\n */\nconst dynamicBaseName = ({ pathName, pathPrefix }) => {\n  const path = pathName.split('/');\n\n  path.shift();\n\n  const pathSlice = pathPrefix && new RegExp(path[0]).test(pathPrefix) ? 2 : 1;\n\n  return `/${path.slice(0, pathSlice).join('/')}`;\n};\n\nconst baseName =\n  (helpers.TEST_MODE && '/') ||\n  (helpers.DEV_MODE && '/') ||\n  dynamicBaseName({ pathName: window.location.pathname, pathPrefix: helpers.UI_DEPLOY_PATH_PREFIX });\n\n/**\n * Return array of objects that describe navigation\n * @return {array}\n */\nconst routes = [\n  {\n    title: 'Red Hat Enterprise Linux',\n    to: '/rhel-sw/all',\n    redirect: true,\n    component: RhelView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Red Hat Enterprise Linux',\n    id: 'rhel-sw',\n    to: '/rhel-sw/:variant',\n    component: RhelView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Tour',\n    id: 'soon',\n    to: '/soon',\n    exact: true,\n    render: true,\n    activateOnError: true,\n    component: TourView,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Tour',\n    id: 'tour',\n    to: '/tour',\n    exact: true,\n    render: true,\n    component: TourView,\n    disabled: helpers.UI_DISABLED\n  }\n];\n\nconst navigation = [\n  {\n    title: 'Red Hat Enterprise Linux',\n    id: 'all',\n    pathParameter: RHSM_API_PATH_RHEL_ID_TYPES.RHEL,\n    default: true\n  },\n  {\n    title: 'ARM',\n    id: 'arm',\n    pathParameter: RHSM_API_PATH_RHEL_ID_TYPES.ARM\n  },\n  {\n    title: 'IBM Power',\n    id: 'ibmpower',\n    pathParameter: RHSM_API_PATH_RHEL_ID_TYPES.IBM_POWER\n  },\n  {\n    title: 'IBM Z systems',\n    id: 'ibmz',\n    pathParameter: RHSM_API_PATH_RHEL_ID_TYPES.IBM_Z\n  },\n  {\n    title: 'x86',\n    id: 'x86',\n    pathParameter: RHSM_API_PATH_RHEL_ID_TYPES.X86\n  }\n];\n\nconst getRouteDetail = (params = {}) => {\n  let navigationItem = {};\n\n  if (params) {\n    Object.values(params).forEach(value => {\n      navigationItem = navigation.find(item => item.id === value) || navigationItem;\n    });\n  }\n\n  navigationItem =\n    (Object.keys(navigationItem || {}).length && navigationItem) || navigation.find(item => item.default === true);\n\n  return navigationItem;\n};\n\nexport { routes as default, baseName, dynamicBaseName, getRouteDetail, navigation, routes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { baseName, getRouteDetail, navigation, routes } from './routerTypes';\n\nclass Router extends React.Component {\n  renderRoutes() {\n    const { routesType } = this.props;\n    const activateOnErrorRoute = routesType.find(route => route.activateOnError === true);\n\n    let redirectRoot = null;\n\n    return {\n      renderRoutes: routesType.map(item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        if (item.redirect === true) {\n          redirectRoot = <Redirect to={item.to} />;\n        }\n\n        if (item.render === true) {\n          return (\n            <Route\n              exact={item.hasParameters || item.exact}\n              key={item.to}\n              path={item.to}\n              render={routeProps => {\n                const routeDetail = getRouteDetail(routeProps.match.params);\n                return (\n                  <item.component\n                    routeDetail={{\n                      baseName,\n                      errorRoute: activateOnErrorRoute,\n                      routes,\n                      routeItem: { ...item },\n                      ...routeDetail\n                    }}\n                    {...routeProps}\n                  />\n                );\n              }}\n            />\n          );\n        }\n\n        return (\n          <Route exact={item.hasParameters || item.exact} key={item.to} path={item.to} component={item.component} />\n        );\n      }),\n      redirectRoot\n    };\n  }\n\n  render() {\n    const { renderRoutes, redirectRoot } = this.renderRoutes();\n\n    return (\n      <div className=\"curiosity-content\">\n        <Switch>\n          {renderRoutes}\n          {redirectRoot}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nRouter.propTypes = {\n  routesType: PropTypes.array\n};\n\nRouter.defaultProps = {\n  routesType: routes\n};\n\nexport { Router as default, Router, baseName, navigation, routes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Page, PageSection } from '@patternfly/react-core';\n\nconst PageLayout = ({ children }) => (\n  <Page className=\"layout-pf curiosity\">\n    <PageSection noPadding>{children}</PageSection>\n  </Page>\n);\n\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nPageLayout.defaultProps = {};\n\nexport { PageLayout as default, PageLayout };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant } from '@patternfly/react-core';\nimport { BanIcon, BinocularsIcon } from '@patternfly/react-icons';\nimport { connectRouter, reduxActions } from '../../redux';\nimport { helpers } from '../../common/helpers';\nimport { navigation as appNavigation } from '../router/router';\nimport PageLayout from '../pageLayout/pageLayout';\n\nclass Authentication extends Component {\n  appNav = helpers.noop;\n\n  buildNav = helpers.noop;\n\n  componentDidMount() {\n    const { appName, authorizeUser, history, insights, session } = this.props;\n\n    try {\n      if (helpers.PROD_MODE || helpers.REVIEW_MODE) {\n        insights.chrome.init();\n        insights.chrome.identifyApp(appName);\n        insights.chrome.navigation(this.buildNavigation());\n\n        this.appNav = insights.chrome.on('APP_NAVIGATION', event => history.push(`${event.navId}`));\n        this.buildNav = history.listen(() => insights.chrome.navigation(this.buildNavigation()));\n      }\n\n      if (!session.authorized) {\n        authorizeUser();\n      }\n    } catch (e) {\n      if (!helpers.TEST_MODE) {\n        console.warn(`{ init, identifyApp, navigation } = insights.chrome: ${e.message}`);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.appNav();\n    this.buildNav();\n  }\n\n  buildNavigation = () => {\n    const { navigation } = this.props;\n    const currentPath = window.location.pathname.split('/').slice(-1)[0];\n\n    return navigation.map(item => ({\n      ...item,\n      active: item.id === currentPath\n    }));\n  };\n\n  render() {\n    const { children, session } = this.props;\n\n    if (session.authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return (\n        <PageLayout>\n          <PageHeader>\n            <PageHeaderTitle title=\"&nbsp;\" />\n          </PageHeader>\n          <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n            <EmptyStateIcon icon={BinocularsIcon} />\n            <EmptyStateBody>Authenticating...</EmptyStateBody>\n          </EmptyState>\n        </PageLayout>\n      );\n    }\n\n    return (\n      <PageLayout>\n        <PageHeader>\n          <PageHeaderTitle title=\"Unauthorized\" />\n        </PageHeader>\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          <EmptyStateIcon icon={BanIcon} />\n          <EmptyStateBody>You do not have permission to access reporting. Contact your administrator.</EmptyStateBody>\n        </EmptyState>\n      </PageLayout>\n    );\n  }\n}\n\nAuthentication.propTypes = {\n  appName: PropTypes.string,\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  insights: PropTypes.shape({\n    chrome: PropTypes.shape({\n      init: PropTypes.func,\n      identifyApp: PropTypes.func,\n      navigation: PropTypes.func,\n      on: PropTypes.func\n    })\n  }),\n  navigation: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string\n    })\n  ),\n  session: PropTypes.shape({\n    authorized: PropTypes.bool,\n    error: PropTypes.bool,\n    errorMessage: PropTypes.string,\n    pending: PropTypes.bool\n  })\n};\n\nAuthentication.defaultProps = {\n  appName: helpers.UI_NAME,\n  authorizeUser: helpers.noop,\n  insights: window.insights,\n  navigation: appNavigation,\n  session: {\n    authorized: false,\n    error: false,\n    errorMessage: '',\n    pending: false\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser())\n});\n\nconst mapStateToProps = state => ({ session: state.user.session });\n\nconst ConnectedAuthentication = connectRouter(mapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router/router';\nimport Authentication from './authentication/authentication';\nimport PageLayout from './pageLayout/pageLayout';\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n\n    getLocale();\n  }\n\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <Authentication>\n          <PageLayout>\n            <Router />\n          </PageLayout>\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { baseName } from './components/router/routerTypes';\nimport { store } from './redux';\nimport App from './components/app';\nimport './styles/index.scss';\n\nrender(\n  <Provider store={store}>\n    <NotificationsPortal />\n    <BrowserRouter basename={baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["common/helpers.js","redux/middleware/index.js","redux/types/rhelTypes.js","redux/types/userTypes.js","redux/types/index.js","types/rhelApiTypes.js","redux/common/reduxHelpers.js","common/dateHelpers.js","redux/reducers/rhelGraphReducer.js","redux/reducers/rhelViewReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store.js","services/config.js","services/rhelServices.js","redux/actions/rhelActions.js","services/userServices.js","redux/actions/userActions.js","redux/actions/index.js","redux/index.js","components/select/select.js","components/i18n/i18n.js","common/graphHelpers.js","components/rhelGraphCard/rhelGraphCardTypes.js","components/chartArea/chartArea.js","components/rhelGraphCard/rhelGraphCard.js","components/rhelView/rhelView.js","components/router/routerTypes.js","components/router/router.js","components/pageLayout/pageLayout.js","components/authentication/authentication.js","components/app.js","index.js"],"names":["helpers","generateId","prefix","Math","ceil","random","noop","Function","prototype","noopPromise","Promise","resolve","noopTranslate","key","value","DEV_MODE","process","PROD_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISPLAY_NAME","UI_LOGGER_ID","UI_NAME","UI_PATH","UI_VERSION","window","reduxMiddleware","thunkMiddleware","promiseMiddleware","GET_GRAPH_REPORT","SET_GRAPH_RHEL_GRANULARITY","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","rhel","rhelTypes","user","userTypes","rhelApiTypes","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_CORES","RHSM_API_RESPONSE_PRODUCTS_DATA_DATE","RHSM_API_RESPONSE_PRODUCTS_DATA_INSTANCES","RHSM_API_RESPONSE_PRODUCTS_DATA_SOCKETS","RHSM_API_RESPONSE_PRODUCTS_DATA_SOCKETS_THRESHOLD","RHSM_API_RESPONSE_PRODUCTS_META","RHSM_API_RESPONSE_PRODUCTS_META_COUNT","RHSM_API_QUERY_GRANULARITY","RHSM_API_QUERY_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_QUERY_LIMIT","RHSM_API_QUERY_OFFSET","RHSM_API_QUERY_START_DATE","RHSM_API_QUERY_END_DATE","reduxHelpers","base","results","filterField","status","_get","statusResponse","statusText","messageResponse","message","detailResponse","detail","serverStatus","undefined","getMessages","messageObject","filterKey","obj","_map","next","Array","isArray","_join","prop","data","options","state","initialState","reset","getCurrentDate","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","date","subtract","measurement","startDate","moment","utc","startOf","toDate","endDate","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","GRANULARITY_TYPES","dateHelpers","getRangedDateTime","granularity","graphData","usage","error","errorStatus","errorMessage","pending","fulfilled","rhelGraphReducer","action","type","payload","graphGranularity","view","rhelViewReducer","session","authorized","locale","userReducer","username","reducers","rhelGraph","rhelView","reduxReducers","combineReducers","store","createStore","applyMiddleware","serviceConfig","passedConfig","headers","timeout","rhelServices","params","axios","url","getGraphReports","query","dispatch","getLocaleFromCookie","Cookies","get","replace","LocaleCode","getLanguageName","userServices","returnMethod","insights","chrome","auth","getUser","e","console","warn","defaultLocale","authorizeUser","userService","getLocale","reduxActions","rhelActions","userActions","connectTranslate","mapStateToProps","mapDispatchToProps","component","connect","withTranslation","connectRouter","withRouter","Select","isExpanded","selected","onSelect","event","titleSelection","props","id","name","variant","updatedOptions","optionsIndex","findIndex","option","title","SelectVariant","single","forEach","index","updateSelected","filter","opt","map","setState","mockUpdatedOptions","_cloneDeep","mockTarget","selectedIndex","mockEvent","target","currentTarget","persist","onToggle","expanded","this","formatOptions","prevProps","_isEqual","selectedOptions","_isPlainObject","Object","keys","activateOptions","convertedOption","text","textContent","label","includes","find","ariaLabel","className","isDisabled","placeholder","pfSelectOptions","length","aria-label","selections","placeholderText","btoa","data-value","data-title","React","Component","defaultProps","translate","str","i18next","t","I18n","i18nInit","fallbackLng","loadPath","use","XHR","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","children","Fragment","getChartXAxisLabelIncrement","getGraphLabels","labels","tooltipLabel","previousLabel","getGranularityDateType","getLabel","previousData","formattedDate","previousCount","updatedLabel","getThresholdLabel","yValue","tooltipThresholdLabel","fillFormatChartData","granularityType","granularityTick","endDateStartDateDiff","diff","chartData","chartDataThresholds","isThreshold","previousYear","i","momentDate","add","stringDate","toISOString","year","parseInt","checkTick","isNewYear","format","yAxis","yAxisThreshold","dataThreshold","labelData","push","x","y","tooltip","xAxisLabel","graphHelpers","dataFacet","dataThresholdFacet","formattedData","Number","chartXAxisLabelIncrement","rhelGraphCardTypes","ChartArea","chartWidth","containerRef","createRef","onResizeContainer","containerElement","current","clientWidth","addEventListener","removeEventListener","xAxisLabelIncrement","yAxisLabelIncrement","xAxisTickFormat","yAxisTickFormat","dataSets","xAxisProps","yAxisProps","xAxisDataSet","yAxisDataSet","dataSet","xAxisLabelUseDataSet","yAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","tickValue","tick","yAxisLabel","yAxisTickValues","xAxisFixLabelOverlap","yAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickValues","tickFormat","isXAxisTicks","isYAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","thresholds","floored","pow","floor","log10","maxY","chartDomain","legendData","legendThreshold","symbol","legendOrientation","legendPosition","legendComponent","ChartLegend","borderPadding","top","padding","getChartTicks","getChartDomain","chartProps","getChartLegend","containerComponent","ChartVoronoiContainer","constrainToVisibleArea","datum","ref","Chart","width","ChartAxis","ChartThreshold","interpolation","thresholdInterpolation","style","thresholdStyle","ChartStack","dataInterpolation","height","bottom","left","right","RhelGraphCard","onUpdateGraphData","numeral","getDateMenuOptions","Card","CardHead","CardActions","CardBody","size","SkeletonSize","xs","sm","md","lg","renderChart","ConnectedRhelGraphCard","RhelView","PageSection","ConnectedRhelView","baseName","pathName","pathPrefix","path","split","shift","pathSlice","RegExp","test","slice","join","dynamicBaseName","location","pathname","routes","to","redirect","exact","disabled","Router","routesType","redirectRoot","renderRoutes","item","hasParameters","PageLayout","Page","noPadding","Authentication","appNav","buildNav","buildNavigation","currentPath","active","appName","history","identifyApp","navigation","on","navId","listen","EmptyState","EmptyStateVariant","full","EmptyStateIcon","icon","BinocularsIcon","EmptyStateBody","BanIcon","appRoutes","ConnectedAuthentication","App","ConnectedApp","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.60ce753b.chunk.js","sourcesContent":["const generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\nconst noop = Function.prototype;\n\nconst noopPromise = Promise.resolve({});\n\nconst noopTranslate = (key, value) => value || `t('${key}')`;\n\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\nconst helpers = {\n  generateId,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISPLAY_NAME,\n  UI_LOGGER_ID,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION\n};\n\nwindow[UI_LOGGER_ID] = { ...helpers };\n\nexport { helpers as default, helpers };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\n\nconst reduxMiddleware = [thunkMiddleware, promiseMiddleware];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport { reduxMiddleware as default, reduxMiddleware, createLogger, promiseMiddleware, thunkMiddleware };\n","const GET_GRAPH_REPORT = 'GET_GRAPH_REPORT';\nconst SET_GRAPH_RHEL_GRANULARITY = 'SET_GRAPH_RHEL_GRANULARITY';\n\nexport { GET_GRAPH_REPORT, SET_GRAPH_RHEL_GRANULARITY };\n","const USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\nexport { USER_AUTH, USER_LOCALE, USER_LOGOUT };\n","import * as rhelTypes from './rhelTypes';\nimport * as userTypes from './userTypes';\n\nconst reduxTypes = {\n  rhel: rhelTypes,\n  user: userTypes\n};\n\nexport { reduxTypes as default, reduxTypes, rhelTypes, userTypes };\n","const RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_CORES = 'cores';\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_DATE = 'date';\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_INSTANCES = 'instance_count';\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_SOCKETS = 'sockets';\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_SOCKETS_THRESHOLD = 'sockets_threshold';\nconst RHSM_API_RESPONSE_PRODUCTS_META = 'meta';\nconst RHSM_API_RESPONSE_PRODUCTS_META_COUNT = 'count';\n\nconst RHSM_API_QUERY_GRANULARITY = 'granularity';\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\nconst RHSM_API_QUERY_LIMIT = 'limit';\nconst RHSM_API_QUERY_OFFSET = 'offset';\nconst RHSM_API_QUERY_START_DATE = 'beginning';\nconst RHSM_API_QUERY_END_DATE = 'ending';\n\nconst rhelApiTypes = {\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_CORES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_DATE,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_INSTANCES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_SOCKETS,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_SOCKETS_THRESHOLD,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_COUNT,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n\nexport {\n  rhelApiTypes as default,\n  rhelApiTypes,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_CORES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_DATE,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_INSTANCES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_SOCKETS,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_SOCKETS_THRESHOLD,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_COUNT,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n","import _get from 'lodash/get';\nimport _join from 'lodash/join';\nimport _map from 'lodash/map';\n\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\nconst getMessageFromResults = (results, filterField = null) => {\n  const status = _get(results, 'response.status', results.status);\n  const statusResponse = _get(results, 'response.statusText', results.statusText);\n  const messageResponse = _get(results, 'response.data', results.message);\n  const detailResponse = _get(results, 'response.data', results.detail);\n\n  let serverStatus = '';\n\n  if (!messageResponse && !detailResponse) {\n    if (status < 400) {\n      return statusResponse;\n    }\n\n    if (status >= 500 || status === undefined) {\n      return `${status || ''} Server is currently unable to handle this request.`;\n    }\n  }\n\n  if (status >= 500 || status === undefined) {\n    serverStatus = status ? `${status} ` : '';\n  }\n\n  if (typeof messageResponse === 'string') {\n    return `${serverStatus}${messageResponse}`;\n  }\n\n  if (typeof detailResponse === 'string') {\n    return `${serverStatus}${detailResponse}`;\n  }\n\n  const getMessages = (messageObject, filterKey) => {\n    const obj = filterKey ? messageObject[filterKey] : messageObject;\n\n    return _map(\n      obj,\n      next => {\n        if (Array.isArray(next)) {\n          return getMessages(next);\n        }\n\n        return next;\n      },\n      null\n    );\n  };\n\n  return `${serverStatus}${_join(getMessages(messageResponse || detailResponse, filterField), '\\n')}`;\n};\n\nconst getStatusFromResults = results => {\n  let status = _get(results, 'response.status', results.status);\n\n  if (status === undefined) {\n    status = 0;\n  }\n\n  return status;\n};\n\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (process.env.REACT_APP_ENV === 'development' && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (process.env.REACT_APP_ENV === 'development' && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  getMessageFromResults,\n  getStatusFromResults,\n  setStateProp\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { rhelApiTypes } from '../types/rhelApiTypes';\n\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\nconst setRangedDateTime = ({ date, subtract, measurement }) => ({\n  startDate: moment\n    .utc(date)\n    .startOf(measurement)\n    .subtract(subtract, measurement)\n    .toDate(),\n  endDate: moment\n    .utc(date)\n    .startOf(measurement)\n    .toDate()\n});\n\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\n\n/**\n * Return a range of time based on granularity.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst GRANULARITY_TYPES = rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES;\n\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime\n};\n","import { reduxTypes, rhelTypes } from '../types';\nimport { rhelApiTypes } from '../../types/rhelApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { dateHelpers } from '../../common/dateHelpers';\n\nconst initialState = {\n  graphData: {\n    usage: []\n  },\n  error: false,\n  errorStatus: null,\n  errorMessage: null,\n  pending: false,\n  fulfilled: false\n};\n\nconst rhelGraphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.REJECTED_ACTION(rhelTypes.GET_GRAPH_REPORT):\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          error: action.error,\n          errorMessage: reduxHelpers.getMessageFromResults(action.payload),\n          errorStatus: reduxHelpers.getStatusFromResults(action.payload)\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.PENDING_ACTION(rhelTypes.GET_GRAPH_REPORT):\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          pending: true\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(rhelTypes.GET_GRAPH_REPORT):\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          graphData: {\n            usage: action.payload.data[rhelApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA] || []\n          },\n          fulfilled: true\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxTypes.rhel.SET_GRAPH_RHEL_GRANULARITY:\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          graphGranularity: action.graphGranularity,\n          ...dateHelpers.getRangedDateTime(action.graphGranularity)\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nrhelGraphReducer.initialState = initialState;\n\nexport { rhelGraphReducer as default, initialState, rhelGraphReducer };\n","const initialState = {\n  view: {\n    data: [],\n    error: false,\n    errorStatus: null,\n    errorMessage: null,\n    pending: false,\n    fulfilled: false\n  }\n};\n\nconst rhelViewReducer = (state = initialState) => state;\n\nrhelViewReducer.initialState = initialState;\n\nexport { rhelViewReducer as default, initialState, rhelViewReducer };\n","import { userTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\nconst initialState = {\n  session: {\n    error: false,\n    errorMessage: null,\n    errorStatus: null,\n    pending: false,\n    fulfilled: false,\n    authorized: false,\n    locale: null\n  }\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.REJECTED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          error: action.error,\n          errorMessage: reduxHelpers.getMessageFromResults(action.payload),\n          errorStatus: reduxHelpers.getStatusFromResults(action.payload),\n          locale: state.session.locale\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.PENDING_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: state.session.locale,\n          pending: true\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          authorized: true,\n          fulfilled: true,\n          locale: state.session.locale,\n          username: action.username\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { combineReducers } from 'redux';\nimport rhelGraphReducer from './rhelGraphReducer';\nimport rhelViewReducer from './rhelViewReducer';\nimport userReducer from './userReducer';\n\nconst reducers = {\n  rhelGraph: rhelGraphReducer,\n  rhelView: rhelViewReducer,\n  user: userReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport { reduxReducers as default, reduxReducers, rhelGraphReducer, rhelViewReducer, userReducer };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","const serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\nexport { serviceConfig as default, serviceConfig };\n","import axios from 'axios';\nimport serviceConfig from './config';\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {ForceStatus} 200\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {Enum} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {Enum} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {Object} links\n * @apiSuccess {Object} meta\n * @apiSuccess {Enum} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {Enum} meta.product\n * - RHEL\n * @apiSuccess {Number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"instance_count\": 10,\n *           \"cores\": 20,\n *           \"sockets\": 20,\n *           \"sockets_threshold\": 30\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"instance_count\": 12,\n *           \"cores\": 24,\n *           \"sockets\": 24,\n *           \"sockets_threshold\": 30\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"instance_count\": 14,\n *           \"cores\": 28,\n *           \"sockets\": 28,\n *           \"sockets_threshold\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"sockets\": 32,\n *           \"sockets_threshold\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"instance_count\": 18,\n *           \"cores\": 36,\n *           \"sockets\": 36,\n *           \"sockets_threshold\": 50\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"instance_count\": 20,\n *           \"cores\": 40,\n *           \"sockets\": 40,\n *           \"sockets_threshold\": 50\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"instance_count\": 22,\n *           \"cores\": 44,\n *           \"sockets\": 44,\n *           \"sockets_threshold\": 50\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"sockets\": 48,\n *           \"sockets_threshold\": 50\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"instance_count\": 26,\n *           \"cores\": 52,\n *           \"sockets\": 52,\n *           \"sockets_threshold\": 50\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"instance_count\": 28,\n *           \"cores\": 56,\n *           \"sockets\": 56,\n *           \"sockets_threshold\": 50\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"instance_count\": 30,\n *           \"cores\": 60,\n *           \"sockets\": 60,\n *           \"sockets_threshold\": 70\n *         },\n *         {\n *           \"date\": \"2019-07-31T00:00:00Z\",\n *           \"instance_count\": 32,\n *           \"cores\": 64,\n *           \"sockets\": 64,\n *           \"sockets_threshold\": 70\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-05-26T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-02T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-09T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-16T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-23T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-30T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"sockets\": 12\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-01-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-02-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-03-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-04-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-05-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"sockets\": 48\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} QUARTERLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-01-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"sockets\": 48\n *         },\n *         {\n *           \"date\": \"2018-04-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2018-07-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2018-10-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"sockets\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 4,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"quarterly\"\n *       }\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getGraphReportsRhsm = (params = {}) =>\n  axios(\n    serviceConfig({\n      url: process.env.REACT_APP_SERVICES_RHSM_REPORT_RHEL,\n      params\n    })\n  );\n\nconst rhelServices = { getGraphReportsRhsm };\n\nexport { rhelServices as default, rhelServices, getGraphReportsRhsm };\n","import { rhelTypes } from '../types';\nimport rhelServices from '../../services/rhelServices';\n\nconst getGraphReports = (query = {}) => dispatch =>\n  dispatch({\n    type: rhelTypes.GET_GRAPH_REPORT,\n    payload: rhelServices.getGraphReportsRhsm(query)\n  });\n\nexport { getGraphReports as default, getGraphReports };\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport { helpers } from '../common/helpers';\n\nconst authorizeUser = () => {\n  let returnMethod = helpers.noopPromise;\n\n  try {\n    if (!helpers.DEV_MODE) {\n      returnMethod = window.insights.chrome.auth.getUser;\n    }\n  } catch (e) {\n    if (!helpers.TEST_MODE) {\n      console.warn(`{ getUser } = insights.chrome.auth: ${e.message}`);\n    }\n  }\n\n  return returnMethod;\n};\n\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\nconst getLocale = () => {\n  const defaultLocale = {\n    value: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n    key: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC\n  };\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser };\n\nexport { userServices as default, userServices, authorizeUser, getLocale, logoutUser };\n","import { userTypes } from '../types';\nimport userService from '../../services/userServices';\n\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userService.authorizeUser()\n  });\n\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userService.getLocale()\n});\n\nexport { authorizeUser, getLocale };\n","import * as rhelActions from './rhelActions';\nimport * as userActions from './userActions';\n\nconst actions = {\n  rhel: rhelActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, rhelActions, userActions };\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\nimport { helpers } from '../common/helpers';\n\nconst connectTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )((!helpers.TEST_MODE && withTranslation()(component)) || component);\n\nconst connectRouterTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connectTranslate(mapStateToProps, mapDispatchToProps)(component));\n\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(component)\n  );\n\nexport {\n  connect,\n  connectRouter,\n  connectRouterTranslate,\n  connectTranslate,\n  reduxActions,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  store\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options } = this.props;\n\n    if (!_isEqual(prevProps.options, options)) {\n      this.formatOptions();\n    }\n  }\n\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected = activateOptions.includes(convertedOption.value);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, placeholder, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isExpanded={isExpanded}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(option.title)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  placeholder: PropTypes.string,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  selectedOptions: null,\n  placeholder: 'Select option',\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\nconst translate = (str, placeholder = null) =>\n  (!helpers.TEST_MODE && i18next.t(str, placeholder)) || helpers.noopTranslate(str, placeholder);\n\n/**\n * ToDo: reevaluate the \"I18nextProvider\" on package update.\n * Appears to have timing issues, and subsequent firings of the\n * ajax/xhr setup. Reverting it to just a function call that populates behind\n * the scenes appears more predictable.\n */\nclass I18n extends React.Component {\n  componentDidMount() {\n    this.i18nInit();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { locale } = this.props;\n\n    if (locale !== prevProps.locale) {\n      this.i18nInit();\n    }\n  }\n\n  i18nInit() {\n    const { fallbackLng, loadPath, locale } = this.props;\n\n    i18next\n      .use(XHR)\n      .use(initReactI18next)\n      .init({\n        backend: {\n          loadPath\n        },\n        fallbackLng,\n        lng: locale,\n        debug: !helpers.PROD_MODE,\n        ns: ['default'],\n        defaultNS: 'default',\n        react: {\n          useSuspense: false\n        }\n      });\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return <React.Fragment>{children}</React.Fragment>;\n  }\n}\n\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, translate };\n","import moment from 'moment';\nimport { rhelApiTypes } from '../types/rhelApiTypes';\nimport { translate } from '../components/i18n/i18n';\n\nconst GRANULARITY_TYPES = rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES;\n\n/**\n * Chart Date Format (used in axis and tooltips)\n */\nconst chartDateDayFormatShort = 'MMM D';\nconst chartDateDayFormat = 'MMM D YYYY';\n\nconst chartDateMonthFormatShort = 'MMM';\nconst chartDateMonthFormat = 'MMM YYYY';\n\nconst chartDateQuarterFormatShort = 'MMM';\nconst chartDateQuarterFormat = 'MMM YYYY';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return translated labels based on granularity.\n *\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {string} tooltipLabel\n * @returns {Object}\n */\nconst getGraphLabels = ({ granularity, tooltipLabel }) => {\n  const labels = {\n    label: tooltipLabel\n  };\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      labels.previousLabel = translate('curiosity-graph.tooltipPreviousLabelWeekly');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      labels.previousLabel = translate('curiosity-graph.tooltipPreviousLabelMonthly');\n      break;\n    case GRANULARITY_TYPES.QUARTERLY:\n      labels.previousLabel = translate('curiosity-graph.tooltipPreviousLabelQuarterly');\n      break;\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      labels.previousLabel = translate('curiosity-graph.tooltipPreviousLabelDaily');\n      break;\n  }\n\n  return labels;\n};\n\n/**\n * Return a time allotment based on granularity\n *\n * @param {string} granularity enum based on rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getGranularityDateType = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return 'weeks';\n    case GRANULARITY_TYPES.MONTHLY:\n      return 'months';\n    case GRANULARITY_TYPES.QUARTERLY:\n      return 'quarters';\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return 'days';\n  }\n};\n\n/**\n * Apply label formatting\n *\n * @param {number} data\n * @param {number} previousData\n * @param {string} formattedDate\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {string} tooltipLabel\n * @returns {string}\n */\nconst getLabel = ({ data, previousData, formattedDate, granularity, tooltipLabel }) => {\n  const { label, previousLabel } = getGraphLabels({ granularity, tooltipLabel });\n  const previousCount = data - previousData;\n  const updatedLabel = `${data} ${label} ${formattedDate}`;\n\n  if (previousData === null || previousCount === 0) {\n    return updatedLabel;\n  }\n\n  return `${updatedLabel}\\n ${previousCount > -1 ? '+' : ''}${previousCount} ${previousLabel}`;\n};\n\n/**\n * Apply Threshold Label formatting\n * @param {number} yValue the yaxis value\n * @param {string} tooltipThresholdLabel the threshold label\n */\nconst getThresholdLabel = ({ yValue, tooltipThresholdLabel }) => {\n  return `${tooltipThresholdLabel}: ${yValue}`;\n};\n\n// ToDo: when the API returns filler date values \"fillFormatChartData\" should be updated\n/**\n * Fill missing dates, and format graph data\n *\n * @param {Array} data\n * @param {Date} endDate\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {Date} startDate\n * @param {string} tooltipLabel\n * @param {string} tooltipThresholdLabel\n * @returns {Object}\n */\nconst fillFormatChartData = ({ data, endDate, granularity, startDate, tooltipLabel, tooltipThresholdLabel }) => {\n  const granularityType = getGranularityDateType(granularity);\n  const granularityTick = getChartXAxisLabelIncrement(granularity);\n  const endDateStartDateDiff = moment(endDate).diff(startDate, granularityType);\n  const chartData = [];\n  const chartDataThresholds = [];\n\n  let isThreshold = false;\n  let previousData = null;\n  let previousYear = null;\n\n  for (let i = 0; i <= endDateStartDateDiff; i++) {\n    const momentDate = moment\n      .utc(startDate)\n      .add(i, granularityType)\n      .startOf(granularityType);\n    const stringDate = momentDate.toISOString();\n    const year = parseInt(momentDate.year(), 10);\n\n    const checkTick = i % granularityTick === 0;\n    const isNewYear = i !== 0 && checkTick && year !== previousYear;\n    let formattedDate;\n\n    if (granularityType === 'quarters') {\n      formattedDate = isNewYear\n        ? momentDate.format(chartDateQuarterFormat)\n        : momentDate.format(chartDateQuarterFormatShort);\n    } else if (granularityType === 'months') {\n      formattedDate = isNewYear\n        ? momentDate.format(chartDateMonthFormat)\n        : momentDate.format(chartDateMonthFormatShort);\n    } else {\n      formattedDate = isNewYear ? momentDate.format(chartDateDayFormat) : momentDate.format(chartDateDayFormatShort);\n    }\n\n    const yAxis = (data[stringDate] && data[stringDate].data) || 0;\n    const yAxisThreshold = (data[stringDate] && data[stringDate].dataThreshold) || 0;\n\n    isThreshold = isThreshold || yAxisThreshold > 0;\n\n    const labelData = {\n      data: yAxis,\n      previousData,\n      formattedDate,\n      granularity,\n      tooltipLabel\n    };\n\n    chartDataThresholds.push({\n      x: chartData.length,\n      y: yAxisThreshold,\n      tooltip: getThresholdLabel({ yValue: yAxisThreshold, tooltipThresholdLabel })\n    });\n\n    chartData.push({\n      x: chartData.length,\n      y: yAxis,\n      tooltip: getLabel(labelData),\n      xAxisLabel:\n        granularityType === 'months' || granularityType === 'quarters'\n          ? formattedDate.replace(/\\s/, '\\n')\n          : formattedDate\n    });\n\n    previousData = yAxis;\n\n    if (checkTick && year !== previousYear) {\n      previousYear = year;\n    }\n  }\n\n  return { chartData, chartDataThresholds: (isThreshold && chartDataThresholds) || [] };\n};\n\n/**\n * ToDo: the y axis should be a total of all y axis values, an aspect of threshold\n * When multiple data facets are being displayed \"convertChartData\" should be cleaned up.\n */\n/**\n * Convert graph data to consumable format\n *\n * @param {Array} data\n * @param {string} dataFacet the response property used for the y axis\n * @param {string} dataThresholdFacet the response property for the threshold line indicator\n * @param {string} tooltipLabel the tooltip label\n * @param {string} tooltipThresholdLabel the tooltip threshold label\n * @param {date} startDate\n * @param {date} endDate\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {Object} Object array result converted { chartData: {...} chartDomain {...} }\n */\nconst convertChartData = ({\n  data,\n  dataFacet,\n  dataThresholdFacet,\n  tooltipLabel,\n  tooltipThresholdLabel,\n  startDate,\n  endDate,\n  granularity\n}) => {\n  const formattedData = {};\n\n  (data || []).forEach(value => {\n    if (value) {\n      const stringDate = moment\n        .utc(value[rhelApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_DATE])\n        .startOf('day')\n        .toISOString();\n      formattedData[stringDate] = {\n        data: Number.parseInt(value[dataFacet], 10),\n        dataThreshold: Number.parseInt(value[dataThresholdFacet], 10)\n      };\n    }\n  });\n\n  const { chartData, chartDataThresholds } = fillFormatChartData({\n    data: formattedData,\n    endDate,\n    granularity,\n    startDate,\n    tooltipLabel,\n    tooltipThresholdLabel\n  });\n\n  return {\n    chartData,\n    chartDataThresholds,\n    chartXAxisLabelIncrement: getChartXAxisLabelIncrement(granularity)\n  };\n};\n\nconst graphHelpers = {\n  fillFormatChartData,\n  convertChartData,\n  getGranularityDateType,\n  getGraphLabels,\n  getChartXAxisLabelIncrement,\n  getLabel\n};\n\nexport {\n  graphHelpers as default,\n  graphHelpers,\n  fillFormatChartData,\n  convertChartData,\n  getGranularityDateType,\n  getGraphLabels,\n  getChartXAxisLabelIncrement,\n  getLabel\n};\n","import { translate } from '../i18n/i18n';\nimport { rhelApiTypes } from '../../types/rhelApiTypes';\n\nconst GRANULARITY_TYPES = rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES;\n\nconst getDateMenuOptionsType = () => [\n  { title: translate('curiosity-graph.dropdownDaily', 'Daily'), value: GRANULARITY_TYPES.DAILY },\n  { title: translate('curiosity-graph.dropdownWeekly', 'Weekly'), value: GRANULARITY_TYPES.WEEKLY },\n  { title: translate('curiosity-graph.dropdownMonthly', 'Monthly'), value: GRANULARITY_TYPES.MONTHLY },\n  { title: translate('curiosity-graph.dropdownQuarterly', 'Quarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n];\n\nconst rhelGraphCardTypes = {\n  getDateMenuOptions: getDateMenuOptionsType\n};\n\nexport { rhelGraphCardTypes as default, rhelGraphCardTypes, getDateMenuOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Chart,\n  ChartAxis,\n  ChartLegend,\n  ChartVoronoiContainer,\n  ChartStack,\n  ChartThreshold,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  containerRef = React.createRef();\n\n  componentDidMount() {\n    this.onResizeContainer();\n    window.addEventListener('resize', this.onResizeContainer);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  onResizeContainer = () => {\n    const containerElement = this.containerRef.current;\n\n    if (containerElement && containerElement.clientWidth) {\n      this.setState({ chartWidth: containerElement.clientWidth });\n    }\n  };\n\n  setChartTicks() {\n    const { xAxisLabelIncrement, yAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n    let yAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n\n      if (dataSet.yAxisLabelUseDataSet) {\n        yAxisDataSet = dataSet.data;\n      }\n    });\n\n    if (xAxisDataSet.find(value => value.xAxisLabel && value.xAxisLabel)) {\n      xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n        (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n        []\n      );\n      xAxisProps.xAxisTickFormat = tickValue =>\n        (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n    }\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tickValue => xAxisTickFormat({ dataSet: _cloneDeep(xAxisDataSet), tick: tickValue });\n    }\n\n    if (yAxisDataSet.find(value => value.yAxisLabel && value.yAxisLabel)) {\n      yAxisProps.yAxisTickValues = yAxisDataSet.reduce(\n        (acc, current, index) => (index % yAxisLabelIncrement === 0 ? acc.concat(current.y) : acc),\n        []\n      );\n      yAxisProps.yAxisTickFormat = tickValue =>\n        (yAxisDataSet[tickValue] && yAxisDataSet[tickValue].yAxisLabel) || tickValue;\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tickValue => yAxisTickFormat({ dataSet: _cloneDeep(yAxisDataSet), tick: tickValue });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  getChartTicks() {\n    const { xAxisFixLabelOverlap, yAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickValues, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true,\n      fixLabelOverlap: yAxisFixLabelOverlap\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickValues) {\n      updatedYAxisProps.tickValues = yAxisTickValues;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      isYAxisTicks: !!yAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  // ToDo: the domain range needs to be update when additional datasets are added\n  getChartDomain({ isXAxisTicks, isYAxisTicks }) {\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    dataSets.forEach(dataSet => {\n      dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n      dataSet.data.forEach(value => {\n        dataSetMaxY = value.y > dataSetMaxY ? value.y : dataSetMaxY;\n      });\n\n      if (dataSet.thresholds) {\n        dataSet.thresholds.forEach(value => {\n          dataSetMaxY = value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    if (!isYAxisTicks) {\n      const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n      generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n    }\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  getChartLegend() {\n    const { dataSets } = this.props;\n    const legendData = [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.legendThreshold) {\n        legendData.push({ symbol: { type: 'threshold' }, ...dataSet.legendThreshold });\n      }\n\n      if (dataSet.legendData) {\n        legendData.push(dataSet.legendData);\n      }\n    });\n\n    return {\n      legendData,\n      legendOrientation: 'horizontal',\n      legendPosition: 'bottom-left',\n      legendComponent: <ChartLegend borderPadding={{ top: 20 }} />\n    };\n  }\n\n  render() {\n    const { chartWidth } = this.state;\n    const { dataSets, padding } = this.props;\n\n    const { isXAxisTicks, isYAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain } = this.getChartDomain({ isXAxisTicks, isYAxisTicks });\n    const chartLegendProps = this.getChartLegend();\n    const chartProps = { padding, ...chartLegendProps, ...chartDomain };\n\n    chartProps.containerComponent = (\n      <ChartVoronoiContainer constrainToVisibleArea labels={({ datum }) => datum.tooltip} />\n    );\n\n    return (\n      <div ref={this.containerRef}>\n        <Chart width={chartWidth} {...chartProps}>\n          <ChartAxis {...xAxisProps} />\n          <ChartAxis {...yAxisProps} />\n          {(dataSets &&\n            dataSets.length &&\n            dataSets.map(\n              dataSet =>\n                (dataSet.thresholds && dataSet.thresholds.length && (\n                  /** fixme: split this out into a new wrapper called ChartThreshold in PF React */\n                  <ChartThreshold\n                    interpolation={dataSet.thresholdInterpolation || 'step'}\n                    key={helpers.generateId()}\n                    data={dataSet.thresholds}\n                    style={dataSet.thresholdStyle || {}}\n                  />\n                )) ||\n                null\n            )) ||\n            null}\n          <ChartStack>\n            {(dataSets &&\n              dataSets.length &&\n              dataSets.map(\n                dataSet =>\n                  (dataSet.data && dataSet.data.length && (\n                    <PfChartArea\n                      interpolation={dataSet.dataInterpolation || 'catmullRom'}\n                      key={helpers.generateId()}\n                      data={dataSet.data}\n                    />\n                  )) ||\n                  null\n              )) ||\n              null}\n          </ChartStack>\n        </Chart>\n      </div>\n    );\n  }\n}\n\nChartArea.propTypes = {\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number,\n          y: PropTypes.number,\n          tooltip: PropTypes.string,\n          xAxisLabel: PropTypes.string,\n          yAxisLabel: PropTypes.string\n        })\n      ),\n      dataInterpolation: PropTypes.string,\n      threshold: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number,\n          y: PropTypes.number\n        })\n      ),\n      thresholdInterpolation: PropTypes.string,\n      thresholdStyle: PropTypes.object,\n      legendData: PropTypes.shape({\n        name: PropTypes.string\n      }),\n      legendThreshold: PropTypes.shape({\n        name: PropTypes.string\n      }),\n      xAxisLabelUseDataSet: PropTypes.bool,\n      yAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisFixLabelOverlap: PropTypes.bool,\n  yAxisLabelIncrement: PropTypes.number,\n  yAxisTickFormat: PropTypes.func\n};\n\nChartArea.defaultProps = {\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisFixLabelOverlap: false,\n  yAxisLabelIncrement: 1,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport numeral from 'numeral';\nimport { Card, CardHead, CardActions, CardBody } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport { Select } from '../select/select';\nimport { connectTranslate, reduxActions, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers, graphHelpers } from '../../common';\nimport { rhelApiTypes } from '../../types/rhelApiTypes';\nimport { rhelGraphCardTypes } from './rhelGraphCardTypes';\nimport ChartArea from '../chartArea/chartArea';\n\nconst GRANULARITY_TYPES = rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES;\n\nclass RhelGraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphGranularity } = this.props;\n\n    if (graphGranularity !== prevProps.graphGranularity) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  onUpdateGraphData = () => {\n    const { getGraphReports, graphGranularity, startDate, endDate } = this.props;\n\n    getGraphReports({\n      [rhelApiTypes.RHSM_API_QUERY_GRANULARITY]: graphGranularity,\n      [rhelApiTypes.RHSM_API_QUERY_START_DATE]: startDate.toISOString(),\n      [rhelApiTypes.RHSM_API_QUERY_END_DATE]: endDate.toISOString()\n    });\n  };\n\n  onSelect = event => {\n    const { graphGranularity } = this.props;\n    const { value } = event;\n\n    if (graphGranularity !== value) {\n      store.dispatch({\n        type: reduxTypes.rhel.SET_GRAPH_RHEL_GRANULARITY,\n        graphGranularity: value\n      });\n    }\n  };\n\n  // ToDo: evaluate show error toast on chart error\n  renderChart() {\n    const { graphData, graphGranularity, startDate, endDate, t } = this.props;\n    const { chartXAxisLabelIncrement, chartData, chartDataThresholds } = graphHelpers.convertChartData({\n      data: graphData.usage,\n      dataFacet: rhelApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_SOCKETS,\n      dataThresholdFacet: rhelApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_SOCKETS_THRESHOLD,\n      tooltipLabel: t('curiosity-graph.tooltipSockets'),\n      tooltipThresholdLabel: t('curiosity-graph.tooltipSocketsThreshold'),\n      startDate,\n      endDate,\n      granularity: graphGranularity\n    });\n\n    return (\n      <ChartArea\n        xAxisFixLabelOverlap\n        xAxisLabelIncrement={chartXAxisLabelIncrement}\n        yAxisTickFormat={({ tick }) => numeral(tick).format('0a')}\n        dataSets={[\n          {\n            data: chartData,\n            thresholds: chartDataThresholds,\n            legendThreshold: { name: t('curiosity-graph.legendSocketsThresholdLabel') },\n            legendData: { name: t('curiosity-graph.legendSocketsLabel') }\n          }\n        ]}\n      />\n    );\n  }\n\n  // ToDo: combine \"curiosity-skeleton-container\" into a single class w/ --loading and BEM style\n  render() {\n    const { error, fulfilled, graphGranularity, pending, t } = this.props;\n    const getDateMenuOptions = rhelGraphCardTypes.getDateMenuOptions();\n\n    return (\n      <Card className=\"curiosity-usage-graph fadein\">\n        <CardHead>\n          <h2>{t('curiosity-graph.heading', 'CPU socket usage')}</h2>\n          <CardActions>\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder', 'Select date range')}\n              onSelect={this.onSelect}\n              options={getDateMenuOptions}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder', 'Select date range')}\n            />\n          </CardActions>\n        </CardHead>\n        <CardBody>\n          <div className=\"curiosity-skeleton-container\">\n            {pending && (\n              <React.Fragment>\n                <Skeleton size={SkeletonSize.xs} />\n                <Skeleton size={SkeletonSize.sm} />\n                <Skeleton size={SkeletonSize.md} />\n                <Skeleton size={SkeletonSize.lg} />\n              </React.Fragment>\n            )}\n            {!pending && (fulfilled || error) && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nRhelGraphCard.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  getGraphReports: PropTypes.func,\n  graphData: PropTypes.shape({\n    usage: PropTypes.array\n  }),\n  graphGranularity: PropTypes.oneOf([\n    GRANULARITY_TYPES.DAILY,\n    GRANULARITY_TYPES.WEEKLY,\n    GRANULARITY_TYPES.MONTHLY,\n    GRANULARITY_TYPES.QUARTERLY\n  ]),\n  pending: PropTypes.bool,\n  t: PropTypes.func,\n  startDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date)\n};\n\nRhelGraphCard.defaultProps = {\n  error: false,\n  fulfilled: false,\n  getGraphReports: helpers.noop,\n  graphData: {\n    usage: []\n  },\n  graphGranularity: GRANULARITY_TYPES.DAILY,\n  pending: false,\n  t: helpers.noopTranslate,\n  startDate: dateHelpers.defaultDateTime.startDate,\n  endDate: dateHelpers.defaultDateTime.endDate\n};\n\nconst mapStateToProps = state => ({\n  ...state.rhelGraph\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getGraphReports: query => dispatch(reduxActions.rhel.getGraphReports(query))\n});\n\nconst ConnectedRhelGraphCard = connectTranslate(mapStateToProps, mapDispatchToProps)(RhelGraphCard);\n\nexport { ConnectedRhelGraphCard as default, ConnectedRhelGraphCard, RhelGraphCard };\n","import React from 'react';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { PageSection } from '@patternfly/react-core';\nimport { connectRouter } from '../../redux';\nimport RhelGraphCard from '../rhelGraphCard/rhelGraphCard';\n\nclass RhelView extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    return (\n      <React.Fragment>\n        <PageHeader>\n          <PageHeaderTitle title=\"Red Hat Enterprise Linux\" />\n        </PageHeader>\n        <PageSection>\n          <RhelGraphCard />\n        </PageSection>\n      </React.Fragment>\n    );\n  }\n}\n\nRhelView.propTypes = {};\n\nRhelView.defaultProps = {};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = () => ({});\n\nconst ConnectedRhelView = connectRouter(mapStateToProps, mapDispatchToProps)(RhelView);\n\nexport { ConnectedRhelView as default, ConnectedRhelView, RhelView };\n","import { helpers } from '../../common/helpers';\nimport RhelView from '../rhelView/rhelView';\n\n/**\n * Return an assumed dynamic route baseName directory\n * based on a predictable platform directory depth of\n * /[OPTIONAL]/[environment]/[APP NAME]\n *\n * @param pathName {string}\n * @param pathPrefix {string}\n * @return {string}\n */\nconst dynamicBaseName = ({ pathName, pathPrefix }) => {\n  const path = pathName.split('/');\n\n  path.shift();\n\n  const pathSlice = pathPrefix && new RegExp(path[0]).test(pathPrefix) ? 3 : 2;\n\n  return `/${path.slice(0, pathSlice).join('/')}`;\n};\n\nconst baseName =\n  (helpers.TEST_MODE && '/') ||\n  (helpers.DEV_MODE && '/') ||\n  dynamicBaseName({ pathName: window.location.pathname, pathPrefix: helpers.UI_DEPLOY_PATH_PREFIX });\n\n/**\n * Return array of objects that describe navigation\n * @return {array}\n */\nconst routes = [\n  {\n    title: 'Red Hat Enterprise Linux',\n    id: 'rhel',\n    to: '/rhel',\n    redirect: true,\n    component: RhelView,\n    exact: true,\n    disabled: helpers.UI_DISABLED\n  }\n];\n\nexport { routes as default, baseName, dynamicBaseName, routes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { baseName, routes } from './routerTypes';\n\nclass Router extends React.Component {\n  renderRoutes() {\n    const { routesType } = this.props;\n\n    let redirectRoot = null;\n\n    return {\n      renderRoutes: routesType.map(item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        if (item.redirect === true) {\n          redirectRoot = <Redirect to={item.to} />;\n        }\n\n        return (\n          <Route exact={item.hasParameters || item.exact} key={item.to} path={item.to} component={item.component} />\n        );\n      }),\n      redirectRoot\n    };\n  }\n\n  render() {\n    const { renderRoutes, redirectRoot } = this.renderRoutes();\n\n    return (\n      <div className=\"curiosity-content\">\n        <Switch>\n          {renderRoutes}\n          {redirectRoot}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nRouter.propTypes = {\n  routesType: PropTypes.array\n};\n\nRouter.defaultProps = {\n  routesType: routes\n};\n\nexport { Router as default, Router, baseName, routes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Page, PageSection } from '@patternfly/react-core';\n\nconst PageLayout = ({ children }) => (\n  <Page className=\"layout-pf curiosity\">\n    <PageSection noPadding>{children}</PageSection>\n  </Page>\n);\n\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nPageLayout.defaultProps = {};\n\nexport { PageLayout as default, PageLayout };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant } from '@patternfly/react-core';\nimport { BanIcon, BinocularsIcon } from '@patternfly/react-icons';\nimport { connectRouter, reduxActions } from '../../redux';\nimport { helpers } from '../../common/helpers';\nimport { routes as appRoutes } from '../router/router';\nimport PageLayout from '../pageLayout/pageLayout';\n\nclass Authentication extends Component {\n  appNav = helpers.noop;\n\n  buildNav = helpers.noop;\n\n  componentDidMount() {\n    const { appName, authorizeUser, history, insights, routes, session } = this.props;\n\n    try {\n      if (helpers.PROD_MODE || helpers.REVIEW_MODE) {\n        insights.chrome.init();\n      }\n\n      if (helpers.PROD_MODE) {\n        insights.chrome.identifyApp(appName);\n        insights.chrome.navigation(routes);\n\n        this.appNav = insights.chrome.on('APP_NAVIGATION', event => history.push(`/${event.navId}`));\n        this.buildNav = history.listen(() => insights.chrome.navigation(this.buildNavigation()));\n      }\n\n      if (!session.authorized) {\n        authorizeUser();\n      }\n    } catch (e) {\n      if (!helpers.TEST_MODE) {\n        console.warn(`{ init, identifyApp, navigation } = insights.chrome: ${e.message}`);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.appNav();\n    this.buildNav();\n  }\n\n  buildNavigation = () => {\n    const { routes } = this.props;\n    const currentPath = window.location.pathname.split('/').slice(-1)[0];\n\n    return routes.map(item => ({\n      ...item,\n      active: item.id === currentPath\n    }));\n  };\n\n  render() {\n    const { children, session } = this.props;\n\n    if (session.authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return (\n        <PageLayout>\n          <PageHeader>\n            <PageHeaderTitle title=\"&nbsp;\" />\n          </PageHeader>\n          <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n            <EmptyStateIcon icon={BinocularsIcon} />\n            <EmptyStateBody>Authenticating...</EmptyStateBody>\n          </EmptyState>\n        </PageLayout>\n      );\n    }\n\n    return (\n      <PageLayout>\n        <PageHeader>\n          <PageHeaderTitle title=\"Unauthorized\" />\n        </PageHeader>\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          <EmptyStateIcon icon={BanIcon} />\n          <EmptyStateBody>You do not have permission to access reporting. Contact your administrator.</EmptyStateBody>\n        </EmptyState>\n      </PageLayout>\n    );\n  }\n}\n\nAuthentication.propTypes = {\n  appName: PropTypes.string,\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  insights: PropTypes.shape({\n    chrome: PropTypes.shape({\n      init: PropTypes.func,\n      identifyApp: PropTypes.func,\n      navigation: PropTypes.func,\n      on: PropTypes.func\n    })\n  }),\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string\n    })\n  ),\n  session: PropTypes.shape({\n    authorized: PropTypes.bool,\n    error: PropTypes.bool,\n    errorMessage: PropTypes.string,\n    pending: PropTypes.bool\n  })\n};\n\nAuthentication.defaultProps = {\n  appName: helpers.UI_NAME,\n  authorizeUser: helpers.noop,\n  insights: window.insights,\n  routes: appRoutes,\n  session: {\n    authorized: false,\n    error: false,\n    errorMessage: '',\n    pending: false\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser())\n});\n\nconst mapStateToProps = state => ({ session: state.user.session });\n\nconst ConnectedAuthentication = connectRouter(mapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router/router';\nimport Authentication from './authentication/authentication';\nimport PageLayout from './pageLayout/pageLayout';\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n\n    getLocale();\n  }\n\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <Authentication>\n          <PageLayout>\n            <Router />\n          </PageLayout>\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { baseName } from './components/router/routerTypes';\nimport { store } from './redux';\nimport App from './components/app';\nimport './styles/index.scss';\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter basename={baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
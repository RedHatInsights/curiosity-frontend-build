{"version":3,"sources":["images/subscriptions.svg","common/helpers.js","components/select/select.js","types/rhsmApiTypes.js","common/dateHelpers.js","redux/common/reduxHelpers.js","redux/middleware/statusMiddleware.js","redux/middleware/index.js","redux/types/appTypes.js","redux/types/rhsmTypes.js","redux/types/userTypes.js","redux/types/index.js","redux/reducers/graphReducer.js","redux/reducers/viewReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store.js","services/userServices.js","services/config.js","services/rhsmServices.js","redux/actions/index.js","redux/actions/rhsmActions.js","redux/actions/userActions.js","redux/selectors/graphCardSelectors.js","redux/selectors/index.js","redux/index.js","components/i18n/i18n.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardTypes.js","components/chartArea/chartArea.js","components/graphCard/graphCard.js","components/openshiftView/openshiftView.js","components/rhelView/rhelView.js","components/tourView/tourView.js","components/router/routerTypes.js","components/router/routerHelpers.js","components/router/redirect.js","components/router/router.js","components/pageLayout/pageLayout.js","components/authentication/authentication.js","components/app.js","index.js"],"names":["module","exports","helpers","generateId","prefix","Math","ceil","random","isPromise","obj","Object","prototype","toString","call","noop","Function","noopPromise","Promise","resolve","noopTranslate","key","value","DEV_MODE","process","PROD_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LOGGER_ID","UI_NAME","UI_PATH","UI_VERSION","window","Select","state","isExpanded","options","selected","onSelect","event","titleSelection","props","id","name","variant","updatedOptions","optionsIndex","findIndex","option","title","SelectVariant","single","forEach","index","updateSelected","filter","opt","map","setState","mockUpdatedOptions","_cloneDeep","mockTarget","selectedIndex","type","mockEvent","target","currentTarget","persist","onToggle","expanded","this","formatOptions","prevProps","_isEqual","selectedOptions","_isPlainObject","keys","activateOptions","convertedOption","text","textContent","label","includes","find","ariaLabel","className","isDisabled","placeholder","pfSelectOptions","length","aria-label","selections","placeholderText","btoa","data-value","data-title","React","Component","defaultProps","RHSM_API_PATH_ID_TYPES","RHEL","COMPUTE_NODE","DESKTOP","SERVER","WORKSTATION","ARM","IBM_POWER","IBM_Z","X86","OPENSHIFT","RHSM_API_QUERY_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","rhsmApiTypes","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","CORES","DATE","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_CAPACITY_META","RHSM_API_RESPONSE_CAPACITY_META_TYPES","COUNT","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","HAS_DATA","RHSM_API_RESPONSE_PRODUCTS_META","RHSM_API_RESPONSE_PRODUCTS_META_TYPES","RHSM_API_QUERY_GRANULARITY","RHSM_API_QUERY_LIMIT","RHSM_API_QUERY_OFFSET","RHSM_API_QUERY_START_DATE","RHSM_API_QUERY_END_DATE","getCurrentDate","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","date","subtract","measurement","startDate","moment","utc","startOf","toDate","endDate","endOf","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","getMessageFromResults","results","updatedResults","payload","status","_get","statusResponse","statusText","messageResponse","message","dataResponse","data","formattedStatus","trim","JSON","stringify","getStatusFromResults","setStateProp","prop","initialState","reset","reduxHelpers","types","action","expandedTypes","val","Array","isArray","subVal","push","ref","RegExp","test","whichType","baseState","error","errorMessage","fulfilled","metaData","meta","metaId","metaQuery","query","pending","update","setId","errorStatus","headers","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","config","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","store","dispatch","next","httpStatus","payloadConfig","range","floor","statusMiddleware","promiseMiddleware","notificationsMiddleware","appTypes","STATUS_4XX","STATUS_5XX","rhsmTypes","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_RHSM","SET_GRAPH_GRANULARITY_RHSM","userTypes","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","app","rhsm","user","capacity","component","report","graphReducer","graphGranularity","view","viewReducer","session","authorized","locale","userReducer","username","reducers","notifications","graph","reduxReducers","combineReducers","createStore","applyMiddleware","getLocaleFromCookie","Cookies","get","replace","LocaleCode","getLanguageName","userServices","authorizeUser","a","response","getUserData","insights","chrome","auth","getUser","emulatedError","Error","reject","getLocale","defaultLocale","logoutUser","serviceConfig","passedConfig","timeout","serviceCall","axios","rhsmServices","params","url","reduxActions","getGraphCapacity","rejected","description","getGraphReports","userService","graphCardCache","graphCardSelector","createSelector","reportGranularity","capacityGranularity","reportProductId","productId","cachedGranularity","initialLoad","updatedData","graphData","cores","hypervisorCores","hypervisorSockets","physicalCores","physicalSockets","sockets","threshold","productsData","thresholdData","x","y","Number","parseInt","item","itemDate","isSame","checkThresholdDate","reduxSelectors","graphCard","makeGraphCard","connectTranslate","mapStateToProps","mapDispatchToProps","connect","withTranslation","translate","str","i18next","t","I18n","isLoaded","i18nInit","fallbackLng","loadPath","use","XHR","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","children","Fragment","getTooltipDate","formattedDateTooltip","momentDate","format","graphCardHelpers","getChartXAxisLabelIncrement","getTooltips","itemsByKey","product","dateString","thresholdString","dataFacets","join","xAxisTickFormat","tick","previousDate","formattedDate","isNewYear","year","yAxisTickFormat","numbro","average","mantissa","optionalMantissa","graphCardTypes","optionsType","ChartArea","chartWidth","containerRef","createRef","onResizeContainer","containerElement","current","clientWidth","addEventListener","removeEventListener","dataSets","tooltips","updatedDataSets","items","i","_tooltip","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","floored","pow","log10","maxY","chartDomain","legendData","legendLabel","legendDataSettings","symbol","legendSymbolType","isThreshold","themeColor","fill","stroke","legendOrientation","legendPosition","legendComponent","ChartLegend","borderPadding","top","stacked","setDataSets","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","style","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","chartProps","getChartLegend","getContainerComponent","Chart","duration","width","ChartAxis","renderChart","ChartStack","VictoryVoronoiCursorContainer","createContainer","containerComponentProps","constrainToVisibleArea","cursorDimension","voronoiDimension","voronoiPadding","mouseFollowTooltips","labelComponent","ChartTooltip","pointerLength","centerOffset","tooltip","flyoutWidth","labels","datum","childName","undefined","containerComponent","height","bottom","left","right","GraphCard","onUpdateGraphData","toISOString","filterGraphData","translateProduct","chartAreaProps","filtered","tempFiltered","onLoad","chartColorGreenDark","assign","filteredGraphData","cardTitle","selectOptionsType","getGranularityOptions","Card","CardHead","CardActions","CardBody","size","SkeletonSize","xs","sm","md","lg","ConnectedGraphCard","getGraphCard","OpenshiftView","routeDetail","routeItem","PageSection","pathParameter","chartColorBlueLight","chartColorBlueDark","errorRoute","TranslatedOpenshiftView","RhelView","chartColorCyanLight","chartColorCyanDark","TranslatedRhelView","TourView","EmptyState","EmptyStateVariant","full","src","subscriptionsSvg","alt","appName","aria-hidden","Title","headingLevel","EmptyStateBody","Button","EmptyStateSecondaryActions","href","TranslatedTourView","platformRedirect","path","routes","to","redirect","exact","render","disabled","activateOnError","navigation","default","routerTypes","dynamicBaseName","pathName","pathPrefix","split","shift","pathSlice","slice","baseName","location","pathname","routerHelpers","getErrorRoute","route","getRouteDetail","navigationItem","Redirect","history","isRedirect","isReplace","navigate","p","RoutedRedirect","withRouter","Router","activateOnErrorRoute","redirectRoot","renderRoutes","hasParameters","routeProps","match","PageLayout","Page","noPadding","Authentication","appNav","buildNav","buildNavigation","currentPath","active","identifyApp","on","navId","listen","e","console","warn","redirectUrl","EmptyStateIcon","icon","BinocularsIcon","BanIcon","ConnectedAuthentication","App","ConnectedApp","connectRouter","basename","document","getElementById"],"mappings":"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","file":"static/js/main.669c48ff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/subscriptions.0ad5eae0.svg\";","const generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\nconst isPromise = obj => Object.prototype.toString.call(obj) === '[object Promise]';\n\nconst noop = Function.prototype;\n\nconst noopPromise = Promise.resolve({});\n\nconst noopTranslate = (key, value) => `t(${key}${(value && `, ${value}`) || ''})`;\n\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\nconst helpers = {\n  generateId,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LOGGER_ID,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION\n};\n\nwindow[UI_LOGGER_ID] = { ...helpers };\n\nexport { helpers as default, helpers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options } = this.props;\n\n    if (!_isEqual(prevProps.options, options)) {\n      this.formatOptions();\n    }\n  }\n\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected = activateOptions.includes(convertedOption.value);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, placeholder, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isExpanded={isExpanded}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(option.title)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  placeholder: PropTypes.string,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  selectedOptions: null,\n  placeholder: 'Select option',\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","const RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\nconst RHSM_API_RESPONSE_CAPACITY_META = 'meta';\nconst RHSM_API_RESPONSE_CAPACITY_META_TYPES = {\n  COUNT: 'count'\n};\n\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_DATA: 'has_data'\n};\nconst RHSM_API_RESPONSE_PRODUCTS_META = 'meta';\nconst RHSM_API_RESPONSE_PRODUCTS_META_TYPES = {\n  COUNT: 'count'\n};\n\nconst RHSM_API_PATH_ID_TYPES = {\n  RHEL: 'RHEL',\n  COMPUTE_NODE: 'RHEL Compute Node',\n  DESKTOP: 'RHEL Desktop',\n  SERVER: 'RHEL Server',\n  WORKSTATION: 'RHEL Workstation',\n  ARM: 'RHEL for ARM',\n  IBM_POWER: 'RHEL for IBM Power',\n  IBM_Z: 'RHEL for IBM z',\n  X86: 'RHEL for x86',\n  OPENSHIFT: 'OpenShift Container Platform'\n};\n\nconst RHSM_API_QUERY_GRANULARITY = 'granularity';\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\nconst RHSM_API_QUERY_LIMIT = 'limit';\nconst RHSM_API_QUERY_OFFSET = 'offset';\nconst RHSM_API_QUERY_START_DATE = 'beginning';\nconst RHSM_API_QUERY_END_DATE = 'ending';\n\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\n\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\nconst setRangedDateTime = ({ date, subtract, measurement }) => ({\n  startDate: moment\n    .utc(date)\n    .startOf(measurement)\n    .subtract(subtract, measurement)\n    .toDate(),\n  endDate: moment\n    .utc(date)\n    .startOf(measurement)\n    .endOf('days')\n    .toDate()\n});\n\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\n\n/**\n * Return a range of time based on granularity.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\nconst getMessageFromResults = results => {\n  const updatedResults = results.payload || results;\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = _get(updatedResults, 'response.status', updatedResults.status);\n  const statusResponse = _get(updatedResults, 'response.statusText', updatedResults.statusText);\n  const messageResponse = _get(updatedResults, 'response.message', updatedResults.message);\n  const dataResponse = _get(updatedResults, 'response.data', updatedResults.data);\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 300 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\nconst getStatusFromResults = results => {\n  const updatedResults = results.payload || results;\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  const status = _get(updatedResults, 'response.status', updatedResults.status);\n\n  return status || 0;\n};\n\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (process.env.REACT_APP_ENV === 'development' && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (process.env.REACT_APP_ENV === 'development' && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    metaData: action.meta && action.meta.data,\n    metaId: action.meta && action.meta.id,\n    metaQuery: action.meta && action.meta.query,\n    pending: false,\n    update: false\n  };\n\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          error: true,\n          errorMessage: getMessageFromResults(action),\n          errorStatus: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: action.payload.headers && action.payload.headers.date,\n          data: (action.payload && action.payload.data) || {},\n          fulfilled: true\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  generatedPromiseActionReducer,\n  getMessageFromResults,\n  getStatusFromResults,\n  setStateProp\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { reduxHelpers } from '../common/reduxHelpers';\n\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              status: httpStatus,\n              config: payloadConfig,\n              range,\n              message\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              status: httpStatus,\n              config: payloadConfig,\n              range,\n              message\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { statusMiddleware } from './statusMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 5000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  promiseMiddleware,\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","const GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_RHSM = 'GET_GRAPH_REPORT_RHSM';\nconst SET_GRAPH_GRANULARITY_RHSM = 'SET_GRAPH_GRANULARITY_RHSM';\n\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  SET_GRAPH_GRANULARITY_RHSM\n};\n\nexport { rhsmTypes as default, rhsmTypes, GET_GRAPH_CAPACITY_RHSM, GET_GRAPH_REPORT_RHSM, SET_GRAPH_GRANULARITY_RHSM };\n","const USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\nconst userTypes = { USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport { userTypes as default, userTypes, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n","import { appTypes } from './appTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  rhsm: rhsmTypes,\n  user: userTypes\n};\n\nexport { reduxTypes as default, reduxTypes, appTypes, rhsmTypes, userTypes };\n","import { reduxTypes, rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { dateHelpers } from '../../common/dateHelpers';\n\nconst initialState = {\n  capacity: {},\n  component: {},\n  report: {}\n};\n\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM:\n      return reduxHelpers.setStateProp(\n        'component',\n        {\n          graphGranularity: action.graphGranularity,\n          ...dateHelpers.getRangedDateTime(action.graphGranularity)\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'capacity', type: rhsmTypes.GET_GRAPH_CAPACITY_RHSM },\n          { ref: 'report', type: rhsmTypes.GET_GRAPH_REPORT_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","const initialState = {\n  view: {\n    data: [],\n    error: false,\n    errorStatus: null,\n    errorMessage: null,\n    pending: false,\n    fulfilled: false\n  }\n};\n\nconst viewReducer = (state = initialState) => state;\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { appTypes, userTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\nconst initialState = {\n  session: {\n    error: false,\n    errorMessage: null,\n    errorStatus: null,\n    pending: false,\n    fulfilled: false,\n    authorized: false,\n    locale: null\n  }\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.REJECTED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          error: action.error,\n          errorMessage: reduxHelpers.getMessageFromResults(action),\n          errorStatus: reduxHelpers.getStatusFromResults(action),\n          locale: state.session.locale\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.PENDING_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: state.session.locale,\n          pending: true\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          authorized: true,\n          fulfilled: true,\n          locale: state.session.locale,\n          username: action.username\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      if (action.status === 401 || action.status === 403) {\n        return reduxHelpers.setStateProp(\n          'session',\n          {\n            error: true,\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            errorStatus: reduxHelpers.getStatusFromResults(action),\n            locale: state.session.locale\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport viewReducer from './viewReducer';\nimport userReducer from './userReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  view: viewReducer,\n  user: userReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport { reduxReducers as default, reduxReducers, graphReducer, viewReducer, userReducer };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport { helpers } from '../common/helpers';\n\n/**\n * Emulate service response http status to aid in error handling.\n * @returns {Promise<{statusText: string, message: string, status: number}>}\n */\nconst authorizeUser = async () => {\n  const response = {\n    status: 418,\n    message: '{ getUser } = insights.chrome.auth'\n  };\n  let getUserData = (helpers.TEST_MODE || helpers.DEV_MODE) && {};\n\n  if (!helpers.DEV_MODE && window.insights && window.insights.chrome.auth.getUser) {\n    getUserData = await window.insights.chrome.auth.getUser();\n  }\n\n  /**\n   * ToDo: evaluate this periodically, expecting specific platform behavior.\n   * Basic check for missing user data. Allowing GUI auth to pass with missing data affects our API\n   * auth for RHSM, so we block it. An additional, more specific, check for \"account_number\" may be needed.\n   */\n  if (getUserData) {\n    response.status = 200;\n    response.data = getUserData;\n    return Promise.resolve(response);\n  }\n\n  const emulatedError = { ...new Error('{ getUser } = insights.chrome.auth'), ...response };\n  return Promise.reject(emulatedError);\n};\n\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\nconst getLocale = () => {\n  const defaultLocale = {\n    value: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n    key: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC\n  };\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser };\n\nexport { userServices as default, userServices, authorizeUser, getLocale, logoutUser };\n","import axios from 'axios';\nimport { userServices } from './userServices';\n\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\nconst serviceCall = async config => {\n  await userServices.authorizeUser();\n  return axios(serviceConfig(config));\n};\n\nexport { serviceConfig as default, serviceConfig, serviceCall };\n","import { serviceCall } from './config';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *       \"version\": \"0.0.0\",\n *       \"gitDescription\": \"lorem ipsum\",\n *       \"artifact\": \"dolor sit\",\n *       \"name\": \"lorem\",\n *       \"group\": \"ipsum\",\n *       \"gitHash\": \"0000000000000000\"\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getApiVersion = () =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {ForceStatus} 200\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {Enum} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {Enum} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {Object} links\n * @apiSuccess {Object} meta\n * @apiSuccess {Enum} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {Enum} meta.product\n * - RHEL\n * @apiSuccess {Number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2018-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-05-26T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-02T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-09T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-16T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-23T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-30T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-01-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-02-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-03-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"hypervisor\": 0,\n *           \"sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-04-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-05-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"hypervisor\": 50,\n *           \"sockets\": 48\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} QUARTERLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-01-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"hypervisor\": 50,\n *           \"sockets\": 48\n *         },\n *         {\n *           \"date\": \"2018-04-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2018-07-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2018-10-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"hypervisor\": 10,\n *           \"sockets\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 4,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"quarterly\"\n *       }\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getGraphReports = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2018-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getGraphCapacity = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params\n  });\n\nconst rhsmServices = { getApiVersion, getGraphCapacity, getGraphReports };\n\nexport { rhsmServices as default, rhsmServices, getApiVersion, getGraphCapacity, getGraphReports };\n","import { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, rhsmActions, userActions };\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsmServices';\n\nconst getGraphReports = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_RHSM,\n    payload: rhsmServices.getGraphReports(id, query),\n    meta: {\n      data: { id },\n      query,\n      notifications: {\n        rejected: {\n          variant: 'info',\n          title: 'Reporting connection has failed',\n          description: `Product ID: ${id}`\n        }\n      }\n    }\n  });\n\nconst getGraphCapacity = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_GRAPH_CAPACITY_RHSM,\n    payload: rhsmServices.getGraphCapacity(id, query),\n    meta: {\n      data: { id },\n      query,\n      notifications: {\n        rejected: {\n          variant: 'info',\n          title: 'Capacity connection has failed',\n          description: `Product ID: ${id}`\n        }\n      }\n    }\n  });\n\nconst rhsmActions = { getGraphCapacity, getGraphReports };\n\nexport { rhsmActions as default, rhsmActions, getGraphCapacity, getGraphReports };\n","import { userTypes } from '../types';\nimport userService from '../../services/userServices';\n\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userService.authorizeUser()\n  });\n\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userService.getLocale()\n});\n\nconst userActions = { authorizeUser, getLocale };\n\nexport { userActions as default, userActions, authorizeUser, getLocale };\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\nimport _get from 'lodash/get';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\n\nconst graphCardCache = {};\n\nconst graph = state => state.graph;\n\nconst graphCardSelector = createSelector(\n  [graph],\n  graphReducer => {\n    const { component = {}, capacity = {}, report = {} } = graphReducer || {};\n\n    const graphGranularity = component.graphGranularity || null;\n    const reportGranularity = _get(report, ['metaQuery', rhsmApiTypes.RHSM_API_QUERY_GRANULARITY], null);\n    const capacityGranularity = _get(capacity, ['metaQuery', rhsmApiTypes.RHSM_API_QUERY_GRANULARITY], null);\n    const reportProductId = _get(report, ['metaData', 'id'], null);\n    const capacityProductId = _get(capacity, ['metaData', 'id'], null);\n\n    let productId = null;\n    let granularity = null;\n\n    if (\n      (graphGranularity && graphGranularity === reportGranularity && graphGranularity === capacityGranularity) ||\n      (!graphGranularity && reportGranularity === capacityGranularity)\n    ) {\n      granularity = reportGranularity;\n    }\n\n    if (reportProductId === capacityProductId) {\n      productId = reportProductId;\n    }\n\n    const cachedGranularity = (granularity && productId && graphCardCache[`${productId}_${granularity}`]) || {};\n    const initialLoad = typeof cachedGranularity.initialLoad === 'boolean' ? cachedGranularity.initialLoad : true;\n\n    const updatedData = {\n      error: false,\n      errorStatus: null,\n      fulfilled: false,\n      pending: false,\n      initialLoad,\n      graphData: {\n        cores: [],\n        hypervisorCores: [],\n        hypervisorSockets: [],\n        physicalCores: [],\n        physicalSockets: [],\n        sockets: [],\n        threshold: []\n      },\n      ...cachedGranularity,\n      ...component\n    };\n\n    if (granularity === null || productId === null) {\n      updatedData.error = true;\n      return updatedData;\n    }\n\n    if (initialLoad) {\n      updatedData.pending = report.pending || capacity.pending || false;\n    }\n\n    updatedData.error = report.error || capacity.error || false;\n    updatedData.errorStatus = report.errorStatus || capacity.errorStatus || null;\n\n    if (capacity.fulfilled && report.fulfilled && granularity && productId) {\n      const productsData = _get(report, ['data', rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA], []);\n      const thresholdData = _get(capacity, ['data', rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA], []);\n\n      updatedData.graphData.cores.length = 0;\n      updatedData.graphData.hypervisorCores.length = 0;\n      updatedData.graphData.hypervisorSockets.length = 0;\n      updatedData.graphData.physicalCores.length = 0;\n      updatedData.graphData.physicalSockets.length = 0;\n      updatedData.graphData.sockets.length = 0;\n      updatedData.graphData.threshold.length = 0;\n\n      productsData.forEach((value, index) => {\n        const date = moment\n          .utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE])\n          .startOf('day')\n          .toDate();\n\n        const checkThresholdDate = item => {\n          if (!item) {\n            return false;\n          }\n\n          const itemDate = moment\n            .utc(item[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.DATE])\n            .startOf('day')\n            .toDate();\n\n          return moment(date).isSame(itemDate);\n        };\n\n        updatedData.graphData.cores.push({\n          date,\n          x: index,\n          y: Number.parseInt(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.CORES], 10) || 0\n        });\n\n        updatedData.graphData.hypervisorCores.push({\n          date,\n          x: index,\n          y: Number.parseInt(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HYPERVISOR_CORES], 10) || 0\n        });\n\n        updatedData.graphData.hypervisorSockets.push({\n          date,\n          x: index,\n          y: Number.parseInt(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HYPERVISOR_SOCKETS], 10) || 0\n        });\n\n        updatedData.graphData.physicalCores.push({\n          date,\n          x: index,\n          y: Number.parseInt(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.PHYSICAL_CORES], 10) || 0\n        });\n\n        updatedData.graphData.physicalSockets.push({\n          date,\n          x: index,\n          y: Number.parseInt(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.PHYSICAL_SOCKETS], 10) || 0\n        });\n\n        updatedData.graphData.sockets.push({\n          date,\n          x: index,\n          y: Number.parseInt(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.SOCKETS], 10) || 0\n        });\n\n        updatedData.graphData.threshold.push({\n          date,\n          x: index,\n          y: Number.parseInt(\n            (checkThresholdDate(thresholdData && thresholdData[index]) &&\n              thresholdData[index][rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.SOCKETS]) ||\n              0,\n            10\n          )\n        });\n      });\n\n      updatedData.initialLoad = false;\n      updatedData.fulfilled = true;\n      graphCardCache[`${productId}_${granularity}`] = { ...updatedData };\n    }\n\n    return updatedData;\n  }\n);\n\nconst makeGraphCardSelector = () => graphCardSelector;\n\nconst graphCardSelectors = {\n  graphCard: graphCardSelector,\n  makeGraphCard: makeGraphCardSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, graphCardSelector, makeGraphCardSelector };\n","import graphCardSelectors from './graphCardSelectors';\n\nconst reduxSelectors = {\n  graphCard: graphCardSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\nimport { helpers } from '../common/helpers';\n\nconst connectTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )((!helpers.TEST_MODE && withTranslation()(component)) || component);\n\nconst connectRouterTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connectTranslate(mapStateToProps, mapDispatchToProps)(component));\n\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(component)\n  );\n\nexport {\n  connect,\n  connectRouter,\n  connectRouterTranslate,\n  connectTranslate,\n  reduxActions,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  store\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, withTranslation } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\nconst translate = (str, placeholder = null) =>\n  (!helpers.TEST_MODE && i18next.t(str, placeholder)) || helpers.noopTranslate(str, placeholder);\n\nconst translateComponent = component => (!helpers.TEST_MODE && withTranslation()(component)) || component;\n\n/**\n * ToDo: reevaluate the \"I18nextProvider\" on package update.\n * Appears to have timing issues, and subsequent firings of the\n * ajax/xhr setup. Reverting it to just a function call that populates behind\n * the scenes appears more predictable.\n */\nclass I18n extends React.Component {\n  state = { isLoaded: false };\n\n  componentDidMount() {\n    this.i18nInit();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { locale } = this.props;\n\n    if (locale !== prevProps.locale) {\n      this.i18nInit();\n    }\n  }\n\n  i18nInit = async () => {\n    const { fallbackLng, loadPath, locale } = this.props;\n\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: locale,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      // ToDo: eval the need for an isError state ref\n    }\n\n    this.setState({ isLoaded: true });\n  };\n\n  render() {\n    const { isLoaded } = this.state;\n    const { children } = this.props;\n\n    return (isLoaded && <React.Fragment>{children}</React.Fragment>) || <React.Fragment />;\n  }\n}\n\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","import moment from 'moment';\nimport numbro from 'numbro';\nimport { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers } from '../../common/dateHelpers';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity, see enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {Date} date\n * @param {string} granularity, see enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n  let formattedDateTooltip;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDateTooltip = dateHelpers.timestampQuarterFormats.yearLong;\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDateTooltip = dateHelpers.timestampMonthFormats.yearLong;\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDateTooltip = dateHelpers.timestampDayFormats.long;\n      break;\n  }\n\n  return momentDate.format(formattedDateTooltip);\n};\n\n/**\n * Get tooltips for x axis while displaying y axis values.\n *\n * @param {Object} itemsByKey\n * @param {string} granularity, see enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {string} product, apply the product to locale strings\n * @returns {string | *}\n */\n/**\n * ToDo: we have access to the datasets and index which gives us access to the previous date.\n * Consider adding back in the year on tooltip cross year displays\n */\nconst getTooltips = ({ itemsByKey, granularity, product = '' }) => {\n  let dateString = '';\n  let thresholdString = '';\n  const dataFacets = [];\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      dateString = `${translate('curiosity-graph.dateLabel')}: ${getTooltipDate({\n        date: itemsByKey[key].date,\n        granularity\n      })}`;\n    }\n\n    if (itemsByKey[key].y) {\n      if (key === 'threshold') {\n        thresholdString = `${translate(`curiosity-graph.${key}Label`, { product })}: ${itemsByKey[key].y}\\n`;\n      } else {\n        dataFacets.push(`${translate(`curiosity-graph.${key}Label`, { product })}: ${itemsByKey[key].y}\\n`);\n      }\n    }\n  });\n\n  return (\n    ((thresholdString || dataFacets.length) && `${thresholdString}${dataFacets.join('')}${dateString}`.trim()) ||\n    translate('curiosity-graph.noDataLabel')\n  );\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {Date} date\n * @param {string} granularity, see enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} tick\n * @param {Date} previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {number|string} tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick }) => numbro(tick).format({ average: true, mantissa: 1, optionalMantissa: true });\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  getTooltips,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  getTooltips,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\n\nconst getGranularityOptionsType = optionsType => {\n  if (optionsType === 'default') {\n    return [\n      { title: translate('curiosity-graph.dropdownDaily'), value: GRANULARITY_TYPES.DAILY },\n      { title: translate('curiosity-graph.dropdownWeekly'), value: GRANULARITY_TYPES.WEEKLY },\n      { title: translate('curiosity-graph.dropdownMonthly'), value: GRANULARITY_TYPES.MONTHLY },\n      { title: translate('curiosity-graph.dropdownQuarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n    ];\n  }\n\n  return [];\n};\n\nconst graphCardTypes = {\n  getGranularityOptions: getGranularityOptionsType\n};\n\nexport { graphCardTypes as default, graphCardTypes, getGranularityOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer, VictoryPortal } from 'victory';\nimport {\n  Chart,\n  ChartAxis,\n  ChartLegend,\n  ChartStack,\n  ChartThreshold,\n  ChartTooltip,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  containerRef = React.createRef();\n\n  componentDidMount() {\n    this.onResizeContainer();\n    window.addEventListener('resize', this.onResizeContainer);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  onResizeContainer = () => {\n    const containerElement = this.containerRef.current;\n\n    if (containerElement && containerElement.clientWidth) {\n      this.setState({ chartWidth: containerElement.clientWidth });\n    }\n  };\n\n  setDataSets() {\n    const { dataSets, tooltips } = this.props;\n\n    if (tooltips && dataSets && dataSets[0] && dataSets[0].data) {\n      const updatedDataSets = _cloneDeep(dataSets);\n\n      updatedDataSets[0].data = updatedDataSets[0].data.map((value, index) => {\n        const itemsByKey = {};\n        const items = [];\n\n        dataSets.forEach((data, i) => {\n          if (data.data && data.data[value.x]) {\n            itemsByKey[data.id || `dataSet-${i}`] = data.data[value.x];\n            items.push(data.data[value.x]);\n          }\n        });\n\n        return {\n          ...value,\n          _tooltip: tooltips({\n            x: value.x,\n            y: value.y,\n            index,\n            items,\n            itemsByKey,\n            dataSets: _cloneDeep(dataSets)\n          })\n        };\n      });\n\n      return updatedDataSets;\n    }\n\n    return dataSets;\n  }\n\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  // ToDo: the domain range needs to be update when additional datasets are added\n  getChartDomain({ isXAxisTicks }) {\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  getChartLegend() {\n    const { dataSets } = this.props;\n    const legendData = [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.legendLabel) {\n        const legendDataSettings = { symbol: {}, name: dataSet.legendLabel };\n\n        if (dataSet.legendSymbolType) {\n          legendDataSettings.symbol.type = dataSet.legendSymbolType;\n        } else if (dataSet.isThreshold) {\n          legendDataSettings.symbol.type = 'threshold';\n        }\n\n        if (dataSet.themeColor) {\n          legendDataSettings.symbol.fill = dataSet.themeColor;\n        } else if (dataSet.stroke) {\n          legendDataSettings.symbol.fill = dataSet.stroke;\n        } else if (dataSet.fill) {\n          legendDataSettings.symbol.fill = dataSet.fill;\n        }\n\n        legendData.push(legendDataSettings);\n      }\n    });\n\n    return {\n      legendData,\n      legendOrientation: 'horizontal',\n      legendPosition: 'bottom-left',\n      legendComponent: <ChartLegend borderPadding={{ top: 20 }} />\n    };\n  }\n\n  static getContainerComponent() {\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const containerComponentProps = {\n      constrainToVisibleArea: true,\n      cursorDimension: 'x',\n      voronoiDimension: 'x',\n      voronoiPadding: 50,\n      mouseFollowTooltips: true\n    };\n\n    containerComponentProps.labelComponent = (\n      <VictoryPortal>\n        <ChartTooltip pointerLength={0} centerOffset={{ x: tooltip => tooltip.flyoutWidth / 2 + 5, y: 0 }} />\n      </VictoryPortal>\n    );\n\n    containerComponentProps.labels = ({ datum }) =>\n      (/^chartArea-0/.test(datum.childName) && datum._tooltip) || datum.tooltip || undefined;\n\n    return {\n      containerComponent: <VictoryVoronoiCursorContainer {...containerComponentProps} />\n    };\n  }\n\n  renderChart({ stacked = false }) {\n    const dataSets = this.setDataSets();\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  render() {\n    const { chartWidth } = this.state;\n    const { padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const chartLegendProps = this.getChartLegend();\n    const containerComponent = (maxY > 0 && ChartArea.getContainerComponent()) || {};\n    const chartProps = { padding, ...chartLegendProps, ...chartDomain, ...containerComponent };\n\n    /**\n     * FixMe: PFCharts or Victory, unable to return null or empty content.\n     * General practice of returning \"null\" shouldn't necessarily melt the\n     * graph. To avoid issues we return an empty array\n     */\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n      </div>\n    );\n  }\n}\n\nChartArea.propTypes = {\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number.isRequired,\n          tooltip: PropTypes.string,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  tooltips: PropTypes.func,\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\nChartArea.defaultProps = {\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  tooltips: null,\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHead, CardActions, CardBody } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport { Select } from '../select/select';\nimport { connectTranslate, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { rhsmApiTypes, RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport { graphCardTypes } from './graphCardTypes';\nimport ChartArea from '../chartArea/chartArea';\n\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphGranularity } = this.props;\n\n    if (graphGranularity !== prevProps.graphGranularity) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  onUpdateGraphData = () => {\n    const { getGraphCapacity, getGraphReports, graphGranularity, startDate, endDate, productId } = this.props;\n    const query = {\n      [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: graphGranularity,\n      [rhsmApiTypes.RHSM_API_QUERY_START_DATE]: startDate.toISOString(),\n      [rhsmApiTypes.RHSM_API_QUERY_END_DATE]: endDate.toISOString()\n    };\n\n    if (productId) {\n      getGraphCapacity(productId, query);\n      getGraphReports(productId, query);\n    }\n  };\n\n  onSelect = event => {\n    const { graphGranularity } = this.props;\n    const { value } = event;\n\n    if (graphGranularity !== value) {\n      store.dispatch({\n        type: reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM,\n        graphGranularity: value\n      });\n    }\n  };\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   * @patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  renderChart() {\n    const { filterGraphData, graphData, graphGranularity, t, translateProduct } = this.props;\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: graphGranularity\n      });\n\n    const tooltips = ({ itemsByKey }) =>\n      graphCardHelpers.getTooltips({\n        itemsByKey,\n        granularity: graphGranularity,\n        product: translateProduct\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(graphGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat,\n      tooltips\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          legendLabel: t(`curiosity-graph.${key}Label`, { product: translateProduct }),\n          isStacked: key !== 'threshold',\n          isThreshold: key === 'threshold'\n        };\n\n        if (key === 'threshold') {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.legendSymbolType = 'dash';\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 2.5;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return <ChartArea {...chartAreaProps} dataSets={filteredGraphData(graphData)} />;\n  }\n\n  // ToDo: combine \"curiosity-skeleton-container\" into a single class w/ --loading and BEM style\n  render() {\n    const { cardTitle, error, graphGranularity, selectOptionsType, pending, t } = this.props;\n    const getGranularityOptions = graphCardTypes.getGranularityOptions(selectOptionsType);\n\n    return (\n      <Card className=\"curiosity-usage-graph fadein\">\n        <CardHead>\n          <h2>{cardTitle}</h2>\n          <CardActions>\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onSelect}\n              options={getGranularityOptions}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHead>\n        <CardBody>\n          <div className={`curiosity-skeleton-container ${(error && 'blur') || ''}`}>\n            {pending && (\n              <React.Fragment>\n                <Skeleton size={SkeletonSize.xs} />\n                <Skeleton size={SkeletonSize.sm} />\n                <Skeleton size={SkeletonSize.md} />\n                <Skeleton size={SkeletonSize.lg} />\n              </React.Fragment>\n            )}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphCapacity: PropTypes.func,\n  getGraphReports: PropTypes.func,\n  graphData: PropTypes.object,\n  graphGranularity: PropTypes.oneOf([\n    GRANULARITY_TYPES.DAILY,\n    GRANULARITY_TYPES.WEEKLY,\n    GRANULARITY_TYPES.MONTHLY,\n    GRANULARITY_TYPES.QUARTERLY\n  ]),\n  pending: PropTypes.bool,\n  productId: PropTypes.string,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  translateProduct: PropTypes.string,\n  startDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date)\n};\n\nGraphCard.defaultProps = {\n  cardTitle: null,\n  error: false,\n  filterGraphData: [],\n  getGraphCapacity: helpers.noop,\n  getGraphReports: helpers.noop,\n  graphData: {},\n  graphGranularity: GRANULARITY_TYPES.DAILY,\n  pending: false,\n  productId: rhsmApiTypes.RHSM_API_PATH_ID_TYPES.RHEL,\n  selectOptionsType: 'default',\n  t: helpers.noopTranslate,\n  translateProduct: 'RHEL',\n  startDate: dateHelpers.defaultDateTime.startDate,\n  endDate: dateHelpers.defaultDateTime.endDate\n};\n\nconst makeMapStateToProps = () => {\n  const getGraphCard = reduxSelectors.graphCard.makeGraphCard();\n\n  return (state, props) => ({\n    ...getGraphCard(state, props)\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getGraphCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphCapacity(id, query)),\n  getGraphReports: (id, query) => dispatch(reduxActions.rhsm.getGraphReports(id, query))\n});\n\nconst ConnectedGraphCard = connectTranslate(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { PageSection } from '@patternfly/react-core';\nimport GraphCard from '../graphCard/graphCard';\nimport { helpers } from '../../common';\n\nclass OpenshiftView extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    const { routeDetail, t } = this.props;\n\n    return (\n      <React.Fragment>\n        <PageHeader>\n          <PageHeaderTitle\n            title={(routeDetail.routeItem && routeDetail.routeItem.title) || helpers.UI_DISPLAY_CONFIG_NAME}\n          />\n        </PageHeader>\n        <PageSection>\n          <GraphCard\n            key={routeDetail.pathParameter}\n            filterGraphData={[\n              { id: 'cores', fill: chartColorBlueLight.value, stroke: chartColorBlueDark.value },\n              { id: 'threshold' }\n            ]}\n            productId={routeDetail.pathParameter}\n            cardTitle={t('curiosity-graph.coresHeading')}\n            errorRoute={routeDetail.errorRoute}\n          />\n        </PageSection>\n      </React.Fragment>\n    );\n  }\n}\n\nOpenshiftView.propTypes = {\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    }),\n    errorRoute: PropTypes.shape({\n      to: PropTypes.string\n    })\n  }),\n  t: PropTypes.func\n};\n\nOpenshiftView.defaultProps = {\n  routeDetail: {},\n  t: helpers.noopTranslate\n};\n\nconst TranslatedOpenshiftView = withTranslation()(OpenshiftView);\n\nexport { TranslatedOpenshiftView as default, TranslatedOpenshiftView, OpenshiftView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark\n} from '@patternfly/react-tokens';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { PageSection } from '@patternfly/react-core';\nimport GraphCard from '../graphCard/graphCard';\nimport { helpers } from '../../common';\n\nclass RhelView extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    const { routeDetail, t } = this.props;\n\n    return (\n      <React.Fragment>\n        <PageHeader>\n          <PageHeaderTitle\n            title={(routeDetail.routeItem && routeDetail.routeItem.title) || helpers.UI_DISPLAY_CONFIG_NAME}\n          />\n        </PageHeader>\n        <PageSection>\n          <GraphCard\n            key={routeDetail.pathParameter}\n            filterGraphData={[\n              { id: 'physicalSockets', fill: chartColorBlueLight.value, stroke: chartColorBlueDark.value },\n              { id: 'hypervisorSockets', fill: chartColorCyanLight.value, stroke: chartColorCyanDark.value },\n              { id: 'threshold' }\n            ]}\n            productId={routeDetail.pathParameter}\n            cardTitle={t('curiosity-graph.socketsHeading')}\n            errorRoute={routeDetail.errorRoute}\n          />\n        </PageSection>\n      </React.Fragment>\n    );\n  }\n}\n\nRhelView.propTypes = {\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    }),\n    errorRoute: PropTypes.shape({\n      to: PropTypes.string\n    })\n  }),\n  t: PropTypes.func\n};\n\nRhelView.defaultProps = {\n  routeDetail: {},\n  t: helpers.noopTranslate\n};\n\nconst TranslatedRhelView = withTranslation()(RhelView);\n\nexport { TranslatedRhelView as default, TranslatedRhelView, RhelView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  PageSection,\n  Title\n} from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { translateComponent } from '../i18n/i18n';\nimport subscriptionsSvg from '../../images/subscriptions.svg';\n\n/**\n * FixMe: Patternfly EmptyStateIcon can't pass a basic image\n * Requires the use of function based component syntax\n */\n/**\n * FixMe: Patternfly EmptyStateBody and Title appear to throw an error on translate string replacement\n * Wrap with a fragment to pass.\n */\nconst TourView = ({ t }) => (\n  <React.Fragment>\n    <PageHeader>\n      <PageHeaderTitle title={helpers.UI_DISPLAY_CONFIG_NAME} />\n    </PageHeader>\n    <PageSection>\n      <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n        <img\n          src={subscriptionsSvg}\n          className=\"curiosity-emptystate-img-icon\"\n          alt={t('curiosity-tour.emptyStateIconAlt', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          aria-hidden\n        />\n        <Title headingLevel=\"h5\" size=\"lg\">\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateTitle', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </Title>\n        <EmptyStateBody>\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateDescription', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </EmptyStateBody>\n        <EmptyStateBody>\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateDescriptionExtended', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </EmptyStateBody>\n        <Button variant=\"primary\">{t('curiosity-tour.emptyStateButton')}</Button>\n        <EmptyStateSecondaryActions>\n          <Button\n            component=\"a\"\n            variant=\"link\"\n            target=\"_blank\"\n            href=\"https://access.redhat.com/documentation/Subscription_Central/\"\n          >\n            {t('curiosity-tour.emptyStateLinkLearnMore')}\n          </Button>\n          <Button component=\"a\" variant=\"link\" target=\"_blank\" href=\"https://access.redhat.com/account-team\">\n            {t('curiosity-tour.emptyStateLinkContactUs')}\n          </Button>\n        </EmptyStateSecondaryActions>\n      </EmptyState>\n    </PageSection>\n  </React.Fragment>\n);\n\nTourView.propTypes = {\n  routeDetail: PropTypes.shape({\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    })\n  }),\n  t: PropTypes.func\n};\n\nTourView.defaultProps = {\n  routeDetail: {},\n  t: helpers.noopTranslate\n};\n\nconst TranslatedTourView = translateComponent(TourView);\n\nexport { TranslatedTourView as default, TranslatedTourView, TourView };\n","import path from 'path';\nimport { helpers } from '../../common/helpers';\nimport OpenshiftView from '../openshiftView/openshiftView';\nimport RhelView from '../rhelView/rhelView';\nimport TourView from '../tourView/tourView';\nimport { RHSM_API_PATH_ID_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Return a string that describes a platform redirect.\n * @return {array}\n */\nconst platformRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return array of objects that describes routing.\n * @return {array}\n */\nconst routes = [\n  {\n    title: 'Red Hat Enterprise Linux',\n    to: '/rhel-sw/all',\n    redirect: true,\n    component: RhelView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Red Hat Enterprise Linux',\n    id: 'rhel-sw',\n    to: '/rhel-sw/:variant',\n    component: RhelView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Red Hat OpenShift',\n    id: 'openshift-sw',\n    to: '/openshift-sw',\n    component: OpenshiftView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Tour',\n    id: 'soon',\n    to: '/soon',\n    component: TourView,\n    exact: true,\n    render: true,\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Tour',\n    id: 'tour',\n    to: '/tour',\n    component: TourView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  }\n];\n\n/**\n * Return an array of objects that describes platform navigation.\n * @return {array}\n */\nconst navigation = [\n  {\n    title: 'Red Hat Enterprise Linux',\n    id: 'all',\n    path: '/rhel-sw/all',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL,\n    default: true\n  },\n  {\n    title: 'ARM',\n    id: 'arm',\n    path: '/rhel-sw/arm',\n    pathParameter: RHSM_API_PATH_ID_TYPES.ARM\n  },\n  {\n    title: 'IBM Power',\n    id: 'ibmpower',\n    path: '/rhel-sw/ibmpower',\n    pathParameter: RHSM_API_PATH_ID_TYPES.IBM_POWER\n  },\n  {\n    title: 'IBM Z systems',\n    id: 'ibmz',\n    path: '/rhel-sw/ibmz',\n    pathParameter: RHSM_API_PATH_ID_TYPES.IBM_Z\n  },\n  {\n    title: 'x86',\n    id: 'x86',\n    path: '/rhel-sw/x86',\n    pathParameter: RHSM_API_PATH_ID_TYPES.X86\n  },\n  {\n    title: 'Red Hat OpenShift',\n    id: 'openshift-sw',\n    path: '/openshift-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.OPENSHIFT\n  }\n];\n\nconst routerTypes = {\n  navigation,\n  platformRedirect,\n  routes\n};\n\nexport { routerTypes as default, routerTypes, navigation, platformRedirect, routes };\n","import { helpers } from '../../common/helpers';\nimport { routes, navigation } from './routerTypes';\n\n/**\n * Return an assumed dynamic route baseName directory\n * based on a predictable platform directory depth of\n * /[OPTIONAL]/[environment]/[APP NAME]\n *\n * @param pathName {string}\n * @param pathPrefix {string}\n * @return {string}\n */\nconst dynamicBaseName = ({ pathName, pathPrefix }) => {\n  const path = pathName.split('/');\n\n  path.shift();\n\n  const pathSlice = pathPrefix && new RegExp(path[0]).test(pathPrefix) ? 2 : 1;\n\n  return `/${path.slice(0, pathSlice).join('/')}`;\n};\n\nconst baseName =\n  (helpers.TEST_MODE && '/') ||\n  (helpers.DEV_MODE && '/') ||\n  dynamicBaseName({ pathName: window.location.pathname, pathPrefix: helpers.UI_DEPLOY_PATH_PREFIX });\n\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\nconst getRouteDetail = ({ pathname = null }) => {\n  const navigationItem = navigation.find(item => item.path === pathname) || {};\n  return (Object.keys(navigationItem || {}).length && navigationItem) || navigation.find(item => item.default === true);\n};\n\nconst routerHelpers = {\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getRouteDetail\n};\n\nexport { routerHelpers as default, routerHelpers, baseName, dynamicBaseName, getErrorRoute, getRouteDetail };\n","import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Redirect as ReactRouterDomRedirect } from 'react-router-dom';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\n\nconst Redirect = ({ baseName, history, isRedirect, isReplace, url, route }) => {\n  const navigate = p => {\n    if (!helpers.DEV_MODE && !helpers.TEST_MODE) {\n      if (isReplace) {\n        window.location.replace(p);\n      } else {\n        window.location.href = p;\n      }\n    }\n  };\n\n  if (isRedirect === true) {\n    if (url) {\n      navigate(url);\n      return (\n        ((helpers.DEV_MODE || helpers.TEST_MODE) && <React.Fragment>Redirected towards {url}</React.Fragment>) || null\n      );\n    }\n\n    if (route) {\n      if (history) {\n        return <ReactRouterDomRedirect to={route} />;\n      }\n      navigate(path.join(baseName, route));\n    }\n  }\n\n  return null;\n};\n\nRedirect.propTypes = {\n  history: PropTypes.object,\n  isRedirect: PropTypes.bool.isRequired,\n  isReplace: PropTypes.bool,\n  url: PropTypes.string,\n  baseName: PropTypes.string,\n  route: PropTypes.string\n};\n\nRedirect.defaultProps = {\n  history: null,\n  isReplace: false,\n  url: null,\n  baseName: routerHelpers.baseName,\n  route: routerHelpers.getErrorRoute.to\n};\n\nconst RoutedRedirect = withRouter(Redirect);\n\nexport { RoutedRedirect as default, RoutedRedirect, Redirect };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport Redirect from './redirect';\nimport { routerHelpers } from './routerHelpers';\nimport { routerTypes } from './routerTypes';\n\nclass Router extends React.Component {\n  renderRoutes() {\n    const { routes } = this.props;\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    let redirectRoot = null;\n\n    return {\n      renderRoutes: routes.map(item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        if (item.redirect === true) {\n          redirectRoot = <ReactRouterDomRedirect to={item.to} />;\n        }\n\n        if (item.render === true) {\n          return (\n            <Route\n              exact={item.hasParameters || item.exact}\n              key={item.to}\n              path={item.to}\n              render={routeProps => {\n                const routeDetail = routerHelpers.getRouteDetail({ ...routeProps.match, ...routeProps.location });\n                return (\n                  <item.component\n                    routeDetail={{\n                      baseName: routerHelpers.baseName,\n                      errorRoute: activateOnErrorRoute,\n                      routes,\n                      routeItem: { ...item },\n                      ...routeDetail\n                    }}\n                    {...routeProps}\n                  />\n                );\n              }}\n            />\n          );\n        }\n\n        return (\n          <Route exact={item.hasParameters || item.exact} key={item.to} path={item.to} component={item.component} />\n        );\n      }),\n      redirectRoot\n    };\n  }\n\n  render() {\n    const { renderRoutes, redirectRoot } = this.renderRoutes();\n\n    return (\n      <div className=\"curiosity-content\">\n        <Switch>\n          {renderRoutes}\n          {redirectRoot}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nRouter.propTypes = {\n  routes: PropTypes.array\n};\n\nRouter.defaultProps = {\n  routes: routerTypes.routes\n};\n\nexport { Router as default, Router, Redirect, routerHelpers, routerTypes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Page, PageSection } from '@patternfly/react-core';\n\nconst PageLayout = ({ children }) => (\n  <Page className=\"layout-pf curiosity\">\n    <PageSection noPadding>{children}</PageSection>\n  </Page>\n);\n\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nPageLayout.defaultProps = {};\n\nexport { PageLayout as default, PageLayout };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant } from '@patternfly/react-core';\nimport { BanIcon, BinocularsIcon } from '@patternfly/react-icons';\nimport { connectRouterTranslate, reduxActions } from '../../redux';\nimport { helpers } from '../../common';\nimport { Redirect, routerTypes } from '../router/router';\nimport PageLayout from '../pageLayout/pageLayout';\n\nclass Authentication extends Component {\n  appNav = helpers.noop;\n\n  buildNav = helpers.noop;\n\n  componentDidMount() {\n    const { appName, authorizeUser, history, insights, session } = this.props;\n\n    try {\n      if (helpers.PROD_MODE || helpers.REVIEW_MODE) {\n        insights.chrome.init();\n        insights.chrome.identifyApp(appName);\n        insights.chrome.navigation(this.buildNavigation());\n\n        this.appNav = insights.chrome.on('APP_NAVIGATION', event => history.push(`${event.navId}`));\n        this.buildNav = history.listen(() => insights.chrome.navigation(this.buildNavigation()));\n      }\n\n      if (!session.authorized) {\n        authorizeUser();\n      }\n    } catch (e) {\n      if (!helpers.TEST_MODE) {\n        console.warn(`{ init, identifyApp, navigation } = insights.chrome: ${e.message}`);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.appNav();\n    this.buildNav();\n  }\n\n  buildNavigation = () => {\n    const { navigation } = this.props;\n    const currentPath = window.location.pathname.split('/').slice(-1)[0];\n\n    return navigation.map(item => ({\n      ...item,\n      active: item.id === currentPath\n    }));\n  };\n\n  render() {\n    const { children, redirectUrl, session, t } = this.props;\n\n    if (session.authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return (\n        <PageLayout>\n          <PageHeader>\n            <PageHeaderTitle title=\"&nbsp;\" />\n          </PageHeader>\n          <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n            <EmptyStateIcon icon={BinocularsIcon} />\n            <EmptyStateBody>{t('curiosity-auth.pending', '...')}</EmptyStateBody>\n          </EmptyState>\n        </PageLayout>\n      );\n    }\n\n    if (session.errorStatus === 418) {\n      return <Redirect isRedirect isReplace url={redirectUrl} />;\n    }\n\n    if (session.errorStatus === 403) {\n      return (\n        <React.Fragment>\n          {children}\n          <Redirect isRedirect />\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <PageLayout>\n        <PageHeader>\n          <PageHeaderTitle title={t('curiosity-auth.authorizedTitle', '...')} />\n        </PageHeader>\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          <EmptyStateIcon icon={BanIcon} />\n          <EmptyStateBody>{t('curiosity-auth.authorizedCopy', '...')}</EmptyStateBody>\n        </EmptyState>\n      </PageLayout>\n    );\n  }\n}\n\nAuthentication.propTypes = {\n  appName: PropTypes.string,\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  insights: PropTypes.shape({\n    chrome: PropTypes.shape({\n      init: PropTypes.func,\n      identifyApp: PropTypes.func,\n      navigation: PropTypes.func,\n      on: PropTypes.func\n    })\n  }),\n  navigation: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string\n    })\n  ),\n  redirectUrl: PropTypes.string,\n  session: PropTypes.shape({\n    authorized: PropTypes.bool,\n    error: PropTypes.bool,\n    errorMessage: PropTypes.string,\n    errorStatus: PropTypes.number,\n    pending: PropTypes.bool\n  }),\n  t: PropTypes.func\n};\n\nAuthentication.defaultProps = {\n  appName: helpers.UI_NAME,\n  authorizeUser: helpers.noop,\n  insights: window.insights,\n  navigation: routerTypes.navigation,\n  redirectUrl: routerTypes.platformRedirect,\n  session: {\n    authorized: false,\n    error: false,\n    errorMessage: '',\n    errorStatus: null,\n    pending: false\n  },\n  t: helpers.noopTranslate\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser())\n});\n\nconst mapStateToProps = state => ({ session: state.user.session });\n\nconst ConnectedAuthentication = connectRouterTranslate(mapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router/router';\nimport Authentication from './authentication/authentication';\nimport PageLayout from './pageLayout/pageLayout';\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n\n    getLocale();\n  }\n\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <Authentication>\n          <PageLayout>\n            <Router />\n          </PageLayout>\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { baseName } from './components/router/routerHelpers';\nimport { store } from './redux';\nimport App from './components/app';\nimport './styles/index.scss';\n\nrender(\n  <Provider store={store}>\n    <NotificationsPortal />\n    <BrowserRouter basename={baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["components/minHeight/minHeight.js","components/graphCard/graphCardHelpers.js","components/chartArea/chartArea.js","components/graphCard/graphCardChartTooltip.js","../node_modules/@patternfly/react-icons/dist/esm/icons/eye-slash-icon.js","components/graphCard/graphCardChartLegend.js","components/graphCard/graphCard.js","../../../../../src/components/Card/CardHeader.tsx","../../../../../src/components/Card/CardTitle.tsx","../../../../../src/components/Card/CardActions.tsx"],"names":["MinHeight","containerRef","React","createRef","innerContainerRef","updatedContainerWidth","resizeObserver","helpers","noop","onResizeContainer","updateOnResize","props","clientWidth","current","setMinHeight","this","window","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","children","className","ref","Component","defaultProps","getChartXAxisLabelIncrement","granularity","GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","getTooltipDate","date","momentDate","moment","utc","format","dateHelpers","timestampQuarterFormats","yearShort","add","timestampMonthFormats","yearLong","timestampDayFormats","short","long","xAxisTickFormat","tick","previousDate","formattedDate","isNewYear","Number","parseInt","year","replace","yAxisTickFormatFallback","abs","Math","updatedTick","updatedAbbr","pow","yAxisTickFormat","locale","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","length","graphCardHelpers","ChartArea","state","chartWidth","dataSetsToggle","tooltipRef","onHide","id","forceUpdate","onRevert","onToggle","updatedToggle","setState","getIsToggled","setResizeObserve","containerElement","ResizeObserver","observe","unobserve","xAxisLabelIncrement","dataSets","xAxisProps","yAxisProps","xAxisDataSet","data","forEach","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","index","concat","x","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","item","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","Object","keys","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","filter","set","isStacked","dataSetMaxYStacked","value","y","floored","floor","log10","ceil","maxY","chartDomain","chartTooltip","tooltipDataSet","map","itemsByKey","color","stroke","fill","_cloneDeep","mockDatum","datum","tooltip","isValidElement","cloneElement","values","v","VictoryVoronoiCursorContainer","createContainer","parsedTooltipData","getTooltipData","getXCoordinate","width","tooltipWidth","xCoordinate","getYCoordinate","height","tooltipHeight","yCoordinate","FlyoutComponent","obj","containerBounds","getBoundingClientRect","tooltipBounds","htmlContent","t","find","applyParsedTooltipData","display","xmlns","labelComponent","flyout","flyoutStyle","renderInPortal","cursorDimension","labels","voronoiPadding","mouseFollowTooltips","chartLegend","legendProps","chart","hide","revert","toggle","isToggled","stacked","charts","chartsStacked","updatedDataSet","isThreshold","dataColorStroke","strokeWidth","strokeDasharray","animate","interpolation","name","themeColor","themeVariant","generateId","thresholdChart","areaChart","push","padding","getChartTicks","getChartDomain","tooltipComponent","containerComponent","renderTooltip","undefined","chartProps","duration","renderChart","renderLegend","bottom","left","right","top","GraphCardChartTooltip","productLabel","header","key","tempDataFacet","test","thresholdStringValue","hasInfinite","label","dataFactsValue","hasData","product","summary","colSpan","dataFacet","aria-hidden","backgroundColor","translate","EyeSlashIcon","createIcon","svgPath","yOffset","xOffset","GraphCardChartLegend","onClick","viewId","store","dispatch","type","reduxTypes","graph","SET_GRAPH_LEGEND","legend","chartId","isDisabled","labelContent","tooltipContent","checkIsToggled","button","Button","onKeyPress","tabIndex","variant","component","icon","visibility","borderTopColor","Tooltip","content","position","TooltipPosition","enableFlip","distance","entryDelay","exitDelay","Fragment","context","renderLegendItem","ConnectedGraphCardChartLegend","connect","GraphCard","onUpdateGraphData","getGraphReportsCapacity","productId","query","graphGranularity","getQueryGranularity","startDate","RHSM_API_QUERY_TYPES","START_DATE","endDate","END_DATE","prevProps","_isEqual","GRANULARITY","filterGraphData","graphData","chartAreaProps","filtered","tempFiltered","onLoad","chartColorGreenDark","assign","filteredGraphData","JSON","stringify","cardTitle","error","pending","settings","actionDisplay","headingLevel","size","UI_DISABLED_GRAPH","makeMapStateToProps","reduxSelectors","graphCard","makeGraphCard","ConnectedGraphCard","reduxActions","rhsm"],"mappings":"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","file":"static/js/17.e10ed70c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer } from 'victory-create-container';\nimport {\n  Chart,\n  ChartAxis,\n  ChartStack,\n  ChartThreshold,\n  ChartThemeColor,\n  ChartArea as PfChartArea,\n  ChartCursorFlyout,\n  ChartCursorTooltip\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: chart redraw flash related to custom tooltips use\n * Removing custom tooltips corrects redraw issues. As a temporary patch, caching at the selector alleviates\n * the symptoms.\n */\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  dataSetsToggle = {};\n\n  resizeObserver = helpers.noop;\n\n  containerRef = React.createRef();\n\n  tooltipRef = React.createRef();\n\n  componentDidMount() {\n    this.setResizeObserve();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * Consumer exposed, hides chart layer.\n   *\n   * @event onHide\n   * @param {string} id\n   */\n  onHide = id => {\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: true };\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns all chart layers back on.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    this.dataSetsToggle = {};\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns chart layer on/off.\n   *\n   * @event onToggle\n   * @param {string} id\n   * @returns {boolean}\n   */\n  onToggle = id => {\n    const updatedToggle = !this.dataSetsToggle[id];\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: updatedToggle };\n    this.forceUpdate();\n\n    return updatedToggle;\n  };\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { chartWidth } = this.state;\n    const { clientWidth = 0 } = this.containerRef.current || {};\n\n    if (clientWidth !== chartWidth) {\n      this.setState({ chartWidth: clientWidth });\n    }\n  };\n\n  /**\n   * Consumer exposed, determine if chart layer on/off.\n   * Note: Using \"setState\" as related to this exposed check gives the appearance of a race condition.\n   * Using a class property with forceUpdate to bypass.\n   *\n   * @param {string} id\n   * @returns {boolean}\n   */\n  getIsToggled = id => this.dataSetsToggle[id] || false;\n\n  /**\n   * Set ResizeObserver for scenarios where the window.resize event doesn't fire.\n   */\n  setResizeObserve() {\n    const containerElement = this.containerRef.current;\n    const { ResizeObserver } = window;\n\n    if (containerElement && ResizeObserver) {\n      const resizeObserver = new ResizeObserver(this.onResizeContainer);\n      resizeObserver.observe(containerElement);\n      this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n    } else {\n      this.onResizeContainer();\n      window.addEventListener('resize', this.onResizeContainer);\n      this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n    }\n  }\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { dataSetsToggle } = this;\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply data set to custom tooltips.\n   *\n   * @returns {Array}\n   */\n  getTooltipData() {\n    const { dataSetsToggle } = this;\n    const { dataSets, chartTooltip } = this.props;\n    let tooltipDataSet = [];\n\n    if (chartTooltip && dataSets && dataSets[0] && dataSets[0].data) {\n      tooltipDataSet = dataSets[0].data.map((dataSet, index) => {\n        const itemsByKey = {};\n\n        dataSets.forEach(data => {\n          if (!dataSetsToggle[data.id] && data.data && data.data[index]) {\n            itemsByKey[data.id] = {\n              color: data.stroke || data.fill || data.color || '',\n              data: _cloneDeep(data.data[index])\n            };\n          }\n        });\n\n        const mockDatum = {\n          datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey, dataSets: _cloneDeep(dataSets) }\n        };\n\n        return {\n          x: dataSet.x,\n          y: null,\n          itemsByKey,\n          tooltip:\n            (React.isValidElement(chartTooltip) && React.cloneElement(chartTooltip, { ...mockDatum })) ||\n            chartTooltip({ ...mockDatum })\n        };\n      });\n    }\n\n    return tooltipDataSet;\n  }\n\n  /**\n   * Return a chart/graph tooltip Victory container component to allow custom HTML tooltips.\n   *\n   * @returns {Node}\n   */\n  renderTooltip() {\n    const { dataSetsToggle } = this;\n    const { chartTooltip, dataSets } = this.props;\n\n    if (!chartTooltip || Object.values(dataSetsToggle).filter(v => v === true).length === dataSets.length) {\n      return null;\n    }\n\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const parsedTooltipData = this.getTooltipData();\n\n    const applyParsedTooltipData = ({ datum }) => {\n      const t = parsedTooltipData.find(v => v.x === datum.x) || {};\n      return t?.tooltip || '';\n    };\n\n    const getXCoordinate = (x, width, tooltipWidth) => {\n      let xCoordinate = x + 10;\n\n      if (x > width / 2) {\n        xCoordinate = x - 10 - tooltipWidth / 2;\n      }\n\n      return xCoordinate;\n    };\n\n    const getYCoordinate = (y, height, tooltipHeight) => {\n      let yCoordinate = y + 10;\n\n      if (y > height / 2) {\n        yCoordinate = y - 10 - tooltipHeight;\n      }\n\n      return yCoordinate;\n    };\n\n    const FlyoutComponent = obj => {\n      const containerRef = this.containerRef.current;\n      const tooltipRef = this.tooltipRef.current;\n      const containerBounds = (containerRef && containerRef.getBoundingClientRect()) || { width: 0, height: 0 };\n      const tooltipBounds = (tooltipRef && tooltipRef.getBoundingClientRect()) || { width: 0, height: 0 };\n      const htmlContent = applyParsedTooltipData({ ...obj });\n\n      if (htmlContent) {\n        return (\n          <g>\n            <foreignObject\n              x={getXCoordinate(obj.x, containerBounds.width, tooltipBounds.width)}\n              y={getYCoordinate(obj.y, containerBounds.height, tooltipBounds.height)}\n              width=\"100%\"\n              height=\"100%\"\n            >\n              <div ref={this.tooltipRef} style={{ display: 'inline-block' }} xmlns=\"http://www.w3.org/1999/xhtml\">\n                {htmlContent}\n              </div>\n            </foreignObject>\n          </g>\n        );\n      }\n\n      return <g />;\n    };\n\n    const labelComponent = (\n      <ChartCursorTooltip\n        flyout={<ChartCursorFlyout />}\n        flyoutStyle={{ fill: 'transparent' }}\n        labelComponent={<FlyoutComponent />}\n        renderInPortal\n      />\n    );\n\n    return (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={labelComponent}\n        voronoiPadding={50}\n        mouseFollowTooltips\n      />\n    );\n  }\n\n  /**\n   * Return a custom chart/graph legend component.\n   *\n   * @returns {Node}\n   */\n  renderLegend() {\n    const { chartLegend, dataSets } = this.props;\n\n    if (!chartLegend) {\n      return null;\n    }\n\n    const legendProps = {\n      datum: { dataSets: _cloneDeep(dataSets) },\n      chart: {\n        hide: this.onHide,\n        revert: this.onRevert,\n        toggle: this.onToggle,\n        isToggled: this.getIsToggled\n      }\n    };\n\n    return (\n      (React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n      chartLegend({ ...legendProps })\n    );\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const { dataSetsToggle } = this;\n    const { dataSets } = this.props;\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { chartLegend, padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const tooltipComponent = { containerComponent: (maxY >= 0 && this.renderTooltip()) || undefined };\n    const chartProps = { padding, ...chartDomain, ...tooltipComponent };\n\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n        {chartLegend && <div className=\"curiosity-chartarea-description victory-legend\">{this.renderLegend()}</div>}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartLegend: Node|Function, chartTooltip: Node|Function, padding, xAxisTickFormat: Function,\n *     themeColor: string, yAxisTickFormat: Function, domain: object|Array, dataSets: object,\n *     xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartLegend: null, chartTooltip: null, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: null, themeColor: string, yAxisTickFormat: null, domain: object,\n *     dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, productLabel, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      header = getTooltipDate({\n        date: itemsByKey[key]?.data.date,\n        granularity\n      });\n    }\n\n    const tempDataFacet = {\n      color: itemsByKey[key]?.color\n    };\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key]?.data.hasInfinite && t('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel'));\n\n      tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n      tempDataFacet.value = thresholdStringValue;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n      tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product: productLabel });\n      tempDataFacet.value = dataFactsValue;\n    }\n\n    data.push(tempDataFacet);\n  });\n\n  return (\n    <div className=\"victory-tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  <div\n                    aria-hidden\n                    className=\"legend-icon victory-legend-icon\"\n                    style={{\n                      backgroundColor: dataFacet.color || 'transparent'\n                    }}\n                  />\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, productLabel: string, t: translate}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  productLabel: '',\n  t: translate\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import { createIcon } from '../createIcon';\n\nexport const EyeSlashIconConfig = {\n  name: 'EyeSlashIcon',\n  height: 512,\n  width: 640,\n  svgPath: 'M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const EyeSlashIcon = createIcon(EyeSlashIconConfig);\n\nexport default EyeSlashIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { connect, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @param {string} options.chartId\n   * @param {string} options.color\n   * @param {boolean} options.isDisabled\n   * @param {boolean} options.isThreshold\n   * @param {string} options.labelContent\n   * @param {string} options.tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"victory-legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: color\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: color\n              }}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *  - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, productLabel, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}Label`, `curiosity-graph.thresholdLabel`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t([`curiosity-graph.${id}Label`, `curiosity-graph.noLabel`], {\n              product: productLabel,\n              context: productLabel\n            });\n\n          const tooltipContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}LegendTooltip`, `curiosity-graph.thresholdLegendTooltip`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t(`curiosity-graph.${id}LegendTooltip`, { product: productLabel, context: productLabel });\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold,\n            tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, legend: object, chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {dataSets: Array}, productLabel: string, viewId: string, t: translate, legend: object,\n *     chart: {hide: Function, toggle: Function, isToggled: Function}}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connect(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport _isEqual from 'lodash/isEqual';\nimport { connect, reduxActions, reduxSelectors } from '../../redux';\nimport { helpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { ChartArea } from '../chartArea/chartArea';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n    const { [RHSM_API_QUERY_TYPES.START_DATE]: startDate, [RHSM_API_QUERY_TYPES.END_DATE]: endDate } = query;\n\n    if (!isDisabled && graphGranularity && startDate && endDate && productId) {\n      getGraphReportsCapacity(productId, query);\n    }\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, productLabel, query, viewId } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: graphGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(graphGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          strokeWidth: 2,\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 3;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <ChartArea\n        key={`chart_${JSON.stringify(query)}`}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend chart={chart} datum={datum} productLabel={productLabel} viewId={viewId} />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={graphGranularity} productLabel={productLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * ToDo: Evaluate applying a minHeight attr to the MinHeight component graphCard setup\n   * Appears there may be a minor page shift when compared to the prior hard-set min-height\n   * of 410px\n   */\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, graphData, isDisabled, pending, settings } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    let actionDisplay = null;\n\n    // Apply actionDisplay callback, return node\n    if (typeof settings?.actionDisplay === 'function') {\n      actionDisplay = settings.actionDisplay({ ...graphData });\n    }\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <MinHeight key=\"headerMinHeight\">\n          <CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                {cardTitle}\n              </Title>\n            </CardTitle>\n            <CardActions className={(error && 'blur') || ''}>\n              <React.Fragment key=\"actionDisplay\">{actionDisplay}</React.Fragment>\n              {children}\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key=\"bodyMinHeight\">\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && <Loader variant=\"graph\" />}\n              {!pending && this.renderChart()}\n            </div>\n          </CardBody>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productLabel: string, settings: object, productId: string, query: object, pending: boolean,\n *     error: boolean, cardTitle: Node, filterGraphData: Array, getGraphReportsCapacity: Function,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.node,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired,\n    [RHSM_API_QUERY_TYPES.START_DATE]: PropTypes.string.isRequired,\n    [RHSM_API_QUERY_TYPES.END_DATE]: PropTypes.string.isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  settings: PropTypes.shape({\n    actionDisplay: PropTypes.func\n  }),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productLabel: string, settings: object, viewId: string,\n *     t: translate, children: Node, pending: boolean, graphData: object, isDisabled: boolean,\n *     error: boolean, cardTitle: Node, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  productLabel: '',\n  settings: {},\n  t: translate,\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { CardContext } from './Card';\nimport { Button } from '../Button';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nexport const CardHeader = (_a) => {\n    var { children = null, className = '', id, onExpand, toggleButtonProps } = _a, props = __rest(_a, [\"children\", \"className\", \"id\", \"onExpand\", \"toggleButtonProps\"]);\n    return (React.createElement(CardContext.Consumer, null, ({ cardId }) => (React.createElement(\"div\", Object.assign({ className: css(styles.cardHeader, className), id: id }, props),\n        onExpand && (React.createElement(\"div\", { className: css(styles.cardHeaderToggle) },\n            React.createElement(Button, Object.assign({ variant: \"plain\", type: \"button\", onClick: evt => {\n                    onExpand(evt, cardId);\n                } }, toggleButtonProps),\n                React.createElement(\"span\", { className: css(styles.cardHeaderToggleIcon) },\n                    React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" }))))),\n        children))));\n};\nCardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nexport const CardTitle = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardTitle, className) }, props), children));\n};\nCardTitle.displayName = 'CardTitle';\n//# sourceMappingURL=CardTitle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nexport const CardActions = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.cardActions, className) }, props), children));\n};\nCardActions.displayName = 'CardActions';\n//# sourceMappingURL=CardActions.js.map"],"sourceRoot":""}
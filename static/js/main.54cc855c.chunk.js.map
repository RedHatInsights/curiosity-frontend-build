{"version":3,"sources":["common/dateHelpers.js","common/downloadHelpers.js","components/router/router.js","components/pageLayout/pageHeader.js","components/pageLayout/pageMessages.js","components/pageLayout/pageToolbar.js","components/messageView/messageView.js","components/loader/loader.js","components/table/table.js","components/router/redirect.js","components/pageLayout/pageColumns.js","components/pageLayout/pageSection.js","components/table/tableSkeleton.js","components/table/tableEmpty.js","common/helpers.js","components/app.js","components/authentication/authentication.js","types/rhsmApiTypes.js","types/platformApiTypes.js","components/i18n/i18n.js","index.js","components lazy /^/.//.*/.js$/ exclude: //.test/.js$/ groupOptions: {} namespace object","redux/common/reduxHelpers.js","redux/middleware/actionRecordMiddleware.js","redux/middleware/index.js","redux/middleware/statusMiddleware.js","redux/middleware/multiActionMiddleware.js","redux/types/appTypes.js","redux/types/graphTypes.js","redux/types/inventoryTypes.js","redux/types/platformTypes.js","redux/types/queryTypes.js","redux/types/rhsmTypes.js","redux/types/userTypes.js","redux/types/index.js","redux/types/toolbarTypes.js","redux/reducers/graphReducer.js","redux/reducers/inventoryReducer.js","redux/reducers/messagesReducer.js","redux/reducers/toolbarReducer.js","redux/reducers/userReducer.js","redux/reducers/viewReducer.js","redux/reducers/index.js","redux/store.js","services/platformServices.js","redux/actions/platformActions.js","services/config.js","services/rhsmServices.js","redux/actions/rhsmActions.js","services/userServices.js","redux/actions/index.js","redux/actions/userActions.js","redux/common/apiQueries.js","redux/selectors/appMessagesSelectors.js","redux/selectors/userSelectors.js","redux/selectors/guestsListSelectors.js","redux/selectors/graphCardSelectors.js","redux/selectors/inventoryListSelectors.js","redux/selectors/subscriptionsListSelectors.js","redux/selectors/index.js","redux/index.js","components/router/index.js","components/router/routerHelpers.js","config/routes.js","types/index.js","components/pageLayout/pageLayout.js"],"names":["getCurrentDate","helpers","TEST_MODE","DEV_MODE","process","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","date","subtract","measurement","endOfMeasurement","startDate","moment","utc","startOf","toDate","endDate","endOf","currentDateTime","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","rangedYearDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedMonthDateTime","month","currentYear","Number","parseInt","year","keyDateTimeRanges","listDateTimeRanges","startDateUpdated","endDateUpdated","format","dateTime","value","titleYear","title","titleIndex","isNextYear","_title","toLowerCase","add","translate","context","push","reverse","current","undefined","getRangedDateTime","granularity","GRANULARITY_TYPES","WEEKLY","MONTHLY","QUARTERLY","DAILY","timestampDayFormats","downloadData","options","data","fileName","fileType","Promise","resolve","reject","window","document","navigator","URL","blob","Blob","type","msSaveBlob","anchorTag","createElement","href","createObjectURL","style","display","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","error","debugLog","a","sessionStorage","UI_LOGGER_FILE","replace","JSON","stringify","parse","getItem","UI_LOGGER_ID","Error","message","browserExpose","limit","Router","routes","useState","updatedRoutes","setUpdatedRoutes","redirectDefault","setRedirectDefault","useMount","activateOnErrorRoute","find","route","activateOnError","all","map","item","disabled","routerHelpers","importView","component","View","exact","path","strict","render","location","routeProps","routeConfig","id","getRouteConfig","URLSearchParams","decodeURIComponent","parsedSearch","Set","search","param","forEach","v","split","updatedLocation","routeDetail","baseName","errorRoute","routeItem","results","redirect","Suspense","fallback","variant","to","defaultProps","PageHeader","children","includeTour","productLabel","t","justifyContent","sm","className","isInline","color","appName","UI_DISPLAY_NAME","icon","iconPosition","target","UI_LINK_LEARN_MORE","PageMessages","props","PageToolbar","MessageView","pageTitle","EmptyStateVariant","full","headingLevel","size","Loader","skeletonProps","tableProps","SkeletonSize","lg","md","xs","Table","state","isCollapsible","isSortable","sortBy","updatedColumnHeaders","updatedRows","onCollapse","index","isOpen","fullWidth","cells","expandedContent","setState","onSort","direction","updatedIndex","i","label","column","header","this","setRowData","prevProps","columnHeaders","rows","customizer","valueA","valueB","toString","_isEqualWith","updatedSort","isExpanded","rowObj","parent","length","cell","settings","React","isValidElement","columnHeader","sortActive","sortDirection","tempColumnHeader","transforms","sortable","SortByDirection","asc","filter","ariaLabel","borders","isHeader","summary","pfTableProps","emptyTable","SearchIcon","event","Fragment","aria-label","span","renderTable","Component","Redirect","isForced","url","pathName","matchedRoutePath","matchedRoute","hash","forcePath","join","forceNavigation","PageColumns","alignItems","spaceItems","Children","toArray","child","grow","key","generateId","PageSection","TableSkeleton","colCount","colWidth","rowCount","Array","updatedHeader","cellWidth","updatedRowCount","TableEmpty","tableHeading","small","noop","Function","prototype","noopPromise","PROD_MODE","UI_WINDOW_ID","obj","prefix","Math","ceil","random","isDate","Object","call","isPromise","test","noopTranslate","components","REVIEW_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_TABLE","UI_DISABLED_TABLE_HOSTS","UI_DISABLED_TABLE_SUBSCRIPTIONS","UI_DISABLED_TOOLBAR","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_NAME","UI_PATH","UI_VERSION","App","getLocale","locale","ConnectedApp","connectRouter","user","session","dispatch","reduxActions","Authentication","removeListeners","authorizeUser","hideGlobalFilter","history","initializeChrome","onNavigation","setAppName","authorized","subscriptions","appNav","routeHref","navId","description","pending","BinocularsIcon","errorCodes","includes","rhsmApiTypes","RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES","OPTIN","status","getErrorRoute","serviceName","makeMapStateToProps","reduxSelectors","makeUserSession","ConnectedAuthentication","isHidden","platform","callback","name","RHSM_API_PATH_ID_TYPES","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","OPENSHIFT","OPENSHIFT_METRICS","OPENSHIFT_DEDICATED_METRICS","SATELLITE","SATELLITE_CAPSULE","SATELLITE_SERVER","RHSM_API_QUERY_GRANULARITY_TYPES","RHSM_API_QUERY_SORT_TYPES","CORES","CORE_HOURS","HARDWARE","INSTANCE_HOURS","LAST_SEEN","MEASUREMENT","NAME","SOCKETS","RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES","SKU","PRODUCT_NAME","SERVICE_LEVEL","USAGE","UPCOMING_EVENT_DATE","PHYSICAL_CAPACITY","VIRTUAL_CAPACITY","TOTAL_CAPACITY","UOM","RHSM_API_QUERY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","RHSM_API_QUERY_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_QUERY_UOM_TYPES","RHSM_API_QUERY_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_SET_OPTIN_TYPES","CONDUIT_SYNC","TALLY_REPORT","TALLY_SYNC","RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES","END_DATE","GRANULARITY","SLA","START_DATE","RHSM_API_QUERY_SET_INVENTORY_TYPES","DIRECTION","DISPLAY_NAME","LIMIT","OFFSET","SORT","RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES","RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES","RHSM_API_QUERY_TYPES","RHSM_API_RESPONSE_ERROR_DATA","RHSM_API_RESPONSE_ERROR_DATA_TYPES","CODE","DETAIL","GENERIC","RHSM_API_RESPONSE_LINKS","RHSM_API_RESPONSE_LINKS_TYPES","FIRST","LAST","PREVIOUS","NEXT","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_META_TYPES","COUNT","TOTAL_CORE_HOURS","TOTAL_INSTANCE_HOURS","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","CLOUD_CORES","CLOUD_INSTANCES","CLOUD_SOCKETS","DATE","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_INVENTORY_DATA","RHSM_API_RESPONSE_INVENTORY_DATA_TYPES","CLOUD_PROVIDER","GUESTS","ID","INVENTORY_ID","SUBSCRIPTION_ID","RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES","RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES","SUBSCRIPTION_NUMBERS","UPCOMING_EVENT_TYPE","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","HAS_CLOUDIGRADE_DATA","HAS_CLOUDIGRADE_MISMATCH","HAS_DATA","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES","SUBSCRIPTIONS","PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES","ALL","PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES","READ","WRITE","platformApiTypes","PLATFORM_API_RESPONSE_NAV_TYPES","ACTIVE_APP","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","translateKey","values","updatedValues","isArray","i18next","store","i18nKey","translateComponent","withTranslation","i18n","displayName","I18n","fallbackLng","loadPath","initialized","setInitialized","use","XHR","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","useEffect","changeLanguage","e","basename","getElementById","webpackAsyncContext","req","__webpack_require__","o","then","code","ids","slice","keys","module","exports","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","schemas","initialValue","schema","generated","getSingleResponseFromResultArray","updatedResults","payload","response","updatedResultsMessage","firstErrorResponse","_get","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","_isPlainObject","getDateFromResults","getStatusFromResults","setStateProp","prop","initialState","reset","console","warn","singlePromiseDataResponseFromArray","reduxHelpers","parsedResponses","responses","customResponseValue","keyPrefix","updatedData","generatedSchema","parsedResponse","dataObj","customValue","update","updatedDataObj","entries","dataObjKey","dataObjValue","casedDataObjKey","_camelCase","val","isInteger","parseFloat","generateReflectedData","generatedData","types","action","expandedTypes","subVal","ref","RegExp","whichType","expandMetaTypes","meta","updatedMeta","query","metaData","metaId","metaQuery","baseState","errorMessage","fulfilled","setId","errorResponse","cancelled","recordAction","config","items","parsedItems","actions","getActions","priorItem","updatedAction","removeUserIdentity","updatedPayload","sanitizeData","headers","sanitizeActionHeaders","actionObj","diff","timestamp","now","setItem","browser","userAgent","toLocaleString","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","next","httpStatus","payloadConfig","range","floor","statusMiddleware","promiseMiddleware","actionRecordMiddleware","app","version","notificationsMiddleware","appTypes","STATUS_4XX","STATUS_5XX","graphTypes","SET_GRAPH_LEGEND","inventoryTypes","SET_INVENTORY_TAB","platformTypes","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_GLOBAL_FILTER_HIDE","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","SET_QUERY_RHSM_TYPES","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","rhsmTypes","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","GET_MESSAGE_REPORTS_RHSM","GET_SUBSCRIPTIONS_INVENTORY_RHSM","userTypes","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","graph","inventory","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_RESET_INVENTORY_LIST","rhsm","toolbar","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","legend","reportCapacity","graphReducer","hostsInventory","hostsGuests","subscriptionsInventory","tabs","inventoryReducer","report","messagesReducer","filters","toolbarReducer","viewId","activeFilters","currentFilter","optin","userReducer","actionStatus","graphTallyQuery","inventoryGuestsQuery","inventoryHostsQuery","inventorySubscriptionsQuery","viewReducer","updateResetQueries","queryIds","productGroups","updatedQuery","queryId","productQuery","updateClearQueries","clearFilters","reducers","notifications","messages","view","reduxReducers","combineReducers","createStore","applyMiddleware","getUser","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","auth","getUserPermissions","USER_PERMISSION_TYPES","REACT_APP_DEBUG_PERMISSION_APP_ONE","REACT_APP_DEBUG_PERMISSION_APP_TWO","platformServices","on","identifyApp","setAppNav","secondaryNav","appNavClick","parentId","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","serviceConfig","passedConfig","timeout","cancelTokens","responseCache","LruCache","maxAge","max","updateAgeOnGet","serviceCall","updatedConfig","axiosInstance","axios","create","cancel","cancelTokensId","cancelId","CancelToken","source","cancelToken","token","cache","sortedParams","params","sort","b","localeCompare","cacheId","cachedResponse","get","adapter","adapterConfig","interceptors","set","rhsmServices","getApiVersion","getGraphCapacity","getGraphReports","getHostsInventory","getHostsInventoryGuests","getSubscriptionsInventory","rhsmActions","getGraphReportsCapacity","getMessageReports","getLocaleFromCookie","Cookies","LocaleCode","getLanguageName","userServices","updatedPermissions","permissions","userData","allPermissions","userPermissions","flat","emulatedErrorResponse","defaultLocale","logoutUser","deleteAccountOptIn","method","getAccountOptIn","updateAccountOptIn","rejected","dismissable","apiQueries","parseRhsmQuery","queries","updatedGraphTallyQuery","updatedInventoryGuestsQuery","updatedInventoryHostsQuery","updatedInventorySubscriptionsQuery","toolbarQuery","selectorCache","selector","createSelector","productId","appMessages","cloudigradeMismatch","assign","reportData","appMessagesSelectors","makeAppMessages","createSelectorCreator","defaultMemoize","_isEqual","createDeepEqualSelector","rest","updatedSession","admin","entitled","responsePermissions","APP_TYPES","permission","definitions","resource","operation","resources","RESOURCE_TYPES","OPERATION_TYPES","resourcePermissions","res","op","userSessionSelectors","userSession","responseData","updatedResponseData","listData","updatedListData","guestsListSelectors","guestsList","makeGuestsList","stale","graphData","responseMetaQuery","capacity","reportMeta","capacityData","graphDataKey","tallySchema","capacitySchema","customReportValue","presetData","hasData","hasCloudigradeData","hasCloudigradeMismatch","customCapacityValue","x","y","hasInfinite","generateGraphData","graphDataObj","graphDataObjKey","generatedY","casedGraphDataObjKey","toFixed","updatedItem","updatedReportMeta","graphCardSelectors","graphCard","makeGraphCard","itemCount","listMeta","customInventoryValue","updatedListMeta","inventoryListSelectors","inventoryList","makeInventoryList","subscriptionsList","makeSubscriptionsList","userSelectors","mapStateToProps","mapDispatchToProps","withRouter","connect","useSelector","UseSelector","equality","platformLandingRedirect","platformModalRedirect","dynamicBaseName","pathname","applicationName","dynamicBasePath","basePath","generateProductGroups","routesConfig","pathParameter","productParameter","generateRoutes","getRouteConfigByPath","basePathDirs","str","configs","allConfigs","configsById","allConfigsById","findConfig","dir","configPath","aliases","configItem","updatedConfigItem","decodedDir","decodeURI","firstMatch","navRouteItem","returnDefault","default","viewParameter","lazy","isSearchable","PageLayout","padding"],"mappings":"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","file":"static/js/main.54cc855c.chunk.js","sourcesContent":["import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @param {string} params.endOfMeasurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement, endOfMeasurement = 'days' }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf(endOfMeasurement).toDate()\n});\n\nconst currentDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 1, measurement: 'days' });\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\nconst rangedYearDateTime = setRangedDateTime({\n  date: getCurrentDate(),\n  subtract: 11,\n  measurement: 'months',\n  endOfMeasurement: 'months'\n});\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case 'CURRENT':\n      return { ...currentDateTime };\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Generate a list of months for use in a select list.\n *\n * @param {string} month\n * @returns {{keyDateTimeRanges: {}, listDateTimeRanges: *[]}|*}\n */\nconst getRangedMonthDateTime = month => {\n  const currentYear = Number.parseInt(moment.utc(getCurrentDate()).year(), 10);\n  const { startDate, endDate } = { ...rangedYearDateTime };\n  const keyDateTimeRanges = {};\n  let listDateTimeRanges = [];\n\n  const startDateUpdated = moment.utc(startDate);\n  const endDateUpdated = moment.utc(endDate);\n\n  while (endDateUpdated > startDateUpdated || startDateUpdated.format('M') === endDateUpdated.format('M')) {\n    const dateTime = {\n      value: {\n        startDate: startDateUpdated.toDate()\n      }\n    };\n\n    const titleYear = startDateUpdated.format('MMMM YYYY');\n    const title = startDateUpdated.format('MMMM');\n    const titleIndex = startDateUpdated.format('M');\n    const isNextYear = currentYear !== Number.parseInt(startDateUpdated.year(), 10);\n\n    dateTime.title = (isNextYear && titleYear) || title;\n    dateTime._title = title.toLowerCase();\n    dateTime.value.endDate = moment.utc(startDateUpdated).endOf('month').toDate();\n\n    startDateUpdated.add(1, 'month');\n\n    dateTime.title = translate('curiosity-toolbar.granularityRange', { context: dateTime.title });\n    keyDateTimeRanges[title.toLowerCase()] = { ...dateTime };\n    keyDateTimeRanges[titleIndex] = { ...dateTime };\n    listDateTimeRanges.push(dateTime);\n  }\n\n  listDateTimeRanges = listDateTimeRanges.reverse();\n  listDateTimeRanges[0] = {\n    ...listDateTimeRanges[0],\n    _title: 'current',\n    title: translate('curiosity-toolbar.granularityRange', { context: 'current' })\n  };\n\n  keyDateTimeRanges.current = { ...listDateTimeRanges[0] };\n\n  if (month) {\n    return keyDateTimeRanges?.[month] || undefined;\n  }\n\n  return { keyDateTimeRanges, listDateTimeRanges };\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { dateHelpers } from './dateHelpers';\n\n/**\n * Download data to a file\n *\n * @param {object} options\n * @param {string} options.data\n * @param {string} options.fileName\n * @param {string} options.fileType\n * @returns {Promise}\n */\nconst downloadData = options => {\n  const { data = '', fileName = 'download.txt', fileType = 'text/plain' } = options || {};\n  return new Promise((resolve, reject) => {\n    try {\n      const { document, navigator, URL } = window;\n      const blob = new Blob([data], { type: fileType });\n\n      if (navigator?.msSaveBlob) {\n        navigator.msSaveBlob(blob, fileName);\n        resolve({ fileName, data });\n      } else {\n        const anchorTag = document.createElement('a');\n\n        anchorTag.href = URL.createObjectURL(blob);\n        anchorTag.style.display = 'none';\n        anchorTag.download = fileName;\n\n        document.body.appendChild(anchorTag);\n\n        anchorTag.click();\n\n        setTimeout(() => {\n          document.body.removeChild(anchorTag);\n          URL.revokeObjectURL(blob);\n          resolve({ fileName, data });\n        }, 250);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\n/**\n * Download the debug log file.\n */\nconst debugLog = async () => {\n  try {\n    const { sessionStorage } = window;\n    const fileName = `${helpers.UI_LOGGER_FILE}`.replace(\n      '{0}',\n      moment(dateHelpers.getCurrentDate()).format('YYYYMMDD_HHmmss')\n    );\n    const data = JSON.stringify(JSON.parse(sessionStorage.getItem(`${helpers.UI_LOGGER_ID}`)), null, 2);\n\n    await downloadData({ data, fileName, fileType: 'application/json' });\n  } catch (e) {\n    throw new Error(`debuglog error, ${e.message}`);\n  }\n};\n\nconst downloadHelpers = {\n  downloadData,\n  debugLog\n};\n\nhelpers.browserExpose({ debugLog }, { limit: false });\n\nexport { downloadHelpers as default, downloadHelpers, downloadData, debugLog };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport { useMount } from 'react-use';\nimport { routerHelpers } from './routerHelpers';\nimport { Loader } from '../loader/loader';\n\n/**\n * Load routes.\n *\n * @param {object} props\n * @param {Array} props.routes\n * @returns {Node}\n */\nconst Router = ({ routes } = {}) => {\n  const [updatedRoutes, setUpdatedRoutes] = useState([]);\n  const [redirectDefault, setRedirectDefault] = useState(null);\n\n  /**\n   * Initialize routes.\n   */\n  useMount(async () => {\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    const results = await Promise.all(\n      routes.map(async item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        const View = await routerHelpers.importView(item.component);\n\n        return (\n          <Route\n            exact={item.exact}\n            key={item.path}\n            path={item.path}\n            strict={item.strict}\n            render={({ location, ...routeProps }) => {\n              const routeConfig = item.id && routerHelpers.getRouteConfig({ id: item.id });\n              const { URLSearchParams, decodeURIComponent } = window;\n              const parsedSearch = {};\n\n              [\n                ...new Set(\n                  [...new URLSearchParams(decodeURIComponent(location.search))].map(\n                    ([param, value]) => `${param}~${value}`\n                  )\n                )\n              ].forEach(v => {\n                const [param, value] = v.split('~');\n                parsedSearch[param] = value;\n              });\n\n              const updatedLocation = {\n                ...location,\n                parsedSearch\n              };\n\n              return (\n                <View\n                  routeDetail={{\n                    baseName: routerHelpers.baseName,\n                    errorRoute: activateOnErrorRoute,\n                    routes,\n                    routeItem: { ...item },\n                    ...routeConfig\n                  }}\n                  location={updatedLocation}\n                  {...routeProps}\n                />\n              );\n            }}\n          />\n        );\n      })\n    );\n\n    setUpdatedRoutes(results);\n    setRedirectDefault(routes.find(({ disabled, redirect }) => !disabled && redirect) ?? null);\n  });\n\n  return (\n    <React.Suspense fallback={<Loader variant=\"title\" />}>\n      <Switch>\n        {updatedRoutes}\n        {redirectDefault && <ReactRouterDomRedirect to={redirectDefault.redirect} />}\n      </Switch>\n    </React.Suspense>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.boolean,\n      component: PropTypes.string.isRequired,\n      disabled: PropTypes.boolean,\n      exact: PropTypes.boolean,\n      id: PropTypes.string,\n      path: PropTypes.string.isRequired,\n      redirect: PropTypes.string,\n      render: PropTypes.boolean,\n      strict: PropTypes.boolean\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerHelpers.routes\n};\n\nexport { Router as default, Router };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader as RcsPageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Flex, FlexItem, Label as PfLabel } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {boolean} props.includeTour\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst PageHeader = ({ children, includeTour, productLabel, t }) => (\n  <RcsPageHeader>\n    <Flex justifyContent={{ sm: 'justifyContentSpaceBetween' }}>\n      <FlexItem>\n        <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n      </FlexItem>\n      <FlexItem>\n        {includeTour && (\n          <Button variant=\"link\" className=\"uxui-curiosity__button-tour\" isInline>\n            <PfLabel color=\"blue\">{t('curiosity-optin.buttonTour')}</PfLabel>\n          </Button>\n        )}\n      </FlexItem>\n    </Flex>\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, includeTour: boolean, productLabel: string, t: Function}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  includeTour: PropTypes.bool,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{includeTour: boolean, productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  includeTour: false,\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageMessages = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-messages ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageMessages.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageMessages.defaultProps = {\n  className: ''\n};\n\nexport { PageMessages as default, PageMessages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageToolbar = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-toolbar ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageToolbar.defaultProps = {\n  className: ''\n};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {Node|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {Node}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, icon: Node|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    colWidth: PropTypes.array,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  Table as PfTable,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * FixMe: PF tables uses sequentially ordered lists/arrays to denote expandable sections\n * Ideal solution is to nest expandable sections within their respective parents. There\n * are scenarios where manipulating a sequentially ordered list/array can, and will,\n * lead to unintended results. And forces an equal, if not greater, amount of effort on\n * state tracking in the consuming GUI/app. Compounding the issue, the index is used/returned\n * during events for a particular row being \"expanded\". This ends up making after-the-fact\n * application of the expandable list/array items problematic since said index is\n * constantly updating/shifting as rows are dynamically added. Add in a \"not every row\n * needs to be expandable\" scenario, you can start to see the issues. All of that\n * effort means that in some cases it may actually be quicker to simply use PF styles and\n * a HTML table directly, bypassing PF-React entirely.\n *\n * Applying a React node as content in the sequentially ordered list/array appears to\n * automatically \"mount\" said node. How this handles in child components where subsequent\n * AJAX/XHR calls are called means you are potentially hitting an API with dozens of calls,\n * row dependent, even when a user may not expand the nested row/child. This could easily\n * be resolved by nesting and applying the expandable contents after-the-fact.\n */\n/**\n * FixMe: PF tables misalignment of the column headers list/array and row cells breaks the component\n * The related PF error for this is cryptic. An immediate solution would be to simply fix the error\n * messaging, or do a length check before consuming the lists/arrays. This happens when a consumer\n * places more or less column header cells than row cells.\n */\n/**\n * FixMe: PF tables break when an empty list/array is used for the column headers\n * This appears related to the mismatched column header and row cells. The solution is to simply not\n * render the header row instead of throwing an error. This is similar to how the empty rows\n * list/array is handled.\n */\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n * @fires onSort\n */\nclass Table extends React.Component {\n  state = {\n    isCollapsible: false,\n    isSortable: false,\n    sortBy: {},\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (\n      !_isEqualWith(prevProps.rows, rows, customizer) ||\n      !_isEqualWith(prevProps.columnHeaders, columnHeaders, customizer)\n    ) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * FixMe: PF table sort callback doesn't use a zero based index when expandable?\n   * Educated guess there's a cell count happening instead of \"[you have this many data/entry cells]\"\n   * This is really confusing to implement in a consuming application, especially on first\n   * implementation. Special \"collapsible index\" logic had to be implemented to compensate for this\n   * odd behavior.\n   */\n  /**\n   * On column sort\n   *\n   * @event onSort\n   * @param {object} params\n   * @param {number} params.index\n   * @param {string} params.direction\n   * @param {object} params.data\n   */\n  onSort = ({ index, direction, data = {} }) => {\n    const { isCollapsible, updatedColumnHeaders, updatedRows } = this.state;\n    const updatedIndex = isCollapsible ? index - 1 : index;\n\n    updatedRows.forEach(async ({ isOpen }, i) => {\n      if (isOpen === true) {\n        await this.onCollapse({ index: i, isOpen: false });\n      }\n    });\n\n    this.setState(\n      {\n        sortBy: {\n          index,\n          direction\n        }\n      },\n      () =>\n        updatedColumnHeaders[updatedIndex].onSort({\n          direction,\n          index: updatedIndex,\n          label: data?.column?.header?.label\n        })\n    );\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n    const updatedSort = {};\n    let isCollapsible = false;\n    let isSortable = false;\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        isCollapsible = true;\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell?.title !== undefined) {\n          const { title, ...settings } = cell;\n          rowObj.cells.push({ title, ...settings });\n        } else {\n          rowObj.cells.push({\n            title: (React.isValidElement(cell) && cell) || (typeof cell === 'object' && `${cell}`) || cell\n          });\n        }\n      });\n    });\n\n    columnHeaders.forEach((columnHeader, index) => {\n      if (columnHeader?.title !== undefined) {\n        const { onSort, sortActive, sortDirection, title, ...settings } = columnHeader;\n        const tempColumnHeader = {\n          title,\n          ...settings\n        };\n\n        if (onSort) {\n          isSortable = true;\n          tempColumnHeader.transforms = [...(tempColumnHeader?.transforms || []), sortable];\n          tempColumnHeader.onSort = onSort;\n\n          if (sortActive) {\n            updatedSort.sortBy = { index: isCollapsible ? index + 1 : index };\n            updatedSort.sortBy.direction = SortByDirection.asc;\n          }\n\n          if (sortDirection) {\n            updatedSort.sortBy = { ...updatedSort.sortBy, direction: sortDirection };\n          }\n        } else if (tempColumnHeader.transforms) {\n          tempColumnHeader.transforms = tempColumnHeader.transforms.filter(v => v !== sortable);\n        }\n\n        updatedColumnHeaders.push(tempColumnHeader);\n      } else {\n        updatedColumnHeaders.push({\n          title:\n            (React.isValidElement(columnHeader) && columnHeader) ||\n            (typeof columnHeader === 'object' && `${columnHeader}`) ||\n            columnHeader\n        });\n      }\n    });\n\n    this.setState({\n      isCollapsible,\n      isSortable,\n      updatedColumnHeaders,\n      updatedRows,\n      ...updatedSort\n    });\n  }\n\n  /**\n   * FixMe: PF Tables automatically applies an expandable className when using the \"onCollapse\" prop?\n   * Not every row may need to be expandable. In certain scenarios a table may have no expandable\n   * sections, however it appears the \"onCollapse\" styling, and additionally added \"table cells\" are still\n   * applied.\n   */\n  /**\n   * Apply props to table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { isCollapsible, isSortable, sortBy, updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    const pfTableProps = {};\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    if (isCollapsible) {\n      pfTableProps.onCollapse = (event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data });\n    }\n\n    if (isSortable) {\n      pfTableProps.sortBy = sortBy;\n      pfTableProps.onSort = (event, index, direction, data) => this.onSort({ event, index, direction, data });\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n          {...pfTableProps}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: Node,\n *     isHeader: boolean, variant: string, className: string, rows: Array, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        onSort: PropTypes.func,\n        sortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)]),\n        title: PropTypes.node.isRequired\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.instanceOf(Date),\n          PropTypes.shape({\n            title: PropTypes.oneOfType([PropTypes.node, PropTypes.instanceOf(Date)]).isRequired\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Router } from './router';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\n/**\n * A routing redirect.\n *\n * @param {object} props\n * @param {string} props.baseName\n * @param {boolean} props.isForced\n * @param {string} props.route\n * @param {string} props.routes\n * @param {string} props.url\n * @returns {Node}\n */\nconst Redirect = ({ baseName, isForced, route, routes, url }) => {\n  /**\n   * Bypass router, force the location.\n   */\n  const forceNavigation = () => {\n    const { hash = '', search = '' } = window.location;\n    const forcePath = url || (route && `${path.join(baseName, route)}${search}${hash}`);\n\n    window.location.replace(forcePath);\n  };\n\n  const { path: matchedRoutePath, ...matchedRoute } = routerHelpers.getRouteConfig({ pathName: route, id: route });\n\n  if (!isForced && matchedRoutePath) {\n    return <Router routes={[{ ...matchedRoute, path: '*' }, ...routes]} />;\n  }\n\n  forceNavigation();\n\n  return (helpers.TEST_MODE && <React.Fragment>Redirected towards {url || route}</React.Fragment>) || null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, routes: Array, isReplace: boolean, baseName: string, url: string,\n *    isForced: boolean}}\n */\nRedirect.propTypes = {\n  baseName: PropTypes.string,\n  isForced: PropTypes.bool,\n  route: PropTypes.string,\n  routes: PropTypes.array,\n  url: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isRedirect: boolean, route: string, routes: Array, isReplace: boolean, baseName: string, url: string,\n *    isForced: boolean}}\n */\nRedirect.defaultProps = {\n  baseName: routerHelpers.baseName,\n  isForced: false,\n  route: null,\n  routes: routerHelpers.routes,\n  url: null\n};\n\nexport { Redirect as default, Redirect };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { helpers } from '../../common';\n\n/**\n * Render page columns based on children.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageColumns = ({ children, className }) => (\n  <Flex\n    alignItems={{ sm: 'alignItemsStretch' }}\n    spaceItems={{ sm: 'spaceItemsNone' }}\n    className={`curiosity-page-columns ${className}`}\n  >\n    {React.Children.toArray(children)\n      .filter(child => React.isValidElement(child))\n      .map(child => (\n        <FlexItem\n          key={(child.key && `page-column-${child.key}`) || helpers.generateId()}\n          grow={{ sm: 'grow' }}\n          className=\"curiosity-page-columns-column\"\n        >\n          {child}\n        </FlexItem>\n      ))}\n  </Flex>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageColumns.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageColumns.defaultProps = {\n  className: ''\n};\n\nexport { PageColumns as default, PageColumns };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageSection = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-section ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageSection.defaultProps = {\n  className: ''\n};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cellWidth, TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {Array} props.colWidth\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableSkeleton = ({ className, borders, colCount, colWidth, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map((value, index) => {\n    const updatedHeader = { title: <Skeleton size={SkeletonSize.md} /> };\n\n    if (typeof colWidth[index] === 'number') {\n      updatedHeader.transforms = [cellWidth(colWidth[index])];\n    }\n\n    return updatedHeader;\n  });\n\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />)\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: string,\n *     className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.arrayOf(PropTypes.number),\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: null,\n *     className: null, rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  colWidth: [],\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {Node|Function} props.icon\n * @param {Node} props.message\n * @param {string} props.tableHeading\n * @param {Node} props.title\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, variant: string, message: Node, title: Node, tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string} key\n * @param {string|object} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) =>\n  `t(${key}${(value && `, ${(typeof value === 'string' && value) || (value && JSON.stringify(value))}`) || ''}${\n    (components && `, ${components}`) || ''\n  })`;\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the current hosts inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_HOSTS = process.env.REACT_APP_UI_DISABLED_TABLE_HOSTS === 'true';\n\n/**\n * Disable the current subscriptions inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_SUBSCRIPTIONS = process.env.REACT_APP_UI_DISABLED_TABLE_SUBSCRIPTIONS === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * A url, or uri, for \"recommend actions\"\n *\n * @type {string}\n */\nconst UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS = process.env.REACT_APP_UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI state logging file name.\n *\n * @type {string}\n */\nconst UI_LOGGER_FILE = process.env.REACT_APP_UI_LOGGER_FILE || 'debug_log_{0}.json';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  browserExpose,\n  generateId,\n  isDate,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TABLE_HOSTS,\n  UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_LOGGER_FILE,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router';\nimport Authentication from './authentication/authentication';\n\n/**\n * Application\n *\n * @augments React.Component\n */\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n    getLocale();\n  }\n\n  /**\n   * Render application.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <NotificationsPortal />\n        <Authentication>\n          <Router />\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{locale: object, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\n/**\n * Default props.\n *\n * @type {{locale: {}, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { connectRouter, reduxActions, reduxSelectors } from '../../redux';\nimport { rhsmApiTypes } from '../../types';\nimport { helpers } from '../../common';\nimport { routerHelpers, Redirect } from '../router';\nimport MessageView from '../messageView/messageView';\nimport { translate } from '../i18n/i18n';\n\n/**\n * An authentication pass-through component.\n *\n * @augments React.Component\n */\nclass Authentication extends Component {\n  appName = routerHelpers.appName;\n\n  removeListeners = helpers.noop;\n\n  async componentDidMount() {\n    const {\n      authorizeUser,\n      hideGlobalFilter,\n      history,\n      initializeChrome,\n      onNavigation,\n      session,\n      setAppName\n    } = this.props;\n    const { subscriptions: authorized } = session.authorized || {};\n\n    if (!authorized) {\n      await authorizeUser();\n    }\n\n    if (!helpers.DEV_MODE) {\n      initializeChrome();\n      setAppName(this.appName);\n      hideGlobalFilter();\n\n      const appNav = onNavigation(event => {\n        const { routeHref } = routerHelpers.getRouteConfig({ id: event.navId });\n        history.push(routeHref);\n      });\n\n      this.removeListeners = () => {\n        appNav();\n      };\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  /**\n   * Render authenticated children or messaging.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children, session, t } = this.props;\n    const { subscriptions: authorized } = session.authorized || {};\n\n    if (helpers.UI_DISABLED) {\n      return (\n        <MessageView>\n          <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n        </MessageView>\n      );\n    }\n\n    if (authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (session.errorCodes && session.errorCodes.includes(rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES.OPTIN)) ||\n      session.status === 418\n    ) {\n      return <Redirect route={routerHelpers.getErrorRoute.path} />;\n    }\n\n    return (\n      <MessageView>\n        <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n      </MessageView>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, t: Function,\n *     children: Node, initializeChrome: Function, session: object, history: object,\n *     hideGlobalFilter: Function}}\n */\nAuthentication.propTypes = {\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  hideGlobalFilter: PropTypes.func,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  initializeChrome: PropTypes.func,\n  onNavigation: PropTypes.func,\n  setAppName: PropTypes.func,\n  session: PropTypes.shape({\n    authorized: PropTypes.shape({\n      [routerHelpers.appName]: PropTypes.bool\n    }),\n    errorCodes: PropTypes.arrayOf(PropTypes.string),\n    pending: PropTypes.bool,\n    status: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, t: translate,\n *     initializeChrome: Function, session: {authorized: object, errorCodes: Array, pending: boolean,\n *     status: number}, hideGlobalFilter: Function}}\n */\nAuthentication.defaultProps = {\n  authorizeUser: helpers.noop,\n  hideGlobalFilter: helpers.noop,\n  initializeChrome: helpers.noop,\n  onNavigation: helpers.noop,\n  setAppName: helpers.noop,\n  session: {\n    authorized: {},\n    errorCodes: [],\n    pending: false,\n    status: null\n  },\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser()),\n  hideGlobalFilter: isHidden => dispatch(reduxActions.platform.hideGlobalFilter(isHidden)),\n  initializeChrome: () => dispatch(reduxActions.platform.initializeChrome()),\n  onNavigation: callback => dispatch(reduxActions.platform.onNavigation(callback)),\n  setAppName: name => dispatch(reduxActions.platform.setAppName(name))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.user.makeUserSession();\n\nconst ConnectedAuthentication = connectRouter(makeMapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","/**\n * RHSM response Error DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA = 'errors';\n\n/**\n * RHSM response Error DATA types.\n * Schema/map of expected Error data response properties.\n *\n * @type {{CODE: string, DETAIL: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_TYPES = {\n  CODE: 'code',\n  DETAIL: 'detail'\n};\n\n/**\n * RHSM response Error DATA CODE types.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response links type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS = 'links';\n\n/**\n * RHSM response LINKS type.\n * Schema/map of expected inventory LINKS response properties.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS_TYPES = {\n  FIRST: 'first',\n  LAST: 'last',\n  PREVIOUS: 'previous',\n  NEXT: 'next'\n};\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response META types.\n * Schema/map of expected META response properties.\n *\n * @type {{COUNT: string, TOTAL_INSTANCE_HOURS: string, TOTAL_CORE_HOURS: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  TOTAL_CORE_HOURS: 'total_core_hours',\n  TOTAL_INSTANCE_HOURS: 'total_instance_hours'\n};\n\n/**\n * RHSM response Capacity DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\n\n/**\n * RHSM response Capacity DATA types.\n * Schema/map of expected Capacity data response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string,\n *     HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response inventory DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA = 'data';\n\n/**\n * RHSM response inventory DATA types.\n * Schema/map of expected inventory DATA response properties.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, SUBSCRIPTION_ID: string,\n *     INVENTORY_ID: string, MEASUREMENT: string, ID: string, GUESTS: string, CLOUD_PROVIDER: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA_TYPES = {\n  CLOUD_PROVIDER: 'cloud_provider',\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  GUESTS: 'number_of_guests',\n  HARDWARE: 'hardware_type',\n  ID: 'insights_id',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets',\n  SUBSCRIPTION_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response inventory guests DATA types.\n * Schema/map of expected inventory guests DATA response properties.\n *\n * @type {{SUBSCRIPTION_ID: string, ID: string, NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES = {\n  ID: 'insights_id',\n  NAME: 'display_name',\n  SUBSCRIPTION_ID: 'subscription_manager_id',\n  LAST_SEEN: 'last_seen'\n};\n\n/**\n * RHSM response subscriptions inventory DATA types.\n *\n * @type {{UOM: string, PHYSICAL_CAPACITY: string, USAGE: string, UPCOMING_EVENT_TYPE: string,\n *     UPCOMING_EVENT_DATE: string, SUBSCRIPTION_NUMBERS: string, VIRTUAL_CAPACITY: string,\n *     TOTAL_CAPACITY: string, SKU: string, SERVICE_LEVEL: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES = {\n  SKU: 'sku',\n  PRODUCT_NAME: 'product_name',\n  SERVICE_LEVEL: 'service_level',\n  USAGE: 'usage',\n  SUBSCRIPTION_NUMBERS: 'subscription_numbers',\n  UPCOMING_EVENT_DATE: 'upcoming_event_date',\n  UPCOMING_EVENT_TYPE: 'upcoming_event_type',\n  PHYSICAL_CAPACITY: 'physical_capacity',\n  VIRTUAL_CAPACITY: 'virtual_capacity',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Reporting/Tally DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\n\n/**\n * RHSM response Reporting/Tally DATA types.\n * Schema/map of expected Reporting/Tally DATA response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, INSTANCE_HOURS: string, SOCKETS: string, CLOUD_CORES: string,\n *     HAS_DATA: string, PHYSICAL_SOCKETS: string, PHYSICAL_CORES: string, CLOUD_INSTANCES: string, DATE: string,\n *     CORE_HOURS: string, CLOUD_SOCKETS: string, HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string,\n *     HYPERVISOR_CORES: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORE_HOURS: 'core_hours',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  INSTANCE_HOURS: 'instance_hours',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM product id type values.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string,\n *     OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string}}\n */\nconst RHSM_API_PATH_ID_TYPES = {\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  OPENSHIFT: 'OpenShift Container Platform',\n  OPENSHIFT_METRICS: 'OpenShift-metrics',\n  OPENSHIFT_DEDICATED_METRICS: 'OpenShift-dedicated-metrics',\n  SATELLITE: 'Satellite',\n  SATELLITE_CAPSULE: 'Satellite Capsule',\n  SATELLITE_SERVER: 'Satellite Server'\n};\n\n/**\n * RHSM API query/search parameter of GRANULARITY type values.\n * Schema/map of expected query/search parameter granularity types.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, MEASUREMENT: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_SORT_TYPES = {\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  HARDWARE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{UOM: string, PHYSICAL_CAPACITY: string, USAGE: string, UPCOMING_EVENT_DATE: string,\n *     VIRTUAL_CAPACITY: string, TOTAL_CAPACITY: string, SKU: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES = {\n  SKU: 'sku',\n  PRODUCT_NAME: 'product_name',\n  SERVICE_LEVEL: 'service_level',\n  USAGE: 'usage',\n  UPCOMING_EVENT_DATE: 'upcoming_event_date',\n  PHYSICAL_CAPACITY: 'physical_capacity',\n  VIRTUAL_CAPACITY: 'virtual_capacity',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\n/**\n * RHSM API query/search parameter SLA type values.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_QUERY_SLA_TYPES = {\n  PREMIUM: 'premium',\n  STANDARD: 'standard',\n  SELF: 'self-support',\n  NONE: ''\n};\n\n/**\n * RHSM API query/search parameter UOM type values.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_QUERY_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter USAGE type values.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_QUERY_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\n/**\n * RHSM API query/search parameter OPTIN type values.\n *\n * @type {{TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_SET_OPTIN_TYPES = {\n  CONDUIT_SYNC: 'enable_conduit_sync',\n  TALLY_REPORT: 'enable_tally_reporting',\n  TALLY_SYNC: 'enable_tally_sync'\n};\n\n/**\n * RHSM API query/search parameter CAPACITY type values.\n *\n * @type {{GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string}}\n */\nconst RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES = {\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  DIRECTION: 'dir',\n  DISPLAY_NAME: 'display_name_contains',\n  END_DATE: 'ending',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  START_DATE: 'beginning',\n  UOM: 'uom',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM API query/search parameter GUESTS INVENTORY type values.\n *\n * @type {{OFFSET: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES = {\n  LIMIT: 'limit',\n  OFFSET: 'offset'\n};\n\n/**\n * RHSM API query/search parameter SUBSCRIPTIONS INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string, SLA: string,\n *     LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES = {\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES\n};\n\n/**\n * RHSM API query/search parameter values.\n *\n * @type {{GRANULARITY: string, TALLY_SYNC: string, DIRECTION: string, END_DATE: string,\n *     SLA: string, START_DATE: string, LIMIT: string, UOM: string, TALLY_REPORT: string,\n *     USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_TYPES = {\n  ...RHSM_API_QUERY_SET_OPTIN_TYPES,\n  ...RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\n/**\n * RHSM API types.\n *\n * @type {{RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string,\n *     OFFSET: string, SLA: string, LIMIT: string}, RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES: {UOM: string,\n *     PHYSICAL_CAPACITY: string, USAGE: string, UPCOMING_EVENT_TYPE: string, UPCOMING_EVENT_DATE: string,\n *     SUBSCRIPTION_NUMBERS: string, VIRTUAL_CAPACITY: string, TOTAL_CAPACITY: string, SKU: string,\n *     SERVICE_LEVEL: string}, RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES: {GENERIC: string, OPTIN: string},\n *     RHSM_API_RESPONSE_INVENTORY_DATA: string, RHSM_API_RESPONSE_CAPACITY_DATA: string,\n *     RHSM_API_RESPONSE_ERROR_DATA_TYPES: {CODE: string, DETAIL: string},\n *     RHSM_API_RESPONSE_CAPACITY_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string},\n *     RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES: {UOM: string, PHYSICAL_CAPACITY: string, USAGE: string,\n *     UPCOMING_EVENT_DATE: string, VIRTUAL_CAPACITY: string, TOTAL_CAPACITY: string, SKU: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string}, RHSM_API_RESPONSE_META_TYPES: {COUNT: string, TOTAL_INSTANCE_HOURS: string,\n *     TOTAL_CORE_HOURS: string}, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string,\n *     DAILY: string, MONTHLY: string}, RHSM_API_QUERY_SORT_DIRECTION_TYPES: {ASCENDING: string, DESCENDING: string},\n *     RHSM_API_RESPONSE_PRODUCTS_DATA: string, RHSM_API_QUERY_TYPES: {GRANULARITY: string, TALLY_SYNC: string,\n *     DIRECTION: string, END_DATE: string, SLA: string, START_DATE: string, LIMIT: string, UOM: string,\n *     TALLY_REPORT: string, USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string},\n *     RHSM_API_RESPONSE_LINKS: string, RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES: {OFFSET: string, LIMIT: string},\n *     RHSM_API_PATH_ID_TYPES: {RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string,\n *     OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string},\n *     RHSM_API_QUERY_SET_OPTIN_TYPES: {TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string},\n *     RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_SET_INVENTORY_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}, RHSM_API_QUERY_SORT_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string,\n *     SOCKETS: string, MEASUREMENT: string, LAST_SEEN: string, NAME: string},\n *     RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, INSTANCE_HOURS: string,\n *     SOCKETS: string, CLOUD_CORES: string, HAS_DATA: string, PHYSICAL_SOCKETS: string, PHYSICAL_CORES: string,\n *     CLOUD_INSTANCES: string, DATE: string, CORE_HOURS: string, CLOUD_SOCKETS: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HYPERVISOR_CORES: string}, RHSM_API_QUERY_UOM_TYPES: {CORES: string,\n *     SOCKETS: string}, RHSM_API_RESPONSE_LINKS_TYPES: string,\n *     RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES: {SUBSCRIPTION_ID: string, ID: string, NAME: string,\n *     LAST_SEEN: string}, RHSM_API_RESPONSE_ERROR_DATA: string, RHSM_API_RESPONSE_META: string,\n *     RHSM_API_RESPONSE_INVENTORY_DATA_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string,\n *     SUBSCRIPTION_ID: string, INVENTORY_ID: string, MEASUREMENT: string, ID: string, GUESTS: string,\n *     CLOUD_PROVIDER: string, LAST_SEEN: string, NAME: string},\n *     RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string,\n *     START_DATE: string}}}\n */\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n","/**\n * Platform response for appNavClick.\n *\n * @type {{ACTIVE_APP: string}}\n */\nconst PLATFORM_API_RESPONSE_NAV_TYPES = {\n  ACTIVE_APP: 'activeApp'\n};\n\n/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string, RESOURCE_DEFS: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\n/**\n * Platform API types.\n *\n * @type {{PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES: {USER: string},\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS: string, PLATFORM_API_RESPONSE_USER_IDENTITY: string,\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES: {ENTITLED: string},\n *     PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES: {ORG_ADMIN: string}}}\n */\nconst platformApiTypes = {\n  PLATFORM_API_RESPONSE_NAV_TYPES,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformApiTypes as default,\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_NAV_TYPES,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, Trans } from 'react-i18next';\nimport { useMount } from 'react-use';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string} translateKey\n * @param {string|Array} values A default string if the key can't be found. An array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @returns {string|Node}\n */\nconst translate = (translateKey, values = null, components) => {\n  const updatedValues = values;\n\n  if (Array.isArray(updatedValues?.context)) {\n    updatedValues.context = updatedValues.context.join('_');\n  }\n\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(translateKey, updatedValues, components);\n  }\n\n  if (components) {\n    return (\n      (i18next.store && <Trans i18nKey={translateKey} values={updatedValues} components={components} />) || (\n        <React.Fragment>t({translateKey})</React.Fragment>\n      )\n    );\n  }\n\n  return (i18next.store && i18next.t(translateKey, updatedValues)) || `t(${translateKey})`;\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {Node} Component\n * @returns {Node}\n */\nconst translateComponent = Component => {\n  const withTranslation = ({ ...props }) => (\n    <Component\n      {...props}\n      t={(i18next.store && translate) || helpers.noopTranslate}\n      i18n={(i18next.store && i18next) || helpers.noop}\n    />\n  );\n\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\n/**\n * Load I18n.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.fallbackLng\n * @param {string} props.loadPath\n * @param {string} props.locale\n * @returns {Node}\n */\nconst I18n = ({ children, fallbackLng, loadPath, locale }) => {\n  const [initialized, setInitialized] = useState(false);\n\n  /**\n   * Initialize i18next\n   */\n  useMount(async () => {\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: undefined,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      //\n    }\n\n    setInitialized(true);\n  });\n\n  /**\n   * Update locale.\n   */\n  useEffect(() => {\n    if (initialized) {\n      try {\n        i18next.changeLanguage(locale);\n      } catch (e) {\n        //\n      }\n    }\n  }, [initialized, locale]);\n\n  return (initialized && <React.Fragment>{children}</React.Fragment>) || <React.Fragment />;\n};\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: Node, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { routerHelpers } from './components/router';\nimport { store } from './redux';\nimport App from './components/app';\nimport './styles/index.scss';\nimport '@patternfly/react-styles/css/components/Select/select.css';\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter basename={routerHelpers.baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","var map = {\n\t\"./app.js\": [\n\t\t231\n\t],\n\t\"./authentication/authentication.js\": [\n\t\t232\n\t],\n\t\"./bannerMessages/bannerMessages.js\": [\n\t\t611,\n\t\t35\n\t],\n\t\"./chart/chart.js\": [\n\t\t604,\n\t\t0,\n\t\t2,\n\t\t23\n\t],\n\t\"./chart/chartContext.js\": [\n\t\t583,\n\t\t36\n\t],\n\t\"./chart/chartElements.js\": [\n\t\t595,\n\t\t0,\n\t\t2,\n\t\t25\n\t],\n\t\"./chart/chartHelpers.js\": [\n\t\t597,\n\t\t15\n\t],\n\t\"./chart/chartIcon.js\": [\n\t\t588,\n\t\t37\n\t],\n\t\"./chart/chartLegend.js\": [\n\t\t596,\n\t\t14\n\t],\n\t\"./chart/chartTooltip.js\": [\n\t\t593,\n\t\t38\n\t],\n\t\"./form/checkbox.js\": [\n\t\t617,\n\t\t24\n\t],\n\t\"./form/formHelpers.js\": [\n\t\t591,\n\t\t39\n\t],\n\t\"./form/formState.js\": [\n\t\t618,\n\t\t16\n\t],\n\t\"./form/select.js\": [\n\t\t586,\n\t\t0,\n\t\t1,\n\t\t40\n\t],\n\t\"./form/textInput.js\": [\n\t\t598,\n\t\t21\n\t],\n\t\"./graphCard/graphCard.js\": [\n\t\t605,\n\t\t0,\n\t\t2,\n\t\t18\n\t],\n\t\"./graphCard/graphCardChartLegend.js\": [\n\t\t600,\n\t\t29\n\t],\n\t\"./graphCard/graphCardChartTooltip.js\": [\n\t\t599,\n\t\t26\n\t],\n\t\"./graphCard/graphCardHelpers.js\": [\n\t\t589,\n\t\t41\n\t],\n\t\"./guestsList/guestsList.js\": [\n\t\t594,\n\t\t33\n\t],\n\t\"./i18n/i18n.js\": [\n\t\t34\n\t],\n\t\"./inventoryList/inventoryList.js\": [\n\t\t606,\n\t\t3,\n\t\t13\n\t],\n\t\"./inventoryList/inventoryListHelpers.js\": [\n\t\t585,\n\t\t42\n\t],\n\t\"./inventorySubscriptions/inventorySubscriptions.js\": [\n\t\t607,\n\t\t3,\n\t\t19\n\t],\n\t\"./inventoryTabs/inventoryTab.js\": [\n\t\t592,\n\t\t43\n\t],\n\t\"./inventoryTabs/inventoryTabs.js\": [\n\t\t608,\n\t\t4,\n\t\t28\n\t],\n\t\"./loader/loader.js\": [\n\t\t192\n\t],\n\t\"./messageView/messageView.js\": [\n\t\t147\n\t],\n\t\"./minHeight/minHeight.js\": [\n\t\t587,\n\t\t44\n\t],\n\t\"./optinView/optinView.js\": [\n\t\t623,\n\t\t20\n\t],\n\t\"./pageLayout/pageColumns.js\": [\n\t\t207\n\t],\n\t\"./pageLayout/pageHeader.js\": [\n\t\t136\n\t],\n\t\"./pageLayout/pageLayout.js\": [\n\t\t93\n\t],\n\t\"./pageLayout/pageMessages.js\": [\n\t\t137\n\t],\n\t\"./pageLayout/pageSection.js\": [\n\t\t208\n\t],\n\t\"./pageLayout/pageToolbar.js\": [\n\t\t138\n\t],\n\t\"./pagination/pagination.js\": [\n\t\t590,\n\t\t34\n\t],\n\t\"./pagination/paginationHelpers.js\": [\n\t\t584,\n\t\t45\n\t],\n\t\"./productView/productView.js\": [\n\t\t612,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t12\n\t],\n\t\"./productView/productViewMissing.js\": [\n\t\t624,\n\t\t22\n\t],\n\t\"./productView/productViewOpenShiftContainer.js\": [\n\t\t619,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t9\n\t],\n\t\"./productView/productViewOpenShiftDedicated.js\": [\n\t\t620,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t8\n\t],\n\t\"./productView/productViewRhel.js\": [\n\t\t621,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t10\n\t],\n\t\"./productView/productViewSatellite.js\": [\n\t\t622,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t11\n\t],\n\t\"./router/index.js\": [\n\t\t59\n\t],\n\t\"./router/redirect.js\": [\n\t\t205\n\t],\n\t\"./router/router.js\": [\n\t\t133\n\t],\n\t\"./router/routerHelpers.js\": [\n\t\t66\n\t],\n\t\"./table/table.js\": [\n\t\t193\n\t],\n\t\"./table/tableEmpty.js\": [\n\t\t225\n\t],\n\t\"./table/tableSkeleton.js\": [\n\t\t224\n\t],\n\t\"./tabs/tabs.js\": [\n\t\t601,\n\t\t4,\n\t\t46\n\t],\n\t\"./toolbar/toolbar.js\": [\n\t\t610,\n\t\t0,\n\t\t1,\n\t\t3,\n\t\t27\n\t],\n\t\"./toolbar/toolbarFieldDisplayName.js\": [\n\t\t603,\n\t\t17\n\t],\n\t\"./toolbar/toolbarFieldGranularity.js\": [\n\t\t609,\n\t\t0,\n\t\t1,\n\t\t30\n\t],\n\t\"./toolbar/toolbarFieldRangedMonthly.js\": [\n\t\t613,\n\t\t0,\n\t\t1,\n\t\t31\n\t],\n\t\"./toolbar/toolbarFieldUom.js\": [\n\t\t614,\n\t\t0,\n\t\t1,\n\t\t32\n\t],\n\t\"./toolbar/toolbarHelpers.js\": [\n\t\t602,\n\t\t47\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 386;\nmodule.exports = webpackAsyncContext;","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(({ schema = {}, data, customResponseValue, keyPrefix: prefix }) => {\n    const isArray = Array.isArray(data);\n    const updatedData = (isArray && data) || (data && [data]) || [];\n    const [generatedSchema = {}] = setResponseSchemas([schema]);\n    const parsedResponse = [];\n\n    updatedData.forEach((value, index) => {\n      const generateReflectedData = ({ dataObj, keyPrefix = '', customValue = null, update = helpers.noop }) => {\n        const updatedDataObj = {};\n\n        Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n          const casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n          let val = dataObjValue;\n\n          if (typeof val === 'number') {\n            val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n          }\n\n          if (typeof customValue === 'function') {\n            updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n          } else {\n            updatedDataObj[casedDataObjKey] = val;\n          }\n        });\n\n        update(updatedDataObj);\n      };\n\n      generateReflectedData({\n        keyPrefix: prefix,\n        dataObj: { ...generatedSchema, ...value },\n        customValue: customResponseValue,\n        update: generatedData => parsedResponse.push(generatedData)\n      });\n    });\n\n    parsedResponses.push(parsedResponse);\n  });\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 400 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    delete updatedMeta.data;\n    delete updatedMeta.id;\n    delete updatedMeta.query;\n\n    return {\n      meta: { ...updatedMeta },\n      metaData: meta.data,\n      metaId: meta.id,\n      metaQuery: meta.query\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { platformApiTypes } from '../../types';\n\n/**\n * Modify actions' payload for privacy.\n *\n * @param {object} action\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeActionHeaders = ({ payload, ...action }) => {\n  if (payload) {\n    let updatedPayload = { ...payload, headers: {} };\n\n    if (Array.isArray(payload)) {\n      updatedPayload = payload.map(({ headers, ...obj }) => ({ ...obj, headers: {} }));\n    }\n\n    return { payload: updatedPayload, ...action };\n  }\n\n  return { ...action };\n};\n\n/**\n * Modify actions' payload data for privacy.\n *\n * @param {object} action\n * @param {string} action.type\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeData = ({ type, payload, ...action }) => {\n  const removeUserIdentity = obj => {\n    if (obj?.data?.user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]) {\n      return {\n        ...obj,\n        data: {\n          ...obj.data,\n          user: {\n            ...obj.data.user,\n            [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]: {\n              ...obj.data.user[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY],\n              [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]: {}\n            }\n          }\n        }\n      };\n    }\n\n    return undefined;\n  };\n\n  const updatedPayload = removeUserIdentity(payload) || payload;\n  const updatedAction = removeUserIdentity(action) || action;\n\n  if (updatedPayload) {\n    return { type, payload: updatedPayload, ...updatedAction };\n  }\n\n  return { type, ...updatedAction };\n};\n\n/**\n * Return existing sessionStorage log.\n *\n * @param {string} id\n * @param {number} limit\n * @returns {Array}\n */\nconst getActions = (id, limit) => {\n  const { sessionStorage } = window;\n  const item = sessionStorage.getItem(id);\n  let parsedItems = (item && (JSON.parse(item) || {})?.actions) || [];\n\n  if (parsedItems?.length && limit > 0) {\n    parsedItems = parsedItems.slice(limit * -1);\n  }\n\n  return parsedItems;\n};\n\n/**\n * Store actions against an id in sessionStorage.\n *\n * @param {object} action\n * @param {object} config\n * @param {number} config.id\n * @param {number} config.limit\n */\nconst recordAction = (action, { id, limit, ...config }) => {\n  const { navigator, sessionStorage } = window;\n  const items = getActions(id, limit) || [];\n  const priorItem = items[items.length - 1];\n  const updatedAction = sanitizeData(sanitizeActionHeaders(action));\n  const actionObj = {\n    diff: 0,\n    timestamp: Date.now(),\n    action: updatedAction\n  };\n\n  if (priorItem && priorItem.timestamp) {\n    actionObj.diff = actionObj.timestamp - priorItem.timestamp;\n  }\n\n  items.push(actionObj);\n  sessionStorage.setItem(\n    id,\n    JSON.stringify({\n      browser: navigator.userAgent,\n      timestamp: new Date().toLocaleString(),\n      ...config,\n      actions: items\n    })\n  );\n};\n\n/**\n * Expose settings and record middleware.\n *\n * @param {object} config\n * @returns {Function}\n */\nconst actionRecordMiddleware = (config = {}) => () => next => action => {\n  recordAction(action, {\n    id: 'actionRecordMiddleware/v1',\n    limit: 100,\n    ...config\n  });\n\n  return next(action);\n};\n\nexport { actionRecordMiddleware as default, actionRecordMiddleware };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { actionRecordMiddleware } from './actionRecordMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  actionRecordMiddleware({\n    id: process.env.REACT_APP_UI_LOGGER_ID,\n    app: { version: process.env.REACT_APP_UI_VERSION }\n  }),\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","const SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","const SET_INVENTORY_TAB = 'SET_INVENTORY_TAB';\n\n/**\n * Inventory action, reducer types.\n *\n * @type {{SET_INVENTORY_TAB: string}}\n */\nconst inventoryTypes = {\n  SET_INVENTORY_TAB\n};\n\nexport { inventoryTypes as default, inventoryTypes, SET_INVENTORY_TAB };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_GLOBAL_FILTER_HIDE = 'PLATFORM_GLOBAL_FILTER_HIDE';\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_GLOBAL_FILTER_HIDE: string, PLATFORM_INIT: string,\n *     PLATFORM_SET_NAV: string, PLATFORM_CLEAR_NOTIFICATIONS: string, PLATFORM_ADD_NOTIFICATION: string,\n *     PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n","import { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\nconst SET_QUERY_RESET_INVENTORY_LIST = 'SET_QUERY_RESET_INVENTORY_LIST';\n\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.END_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.END_DATE}`,\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.START_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.START_DATE}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\nconst SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DISPLAY_NAME}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\nconst SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES: object, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string,\n *     SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES: object, SET_QUERY_RESET_INVENTORY_LIST: string}}\n */\nconst queryTypes = {\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n","const GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\nconst GET_MESSAGE_REPORTS_RHSM = 'GET_MESSAGE_REPORTS_RHSM';\nconst GET_SUBSCRIPTIONS_INVENTORY_RHSM = 'GET_SUBSCRIPTIONS_INVENTORY_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_MESSAGE_REPORTS_RHSM: string,\n * GET_HOSTS_INVENTORY_GUESTS_RHSM: string, GET_SUBSCRIPTIONS_INVENTORY_RHSM: string,\n * GET_HOSTS_INVENTORY_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_AUTH: string, USER_LOCALE: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_AUTH,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { inventoryTypes } from './inventoryTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  inventory: inventoryTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  inventoryTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","const SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}}}\n */\nconst initialState = {\n  legend: {},\n  reportCapacity: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          ...action.legend\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [{ ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM }],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { inventoryTypes } from '../types';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{subscriptionsInventory: {}, tabs: {}, hostsInventory: {}, hostsGuests: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {},\n  subscriptionsInventory: {},\n  tabs: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system and subscriptions inventory to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inventoryTypes.SET_INVENTORY_TAB:\n      return reduxHelpers.setStateProp(\n        'tabs',\n        {\n          ...action.tabs\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n          { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM },\n          { ref: 'subscriptionsInventory', type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{report: {}}}\n */\nconst initialState = {\n  report: {}\n};\n\n/**\n * Generated daily observer/reducer for report to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst messagesReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [{ ref: 'report', type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM }],\n    state,\n    action\n  );\n\nmessagesReducer.initialState = initialState;\n\nexport { messagesReducer as default, initialState, messagesReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, userTypes } from '../types';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{session: {errorCodes: Array, locale: string}, optin: {}}}\n */\nconst initialState = {\n  optin: {},\n  session: {\n    errorCodes: [],\n    locale: null\n  }\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(\n          reduxHelpers.getDataFromResults(action),\n          [rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA],\n          []\n        );\n\n        return reduxHelpers.setStateProp(\n          'session',\n          {\n            error: true,\n            errorCodes: errorCodes.map(value => value[rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE]),\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            locale: state.session.locale,\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'session', type: userTypes.USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { routerHelpers } from '../../components/router';\nimport { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphTallyQuery: {}, inventoryHostsQuery: {}, inventorySubscriptionsQuery: {}, query: {},\n *     inventoryGuestsQuery: {}}}\n */\nconst initialState = {\n  query: {},\n  graphTallyQuery: {},\n  inventoryGuestsQuery: {},\n  inventoryHostsQuery: {},\n  inventorySubscriptionsQuery: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST:\n      const updateResetQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n\n          delete productQuery[RHSM_API_QUERY_TYPES.DIRECTION];\n          delete productQuery[RHSM_API_QUERY_TYPES.SORT];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateResetQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateResetQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updateClearQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateClearQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateClearQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'graphTallyQuery',\n        {\n          [action.viewId]: {\n            ...state.graphTallyQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.START_DATE]: action[RHSM_API_QUERY_TYPES.START_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.END_DATE]: action[RHSM_API_QUERY_TYPES.END_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: action[RHSM_API_QUERY_TYPES.DISPLAY_NAME]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport messagesReducer from './messagesReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  messages: messagesReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  messagesReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","import _set from 'lodash/set';\nimport { helpers } from '../common';\nimport {\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES\n} from '../types/platformApiTypes';\n\n/**\n * Basic user authentication.\n *\n * @returns {Promise<void>}\n */\nconst getUser = async () => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE &&\n        _set(\n          {},\n          [\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n          ],\n          process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n        )) ||\n      (await insights.chrome.auth.getUser())\n    );\n  } catch (e) {\n    throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n  }\n};\n\n/**\n * FixMe: revert this back towards async/await\n * Removed because there appears to be some quirky behavior where permissions will not come through\n * unless the function, and/or await are specifically returned, i.e. \"return await insights.chrome...\".\n */\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @returns {Promise<void>}\n */\nconst getUserPermissions = appName => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE && [\n        {\n          [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_ONE\n        },\n        {\n          [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_TWO\n        }\n      ]) ||\n      insights.chrome.getUserPermissions(appName)\n    );\n  } catch (e) {\n    throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Disables the Platform's global filter display.\n *\n * @param {boolean} isHidden\n * @returns {Promise<*>}\n */\nconst hideGlobalFilter = async (isHidden = true) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.hideGlobalFilter(isHidden);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<void>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n// FixMe: Revert catch to throwing an error. Relaxed for development\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<void>}\n */\nconst setAppName = async (name = null) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.identifyApp(name);\n  } catch (e) {\n    const error = `{ identifyApp } = insights.chrome, ${e.message}`;\n    await Promise.reject(error);\n  }\n};\n\n/**\n * Set app routes via the platform left-nav navigation.\n *\n * @param {string} id The navigation ID associated with internal route config, and external platform nav config\n * @param {object} options\n * @param {string} options.appName\n * @param {boolean} options.secondaryNav\n * @returns {Promise<object>}\n */\nconst setAppNav = async (id, { appName = helpers.UI_NAME, secondaryNav = true } = {}) => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE && { [platformApiTypes.PLATFORM_API_RESPONSE_NAV_TYPES.ACTIVE_APP]: id }) ||\n      (await insights.chrome.appNavClick({ id, secondaryNav, parentId: appName }))\n    );\n  } catch (e) {\n    throw new Error(`{ appNavClick } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = {\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Hide platform global filter.\n *\n * @param {boolean} isHidden\n * @returns {{Function}}\n */\nconst hideGlobalFilter = isHidden => ({\n  type: platformTypes.PLATFORM_GLOBAL_FILTER_HIDE,\n  payload: platformServices.hideGlobalFilter(isHidden)\n});\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for changing routes via the left-nav navigation.\n *\n * @param {string} id\n * @param {object} options\n * @param {string} options.appName\n * @param {boolean} options.secondaryNav\n * @returns {Function}\n */\nconst setAppNav = (id, { appName, secondaryNav } = {}) => dispatch =>\n  dispatch({\n    type: platformTypes.PLATFORM_SET_NAV,\n    payload: platformServices.setAppNav(id, { appName, secondaryNav }),\n    meta: {\n      id,\n      appName,\n      secondaryNav\n    }\n  });\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n","import axios, { CancelToken } from 'axios';\nimport LruCache from 'lru-cache';\nimport { platformServices } from './platformServices';\n\n/**\n * Apply consistent service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {object}\n */\nconst cancelTokens = {};\n\n/**\n * Cache Axios service call responses.\n *\n * @type {object}\n */\nconst responseCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_AJAX_CACHE, 10),\n  max: 100,\n  updateAgeOnGet: true\n});\n\n/**\n * Call platform \"getUser\" auth method, and apply service config. Service configuration\n * includes the ability to cancel all and specific calls, and cache specific calls with\n * their success response only. The cache will refresh its timeout on continuous calls.\n * To reset it a user will either need to refresh the page or wait the \"maxAge\".\n *\n * @param {object} config\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n\n  const updatedConfig = { ...config };\n  const axiosInstance = axios.create();\n\n  if (updatedConfig.cancel === true) {\n    const cancelTokensId = `${updatedConfig.cancelId || ''}-${updatedConfig.url}`;\n\n    if (cancelTokens[cancelTokensId]) {\n      cancelTokens[cancelTokensId].cancel('cancelled request');\n    }\n\n    cancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = cancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  if (updatedConfig.cache === true) {\n    const sortedParams = Object.entries(updatedConfig.params).sort(([a], [b]) => a.localeCompare(b));\n    const cacheId = `${updatedConfig.url}-${JSON.stringify(sortedParams)}`;\n    const cachedResponse = responseCache.get(cacheId);\n\n    if (cachedResponse) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          ...cachedResponse,\n          status: 304,\n          statusText: 'Not Modified',\n          config: adapterConfig\n        });\n    }\n\n    axiosInstance.interceptors.response.use(response => {\n      responseCache.set(cacheId, response);\n      return response;\n    });\n\n    delete updatedConfig.cache;\n  }\n\n  return axiosInstance(serviceConfig(updatedConfig));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getApiVersion = (options = {}) => {\n  const { cache = false, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {string} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {string} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {object} links\n * @apiSuccess {object} meta\n * @apiSuccess {string} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {string} meta.product\n * - RHEL\n * @apiSuccess {number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 12\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 4\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000.057890,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"has_cloudigrade_data\": true,\n *           \"has_cloudigrade_mismatch\": true,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\",\n *         \"total_core_hours\": 30500.04,\n *         \"total_instance_hours\": 35\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.20,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.15,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.11,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.32,\n *           \"instance_hours\": 23\n *         },\n *         {\n *           \"date\": \"2020-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.42,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 999.06,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\",\n *         \"total_core_hours\": 200.03,\n *         \"total_instance_hours\": 26\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 400,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\",\n *         \"total_core_hours\": 2050.04\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 500\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-123456789012\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.05,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 70,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6N\",\n *           \"cloud_provider\": \"AZURE\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.00,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"CLOUD\",\n *           \"measurement_type\": \"CLOUD\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6M\",\n *           \"cores\": 4,\n *           \"core_hours\": 1000.20,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 10,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"display_name\": \"dolor.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6L\",\n *           \"cores\": 4,\n *           \"core_hours\": 1001.60,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 1,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"display_name\": \"lorem.test.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YX\",\n *           \"cores\": 4,\n *           \"core_hours\": 999.60,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"display_name\": \"lorem.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YZ\",\n *           \"cores\": 0,\n *           \"core_hours\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"display_name\": \"lorem.another.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YA\",\n *           \"cores\": 0,\n *           \"core_hours\": 0.01,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-21T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YB\",\n *           \"cores\": 0,\n *           \"core_hours\": 999.61,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-22T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YC\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-23T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YD\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-24T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YEE\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-26T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YF\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-29T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 11\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = false, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', id),\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/subscriptions/products/:product_id Get RHSM subscriptions table/inventory data\n * @apiDescription Retrieve subscriptions table/inventory data.\n *\n * Reference [RHSM for subscriptions table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"sku\": \"RH00011\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscription_numbers\": [\"1234567890\", \"1234567890\", \"1234567890\"],\n *           \"upcoming_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"upcoming_event_type\": \"Subscription Begin\",\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\"\n *         },\n *         {\n *           \"sku\": \"RH00010\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server\",\n *           \"service_level\": \"Self-Support\",\n *           \"usage\": \"Production\",\n *           \"subscription_numbers\": [\"1234567890\", \"1234567890\", \"1234567890\"],\n *           \"upcoming_event_date\": \"2020-04-02T00:00:00Z\",\n *           \"upcoming_event_type\": \"Subscription Begin\",\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\"\n *         },\n *         {\n *           \"sku\": \"RH00009\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscription_numbers\": [\"1234567890\", \"1234567890\", \"1234567890\"],\n *           \"upcoming_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"upcoming_event_type\": \"Subscription End\",\n *           \"physical_capacity\": 2,\n *           \"virtual_capacity\": 2,\n *           \"total_capacity\": 4,\n *           \"uom\": \"Cores\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API subscriptions data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getSubscriptionsInventory = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_SUBSCRIPTIONS}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\nconst rhsmServices = {\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getSubscriptionsInventory\n};\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getSubscriptionsInventory\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsmServices';\n\n/**\n * Get a combined RHSM response from reporting and capacity.\n *\n * @param {string} id\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphReportsCapacity = (id = null, query = {}, options = {}) => dispatch => {\n  const { cancelId = 'graphReportsCapacity' } = options;\n\n  return dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n    payload: Promise.all([\n      rhsmServices.getGraphReports(id, query, { cancelId }),\n      rhsmServices.getGraphCapacity(id, query, { cancelId })\n    ]),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n};\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n    payload: rhsmServices.getHostsInventory(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n    payload: rhsmServices.getHostsInventoryGuests(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a RHSM response from message reporting.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getMessageReports = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM,\n    payload: rhsmServices.getGraphReports(id, query, { cancelId: 'messageReport' }),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a subscriptions response from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getSubscriptionsInventory = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM,\n    payload: rhsmServices.getSubscriptionsInventory(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActions = {\n  getGraphReportsCapacity,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n\nexport {\n  rhsmActions as default,\n  rhsmActions,\n  getGraphReportsCapacity,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { rbacConfig as permissions } from '../config';\nimport { getUser, getUserPermissions } from './platformServices';\nimport { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * Apply an emulated API response to the platforms getUser method.\n *\n * @returns {Promise<{data: {permissions: (void|*[]), user: void}, message: string, status: number}>}\n */\nconst authorizeUser = async () => {\n  const updatedPermissions = Object.keys(permissions);\n  let message = '{ auth.getUser, getUserPermissions } = insights.chrome';\n  let userData;\n  let userPermissions;\n\n  try {\n    userData = await getUser();\n\n    if (updatedPermissions.length) {\n      const allPermissions = await Promise.all(updatedPermissions.map(app => getUserPermissions(app)));\n\n      if (Array.isArray(allPermissions)) {\n        userPermissions = [...allPermissions.flat()];\n      }\n    } else {\n      userPermissions = await getUserPermissions();\n    }\n  } catch (e) {\n    message = e.message;\n  }\n\n  if (_isPlainObject(userData) && Object.keys(userData).length) {\n    return Promise.resolve({ data: { user: userData, permissions: userPermissions || [] }, message, status: 200 });\n  }\n\n  const emulatedErrorResponse = {\n    ...new Error(message),\n    message,\n    status: 418\n  };\n\n  return Promise.reject(emulatedErrorResponse);\n};\n\n/**\n * Return a platform locale value from a cookie.\n *\n * @private\n * @returns {{value: string, key: string | null}|null}\n */\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\n/**\n * Return platform locale.\n *\n * @returns {Promise<{data: void}>}\n */\nconst getLocale = () => {\n  const defaultLocale = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = (options = {}) => {\n  const { cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport {\n  userServices as default,\n  userServices,\n  authorizeUser,\n  getLocale,\n  logoutUser,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get an emulated API response from the platforms \"getUser\" method.\n *\n * @returns {Function}\n */\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userServices.authorizeUser()\n  });\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userServices.getLocale()\n});\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn = (query = {}) => dispatch =>\n  dispatch({\n    type: userTypes.UPDATE_USER_OPTIN,\n    payload: userServices.updateAccountOptIn(query),\n    meta: {\n      query,\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsErrorDescription'),\n          dismissable: true\n        },\n        fulfilled: {\n          variant: 'success',\n          title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsSuccessDescription'),\n          dismissable: true,\n          autoDismiss: false\n        }\n      }\n    }\n  });\n\nconst userActions = { authorizeUser, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport {\n  userActions as default,\n  userActions,\n  authorizeUser,\n  getLocale,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from './reduxHelpers';\n\n/**\n * Parse a query object against a schema for specific RHSM endpoints.\n *\n * @param {object} query\n * @param {object} queries\n * @returns {{graphTallyQuery: object, inventoryHostsQuery: object, inventorySubscriptionsQuery: object,\n *     query: object, inventoryGuestsQuery: object, toolbarQuery: object}}\n */\nconst parseRhsmQuery = (query = {}, queries = {}) => {\n  const { graphTallyQuery, inventoryGuestsQuery, inventoryHostsQuery, inventorySubscriptionsQuery } = queries;\n\n  const updatedGraphTallyQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES);\n  const updatedInventoryGuestsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES\n  );\n  const updatedInventoryHostsQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES);\n  const updatedInventorySubscriptionsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES\n  );\n\n  return {\n    query,\n    graphTallyQuery: { ...updatedGraphTallyQuery, ...graphTallyQuery },\n    inventoryGuestsQuery: { ...updatedInventoryGuestsQuery, ...inventoryGuestsQuery },\n    inventoryHostsQuery: { ...updatedInventoryHostsQuery, ...inventoryHostsQuery },\n    inventorySubscriptionsQuery: { ...updatedInventorySubscriptionsQuery, ...inventorySubscriptionsQuery },\n    toolbarQuery: query\n  };\n};\n\nconst apiQueries = {\n  parseRhsmQuery\n};\n\nexport { apiQueries as default, apiQueries };\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{data: {object}}}\n */\nconst selectorCache = { data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  report: state.messages?.report?.[props.productId],\n  viewId: props.viewId,\n  productId: props.productId\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => ({\n  ...props.query,\n  ...state.view?.query?.[props.productId],\n  ...state.view?.query?.[props.viewId]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{appMessages: {cloudigradeMismatch: boolean}}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (data, query = {}) => {\n  const { viewId = null, productId = null, report = {} } = data || {};\n  const appMessages = {\n    cloudigradeMismatch: false\n  };\n\n  const cache = (viewId && productId && selectorCache.data[`${viewId}_${productId}`]) || undefined;\n\n  Object.assign(appMessages, { ...cache });\n\n  // Scan Tally response for Cloud Meter flags\n  if (report.fulfilled && appMessages.cloudigradeMismatch !== true) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA]: reportData = [] } = report.data || {};\n\n    const cloudigradeMismatch = reportData\n      .reverse()\n      .find(\n        ({ [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]: mismatch }) =>\n          mismatch === true\n      );\n\n    appMessages.cloudigradeMismatch = cloudigradeMismatch !== undefined;\n\n    selectorCache.data[`${viewId}_${productId}`] = {\n      ...appMessages\n    };\n  }\n\n  return { appMessages, query };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{appMessages: {cloudigradeMismatch: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst appMessagesSelectors = {\n  appMessages: selector,\n  makeAppMessages: makeSelector\n};\n\nexport { appMessagesSelectors as default, appMessagesSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\nimport { rbacConfig as permissions } from '../../config';\nimport {\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES as APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES\n} from '../../types/platformApiTypes';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @returns {object}\n */\nconst statePropsFilter = state => ({\n  ...state.user?.session\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{session: {entitled: boolean, permissions: object, authorized: object, admin: boolean,\n *     error: boolean}}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter], response => {\n  const { error = false, fulfilled = false, data = {}, ...rest } = response || {};\n  const updatedSession = {\n    ...rest,\n    admin: false,\n    entitled: false,\n    error,\n    authorized: {},\n    permissions: {}\n  };\n\n  if (!error && fulfilled) {\n    const { user = {}, permissions: responsePermissions = [] } = data;\n\n    updatedSession.admin =\n      user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]?.[\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER\n      ]?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN] || false;\n\n    updatedSession.entitled =\n      user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]?.[APP_TYPES.SUBSCRIPTIONS]?.[\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED\n      ] || false;\n\n    // All permissions breakdown\n    responsePermissions.forEach(\n      ({\n        [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n        [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n      }) => {\n        const [app = '', resource, operation] = permission?.split(':') || [];\n\n        if (!updatedSession.permissions[app]) {\n          updatedSession.permissions[app] = {\n            all: false,\n            resources: {}\n          };\n        }\n\n        if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n          updatedSession.permissions[app].all = true;\n        }\n\n        if (!updatedSession.permissions[app].resources[resource]) {\n          updatedSession.permissions[app].resources[resource] = {};\n        }\n\n        updatedSession.permissions[app].resources[resource][operation] = definitions;\n      }\n    );\n\n    // Alias specific app permissions checks\n    Object.entries(permissions).forEach(([key, { permissions: resourcePermissions }]) => {\n      updatedSession.authorized[key] = updatedSession.permissions[key]?.all || false;\n\n      resourcePermissions.forEach(({ resource: res, operation: op }) => {\n        if (updatedSession.permissions[key]?.resources?.[res]?.[op]) {\n          updatedSession.authorized[key] = true;\n        }\n      });\n    });\n  }\n\n  return { session: updatedSession };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{session: {entitled: boolean, permissions: Array, authorized: boolean, admin: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst userSessionSelectors = {\n  userSession: selector,\n  makeUserSession: makeSelector\n};\n\nexport { userSessionSelectors as default, userSessionSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsGuests?.[props.id]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter], response => {\n  const { metaId, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    status: responseData.status\n  };\n\n  if (responseData.fulfilled) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [] } = responseData.data || {};\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n      data: listData,\n      customResponseValue: customInventoryValue\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    updatedResponseData.listData = updatedListData;\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst guestsListSelectors = {\n  guestsList: selector,\n  makeGuestsList: makeSelector\n};\n\nexport { guestsListSelectors as default, guestsListSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport LruCache from 'lru-cache';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.graph?.reportCapacity?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { graphTallyQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      graphTallyQuery: { ...state.view?.graphTallyQuery?.[props.viewId] }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    graphData: {},\n    meta: {},\n    query,\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, responseMetaQuery)) {\n    const [report, capacity] = responseData.data;\n    const reportData = report?.[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA] || [];\n    const reportMeta = report?.[rhsmApiTypes.RHSM_API_RESPONSE_META] || {};\n    const capacityData = capacity?.[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA] || [];\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Reporting graph entries\n    const customReportValue = (data, key, presetData) => ({\n      ...presetData,\n      hasData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_DATA],\n      hasCloudigradeData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_DATA],\n      hasCloudigradeMismatch: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]\n    });\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y,\n      hasInfinite: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE]\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment.utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE]).startOf('day').toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY =\n                (Number.isInteger(graphDataObj[graphDataObjKey]) &&\n                  Number.parseInt(graphDataObj[graphDataObjKey], 10)) ||\n                Number.parseFloat(Number.parseFloat(graphDataObj[graphDataObjKey]).toFixed(2));\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value }, customValue: customReportValue });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Generate normalized properties\n    const [updatedReportMeta] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n      data: reportMeta\n    });\n\n    const [meta = {}] = updatedReportMeta || [];\n\n    // Update response and cache\n    Object.assign(updatedResponseData.meta, meta);\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst graphCardSelectors = {\n  graphCard: selector,\n  makeGraphCard: makeSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport LruCache from 'lru-cache';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventoryHostsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventoryHostsQuery: {\n        ...state.view?.inventoryHostsQuery?.[props.productId],\n        ...state.view?.inventoryHostsQuery?.[props.viewId]\n      }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Note: We use an in-memory cache to provide the user a pleasant UX experience. To\n * aid in that UX we need \"pending\" to fire in scenarios that are not loaded in-memory. Because\n * we load the cache first there are scenarios where the previous XHR call is still in state\n * when a subsequent fulfilled XHR call comes through. Without the _isEqual(query, metaQuery) check\n * the overlap of the prior fulfilled call interferes with the pending of the subsequent call.\n */\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, metaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.CLOUD_PROVIDER:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.HARDWARE:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.MEASUREMENT:\n          return value?.toLowerCase() || null;\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst inventoryListSelectors = {\n  inventoryList: selector,\n  makeInventoryList: makeSelector\n};\n\nexport { inventoryListSelectors as default, inventoryListSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport LruCache from 'lru-cache';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * ToDo: Consider consolidating inventory selectors, and/or create API specific selectors, i.e. RHSM, etc\n * Breaking out the inventory selectors is a temporary solution until the API is finalized. Aspects\n * of the caching and applying the API schemas is now consistent enough to allow for grouping/refinement.\n */\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.subscriptionsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventorySubscriptionsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventorySubscriptionsQuery: {\n        ...state.view?.inventorySubscriptionsQuery?.[props.productId],\n        ...state.view?.inventorySubscriptionsQuery?.[props.viewId]\n      }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, metaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES.UPCOMING_EVENT_DATE:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst subscriptionsListSelectors = {\n  subscriptionsList: selector,\n  makeSubscriptionsList: makeSelector\n};\n\nexport { subscriptionsListSelectors as default, subscriptionsListSelectors, selector, makeSelector };\n","import appMessagesSelectors from './appMessagesSelectors';\nimport guestsListSelectors from './guestsListSelectors';\nimport graphCardSelectors from './graphCardSelectors';\nimport inventoryListSelectors from './inventoryListSelectors';\nimport subscriptionsListSelectors from './subscriptionsListSelectors';\nimport userSelectors from './userSelectors';\n\nconst reduxSelectors = {\n  appMessages: appMessagesSelectors,\n  guestsList: guestsListSelectors,\n  graphCard: graphCardSelectors,\n  inventoryList: inventoryListSelectors,\n  subscriptionsList: subscriptionsListSelectors,\n  user: userSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect, useDispatch, useSelector as UseSelector, shallowEqual } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxHelpers, apiQueries } from './common';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\nimport { helpers } from '../common';\n\n/**\n * Wrapper for applying Router Dom withRouter and Redux connect.\n *\n * @param {Function} mapStateToProps\n * @param {Function} mapDispatchToProps\n * @returns {Function}\n */\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connect(mapStateToProps, mapDispatchToProps)(component));\n\n/**\n * Wrapper for Redux hook, useSelector. Applies test mode and a fallback value.\n *\n * @param {Function} selector\n * @param {*} value\n * @param {object} options\n * @returns {*}\n */\nconst useSelector = (selector, value = null, options = {}) => {\n  if (helpers.TEST_MODE) {\n    return value;\n  }\n\n  return UseSelector(selector, options.equality) ?? value;\n};\n\nexport {\n  apiQueries,\n  connect,\n  connectRouter,\n  reduxActions,\n  reduxHelpers,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  shallowEqual,\n  store,\n  useDispatch,\n  useSelector\n};\n","import { Redirect } from './redirect';\nimport { Router } from './router';\nimport { routerHelpers } from './routerHelpers';\n\nexport { Redirect, Router, routerHelpers };\n","import React from 'react';\nimport path from 'path';\nimport { helpers } from '../../common/helpers';\nimport { routesConfig } from '../../config';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformLandingRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/');\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformModalRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return an assumed route baseName directory based on existing app name.\n * App name is defined in dotenv and package.json/insights.appname\n * [environment]/[OPTIONAL]/[OPTIONAL]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  `${pathName.split(applicationName)[0]}${applicationName}`;\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName = (helpers.TEST_MODE && '/') || (helpers.DEV_MODE && '/') || dynamicBaseName();\n\n/**\n * Return a base path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBasePath = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  pathName.split(applicationName)[0];\n\n/**\n * App basePath.\n *\n * @type {string}\n */\nconst basePath = (helpers.TEST_MODE && '/') || (helpers.DEV_MODE && '/') || dynamicBasePath();\n\n/**\n * Generate product groups for applying query filter resets.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateProductGroups = (config = routesConfig) => {\n  const productGroups = {};\n\n  config.forEach(({ pathParameter, productParameter }) => {\n    const viewIds = ((Array.isArray(productParameter) && productParameter) || [productParameter]).map(\n      id => (id && `view${id}`) || id\n    );\n\n    viewIds.forEach((id, index) => {\n      if (id) {\n        if (!productGroups[id]) {\n          productGroups[id] = [];\n        }\n\n        if (pathParameter) {\n          productGroups[id].push((Array.isArray(pathParameter) && pathParameter?.[index]) || pathParameter);\n        }\n      }\n    });\n  });\n\n  return productGroups;\n};\n\n/**\n * Reference for products grouped by view.\n */\nconst productGroups = generateProductGroups();\n\n/**\n * Generate routes to be consumed by router.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateRoutes = (config = routesConfig) =>\n  config.map(({ activateOnError, component, disabled, id, path: routePath, redirect }) => ({\n    activateOnError,\n    component,\n    disabled,\n    exact: true,\n    id,\n    path: routePath,\n    redirect\n  }));\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = generateRoutes();\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Match route config entries by path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {Array} params.config\n * @returns {{configs: Array, configFirstMatch: object, configsById: object}}\n */\nconst getRouteConfigByPath = ({ pathName = dynamicBasePath(), config = routesConfig } = {}) => {\n  const basePathDirs = pathName?.split('/').filter(str => str.length > 0);\n  const configs = [];\n  const allConfigs = [];\n  const configsById = {};\n  const allConfigsById = {};\n\n  const findConfig = dir => {\n    config.forEach(({ id, path: configPath, pathParameter, productParameter, aliases, ...configItem }) => {\n      const updatedConfigItem = {\n        aliases,\n        id,\n        path: configPath,\n        pathParameter,\n        productParameter,\n        ...configItem\n      };\n\n      if (\n        dir &&\n        (new RegExp(dir, 'i').test(configPath) ||\n          new RegExp(dir, 'i').test(productParameter?.toString()) ||\n          new RegExp(dir, 'i').test(pathParameter?.toString()) ||\n          new RegExp(dir, 'i').test(aliases?.toString()))\n      ) {\n        if (!configsById[id]) {\n          configsById[id] = { ...updatedConfigItem };\n          configs.push({ ...updatedConfigItem });\n        }\n      }\n\n      if (!allConfigsById[id]) {\n        allConfigsById[id] = { ...updatedConfigItem };\n        allConfigs.push({ ...updatedConfigItem });\n      }\n    });\n  };\n\n  if (basePathDirs?.length) {\n    basePathDirs.forEach(dir => {\n      if (dir) {\n        const decodedDir = window.decodeURI(dir);\n        findConfig(decodedDir);\n      }\n    });\n  } else {\n    findConfig();\n  }\n\n  return { allConfigs, allConfigsById, configs, configsById, firstMatch: configs?.[0] };\n};\n\n/**\n * Return a route config object.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathName\n * @param {boolean} params.returnDefault\n * @param {Array} params.config\n * @returns {object}\n */\nconst getRouteConfig = ({ id = null, pathName, returnDefault = false, config = routesConfig } = {}) => {\n  let navRouteItem;\n\n  if (id) {\n    navRouteItem = config.find(item => item.id === id);\n  }\n\n  if ((!navRouteItem && pathName) || (!navRouteItem && !pathName && !returnDefault)) {\n    navRouteItem = getRouteConfigByPath({ pathName, config }).firstMatch;\n  }\n\n  if (!navRouteItem && returnDefault) {\n    navRouteItem = config.find(item => item.default === true);\n  }\n\n  if (navRouteItem) {\n    const { search = '', hash = '' } = window.location;\n    navRouteItem.routeHref = `${navRouteItem.path}${search}${hash}`;\n\n    const { pathParameter, productParameter } = navRouteItem;\n    navRouteItem.pathParameter = (Array.isArray(pathParameter) && pathParameter[0]) || pathParameter;\n    navRouteItem.productParameter = (Array.isArray(productParameter) && productParameter[0]) || productParameter;\n    navRouteItem.viewParameter =\n      (productParameter && `view${(Array.isArray(productParameter) && productParameter[0]) || productParameter}`) ||\n      productParameter;\n  }\n\n  return { ...(navRouteItem || {}) };\n};\n\n/**\n * Import a route component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst importView = component => React.lazy(() => import(/* webpackExclude: /\\.test\\.js$/ */ `../${component}.js`));\n\nconst routerHelpers = {\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  importView,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  importView,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n","import { RHSM_API_PATH_ID_TYPES } from '../types/rhsmApiTypes';\nimport { helpers } from '../common';\n\nconst routes = [\n  {\n    id: 'rhel',\n    path: '/rhel',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    productParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['insights'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewRhel'\n  },\n  {\n    id: 'rhel-arm',\n    path: '/rhel-arm',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_ARM],\n    productParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewRhel'\n  },\n  {\n    id: 'rhel-ibmpower',\n    path: '/rhel-ibmpower',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER],\n    productParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewRhel'\n  },\n  {\n    id: 'rhel-ibmz',\n    path: '/rhel-ibmz',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z],\n    productParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewRhel'\n  },\n  {\n    id: 'rhel-x86',\n    path: '/rhel-x86',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_X86],\n    productParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewRhel'\n  },\n  {\n    id: 'openshift-container',\n    path: '/openshift-container',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.OPENSHIFT, RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS],\n    productParameter: [RHSM_API_PATH_ID_TYPES.OPENSHIFT, RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewOpenShiftContainer'\n  },\n  {\n    id: 'openshift-dedicated',\n    path: '/openshift-dedicated',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS],\n    productParameter: [RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewOpenShiftDedicated'\n  },\n  {\n    id: 'satellite',\n    path: '/satellite',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE],\n    productParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewSatellite'\n  },\n  {\n    id: 'satellite-capsule',\n    path: '/satellite-capsule',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE_CAPSULE],\n    productParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewSatellite'\n  },\n  {\n    id: 'satellite-server',\n    path: '/satellite-server',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE_SERVER],\n    productParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewSatellite'\n  },\n  {\n    id: 'optin',\n    path: '/optin',\n    pathParameter: null,\n    productParameter: null,\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'optinView/optinView'\n  },\n  {\n    id: 'missing',\n    path: '/',\n    pathParameter: null,\n    productParameter: null,\n    redirect: '/',\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: true,\n    component: 'productView/productViewMissing'\n  }\n];\n\nexport { routes as default, routes };\n","import { platformApiTypes } from './platformApiTypes';\nimport { rhsmApiTypes } from './rhsmApiTypes';\n\nconst apiTypes = {\n  platformApi: platformApiTypes,\n  rhsmApi: rhsmApiTypes\n};\n\nexport { apiTypes as default, apiTypes, platformApiTypes, rhsmApiTypes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageColumns } from './pageColumns';\nimport { PageMessages } from './pageMessages';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageLayout = ({ children, className }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageMessages)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className={`curiosity ${className}`}>\n      {React.Children.toArray(children).filter(\n        child => child.type !== PageHeader && child.type !== PageMessages && child.type !== PageToolbar\n      )}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageLayout.defaultProps = {\n  className: ''\n};\n\nexport { PageLayout as default, PageLayout, PageColumns, PageHeader, PageMessages, PageSection, PageToolbar };\n"],"sourceRoot":""}
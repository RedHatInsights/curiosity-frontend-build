{"version":3,"sources":["components/pagination/paginationHelpers.js"],"names":["calculateOffsetFromPage","page","perPage","calculatePageFromOffset","offset","isLastPage","itemCount","Math","ceil","paginationHelpers"],"mappings":"iIAAA,4PAOA,IAAMA,EAA0B,SAACC,EAAMC,GAAP,OAAmBA,GAAWD,EAAO,IAAM,GASrEE,EAA0B,SAACC,EAAQF,GAAT,OAAqBE,EAASF,EAAU,GAAK,GAUvEG,EAAa,SAACD,EAAQF,EAASI,GAAlB,OACjBH,EAAwBC,EAAQF,KAAaK,KAAKC,KAAKF,EAAYJ,IAE/DO,EAAoB,CACxBT,0BACAG,0BACAE","file":"static/js/45.9df37386.chunk.js","sourcesContent":["/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n"],"sourceRoot":""}
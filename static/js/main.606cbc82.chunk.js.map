{"version":3,"sources":["images/subscriptions.svg","common/helpers.js","components/pageLayout/pageHeader.js","components/pageLayout/pageSection.js","components/pageLayout/pageLayout.js","components/select/select.js","types/rhsmApiTypes.js","common/dateHelpers.js","redux/common/reduxHelpers.js","redux/middleware/index.js","redux/middleware/statusMiddleware.js","redux/types/appTypes.js","redux/types/platformTypes.js","redux/types/rhsmTypes.js","redux/types/userTypes.js","redux/types/index.js","redux/reducers/graphReducer.js","redux/reducers/viewReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store.js","services/platformServices.js","redux/actions/platformActions.js","services/config.js","services/rhsmServices.js","redux/actions/rhsmActions.js","services/userServices.js","redux/actions/index.js","redux/actions/userActions.js","redux/selectors/graphCardSelectors.js","redux/selectors/index.js","redux/index.js","components/i18n/i18n.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardTypes.js","components/chartArea/chartArea.js","components/graphCard/graphCard.js","components/openshiftView/openshiftView.js","components/rhelView/rhelView.js","components/tourView/tourView.js","components/router/routerTypes.js","components/router/routerHelpers.js","components/router/redirect.js","components/router/router.js","components/messageView/messageView.js","components/authentication/authentication.js","components/app.js","index.js"],"names":["module","exports","helpers","generateId","prefix","Math","ceil","random","isPromise","obj","Object","prototype","toString","call","noop","Function","noopPromise","Promise","resolve","noopTranslate","key","value","DEV_MODE","process","PROD_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LOGGER_ID","UI_NAME","UI_PATH","UI_VERSION","window","PageHeader","children","title","defaultProps","PageSection","props","Section","PageLayout","Fragment","React","Children","toArray","filter","child","isValidElement","type","className","Select","state","isExpanded","options","selected","onSelect","event","titleSelection","id","name","variant","updatedOptions","optionsIndex","findIndex","option","SelectVariant","single","forEach","index","updateSelected","opt","map","setState","mockUpdatedOptions","_cloneDeep","mockTarget","selectedIndex","mockEvent","target","currentTarget","persist","onToggle","expanded","this","formatOptions","prevProps","_isEqual","selectedOptions","_isPlainObject","keys","activateOptions","convertedOption","text","textContent","label","includes","find","ariaLabel","isDisabled","placeholder","pfSelectOptions","length","aria-label","selections","placeholderText","btoa","data-value","data-title","Component","RHSM_API_PATH_ID_TYPES","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","OPENSHIFT","RHSM_API_QUERY_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","rhsmApiTypes","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","CORES","DATE","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_CAPACITY_META","RHSM_API_RESPONSE_CAPACITY_META_TYPES","COUNT","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","HAS_DATA","RHSM_API_RESPONSE_PRODUCTS_META","RHSM_API_RESPONSE_PRODUCTS_META_TYPES","RHSM_API_QUERY_GRANULARITY","RHSM_API_QUERY_LIMIT","RHSM_API_QUERY_OFFSET","RHSM_API_QUERY_START_DATE","RHSM_API_QUERY_END_DATE","getCurrentDate","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","date","subtract","measurement","startDate","moment","utc","startOf","toDate","endDate","endOf","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","getSingleResponseFromResultArray","results","updatedResults","payload","Array","isArray","firstErrorResponse","_get","status","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","message","dataResponse","data","formattedStatus","trim","JSON","stringify","getDateFromResults","getStatusFromResults","setStateProp","prop","initialState","reset","singlePromiseDataResponseFromArray","reduxHelpers","schemas","initialValue","schema","generated","values","types","action","expandedTypes","val","subVal","push","ref","RegExp","test","whichType","expandMetaTypes","meta","updatedMeta","query","metaData","metaId","metaQuery","baseState","error","errorMessage","fulfilled","pending","setId","errorStatus","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","config","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","store","dispatch","next","httpStatus","payloadConfig","range","floor","statusMiddleware","promiseMiddleware","notificationsMiddleware","appTypes","STATUS_4XX","STATUS_5XX","platformTypes","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","rhsmTypes","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_RHSM","GET_GRAPH_REPORT_CAPACITY_RHSM","SET_GRAPH_GRANULARITY_RHSM","userTypes","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","capacity","component","report","reportCapacity","graphReducer","viewId","graphGranularity","view","viewReducer","session","authorized","locale","userReducer","reducers","notifications","graph","user","reduxReducers","combineReducers","createStore","applyMiddleware","getUser","a","insights","chrome","auth","Error","platformServices","initializeChrome","init","onNavigation","callback","on","e","setAppName","identifyApp","reject","setNavigation","location","navigation","item","active","pathname","split","slice","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","serviceConfig","passedConfig","headers","timeout","serviceCall","axios","rhsmServices","params","url","rhsmActions","getGraphReportsCapacity","all","getGraphCapacity","getGraphReports","getLocaleFromCookie","Cookies","get","replace","LocaleCode","getLanguageName","userServices","authorizeUser","userData","emulatedErrorResponse","getLocale","defaultLocale","logoutUser","actions","platform","rhsm","reduxActions","graphCardCache","dataId","graphCardSelector","createSelector","productId","response","responseData","updatedResponseData","graphData","syncing","responseGranularity","cachedGranularity","initialLoad","assign","reportData","capacityData","graphDataKey","tallySchema","capacitySchema","customCapacityValue","x","y","generateGraphData","graphDataObj","keyPrefix","customValue","graphDataObjKey","undefined","generatedY","casedGraphDataObjKey","_camelCase","Number","parseInt","updatedItem","reduxSelectors","graphCard","makeGraphCard","connectTranslate","mapStateToProps","mapDispatchToProps","connect","withTranslation","translate","str","i18next","t","I18n","isLoaded","i18nInit","fallbackLng","loadPath","use","XHR","initReactI18next","backend","lng","debug","ns","defaultNS","react","useSuspense","getTooltipDate","formattedDateTooltip","momentDate","format","graphCardHelpers","getChartXAxisLabelIncrement","getTooltips","itemsByKey","product","dateString","thresholdString","dataFacets","join","xAxisTickFormat","tick","previousDate","formattedDate","isNewYear","year","yAxisTickFormat","numbro","average","mantissa","optionalMantissa","graphCardTypes","optionsType","ChartArea","chartWidth","containerRef","createRef","onResizeContainer","containerElement","current","clientWidth","addEventListener","removeEventListener","dataSets","tooltips","updatedDataSets","items","i","_tooltip","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","floored","pow","log10","maxY","chartDomain","legendData","legendLabel","legendDataSettings","symbol","legendSymbolType","isThreshold","themeColor","fill","stroke","legendOrientation","legendPosition","legendComponent","ChartLegend","borderPadding","top","stacked","setDataSets","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","style","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","chartLegendProps","getChartLegend","containerComponent","getContainerComponent","chartProps","Chart","duration","width","ChartAxis","renderChart","ChartStack","VictoryVoronoiCursorContainer","createContainer","containerComponentProps","constrainToVisibleArea","cursorDimension","voronoiDimension","voronoiPadding","mouseFollowTooltips","labelComponent","ChartTooltip","pointerLength","centerOffset","tooltip","flyoutWidth","labels","datum","childName","height","bottom","left","right","GraphCard","onUpdateGraphData","selectOptionsType","updatedGranularity","toISOString","filterGraphData","productShortLabel","chartAreaProps","filtered","tempFiltered","onLoad","chartColorGreenDark","filteredGraphData","cardTitle","Card","CardHead","CardActions","CardBody","Skeleton","size","SkeletonSize","xs","sm","md","lg","ConnectedGraphCard","getGraphCard","OpenshiftView","filters","initialFilters","initialOption","routeDetail","routeItem","pathParameter","pathId","renderSelect","chartColorBlueLight","chartColorBlueDark","TranslatedOpenshiftView","RhelView","chartColorCyanLight","chartColorCyanDark","TranslatedRhelView","TourView","EmptyState","EmptyStateVariant","full","src","subscriptionsSvg","alt","appName","aria-hidden","Title","headingLevel","EmptyStateBody","Button","href","EmptyStateSecondaryActions","ConnectedTourView","platformRedirect","path","routes","to","redirect","exact","render","disabled","activateOnError","default","routerTypes","dynamicBaseName","pathName","pathPrefix","shift","pathSlice","baseName","getErrorRoute","route","getNavigationDetail","navigationItem","returnDefault","defaultItem","getRouteDetail","routerHelpers","getNavRouteDetail","navDetail","Redirect","urlRoute","history","isRedirect","isReplace","forcePath","RoutedRedirect","withRouter","Router","activateOnErrorRoute","redirectRoot","renderRoutes","hasParameters","strict","routeProps","errorRoute","MessageView","icon","EmptyStateIcon","Authentication","removeListeners","appNav","navId","buildNav","listen","BinocularsIcon","BanIcon","ConnectedAuthentication","App","ConnectedApp","connectRouter","basename","document","getElementById"],"mappings":"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","file":"static/js/main.606cbc82.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/subscriptions.0ad5eae0.svg\";","const generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\nconst isPromise = obj => Object.prototype.toString.call(obj) === '[object Promise]';\n\nconst noop = Function.prototype;\n\nconst noopPromise = Promise.resolve({});\n\nconst noopTranslate = (key, value) => `t(${key}${(value && `, ${value}`) || ''})`;\n\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\nconst helpers = {\n  generateId,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LOGGER_ID,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION\n};\n\nwindow[UI_LOGGER_ID] = { ...helpers };\n\nexport { helpers as default, helpers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PageHeader as RcsPageHeader,\n  PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components/components/PageHeader';\n\nconst PageHeader = ({ children }) => (\n  <RcsPageHeader>\n    <PageHeaderTitle title={children} />\n  </RcsPageHeader>\n);\n\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nPageHeader.defaultProps = {};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\n\nconst PageSection = ({ children, ...props }) => <Section {...props}>{children}</Section>;\n\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nPageSection.defaultProps = {};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageSection } from './pageSection';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\nconst PageLayout = ({ children }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    <Main className=\"curiosity\">{React.Children.toArray(children).filter(child => child.type !== PageHeader)}</Main>\n  </React.Fragment>\n);\n\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nPageLayout.defaultProps = {};\n\nexport { PageLayout as default, PageLayout, PageHeader, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options } = this.props;\n\n    if (!_isEqual(prevProps.options, options)) {\n      this.formatOptions();\n    }\n  }\n\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected = activateOptions.includes(convertedOption.value);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, placeholder, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isExpanded={isExpanded}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(option.title)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  placeholder: PropTypes.string,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  selectedOptions: null,\n  placeholder: 'Select option',\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","const RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\nconst RHSM_API_RESPONSE_CAPACITY_META = 'meta';\nconst RHSM_API_RESPONSE_CAPACITY_META_TYPES = {\n  COUNT: 'count'\n};\n\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_DATA: 'has_data'\n};\nconst RHSM_API_RESPONSE_PRODUCTS_META = 'meta';\nconst RHSM_API_RESPONSE_PRODUCTS_META_TYPES = {\n  COUNT: 'count'\n};\n\nconst RHSM_API_PATH_ID_TYPES = {\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  OPENSHIFT: 'OpenShift Container Platform'\n};\n\nconst RHSM_API_QUERY_GRANULARITY = 'granularity';\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\nconst RHSM_API_QUERY_LIMIT = 'limit';\nconst RHSM_API_QUERY_OFFSET = 'offset';\nconst RHSM_API_QUERY_START_DATE = 'beginning';\nconst RHSM_API_QUERY_END_DATE = 'ending';\n\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\n\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\nconst setRangedDateTime = ({ date, subtract, measurement }) => ({\n  startDate: moment\n    .utc(date)\n    .startOf(measurement)\n    .subtract(subtract, measurement)\n    .toDate(),\n  endDate: moment\n    .utc(date)\n    .startOf(measurement)\n    .endOf('days')\n    .toDate()\n});\n\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\n\n/**\n * Return a range of time based on granularity.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {array} schemas\n * @param {*} initialValue\n * @returns {unknown[]}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults = results.payload || results;\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return firstErrorResponse || firstSuccessResponse;\n  }\n\n  return updatedResults;\n};\n\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = _get(updatedResults, 'response.status', updatedResults.status);\n  const statusResponse = _get(updatedResults, 'response.statusText', updatedResults.statusText);\n  const messageResponse = _get(updatedResults, 'response.message', updatedResults.message);\n  const dataResponse = _get(updatedResults, 'response.data', updatedResults.data);\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 300 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return _get(updatedResults, 'response.status', updatedResults.status) || 0;\n};\n\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (process.env.REACT_APP_ENV === 'development' && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (process.env.REACT_APP_ENV === 'development' && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults = results.payload || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    delete updatedMeta.data;\n    delete updatedMeta.id;\n    delete updatedMeta.query;\n\n    return {\n      meta: { ...updatedMeta },\n      metaData: meta.data,\n      metaId: meta.id,\n      metaQuery: meta.query\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          error: true,\n          errorMessage: getMessageFromResults(action),\n          errorStatus: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setResponseSchemas,\n  generatedPromiseActionReducer,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { statusMiddleware } from './statusMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  promiseMiddleware,\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              status: httpStatus,\n              config: payloadConfig,\n              range,\n              message\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              status: httpStatus,\n              config: payloadConfig,\n              range,\n              message\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\n\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n","const GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_RHSM = 'GET_GRAPH_REPORT_RHSM';\nconst GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst SET_GRAPH_GRANULARITY_RHSM = 'SET_GRAPH_GRANULARITY_RHSM';\n\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  SET_GRAPH_GRANULARITY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  SET_GRAPH_GRANULARITY_RHSM\n};\n","const USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\nconst userTypes = { USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport { userTypes as default, userTypes, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n","import { appTypes } from './appTypes';\nimport { platformTypes } from './platformTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  platform: platformTypes,\n  rhsm: rhsmTypes,\n  user: userTypes\n};\n\nexport { reduxTypes as default, reduxTypes, appTypes, platformTypes, rhsmTypes, userTypes };\n","import { reduxTypes, rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\nconst initialState = {\n  capacity: {},\n  component: {},\n  report: {},\n  reportCapacity: {}\n};\n\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM:\n      return reduxHelpers.setStateProp(\n        'component',\n        {\n          [action.viewId]: {\n            graphGranularity: action.graphGranularity\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM },\n          { ref: 'capacity', type: rhsmTypes.GET_GRAPH_CAPACITY_RHSM },\n          { ref: 'report', type: rhsmTypes.GET_GRAPH_REPORT_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","const initialState = {\n  view: {\n    data: [],\n    error: false,\n    errorStatus: null,\n    errorMessage: null,\n    pending: false,\n    fulfilled: false\n  }\n};\n\nconst viewReducer = (state = initialState) => state;\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { appTypes, userTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\nconst initialState = {\n  session: {\n    error: false,\n    errorMessage: null,\n    errorStatus: null,\n    pending: false,\n    fulfilled: false,\n    authorized: false,\n    locale: null\n  }\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.REJECTED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          error: action.error,\n          errorMessage: reduxHelpers.getMessageFromResults(action),\n          errorStatus: reduxHelpers.getStatusFromResults(action),\n          locale: state.session.locale\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.PENDING_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: state.session.locale,\n          pending: true\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          authorized: true,\n          fulfilled: true,\n          locale: state.session.locale\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      if (action.status === 401 || action.status === 403) {\n        return reduxHelpers.setStateProp(\n          'session',\n          {\n            error: true,\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            errorStatus: reduxHelpers.getStatusFromResults(action),\n            locale: state.session.locale\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport viewReducer from './viewReducer';\nimport userReducer from './userReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  view: viewReducer,\n  user: userReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport { reduxReducers as default, reduxReducers, graphReducer, viewReducer, userReducer };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","import { helpers } from '../common';\n\n/**\n * Basic user authentication.\n * @returns {Promise<void>}\n */\nconst getUser = async () => {\n  const { insights } = window;\n  try {\n    return (helpers.DEV_MODE && { test: {} }) || (await insights.chrome.auth.getUser());\n  } catch (e) {\n    throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n * @returns {Promise<void>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n * @param callback {function}\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n// FixMe: Revert catch to throwing an error. Relaxed for development\n/**\n * Set application ID.\n * @param name {string}\n * @returns {Promise<void>}\n */\nconst setAppName = async (name = null) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.identifyApp(name);\n  } catch (e) {\n    const error = `{ identifyApp } = insights.chrome, ${e.message}`;\n    await Promise.reject(error);\n  }\n};\n\n/**\n * Set platform left hand navigation active item.\n * @param data {Array}\n * @returns {*}\n */\nconst setNavigation = (data = []) => {\n  const { insights, location } = window;\n  try {\n    return insights.chrome.navigation(\n      data.map(item => ({\n        ...item,\n        active: item.id === location.pathname.split('/').slice(-1)[0]\n      }))\n    );\n  } catch (e) {\n    throw new Error(`{ navigation } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = { getUser, initializeChrome, onNavigation, setAppName, setNavigation };\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platformServices';\n\nconst addNotification = data => RcsAddNotification(data);\n\nconst removeNotification = id => RcsRemoveNotification(id);\n\nconst clearNotifications = () => RcsClearNotifications();\n\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\nconst setNavigation = data => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_SET_NAV\n  });\n  return platformServices.setNavigation(data);\n};\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import axios from 'axios';\nimport { platformServices } from './platformServices';\n\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\nconst serviceCall = async config => {\n  await platformServices.getUser();\n  return axios(serviceConfig(config));\n};\n\nexport { serviceConfig as default, serviceConfig, serviceCall };\n","import { serviceCall } from './config';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *       \"version\": \"0.0.0\",\n *       \"gitDescription\": \"lorem ipsum\",\n *       \"artifact\": \"dolor sit\",\n *       \"name\": \"lorem\",\n *       \"group\": \"ipsum\",\n *       \"gitHash\": \"0000000000000000\"\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getApiVersion = () =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {ForceStatus} 200\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {Enum} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {Enum} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {Object} links\n * @apiSuccess {Object} meta\n * @apiSuccess {Enum} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {Enum} meta.product\n * - RHEL\n * @apiSuccess {Number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2018-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-05-26T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-02T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-09T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-16T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-23T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-30T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-01-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-02-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-03-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"hypervisor\": 0,\n *           \"sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-04-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-05-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"hypervisor\": 50,\n *           \"sockets\": 48\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} QUARTERLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-01-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"hypervisor\": 50,\n *           \"sockets\": 48\n *         },\n *         {\n *           \"date\": \"2018-04-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2018-07-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2018-10-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"hypervisor\": 10,\n *           \"sockets\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 4,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"quarterly\"\n *       }\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getGraphReports = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2018-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getGraphCapacity = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params\n  });\n\nconst rhsmServices = { getApiVersion, getGraphCapacity, getGraphReports };\n\nexport { rhsmServices as default, rhsmServices, getApiVersion, getGraphCapacity, getGraphReports };\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsmServices';\n\nconst getGraphReportsCapacity = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n    payload: Promise.all([rhsmServices.getGraphReports(id, query), rhsmServices.getGraphCapacity(id, query)]),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst getGraphReports = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_RHSM,\n    payload: rhsmServices.getGraphReports(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst getGraphCapacity = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_GRAPH_CAPACITY_RHSM,\n    payload: rhsmServices.getGraphCapacity(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActions = { getGraphReportsCapacity, getGraphCapacity, getGraphReports };\n\nexport { rhsmActions as default, rhsmActions, getGraphReportsCapacity, getGraphCapacity, getGraphReports };\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { getUser } from './platformServices';\n\nconst authorizeUser = async () => {\n  let message = '{ getUser } = insights.chrome.auth';\n  let userData;\n\n  try {\n    userData = await getUser();\n  } catch (e) {\n    message = e.message;\n  }\n\n  if (_isPlainObject(userData) && Object.keys(userData).length) {\n    return Promise.resolve({ data: userData, message, status: 200 });\n  }\n\n  const emulatedErrorResponse = {\n    ...new Error(message),\n    message,\n    status: 418\n  };\n\n  return Promise.reject(emulatedErrorResponse);\n};\n\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\nconst getLocale = () => {\n  const defaultLocale = {\n    value: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n    key: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC\n  };\n\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser };\n\nexport { userServices as default, userServices, authorizeUser, getLocale, logoutUser };\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/userServices';\n\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userServices.authorizeUser()\n  });\n\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userServices.getLocale()\n});\n\nconst userActions = { authorizeUser, getLocale };\n\nexport { userActions as default, userActions, authorizeUser, getLocale };\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\nimport _get from 'lodash/get';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\nconst graphCardCache = { dataId: null, data: {} };\n\nconst graphComponent = (state, props = {}) => ({ ..._get(state, ['graph', 'component', props.viewId]) });\n\nconst graphResponse = (state, props = {}) => ({\n  ..._get(state, ['graph', 'reportCapacity', props.productId]),\n  ...{ viewId: props.viewId, productId: props.productId }\n});\n\nconst graphCardSelector = createSelector([graphResponse, graphComponent], (response, component) => {\n  const { viewId = null, productId = null, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    ...component,\n    error: responseData.error || false,\n    errorStatus: responseData.errorStatus,\n    fulfilled: responseData.fulfilled || false,\n    pending: responseData.pending || false,\n    graphData: {},\n    syncing: false\n  };\n\n  const responseGranularity = metaQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY] || null;\n  let granularity = null;\n\n  if (component.graphGranularity === responseGranularity || (!component.graphGranularity && responseData.fulfilled)) {\n    granularity = responseGranularity;\n  }\n\n  if (!granularity && responseData.fulfilled) {\n    updatedResponseData.syncing = true;\n  }\n\n  const cachedGranularity =\n    (granularity && viewId && productId && graphCardCache.data[`${viewId}_${productId}_${granularity}`]) || {};\n  const initialLoad = 'initialLoad' in cachedGranularity ? cachedGranularity.initialLoad : true;\n\n  Object.assign(updatedResponseData, { initialLoad, ...cachedGranularity });\n\n  if (viewId && graphCardCache.dataId !== viewId) {\n    graphCardCache.dataId = viewId;\n    graphCardCache.data = {};\n  }\n\n  if (responseData.fulfilled && granularity && productId) {\n    const [report, capacity] = responseData.data;\n    const reportData = _get(report, [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA], []);\n    const capacityData = _get(capacity, [rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA], []);\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment\n        .utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE])\n        .startOf('day')\n        .toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY = Number.parseInt(graphDataObj[graphDataObjKey], 10);\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value } });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Update response and cache\n    updatedResponseData.initialLoad = false;\n    graphCardCache.data[`${viewId}_${productId}_${granularity}`] = { ...updatedResponseData };\n  }\n\n  return updatedResponseData;\n});\n\nconst makeGraphCardSelector = () => graphCardSelector;\n\nconst graphCardSelectors = {\n  graphCard: graphCardSelector,\n  makeGraphCard: makeGraphCardSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, graphCardSelector, makeGraphCardSelector };\n","import graphCardSelectors from './graphCardSelectors';\n\nconst reduxSelectors = {\n  graphCard: graphCardSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\nimport { helpers } from '../common/helpers';\n\nconst connectTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  connect(mapStateToProps, mapDispatchToProps)((!helpers.TEST_MODE && withTranslation()(component)) || component);\n\nconst connectRouterTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connectTranslate(mapStateToProps, mapDispatchToProps)(component));\n\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connect(mapStateToProps, mapDispatchToProps)(component));\n\nexport {\n  connect,\n  connectRouter,\n  connectRouterTranslate,\n  connectTranslate,\n  reduxActions,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  store\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, withTranslation } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\nconst translate = (str, placeholder = null) =>\n  (!helpers.TEST_MODE && i18next.t(str, placeholder)) || helpers.noopTranslate(str, placeholder);\n\nconst translateComponent = component => (!helpers.TEST_MODE && withTranslation()(component)) || component;\n\n/**\n * ToDo: reevaluate the \"I18nextProvider\" on package update.\n * Appears to have timing issues, and subsequent firings of the\n * ajax/xhr setup. Reverting it to just a function call that populates behind\n * the scenes appears more predictable.\n */\nclass I18n extends React.Component {\n  state = { isLoaded: false };\n\n  componentDidMount() {\n    this.i18nInit();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { locale } = this.props;\n\n    if (locale !== prevProps.locale) {\n      this.i18nInit();\n    }\n  }\n\n  i18nInit = async () => {\n    const { fallbackLng, loadPath, locale } = this.props;\n\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: locale,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      // ToDo: eval the need for an isError state ref\n    }\n\n    this.setState({ isLoaded: true });\n  };\n\n  render() {\n    const { isLoaded } = this.state;\n    const { children } = this.props;\n\n    return (isLoaded && <React.Fragment>{children}</React.Fragment>) || <React.Fragment />;\n  }\n}\n\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","import moment from 'moment';\nimport numbro from 'numbro';\nimport { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers } from '../../common/dateHelpers';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity, see enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {Date} date\n * @param {string} granularity, see enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n  let formattedDateTooltip;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDateTooltip = dateHelpers.timestampQuarterFormats.yearLong;\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDateTooltip = dateHelpers.timestampMonthFormats.yearLong;\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDateTooltip = dateHelpers.timestampDayFormats.long;\n      break;\n  }\n\n  return momentDate.format(formattedDateTooltip);\n};\n\n/**\n * Get tooltips for x axis while displaying y axis values.\n *\n * @param {Object} itemsByKey\n * @param {string} granularity, see enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {string} product, apply the product to locale strings\n * @returns {string | *}\n */\n/**\n * ToDo: we have access to the datasets and index which gives us access to the previous date.\n * Consider adding back in the year on tooltip cross year displays\n */\nconst getTooltips = ({ itemsByKey, granularity, product = '' }) => {\n  let dateString = '';\n  let thresholdString = '';\n  const dataFacets = [];\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      dateString = `${translate('curiosity-graph.dateLabel')}: ${getTooltipDate({\n        date: itemsByKey[key].date,\n        granularity\n      })}`;\n    }\n\n    if (itemsByKey[key].y) {\n      if (/^threshold/.test(key)) {\n        thresholdString = `${translate(`curiosity-graph.thresholdLabel`)}: ${itemsByKey[key].y}\\n`;\n      } else {\n        dataFacets.push(`${translate(`curiosity-graph.${key}Label`, { product })}: ${itemsByKey[key].y}\\n`);\n      }\n    }\n  });\n\n  return (\n    ((thresholdString || dataFacets.length) && `${thresholdString}${dataFacets.join('')}${dateString}`.trim()) ||\n    translate('curiosity-graph.noDataLabel')\n  );\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {Date} date\n * @param {string} granularity, see enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} tick\n * @param {Date} previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {number|string} tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick }) => numbro(tick).format({ average: true, mantissa: 1, optionalMantissa: true });\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  getTooltips,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  getTooltips,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\n\nconst getGranularityOptionsType = optionsType => {\n  if (optionsType === 'default') {\n    return {\n      selected: GRANULARITY_TYPES.DAILY,\n      options: [\n        { title: translate('curiosity-graph.dropdownDaily'), value: GRANULARITY_TYPES.DAILY, selected: true },\n        { title: translate('curiosity-graph.dropdownWeekly'), value: GRANULARITY_TYPES.WEEKLY },\n        { title: translate('curiosity-graph.dropdownMonthly'), value: GRANULARITY_TYPES.MONTHLY },\n        { title: translate('curiosity-graph.dropdownQuarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst graphCardTypes = {\n  getGranularityOptions: getGranularityOptionsType\n};\n\nexport { graphCardTypes as default, graphCardTypes, getGranularityOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer, VictoryPortal } from 'victory';\nimport {\n  Chart,\n  ChartAxis,\n  ChartLegend,\n  ChartStack,\n  ChartThreshold,\n  ChartTooltip,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  containerRef = React.createRef();\n\n  componentDidMount() {\n    this.onResizeContainer();\n    window.addEventListener('resize', this.onResizeContainer);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  onResizeContainer = () => {\n    const containerElement = this.containerRef.current;\n\n    if (containerElement && containerElement.clientWidth) {\n      this.setState({ chartWidth: containerElement.clientWidth });\n    }\n  };\n\n  setDataSets() {\n    const { dataSets, tooltips } = this.props;\n\n    if (tooltips && dataSets && dataSets[0] && dataSets[0].data) {\n      const updatedDataSets = _cloneDeep(dataSets);\n\n      updatedDataSets[0].data = updatedDataSets[0].data.map((value, index) => {\n        const itemsByKey = {};\n        const items = [];\n\n        dataSets.forEach((data, i) => {\n          if (data.data && data.data[value.x]) {\n            itemsByKey[data.id || `dataSet-${i}`] = data.data[value.x];\n            items.push(data.data[value.x]);\n          }\n        });\n\n        return {\n          ...value,\n          _tooltip: tooltips({\n            x: value.x,\n            y: value.y,\n            index,\n            items,\n            itemsByKey,\n            dataSets: _cloneDeep(dataSets)\n          })\n        };\n      });\n\n      return updatedDataSets;\n    }\n\n    return dataSets;\n  }\n\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  // ToDo: the domain range needs to be update when additional datasets are added\n  getChartDomain({ isXAxisTicks }) {\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  getChartLegend() {\n    const { dataSets } = this.props;\n    const legendData = [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.legendLabel) {\n        const legendDataSettings = { symbol: {}, name: dataSet.legendLabel };\n\n        if (dataSet.legendSymbolType) {\n          legendDataSettings.symbol.type = dataSet.legendSymbolType;\n        } else if (dataSet.isThreshold) {\n          legendDataSettings.symbol.type = 'threshold';\n        }\n\n        if (dataSet.themeColor) {\n          legendDataSettings.symbol.fill = dataSet.themeColor;\n        } else if (dataSet.stroke) {\n          legendDataSettings.symbol.fill = dataSet.stroke;\n        } else if (dataSet.fill) {\n          legendDataSettings.symbol.fill = dataSet.fill;\n        }\n\n        legendData.push(legendDataSettings);\n      }\n    });\n\n    return {\n      legendData,\n      legendOrientation: 'horizontal',\n      legendPosition: 'bottom-left',\n      legendComponent: <ChartLegend borderPadding={{ top: 20 }} />\n    };\n  }\n\n  static getContainerComponent() {\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const containerComponentProps = {\n      constrainToVisibleArea: true,\n      cursorDimension: 'x',\n      voronoiDimension: 'x',\n      voronoiPadding: 50,\n      mouseFollowTooltips: true\n    };\n\n    containerComponentProps.labelComponent = (\n      <VictoryPortal>\n        <ChartTooltip pointerLength={0} centerOffset={{ x: tooltip => tooltip.flyoutWidth / 2 + 5, y: 0 }} />\n      </VictoryPortal>\n    );\n\n    containerComponentProps.labels = ({ datum }) =>\n      (/^chartArea-0/.test(datum.childName) && datum._tooltip) || datum.tooltip || undefined;\n\n    return {\n      containerComponent: <VictoryVoronoiCursorContainer {...containerComponentProps} />\n    };\n  }\n\n  renderChart({ stacked = false }) {\n    const dataSets = this.setDataSets();\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  render() {\n    const { chartWidth } = this.state;\n    const { padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const chartLegendProps = this.getChartLegend();\n    const containerComponent = (maxY > 0 && ChartArea.getContainerComponent()) || {};\n    const chartProps = { padding, ...chartLegendProps, ...chartDomain, ...containerComponent };\n\n    /**\n     * FixMe: PFCharts or Victory, unable to return null or empty content.\n     * General practice of returning \"null\" shouldn't necessarily melt the\n     * graph. To avoid issues we return an empty array\n     */\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n      </div>\n    );\n  }\n}\n\nChartArea.propTypes = {\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          tooltip: PropTypes.string,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  tooltips: PropTypes.func,\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\nChartArea.defaultProps = {\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  tooltips: null,\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHead, CardActions, CardBody } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { Select } from '../select/select';\nimport { connectTranslate, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { rhsmApiTypes, RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport { graphCardTypes } from './graphCardTypes';\nimport ChartArea from '../chartArea/chartArea';\n\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphGranularity } = this.props;\n\n    if (graphGranularity !== prevProps.graphGranularity) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, graphGranularity, productId, selectOptionsType } = this.props;\n\n    if (productId) {\n      const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n      const updatedGranularity = graphGranularity || selected;\n\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(updatedGranularity);\n      const query = {\n        [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: updatedGranularity,\n        [rhsmApiTypes.RHSM_API_QUERY_START_DATE]: startDate.toISOString(),\n        [rhsmApiTypes.RHSM_API_QUERY_END_DATE]: endDate.toISOString()\n      };\n\n      getGraphReportsCapacity(productId, query);\n    }\n  };\n\n  onSelect = event => {\n    const { graphGranularity, viewId } = this.props;\n    const { value } = event;\n\n    if (graphGranularity !== value) {\n      store.dispatch({\n        type: reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM,\n        graphGranularity: value,\n        viewId\n      });\n    }\n  };\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   * @patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  renderChart() {\n    const { filterGraphData, graphData, graphGranularity, selectOptionsType, t, productShortLabel } = this.props;\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: updatedGranularity\n      });\n\n    const tooltips = ({ itemsByKey }) =>\n      graphCardHelpers.getTooltips({\n        itemsByKey,\n        granularity: updatedGranularity,\n        product: productShortLabel\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(updatedGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat,\n      tooltips\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.legendSymbolType = 'dash';\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 2.5;\n          tempFiltered.legendLabel = t(`curiosity-graph.thresholdLabel`);\n        } else {\n          tempFiltered.legendLabel = t(`curiosity-graph.${key}Label`, { product: productShortLabel });\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return <ChartArea key={helpers.generateId()} {...chartAreaProps} dataSets={filteredGraphData(graphData)} />;\n  }\n\n  render() {\n    const { cardTitle, children, error, graphGranularity, selectOptionsType, pending, t } = this.props;\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n\n    return (\n      <Card className=\"curiosity-usage-graph fadein\">\n        <CardHead>\n          <h2>{cardTitle}</h2>\n          <CardActions>\n            {children}\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onSelect}\n              options={options}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHead>\n        <CardBody>\n          <div className={`curiosity-skeleton-container ${(error && 'blur') || ''}`}>\n            {pending && (\n              <React.Fragment>\n                <Skeleton size={SkeletonSize.xs} />\n                <Skeleton size={SkeletonSize.sm} />\n                <Skeleton size={SkeletonSize.md} />\n                <Skeleton size={SkeletonSize.lg} />\n              </React.Fragment>\n            )}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  graphGranularity: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]),\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  productShortLabel: PropTypes.string,\n  viewId: PropTypes.string\n};\n\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  graphGranularity: null,\n  pending: false,\n  selectOptionsType: 'default',\n  t: helpers.noopTranslate,\n  productShortLabel: '',\n  viewId: 'graphCard'\n};\n\nconst makeMapStateToProps = () => {\n  const getGraphCard = reduxSelectors.graphCard.makeGraphCard();\n\n  return (state, props) => ({\n    ...getGraphCard(state, props)\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\nconst ConnectedGraphCard = connectTranslate(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport GraphCard from '../graphCard/graphCard';\nimport { Select } from '../select/select';\nimport { helpers } from '../../common';\n\nclass OpenshiftView extends React.Component {\n  state = {\n    option: null,\n    filters: []\n  };\n\n  componentDidMount() {\n    const { initialOption } = this.props;\n    this.onSelect({ value: initialOption });\n  }\n\n  onSelect = (event = {}) => {\n    const { option } = this.state;\n    const { initialFilters } = this.props;\n    const { value } = event;\n\n    if (value !== option) {\n      const filters = initialFilters.filter(val => new RegExp(value, 'i').test(val.id));\n      this.setState({\n        option,\n        filters\n      });\n    }\n  };\n\n  renderSelect() {\n    const { option } = this.state;\n    const { initialOption } = this.props;\n    const options = [\n      { title: 'Cores', value: 'cores' },\n      { title: 'Sockets', value: 'sockets' }\n    ];\n\n    return <Select onSelect={this.onSelect} options={options} selectedOptions={option || initialOption} />;\n  }\n\n  render() {\n    const { filters } = this.state;\n    const { routeDetail, t } = this.props;\n\n    return (\n      <PageLayout>\n        <PageHeader>\n          {(routeDetail.routeItem && routeDetail.routeItem.title) || helpers.UI_DISPLAY_CONFIG_NAME}\n        </PageHeader>\n        <PageSection>\n          <GraphCard\n            key={routeDetail.pathParameter}\n            filterGraphData={filters}\n            productId={routeDetail.pathParameter}\n            viewId={routeDetail.pathId}\n            cardTitle={t('curiosity-graph.cardHeading')}\n            productShortLabel=\"OpenShift\"\n          >\n            {this.renderSelect()}\n          </GraphCard>\n        </PageSection>\n      </PageLayout>\n    );\n  }\n}\n\nOpenshiftView.propTypes = {\n  initialOption: PropTypes.oneOf(['cores', 'sockets']),\n  initialFilters: PropTypes.array,\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    pathId: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    })\n  }).isRequired,\n  t: PropTypes.func\n};\n\nOpenshiftView.defaultProps = {\n  initialOption: 'cores',\n  initialFilters: [\n    { id: 'cores', fill: chartColorBlueLight.value, stroke: chartColorBlueDark.value },\n    { id: 'sockets', fill: chartColorBlueLight.value, stroke: chartColorBlueDark.value },\n    { id: 'thresholdSockets' },\n    { id: 'thresholdCores' }\n  ],\n  t: helpers.noopTranslate\n};\n\nconst TranslatedOpenshiftView = withTranslation()(OpenshiftView);\n\nexport { TranslatedOpenshiftView as default, TranslatedOpenshiftView, OpenshiftView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark\n} from '@patternfly/react-tokens';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport GraphCard from '../graphCard/graphCard';\nimport { helpers } from '../../common';\n\nclass RhelView extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    const { initialFilters, routeDetail, t } = this.props;\n\n    return (\n      <PageLayout>\n        <PageHeader>\n          {(routeDetail.routeItem && routeDetail.routeItem.title) || helpers.UI_DISPLAY_CONFIG_NAME}\n        </PageHeader>\n        <PageSection>\n          <GraphCard\n            key={routeDetail.pathParameter}\n            filterGraphData={initialFilters}\n            productId={routeDetail.pathParameter}\n            viewId={routeDetail.pathId}\n            cardTitle={t('curiosity-graph.cardHeading')}\n            productShortLabel=\"RHEL\"\n          />\n        </PageSection>\n      </PageLayout>\n    );\n  }\n}\n\nRhelView.propTypes = {\n  initialFilters: PropTypes.array,\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    pathId: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    })\n  }).isRequired,\n  t: PropTypes.func\n};\n\nRhelView.defaultProps = {\n  initialFilters: [\n    { id: 'physicalSockets', fill: chartColorBlueLight.value, stroke: chartColorBlueDark.value },\n    { id: 'hypervisorSockets', fill: chartColorCyanLight.value, stroke: chartColorCyanDark.value },\n    { id: 'thresholdSockets' }\n  ],\n  t: helpers.noopTranslate\n};\n\nconst TranslatedRhelView = withTranslation()(RhelView);\n\nexport { TranslatedRhelView as default, TranslatedRhelView, RhelView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Title\n} from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport { connectTranslate } from '../../redux';\nimport subscriptionsSvg from '../../images/subscriptions.svg';\n\n/**\n * FixMe: Patternfly EmptyStateIcon can't pass a basic image\n * Requires the use of function based component syntax\n */\n/**\n * FixMe: Patternfly EmptyStateBody and Title appear to throw an error on translate string replacement\n * Wrap with a fragment to pass.\n */\nconst TourView = ({ session, t }) => (\n  <PageLayout>\n    <PageHeader>{helpers.UI_DISPLAY_CONFIG_NAME}</PageHeader>\n    <PageSection>\n      <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n        <img\n          src={subscriptionsSvg}\n          className=\"curiosity-emptystate-img-icon\"\n          alt={t('curiosity-tour.emptyStateIconAlt', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          aria-hidden\n        />\n        <Title headingLevel=\"h5\" size=\"lg\">\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateTitle', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </Title>\n        <EmptyStateBody>\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateDescription', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n            {session.errorStatus !== 418 &&\n              ` ${t('curiosity-tour.emptyStateDescriptionTour', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}`}\n          </React.Fragment>\n        </EmptyStateBody>\n        <EmptyStateBody>\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateDescriptionExtended', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </EmptyStateBody>\n        {(session.errorStatus === 418 && (\n          <Button\n            className=\"uxui-curiosity__button-learn\"\n            variant=\"primary\"\n            component=\"a\"\n            target=\"_blank\"\n            href=\"https://access.redhat.com/products/subscription-central\"\n          >\n            {t('curiosity-tour.emptyStateLinkLearnMore')}\n          </Button>\n        )) || (\n          <Button className=\"uxui-curiosity__button-tour\" variant=\"primary\">\n            {t('curiosity-tour.emptyStateButton')}\n          </Button>\n        )}\n        <EmptyStateSecondaryActions>\n          {session.errorStatus !== 418 && (\n            <Button\n              component=\"a\"\n              variant=\"link\"\n              target=\"_blank\"\n              href=\"https://access.redhat.com/products/subscription-central\"\n            >\n              {t('curiosity-tour.emptyStateLinkLearnMore')}\n            </Button>\n          )}\n          <Button component=\"a\" variant=\"link\" target=\"_blank\" href=\"https://access.redhat.com/account-team\">\n            {t('curiosity-tour.emptyStateLinkContactUs')}\n          </Button>\n        </EmptyStateSecondaryActions>\n      </EmptyState>\n    </PageSection>\n  </PageLayout>\n);\n\nTourView.propTypes = {\n  session: PropTypes.shape({\n    errorStatus: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\nTourView.defaultProps = {\n  session: {\n    errorStatus: null\n  },\n  t: helpers.noopTranslate\n};\n\nconst mapStateToProps = state => ({ session: state.user.session });\n\nconst ConnectedTourView = connectTranslate(mapStateToProps)(TourView);\n\nexport { ConnectedTourView as default, ConnectedTourView, TourView };\n","import path from 'path';\nimport { helpers } from '../../common/helpers';\nimport OpenshiftView from '../openshiftView/openshiftView';\nimport RhelView from '../rhelView/rhelView';\nimport TourView from '../tourView/tourView';\nimport { RHSM_API_PATH_ID_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Platform name/id.\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n * @return {array}\n */\nconst platformRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return array of objects that describes routing.\n * @return {array}\n */\nconst routes = [\n  {\n    title: 'Red Hat Enterprise Linux',\n    to: '/rhel-sw/all',\n    redirect: true,\n    component: RhelView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Red Hat Enterprise Linux',\n    id: 'rhel-sw',\n    to: '/rhel-sw/:variant',\n    component: RhelView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Red Hat OpenShift',\n    id: 'openshift-sw',\n    to: '/openshift-sw',\n    component: OpenshiftView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Tour',\n    id: 'soon',\n    to: '/soon',\n    component: TourView,\n    exact: true,\n    render: true,\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Tour',\n    id: 'tour',\n    to: '/tour',\n    component: TourView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  }\n];\n\n/**\n * Return an array of objects that describes platform navigation.\n * @return {array}\n */\nconst navigation = [\n  {\n    title: 'Red Hat Enterprise Linux',\n    id: 'all',\n    path: '/rhel-sw/all',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL,\n    default: true\n  },\n  {\n    title: 'ARM',\n    id: 'arm',\n    path: '/rhel-sw/arm',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_ARM\n  },\n  {\n    title: 'IBM Power',\n    id: 'ibmpower',\n    path: '/rhel-sw/ibmpower',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER\n  },\n  {\n    title: 'IBM Z systems',\n    id: 'ibmz',\n    path: '/rhel-sw/ibmz',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z\n  },\n  {\n    title: 'x86',\n    id: 'x86',\n    path: '/rhel-sw/x86',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_X86\n  },\n  {\n    title: 'Red Hat OpenShift',\n    id: 'openshift-sw',\n    path: '/openshift-sw',\n    pathId: 'openshift-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.OPENSHIFT\n  }\n];\n\nconst routerTypes = {\n  appName,\n  navigation,\n  platformRedirect,\n  routes\n};\n\nexport { routerTypes as default, routerTypes, appName, navigation, platformRedirect, routes };\n","import { helpers } from '../../common/helpers';\nimport { routes, navigation } from './routerTypes';\n\n/**\n * Return an assumed dynamic route baseName directory\n * based on a predictable platform directory depth of\n * /[OPTIONAL]/[environment]/[APP NAME]\n *\n * @param pathName {string}\n * @param pathPrefix {string}\n * @return {string}\n */\nconst dynamicBaseName = ({ pathName, pathPrefix }) => {\n  const path = pathName.split('/');\n  path.shift();\n  const pathSlice = pathPrefix && new RegExp(path[0]).test(pathPrefix) ? 2 : 1;\n\n  return `/${path.slice(0, pathSlice).join('/')}`;\n};\n\n/**\n * The app baseName.\n * @type {string}\n */\nconst baseName =\n  (helpers.TEST_MODE && '/') ||\n  (helpers.DEV_MODE && '/') ||\n  dynamicBaseName({ pathName: window.location.pathname, pathPrefix: helpers.UI_DEPLOY_PATH_PREFIX });\n\n/**\n * The first error route.\n * @type {Object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Return an object matching a specific navigation object.\n * @param id {string}\n * @param pathname {string}\n * @param returnDefault {boolean}\n * @returns {Object}\n */\nconst getNavigationDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const defaultItem = returnDefault && navigation.find(item => item.default === true);\n  let navigationItem;\n\n  if (id) {\n    navigationItem = navigation.find(item => item.id === id);\n  }\n\n  if (!navigationItem && pathname) {\n    navigationItem =\n      navigation.find(item => item.path.replace(/\\/$/, '') === pathname.replace(/\\/$/, '')) ||\n      (returnDefault && defaultItem);\n  }\n\n  if (!navigationItem && returnDefault) {\n    navigationItem = defaultItem;\n  }\n\n  return { ...(navigationItem || {}) };\n};\n\n/**\n * Return an object matching a specific, or the first generic route.\n * @param id {string}\n * @param pathname {string}\n * @returns {Object}\n */\nconst getRouteDetail = ({ id = null, pathname = null }) => {\n  let routeItem;\n\n  if (id) {\n    routeItem = routes.find(value => id === value.id);\n  }\n\n  if (!routeItem && pathname) {\n    routeItem = routes.find(value => pathname === value.to);\n    routeItem = routeItem || routes.find(item => pathname.includes(item.to.split(':')[0]));\n  }\n\n  return { ...(routeItem || {}) };\n};\n\n/**\n * Return an object generated from both generic routes and specific navigation objects.\n * ID is not passed to \"getRouteDetail\" to avoid conflicts between routing and\n * navigation.\n *\n * @param id {string}\n * @param pathname {string}\n * @param returnDefault {boolean}\n * @returns {Object}\n */\nconst getNavRouteDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const navDetail = getNavigationDetail({ id, pathname, returnDefault });\n  const routeDetail = getRouteDetail({ pathname: navDetail.path || pathname });\n\n  return { ...routeDetail, ...navDetail };\n};\n\nconst routerHelpers = {\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n","import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Route } from 'react-router-dom';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\n\nconst Redirect = ({ baseName, history, isRedirect, isReplace, url, route }) => {\n  const forceNavigation = urlRoute => {\n    if (!helpers.DEV_MODE && !helpers.TEST_MODE) {\n      if (isReplace) {\n        window.location.replace(urlRoute);\n      } else {\n        window.location.href = urlRoute;\n      }\n    }\n  };\n\n  if (isRedirect === true) {\n    if (route && history) {\n      const routeDetail = routerHelpers.getRouteDetail({ pathname: route });\n      return <Route path=\"*\">{routeDetail && <routeDetail.component />}</Route>;\n    }\n\n    const forcePath = url || (route && path.join(baseName, route));\n    forceNavigation(forcePath);\n\n    return (\n      ((helpers.DEV_MODE || helpers.TEST_MODE) && <React.Fragment>Redirected towards {forcePath}</React.Fragment>) ||\n      null\n    );\n  }\n\n  return null;\n};\n\nRedirect.propTypes = {\n  history: PropTypes.object,\n  isRedirect: PropTypes.bool.isRequired,\n  isReplace: PropTypes.bool,\n  url: PropTypes.string,\n  baseName: PropTypes.string,\n  route: PropTypes.string\n};\n\nRedirect.defaultProps = {\n  history: null,\n  isReplace: false,\n  url: null,\n  baseName: routerHelpers.baseName,\n  route: null\n};\n\nconst RoutedRedirect = withRouter(Redirect);\n\nexport { RoutedRedirect as default, RoutedRedirect, Redirect };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport Redirect from './redirect';\nimport { routerHelpers } from './routerHelpers';\nimport { routerTypes } from './routerTypes';\n\nclass Router extends React.Component {\n  renderRoutes() {\n    const { routes } = this.props;\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    let redirectRoot = null;\n\n    return {\n      renderRoutes: routes.map(item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        if (item.redirect === true) {\n          redirectRoot = <ReactRouterDomRedirect to={item.to} />;\n        }\n\n        if (item.render === true) {\n          return (\n            <Route\n              exact={item.hasParameters || item.exact}\n              key={item.to}\n              path={item.to}\n              strict={item.strict}\n              render={routeProps => {\n                const navDetail = routerHelpers.getNavigationDetail({\n                  pathname: routeProps.location && routeProps.location.pathname,\n                  returnDefault: false\n                });\n\n                return (\n                  <item.component\n                    routeDetail={{\n                      baseName: routerHelpers.baseName,\n                      errorRoute: activateOnErrorRoute,\n                      routes,\n                      routeItem: { ...item },\n                      ...navDetail\n                    }}\n                    {...routeProps}\n                  />\n                );\n              }}\n            />\n          );\n        }\n\n        return (\n          <Route exact={item.hasParameters || item.exact} key={item.to} path={item.to} component={item.component} />\n        );\n      }),\n      redirectRoot\n    };\n  }\n\n  render() {\n    const { renderRoutes, redirectRoot } = this.renderRoutes();\n\n    return (\n      <Switch>\n        {renderRoutes}\n        {redirectRoot}\n      </Switch>\n    );\n  }\n}\n\nRouter.propTypes = {\n  routes: PropTypes.array\n};\n\nRouter.defaultProps = {\n  routes: routerTypes.routes\n};\n\nexport { Router as default, Router, Redirect, routerHelpers, routerTypes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState as PfEmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant } from '@patternfly/react-core';\nimport { PageLayout, PageHeader } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType is not intuitive\n * Requires the use of a function proptype?!?\n */\nconst MessageView = ({ icon, message, title }) => (\n  <PageLayout>\n    <PageHeader>{title || helpers.UI_DISPLAY_CONFIG_NAME}</PageHeader>\n    <PfEmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n      {icon && <EmptyStateIcon icon={icon} />}\n      {message && <EmptyStateBody>{message}</EmptyStateBody>}\n    </PfEmptyState>\n  </PageLayout>\n);\n\nMessageView.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  title: PropTypes.string\n};\n\nMessageView.defaultProps = {\n  icon: null,\n  message: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BanIcon, BinocularsIcon } from '@patternfly/react-icons';\nimport { connectRouterTranslate, reduxActions } from '../../redux';\nimport { helpers } from '../../common';\nimport { Redirect, routerHelpers, routerTypes } from '../router/router';\nimport MessageView from '../messageView/messageView';\n\nclass Authentication extends Component {\n  appName = routerTypes.appName;\n\n  removeListeners = helpers.noop;\n\n  componentDidMount() {\n    const {\n      authorizeUser,\n      history,\n      initializeChrome,\n      onNavigation,\n      navigation,\n      setAppName,\n      setNavigation,\n      session\n    } = this.props;\n\n    if (helpers.PROD_MODE || helpers.REVIEW_MODE) {\n      initializeChrome();\n      setAppName(this.appName);\n\n      const appNav = onNavigation(event => {\n        const { path } = routerHelpers.getNavRouteDetail({ id: event.navId, returnDefault: true });\n        history.push(path);\n      });\n      const buildNav = history.listen(() => setNavigation(navigation));\n\n      this.removeListeners = () => {\n        appNav();\n        buildNav();\n      };\n    }\n\n    if (!session.authorized) {\n      authorizeUser();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  render() {\n    const { children, session, t } = this.props;\n\n    if (session.authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return <MessageView title=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (session.errorStatus === 403 || session.errorStatus === 418) {\n      if (helpers.TEST_MODE) {\n        return <React.Fragment>{session.errorStatus} redirect</React.Fragment>;\n      }\n      return <Redirect isRedirect route={routerHelpers.getErrorRoute.to} />;\n    }\n\n    return (\n      <MessageView\n        title={t('curiosity-auth.authorizedTitle', '...')}\n        message={t('curiosity-auth.authorizedCopy', '...')}\n        icon={BanIcon}\n      />\n    );\n  }\n}\n\nAuthentication.propTypes = {\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  initializeChrome: PropTypes.func,\n  onNavigation: PropTypes.func,\n  setAppName: PropTypes.func,\n  setNavigation: PropTypes.func,\n  navigation: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string\n    })\n  ),\n  session: PropTypes.shape({\n    authorized: PropTypes.bool,\n    error: PropTypes.bool,\n    errorMessage: PropTypes.string,\n    errorStatus: PropTypes.number,\n    pending: PropTypes.bool\n  }),\n  t: PropTypes.func\n};\n\nAuthentication.defaultProps = {\n  authorizeUser: helpers.noop,\n  initializeChrome: helpers.noop,\n  onNavigation: helpers.noop,\n  setAppName: helpers.noop,\n  setNavigation: helpers.noop,\n  navigation: routerTypes.navigation,\n  session: {\n    authorized: false,\n    error: false,\n    errorMessage: '',\n    errorStatus: null,\n    pending: false\n  },\n  t: helpers.noopTranslate\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser()),\n  initializeChrome: () => dispatch(reduxActions.platform.initializeChrome()),\n  onNavigation: callback => dispatch(reduxActions.platform.onNavigation(callback)),\n  setAppName: name => dispatch(reduxActions.platform.setAppName(name)),\n  setNavigation: data => dispatch(reduxActions.platform.setNavigation(data))\n});\n\nconst mapStateToProps = state => ({ session: state.user.session });\n\nconst ConnectedAuthentication = connectRouterTranslate(mapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router/router';\nimport Authentication from './authentication/authentication';\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n    getLocale();\n  }\n\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <NotificationsPortal />\n        <Authentication>\n          <Router />\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { baseName } from './components/router/routerHelpers';\nimport { store } from './redux';\nimport App from './components/app';\nimport './styles/index.scss';\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter basename={baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/@patternfly/react-icons/dist/esm/icons/eye-icon.js","../node_modules/@patternfly/react-icons/dist/esm/icons/eye-slash-icon.js","../node_modules/@patternfly/react-icons/dist/esm/icons/infinity-icon.js","../node_modules/@patternfly/react-icons/dist/esm/icons/square-icon.js","components/chart/chartIcon.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardChartTooltip.js"],"names":["EyeIcon","createIcon","name","height","width","svgPath","yOffset","xOffset","EyeSlashIcon","InfinityIcon","SquareIcon","ChartIcon","fill","symbol","size","title","svgProps","iconProps","emSvgSize","getSize","color","className","style","Number","parseFloat","viewBox","role","y","x","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","setIcon","defaultProps","getChartXAxisLabelIncrement","granularity","GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","getTooltipDate","date","momentDate","moment","utc","format","dateHelpers","timestampQuarterFormats","yearShort","add","timestampMonthFormats","yearLong","timestampDayFormats","short","long","xAxisTickFormat","tick","previousDate","formattedDate","isNewYear","parseInt","year","replace","yAxisTickFormatFallback","abs","Math","updatedTick","updatedAbbr","pow","yAxisTickFormat","locale","helpers","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","length","graphCardHelpers","GraphCardChartTooltip","datum","productLabel","t","header","data","itemsByKey","Object","keys","reverse","forEach","key","index","tempDataFacet","chartType","thresholdStringValue","hasInfinite","label","value","dataFactsValue","hasData","product","push","summary","colSpan","map","dataFacet","translate"],"mappings":"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","file":"static/js/26.2495d6b2.chunk.js","sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const EyeIconConfig = {\n  name: 'EyeIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const EyeIcon = createIcon(EyeIconConfig);\n\nexport default EyeIcon;","import { createIcon } from '../createIcon';\n\nexport const EyeSlashIconConfig = {\n  name: 'EyeSlashIcon',\n  height: 512,\n  width: 640,\n  svgPath: 'M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const EyeSlashIcon = createIcon(EyeSlashIconConfig);\n\nexport default EyeSlashIcon;","import { createIcon } from '../createIcon';\n\nexport const InfinityIconConfig = {\n  name: 'InfinityIcon',\n  height: 512,\n  width: 640,\n  svgPath: 'M471.1 96C405 96 353.3 137.3 320 174.6 286.7 137.3 235 96 168.9 96 75.8 96 0 167.8 0 256s75.8 160 168.9 160c66.1 0 117.8-41.3 151.1-78.6 33.3 37.3 85 78.6 151.1 78.6 93.1 0 168.9-71.8 168.9-160S564.2 96 471.1 96zM168.9 320c-40.2 0-72.9-28.7-72.9-64s32.7-64 72.9-64c38.2 0 73.4 36.1 94 64-20.4 27.6-55.9 64-94 64zm302.2 0c-38.2 0-73.4-36.1-94-64 20.4-27.6 55.9-64 94-64 40.2 0 72.9 28.7 72.9 64s-32.7 64-72.9 64z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const InfinityIcon = createIcon(InfinityIconConfig);\n\nexport default InfinityIcon;","import { createIcon } from '../createIcon';\n\nexport const SquareIconConfig = {\n  name: 'SquareIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const SquareIcon = createIcon(SquareIconConfig);\n\nexport default SquareIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EyeIcon, EyeSlashIcon, InfinityIcon, SquareIcon, IconSize } from '@patternfly/react-icons';\n\n/**\n * Emulate pf icon sizing for custom SVGs\n *\n * @param {string} size\n * @returns {string} em measurement\n */\nconst getSize = size => {\n  switch (size) {\n    case 'md':\n      return '1.5em';\n    case 'lg':\n      return '2em';\n    case 'xl':\n      return '3em';\n    case 'sm':\n    default:\n      return '1em';\n  }\n};\n\n/**\n * Render an icon for use outside of Victory charts.\n *\n * @param {object} props\n * @param {string} props.fill\n * @param {string} props.symbol\n * @param {string} props.size\n * @param {string} props.title\n * @returns {Node}\n */\nconst ChartIcon = ({ fill, symbol, size, title }) => {\n  const svgProps = {};\n  const iconProps = { size, title };\n  const emSvgSize = getSize(size);\n\n  if (title) {\n    svgProps['aria-labelledby'] = title;\n  } else {\n    svgProps['aria-hidden'] = true;\n  }\n\n  if (fill) {\n    iconProps.color = fill;\n  }\n\n  const setIcon = () => {\n    switch (symbol) {\n      case 'dash':\n        return (\n          <span\n            style={{\n              width: emSvgSize,\n              height: `${Number.parseFloat(emSvgSize) / 2}em`\n            }}\n          >\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 38 10\" role=\"img\" {...svgProps}>\n              <rect y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"14\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"28\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n            </svg>\n          </span>\n        );\n      case 'threshold':\n        return (\n          <span style={{ width: `${Number.parseFloat(emSvgSize) * 2}em`, height: emSvgSize }}>\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 18 10\" role=\"img\" {...svgProps}>\n              <line\n                x1={0}\n                y1={(Number.parseFloat(emSvgSize) * 16) / 2}\n                x2={Number.parseFloat(emSvgSize) * 16 * 3}\n                y2={(Number.parseFloat(emSvgSize) * 16) / 2}\n                stroke={fill}\n                strokeWidth={3}\n                strokeDasharray=\"4,3\"\n              />\n            </svg>\n          </span>\n        );\n      case 'eye':\n        return <EyeIcon {...iconProps} />;\n      case 'eyeSlash':\n        return <EyeSlashIcon {...iconProps} />;\n      case 'infinity':\n        return <InfinityIcon {...iconProps} />;\n      case 'square':\n      default:\n        return <SquareIcon {...iconProps} />;\n    }\n  };\n\n  return <span className={`curiosity-chartarea__icon curiosity-chartarea__icon-${symbol}`}>{setIcon()}</span>;\n};\n\nChartIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOf([...Object.keys(IconSize)]),\n  symbol: PropTypes.oneOf(['dash', 'eye', 'eyeSlash', 'infinity', 'square', 'threshold']),\n  title: PropTypes.string\n};\n\nChartIcon.defaultProps = {\n  fill: null,\n  size: 'sm',\n  symbol: 'square',\n  title: null\n};\n\nexport { ChartIcon as default, ChartIcon };\n","import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\nimport { ChartIcon } from '../chart/chartIcon';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, productLabel, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey)\n    .reverse()\n    .forEach((key, index) => {\n      if (index === 0) {\n        header = getTooltipDate({\n          date: itemsByKey[key]?.data.date,\n          granularity\n        });\n      }\n\n      const tempDataFacet = {\n        color: itemsByKey[key]?.color\n      };\n\n      if (itemsByKey[key]?.chartType === 'threshold') {\n        let thresholdStringValue = itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel');\n\n        if (itemsByKey[key]?.data.hasInfinite) {\n          if (tempDataFacet.color) {\n            thresholdStringValue = (\n              <ChartIcon symbol=\"infinity\" fill=\"#ffffff\" title={t('curiosity-graph.infiniteThresholdLabel')} />\n            );\n          } else {\n            thresholdStringValue = t('curiosity-graph.infiniteThresholdLabel');\n          }\n        }\n\n        tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n        tempDataFacet.value = thresholdStringValue;\n      } else {\n        const dataFactsValue =\n          (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n        tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product: productLabel });\n        tempDataFacet.value = dataFactsValue;\n      }\n\n      tempDataFacet.chartType = itemsByKey[key]?.chartType;\n      data.push(tempDataFacet);\n    });\n\n  return (\n    <div className=\"curiosity-usage-graph__tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  {dataFacet.chartType === 'threshold' && (\n                    <ChartIcon size=\"sm\" symbol=\"dash\" fill={dataFacet.color || 'transparent'} />\n                  )}\n                  {dataFacet.chartType !== 'threshold' && (\n                    <ChartIcon size=\"sm\" fill={dataFacet.color || 'transparent'} />\n                  )}{' '}\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        chartType: PropTypes.string,\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, productLabel: string, t: translate}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  productLabel: '',\n  t: translate\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n"],"sourceRoot":""}
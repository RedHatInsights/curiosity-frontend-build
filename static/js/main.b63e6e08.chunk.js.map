{"version":3,"sources":["components/table/tableSkeleton.js","components/loader/loader.js","types/platformApiTypes.js","common/helpers.js","components/table/tableEmpty.js","components/table/table.js","components/i18n/i18n.js","types/rhsmApiTypes.js","redux/common/reduxHelpers.js","redux/middleware/index.js","redux/middleware/statusMiddleware.js","redux/middleware/multiActionMiddleware.js","redux/types/appTypes.js","redux/types/graphTypes.js","redux/types/platformTypes.js","redux/types/queryTypes.js","redux/types/rhsmTypes.js","redux/types/userTypes.js","redux/types/index.js","redux/types/toolbarTypes.js","redux/reducers/graphReducer.js","redux/reducers/inventoryReducer.js","redux/reducers/toolbarReducer.js","redux/reducers/userReducer.js","redux/reducers/viewReducer.js","redux/reducers/index.js","redux/store.js","services/platformServices.js","redux/actions/platformActions.js","services/config.js","services/rhsmServices.js","redux/actions/rhsmActions.js","services/userServices.js","redux/actions/index.js","redux/actions/userActions.js","redux/common/apiQueries.js","redux/selectors/userSelectors.js","redux/selectors/guestsListSelectors.js","redux/selectors/graphCardSelectors.js","redux/selectors/inventoryListSelectors.js","redux/selectors/viewSelectors.js","redux/selectors/index.js","redux/index.js","components/router/routerTypes.js","components/router/routerHelpers.js","components/router/redirect.js","components/router/router.js","types/index.js","components/messageView/messageView.js","components/authentication/authentication.js","components/app.js","index.js","components/pageLayout/pageHeader.js","components/pageLayout/pageSection.js","components/pageLayout/pageToolbar.js","components/pageLayout/pageLayout.js","common/dateHelpers.js"],"names":["TableSkeleton","className","borders","colCount","isHeader","rowCount","t","variant","updatedColumnHeaders","Array","map","Skeleton","size","SkeletonSize","md","updatedRowCount","updatedRows","cells","ariaLabel","columnHeaders","rows","defaultProps","translate","Loader","skeletonProps","tableProps","lg","xs","sm","Spinner","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES","SUBSCRIPTIONS","process","INVENTORY","PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES","ALL","HOSTS","PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES","READ","WRITE","platformApiTypes","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","noop","Function","prototype","noopPromise","Promise","resolve","helpers","browserExpose","obj","options","limit","id","window","generateId","prefix","Math","ceil","random","isDate","date","Object","toString","call","isPromise","test","noopTranslate","key","value","components","JSON","stringify","DEV_MODE","PROD_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_TABLE","UI_DISABLED_TOOLBAR","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_LEARN_MORE","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_NAME","UI_PATH","UI_VERSION","UI_WINDOW_ID","TableEmpty","icon","message","tableHeading","title","EmptyState","EmptyStateIcon","Title","headingLevel","EmptyStateBody","EmptyStateVariant","small","Table","state","isCollapsible","isSortable","sortBy","onCollapse","index","isOpen","fullWidth","expandedContent","setState","onSort","direction","data","updatedIndex","forEach","i","a","label","column","header","this","setRowData","prevProps","props","customizer","valueA","valueB","_isEqualWith","updatedSort","isExpanded","rowObj","push","parent","length","cell","settings","columnHeader","sortActive","sortDirection","tempColumnHeader","transforms","sortable","SortByDirection","asc","filter","v","children","summary","pfTableProps","emptyTable","SearchIcon","event","Fragment","aria-label","appName","Grid","guttter","GridItem","span","renderTable","React","Component","translateKey","values","i18nKey","i18next","I18n","isLoaded","i18nInit","fallbackLng","loadPath","locale","use","XHR","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","RHSM_API_PATH_ID_TYPES","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","OPENSHIFT","RHSM_API_QUERY_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_QUERY_SORT_TYPES","CORES","HARDWARE","DATE","NAME","SOCKETS","RHSM_API_QUERY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","RHSM_API_QUERY_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_QUERY_UOM_TYPES","RHSM_API_QUERY_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_SET_OPTIN_TYPES","CONDUIT_SYNC","TALLY_REPORT","TALLY_SYNC","RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES","END_DATE","GRANULARITY","SLA","START_DATE","USAGE","RHSM_API_QUERY_SET_INVENTORY_TYPES","DIRECTION","LIMIT","OFFSET","SORT","UOM","RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES","RHSM_API_QUERY_TYPES","rhsmApiTypes","RHSM_API_RESPONSE_ERROR_DATA","RHSM_API_RESPONSE_ERROR_DATA_TYPES","CODE","DETAIL","RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES","GENERIC","OPTIN","RHSM_API_RESPONSE_LINKS","RHSM_API_RESPONSE_LINKS_TYPES","FIRST","LAST","PREVIOUS","NEXT","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_META_TYPES","COUNT","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","CLOUD_CORES","CLOUD_INSTANCES","CLOUD_SOCKETS","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_INVENTORY_DATA","RHSM_API_RESPONSE_INVENTORY_DATA_TYPES","CLOUD_PROVIDER","GUESTS","ID","INVENTORY_ID","LAST_SEEN","SUBSCRIPTION_ID","RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","HAS_DATA","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","schemas","initialValue","schema","generated","isArray","getSingleResponseFromResultArray","results","updatedResults","payload","response","updatedResultsMessage","firstErrorResponse","find","_get","status","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","_isPlainObject","getDateFromResults","getStatusFromResults","setStateProp","prop","initialState","reset","console","error","warn","singlePromiseDataResponseFromArray","reduxHelpers","undefined","parsedResponses","responses","customResponseValue","keyPrefix","updatedData","generatedSchema","parsedResponse","dataObj","customValue","update","updatedDataObj","entries","dataObjKey","dataObjValue","casedDataObjKey","_camelCase","val","Number","isInteger","parseInt","parseFloat","generateReflectedData","generatedData","types","action","type","expandedTypes","subVal","ref","RegExp","whichType","expandMetaTypes","meta","updatedMeta","query","metaData","metaId","metaQuery","baseState","errorMessage","fulfilled","pending","setId","errorResponse","cancelled","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","config","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","store","dispatch","next","httpStatus","payloadConfig","range","floor","statusMiddleware","promiseMiddleware","notificationsMiddleware","appTypes","STATUS_4XX","STATUS_5XX","graphTypes","SET_GRAPH_LEGEND","platformTypes","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","SET_QUERY_RHSM_TYPES","rhsmTypes","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_RHSM","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","userTypes","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","app","graph","platform","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","rhsm","toolbar","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","user","legend","reportCapacity","graphReducer","hostsInventory","hostsGuests","inventoryReducer","filters","toolbarReducer","viewId","activeFilters","currentFilter","optin","session","errorCodes","userReducer","actionStatus","viewReducer","updatedQuery","clearFilters","reducers","notifications","inventory","view","reduxReducers","combineReducers","createStore","applyMiddleware","getUser","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","auth","Error","getUserPermissions","USER_PERMISSION_TYPES","APP_TYPES","REACT_APP_DEBUG_SUBSCRIPTIONS_PERMISSION_RESOURCE","REACT_APP_DEBUG_SUBSCRIPTIONS_PERMISSION_OPERATION","REACT_APP_DEBUG_INVENTORY_PERMISSION_RESOURCE","REACT_APP_DEBUG_INVENTORY_PERMISSION_OPERATION","e","platformServices","initializeChrome","onNavigation","callback","on","setAppName","name","identifyApp","reject","setNavigation","location","navigation","item","active","pathname","split","slice","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","serviceConfig","passedConfig","headers","timeout","cancelTokens","serviceCall","updatedConfig","cancelTokensId","url","cancel","CancelToken","source","cancelToken","token","axios","rhsmServices","getApiVersion","getGraphCapacity","params","getGraphReports","getHostsInventory","getHostsInventoryGuests","replace","rhsmActions","getGraphReportsCapacity","all","getLocaleFromCookie","Cookies","get","LocaleCode","getLanguageName","userServices","authorizeUser","userData","userPermissions","keys","permissions","emulatedErrorResponse","getLocale","defaultLocale","logoutUser","deleteAccountOptIn","method","getAccountOptIn","updateAccountOptIn","actions","rejected","description","dismissable","reduxActions","apiQueries","parseRhsmQuery","graphQuery","guestsQuery","inventoryQuery","toolbarQuery","selector","createSelectorCreator","defaultMemoize","_isEqual","createDeepEqualSelector","rest","updatedSession","admin","entitled","authorized","responsePermissions","permission","definitions","resource","operation","resources","RESOURCE_TYPES","OPERATION_TYPES","userSessionSelectors","userSession","makeUserSession","createSelector","responseData","updatedResponseData","listData","Date","updatedListData","guestsListSelectors","guestsList","makeGuestsList","selectorCache","dataId","productId","graphData","responseMetaQuery","cachedGranularity","assign","report","capacity","reportData","capacityData","graphDataKey","tallySchema","capacitySchema","customReportValue","presetData","hasData","customCapacityValue","x","y","hasInfinite","moment","utc","startOf","toDate","generateGraphData","graphDataObj","graphDataObjKey","generatedY","casedGraphDataObjKey","updatedItem","graphCardSelectors","graphCard","makeGraphCard","itemCount","cache","listMeta","customInventoryValue","toLowerCase","updatedListMeta","inventoryListSelectors","inventoryList","makeInventoryList","reduxSelectors","userSelectors","makeView","connectRouter","mapStateToProps","mapDispatchToProps","component","withRouter","connect","platformLandingRedirect","path","join","platformModalRedirect","routes","to","redirect","lazy","exact","render","disabled","activateOnError","pathId","pathParameter","default","routerTypes","dynamicBaseName","pathName","pathPrefix","shift","pathSlice","baseName","getErrorRoute","route","getNavigationDetail","navigationItem","returnDefault","defaultItem","href","routeHref","getRouteDetail","routeItem","includes","routerHelpers","getNavRouteDetail","navDetail","routeDetail","Redirect","urlRoute","history","isRedirect","isReplace","Suspense","fallback","forcePath","RoutedRedirect","Router","activateOnErrorRoute","redirectRoot","renderRoutes","hasParameters","strict","routeProps","URLSearchParams","decodeURIComponent","parsedSearch","Set","search","param","updatedLocation","errorRoute","MessageView","pageTitle","full","Authentication","removeListeners","subscriptions","appNav","navId","Maintenance","BinocularsIcon","NotAuthorized","serviceName","makeMapStateToProps","ConnectedAuthentication","App","ConnectedApp","basename","document","getElementById","PageHeader","productLabel","context","Button","isInline","iconPosition","target","PageSection","Section","PageToolbar","PageLayout","Children","toArray","child","isValidElement","padding","getCurrentDate","REACT_APP_DEBUG_DEFAULT_DATETIME","setRangedDateTime","subtract","measurement","startDate","endDate","endOf","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats"],"mappings":"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","file":"static/js/main.b63e6e08.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/cjs/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableSkeleton = ({ className, borders, colCount, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />);\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />)\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, variant: string, className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, variant: null, className: null,\n *     rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/cjs/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/components/cjs/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader };\n","/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME,\n  INVENTORY: 'inventory'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*',\n  HOSTS: 'hosts'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\n/**\n * Platform API types.\n *\n * @type {{PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES: {USER: string},\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS: string, PLATFORM_API_RESPONSE_USER_IDENTITY: string,\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES: {ENTITLED: string},\n *     PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES: {ORG_ADMIN: string}}}\n */\nconst platformApiTypes = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformApiTypes as default,\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string} key\n * @param {string|object} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) =>\n  `t(${key}${(value && `, ${(typeof value === 'string' && value) || (value && JSON.stringify(value))}`) || ''}${\n    (components && `, ${components}`) || ''\n  })`;\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  browserExpose,\n  generateId,\n  isDate,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/components/cjs/EmptyTable';\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {Node|Function} props.icon\n * @param {Node} props.message\n * @param {string} props.tableHeading\n * @param {Node} props.title\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, variant: string, message: Node, title: Node, tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  Table as PfTable,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * FixMe: PF tables uses sequentially ordered lists/arrays to denote expandable sections\n * Ideal solution is to nest expandable sections within their respective parents. There\n * are scenarios where manipulating a sequentially ordered list/array can, and will,\n * lead to unintended results. And forces an equal, if not greater, amount of effort on\n * state tracking in the consuming GUI/app. Compounding the issue, the index is used/returned\n * during events for a particular row being \"expanded\". This ends up making after-the-fact\n * application of the expandable list/array items problematic since said index is\n * constantly updating/shifting as rows are dynamically added. Add in a \"not every row\n * needs to be expandable\" scenario, you can start to see the issues. All of that\n * effort means that in some cases it may actually be quicker to simply use PF styles and\n * a HTML table directly, bypassing PF-React entirely.\n *\n * Applying a React node as content in the sequentially ordered list/array appears to\n * automatically \"mount\" said node. How this handles in child components where subsequent\n * AJAX/XHR calls are called means you are potentially hitting an API with dozens of calls,\n * row dependent, even when a user may not expand the nested row/child. This could easily\n * be resolved by nesting and applying the expandable contents after-the-fact.\n */\n/**\n * FixMe: PF tables misalignment of the column headers list/array and row cells breaks the component\n * The related PF error for this is cryptic. An immediate solution would be to simply fix the error\n * messaging, or do a length check before consuming the lists/arrays. This happens when a consumer\n * places more or less column header cells than row cells.\n */\n/**\n * FixMe: PF tables break when an empty list/array is used for the column headers\n * This appears related to the mismatched column header and row cells. The solution is to simply not\n * render the header row instead of throwing an error. This is similar to how the empty rows\n * list/array is handled.\n */\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n * @fires onSort\n */\nclass Table extends React.Component {\n  state = {\n    isCollapsible: false,\n    isSortable: false,\n    sortBy: {},\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (\n      !_isEqualWith(prevProps.rows, rows, customizer) ||\n      !_isEqualWith(prevProps.columnHeaders, columnHeaders, customizer)\n    ) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * FixMe: PF table sort callback doesn't use a zero based index when expandable?\n   * Educated guess there's a cell count happening instead of \"[you have this many data/entry cells]\"\n   * This is really confusing to implement in a consuming application, especially on first\n   * implementation. Special \"collapsible index\" logic had to be implemented to compensate for this\n   * odd behavior.\n   */\n  /**\n   * On column sort\n   *\n   * @event onSort\n   * @param {object} params\n   * @param {number} params.index\n   * @param {string} params.direction\n   * @param {object} params.data\n   */\n  onSort = ({ index, direction, data = {} }) => {\n    const { isCollapsible, updatedColumnHeaders, updatedRows } = this.state;\n    const updatedIndex = isCollapsible ? index - 1 : index;\n\n    updatedRows.forEach(async ({ isOpen }, i) => {\n      if (isOpen === true) {\n        await this.onCollapse({ index: i, isOpen: false });\n      }\n    });\n\n    this.setState(\n      {\n        sortBy: {\n          index,\n          direction\n        }\n      },\n      () =>\n        updatedColumnHeaders[updatedIndex].onSort({\n          direction,\n          index: updatedIndex,\n          label: data?.column?.header?.label\n        })\n    );\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n    const updatedSort = {};\n    let isCollapsible = false;\n    let isSortable = false;\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        isCollapsible = true;\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell?.title) {\n          const { title, ...settings } = cell;\n          rowObj.cells.push({ title, ...settings });\n        } else {\n          rowObj.cells.push({ title: cell });\n        }\n      });\n    });\n\n    columnHeaders.forEach((columnHeader, index) => {\n      if (columnHeader?.title) {\n        const { onSort, sortActive, sortDirection, title, ...settings } = columnHeader;\n        const tempColumnHeader = {\n          title,\n          ...settings\n        };\n\n        if (onSort) {\n          isSortable = true;\n          tempColumnHeader.transforms = [...(tempColumnHeader?.transforms || []), sortable];\n          tempColumnHeader.onSort = onSort;\n\n          if (sortActive) {\n            updatedSort.sortBy = { index: isCollapsible ? index + 1 : index };\n            updatedSort.sortBy.direction = SortByDirection.asc;\n          }\n\n          if (sortDirection) {\n            updatedSort.sortBy = { ...updatedSort.sortBy, direction: sortDirection };\n          }\n        } else if (tempColumnHeader.transforms) {\n          tempColumnHeader.transforms = tempColumnHeader.transforms.filter(v => v !== sortable);\n        }\n\n        updatedColumnHeaders.push(tempColumnHeader);\n      } else {\n        updatedColumnHeaders.push({ title: columnHeader });\n      }\n    });\n\n    this.setState({\n      isCollapsible,\n      isSortable,\n      updatedColumnHeaders,\n      updatedRows,\n      ...updatedSort\n    });\n  }\n\n  /**\n   * FixMe: PF Tables automatically applies an expandable className when using the \"onCollapse\" prop?\n   * Not every row may need to be expandable. In certain scenarios a table may have no expandable\n   * sections, however it appears the \"onCollapse\" styling, and additionally added \"table cells\" are still\n   * applied.\n   */\n  /**\n   * Apply props to table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { isCollapsible, isSortable, sortBy, updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    const pfTableProps = {};\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    if (isCollapsible) {\n      pfTableProps.onCollapse = (event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data });\n    }\n\n    if (isSortable) {\n      pfTableProps.sortBy = sortBy;\n      pfTableProps.onSort = (event, index, direction, data) => this.onSort({ event, index, direction, data });\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n          {...pfTableProps}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid guttter=\"sm\" className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: Node,\n *     isHeader: boolean, variant: string, className: string, rows: Array, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        onSort: PropTypes.func,\n        sortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)]),\n        title: PropTypes.node\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.shape({\n            title: PropTypes.node\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, Trans } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string} translateKey\n * @param {string|Array} values A default string if the key can't be found. An array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @returns {string|Node}\n */\nconst translate = (translateKey, values = null, components) => {\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(translateKey, values, components);\n  }\n\n  if (components) {\n    return <Trans i18nKey={translateKey} values={values} components={components} />;\n  }\n\n  return i18next.t(translateKey, values);\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {Node} Component\n * @returns {Node}\n */\nconst translateComponent = Component => {\n  const withTranslation = ({ ...props }) => <Component {...props} t={translate} i18n={i18next} />;\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\n/**\n * ToDo: reevaluate the \"I18nextProvider\" on package update.\n * Appears to have timing issues, and subsequent firings of the\n * ajax/xhr setup. Reverting it to just a function call that populates behind\n * the scenes appears more predictable.\n */\n/**\n * Load I18n.\n *\n * @augments React.Component\n */\nclass I18n extends React.Component {\n  state = { isLoaded: false };\n\n  componentDidMount() {\n    this.i18nInit();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { locale } = this.props;\n\n    if (locale !== prevProps.locale) {\n      this.i18nInit();\n    }\n  }\n\n  /**\n   * Load i18next.\n   *\n   * @returns {Promise<void>}\n   */\n  i18nInit = async () => {\n    const { fallbackLng, loadPath, locale } = this.props;\n\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: locale,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      // ToDo: eval the need for an isError state ref\n    }\n\n    this.setState({ isLoaded: true });\n  };\n\n  /**\n   * Render children after i18next loads.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { isLoaded } = this.state;\n    const { children } = this.props;\n\n    return (isLoaded && <React.Fragment>{children}</React.Fragment>) || <React.Fragment />;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: Node, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","/**\n * RHSM response Error DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA = 'errors';\n\n/**\n * RHSM response Error DATA types.\n * Schema/map of expected Error data response properties.\n *\n * @type {{CODE: string, DETAIL: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_TYPES = {\n  CODE: 'code',\n  DETAIL: 'detail'\n};\n\n/**\n * RHSM response Error DATA CODE types.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response links type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS = 'links';\n\n/**\n * RHSM response LINKS type.\n * Schema/map of expected inventory LINKS response properties.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS_TYPES = {\n  FIRST: 'first',\n  LAST: 'last',\n  PREVIOUS: 'previous',\n  NEXT: 'next'\n};\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response META types.\n * Schema/map of expected META response properties.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count'\n};\n\n/**\n * RHSM response Capacity DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\n\n/**\n * RHSM response Capacity DATA types.\n * Schema/map of expected Capacity data response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string,\n *     HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response inventory DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA = 'data';\n\n/**\n * RHSM response inventory DATA types.\n * Schema/map of expected inventory DATA response properties.\n *\n * @type {{CORES: string, HARDWARE: string, SOCKETS: string, SUBSCRIPTION_ID: string, INVENTORY_ID: string,\n *     ID: string, GUESTS: string, CLOUD_PROVIDER: string, LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA_TYPES = {\n  CLOUD_PROVIDER: 'cloud_provider',\n  CORES: 'cores',\n  GUESTS: 'number_of_guests',\n  HARDWARE: 'hardware_type',\n  ID: 'insights_id',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  NAME: 'display_name',\n  SOCKETS: 'sockets',\n  SUBSCRIPTION_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response inventory guests DATA types.\n * Schema/map of expected inventory guests DATA response properties.\n *\n * @type {{SUBSCRIPTION_ID: string, ID: string, NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES = {\n  ID: 'insights_id',\n  NAME: 'display_name',\n  SUBSCRIPTION_ID: 'subscription_manager_id',\n  LAST_SEEN: 'last_seen'\n};\n\n/**\n * RHSM response Reporting/Tally DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\n\n/**\n * RHSM response Reporting/Tally DATA types.\n * Schema/map of expected Reporting/Tally DATA response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, HAS_DATA: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM product id type values.\n *\n * @type {{RHEL_ARM: string, RHEL_WORKSTATION: string, RHEL_DESKTOP: string, RHEL: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_COMPUTE_NODE: string, RHEL_IBM_POWER: string,\n *     RHEL_X86: string, OPENSHIFT: string}}\n */\nconst RHSM_API_PATH_ID_TYPES = {\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  OPENSHIFT: 'OpenShift Container Platform'\n};\n\n/**\n * RHSM API query/search parameter of GRANULARITY type values.\n * Schema/map of expected query/search parameter granularity types.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\n\n/**\n * RHSM API query/search parameter SORT type values.\n *\n * @type {{CORES: string, DATE: string, HARDWARE: string, SOCKETS: string, NAME: string}}\n */\nconst RHSM_API_QUERY_SORT_TYPES = {\n  CORES: 'cores',\n  HARDWARE: 'hardware_type',\n  DATE: 'last_seen',\n  NAME: 'display_name',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\n/**\n * RHSM API query/search parameter SLA type values.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_QUERY_SLA_TYPES = {\n  PREMIUM: 'premium',\n  STANDARD: 'standard',\n  SELF: 'self-support',\n  NONE: ''\n};\n\n/**\n * RHSM API query/search parameter UOM type values.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_QUERY_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter USAGE type values.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_QUERY_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\n/**\n * RHSM API query/search parameter OPTIN type values.\n *\n * @type {{TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_SET_OPTIN_TYPES = {\n  CONDUIT_SYNC: 'enable_conduit_sync',\n  TALLY_REPORT: 'enable_tally_reporting',\n  TALLY_SYNC: 'enable_tally_sync'\n};\n\n/**\n * RHSM API query/search parameter CAPACITY type values.\n *\n * @type {{GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string}}\n */\nconst RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES = {\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  DIRECTION: 'dir',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  UOM: 'uom',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM API query/search parameter GUESTS type values.\n *\n * @type {{OFFSET: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES = {\n  LIMIT: 'limit',\n  OFFSET: 'offset'\n};\n\n/**\n * RHSM API query/search parameter values.\n *\n * @type {{GRANULARITY: string, TALLY_SYNC: string, DIRECTION: string, END_DATE: string,\n *     SLA: string, START_DATE: string, LIMIT: string, UOM: string, TALLY_REPORT: string,\n *     USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_TYPES = {\n  ...RHSM_API_QUERY_SET_OPTIN_TYPES,\n  ...RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES\n};\n\n/**\n * RHSM API types.\n *\n * @type {{RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES: {GENERIC: string, OPTIN: string},\n *     RHSM_API_RESPONSE_INVENTORY_DATA: string, RHSM_API_RESPONSE_CAPACITY_DATA: string,\n *     RHSM_API_RESPONSE_ERROR_DATA_TYPES: {CODE: string, DETAIL: string},\n *     RHSM_API_RESPONSE_CAPACITY_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string,\n *     SOCKETS: string, PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, HAS_INFINITE: string,\n *     PHYSICAL_CORES: string}, RHSM_API_RESPONSE_META_TYPES: string,\n *     RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *     RHSM_API_QUERY_SORT_DIRECTION_TYPES: {ASCENDING: string, DESCENDING: string},\n *     RHSM_API_RESPONSE_PRODUCTS_DATA: string, RHSM_API_QUERY_TYPES: {GRANULARITY: string, TALLY_SYNC: string,\n *     DIRECTION: string, END_DATE: string, SLA: string, START_DATE: string, LIMIT: string, UOM: string,\n *     TALLY_REPORT: string, USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string},\n *     RHSM_API_RESPONSE_LINKS: string, RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES: {OFFSET: string,\n *     LIMIT: string}, RHSM_API_PATH_ID_TYPES: {RHEL_ARM: string, RHEL_WORKSTATION: string,\n *     RHEL_DESKTOP: string, RHEL: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_COMPUTE_NODE: string,\n *     RHEL_IBM_POWER: string, RHEL_X86: string, OPENSHIFT: string},\n *     RHSM_API_QUERY_SET_OPTIN_TYPES: {TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string},\n *     RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string,\n *     PRODUCTION: string}, RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string,\n *     STANDARD: string}, RHSM_API_QUERY_SET_INVENTORY_TYPES: {UOM: string, USAGE: string, DIRECTION: string,\n *     SORT: string, OFFSET: string, SLA: string, LIMIT: string}, RHSM_API_QUERY_SORT_TYPES: {CORES: string,\n *     DATE: string, HARDWARE: string, SOCKETS: string, NAME: string},\n *     RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string,\n *     SOCKETS: string, HAS_DATA: string, PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string,\n *     PHYSICAL_CORES: string}, RHSM_API_QUERY_UOM_TYPES: {CORES: string, SOCKETS: string},\n *     RHSM_API_RESPONSE_LINKS_TYPES: string,\n *     RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES: {SUBSCRIPTION_ID: string, ID: string, NAME: string,\n *     LAST_SEEN: string}, RHSM_API_RESPONSE_ERROR_DATA: string, RHSM_API_RESPONSE_META: string,\n *     RHSM_API_RESPONSE_INVENTORY_DATA_TYPES: {CORES: string, HARDWARE: string, SOCKETS: string,\n *     SUBSCRIPTION_ID: string, INVENTORY_ID: string, ID: string, GUESTS: string, CLOUD_PROVIDER: string,\n *     LAST_SEEN: string, NAME: string}, RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES: {GRANULARITY: string,\n *     USAGE: string, END_DATE: string, SLA: string, START_DATE: string}}}\n */\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES\n};\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(({ schema = {}, data, customResponseValue, keyPrefix: prefix }) => {\n    const isArray = Array.isArray(data);\n    const updatedData = (isArray && data) || (data && [data]) || [];\n    const [generatedSchema = {}] = setResponseSchemas([schema]);\n    const parsedResponse = [];\n\n    updatedData.forEach((value, index) => {\n      const generateReflectedData = ({ dataObj, keyPrefix = '', customValue = null, update = helpers.noop }) => {\n        const updatedDataObj = {};\n\n        Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n          const casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n          let val = dataObjValue;\n\n          if (typeof val === 'number') {\n            val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n          }\n\n          if (typeof customValue === 'function') {\n            updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n          } else {\n            updatedDataObj[casedDataObjKey] = val;\n          }\n        });\n\n        update(updatedDataObj);\n      };\n\n      generateReflectedData({\n        keyPrefix: prefix,\n        dataObj: { ...generatedSchema, ...value },\n        customValue: customResponseValue,\n        update: generatedData => parsedResponse.push(generatedData)\n      });\n    });\n\n    parsedResponses.push(parsedResponse);\n  });\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 300 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    delete updatedMeta.data;\n    delete updatedMeta.id;\n    delete updatedMeta.query;\n\n    return {\n      meta: { ...updatedMeta },\n      metaData: meta.data,\n      metaId: meta.id,\n      metaQuery: meta.query\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/cjs';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","const SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications/cjs';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_INIT: string, PLATFORM_SET_NAV: string,\n *     PLATFORM_CLEAR_NOTIFICATIONS: string, PLATFORM_ADD_NOTIFICATION: string,\n *     PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n","import { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\n\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.OFFSET}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_TYPES: object, SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string}}\n */\nconst queryTypes = {\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES\n};\n\nexport { queryTypes as default, queryTypes, SET_QUERY_CLEAR, SET_QUERY_CLEAR_INVENTORY_LIST, SET_QUERY_RHSM_TYPES };\n","const GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_RHSM = 'GET_GRAPH_REPORT_RHSM';\nconst GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_HOSTS_INVENTORY_GUESTS_RHSM: string,\n *     GET_GRAPH_CAPACITY_RHSM: string, GET_HOSTS_INVENTORY_RHSM: string, GET_GRAPH_REPORT_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_AUTH: string, USER_LOCALE: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_AUTH,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","const SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}}}\n */\nconst initialState = {\n  legend: {},\n  reportCapacity: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          ...action.legend\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [{ ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM }],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{hostsInventoryGuests: {}, hostsInventory: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system inventory to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [\n      { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n      { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM }\n    ],\n    state,\n    action\n  );\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, userTypes } from '../types';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{session: {errorCodes: Array, locale: string}, optin: {}}}\n */\nconst initialState = {\n  optin: {},\n  session: {\n    errorCodes: [],\n    locale: null\n  }\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(\n          reduxHelpers.getDataFromResults(action),\n          [rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA],\n          []\n        );\n\n        return reduxHelpers.setStateProp(\n          'session',\n          {\n            error: true,\n            errorCodes: errorCodes.map(value => value[rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE]),\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            locale: state.session.locale,\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'session', type: userTypes.USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{query: {}}}\n */\nconst initialState = {\n  query: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updatedQuery = {};\n\n      Object.entries(state.query).forEach(([key, value]) => {\n        updatedQuery[key] = { ...value };\n\n        if (typeof value[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n          updatedQuery[key][RHSM_API_QUERY_TYPES.OFFSET] = 0;\n        }\n\n        delete updatedQuery[key][RHSM_API_QUERY_TYPES.DIRECTION];\n        delete updatedQuery[key][RHSM_API_QUERY_TYPES.SORT];\n      });\n\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          ...updatedQuery\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications/cjs';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","import _set from 'lodash/set';\nimport { helpers } from '../common';\nimport {\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES as APP_TYPES\n} from '../types/platformApiTypes';\n\n/**\n * Basic user authentication.\n *\n * @returns {Promise<void>}\n */\nconst getUser = async () => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE &&\n        _set(\n          {},\n          [\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n          ],\n          process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n        )) ||\n      (await insights.chrome.auth.getUser())\n    );\n  } catch (e) {\n    throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n  }\n};\n\n/**\n * FixMe: revert this back towards async/await\n * Removed because there appears to be some quirky behavior where permissions will not come through\n * unless the function, and/or await are specifically returned, i.e. \"return await insights.chrome...\".\n */\n/**\n * Basic user permissions.\n *\n * @returns {Promise<void>}\n */\nconst getUserPermissions = () => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE && [\n        {\n          [USER_PERMISSION_TYPES.PERMISSION]: `${APP_TYPES.SUBSCRIPTIONS}:${process.env.REACT_APP_DEBUG_SUBSCRIPTIONS_PERMISSION_RESOURCE}:${process.env.REACT_APP_DEBUG_SUBSCRIPTIONS_PERMISSION_OPERATION}`\n        },\n        {\n          [USER_PERMISSION_TYPES.PERMISSION]: `${APP_TYPES.INVENTORY}:${process.env.REACT_APP_DEBUG_INVENTORY_PERMISSION_RESOURCE}:${process.env.REACT_APP_DEBUG_INVENTORY_PERMISSION_OPERATION}`\n        }\n      ]) ||\n      insights.chrome.getUserPermissions()\n    );\n  } catch (e) {\n    throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<void>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n// FixMe: Revert catch to throwing an error. Relaxed for development\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<void>}\n */\nconst setAppName = async (name = null) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.identifyApp(name);\n  } catch (e) {\n    const error = `{ identifyApp } = insights.chrome, ${e.message}`;\n    await Promise.reject(error);\n  }\n};\n\n// ToDo: Clean up, consider removing setNavigation, currently no longer used.\n/**\n * Set platform left hand navigation active item.\n *\n * @param {Array} data\n * @returns {*}\n */\nconst setNavigation = (data = []) => {\n  const { insights, location } = window;\n  try {\n    return insights.chrome.navigation(\n      data.map(item => ({\n        ...item,\n        active: item.id === location.pathname.split('/').slice(-1)[0]\n      }))\n    );\n  } catch (e) {\n    throw new Error(`{ navigation } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = { getUser, getUserPermissions, initializeChrome, onNavigation, setAppName, setNavigation };\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  getUserPermissions,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications/cjs';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for handling the left-nav navigation active item.\n *\n * @param {object} data\n * @returns {Function}\n */\nconst setNavigation = data => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_SET_NAV\n  });\n  return platformServices.setNavigation(data);\n};\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import axios, { CancelToken } from 'axios';\nimport { platformServices } from './platformServices';\n\n/**\n * Apply consistent service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {object}\n */\nconst cancelTokens = {};\n\n/**\n * Call platform \"getUser\" auth method, and apply service config.\n *\n * @param {object} config\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n\n  const updatedConfig = { ...config };\n  const cancelTokensId = updatedConfig.url;\n\n  if (updatedConfig.cancel === true) {\n    if (cancelTokens[cancelTokensId]) {\n      cancelTokens[cancelTokensId].cancel('cancelled request');\n    }\n\n    cancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = cancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  return axios(serviceConfig(updatedConfig));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @returns {Promise<*>}\n */\nconst getApiVersion = () =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {string} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {string} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {object} links\n * @apiSuccess {object} meta\n * @apiSuccess {string} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {string} meta.product\n * - RHEL\n * @apiSuccess {number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2019-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2019-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2019-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\"\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params,\n    cancel: true\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 1000\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-123456789012\",\n *           \"cores\": 4,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"number_of_guests\": 70,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-56043FFF0d2e\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-56043FFF0d2e\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-56043FFF0d2e\",\n *           \"cloud_provider\": \"AZURE\",\n *           \"cores\": 4,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"CLOUD\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-abcdefghijklm\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-abcdefghijklm\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-abcdefghijklm\",\n *           \"cores\": 4,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"number_of_guests\": 10,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-nopqrstuvxyzab\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-nopqrstuvxyzab\",\n *           \"display_name\": \"dolor.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-nopqrstuvxyzab\",\n *           \"cores\": 4,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"number_of_guests\": 1,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXXX\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXXX\",\n *           \"display_name\": \"lorem.test.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-XXXXXXXXXXXX\",\n *           \"cores\": 4,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXYZ\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXYZ\",\n *           \"display_name\": \"lorem.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-XXXXXXXXXXYZ\",\n *           \"cores\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXYA\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXYA\",\n *           \"display_name\": \"lorem.another.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-XXXXXXXXXXYA\",\n *           \"cores\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-21T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXYB\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXYB\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-XXXXXXXXXXYB\",\n *           \"cores\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-22T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXYC\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXYC\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-XXXXXXXXXXYC\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-23T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXYD\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXYD\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-XXXXXXXXXXYD\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-24T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXYE\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXYE\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-XXXXXXXXXXYE\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-26T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXYF\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-XXXXXXXXXXYF\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-XXXXXXXXXXYF\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-29T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 11\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${id}`,\n    params,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}) =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', id),\n    params\n  });\n\nconst rhsmServices = { getApiVersion, getGraphCapacity, getGraphReports, getHostsInventory, getHostsInventoryGuests };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getHostsInventory,\n  getHostsInventoryGuests\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsmServices';\n\n/**\n * Get a combined RHSM response from reporting and capacity.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getGraphReportsCapacity = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n    payload: Promise.all([rhsmServices.getGraphReports(id, query), rhsmServices.getGraphCapacity(id, query)]),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n    payload: rhsmServices.getHostsInventory(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n    payload: rhsmServices.getHostsInventoryGuests(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActions = { getGraphReportsCapacity, getHostsInventory, getHostsInventoryGuests };\n\nexport { rhsmActions as default, rhsmActions, getGraphReportsCapacity, getHostsInventory, getHostsInventoryGuests };\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { getUser, getUserPermissions } from './platformServices';\nimport { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * Apply an emulated API response to the platforms getUser method.\n *\n * @returns {Promise<{data: {permissions: (void|*[]), user: void}, message: string, status: number}>}\n */\nconst authorizeUser = async () => {\n  let message = '{ auth.getUser, getUserPermissions } = insights.chrome';\n  let userData;\n  let userPermissions;\n\n  try {\n    userData = await getUser();\n    userPermissions = await getUserPermissions();\n  } catch (e) {\n    message = e.message;\n  }\n\n  if (_isPlainObject(userData) && Object.keys(userData).length) {\n    return Promise.resolve({ data: { user: userData, permissions: userPermissions || [] }, message, status: 200 });\n  }\n\n  const emulatedErrorResponse = {\n    ...new Error(message),\n    message,\n    status: 418\n  };\n\n  return Promise.reject(emulatedErrorResponse);\n};\n\n/**\n * Return a platform locale value from a cookie.\n *\n * @private\n * @returns {{value: string, key: string | null}|null}\n */\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\n/**\n * Return platform locale.\n *\n * @returns {Promise<{data: void}>}\n */\nconst getLocale = () => {\n  const defaultLocale = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_numner\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = () =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_numner\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport {\n  userServices as default,\n  userServices,\n  authorizeUser,\n  getLocale,\n  logoutUser,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get an emulated API response from the platforms \"getUser\" method.\n *\n * @returns {Function}\n */\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userServices.authorizeUser()\n  });\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userServices.getLocale()\n});\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn = (query = {}) => dispatch =>\n  dispatch({\n    type: userTypes.UPDATE_USER_OPTIN,\n    payload: userServices.updateAccountOptIn(query),\n    meta: {\n      query,\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsErrorDescription'),\n          dismissable: true\n        },\n        fulfilled: {\n          variant: 'success',\n          title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsSuccessDescription'),\n          dismissable: true,\n          autoDismiss: false\n        }\n      }\n    }\n  });\n\nconst userActions = { authorizeUser, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport {\n  userActions as default,\n  userActions,\n  authorizeUser,\n  getLocale,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from './reduxHelpers';\n\n/**\n * Parse a query object against a schema for specific RHSM endpoints.\n *\n * @param {object} query\n * @returns {{query: {}, guestsQuery: {}, graphQuery: {}, inventoryQuery: {}, toolbarQuery: {}}}\n */\nconst parseRhsmQuery = (query = {}) => {\n  const graphQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES);\n  const guestsQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES);\n  const inventoryQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES);\n\n  return {\n    query,\n    graphQuery,\n    guestsQuery,\n    inventoryQuery,\n    toolbarQuery: query\n  };\n};\n\nconst apiQueries = {\n  parseRhsmQuery\n};\n\nexport { apiQueries as default, apiQueries };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\nimport {\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES as APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES\n} from '../../types/platformApiTypes';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @returns {object}\n */\nconst statePropsFilter = state => ({\n  ...state.user?.session\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{session: {entitled: boolean, permissions: object, authorized: object, admin: boolean,\n *     error: boolean}}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter], response => {\n  const { error = false, fulfilled = false, data = {}, ...rest } = response || {};\n  const updatedSession = {\n    ...rest,\n    admin: false,\n    entitled: false,\n    error,\n    authorized: {\n      [helpers.UI_NAME]: false,\n      inventory: false\n    },\n    permissions: {}\n  };\n\n  if (!error && fulfilled) {\n    const { user = {}, permissions: responsePermissions = [] } = data;\n\n    updatedSession.admin =\n      user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]?.[\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER\n      ]?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN] || false;\n\n    updatedSession.entitled =\n      user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]?.[APP_TYPES.SUBSCRIPTIONS]?.[\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED\n      ] || false;\n\n    // All permissions breakdown\n    responsePermissions.forEach(\n      ({\n        [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n        [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n      }) => {\n        const [app = '', resource, operation] = permission?.split(':') || [];\n\n        if (!updatedSession.permissions[app]) {\n          updatedSession.permissions[app] = {\n            all: false,\n            resources: {}\n          };\n        }\n\n        if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n          updatedSession.permissions[app].all = true;\n        }\n\n        if (!updatedSession.permissions[app].resources[resource]) {\n          updatedSession.permissions[app].resources[resource] = {};\n        }\n\n        updatedSession.permissions[app].resources[resource][operation] = definitions;\n      }\n    );\n\n    // Alias specific app permissions checks\n    updatedSession.authorized[helpers.UI_NAME] = updatedSession.permissions[APP_TYPES.SUBSCRIPTIONS]?.all || false;\n\n    updatedSession.authorized.inventory =\n      updatedSession.permissions[APP_TYPES.INVENTORY]?.all ||\n      Array.isArray(\n        updatedSession.permissions[APP_TYPES.INVENTORY]?.resources?.[RESOURCE_TYPES.HOSTS]?.[OPERATION_TYPES.ALL]\n      ) ||\n      Array.isArray(\n        updatedSession.permissions[APP_TYPES.INVENTORY]?.resources?.[RESOURCE_TYPES.HOSTS]?.[OPERATION_TYPES.READ]\n      ) ||\n      Array.isArray(\n        updatedSession.permissions[APP_TYPES.INVENTORY]?.resources?.[RESOURCE_TYPES.HOSTS]?.[OPERATION_TYPES.WRITE]\n      ) ||\n      false;\n  }\n\n  return { session: updatedSession };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{session: {entitled: boolean, permissions: Array, authorized: boolean, admin: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst userSessionSelectors = {\n  userSession: selector,\n  makeUserSession: makeSelector\n};\n\nexport { userSessionSelectors as default, userSessionSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsGuests?.[props.id]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter], response => {\n  const { metaId, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    status: responseData.status\n  };\n\n  if (responseData.fulfilled) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [] } = responseData.data || {};\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n      data: listData,\n      customResponseValue: customInventoryValue\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    updatedResponseData.listData = updatedListData;\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst guestsListSelectors = {\n  guestsList: selector,\n  makeGuestsList: makeSelector\n};\n\nexport { guestsListSelectors as default, guestsListSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{dataId: {string}, data: {object}}}\n */\nconst selectorCache = { dataId: null, data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.graph?.reportCapacity?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { graphQuery: query } = apiQueries.parseRhsmQuery({\n    ...props.query,\n    ...state.view?.query?.[props.productId],\n    ...state.view?.query?.[props.viewId]\n  });\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    graphData: {},\n    query,\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n  delete responseMetaQuery[RHSM_API_QUERY_TYPES.START_DATE];\n  delete responseMetaQuery[RHSM_API_QUERY_TYPES.END_DATE];\n\n  const cachedGranularity =\n    (viewId && productId && selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`]) || undefined;\n\n  Object.assign(updatedResponseData, { ...cachedGranularity });\n\n  if (viewId && selectorCache.dataId !== viewId) {\n    selectorCache.dataId = viewId;\n    selectorCache.data = {};\n  }\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, responseMetaQuery)) {\n    const [report, capacity] = responseData.data;\n    const reportData = report?.[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA] || [];\n    const capacityData = capacity?.[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA] || [];\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Reporting graph entries\n    const customReportValue = (data, key, presetData) => ({\n      ...presetData,\n      hasData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_DATA]\n    });\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y,\n      hasInfinite: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE]\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment.utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE]).startOf('day').toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY = Number.parseInt(graphDataObj[graphDataObjKey], 10);\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value }, customValue: customReportValue });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`] = {\n      ...updatedResponseData\n    };\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst graphCardSelectors = {\n  graphCard: selector,\n  makeGraphCard: makeSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{dataId: {string}, data: {object}}}\n */\nconst selectorCache = { dataId: null, data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventoryQuery: query } = apiQueries.parseRhsmQuery({\n    ...props.query,\n    ...state.view?.query?.[props.productId],\n    ...state.view?.query?.[props.viewId]\n  });\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n\n  const cache =\n    (viewId && productId && selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`]) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  // Reset cache on viewId update\n  if (viewId && selectorCache.dataId !== viewId) {\n    selectorCache.dataId = viewId;\n    selectorCache.data = {};\n  }\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, responseMetaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.CLOUD_PROVIDER:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.HARDWARE:\n          return value?.toLowerCase() || null;\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`] = {\n      ...updatedResponseData\n    };\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst inventoryListSelectors = {\n  inventoryList: selector,\n  makeInventoryList: makeSelector\n};\n\nexport { inventoryListSelectors as default, inventoryListSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * ToDo: as part of future potential upgrades consider moving reduxHelpers.setApiQuery into statePropsFilter\n * The side effect is multiple queries being dumped into the views, meaning more \"configuration to handle\".\n * Leaving it as a single query passed from this selector and handling the \"setApiQuery\" in \"redux/common/apiQueries\"\n * is a first step.\n * i.e.\n * queries: {\n *    query: ...,\n *    graph: reduxHelpers.setApiQuery(..., RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES),\n *    inventory: reduxHelpers.setApiQuery(..., RHSM_API_QUERY_SET_INVENTORY_TYPES)\n * }\n */\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @param {object} defaultProps\n * @returns {object}\n */\nconst statePropsFilter = (state = {}, props, defaultProps = {}) => ({\n  query: {\n    ...defaultProps.query,\n    ...state.view?.query?.[defaultProps.viewId]\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable API param/query object.\n *\n * @type {{query: object}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter], view => ({\n  query: { ...view.query }\n}));\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{query: object}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst viewSelectors = {\n  view: selector,\n  makeView: makeSelector\n};\n\nexport { viewSelectors as default, viewSelectors, selector, makeSelector };\n","import guestsListSelectors from './guestsListSelectors';\nimport graphCardSelectors from './graphCardSelectors';\nimport inventoryListSelectors from './inventoryListSelectors';\nimport userSelectors from './userSelectors';\nimport viewSelectors from './viewSelectors';\n\nconst reduxSelectors = {\n  guestsList: guestsListSelectors,\n  graphCard: graphCardSelectors,\n  inventoryList: inventoryListSelectors,\n  user: userSelectors,\n  view: viewSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxHelpers, apiQueries } from './common';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\n\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connect(mapStateToProps, mapDispatchToProps)(component));\n\nexport {\n  apiQueries,\n  connect,\n  connectRouter,\n  reduxActions,\n  reduxHelpers,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  store\n};\n","import React from 'react';\nimport path from 'path';\nimport { helpers } from '../../common/helpers';\nimport { RHSM_API_PATH_ID_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformLandingRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/');\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformModalRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = [\n  {\n    to: '/rhel-sw/all',\n    redirect: true,\n    component: React.lazy(() => import('../rhelView/rhelView')),\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'rhel-sw',\n    to: '/rhel-sw/:variant',\n    component: React.lazy(() => import('../rhelView/rhelView')),\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'openshift-sw',\n    to: '/openshift-sw',\n    component: React.lazy(() => import('../openshiftView/openshiftView')),\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'optin',\n    to: '/optin',\n    component: React.lazy(() => import('../optinView/optinView')),\n    exact: true,\n    render: true,\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED\n  }\n];\n\n/**\n * Return an array of objects that describes navigation against API product IDs.\n *\n * @returns {Array}\n */\nconst navigation = [\n  {\n    id: 'all',\n    path: '/rhel-sw/all',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL,\n    default: true\n  },\n  {\n    id: 'arm',\n    path: '/rhel-sw/arm',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_ARM\n  },\n  {\n    id: 'ibmpower',\n    path: '/rhel-sw/ibmpower',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER\n  },\n  {\n    id: 'ibmz',\n    path: '/rhel-sw/ibmz',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z\n  },\n  {\n    id: 'x86',\n    path: '/rhel-sw/x86',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_X86\n  },\n  {\n    id: 'openshift-sw',\n    path: '/openshift-sw',\n    pathId: 'openshift-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.OPENSHIFT\n  }\n];\n\nconst routerTypes = {\n  appName,\n  navigation,\n  platformLandingRedirect,\n  platformModalRedirect,\n  routes\n};\n\nexport {\n  routerTypes as default,\n  routerTypes,\n  appName,\n  navigation,\n  platformLandingRedirect,\n  platformModalRedirect,\n  routes\n};\n","import { helpers } from '../../common/helpers';\nimport { routes, navigation } from './routerTypes';\n\n/**\n * Return an assumed dynamic route baseName directory\n * based on a predictable platform directory depth of\n * /[OPTIONAL]/[environment]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.pathPrefix\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName, pathPrefix }) => {\n  const path = pathName.split('/');\n  path.shift();\n  const pathSlice = pathPrefix && new RegExp(path[0]).test(pathPrefix) ? 2 : 1;\n\n  return `/${path.slice(0, pathSlice).join('/')}`;\n};\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName =\n  (helpers.TEST_MODE && '/') ||\n  (helpers.DEV_MODE && '/') ||\n  dynamicBaseName({ pathName: window.location.pathname, pathPrefix: helpers.UI_DEPLOY_PATH_PREFIX });\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Return an object matching a specific navigation object.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathname\n * @param {boolean} params.returnDefault\n * @returns {object}\n */\nconst getNavigationDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const defaultItem = returnDefault && navigation.find(item => item.default === true);\n  let navigationItem;\n\n  if (id) {\n    navigationItem = navigation.find(item => item.id === id);\n  }\n\n  if (!navigationItem && pathname) {\n    navigationItem =\n      navigation.find(item => item.path.replace(/\\/$/, '') === pathname.replace(/\\/$/, '')) ||\n      (returnDefault && defaultItem);\n  }\n\n  if (!navigationItem && returnDefault) {\n    navigationItem = defaultItem;\n  }\n\n  if (navigationItem) {\n    const [, routeHref] = window.location.href.split(navigationItem.path);\n    navigationItem.routeHref = `${navigationItem.path}${routeHref || ''}`;\n  }\n\n  return { ...(navigationItem || {}) };\n};\n\n/**\n * Return an object matching a specific, or the first generic route.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathname\n * @returns {object}\n */\nconst getRouteDetail = ({ id = null, pathname = null }) => {\n  let routeItem;\n\n  if (id) {\n    routeItem = routes.find(value => id === value.id);\n  }\n\n  if (!routeItem && pathname) {\n    routeItem = routes.find(value => pathname === value.to);\n    routeItem = routeItem || routes.find(item => pathname.includes(item.to.split(':')[0]));\n  }\n\n  return { ...(routeItem || {}) };\n};\n\n/**\n * Return an object generated from both generic routes and specific navigation objects.\n * ID is not passed to \"getRouteDetail\" to avoid conflicts between routing and\n * navigation.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathname\n * @param {boolean} params.returnDefault\n * @returns {object}\n */\nconst getNavRouteDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const navDetail = getNavigationDetail({ id, pathname, returnDefault });\n  const routeDetail = getRouteDetail({ pathname: navDetail.path || pathname });\n\n  return { ...routeDetail, ...navDetail };\n};\n\nconst routerHelpers = {\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n","import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Route } from 'react-router-dom';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\nimport { Loader } from '../loader/loader';\n\n/**\n * A routing redirect.\n *\n * @param {object} props\n * @param {string} props.baseName\n * @param {object} props.history\n * @param {boolean} props.isRedirect\n * @param {boolean} props.isReplace\n * @param {string} props.url\n * @param {string} props.route\n * @returns {Node}\n */\nconst Redirect = ({ baseName, history, isRedirect, isReplace, url, route }) => {\n  const forceNavigation = urlRoute => {\n    if (!helpers.DEV_MODE && !helpers.TEST_MODE) {\n      if (isReplace) {\n        window.location.replace(urlRoute);\n      } else {\n        window.location.href = urlRoute;\n      }\n    }\n  };\n\n  if (isRedirect === true) {\n    if (route && history) {\n      const routeDetail = routerHelpers.getRouteDetail({ pathname: route });\n\n      return (\n        <React.Suspense fallback={<Loader variant=\"title\" />}>\n          <Route path=\"*\">{routeDetail && <routeDetail.component />}</Route>\n        </React.Suspense>\n      );\n    }\n\n    const forcePath = url || (route && path.join(baseName, route));\n    forceNavigation(forcePath);\n\n    return (\n      ((helpers.DEV_MODE || helpers.TEST_MODE) && <React.Fragment>Redirected towards {forcePath}</React.Fragment>) ||\n      null\n    );\n  }\n\n  return null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, isReplace: boolean, history: object, baseName: string, url: string}}\n */\nRedirect.propTypes = {\n  history: PropTypes.object,\n  isRedirect: PropTypes.bool.isRequired,\n  isReplace: PropTypes.bool,\n  url: PropTypes.string,\n  baseName: PropTypes.string,\n  route: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{route: null, isReplace: boolean, history: null, baseName: string, url: null}}\n */\nRedirect.defaultProps = {\n  history: null,\n  isReplace: false,\n  url: null,\n  baseName: routerHelpers.baseName,\n  route: null\n};\n\nconst RoutedRedirect = withRouter(Redirect);\n\nexport { RoutedRedirect as default, RoutedRedirect, Redirect };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport Redirect from './redirect';\nimport { routerHelpers } from './routerHelpers';\nimport { routerTypes } from './routerTypes';\nimport { Loader } from '../loader/loader';\n\n/**\n * Load routes.\n *\n * @augments React.Component\n */\nclass Router extends React.Component {\n  /**\n   * Parse settings array with route options.\n   *\n   * @returns {{redirectRoot: Node, renderRoutes: Array}}\n   */\n  renderRoutes() {\n    const { routes } = this.props;\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    let redirectRoot = null;\n\n    return {\n      renderRoutes: routes.map(item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        if (item.redirect === true) {\n          redirectRoot = <ReactRouterDomRedirect to={item.to} />;\n        }\n\n        if (item.render === true) {\n          return (\n            <Route\n              exact={item.hasParameters || item.exact}\n              key={item.to}\n              path={item.to}\n              strict={item.strict}\n              render={({ location, ...routeProps }) => {\n                const navDetail = routerHelpers.getNavigationDetail({\n                  pathname: location && location.pathname,\n                  returnDefault: false\n                });\n\n                const { URLSearchParams, decodeURIComponent } = window;\n                const parsedSearch = {};\n\n                [\n                  ...new Set(\n                    [...new URLSearchParams(decodeURIComponent(location.search))].map(\n                      ([param, value]) => `${param}~${value}`\n                    )\n                  )\n                ].forEach(v => {\n                  const [param, value] = v.split('~');\n                  parsedSearch[param] = value;\n                });\n\n                const updatedLocation = {\n                  ...location,\n                  parsedSearch\n                };\n\n                return (\n                  <item.component\n                    routeDetail={{\n                      baseName: routerHelpers.baseName,\n                      errorRoute: activateOnErrorRoute,\n                      routes,\n                      routeItem: { ...item },\n                      ...navDetail\n                    }}\n                    location={updatedLocation}\n                    {...routeProps}\n                  />\n                );\n              }}\n            />\n          );\n        }\n\n        return (\n          <Route exact={item.hasParameters || item.exact} key={item.to} path={item.to} component={item.component} />\n        );\n      }),\n      redirectRoot\n    };\n  }\n\n  /**\n   * Render router.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { renderRoutes, redirectRoot } = this.renderRoutes();\n\n    return (\n      <React.Suspense fallback={<Loader variant=\"title\" />}>\n        <Switch>\n          {renderRoutes}\n          {redirectRoot}\n        </Switch>\n      </React.Suspense>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.boolean,\n      component: PropTypes.any.isRequired,\n      disabled: PropTypes.boolean,\n      exact: PropTypes.boolean,\n      hasParameters: PropTypes.boolean,\n      redirect: PropTypes.boolean,\n      render: PropTypes.boolean,\n      strict: PropTypes.boolean,\n      to: PropTypes.string.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerTypes.routes\n};\n\nexport { Router as default, Router, Redirect, routerHelpers, routerTypes };\n","import { platformApiTypes } from './platformApiTypes';\nimport { rhsmApiTypes } from './rhsmApiTypes';\n\nconst apiTypes = {\n  platformApi: platformApiTypes,\n  rhsmApi: rhsmApiTypes\n};\n\nexport { apiTypes as default, apiTypes, platformApiTypes, rhsmApiTypes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {Node|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {Node}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, icon: Node|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/components/cjs/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/components/cjs/NotAuthorized';\nimport { connectRouter, reduxActions, reduxSelectors } from '../../redux';\nimport { rhsmApiTypes } from '../../types';\nimport { helpers } from '../../common';\nimport { Redirect, routerHelpers, routerTypes } from '../router/router';\nimport MessageView from '../messageView/messageView';\nimport { translate } from '../i18n/i18n';\n\n/**\n * An authentication pass-through component.\n *\n * @augments React.Component\n */\nclass Authentication extends Component {\n  appName = routerTypes.appName;\n\n  removeListeners = helpers.noop;\n\n  async componentDidMount() {\n    const { authorizeUser, history, initializeChrome, onNavigation, session, setAppName } = this.props;\n    const { subscriptions: authorized } = session.authorized || {};\n\n    if (!authorized) {\n      await authorizeUser();\n    }\n\n    if (helpers.PROD_MODE || helpers.REVIEW_MODE) {\n      initializeChrome();\n      setAppName(this.appName);\n\n      const appNav = onNavigation(event => {\n        const { routeHref } = routerHelpers.getNavRouteDetail({ id: event.navId, returnDefault: true });\n        history.push(routeHref);\n      });\n\n      this.removeListeners = () => {\n        appNav();\n      };\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  /**\n   * Render authenticated children or messaging.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children, session, t } = this.props;\n    const { subscriptions: authorized } = session.authorized || {};\n\n    if (helpers.UI_DISABLED) {\n      return (\n        <MessageView>\n          <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n        </MessageView>\n      );\n    }\n\n    if (authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (session.errorCodes && session.errorCodes.includes(rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES.OPTIN)) ||\n      session.status === 418\n    ) {\n      if (helpers.TEST_MODE) {\n        return <React.Fragment>{session.status} redirect</React.Fragment>;\n      }\n      return <Redirect isRedirect route={routerHelpers.getErrorRoute.to} />;\n    }\n\n    return (\n      <MessageView>\n        <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n      </MessageView>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, t: Function,\n *     children: Node, initializeChrome: Function, session: object, history: object}}\n */\nAuthentication.propTypes = {\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  initializeChrome: PropTypes.func,\n  onNavigation: PropTypes.func,\n  setAppName: PropTypes.func,\n  session: PropTypes.shape({\n    authorized: PropTypes.shape({\n      [routerTypes.appName]: PropTypes.bool\n    }),\n    errorCodes: PropTypes.arrayOf(PropTypes.string),\n    pending: PropTypes.bool,\n    status: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, t: translate,\n *     initializeChrome: Function, session: {authorized: object, errorCodes: Array, pending: boolean,\n *     status: number}}}\n */\nAuthentication.defaultProps = {\n  authorizeUser: helpers.noop,\n  initializeChrome: helpers.noop,\n  onNavigation: helpers.noop,\n  setAppName: helpers.noop,\n  session: {\n    authorized: {},\n    errorCodes: [],\n    pending: false,\n    status: null\n  },\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser()),\n  initializeChrome: () => dispatch(reduxActions.platform.initializeChrome()),\n  onNavigation: callback => dispatch(reduxActions.platform.onNavigation(callback)),\n  setAppName: name => dispatch(reduxActions.platform.setAppName(name))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.user.makeUserSession();\n\nconst ConnectedAuthentication = connectRouter(makeMapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/cjs';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router/router';\nimport Authentication from './authentication/authentication';\n\n/**\n * Application\n *\n * @augments React.Component\n */\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n    getLocale();\n  }\n\n  /**\n   * Render application.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <NotificationsPortal />\n        <Authentication>\n          <Router />\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{locale: object, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\n/**\n * Default props.\n *\n * @type {{locale: {}, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { baseName } from './components/router/routerHelpers';\nimport { store } from './redux';\nimport App from './components/app';\nimport '@redhat-cloud-services/frontend-components/index.css';\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './styles/index.scss';\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter basename={baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PageHeader as RcsPageHeader,\n  PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components/components/cjs/PageHeader';\nimport { Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst PageHeader = ({ children, t, productLabel }) => (\n  <RcsPageHeader>\n    <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{productLabel: string, t: Function, children: Node}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @returns {Node}\n */\nconst PageSection = ({ children, ...props }) => <Section {...props}>{children}</Section>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageSection.defaultProps = {};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @returns {Node}\n */\nconst PageToolbar = ({ children, ...props }) => <Section {...props}>{children}</Section>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageToolbar.defaultProps = {};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {Node} props.children\n * @returns {Node}\n */\nconst PageLayout = ({ children }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className=\"curiosity\">\n      {React.Children.toArray(children).filter(child => child.type !== PageHeader && child.type !== PageToolbar)}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageLayout.defaultProps = {};\n\nexport { PageLayout as default, PageLayout, PageHeader, PageSection, PageToolbar };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf('days').toDate()\n});\n\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n"],"sourceRoot":""}
{"version":3,"sources":["components/form/formState.js","../node_modules/lodash/cloneDeep.js","../node_modules/lodash/_getSymbolsIn.js","../node_modules/lodash/_getAllKeysIn.js","../node_modules/lodash/_baseClone.js","../node_modules/lodash/_arrayEach.js","../node_modules/lodash/_baseAssign.js","../node_modules/lodash/_baseAssignIn.js","../node_modules/lodash/_copySymbols.js","../node_modules/lodash/_copySymbolsIn.js","../node_modules/lodash/_initCloneArray.js","../node_modules/lodash/_initCloneByTag.js","../node_modules/lodash/_cloneDataView.js","../node_modules/lodash/_cloneRegExp.js","../node_modules/lodash/_cloneSymbol.js","../node_modules/lodash/isMap.js","../node_modules/lodash/_baseIsMap.js","../node_modules/lodash/isSet.js","../node_modules/lodash/_baseIsSet.js"],"names":["initialState","isUpdating","isSubmitting","isValid","isValidating","submitCount","FormState","props","state","onEventCustom","custom","eventArray","Array","isArray","length","filter","event","forEach","onEvent","target","persist","helpers","noop","type","touched","values","options","id","name","value","checked","targetName","undefined","setState","validate","then","updatedErrors","setUpdateErrors","checkIsValid","Object","val","errors","onReset","refValues","setValuesAssumeBoolIsChecked","resetUsingSetValues","isResetWithSetValues","updatedValues","_cloneDeep","updatedChecked","checkedSetValues","prevValues","onSubmit","preventDefault","submit","setValuesOnUpdate","setValues","this","validateOnMount","_isEqual","updateComponentValues","checkPromise","isPromise","callback","validateOnUpdate","children","Fragment","handleOnEventCustom","handleOnEvent","handleOnReset","handleOnSubmit","keys","key","obj","prototype","toString","call","React","Component","defaultProps","baseClone","require","module","exports","CLONE_DEEP_FLAG","arrayPush","getPrototype","getSymbols","stubArray","getSymbolsIn","getOwnPropertySymbols","object","result","baseGetAllKeys","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isBuffer","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","bitmask","customizer","stack","isDeep","isFlat","isFull","isArr","tag","isFunc","stacked","get","set","subValue","add","array","iteratee","index","copyObject","source","hasOwnProperty","constructor","input","cloneArrayBuffer","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","dataView","buffer","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","Symbol","symbolProto","symbolValueOf","valueOf","symbol","baseIsMap","baseUnary","nodeUtil","nodeIsMap","isObjectLike","baseIsSet","nodeIsSet"],"mappings":"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","file":"static/js/14.1fd0c3dd.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport helpers from '../../common/helpers';\n\n/**\n * Initial component state values.\n *\n * @type {{submitCount: number, isValid: null, isUpdating: boolean, isSubmitting: boolean, isValidating: boolean}}\n */\nconst initialState = {\n  isUpdating: false,\n  isSubmitting: false,\n  isValid: null,\n  isValidating: false,\n  submitCount: 0\n};\n\n/**\n * Maintain a form's state/context.\n *\n * @augments React.Component\n * @fires onEvent\n * @fires onEventCustom\n * @fires onReset\n * @fires onSubmit\n */\nclass FormState extends React.Component {\n  /**\n   * Infer a field value is \"checked\" from a boolean value.\n   *\n   * @param {object} params\n   * @param {boolean} params.setValuesAssumeBoolIsChecked\n   * @param {object} params.setValues\n   * @returns {{}}\n   */\n  static checkedSetValues({ setValuesAssumeBoolIsChecked, setValues }) {\n    const checked = {};\n\n    if (setValuesAssumeBoolIsChecked) {\n      Object.keys(setValues).forEach(key => {\n        if (typeof setValues[key] === 'boolean') {\n          checked[key] = setValues[key];\n        }\n      });\n    }\n\n    return checked;\n  }\n\n  /**\n   * Check if \"is a promise\".\n   *\n   * @param {*} obj\n   * @returns {boolean}\n   */\n  static isPromise(obj) {\n    return Object.prototype.toString.call(obj) === '[object Promise]';\n  }\n\n  state = {\n    ...initialState\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.touched = {};\n    this.checked = FormState.checkedSetValues(props);\n\n    this.refValues =\n      props.resetUsingSetValues === true || props.setValuesOnUpdate === true ? _cloneDeep(props.setValues) : null;\n\n    this.errors = {};\n    this.values = _cloneDeep(props.setValues);\n  }\n\n  componentDidMount() {\n    const { validateOnMount } = this.props;\n\n    if (validateOnMount === true) {\n      this.validateOnMount();\n    }\n  }\n\n  componentDidUpdate() {\n    const { refValues } = this;\n    const { setValuesOnUpdate, setValues } = this.props;\n\n    if (setValuesOnUpdate === true && !_isEqual(refValues, setValues)) {\n      this.updateComponentValues();\n    }\n  }\n\n  /**\n   * Apply form values with a custom event.\n   *\n   * @event onEventCustom\n   * @param {Array|object} custom\n   */\n  onEventCustom = custom => {\n    const eventArray = (Array.isArray(custom) && custom) || (custom && [custom]);\n\n    if (!eventArray.length) {\n      return;\n    }\n\n    eventArray\n      .filter(event => 'name' in event && ('value' in event || 'checked' in event))\n      .forEach(event => this.onEvent({ target: { ...event }, persist: helpers.noop, type: 'custom' }));\n  };\n\n  /**\n   * Generic \"on event\" for handling returned event objects.\n   *\n   * @event onEvent\n   * @param {object} event\n   */\n  onEvent = event => {\n    const { touched, values } = this;\n    const { id, name, value, checked } = event.options ? { ...event } : event.target;\n\n    event.persist();\n\n    const targetName = name || id || 'generated form state target, add name or id attr to field';\n\n    this.touched = { ...touched, [targetName]: true };\n    this.values = { ...values, [targetName]: value };\n\n    if (checked !== undefined) {\n      this.checked = { ...this.checked, [targetName]: checked };\n    }\n\n    this.setState(\n      {\n        isUpdating: true,\n        isValidating: true\n      },\n      () =>\n        this.validate(event).then(updatedErrors => {\n          const setUpdateErrors = { ...((updatedErrors && updatedErrors[0]) || updatedErrors || {}) };\n          const checkIsValid = !Object.values(setUpdateErrors).filter(val => val === true).length;\n\n          this.errors = setUpdateErrors;\n\n          this.setState({\n            isUpdating: false,\n            isValid: checkIsValid,\n            isValidating: false\n          });\n        })\n    );\n  };\n\n  /**\n   * Reset FormState's form state. Apply prop onReset function.\n   *\n   * @event onReset\n   * @param {object} event\n   */\n  onReset = event => {\n    const { refValues, values } = this;\n    const { setValuesAssumeBoolIsChecked, onReset, resetUsingSetValues } = this.props;\n\n    event.persist();\n\n    const isResetWithSetValues = refValues && resetUsingSetValues === true;\n    const updatedValues = (isResetWithSetValues && _cloneDeep(refValues)) || {};\n    const updatedChecked =\n      (isResetWithSetValues && FormState.checkedSetValues(setValuesAssumeBoolIsChecked, updatedValues)) || {};\n\n    this.values = updatedValues;\n    this.checked = updatedChecked;\n    this.errors = {};\n    this.touched = {};\n\n    this.setState({\n      ...initialState\n    });\n\n    if (isResetWithSetValues) {\n      onReset({ event, ..._cloneDeep({ values: updatedValues, prevValues: values }) });\n    } else {\n      // Resetting the values, potentially, will throw the controlled vs uncontrolled messaging.\n      onReset({ event, values: {}, ..._cloneDeep({ prevValues: values }) });\n    }\n  };\n\n  /**\n   * Validate form, then submit.\n   *\n   * @event onSubmit\n   * @param {object} event\n   */\n  onSubmit = event => {\n    const { submitCount } = this.state;\n\n    event.persist();\n    event.preventDefault();\n\n    this.setState(\n      {\n        submitCount: submitCount + 1,\n        isSubmitting: true,\n        isUpdating: true,\n        isValidating: true\n      },\n      () =>\n        this.validate(event).then(updatedErrors => {\n          const setUpdateErrors = { ...((updatedErrors && updatedErrors[0]) || updatedErrors || {}) };\n          const checkIsValid = !Object.values(setUpdateErrors).filter(val => val === true).length;\n\n          this.errors = setUpdateErrors;\n          this.touched = {};\n\n          this.setState(\n            {\n              isValid: checkIsValid,\n              isValidating: false\n            },\n            () =>\n              checkIsValid &&\n              this.submit(event).then(() => {\n                this.setState({\n                  isSubmitting: false,\n                  isUpdating: false\n                });\n              })\n          );\n        })\n    );\n  };\n\n  /**\n   * Handle submitted form, check and return Promise, or emulate for consistency.\n   *\n   * @param {object} event\n   * @returns {Promise}\n   */\n  submit(event = { type: 'submit' }) {\n    const { checked, errors, values, touched } = this;\n    const { onSubmit } = this.props;\n\n    const checkPromise = onSubmit({\n      event,\n      ..._cloneDeep({ ...this.state, checked, errors, values, touched })\n    });\n\n    if (FormState.isPromise(checkPromise)) {\n      return checkPromise;\n    }\n\n    return {\n      then: callback => callback()\n    };\n  }\n\n  /**\n   * Handle validated form data, check and return Promise, or emulate for consistency.\n   *\n   * @param {object} event\n   * @returns {Promise}\n   */\n  validate(event = { type: 'validate' }) {\n    const { checked, errors, values, touched } = this;\n    const { validate } = this.props;\n\n    const checkPromise = validate({\n      event,\n      ..._cloneDeep({ ...this.state, checked, errors, values, touched })\n    });\n\n    if (FormState.isPromise(checkPromise)) {\n      return checkPromise;\n    }\n\n    return {\n      then: callback => callback(checkPromise)\n    };\n  }\n\n  /**\n   * Shortcut, activate validation on component mount.\n   *\n   * @param {object} event\n   */\n  validateOnMount(event = { type: 'mount' }) {\n    this.validateOnUpdate(event);\n  }\n\n  /**\n   * Validate on component update.\n   *\n   * @param {object} event\n   */\n  validateOnUpdate(event = { type: 'update' }) {\n    this.setState(\n      {\n        isUpdating: true,\n        isValidating: true\n      },\n      () =>\n        this.validate(event).then(updatedErrors => {\n          const setUpdateErrors = { ...((updatedErrors && updatedErrors[0]) || updatedErrors || {}) };\n          const checkIsValid = !Object.values(setUpdateErrors).filter(val => val === true).length;\n\n          this.errors = setUpdateErrors;\n\n          this.setState({\n            isUpdating: false,\n            isValidating: false,\n            isValid: checkIsValid\n          });\n        })\n    );\n  }\n\n  /**\n   * On component update, update state.\n   */\n  updateComponentValues() {\n    const { setValues, setValuesAssumeBoolIsChecked, validateOnUpdate } = this.props;\n\n    this.setState(\n      {\n        isUpdating: true\n      },\n      () => {\n        this.checked = FormState.checkedSetValues(setValuesAssumeBoolIsChecked, setValues);\n        this.refValues = _cloneDeep(setValues);\n        this.values = _cloneDeep(setValues);\n\n        if (validateOnUpdate) {\n          this.validateOnUpdate();\n        } else {\n          this.setState({\n            isUpdating: false\n          });\n        }\n      }\n    );\n  }\n\n  /**\n   * Pass child components, integrate and apply form context.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { checked, errors, values, touched } = this;\n    const { children } = this.props;\n\n    return (\n      <React.Fragment>\n        {children({\n          handleOnEventCustom: this.onEventCustom,\n          handleOnEvent: this.onEvent,\n          handleOnReset: this.onReset,\n          handleOnSubmit: this.onSubmit,\n          ..._cloneDeep({ ...this.state, checked, errors, values, touched })\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{setValuesOnUpdate: boolean, validateOnMount: boolean, children: Function,\n *     setValues: object, onSubmit: Function, resetUsingSetValues: boolean,\n *     setValuesAssumeBoolIsChecked: boolean, onReset: Function, validate: Function,\n *     validateOnUpdate: boolean}}\n */\nFormState.propTypes = {\n  children: PropTypes.func.isRequired,\n  onReset: PropTypes.func,\n  onSubmit: PropTypes.func,\n  resetUsingSetValues: PropTypes.bool,\n  setValues: PropTypes.object,\n  setValuesOnUpdate: PropTypes.bool,\n  setValuesAssumeBoolIsChecked: PropTypes.bool,\n  validate: PropTypes.func,\n  validateOnMount: PropTypes.bool,\n  validateOnUpdate: PropTypes.bool\n};\n\n/**\n * Default props.\n *\n * @type {{setValuesOnUpdate: boolean, validateOnMount: boolean, setValues: {},\n *     onSubmit: Function, resetUsingSetValues: boolean, setValuesAssumeBoolIsChecked: boolean,\n *     onReset: Function, validate: Function, validateOnUpdate: boolean}}\n */\nFormState.defaultProps = {\n  onReset: helpers.noop,\n  onSubmit: helpers.noop,\n  resetUsingSetValues: true,\n  setValues: {},\n  setValuesOnUpdate: false,\n  setValuesAssumeBoolIsChecked: true,\n  validate: helpers.noop,\n  validateOnMount: false,\n  validateOnUpdate: false\n};\n\nexport { FormState as default, FormState };\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n"],"sourceRoot":""}
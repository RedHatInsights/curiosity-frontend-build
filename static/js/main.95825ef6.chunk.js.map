{"version":3,"sources":["images/graph4x.png","images/graph2x.png","images/subscriptions.svg","common/helpers.js","components/pageLayout/pageHeader.js","components/pageLayout/pageSection.js","components/pageLayout/pageToolbar.js","components/pageLayout/pageLayout.js","types/rhsmApiTypes.js","common/dateHelpers.js","redux/common/reduxHelpers.js","redux/middleware/index.js","redux/middleware/statusMiddleware.js","redux/types/appTypes.js","redux/types/graphTypes.js","redux/types/platformTypes.js","redux/types/rhsmTypes.js","redux/types/userTypes.js","redux/types/index.js","redux/reducers/graphReducer.js","redux/reducers/viewReducer.js","types/platformApiTypes.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store.js","services/platformServices.js","redux/actions/platformActions.js","services/config.js","services/rhsmServices.js","redux/actions/rhsmActions.js","services/userServices.js","components/i18n/i18n.js","redux/actions/userActions.js","redux/actions/index.js","redux/selectors/graphCardSelectors.js","redux/selectors/viewSelectors.js","redux/selectors/index.js","redux/index.js","components/form/select.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardTypes.js","components/graphCard/graphCardChartTooltip.js","components/graphCard/graphCardChartLegend.js","components/chartArea/chartArea.js","components/graphCard/graphCard.js","components/c3GraphCard/c3GraphCardHelpers.js","components/c3GraphCard/c3GraphCardLegendItem.js","components/c3Chart/c3Chart.js","components/c3GraphCard/c3GraphCard.js","components/toolbar/toolbarTypes.js","components/toolbar/toolbar.js","components/openshiftView/openshiftView.js","components/optinView/optinView.js","components/rhelView/rhelView.js","components/tourView/tourView.js","components/router/routerTypes.js","components/router/routerHelpers.js","components/router/redirect.js","components/router/router.js","components/messageView/messageView.js","components/authentication/authentication.js","components/app.js","index.js"],"names":["module","exports","noop","Function","prototype","noopPromise","Promise","resolve","helpers","browserExpose","obj","options","limit","id","process","window","generateId","prefix","Math","ceil","random","isPromise","Object","toString","call","noopTranslate","key","value","components","DEV_MODE","PROD_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_TABLE","UI_DISABLED_TOOLBAR","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LOGGER_ID","UI_NAME","UI_PATH","UI_VERSION","UI_WINDOW_ID","PageHeader","children","title","defaultProps","PageSection","props","Section","PageToolbar","PageLayout","Fragment","React","Children","toArray","filter","child","isValidElement","type","className","RHSM_API_PATH_ID_TYPES","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","OPENSHIFT","RHSM_API_QUERY_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_QUERY_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","rhsmApiTypes","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","CLOUD_CORES","CLOUD_INSTANCES","CLOUD_SOCKETS","CORES","DATE","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_CAPACITY_META","RHSM_API_RESPONSE_CAPACITY_META_TYPES","COUNT","RHSM_API_RESPONSE_ERROR_DATA","RHSM_API_RESPONSE_ERROR_DATA_TYPES","CODE","DETAIL","RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES","OPTIN","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","HAS_DATA","RHSM_API_RESPONSE_PRODUCTS_META","RHSM_API_RESPONSE_PRODUCTS_META_TYPES","RHSM_API_QUERY_GRANULARITY","RHSM_API_QUERY_LIMIT","RHSM_API_QUERY_OFFSET","RHSM_API_QUERY_OPTIN_TALLY_SYNC","RHSM_API_QUERY_OPTIN_TALLY_REPORT","RHSM_API_QUERY_OPTIN_CONDUIT_SYNC","RHSM_API_QUERY_SLA","RHSM_API_QUERY_START_DATE","RHSM_API_QUERY_END_DATE","getCurrentDate","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","date","subtract","measurement","startDate","moment","utc","startOf","toDate","endDate","endOf","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","getSingleResponseFromResultArray","results","updatedResults","payload","response","updatedResultsMessage","message","Array","isArray","firstErrorResponse","find","_get","status","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","data","formattedStatus","trim","_isPlainObject","JSON","stringify","getDateFromResults","getStatusFromResults","setStateProp","prop","state","initialState","reset","singlePromiseDataResponseFromArray","map","reduxHelpers","schemas","initialValue","schema","generated","values","forEach","types","action","expandedTypes","val","subVal","push","ref","RegExp","test","whichType","expandMetaTypes","meta","updatedMeta","query","metaData","metaId","metaQuery","baseState","error","errorMessage","fulfilled","pending","setId","errorResponse","cancelled","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","config","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","store","dispatch","next","httpStatus","payloadConfig","range","floor","statusMiddleware","promiseMiddleware","notificationsMiddleware","appTypes","STATUS_4XX","STATUS_5XX","graphTypes","SET_GRAPH_LEGEND","platformTypes","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","rhsmTypes","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_RHSM","GET_GRAPH_REPORT_CAPACITY_RHSM","SET_GRAPH_GRANULARITY_RHSM","SET_GRAPH_SLA_RHSM","userTypes","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","legend","reportCapacity","graphReducer","graphQuery","viewReducer","viewId","platformApiTypes","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","optin","session","admin","authorized","entitled","errorCodes","locale","permissions","userReducer","user","subscriptionPermissions","permission","definitions","actionStatus","reducers","notifications","graph","view","reduxReducers","combineReducers","createStore","applyMiddleware","getUser","a","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","auth","Error","getUserPermissions","appName","e","platformServices","initializeChrome","init","onNavigation","callback","on","setAppName","name","identifyApp","reject","setNavigation","location","navigation","item","active","pathname","split","slice","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","serviceConfig","passedConfig","headers","timeout","cancelTokens","serviceCall","updatedConfig","cancelTokensId","url","cancel","CancelToken","source","cancelToken","token","axios","rhsmServices","getApiVersion","getGraphCapacity","params","getGraphReports","rhsmActions","getGraphReportsCapacity","all","getLocaleFromCookie","Cookies","get","replace","LocaleCode","getLanguageName","userServices","authorizeUser","userData","userPermissions","keys","length","emulatedErrorResponse","getLocale","defaultLocale","logoutUser","deleteAccountOptIn","method","getAccountOptIn","updateAccountOptIn","translate","translateKey","Trans","i18nKey","i18next","t","I18n","isLoaded","i18nInit","fallbackLng","loadPath","use","XHR","initReactI18next","backend","lng","debug","ns","defaultNS","react","useSuspense","setState","this","prevProps","Component","actions","platform","rhsm","rejected","variant","description","dismissable","reduxActions","graphCardCache","dataId","graphCardSelector","createSelector","productId","responseData","updatedResponseData","graphData","responseMetaQuery","cachedGranularity","undefined","assign","_isEqual","report","capacity","reportData","capacityData","graphDataKey","tallySchema","capacitySchema","customReportValue","presetData","hasData","customCapacityValue","x","y","hasInfinite","index","generateGraphData","graphDataObj","keyPrefix","customValue","graphDataObjKey","generatedY","casedGraphDataObjKey","_camelCase","Number","parseInt","updatedItem","graphCardSelectors","graphCard","makeGraphCard","viewSelector","createSelectorCreator","defaultMemoize","createDeepEqualSelector","viewGraph","reduxSelectors","makeView","connectTranslate","mapStateToProps","mapDispatchToProps","component","connect","withTranslation","Select","isExpanded","selected","onSelect","event","titleSelection","updatedOptions","optionsIndex","findIndex","option","SelectVariant","single","updateSelected","opt","mockUpdatedOptions","_cloneDeep","mockTarget","selectedIndex","checkbox","checked","mockEvent","target","currentTarget","persist","onToggle","expanded","formatOptions","selectedOptions","activateOptions","convertedOption","text","textContent","label","includes","ariaLabel","isDisabled","placeholder","pfSelectOptions","aria-label","selections","placeholderText","btoa","data-value","data-title","getTooltipDate","momentDate","format","add","graphCardHelpers","getChartXAxisLabelIncrement","xAxisTickFormat","tick","previousDate","formattedDate","isNewYear","year","yAxisTickFormat","numbro","average","mantissa","optionalMantissa","graphCardTypes","optionsType","GraphCardChartTooltip","datum","product","header","itemsByKey","tempDataFacet","color","thresholdStringValue","dataFactsValue","summary","colSpan","dataFacet","aria-hidden","style","backgroundColor","TranslatedGraphCardChartTooltip","GraphCardChartLegend","onClick","chart","updatedToggle","toggle","dataSets","isToggled","hide","chartId","isThreshold","labelContent","tooltipContent","checkIsToggled","button","Button","onKeyPress","tabIndex","icon","visibility","borderTopColor","Tooltip","content","position","TooltipPosition","top","distance","entryDelay","exitDelay","stroke","renderLegendItem","ConnectedGraphCardChartLegend","ChartArea","chartWidth","dataSetsToggle","containerRef","createRef","tooltipRef","onResizeContainer","containerElement","current","clientWidth","onHide","forceUpdate","onRevert","getIsToggled","addEventListener","removeEventListener","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","floored","pow","log10","maxY","chartDomain","chartTooltip","tooltipDataSet","fill","mockDatum","tooltip","cloneElement","v","VictoryVoronoiCursorContainer","createContainer","parsedTooltipData","getTooltipData","globalContainerBounds","globalTooltipBounds","FlyoutComponent","containerBounds","getBoundingClientRect","tooltipBounds","right","xCoordinate","width","htmlContent","applyParsedTooltipData","height","display","xmlns","cursorDimension","labels","labelComponent","voronoiDimension","voronoiPadding","chartLegend","legendProps","revert","stacked","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","themeColor","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","tooltipComponent","containerComponent","renderTooltip","chartProps","Chart","duration","ChartAxis","renderChart","ChartStack","renderLegend","bottom","left","GraphCard","onUpdateGraphData","graphGranularity","toISOString","onGranularitySelect","filterGraphData","selectOptionsType","productShortLabel","updatedGranularity","chartAreaProps","filtered","tempFiltered","onLoad","chartColorGreenDark","filteredGraphData","cardTitle","Card","CardHead","CardActions","CardBody","Skeleton","size","SkeletonSize","xs","sm","md","lg","makeMapStateToProps","ConnectedGraphCard","c3GraphCardHelpers","hiddenDataFacets","converted","colors","columns","groups","names","convertTimeSeriesDate","local","totalData","filteredValue","pop","configuration","order","b","ratio","updatedValue","dataItem","dataValue","unloadBeforeLoad","show","spline","point","grid","axis","xAxisTicks","dateIndex","default","min","outer","C3GraphCardLegendItem","updatedIsToggled","onFocus","getToggle","focus","getColor","onMouseOver","onBlur","onMouseOut","C3Chart","node","generateChart","destroy","onComplete","updatedChart","c3","generate","bindto","load","unload","done","C3GraphCard","filteredData","isDataHidden","toolbarTypes","SLA_TYPES","Toolbar","onClear","dispatchFilter","onSlaSelect","slaOptions","filterSla","slaOptionsSelected","DataToolbar","collapseListedFiltersBreakpoint","clearAllFilters","DataToolbarContent","DataToolbarGroup","DataToolbarFilter","chips","deleteChip","categoryName","TranslatedToolbar","OpenshiftView","filters","initialFilters","initialOption","routeDetail","isC3","parsedSearch","pathParameter","renderSelect","chartColorBlueLight","chartColorBlueDark","ConnectedOpenshiftView","OptinView","onSubmitOptIn","disableButton","Form","ActionGroup","Spinner","isInline","href","CardHeadMain","Brand","srcSet","graphPng4x","graphPng2x","src","alt","CardHeader","Title","headingLevel","CardFooter","Flex","breakpointMods","modifier","FlexModifiers","column","row","breakpoint","FlexBreakpoints","FlexItem","renderOptinForm","renderTour","ConnectedOptinView","RhelView","chartColorCyanLight","chartColorCyanDark","chartColorPurpleLight","chartColorPurpleDark","ConnectedRhelView","TourView","EmptyState","EmptyStateVariant","full","subscriptionsSvg","EmptyStateBody","EmptyStateSecondaryActions","ConnectedTourView","platformLandingRedirect","path","join","platformModalRedirect","routes","to","redirect","exact","render","disabled","activateOnError","pathId","routerTypes","dynamicBaseName","pathName","pathPrefix","shift","pathSlice","baseName","getErrorRoute","route","getNavigationDetail","navigationItem","returnDefault","defaultItem","routeHref","getRouteDetail","routeItem","routerHelpers","getNavRouteDetail","navDetail","Redirect","urlRoute","history","isRedirect","isReplace","forcePath","RoutedRedirect","withRouter","Router","activateOnErrorRoute","redirectRoot","renderRoutes","hasParameters","strict","routeProps","URLSearchParams","decodeURIComponent","Set","search","param","updatedLocation","errorRoute","MessageView","pageTitle","EmptyStateIcon","Authentication","removeListeners","appNav","navId","BinocularsIcon","LockIcon","ConnectedAuthentication","App","ConnectedApp","connectRouter","basename","document","getElementById"],"mappings":"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","file":"static/js/main.95825ef6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/graph4x.4d450825.png\";","module.exports = __webpack_public_path__ + \"static/media/graph2x.1e4428de.png\";","module.exports = __webpack_public_path__ + \"static/media/subscriptions.0ad5eae0.svg\";","/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n// ToDo: expand to include \"async\" check in scenarios where async/await are utilized.\n/**\n * Check if \"is a Promise\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => Object.prototype.toString.call(obj) === '[object Promise]';\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string} key\n * @param {string|object} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) =>\n  `t(${key}${(value && `, ${value}`) || ''}${(components && `, ${components}`) || ''})`;\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  browserExpose,\n  generateId,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LOGGER_ID,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PageHeader as RcsPageHeader,\n  PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components/components/PageHeader';\n\n/**\n * Render a platform page header.\n *\n * @returns {Node}\n */\nconst PageHeader = ({ children }) => (\n  <RcsPageHeader>\n    <PageHeaderTitle title={children} />\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageHeader.defaultProps = {};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\n\n/**\n * Render a platform page section.\n *\n * @returns {Node}\n */\nconst PageSection = ({ children, ...props }) => <Section {...props}>{children}</Section>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageSection.defaultProps = {};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @returns {Node}\n */\nconst PageToolbar = ({ children, ...props }) => <Section {...props}>{children}</Section>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageToolbar.defaultProps = {};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @returns {Node}\n */\nconst PageLayout = ({ children }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main className=\"curiosity\">\n      {React.Children.toArray(children).filter(child => child.type !== PageHeader && child.type !== PageToolbar)}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageLayout.defaultProps = {};\n\nexport { PageLayout as default, PageLayout, PageHeader, PageSection, PageToolbar };\n","/**\n * RHSM response Capacity DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\n\n/**\n * RHSM response Capacity DATA types.\n * Schema/map of expected Capacity data response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string,\n *     HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response Capacity META type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_META = 'meta';\n\n/**\n * RHSM response Capacity META types.\n * Schema/map of expected Capacity META response properties.\n *\n * @type {{COUNT: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_META_TYPES = {\n  COUNT: 'count'\n};\n\n/**\n * RHSM response Error DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA = 'errors';\n\n/**\n * RHSM response Error DATA types.\n * Schema/map of expected Error data response properties.\n *\n * @type {{CODE: string, DETAIL: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_TYPES = {\n  CODE: 'code',\n  DETAIL: 'detail'\n};\n\n/**\n * RHSM response Error DATA CODE types.\n *\n * @type {{OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES = {\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response Reporting/Tally DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\n\n/**\n * RHSM response Reporting/Tally DATA types.\n * Schema/map of expected Reporting/Tally DATA response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, HAS_DATA: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM response Reporting/Tally META type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_META = 'meta';\n\n/**\n * RHSM response Reporting/Tally META types.\n * Schema/map of expected Reporting/Tally META response properties.\n *\n * @type {{COUNT: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_META_TYPES = {\n  COUNT: 'count'\n};\n\n/**\n * RHSM product id type values.\n *\n * @type {{RHEL_ARM: string, RHEL_WORKSTATION: string, RHEL_DESKTOP: string, RHEL: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_COMPUTE_NODE: string, RHEL_IBM_POWER: string,\n *     RHEL_X86: string, OPENSHIFT: string}}\n */\nconst RHSM_API_PATH_ID_TYPES = {\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  OPENSHIFT: 'OpenShift Container Platform'\n};\n\n/**\n * RHSM API query/search parameter GRANULARITY type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_GRANULARITY = 'granularity';\n\n/**\n * RHSM API query/search parameter of GRANULARITY type values.\n * Schema/map of expected query/search parameter granularity types.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\n\n/**\n * RHSM API query/search parameter results LIMIT type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_LIMIT = 'limit';\n\n/**\n * RHSM API query/search parameter result set OFFSET type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OFFSET = 'offset';\n\n/**\n * RHSM API query/search parameter OPT-IN TALLY SYNC type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OPTIN_TALLY_SYNC = 'enable_tally_sync';\n\n/**\n * RHSM API query/search parameter OPT-IN TALLY REPORT type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OPTIN_TALLY_REPORT = 'enable_tally_reporting';\n\n/**\n * RHSM API query/search parameter OPTIN CONDUIT SYNC type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OPTIN_CONDUIT_SYNC = 'enable_conduit_sync';\n\n/**\n * RHSM API query/search parameter SLA type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_SLA = 'sla';\n\n/**\n * RHSM API query/search parameter SLA type values.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_QUERY_SLA_TYPES = {\n  PREMIUM: 'premium',\n  STANDARD: 'standard',\n  SELF: 'self-support',\n  NONE: ''\n};\n\n/**\n * RHSM API query/search parameter START DATE type.\n * Associated with a sequential date prior/before the target date.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_START_DATE = 'beginning';\n\n/**\n * RHSM API query/search parameter END DATE type.\n * Associated with a sequential date on or after the target date. Limited by the current date.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_END_DATE = 'ending';\n\n/**\n * RHSM API types.\n *\n * @type {{RHSM_API_QUERY_END_DATE: string, RHSM_API_QUERY_GRANULARITY: string, RHSM_API_QUERY_START_DATE: string,\n *    RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES: {OPTIN: string}, RHSM_API_RESPONSE_CAPACITY_DATA: string,\n *    RHSM_API_PATH_ID_TYPES: {RHEL_ARM: string, RHEL_WORKSTATION: string, RHEL_DESKTOP: string, RHEL: string,\n *    RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_COMPUTE_NODE: string, RHEL_IBM_POWER: string,\n *    RHEL_X86: string, OPENSHIFT: string}, RHSM_API_RESPONSE_ERROR_DATA_TYPES: {CODE: string, DETAIL: string},\n *    RHSM_API_QUERY_OPTIN_TALLY_REPORT: string, RHSM_API_QUERY_OPTIN_TALLY_SYNC: string,\n *    RHSM_API_QUERY_SLA: string, RHSM_API_RESPONSE_CAPACITY_META_TYPES: {COUNT: string},\n *    RHSM_API_QUERY_OPTIN_CONDUIT_SYNC: string, RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string,\n *    NONE: string, STANDARD: string}, RHSM_API_RESPONSE_CAPACITY_DATA_TYPES: {HYPERVISOR_SOCKETS: string,\n *    CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string,\n *    HAS_INFINITE: string, PHYSICAL_CORES: string}, RHSM_API_QUERY_LIMIT: string,\n *    RHSM_API_RESPONSE_CAPACITY_META: string, RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES: {HYPERVISOR_SOCKETS: string,\n *    CORES: string, DATE: string, SOCKETS: string, HAS_DATA: string, PHYSICAL_SOCKETS: string,\n *    HYPERVISOR_CORES: string, PHYSICAL_CORES: string}, RHSM_API_RESPONSE_PRODUCTS_META: string,\n *    RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *    RHSM_API_RESPONSE_ERROR_DATA: string, RHSM_API_RESPONSE_PRODUCTS_DATA: string,\n *    RHSM_API_RESPONSE_PRODUCTS_META_TYPES: {COUNT: string}, RHSM_API_QUERY_OFFSET: string}}\n */\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_OPTIN_TALLY_SYNC,\n  RHSM_API_QUERY_OPTIN_TALLY_REPORT,\n  RHSM_API_QUERY_OPTIN_CONDUIT_SYNC,\n  RHSM_API_QUERY_SLA,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_OPTIN_TALLY_SYNC,\n  RHSM_API_QUERY_OPTIN_TALLY_REPORT,\n  RHSM_API_QUERY_OPTIN_CONDUIT_SYNC,\n  RHSM_API_QUERY_SLA,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @property {Date} date Start date, typically the current date.\n * @property {number} subtract Number of granularity type to subtract from the current date.\n * @property {string} measurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf('days').toDate()\n});\n\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} initialValue\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 300 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (process.env.REACT_APP_ENV === 'development' && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (process.env.REACT_APP_ENV === 'development' && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    delete updatedMeta.data;\n    delete updatedMeta.id;\n    delete updatedMeta.query;\n\n    return {\n      meta: { ...updatedMeta },\n      metaData: meta.data,\n      metaId: meta.id,\n      metaQuery: meta.query\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setResponseSchemas,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { statusMiddleware } from './statusMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  promiseMiddleware,\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","const SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_INIT: string, PLATFORM_SET_NAV: string,\n *     PLATFORM_CLEAR_NOTIFICATIONS: string, PLATFORM_ADD_NOTIFICATION: string,\n *     PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n","const GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_RHSM = 'GET_GRAPH_REPORT_RHSM';\nconst GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst SET_GRAPH_GRANULARITY_RHSM = 'SET_GRAPH_GRANULARITY_RHSM';\nconst SET_GRAPH_SLA_RHSM = 'SET_GRAPH_SLA_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, SET_GRAPH_GRANULARITY_RHSM: string,\n *     GET_GRAPH_CAPACITY_RHSM: string, SET_GRAPH_SLA_RHSM: string,\n *     GET_GRAPH_REPORT_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  SET_GRAPH_GRANULARITY_RHSM,\n  SET_GRAPH_SLA_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  SET_GRAPH_GRANULARITY_RHSM,\n  SET_GRAPH_SLA_RHSM\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_AUTH: string, USER_LOCALE: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_AUTH,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { platformTypes } from './platformTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  platform: platformTypes,\n  rhsm: rhsmTypes,\n  user: userTypes\n};\n\nexport { reduxTypes as default, reduxTypes, appTypes, graphTypes, platformTypes, rhsmTypes, userTypes };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: object}}\n */\nconst initialState = {\n  legend: {},\n  reportCapacity: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          ...action.legend\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [{ ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM }],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_GRANULARITY, RHSM_API_QUERY_SLA } from '../../types/rhsmApiTypes';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphQuery: {}}}\n */\nconst initialState = {\n  graphQuery: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM:\n      return reduxHelpers.setStateProp(\n        'graphQuery',\n        {\n          [action.viewId]: {\n            ...state.graphQuery[action.viewId],\n            [RHSM_API_QUERY_GRANULARITY]: action[RHSM_API_QUERY_GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.rhsm.SET_GRAPH_SLA_RHSM:\n      return reduxHelpers.setStateProp(\n        'graphQuery',\n        {\n          [action.viewId]: {\n            ...state.graphQuery[action.viewId],\n            [RHSM_API_QUERY_SLA]: action[RHSM_API_QUERY_SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\n/**\n * Platform API types.\n *\n * @type {{PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES: {USER: string},\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS: string, PLATFORM_API_RESPONSE_USER_IDENTITY: string,\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES: {ENTITLED: string},\n *     PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES: {ORG_ADMIN: string}}}\n */\nconst platformApiTypes = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES\n};\n\nexport {\n  platformApiTypes as default,\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES\n};\n","import _get from 'lodash/get';\nimport { appTypes, userTypes } from '../types';\nimport { platformApiTypes, rhsmApiTypes } from '../../types';\nimport { helpers } from '../../common';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{session: {entitled: boolean, permissions: Array, authorized: boolean, errorCodes: Array,\n *     pending: boolean, errorMessage: string, fulfilled: boolean, admin: boolean, error: boolean,\n *     locale: string, status: (string|number)}, optin: {}}}\n */\nconst initialState = {\n  optin: {},\n  session: {\n    admin: false,\n    authorized: false,\n    entitled: false,\n    error: false,\n    errorCodes: [],\n    errorMessage: null,\n    fulfilled: false,\n    locale: null,\n    pending: false,\n    permissions: [],\n    status: null\n  }\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.REJECTED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          error: action.error,\n          errorMessage: reduxHelpers.getMessageFromResults(action),\n          locale: state.session.locale,\n          status: reduxHelpers.getStatusFromResults(action)\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.PENDING_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: state.session.locale,\n          pending: true\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_AUTH):\n      const { user, permissions } = reduxHelpers.getDataFromResults(action);\n      const admin = _get(\n        user,\n        [\n          platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n          platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n          platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n        ],\n        false\n      );\n\n      const entitled = _get(\n        user,\n        [\n          platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n          helpers.UI_NAME,\n          platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED\n        ],\n        false\n      );\n\n      const subscriptionPermissions = permissions.map(value => ({\n        permission: value[platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION],\n        definitions: value[platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]\n      }));\n\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          admin,\n          authorized: true,\n          entitled,\n          fulfilled: true,\n          locale: state.session.locale,\n          permissions: subscriptionPermissions\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(\n          reduxHelpers.getDataFromResults(action),\n          [rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA],\n          []\n        );\n\n        return reduxHelpers.setStateProp(\n          'session',\n          {\n            admin: state.session.admin,\n            entitled: state.session.entitled,\n            error: true,\n            errorCodes: errorCodes.map(value => value[rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE]),\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            locale: state.session.locale,\n            permissions: state.session.permissions,\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport viewReducer from './viewReducer';\nimport userReducer from './userReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  view: viewReducer,\n  user: userReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport { reduxReducers as default, reduxReducers, graphReducer, viewReducer, userReducer };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","import _set from 'lodash/set';\nimport { helpers } from '../common';\nimport { platformApiTypes } from '../types';\n\n/**\n * Basic user authentication.\n *\n * @returns {Promise<void>}\n */\nconst getUser = async () => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE &&\n        _set(\n          {},\n          [\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n          ],\n          process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n        )) ||\n      (await insights.chrome.auth.getUser())\n    );\n  } catch (e) {\n    throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n  }\n};\n\n/**\n * FixMe: revert this back towards async/await\n * Removed because there appears to be some quirky behavior where permissions will not come through\n * unless the function, and/or await are specifically returned, i.e. \"return await insights.chrome...\".\n */\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @returns {Promise<void>}\n */\nconst getUserPermissions = (appName = '') => {\n  const { insights } = window;\n  try {\n    return insights.chrome.getUserPermissions(appName);\n  } catch (e) {\n    throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<void>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n// FixMe: Revert catch to throwing an error. Relaxed for development\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<void>}\n */\nconst setAppName = async (name = null) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.identifyApp(name);\n  } catch (e) {\n    const error = `{ identifyApp } = insights.chrome, ${e.message}`;\n    await Promise.reject(error);\n  }\n};\n\n// ToDo: Clean up, consider removing setNavigation, currently no longer used.\n/**\n * Set platform left hand navigation active item.\n *\n * @param {Array} data\n * @returns {*}\n */\nconst setNavigation = (data = []) => {\n  const { insights, location } = window;\n  try {\n    return insights.chrome.navigation(\n      data.map(item => ({\n        ...item,\n        active: item.id === location.pathname.split('/').slice(-1)[0]\n      }))\n    );\n  } catch (e) {\n    throw new Error(`{ navigation } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = { getUser, getUserPermissions, initializeChrome, onNavigation, setAppName, setNavigation };\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  getUserPermissions,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for handling the left-nav navigation active item.\n *\n * @param {object} data\n * @returns {Function}\n */\nconst setNavigation = data => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_SET_NAV\n  });\n  return platformServices.setNavigation(data);\n};\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import axios, { CancelToken } from 'axios';\nimport { platformServices } from './platformServices';\n\n/**\n * Apply consistent service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {object}\n */\nconst cancelTokens = {};\n\n/**\n * Call platform \"getUser\" auth method, and apply service config.\n *\n * @param {object} config\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n\n  const updatedConfig = { ...config };\n  const cancelTokensId = updatedConfig.url;\n\n  if (updatedConfig.cancel === true) {\n    if (cancelTokens[cancelTokensId]) {\n      cancelTokens[cancelTokensId].cancel('cancelled request');\n    }\n\n    cancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = cancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  return axios(serviceConfig(updatedConfig));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @returns {Promise<*>}\n */\nconst getApiVersion = () =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {Enum} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {Enum} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {Object} links\n * @apiSuccess {Object} meta\n * @apiSuccess {Enum} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {Enum} meta.product\n * - RHEL\n * @apiSuccess {Number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2019-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2019-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2019-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2019-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40\n *         },\n *         {\n *           \"date\": \"2019-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2018-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2018-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2018-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2018-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\"\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params,\n    cancel: true\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-07-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-02T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-03T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-04T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-05T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-06T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-08T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-09T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-10T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-31T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params,\n    cancel: true\n  });\n\nconst rhsmServices = { getApiVersion, getGraphCapacity, getGraphReports };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport { rhsmServices as default, rhsmServices, getApiVersion, getGraphCapacity, getGraphReports };\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsmServices';\n\n/**\n * Get a combined RHSM response from reporting and capacity.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getGraphReportsCapacity = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n    payload: Promise.all([rhsmServices.getGraphReports(id, query), rhsmServices.getGraphCapacity(id, query)]),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActions = { getGraphReportsCapacity };\n\nexport { rhsmActions as default, rhsmActions, getGraphReportsCapacity };\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { getUser, getUserPermissions } from './platformServices';\nimport { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * Apply an emulated API response to the platforms getUser method.\n *\n * @returns {Promise<{data: {permissions: (void|*[]), user: void}, message: string, status: number}>}\n */\nconst authorizeUser = async () => {\n  let message = '{ auth.getUser, getUserPermissions } = insights.chrome';\n  let userData;\n  let userPermissions;\n\n  try {\n    userData = await getUser();\n    userPermissions = await getUserPermissions(helpers.UI_NAME);\n  } catch (e) {\n    message = e.message;\n  }\n\n  if (_isPlainObject(userData) && Object.keys(userData).length) {\n    return Promise.resolve({ data: { user: userData, permissions: userPermissions || [] }, message, status: 200 });\n  }\n\n  const emulatedErrorResponse = {\n    ...new Error(message),\n    message,\n    status: 418\n  };\n\n  return Promise.reject(emulatedErrorResponse);\n};\n\n/**\n * Return a platform locale value from a cookie.\n *\n * @private\n * @returns {{value: string, key: string | null}|null}\n */\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\n/**\n * Return platform locale.\n *\n * @returns {Promise<{data: void}>}\n */\nconst getLocale = () => {\n  const defaultLocale = {\n    value: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n    key: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC\n  };\n\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_numner\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = () =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_numner\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport {\n  userServices as default,\n  userServices,\n  authorizeUser,\n  getLocale,\n  logoutUser,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, Trans, withTranslation } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string} translateKey\n * @param {string|Array} values A default string if the key can't be found. An array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @returns {string|Node}\n */\nconst translate = (translateKey, values = null, components) => {\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(translateKey, values, components);\n  }\n\n  if (components) {\n    return <Trans i18nKey={translateKey} values={values} components={components} />;\n  }\n\n  return i18next.t(translateKey, values);\n};\n\n/**\n * Apply string replacements against a component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst translateComponent = component => (!helpers.TEST_MODE && withTranslation()(component)) || component;\n\n/**\n * ToDo: reevaluate the \"I18nextProvider\" on package update.\n * Appears to have timing issues, and subsequent firings of the\n * ajax/xhr setup. Reverting it to just a function call that populates behind\n * the scenes appears more predictable.\n */\n/**\n * Load I18n.\n *\n * @augments React.Component\n */\nclass I18n extends React.Component {\n  state = { isLoaded: false };\n\n  componentDidMount() {\n    this.i18nInit();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { locale } = this.props;\n\n    if (locale !== prevProps.locale) {\n      this.i18nInit();\n    }\n  }\n\n  /**\n   * Load i18next.\n   *\n   * @returns {Promise<void>}\n   */\n  i18nInit = async () => {\n    const { fallbackLng, loadPath, locale } = this.props;\n\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: locale,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      // ToDo: eval the need for an isError state ref\n    }\n\n    this.setState({ isLoaded: true });\n  };\n\n  /**\n   * Render children after i18next loads.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { isLoaded } = this.state;\n    const { children } = this.props;\n\n    return (isLoaded && <React.Fragment>{children}</React.Fragment>) || <React.Fragment />;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: Node, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get an emulated API response from the platforms \"getUser\" method.\n *\n * @returns {Function}\n */\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userServices.authorizeUser()\n  });\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userServices.getLocale()\n});\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn = (query = {}) => dispatch =>\n  dispatch({\n    type: userTypes.UPDATE_USER_OPTIN,\n    payload: userServices.updateAccountOptIn(query),\n    meta: {\n      query,\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsErrorDescription'),\n          dismissable: true\n        },\n        fulfilled: {\n          variant: 'success',\n          title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsSuccessDescription'),\n          dismissable: true,\n          autoDismiss: false\n        }\n      }\n    }\n  });\n\nconst userActions = { authorizeUser, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport {\n  userActions as default,\n  userActions,\n  authorizeUser,\n  getLocale,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _get from 'lodash/get';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{dataId: {string}, data: {object}}}\n */\nconst graphCardCache = { dataId: null, data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst graphResponse = (state, props = {}) => ({\n  ..._get(state, ['graph', 'reportCapacity', props.productId]),\n  ...{\n    viewId: props.viewId,\n    productId: props.productId,\n    graphQuery: props.graphQuery\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst graphCardSelector = createSelector([graphResponse], response => {\n  const { viewId = null, productId = null, graphQuery = {}, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    graphData: {},\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n  delete responseMetaQuery[rhsmApiTypes.RHSM_API_QUERY_START_DATE];\n  delete responseMetaQuery[rhsmApiTypes.RHSM_API_QUERY_END_DATE];\n\n  const cachedGranularity =\n    (viewId && productId && graphCardCache.data[`${viewId}_${productId}_${JSON.stringify(graphQuery)}`]) || undefined;\n\n  Object.assign(updatedResponseData, { ...cachedGranularity });\n\n  if (viewId && graphCardCache.dataId !== viewId) {\n    graphCardCache.dataId = viewId;\n    graphCardCache.data = {};\n  }\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(graphQuery, responseMetaQuery)) {\n    const [report, capacity] = responseData.data;\n    const reportData = _get(report, [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA], []);\n    const capacityData = _get(capacity, [rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA], []);\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Reporting graph entries\n    const customReportValue = (data, key, presetData) => ({\n      ...presetData,\n      hasData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_DATA]\n    });\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y,\n      hasInfinite: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE]\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment.utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE]).startOf('day').toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY = Number.parseInt(graphDataObj[graphDataObjKey], 10);\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value }, customValue: customReportValue });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    graphCardCache.data[`${viewId}_${productId}_${JSON.stringify(graphQuery)}`] = {\n      ...updatedResponseData\n    };\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeGraphCardSelector = defaultProps => (state, props) => ({\n  ...graphCardSelector(state, props, defaultProps)\n});\n\nconst graphCardSelectors = {\n  graphCard: graphCardSelector,\n  makeGraphCard: makeGraphCardSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, graphCardSelector, makeGraphCardSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _get from 'lodash/get';\nimport _isEqual from 'lodash/isEqual';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @param {object} defaultProps\n * @returns {object}\n */\nconst viewGraphQuery = (state = {}, props, defaultProps = {}) => ({\n  graphQuery: {\n    ...defaultProps.graphQuery,\n    ..._get(state, ['view', 'graphQuery', defaultProps.viewId])\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable API param/query object.\n *\n * @type {{graphQuery: object}}\n */\nconst viewSelector = createDeepEqualSelector([viewGraphQuery], viewGraph => ({\n  graphQuery: { ...viewGraph.graphQuery }\n}));\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{graphQuery: object}}\n */\nconst makeViewSelector = defaultProps => (state, props) => ({\n  ...viewSelector(state, props, defaultProps)\n});\n\nconst viewSelectors = {\n  view: viewSelector,\n  makeView: makeViewSelector\n};\n\nexport { viewSelectors as default, viewSelectors, viewSelector, makeViewSelector };\n","import graphCardSelectors from './graphCardSelectors';\nimport viewSelectors from './viewSelectors';\n\nconst reduxSelectors = {\n  graphCard: graphCardSelectors,\n  view: viewSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\nimport { helpers } from '../common/helpers';\n\nconst connectTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  connect(mapStateToProps, mapDispatchToProps)((!helpers.TEST_MODE && withTranslation()(component)) || component);\n\nconst connectRouterTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connectTranslate(mapStateToProps, mapDispatchToProps)(component));\n\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connect(mapStateToProps, mapDispatchToProps)(component));\n\nexport {\n  connect,\n  connectRouter,\n  connectRouterTranslate,\n  connectTranslate,\n  reduxActions,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  store\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * A wrapper for Patternfly Select. Provides additional event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @param expanded\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected =\n          activateOptions.includes(convertedOption.value) || activateOptions.includes(convertedOption.title);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, placeholder, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isExpanded={isExpanded}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(option.title)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{name: string, options: object, selectedOptions: (number|string|Array), variant: (object|string),\n *     className: string, id: string, isDisabled: boolean, placeholder: string, ariaLabel: string,\n *     onSelect: Function}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  placeholder: PropTypes.string,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{name: null, options: Array, selectedOptions: null, variant: SelectVariant.single,\n *     className: string, id: string, isDisabled: boolean, placeholder: string,\n *     ariaLabel: string, onSelect: Function}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  selectedOptions: null,\n  placeholder: 'Select option',\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","import moment from 'moment';\nimport numbro from 'numbro';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers } from '../../common/dateHelpers';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @property {Date} date\n * @property {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @property {Date} date\n * @property {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @property {number|string} tick\n * @property {Date} previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @property {number|string} tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick }) => numbro(tick).format({ average: true, mantissa: 1, optionalMantissa: true });\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Return a set of options for display in a select/dropdown list.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getGranularityOptionsType = optionsType => {\n  if (optionsType === 'default') {\n    return {\n      selected: GRANULARITY_TYPES.DAILY,\n      options: [\n        { title: translate('curiosity-graph.dropdownDaily'), value: GRANULARITY_TYPES.DAILY, selected: true },\n        { title: translate('curiosity-graph.dropdownWeekly'), value: GRANULARITY_TYPES.WEEKLY },\n        { title: translate('curiosity-graph.dropdownMonthly'), value: GRANULARITY_TYPES.MONTHLY },\n        { title: translate('curiosity-graph.dropdownQuarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst graphCardTypes = {\n  getGranularityOptions: getGranularityOptionsType\n};\n\nexport { graphCardTypes as default, graphCardTypes, getGranularityOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A custom chart tooltip.\n *\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, product, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      header = getTooltipDate({\n        date: itemsByKey[key]?.data.date,\n        granularity\n      });\n    }\n\n    const tempDataFacet = {\n      color: itemsByKey[key]?.color\n    };\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key]?.data.hasInfinite && t('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel'));\n\n      tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n      tempDataFacet.value = thresholdStringValue;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n      tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product });\n      tempDataFacet.value = dataFactsValue;\n    }\n\n    data.push(tempDataFacet);\n  });\n\n  return (\n    <div className=\"victory-tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  <div\n                    aria-hidden\n                    className=\"legend-icon victory-legend-icon\"\n                    style={{\n                      backgroundColor: dataFacet.color || 'transparent'\n                    }}\n                  />\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, product: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  product: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {}, product: string, t: Function}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  product: '',\n  t: helpers.noopTranslate\n};\n\nconst TranslatedGraphCardChartTooltip = withTranslation()(GraphCardChartTooltip);\n\nexport { TranslatedGraphCardChartTooltip as default, TranslatedGraphCardChartTooltip, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { connectTranslate, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @property {string} chartId\n   * @property {string} color\n   * @property {boolean} isDisabled\n   * @property {boolean} isThreshold\n   * @property {string} labelContent\n   * @property {string} tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"victory-legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: color\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: color\n              }}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          distance={-10}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, product, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold && t(`curiosity-graph.thresholdLabel`)) ||\n            t(`curiosity-graph.${id}Label`, { product }) ||\n            t(`curiosity-graph.noLabel`, { product });\n\n          const tooltipContent =\n            (isThreshold && t(`curiosity-graph.thresholdLegendTooltip`)) || t(`curiosity-graph.${id}LegendTooltip`);\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold,\n            tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum, product: string, t: Function, legend, chart}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  product: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: { dataSets: [] }, product: string, t: Function, legend: {}, chart: {hide: Function,\n *     toggle: Function, isToggled: Function}}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  product: '',\n  t: helpers.noopTranslate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connectTranslate(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer } from 'victory';\nimport {\n  Chart,\n  ChartAxis,\n  ChartStack,\n  ChartThreshold,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n * @param id\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  dataSetsToggle = {};\n\n  containerRef = React.createRef();\n\n  tooltipRef = React.createRef();\n\n  componentDidMount() {\n    this.onResizeContainer();\n    window.addEventListener('resize', this.onResizeContainer);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * On window resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const containerElement = this.containerRef.current;\n\n    if (containerElement && containerElement.clientWidth) {\n      this.setState({ chartWidth: containerElement.clientWidth });\n    }\n  };\n\n  /**\n   * Consumer exposed, hides chart layer.\n   *\n   * @event onHide\n   * @param {string} id\n   */\n  onHide = id => {\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: true };\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns all chart layers back on.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    this.dataSetsToggle = {};\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns chart layer on/off.\n   *\n   * @event onToggle\n   * @param {string} id\n   * @returns {boolean}\n   */\n  onToggle = id => {\n    const updatedToggle = !this.dataSetsToggle[id];\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: updatedToggle };\n    this.forceUpdate();\n\n    return updatedToggle;\n  };\n\n  /**\n   * Consumer exposed, determine if chart layer on/off.\n   * Note: Using \"setState\" as related to this exposed check gives the appearance of a race condition.\n   * Using a class property with forceUpdate to bypass.\n   *\n   * @param {string} id\n   * @returns {boolean}\n   */\n  getIsToggled = id => this.dataSetsToggle[id] || false;\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { dataSetsToggle } = this;\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply data set to custom tooltips.\n   *\n   * @returns {Array}\n   */\n  getTooltipData() {\n    const { dataSetsToggle } = this;\n    const { dataSets, chartTooltip } = this.props;\n    let tooltipDataSet = [];\n\n    if (chartTooltip && dataSets && dataSets[0] && dataSets[0].data) {\n      tooltipDataSet = dataSets[0].data.map((dataSet, index) => {\n        const itemsByKey = {};\n\n        dataSets.forEach(data => {\n          if (!dataSetsToggle[data.id] && data.data && data.data[index]) {\n            itemsByKey[data.id] = {\n              color: data.stroke || data.fill || data.color || '',\n              data: _cloneDeep(data.data[index])\n            };\n          }\n        });\n\n        const mockDatum = {\n          datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey, dataSets: _cloneDeep(dataSets) }\n        };\n\n        return {\n          x: dataSet.x,\n          y: null,\n          itemsByKey,\n          tooltip:\n            (React.isValidElement(chartTooltip) && React.cloneElement(chartTooltip, { ...mockDatum })) ||\n            chartTooltip({ ...mockDatum })\n        };\n      });\n    }\n\n    return tooltipDataSet;\n  }\n\n  /**\n   * Return a chart/graph tooltip Victory container component to allow custom tooltips.\n   *\n   * @returns {Node}\n   */\n  renderTooltip() {\n    const { dataSetsToggle } = this;\n    const { chartTooltip, dataSets } = this.props;\n\n    if (!chartTooltip || Object.values(dataSetsToggle).filter(v => v === true).length === dataSets.length) {\n      return null;\n    }\n\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const parsedTooltipData = this.getTooltipData();\n    let globalContainerBounds = {};\n    let globalTooltipBounds = {};\n\n    const applyParsedTooltipData = ({ datum }) => {\n      const t = parsedTooltipData.find(v => v.x === datum.x) || {};\n      return t?.tooltip || '';\n    };\n\n    const FlyoutComponent = obj => {\n      const containerRef = this.containerRef.current;\n      const tooltipRef = this.tooltipRef.current;\n      const containerBounds = (containerRef && containerRef.getBoundingClientRect()) || {};\n      const tooltipBounds = (tooltipRef && tooltipRef.getBoundingClientRect()) || {};\n\n      if (containerBounds.right) {\n        globalContainerBounds = containerBounds;\n      }\n\n      if (tooltipBounds.right) {\n        globalTooltipBounds = tooltipBounds;\n      }\n\n      let xCoordinate = obj.x + 10;\n\n      if (\n        globalContainerBounds.right < globalTooltipBounds.right ||\n        obj.x + globalTooltipBounds.width > globalContainerBounds.right / 2\n      ) {\n        xCoordinate = obj.x - 10 - globalTooltipBounds.width;\n      }\n\n      const htmlContent = applyParsedTooltipData({ ...obj });\n\n      if (htmlContent) {\n        return (\n          <g>\n            <foreignObject x={xCoordinate} y={obj.y / 2} width=\"100%\" height=\"100%\">\n              <div ref={this.tooltipRef} style={{ display: 'inline-block' }} xmlns=\"http://www.w3.org/1999/xhtml\">\n                {htmlContent}\n              </div>\n            </foreignObject>\n          </g>\n        );\n      }\n\n      return <g />;\n    };\n\n    return (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        labels={() => ''}\n        labelComponent={<FlyoutComponent />}\n        voronoiDimension=\"x\"\n        voronoiPadding={60}\n      />\n    );\n  }\n\n  /**\n   * Return a custom chart/graph legend component.\n   *\n   * @returns {Node}\n   */\n  renderLegend() {\n    const { chartLegend, dataSets } = this.props;\n\n    if (!chartLegend) {\n      return null;\n    }\n\n    const legendProps = {\n      datum: { dataSets: _cloneDeep(dataSets) },\n      chart: {\n        hide: this.onHide,\n        revert: this.onRevert,\n        toggle: this.onToggle,\n        isToggled: this.getIsToggled\n      }\n    };\n\n    return (\n      (React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n      chartLegend({ ...legendProps })\n    );\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const { dataSetsToggle } = this;\n    const { dataSets } = this.props;\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { chartLegend, padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const tooltipComponent = { containerComponent: (maxY >= 0 && this.renderTooltip()) || undefined };\n    const chartProps = { padding, ...chartDomain, ...tooltipComponent };\n\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n        {chartLegend && <div className=\"curiosity-chartarea-description victory-legend\">{this.renderLegend()}</div>}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartLegend: Node|Function, chartTooltip: Node|Function, padding, xAxisTickFormat: Function,\n *     themeColor: string, yAxisTickFormat: Function, domain: object|Array, dataSets: object,\n *     xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartLegend: null, chartTooltip: null, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: null, themeColor: string, yAxisTickFormat: null, domain: object,\n *     dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHead, CardActions, CardBody } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connectTranslate, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { rhsmApiTypes, RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport { graphCardTypes } from './graphCardTypes';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { ChartArea } from '../chartArea/chartArea';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphQuery, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(graphQuery, prevProps.graphQuery)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, graphQuery, isDisabled, productId } = this.props;\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const query = {\n        [rhsmApiTypes.RHSM_API_QUERY_START_DATE]: startDate.toISOString(),\n        [rhsmApiTypes.RHSM_API_QUERY_END_DATE]: endDate.toISOString(),\n        ...graphQuery\n      };\n\n      getGraphReportsCapacity(productId, query);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM,\n      viewId,\n      [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: value\n    });\n  };\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, graphQuery, selectOptionsType, productShortLabel, viewId } = this.props;\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: updatedGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(updatedGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 2.5;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <ChartArea\n        key={helpers.generateId()}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend chart={chart} datum={datum} product={productShortLabel} viewId={viewId} />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={updatedGranularity} product={productShortLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, graphQuery, isDisabled, selectOptionsType, pending, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    return (\n      <Card className=\"curiosity-usage-graph fadein\">\n        <CardHead>\n          <h2>{cardTitle}</h2>\n          <CardActions>\n            {children}\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onGranularitySelect}\n              options={options}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHead>\n        <CardBody>\n          <div className={`curiosity-skeleton-container ${(error && 'blur') || ''}`}>\n            {pending && (\n              <React.Fragment>\n                <Skeleton size={SkeletonSize.xs} />\n                <Skeleton size={SkeletonSize.sm} />\n                <Skeleton size={SkeletonSize.md} />\n                <Skeleton size={SkeletonSize.lg} />\n              </React.Fragment>\n            )}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, pending: boolean, error: boolean, graphQuery: object, cardTitle: string,\n *     filterGraphData: Array, getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  productShortLabel: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  selectOptionsType: 'default',\n  t: helpers.noopTranslate,\n  productShortLabel: '',\n  viewId: 'graphCard'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\nconst ConnectedGraphCard = connectTranslate(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import moment from 'moment';\nimport numbro from 'numbro';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @property {Date} date\n * @property {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @property {Date} date\n * @property {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @property {number|string} tick\n * @property {Date} previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @property {number|string} tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick }) => numbro(tick).format({ average: true, mantissa: 1, optionalMantissa: true });\n\n/**\n * Convert data into a C3 configuration object.\n *\n * @param {object} options\n * @property {Array} data\n * @property {string} granularity\n * @property {string} productShortLabel\n * @returns {{configuration: {padding: {top: number, left: number, bottom: number, right: number},\n *     data: {types: {}, names: {}, columns: [], x: string, groups: [[]], colors: {}},\n *     legend: {show: boolean}, grid: {y: {show: boolean}}, tooltip: {format: {title: (function(*): string),\n *     value: (function(*, *, *=, *): *)}, order: (function(*, *): number)}, unloadBeforeLoad: boolean,\n *     spline: {interpolation: {type: string}}, axis: {x: {padding: number,\n *     tick: {format: (function(*=): string)}, type: string}, y: {padding: {bottom: number},\n *     default: number[], min: number, tick: {show: boolean, outer: boolean,\n *     format: (function(*): string)}}}, point: {show: boolean}}, hiddenDataFacets: []}}\n */\nconst c3Config = ({ data = [], granularity, productShortLabel }) => {\n  const hiddenDataFacets = [];\n  const converted = {\n    x: 'x',\n    colors: {},\n    columns: [],\n    groups: [[]],\n    names: {},\n    types: {}\n  };\n\n  const convertTimeSeriesDate = value => {\n    const dateStr = (helpers.TEST_MODE && moment.utc(value)) || moment.utc(value).local();\n    return dateStr.format('YYYY-MM-DD');\n  };\n\n  data.forEach(value => {\n    if (/^threshold/.test(value.id)) {\n      converted.colors[value.id] = value.color || chartColorGreenDark.value;\n      converted.types[value.id] = 'step';\n      converted.names[value.id] = translate(`curiosity-graph.thresholdLabel`);\n    } else {\n      converted.colors[value.id] = value.color;\n      converted.types[value.id] = 'area-spline';\n      converted.groups[0].push(value.id);\n      converted.names[value.id] = translate(`curiosity-graph.${value.id}Label`, { product: productShortLabel });\n    }\n\n    converted.columns[0] = ['x'];\n    converted.columns.push([value.id]);\n\n    let totalData = 0;\n\n    value.data.forEach(filteredValue => {\n      converted.columns[0].push(convertTimeSeriesDate(filteredValue.date));\n      converted.columns[converted.columns.length - 1].push(filteredValue.y);\n      totalData += filteredValue.y || 0;\n    });\n\n    // ToDo: need to check for infinite threshold, possibly has data\n    if (totalData <= 0) {\n      converted.columns.pop();\n      hiddenDataFacets.push(value.id);\n    }\n  });\n\n  return {\n    hiddenDataFacets,\n    configuration: {\n      tooltip: {\n        order: (a, b) => converted.columns.indexOf(a.id) - converted.columns.indexOf(b.id),\n        format: {\n          title: date =>\n            getTooltipDate({\n              date,\n              granularity\n            }),\n          value: (value, ratio, id, index) => {\n            const dataItem = data.find(dataValue => id === dataValue.id)?.data[index];\n            let updatedValue;\n\n            if (/^threshold/.test(id)) {\n              updatedValue =\n                (dataItem?.hasInfinite && translate('curiosity-graph.infiniteThresholdLabel')) ||\n                (dataItem?.y ?? translate('curiosity-graph.noDataLabel'));\n            } else {\n              updatedValue =\n                (dataItem?.hasData === false && translate('curiosity-graph.noDataLabel')) || dataItem?.y || 0;\n            }\n\n            return updatedValue;\n          }\n        }\n      },\n      unloadBeforeLoad: true,\n      padding: { left: 40, right: 40, top: 10, bottom: 10 },\n      legend: { show: false },\n      spline: {\n        interpolation: {\n          type: 'monotone'\n        }\n      },\n      data: {\n        ...converted\n      },\n      point: {\n        show: false\n      },\n      grid: {\n        y: {\n          show: true\n        }\n      },\n      axis: {\n        x: {\n          type: 'timeseries',\n          tick: {\n            format: tick => {\n              const xAxisTicks = converted.columns[0].slice(1);\n              const formattedDate = convertTimeSeriesDate(tick);\n              const dateIndex = xAxisTicks.indexOf(formattedDate);\n              const previousDate = dateIndex > -1 && xAxisTicks[dateIndex - 1];\n\n              return xAxisTickFormat({\n                tick: dateIndex,\n                date: formattedDate,\n                previousDate,\n                granularity\n              });\n            }\n          },\n          padding: 0\n        },\n        y: {\n          default: [0, 50],\n          padding: { bottom: 0 },\n          min: 0,\n          tick: {\n            show: false,\n            outer: false,\n            format: tick => (tick === 0 ? '' : yAxisTickFormat({ tick }))\n          }\n        }\n      }\n    }\n  };\n};\n\nconst c3GraphCardHelpers = {\n  c3Config,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  c3GraphCardHelpers as default,\n  c3GraphCardHelpers,\n  c3Config,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\n\n/**\n * A chart/graph legend button.\n *\n * @augments React.Component\n * @fires onFocus\n * @fires onRevert\n * @fires onToggle\n */\nclass C3GraphCardLegendItem extends React.Component {\n  state = { updatedIsToggled: null };\n\n  /**\n   * C3 chart display focus.\n   *\n   * @event onFocus\n   */\n  onFocus = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, chartId, getToggle, isToggled } = this.props;\n\n    if ((typeof getToggle === 'function' && !isToggled) || !updatedIsToggled) {\n      chart.focus(chartId);\n    }\n  };\n\n  /**\n   * C3 chart display revert.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, getToggle, isToggled } = this.props;\n\n    if ((typeof getToggle === 'function' && !isToggled) || !updatedIsToggled) {\n      chart.revert();\n    }\n  };\n\n  /**\n   * C3 chart display toggle.\n   *\n   * @event onToggle\n   */\n  onToggle = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, chartId, getToggle, isToggled } = this.props;\n\n    chart.toggle(chartId);\n\n    if (typeof getToggle === 'function') {\n      getToggle({ isToggled: !isToggled });\n    } else {\n      this.setState({\n        updatedIsToggled: !updatedIsToggled\n      });\n    }\n\n    this.onRevert();\n  };\n\n  /**\n   * C3 chart display config color.\n   *\n   * @returns {string}\n   */\n  getColor = () => {\n    const { chart, chartId } = this.props;\n    return chart.color(chartId);\n  };\n\n  /**\n   * ToDO: evaluate using nullish coalescing operator for checkIsToggled\n   */\n  /**\n   * Render a chart legend item.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedIsToggled } = this.state;\n    const { children, chart, chartId, isDisabled, isThreshold, isToggled, tooltipContent } = this.props;\n    const checkIsToggled =\n      (updatedIsToggled === null && typeof isToggled === 'boolean' && isToggled) || updatedIsToggled || false;\n\n    if (checkIsToggled) {\n      chart.hide(chartId);\n    }\n\n    const button = (\n      <Button\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        onClick={this.onToggle}\n        onFocus={this.onFocus}\n        onMouseOver={this.onFocus}\n        onBlur={this.onRevert}\n        onMouseOut={this.onRevert}\n        onKeyPress={this.onToggle}\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: this.getColor()\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: this.getColor()\n              }}\n            />\n          )\n        }\n      >\n        {children}\n      </Button>\n    );\n\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={tooltipContent}\n          position={TooltipPosition.top}\n          distance={-10}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartId: string, children: Node, isDisabled: boolean, tooltipContent: Node, chart: object,\n *    isThreshold: boolean, isToggled: boolean, getToggle: Function}}\n */\nC3GraphCardLegendItem.propTypes = {\n  chart: PropTypes.shape({\n    color: PropTypes.func,\n    focus: PropTypes.func,\n    hide: PropTypes.func,\n    revert: PropTypes.func,\n    toggle: PropTypes.func\n  }),\n  chartId: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  isThreshold: PropTypes.bool,\n  isToggled: PropTypes.bool,\n  tooltipContent: PropTypes.node,\n  getToggle: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, isDisabled: boolean, tooltipContent: null, chart: {hide: Function,\n *    color: Function, focus: Function, revert: Function, toggle: Function}, isThreshold: boolean,\n *    isToggled: boolean, getToggle: Function}}\n */\nC3GraphCardLegendItem.defaultProps = {\n  chart: {\n    color: helpers.noop,\n    focus: helpers.noop,\n    hide: helpers.noop,\n    revert: helpers.noop,\n    toggle: helpers.noop\n  },\n  children: null,\n  isDisabled: false,\n  isThreshold: false,\n  isToggled: false,\n  tooltipContent: null,\n  getToggle: null\n};\n\nexport { C3GraphCardLegendItem as default, C3GraphCardLegendItem };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport c3 from 'c3';\nimport _isEqual from 'lodash/isEqual';\nimport 'c3/c3.min.css';\nimport { helpers } from '../../common';\n\n/**\n * C3 wrapper.\n * Uses aspects from https://github.com/bcbcarl/react-c3js and https://github.com/wuct/react-c3-component\n *\n * @augments React.Component\n */\nclass C3Chart extends React.Component {\n  state = { chart: null };\n\n  node = React.createRef();\n\n  componentDidMount() {\n    this.generateChart();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { config } = this.props;\n\n    if (!_isEqual(prevProps.config.data, config.data)) {\n      this.generateChart();\n    }\n  }\n\n  componentWillUnmount() {\n    const { chart } = this.state;\n    if (chart) {\n      chart.destroy();\n    }\n    this.setState({ chart: null });\n  }\n\n  generateChart() {\n    const { chart } = this.state;\n    const { config, onComplete } = this.props;\n\n    let updatedChart = chart;\n    if (!updatedChart) {\n      updatedChart = c3.generate({ bindto: this.node.current, ...config });\n    }\n\n    updatedChart.load({\n      ...config.data,\n      unload: config.unloadBeforeLoad || false,\n      done: () => {\n        this.setState({ chart: updatedChart }, () => {\n          if (config.done) {\n            config.done({ chart: updatedChart, config });\n          } else {\n            onComplete({ chart: updatedChart, config });\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const { chart } = this.state;\n    const { className, children, config, style } = this.props;\n\n    return (\n      <div className={`curiosity-c3chart ${className}`} style={style}>\n        <div ref={this.node} className=\"curiosity-c3chart-container\" />\n        {chart && (\n          <div className=\"curiosity-c3chart-description\">\n            {(typeof children === 'function' && children({ chart, config })) || children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{children: Node|Function, onComplete: Function, className: string, style: object, config}}\n */\nC3Chart.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  className: PropTypes.string,\n  config: PropTypes.shape({\n    unloadBeforeLoad: PropTypes.bool,\n    data: PropTypes.object,\n    done: PropTypes.func\n  }),\n  onComplete: PropTypes.func,\n  style: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, onComplete: Function, className: null, style: {}, config: {}}}\n */\nC3Chart.defaultProps = {\n  children: null,\n  className: null,\n  config: {},\n  onComplete: helpers.noop,\n  style: {}\n};\n\nexport { C3Chart as default, C3Chart };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHead, CardActions, CardBody } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connectTranslate, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { rhsmApiTypes, RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { c3GraphCardHelpers } from './c3GraphCardHelpers';\nimport { C3GraphCardLegendItem } from './c3GraphCardLegendItem';\nimport { graphCardTypes } from '../graphCard/graphCardTypes';\nimport { C3Chart } from '../c3Chart/c3Chart';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass C3GraphCard extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphQuery, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(graphQuery, prevProps.graphQuery)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, graphQuery, isDisabled, productId } = this.props;\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const query = {\n        [rhsmApiTypes.RHSM_API_QUERY_START_DATE]: startDate.toISOString(),\n        [rhsmApiTypes.RHSM_API_QUERY_END_DATE]: endDate.toISOString(),\n        ...graphQuery\n      };\n\n      getGraphReportsCapacity(productId, query);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM,\n      viewId,\n      [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: value\n    });\n  };\n\n  /**\n   * Apply a custom legend.\n   *\n   * @param {object} options\n   * @property {Function} chart\n   * @property {Array} filteredData\n   * @property {string} granularity\n   * @property {Array} hiddenDataFacets\n   * @returns {Array}\n   */\n  renderLegend({ chart, filteredData = [], granularity, hiddenDataFacets = [] }) {\n    const { state } = this;\n    const { productId, productShortLabel, t } = this.props;\n\n    return filteredData.map(({ id }) => {\n      const isThreshold = /^threshold/.test(id);\n      const isDataHidden = hiddenDataFacets.includes(id);\n      const tooltipContent = (\n        <p>{(isThreshold && t(`curiosity-graph.thresholdLegendTooltip`)) || t(`curiosity-graph.${id}LegendTooltip`)}</p>\n      );\n\n      const getToggle = ({ isToggled }) => this.setState({ [`${productId}-${granularity}-${id}`]: isToggled });\n      const isToggled = state[`${productId}-${granularity}-${id}`] || false;\n\n      return (\n        <C3GraphCardLegendItem\n          key={`legend-${productId}-${granularity}-${id}`}\n          chart={chart}\n          chartId={id}\n          tooltipContent={tooltipContent}\n          isDisabled={isDataHidden}\n          isThreshold={isThreshold}\n          isToggled={isToggled}\n          getToggle={getToggle}\n        >\n          {(isThreshold && t(`curiosity-graph.thresholdLabel`)) ||\n            t(`curiosity-graph.${id}Label`, { product: productShortLabel })}\n        </C3GraphCardLegendItem>\n      );\n    });\n  }\n\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, graphQuery, selectOptionsType, productId, productShortLabel } = this.props;\n\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    if (!graphData || !Object.values(graphData).length) {\n      return null;\n    }\n\n    const filtered = [];\n\n    if (filterGraphData.length) {\n      filterGraphData.forEach(filteredValue => {\n        if (graphData[filteredValue.id]) {\n          filtered.push({ ...filteredValue, data: [...graphData[filteredValue.id]] });\n        }\n      });\n    } else {\n      Object.keys(graphData).forEach(id => {\n        filtered.push({ id, data: [...graphData[id]] });\n      });\n    }\n\n    const { configuration = {}, hiddenDataFacets = [] } = c3GraphCardHelpers.c3Config({\n      data: filtered,\n      granularity: updatedGranularity,\n      productShortLabel\n    });\n\n    return (\n      <C3Chart key={`chart-${productId}-${updatedGranularity}`} config={configuration}>\n        {({ chart }) =>\n          this.renderLegend({\n            chart,\n            filteredData: filtered,\n            granularity: updatedGranularity,\n            hiddenDataFacets\n          })\n        }\n      </C3Chart>\n    );\n  }\n\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, graphQuery, isDisabled, selectOptionsType, pending, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    return (\n      <Card className=\"curiosity-usage-graph fadein\">\n        <CardHead>\n          <h2>{cardTitle}</h2>\n          <CardActions>\n            {children}\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onGranularitySelect}\n              options={options}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHead>\n        <CardBody>\n          <div className={`curiosity-skeleton-container ${(error && 'blur') || ''}`}>\n            {pending && (\n              <React.Fragment>\n                <Skeleton size={SkeletonSize.xs} />\n                <Skeleton size={SkeletonSize.sm} />\n                <Skeleton size={SkeletonSize.md} />\n                <Skeleton size={SkeletonSize.lg} />\n              </React.Fragment>\n            )}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, pending: boolean, error: boolean, graphQuery: object, cardTitle: string,\n *     filterGraphData: Array, getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nC3GraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      color: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  productShortLabel: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nC3GraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  selectOptionsType: 'default',\n  t: helpers.noopTranslate,\n  productShortLabel: '',\n  viewId: 'graphCard'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\nconst ConnectedGraphCard = connectTranslate(makeMapStateToProps, mapDispatchToProps)(C3GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, C3GraphCard };\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_SLA_TYPES as SLA_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = (optionsType = 'sla') => {\n  if (optionsType === 'sla') {\n    return {\n      selected: null,\n      options: [\n        {\n          title: translate('curiosity-toolbar.slaPremium'),\n          value: SLA_TYPES.PREMIUM\n        },\n        {\n          title: translate('curiosity-toolbar.slaStandard'),\n          value: SLA_TYPES.STANDARD\n        },\n        {\n          title: translate('curiosity-toolbar.slaSelfSupport'),\n          value: SLA_TYPES.SELF\n        },\n        {\n          title: translate('curiosity-toolbar.slaNone'),\n          value: SLA_TYPES.NONE\n        }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst toolbarTypes = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarTypes as default, toolbarTypes, getOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { DataToolbar, DataToolbarContent, DataToolbarFilter, DataToolbarGroup } from '@patternfly/react-core';\nimport { Select } from '../form/select';\nimport { reduxTypes, store } from '../../redux';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { helpers } from '../../common';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onSlaSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    this.dispatchFilter(reduxTypes.rhsm.SET_GRAPH_SLA_RHSM, { [rhsmApiTypes.RHSM_API_QUERY_SLA]: null });\n  };\n\n  /**\n   * Set SLA filter selection.\n   *\n   * @event onSlaSelect\n   * @param {object} event\n   */\n  onSlaSelect = event => {\n    const { value } = event;\n\n    this.dispatchFilter(reduxTypes.rhsm.SET_GRAPH_SLA_RHSM, { [rhsmApiTypes.RHSM_API_QUERY_SLA]: value });\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {string} type\n   * @param {object} data\n   */\n  dispatchFilter(type, data = {}) {\n    const { viewId } = this.props;\n\n    if (type) {\n      store.dispatch({\n        type,\n        viewId,\n        ...data\n      });\n    }\n  }\n\n  // ToDo: API to provide SLA options from endpoint.\n  /**\n   * Available and selected SLA options.\n   *\n   * @returns {{slaOptionsSelected: Array, slaOptions: object}}\n   */\n  filterSla() {\n    const { graphQuery } = this.props;\n\n    const slaOptions = toolbarTypes.getOptions();\n    const filterSla =\n      typeof graphQuery[rhsmApiTypes.RHSM_API_QUERY_SLA] === 'string' &&\n      slaOptions.options.find(val => val.value === graphQuery[rhsmApiTypes.RHSM_API_QUERY_SLA]);\n\n    const slaOptionsSelected =\n      (filterSla && filterSla.title && [filterSla.title]) || (slaOptions.selected && [slaOptions.selected]) || [];\n\n    return { slaOptions, slaOptionsSelected };\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { slaOptions, slaOptionsSelected } = this.filterSla();\n\n    return (\n      <DataToolbar\n        id=\"curiosity-toolbar\"\n        className=\"pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"xl\"\n        clearAllFilters={this.onClear}\n      >\n        <DataToolbarContent>\n          <DataToolbarGroup variant=\"filter-group\">\n            <DataToolbarFilter\n              chips={slaOptionsSelected}\n              deleteChip={this.onClear}\n              categoryName={t('curiosity-toolbar.slaCategory')}\n            >\n              <Select\n                aria-label={t('curiosity-toolbar.slaCategory')}\n                onSelect={this.onSlaSelect}\n                selectedOptions={slaOptionsSelected}\n                placeholder={t('curiosity-toolbar.slaPlaceholder')}\n                options={slaOptions.options}\n              />\n            </DataToolbarFilter>\n          </DataToolbarGroup>\n        </DataToolbarContent>\n      </DataToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, isDisabled: boolean, graphQuery: object}}\n */\nToolbar.propTypes = {\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_SLA]: PropTypes.string\n  }),\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: Function, isDisabled: boolean, graphQuery: {}}}\n */\nToolbar.defaultProps = {\n  graphQuery: {},\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: helpers.noopTranslate,\n  viewId: 'toolbar'\n};\n\nconst TranslatedToolbar = withTranslation()(Toolbar);\n\nexport { TranslatedToolbar as default, TranslatedToolbar, Toolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { PageLayout, PageHeader, PageSection, PageToolbar } from '../pageLayout/pageLayout';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { connectTranslate, reduxSelectors } from '../../redux';\nimport GraphCard from '../graphCard/graphCard';\nimport C3GraphCard from '../c3GraphCard/c3GraphCard';\nimport { Select } from '../form/select';\nimport Toolbar from '../toolbar/toolbar';\nimport { helpers } from '../../common';\n\n/**\n * An OpenShift encompassing view.\n *\n * @augments React.Component\n * @fires onSelect\n */\nclass OpenshiftView extends React.Component {\n  state = {\n    option: null,\n    filters: []\n  };\n\n  componentDidMount() {\n    const { initialOption } = this.props;\n    this.onSelect({ value: initialOption });\n  }\n\n  /**\n   * Apply a selected filtered value.\n   *\n   * @event onSelect\n   * @param {object} event\n   */\n  onSelect = (event = {}) => {\n    const { option } = this.state;\n    const { initialFilters } = this.props;\n    const { value } = event;\n\n    if (value !== option) {\n      const filters = initialFilters.filter(val => new RegExp(value, 'i').test(val.id));\n      this.setState({\n        option,\n        filters\n      });\n    }\n  };\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  renderSelect() {\n    const { option } = this.state;\n    const { initialOption } = this.props;\n    const options = [\n      { title: 'Cores', value: 'cores' },\n      { title: 'Sockets', value: 'sockets' }\n    ];\n\n    return <Select onSelect={this.onSelect} options={options} selectedOptions={option || initialOption} />;\n  }\n\n  /**\n   * Render an OpenShift view.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { filters } = this.state;\n    const { graphQuery, location, routeDetail, t, viewId } = this.props;\n    const isC3 = location?.parsedSearch?.c3 === '';\n\n    return (\n      <PageLayout>\n        <PageHeader>{t('curiosity-view.openshift', helpers.UI_DISPLAY_CONFIG_NAME)}</PageHeader>\n        <PageToolbar>\n          <Toolbar graphQuery={graphQuery} viewId={viewId} />\n        </PageToolbar>\n        <PageSection>\n          {(isC3 && (\n            <C3GraphCard\n              key={routeDetail.pathParameter}\n              filterGraphData={filters}\n              graphQuery={graphQuery}\n              productId={routeDetail.pathParameter}\n              viewId={viewId}\n              cardTitle={t('curiosity-graph.cardHeading')}\n              productShortLabel={viewId}\n            >\n              {this.renderSelect()}\n            </C3GraphCard>\n          )) || (\n            <GraphCard\n              key={routeDetail.pathParameter}\n              filterGraphData={filters}\n              graphQuery={graphQuery}\n              productId={routeDetail.pathParameter}\n              viewId={viewId}\n              cardTitle={t('curiosity-graph.cardHeading')}\n              productShortLabel={viewId}\n            >\n              {this.renderSelect()}\n            </GraphCard>\n          )}\n        </PageSection>\n      </PageLayout>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{initialFilters: Array, initialOption: string, viewId: string, t: Function, routeDetail: object,\n *     location: object, graphQuery: object}}\n */\nOpenshiftView.propTypes = {\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)])\n  }),\n  initialOption: PropTypes.oneOf(['cores', 'sockets']),\n  initialFilters: PropTypes.array,\n  location: PropTypes.shape({\n    parsedSearch: PropTypes.objectOf(PropTypes.string)\n  }).isRequired,\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    pathId: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    })\n  }).isRequired,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{initialFilters: Array, initialOption: string, viewId: string, t: Function, graphQuery: object}}\n */\nOpenshiftView.defaultProps = {\n  graphQuery: {\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  initialOption: 'cores',\n  initialFilters: [\n    { id: 'cores', fill: chartColorBlueLight.value, stroke: chartColorBlueDark.value, color: chartColorBlueDark.value },\n    {\n      id: 'sockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    { id: 'thresholdSockets' },\n    { id: 'thresholdCores' }\n  ],\n  t: helpers.noopTranslate,\n  viewId: 'OpenShift'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.view.makeView(OpenshiftView.defaultProps);\n\nconst ConnectedOpenshiftView = connectTranslate(makeMapStateToProps)(OpenshiftView);\n\nexport { ConnectedOpenshiftView as default, ConnectedOpenshiftView, OpenshiftView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Brand,\n  Button,\n  Card,\n  CardHead,\n  CardHeadMain,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Flex,\n  FlexItem,\n  FlexBreakpoints,\n  FlexModifiers,\n  Form,\n  ActionGroup,\n  Spinner,\n  Title\n} from '@patternfly/react-core';\nimport { connectTranslate, reduxActions } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { PageLayout } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport graphPng2x from '../../images/graph2x.png';\nimport graphPng4x from '../../images/graph4x.png';\n\n/**\n * An account opt-in view.\n *\n * @augments React.Component\n * @fires onSubmitOptIn\n */\nclass OptinView extends React.Component {\n  /**\n   * Submit and update account opt-in.\n   *\n   * @event onSubmitOptIn\n   */\n  onSubmitOptIn = () => {\n    const { updateAccountOptIn } = this.props;\n    updateAccountOptIn();\n  };\n\n  /**\n   * Render opt-in form states.\n   *\n   * @returns {Node}\n   */\n  renderOptinForm() {\n    const { error, fulfilled, pending, session, t } = this.props;\n    const disableButton = session.status !== 403;\n\n    if (pending) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              <Spinner size=\"sm\" /> {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n        </Form>\n      );\n    }\n\n    if (error) {\n      return (\n        <p>\n          {translate('curiosity-optin.cardIsErrorDescription', { appName: helpers.UI_DISPLAY_NAME }, [\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              target=\"_blank\"\n              href=\"https://access.redhat.com/account-team\"\n            />\n          ])}\n        </p>\n      );\n    }\n\n    if (disableButton || fulfilled) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              {t('curiosity-optin.buttonIsActive', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n          {fulfilled && <p>{t('curiosity-optin.cardIsActiveDescription')}</p>}\n        </Form>\n      );\n    }\n\n    return (\n      <Form>\n        <ActionGroup>\n          <Button variant=\"primary\" onClick={this.onSubmitOptIn}>\n            {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n          </Button>\n        </ActionGroup>\n      </Form>\n    );\n  }\n\n  /**\n   * Render tour copy and button.\n   *\n   * @returns {Node}\n   */\n  renderTour() {\n    const { t } = this.props;\n\n    return (\n      <Card className=\"curiosity-optin-tour\">\n        <CardHead>\n          <CardHeadMain>\n            <Brand\n              srcSet={`${graphPng4x} 1064w, ${graphPng2x} 600w`}\n              src={graphPng4x}\n              alt={t('curiosity-optin.tourTitleImageAlt')}\n              aria-hidden\n              className=\"curiosity-optin-image\"\n            />\n          </CardHeadMain>\n        </CardHead>\n        <CardHeader>\n          <Title headingLevel=\"h3\" size=\"2xl\">\n            {t('curiosity-optin.tourTitle')}\n          </Title>\n        </CardHeader>\n        <CardBody>{t('curiosity-optin.tourDescription')}</CardBody>\n        <CardFooter>\n          <Button variant=\"secondary\" className=\"uxui-curiosity__button-tour\">\n            {t('curiosity-optin.buttonTour')}\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n\n  /**\n   * Render opt-in.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { t } = this.props;\n\n    return (\n      <PageLayout>\n        <Card>\n          <Flex\n            breakpointMods={[\n              { modifier: FlexModifiers.column },\n              { modifier: FlexModifiers.row, breakpoint: FlexBreakpoints.md }\n            ]}\n          >\n            <Flex breakpointMods={[{ modifier: FlexModifiers['flex-2'] }]}>\n              <FlexItem>\n                <CardHeader key=\"heading1Title\">\n                  <Title size=\"2xl\">{t('curiosity-optin.cardTitle', { appName: helpers.UI_DISPLAY_NAME })}</Title>\n                </CardHeader>\n                <CardBody key=\"heading1Desc\">\n                  {t('curiosity-optin.cardDescription', { appName: helpers.UI_DISPLAY_NAME })}\n                </CardBody>\n\n                <CardHeader key=\"heading2Title\">\n                  <Title headingLevel=\"h2\" size=\"xl\">\n                    {t('curiosity-optin.cardSeeTitle')}\n                  </Title>\n                </CardHeader>\n                <CardBody key=\"heading2Desc\">{t('curiosity-optin.cardSeeDescription')}</CardBody>\n\n                <CardHeader key=\"heading3Title\">\n                  <Title headingLevel=\"h2\" size=\"xl\">\n                    {t('curiosity-optin.cardReportTitle')}\n                  </Title>\n                </CardHeader>\n                <CardBody key=\"heading3Desc\">{t('curiosity-optin.cardReportDescription')}</CardBody>\n\n                <CardHeader key=\"heading4Title\">\n                  <Title headingLevel=\"h2\" size=\"xl\">\n                    {t('curiosity-optin.cardFilterTitle')}\n                  </Title>\n                </CardHeader>\n                <CardBody key=\"heading4Desc\">{t('curiosity-optin.cardFilterDescription')}</CardBody>\n\n                <CardFooter>{this.renderOptinForm()}</CardFooter>\n              </FlexItem>\n            </Flex>\n            <Flex\n              breakpointMods={[{ modifier: FlexModifiers['flex-1'] }, { modifier: FlexModifiers['align-self-center'] }]}\n            >\n              <FlexItem>\n                <CardBody>{this.renderTour()}</CardBody>\n              </FlexItem>\n            </Flex>\n          </Flex>\n        </Card>\n      </PageLayout>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{t: Function, session: object, updateAccountOptIn: Function, pending: boolean, fulfilled: boolean,\n *     error: boolean}}\n */\nOptinView.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  pending: PropTypes.bool,\n  session: PropTypes.shape({\n    status: PropTypes.number\n  }),\n  t: PropTypes.func,\n  updateAccountOptIn: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: Function, session: {status: null}, updateAccountOptIn: Function, pending: boolean,\n *     fulfilled: boolean, error: boolean}}\n */\nOptinView.defaultProps = {\n  error: false,\n  fulfilled: false,\n  pending: false,\n  session: {\n    status: null\n  },\n  t: helpers.noopTranslate,\n  updateAccountOptIn: helpers.noop\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  updateAccountOptIn: query => dispatch(reduxActions.user.updateAccountOptIn(query))\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = ({ user }) => ({ ...user.optin, session: user.session });\n\nconst ConnectedOptinView = connectTranslate(mapStateToProps, mapDispatchToProps)(OptinView);\n\nexport { ConnectedOptinView as default, ConnectedOptinView, OptinView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { PageLayout, PageHeader, PageSection, PageToolbar } from '../pageLayout/pageLayout';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { connectTranslate, reduxSelectors } from '../../redux';\nimport GraphCard from '../graphCard/graphCard';\nimport C3GraphCard from '../c3GraphCard/c3GraphCard';\nimport Toolbar from '../toolbar/toolbar';\nimport { helpers } from '../../common';\n\n/**\n * A Red Hat Enterprise Linux encompassing view, and system architectures.\n *\n * @augments React.Component\n */\nclass RhelView extends React.Component {\n  componentDidMount() {}\n\n  /**\n   * Render a RHEL view.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { graphQuery, initialFilters, location, routeDetail, t, viewId } = this.props;\n    const isC3 = location?.parsedSearch?.c3 === '';\n\n    return (\n      <PageLayout>\n        <PageHeader>{t('curiosity-view.rhel', helpers.UI_DISPLAY_CONFIG_NAME)}</PageHeader>\n        <PageToolbar>\n          <Toolbar graphQuery={graphQuery} viewId={viewId} />\n        </PageToolbar>\n        <PageSection>\n          {(isC3 && (\n            <C3GraphCard\n              key={routeDetail.pathParameter}\n              filterGraphData={initialFilters}\n              graphQuery={graphQuery}\n              productId={routeDetail.pathParameter}\n              viewId={viewId}\n              cardTitle={t('curiosity-graph.socketsHeading')}\n              productShortLabel={viewId}\n            />\n          )) || (\n            <GraphCard\n              key={routeDetail.pathParameter}\n              filterGraphData={initialFilters}\n              graphQuery={graphQuery}\n              productId={routeDetail.pathParameter}\n              viewId={viewId}\n              cardTitle={t('curiosity-graph.socketsHeading')}\n              productShortLabel={viewId}\n            />\n          )}\n        </PageSection>\n      </PageLayout>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{initialFilters: Array, viewId: string, t: Function, routeDetail: object, location: object,\n *     graphQuery: object}}\n */\nRhelView.propTypes = {\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)])\n  }),\n  initialFilters: PropTypes.array,\n  location: PropTypes.shape({\n    parsedSearch: PropTypes.objectOf(PropTypes.string)\n  }).isRequired,\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    pathId: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    })\n  }).isRequired,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{initialFilters: Array, viewId: string, t: Function, graphQuery: object}}\n */\nRhelView.defaultProps = {\n  graphQuery: {\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  initialFilters: [\n    {\n      id: 'physicalSockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'hypervisorSockets',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value\n    },\n    {\n      id: 'cloudSockets',\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value\n    },\n    { id: 'thresholdSockets' }\n  ],\n  t: helpers.noopTranslate,\n  viewId: 'RHEL'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.view.makeView(RhelView.defaultProps);\n\nconst ConnectedRhelView = connectTranslate(makeMapStateToProps)(RhelView);\n\nexport { ConnectedRhelView as default, ConnectedRhelView, RhelView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Title\n} from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport { connectTranslate } from '../../redux';\nimport subscriptionsSvg from '../../images/subscriptions.svg';\n\n/**\n * FixMe: Patternfly EmptyStateIcon can't pass a basic image\n * Requires the use of function based component syntax\n */\n/**\n * FixMe: Patternfly EmptyStateBody and Title appear to throw an error on translate string replacement\n * Wrap with a fragment to pass.\n */\n/**\n * Render a user guided tour view.\n *\n * @returns {Node} Node containing tour view.\n */\nconst TourView = ({ session, t }) => (\n  <PageLayout>\n    <PageHeader>{helpers.UI_DISPLAY_CONFIG_NAME}</PageHeader>\n    <PageSection>\n      <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n        <img\n          src={subscriptionsSvg}\n          className=\"curiosity-emptystate-img-icon\"\n          alt={t('curiosity-tour.emptyStateIconAlt', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          aria-hidden\n        />\n        <Title headingLevel=\"h5\" size=\"lg\">\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateTitle', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </Title>\n        <EmptyStateBody>\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateDescription', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n            {session.status !== 418 &&\n              ` ${t('curiosity-tour.emptyStateDescriptionTour', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}`}\n          </React.Fragment>\n        </EmptyStateBody>\n        <EmptyStateBody>\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateDescriptionExtended', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </EmptyStateBody>\n        {(session.status === 418 && (\n          <Button\n            className=\"uxui-curiosity__button-learn\"\n            variant=\"primary\"\n            component=\"a\"\n            target=\"_blank\"\n            href=\"https://access.redhat.com/products/subscription-central\"\n          >\n            {t('curiosity-tour.emptyStateLinkLearnMore')}\n          </Button>\n        )) || (\n          <Button className=\"uxui-curiosity__button-tour\" variant=\"primary\">\n            {t('curiosity-tour.emptyStateButton')}\n          </Button>\n        )}\n        <EmptyStateSecondaryActions>\n          {session.status !== 418 && (\n            <Button\n              component=\"a\"\n              variant=\"link\"\n              target=\"_blank\"\n              href=\"https://access.redhat.com/products/subscription-central\"\n            >\n              {t('curiosity-tour.emptyStateLinkLearnMore')}\n            </Button>\n          )}\n          <Button component=\"a\" variant=\"link\" target=\"_blank\" href=\"https://access.redhat.com/account-team\">\n            {t('curiosity-tour.emptyStateLinkContactUs')}\n          </Button>\n        </EmptyStateSecondaryActions>\n      </EmptyState>\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{t: Function, session: object}}\n */\nTourView.propTypes = {\n  session: PropTypes.shape({\n    status: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: Function, session: {status: null}}}\n */\nTourView.defaultProps = {\n  session: {\n    status: null\n  },\n  t: helpers.noopTranslate\n};\n\nconst mapStateToProps = state => ({ session: state.user.session });\n\nconst ConnectedTourView = connectTranslate(mapStateToProps)(TourView);\n\nexport { ConnectedTourView as default, ConnectedTourView, TourView };\n","import path from 'path';\nimport { helpers } from '../../common/helpers';\nimport OpenshiftView from '../openshiftView/openshiftView';\nimport OptinView from '../optinView/optinView';\nimport RhelView from '../rhelView/rhelView';\nimport TourView from '../tourView/tourView';\nimport { RHSM_API_PATH_ID_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformLandingRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/');\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformModalRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = [\n  {\n    to: '/rhel-sw/all',\n    redirect: true,\n    component: RhelView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'rhel-sw',\n    to: '/rhel-sw/:variant',\n    component: RhelView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'openshift-sw',\n    to: '/openshift-sw',\n    component: OpenshiftView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'soon',\n    to: '/soon',\n    component: TourView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'optin',\n    to: '/optin',\n    component: OptinView,\n    exact: true,\n    render: true,\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED\n  }\n];\n\n/**\n * Return an array of objects that describes navigation against API product IDs.\n *\n * @returns {Array}\n */\nconst navigation = [\n  {\n    id: 'all',\n    path: '/rhel-sw/all',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL,\n    default: true\n  },\n  {\n    id: 'arm',\n    path: '/rhel-sw/arm',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_ARM\n  },\n  {\n    id: 'ibmpower',\n    path: '/rhel-sw/ibmpower',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER\n  },\n  {\n    id: 'ibmz',\n    path: '/rhel-sw/ibmz',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z\n  },\n  {\n    id: 'x86',\n    path: '/rhel-sw/x86',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_X86\n  },\n  {\n    id: 'openshift-sw',\n    path: '/openshift-sw',\n    pathId: 'openshift-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.OPENSHIFT\n  }\n];\n\nconst routerTypes = {\n  appName,\n  navigation,\n  platformLandingRedirect,\n  platformModalRedirect,\n  routes\n};\n\nexport {\n  routerTypes as default,\n  routerTypes,\n  appName,\n  navigation,\n  platformLandingRedirect,\n  platformModalRedirect,\n  routes\n};\n","import { helpers } from '../../common/helpers';\nimport { routes, navigation } from './routerTypes';\n\n/**\n * Return an assumed dynamic route baseName directory\n * based on a predictable platform directory depth of\n * /[OPTIONAL]/[environment]/[APP NAME]\n *\n * @param {object} params\n * @property {string} pathName\n * @property {string} pathPrefix\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName, pathPrefix }) => {\n  const path = pathName.split('/');\n  path.shift();\n  const pathSlice = pathPrefix && new RegExp(path[0]).test(pathPrefix) ? 2 : 1;\n\n  return `/${path.slice(0, pathSlice).join('/')}`;\n};\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName =\n  (helpers.TEST_MODE && '/') ||\n  (helpers.DEV_MODE && '/') ||\n  dynamicBaseName({ pathName: window.location.pathname, pathPrefix: helpers.UI_DEPLOY_PATH_PREFIX });\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Return an object matching a specific navigation object.\n *\n * @param {object} params\n * @property {string} id\n * @property {string} pathname\n * @property {boolean} returnDefault\n * @returns {object}\n */\nconst getNavigationDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const defaultItem = returnDefault && navigation.find(item => item.default === true);\n  let navigationItem;\n\n  if (id) {\n    navigationItem = navigation.find(item => item.id === id);\n  }\n\n  if (!navigationItem && pathname) {\n    navigationItem =\n      navigation.find(item => item.path.replace(/\\/$/, '') === pathname.replace(/\\/$/, '')) ||\n      (returnDefault && defaultItem);\n  }\n\n  if (!navigationItem && returnDefault) {\n    navigationItem = defaultItem;\n  }\n\n  if (navigationItem) {\n    const [, routeHref] = window.location.href.split(navigationItem.path);\n    navigationItem.routeHref = `${navigationItem.path}${routeHref || ''}`;\n  }\n\n  return { ...(navigationItem || {}) };\n};\n\n/**\n * Return an object matching a specific, or the first generic route.\n *\n * @param {object} params\n * @property {string} id\n * @property {string} pathname\n * @returns {object}\n */\nconst getRouteDetail = ({ id = null, pathname = null }) => {\n  let routeItem;\n\n  if (id) {\n    routeItem = routes.find(value => id === value.id);\n  }\n\n  if (!routeItem && pathname) {\n    routeItem = routes.find(value => pathname === value.to);\n    routeItem = routeItem || routes.find(item => pathname.includes(item.to.split(':')[0]));\n  }\n\n  return { ...(routeItem || {}) };\n};\n\n/**\n * Return an object generated from both generic routes and specific navigation objects.\n * ID is not passed to \"getRouteDetail\" to avoid conflicts between routing and\n * navigation.\n *\n * @param {object} params\n * @property {string} id\n * @property {string} pathname\n * @property {boolean} returnDefault\n * @returns {object}\n */\nconst getNavRouteDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const navDetail = getNavigationDetail({ id, pathname, returnDefault });\n  const routeDetail = getRouteDetail({ pathname: navDetail.path || pathname });\n\n  return { ...routeDetail, ...navDetail };\n};\n\nconst routerHelpers = {\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n","import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Route } from 'react-router-dom';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A routing redirect.\n *\n * @returns {Node}\n */\nconst Redirect = ({ baseName, history, isRedirect, isReplace, url, route }) => {\n  const forceNavigation = urlRoute => {\n    if (!helpers.DEV_MODE && !helpers.TEST_MODE) {\n      if (isReplace) {\n        window.location.replace(urlRoute);\n      } else {\n        window.location.href = urlRoute;\n      }\n    }\n  };\n\n  if (isRedirect === true) {\n    if (route && history) {\n      const routeDetail = routerHelpers.getRouteDetail({ pathname: route });\n      return <Route path=\"*\">{routeDetail && <routeDetail.component />}</Route>;\n    }\n\n    const forcePath = url || (route && path.join(baseName, route));\n    forceNavigation(forcePath);\n\n    return (\n      ((helpers.DEV_MODE || helpers.TEST_MODE) && <React.Fragment>Redirected towards {forcePath}</React.Fragment>) ||\n      null\n    );\n  }\n\n  return null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, isReplace: boolean, history: object, baseName: string, url: string}}\n */\nRedirect.propTypes = {\n  history: PropTypes.object,\n  isRedirect: PropTypes.bool.isRequired,\n  isReplace: PropTypes.bool,\n  url: PropTypes.string,\n  baseName: PropTypes.string,\n  route: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{route: null, isReplace: boolean, history: null, baseName: string, url: null}}\n */\nRedirect.defaultProps = {\n  history: null,\n  isReplace: false,\n  url: null,\n  baseName: routerHelpers.baseName,\n  route: null\n};\n\nconst RoutedRedirect = withRouter(Redirect);\n\nexport { RoutedRedirect as default, RoutedRedirect, Redirect };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport Redirect from './redirect';\nimport { routerHelpers } from './routerHelpers';\nimport { routerTypes } from './routerTypes';\n\n/**\n * Load routes.\n *\n * @augments React.Component\n */\nclass Router extends React.Component {\n  /**\n   * Parse settings array with route options.\n   *\n   * @returns {{redirectRoot: Node, renderRoutes: Array}}\n   */\n  renderRoutes() {\n    const { routes } = this.props;\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    let redirectRoot = null;\n\n    return {\n      renderRoutes: routes.map(item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        if (item.redirect === true) {\n          redirectRoot = <ReactRouterDomRedirect to={item.to} />;\n        }\n\n        if (item.render === true) {\n          return (\n            <Route\n              exact={item.hasParameters || item.exact}\n              key={item.to}\n              path={item.to}\n              strict={item.strict}\n              render={({ location, ...routeProps }) => {\n                const navDetail = routerHelpers.getNavigationDetail({\n                  pathname: location && location.pathname,\n                  returnDefault: false\n                });\n\n                const { URLSearchParams, decodeURIComponent } = window;\n                const parsedSearch = {};\n\n                [\n                  ...new Set(\n                    [...new URLSearchParams(decodeURIComponent(location.search))].map(\n                      ([param, value]) => `${param}~${value}`\n                    )\n                  )\n                ].forEach(v => {\n                  const [param, value] = v.split('~');\n                  parsedSearch[param] = value;\n                });\n\n                const updatedLocation = {\n                  ...location,\n                  parsedSearch\n                };\n\n                return (\n                  <item.component\n                    routeDetail={{\n                      baseName: routerHelpers.baseName,\n                      errorRoute: activateOnErrorRoute,\n                      routes,\n                      routeItem: { ...item },\n                      ...navDetail\n                    }}\n                    location={updatedLocation}\n                    {...routeProps}\n                  />\n                );\n              }}\n            />\n          );\n        }\n\n        return (\n          <Route exact={item.hasParameters || item.exact} key={item.to} path={item.to} component={item.component} />\n        );\n      }),\n      redirectRoot\n    };\n  }\n\n  /**\n   * Render router.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { renderRoutes, redirectRoot } = this.renderRoutes();\n\n    return (\n      <Switch>\n        {renderRoutes}\n        {redirectRoot}\n      </Switch>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.boolean,\n      component: PropTypes.any.isRequired,\n      disabled: PropTypes.boolean,\n      exact: PropTypes.boolean,\n      hasParameters: PropTypes.boolean,\n      redirect: PropTypes.boolean,\n      render: PropTypes.boolean,\n      strict: PropTypes.boolean,\n      to: PropTypes.string.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerTypes.routes\n};\n\nexport { Router as default, Router, Redirect, routerHelpers, routerTypes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState as PfEmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title\n} from '@patternfly/react-core';\nimport { PageLayout, PageHeader } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @returns {Node}\n */\nconst MessageView = ({ icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PfEmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n      {title && (\n        <Title headingLevel=\"h2\" size=\"lg\">\n          {title}\n        </Title>\n      )}\n      {icon && <EmptyStateIcon icon={icon} />}\n      {message && <EmptyStateBody>{message}</EmptyStateBody>}\n    </PfEmptyState>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, message: string, title: string}}\n */\nMessageView.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, message: null, title: null}}\n */\nMessageView.defaultProps = {\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon, LockIcon } from '@patternfly/react-icons';\nimport { connectRouterTranslate, reduxActions } from '../../redux';\nimport { rhsmApiTypes } from '../../types';\nimport { helpers } from '../../common';\nimport { Redirect, routerHelpers, routerTypes } from '../router/router';\nimport MessageView from '../messageView/messageView';\n\n/**\n * An authentication pass-through component.\n *\n * @augments React.Component\n */\nclass Authentication extends Component {\n  appName = routerTypes.appName;\n\n  removeListeners = helpers.noop;\n\n  async componentDidMount() {\n    const { authorizeUser, history, initializeChrome, onNavigation, setAppName, session } = this.props;\n\n    if (!session.authorized) {\n      await authorizeUser();\n    }\n\n    if (helpers.PROD_MODE || helpers.REVIEW_MODE) {\n      initializeChrome();\n      setAppName(this.appName);\n\n      const appNav = onNavigation(event => {\n        const { routeHref } = routerHelpers.getNavRouteDetail({ id: event.navId, returnDefault: true });\n        history.push(routeHref);\n      });\n\n      this.removeListeners = () => {\n        appNav();\n      };\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  /**\n   * Render authenticated children or messaging.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children, session, t } = this.props;\n\n    if (session.authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (session.errorCodes && session.errorCodes.includes(rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES.OPTIN)) ||\n      session.status === 418\n    ) {\n      if (helpers.TEST_MODE) {\n        return <React.Fragment>{session.status} redirect</React.Fragment>;\n      }\n      return <Redirect isRedirect route={routerHelpers.getErrorRoute.to} />;\n    }\n\n    return (\n      <MessageView\n        title={t('curiosity-auth.authorizedTitle', { appName: helpers.UI_DISPLAY_NAME })}\n        message={t('curiosity-auth.authorizedCopy', '...')}\n        icon={LockIcon}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, navigation: Array,\n *     t: Function, children: Node, initializeChrome: Function, session: object, history: object,\n *     setNavigation: Function}}\n */\nAuthentication.propTypes = {\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  initializeChrome: PropTypes.func,\n  onNavigation: PropTypes.func,\n  setAppName: PropTypes.func,\n  session: PropTypes.shape({\n    authorized: PropTypes.bool,\n    error: PropTypes.bool,\n    errorCodes: PropTypes.arrayOf(PropTypes.string),\n    errorMessage: PropTypes.string,\n    pending: PropTypes.bool,\n    status: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, navigation: Array,\n *     t: Function, initializeChrome: Function, session: {authorized: boolean, pending: boolean,\n *     errorMessage: string, error: boolean, status: null}, setNavigation: Function}}\n */\nAuthentication.defaultProps = {\n  authorizeUser: helpers.noop,\n  initializeChrome: helpers.noop,\n  onNavigation: helpers.noop,\n  setAppName: helpers.noop,\n  session: {\n    authorized: false,\n    error: false,\n    errorCodes: [],\n    errorMessage: '',\n    pending: false,\n    status: null\n  },\n  t: helpers.noopTranslate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser()),\n  initializeChrome: () => dispatch(reduxActions.platform.initializeChrome()),\n  onNavigation: callback => dispatch(reduxActions.platform.onNavigation(callback)),\n  setAppName: name => dispatch(reduxActions.platform.setAppName(name))\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = state => ({ session: state.user.session });\n\nconst ConnectedAuthentication = connectRouterTranslate(mapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router/router';\nimport Authentication from './authentication/authentication';\n\n/**\n * Application\n *\n * @augments React.Component\n */\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n    getLocale();\n  }\n\n  /**\n   * Render application.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <NotificationsPortal />\n        <Authentication>\n          <Router />\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{locale: object, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\n/**\n * Default props.\n *\n * @type {{locale: {}, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { baseName } from './components/router/routerHelpers';\nimport { store } from './redux';\nimport App from './components/app';\nimport './styles/index.scss';\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter basename={baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["components/form/formHelpers.js"],"names":["createMockEvent","event","persistEvent","checked","currentTarget","keyCode","persist","helpers","noop","target","id","name","value","doesNotHaveMinimumCharacters","characters","length","formHelpers"],"mappings":"4VASMA,EAAkB,SAACC,GAAiC,IAA1BC,EAAyB,yEACoCD,GAAnFE,EAD+C,EAC/CA,QAD+C,IACtCC,qBADsC,MACtB,GADsB,EAClBC,EADkB,EAClBA,QADkB,IACTC,eADS,MACCC,IAAQC,KADT,MACeC,cADf,MACwB,GADxB,EAMvD,OAJIP,GACFI,IAGK,CACLH,UACAC,gBACAC,UACAK,GAAIN,EAAcM,IAAMN,EAAcO,KACtCA,KAAMP,EAAcO,KACpBL,UACAM,MAAOR,EAAcQ,MACrBH,WAWEI,EAA+B,SAACD,GAAD,IAAQE,EAAR,uDAAqB,EAArB,MACjB,kBAAVF,GAAsBA,EAAMG,OAASD,GAAgC,kBAAVF,GAE/DI,EAAc,CAClBhB,kBACAa","file":"static/js/32.fe00709e.chunk.js","sourcesContent":["import { helpers } from '../../common/helpers';\n\n/**\n * Create a consistent mock event object.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget, name, id: *, persist: Function, value, target}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n"],"sourceRoot":""}
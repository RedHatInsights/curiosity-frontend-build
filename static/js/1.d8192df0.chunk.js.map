{"version":3,"sources":["components/guestsList/guestsList.js","components/toolbar/toolbarFieldGranularity.js","components/inventorySubscriptions/inventorySubscriptions.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardChartTooltip.js","components/graphCard/graphCardChartLegend.js","components/chartArea/chartArea.js","components/graphCard/graphCard.js","components/form/formHelpers.js","components/form/textInput.js","components/toolbar/toolbarFieldDisplayName.js","components/inventoryList/inventoryList.js","components/tabs/tabs.js","components/inventoryTabs/inventoryTab.js","components/inventoryTabs/inventoryTabs.js","components/toolbar/toolbarHelpers.js","components/toolbar/toolbar.js","components/minHeight/minHeight.js","components/inventoryList/inventoryListHelpers.js","components/pagination/paginationHelpers.js","components/pagination/pagination.js","components/form/select.js"],"names":["GuestsList","state","currentPage","limit","previousData","onUpdateGuestsData","props","getHostsInventoryGuests","query","id","updatedQuery","RHSM_API_QUERY_TYPES","LIMIT","OFFSET","apiQueries","parseRhsmQuery","inventoryGuestsQuery","onScroll","event","target","numberOfGuests","pending","listData","bottom","scrollHeight","scrollTop","clientHeight","newPage","updatedData","setState","this","prevProps","prevState","filterGuestsData","scrollLoader","variant","tableProps","borders","colCount","length","Object","keys","colWidth","map","cellWidth","rowCount","TableVariant","compact","className","session","updatedColumnHeaders","updatedRows","cellData","inventoryListHelpers","parseRowCellsListData","filters","columnHeaders","cells","updatedHeight","style","height","renderLoader","rows","error","perPageDefault","renderTable","React","Component","defaultProps","helpers","noop","makeMapStateToProps","reduxSelectors","guestsList","makeGuestsList","ConnectedGuestsList","connect","dispatch","reduxActions","rhsm","toolbarFieldOptions","values","FIELD_TYPES","type","title","translate","context","value","selected","ToolbarFieldGranularity","options","t","viewId","updatedValue","useSelector","view","graphTallyQuery","GRANULARITY","updatedOptions","option","aria-label","onSelect","dateHelpers","getRangedDateTime","startDate","endDate","store","reduxTypes","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_RHSM_TYPES","START_DATE","toISOString","END_DATE","selectedOptions","placeholder","DAILY","InventorySubscriptions","onColumnSort","data","updatedDirection","direction","productId","updatedSortColumn","SORT_TYPES","find","_camelCase","SortByDirection","desc","SORT_DIRECTION_TYPES","DESCENDING","ASCENDING","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","DIRECTION","SORT","DEV_MODE","REVIEW_MODE","console","warn","onPage","offset","perPage","onUpdateInventoryData","getSubscriptionsInventory","isDisabled","_isEqual","filterInventoryData","parseInventoryFilters","onSort","fulfilled","itemCount","updatedPerPage","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","updateOnContent","aria-hidden","isCompact","onPerPage","isFooter","dropDirection","UI_DISABLED_TABLE_SUBSCRIPTIONS","subscriptionsList","makeSubscriptionsList","ConnectedInventorySubscriptions","getTooltipDate","date","granularity","momentDate","moment","utc","GRANULARITY_TYPES","QUARTERLY","format","timestampQuarterFormats","yearShort","add","MONTHLY","timestampMonthFormats","yearLong","WEEKLY","timestampDayFormats","short","long","yAxisTickFormatFallback","tick","abs","Math","updatedTick","updatedAbbr","pow","graphCardHelpers","getChartXAxisLabelIncrement","xAxisTickFormat","previousDate","formattedDate","isNewYear","Number","parseInt","year","replace","yAxisTickFormat","locale","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","GraphCardChartTooltip","datum","productLabel","header","itemsByKey","forEach","key","index","tempDataFacet","color","test","thresholdStringValue","hasInfinite","y","label","dataFactsValue","hasData","product","push","summary","colSpan","dataFacet","backgroundColor","GraphCardChartLegend","onClick","chart","updatedToggle","toggle","graph","SET_GRAPH_LEGEND","legend","dataSets","isToggled","hide","chartId","isThreshold","labelContent","tooltipContent","checkIsToggled","button","Button","onKeyPress","tabIndex","component","icon","visibility","borderTopColor","Tooltip","content","position","TooltipPosition","top","enableFlip","distance","entryDelay","exitDelay","Fragment","stroke","renderLegendItem","ConnectedGraphCardChartLegend","ChartArea","chartWidth","dataSetsToggle","resizeObserver","containerRef","createRef","tooltipRef","onHide","forceUpdate","onRevert","onToggle","onResizeContainer","current","clientWidth","getIsToggled","setResizeObserve","containerElement","ResizeObserver","window","observe","unobserve","addEventListener","removeEventListener","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","x","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","item","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","filter","set","isStacked","dataSetMaxYStacked","floored","floor","log10","ceil","maxY","chartDomain","chartTooltip","tooltipDataSet","fill","_cloneDeep","mockDatum","tooltip","isValidElement","cloneElement","v","VictoryVoronoiCursorContainer","createContainer","parsedTooltipData","getTooltipData","getXCoordinate","width","tooltipWidth","xCoordinate","getYCoordinate","tooltipHeight","yCoordinate","FlyoutComponent","obj","containerBounds","getBoundingClientRect","tooltipBounds","htmlContent","applyParsedTooltipData","ref","display","xmlns","labelComponent","ChartCursorTooltip","flyout","ChartCursorFlyout","flyoutStyle","renderInPortal","cursorDimension","labels","voronoiPadding","mouseFollowTooltips","chartLegend","legendProps","revert","stacked","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","name","themeColor","themeVariant","generateId","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","tooltipComponent","containerComponent","renderTooltip","undefined","chartProps","Chart","duration","ChartAxis","renderChart","ChartStack","renderLegend","left","right","GraphCard","onUpdateGraphData","getGraphReportsCapacity","graphGranularity","getQueryGranularity","filterGraphData","graphData","chartAreaProps","filtered","tempFiltered","onLoad","chartColorGreenDark","assign","filteredGraphData","JSON","stringify","cardTitle","children","settings","actionDisplay","Card","CardHeader","CardTitle","Title","headingLevel","size","CardActions","CardBody","UI_DISABLED_GRAPH","graphCard","makeGraphCard","ConnectedGraphCard","createMockEvent","persistEvent","checked","currentTarget","keyCode","persist","TextInput","onKeyUp","onClear","clonedEvent","onMouseUp","setTimeout","onChange","isReadOnly","updatedName","updatedId","ToolbarFieldDisplayName","currentValue","inventoryHostsQuery","DISPLAY_NAME","onSubmit","submitValue","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","trim","debounced","_debounce","InputGroup","iconVariant","maxLength","InventoryList","getHostsInventory","guestsId","subscriptionManagerId","hasGuests","expandedContent","Bullseye","CardHeaderMain","CardFooter","TableToolbar","UI_DISABLED_TABLE_HOSTS","inventoryList","makeInventoryList","ConnectedInventoryList","Tabs","updatedActiveTab","updatedTabs","onTab","setTabData","tabs","_isEqualWith","valueA","valueB","toString","activeTab","defaultActiveTab","active","Tab","eventKey","TabTitleText","hasOverflowScroll","activeKey","mountOnEnter","unmountOnExit","inset","default","md","Grid","GridItem","span","renderTabs","InventoryTab","InventoryTabs","inventory","SET_INVENTORY_TAB","updatedChildren","Children","toArray","count","UI_DISABLED_TABLE","ConnectedInventoryTabs","toolbarHelpers","optionsType","SLA","SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","USAGE","USAGE_TYPES","DEVELOPMENT","DISASTER","PRODUCTION","UNSPECIFIED","Toolbar","hardFilterReset","dispatchActions","toolbar","SET_ACTIVE_FILTERS","activeFilters","Set","SET_QUERY_CLEAR","clearFilters","SET_FILTER_TYPE","currentFilter","setDispatch","onClearFilter","categoryTitle","categoryValue","updatedActiveFilters","delete","updatedCurrentFilter","onCategorySelect","field","actions","resetPage","updatedActions","Array","isArray","SET_QUERY_RESET_INVENTORY_LIST","getCurrentFilter","optionsSelected","filterOptions","setSelectFilter","ToolbarFilter","chips","deleteChip","categoryName","showToolbarItem","categoryOptions","categoryOptionsSelected","collapseListedFiltersBreakpoint","clearAllFilters","clearFiltersButtonText","ToolbarContent","ToolbarToggleGroup","toggleIcon","breakpoint","ToolbarGroup","ToolbarItem","renderSelectFilter","filterType","UI_DISABLED_TOOLBAR","ConnectedToolbar","initialQuery","MinHeight","innerContainerRef","updatedContainerWidth","updateOnResize","setMinHeight","setResizeObserver","reset","overrideMinHeight","minHeight","domElement","innerDomElement","applySortFilters","updatedFilter","hasSort","sortActive","sortDirection","asc","isSortDefault","sortDefaultInitialDirection","applyWrappableFilters","transforms","wrappable","isSortable","isWrappable","updatedCells","allCells","entries","headerUpdated","cellUpdated","cell","PfCellWidth","calculatePageFromOffset","calculateOffsetFromPage","page","Pagination","onSetPage","onPerPageSelect","SelectDirection","DropdownDirection","SelectPosition","DropdownPosition","Select","isExpanded","titleSelection","optionsIndex","findIndex","SelectVariant","single","updateSelected","opt","mockUpdatedOptions","mockTarget","selectedIndex","checkbox","mockEvent","expanded","formatOptions","_isPlainObject","activateOptions","convertedOption","text","textContent","isSelected","_findIndex","activeOption","includes","ariaLabel","isToggleText","maxHeight","pfSelectOptions","selections","isOpen","placeholderText","btoa","data-value","data-title","down"],"mappings":"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","file":"static/js/1.d8192df0.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { helpers } from '../../common';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { Loader } from '../loader/loader';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { Table } from '../table/table';\n\n/**\n * ToDo: Consider removing the query prop entirely.\n * The current API doesn't allow setting more than \"offset\" and \"limit\"\n */\n/**\n * ToDo: Review moving the \"onScroll\" layout into a standalone component.\n */\n/**\n * A system inventory guests component.\n *\n * @augments React.Component\n * @fires onUpdateGuestsData\n * @fires onScroll\n */\nclass GuestsList extends React.Component {\n  state = { currentPage: 0, limit: 100, previousData: [] };\n\n  componentDidMount() {\n    this.onUpdateGuestsData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentPage } = this.state;\n\n    if (currentPage !== prevState.currentPage) {\n      this.onUpdateGuestsData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGuestsData\n   */\n  onUpdateGuestsData = () => {\n    const { currentPage, limit } = this.state;\n    const { getHostsInventoryGuests, query, id } = this.props;\n\n    if (id) {\n      const updatedQuery = {\n        ...query,\n        [RHSM_API_QUERY_TYPES.LIMIT]: limit,\n        [RHSM_API_QUERY_TYPES.OFFSET]: currentPage * limit || 0\n      };\n\n      const { inventoryGuestsQuery } = apiQueries.parseRhsmQuery(updatedQuery);\n      getHostsInventoryGuests(id, inventoryGuestsQuery);\n    }\n  };\n\n  /**\n   * Update page state.\n   *\n   * @event onScroll\n   * @param {object} event\n   */\n  onScroll = event => {\n    const { target } = event;\n    const { currentPage, limit, previousData } = this.state;\n    const { numberOfGuests, pending, listData } = this.props;\n\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > (currentPage + 1) * limit && bottom && !pending) {\n      const newPage = currentPage + 1;\n      const updatedData = [...previousData, ...(listData || [])];\n\n      this.setState({\n        previousData: updatedData,\n        currentPage: newPage\n      });\n    }\n  };\n\n  renderLoader() {\n    const { currentPage } = this.state;\n    const { filterGuestsData, listData, pending } = this.props;\n\n    if (currentPage > 0 && pending) {\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n            rowCount: 0,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  }\n\n  /**\n   * ToDo: Consider moving the \"meaning of life\" into the default props on iteration.\n   * For everyone else... move the 42 into default props, possibly the 275.\n   */\n  /**\n   * Render a guests table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { previousData } = this.state;\n    const { filterGuestsData, listData, numberOfGuests, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = [...previousData, ...(listData || [])].map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: filterGuestsData,\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    // Include the table header\n    let updatedHeight = (numberOfGuests + 1) * 42;\n    updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n    return (\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={this.onScroll}\n        >\n          {this.renderLoader()}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render a guest list table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { currentPage } = this.state;\n    const { error, filterGuestsData, listData, numberOfGuests, pending, perPageDefault } = this.props;\n\n    return (\n      <div className={`fadein ${(error && 'blur') || ''}`}>\n        {pending && currentPage === 0 && (\n          <Loader\n            variant=\"table\"\n            tableProps={{\n              borders: false,\n              colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n              colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n              rowCount: numberOfGuests < perPageDefault ? numberOfGuests : perPageDefault,\n              variant: TableVariant.compact\n            }}\n          />\n        )}\n        {((!pending && currentPage === 0) || currentPage > 0) && this.renderTable()}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: object,\n *     pending: boolean, query: object, numberOfGuests: number, perPageDefault: number, id: string,\n *     error: boolean}}\n */\nGuestsList.propTypes = {\n  error: PropTypes.bool,\n  filterGuestsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventoryGuests: PropTypes.func,\n  listData: PropTypes.array,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  pending: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object,\n  session: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: Array,\n *     pending: boolean, query: object, perPageDefault: number, error: boolean}}\n */\nGuestsList.defaultProps = {\n  error: false,\n  filterGuestsData: [],\n  getHostsInventoryGuests: helpers.noop,\n  listData: [],\n  pending: false,\n  perPageDefault: 5,\n  query: {},\n  session: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventoryGuests: (id, query) => dispatch(reduxActions.rhsm.getHostsInventoryGuests(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.guestsList.makeGuestsList();\n\nconst ConnectedGuestsList = connect(makeMapStateToProps, mapDispatchToProps)(GuestsList);\n\nexport { ConnectedGuestsList as default, ConnectedGuestsList, GuestsList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { reduxTypes, store, useSelector } from '../../redux';\nimport { Select } from '../form/select';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as FIELD_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Select field options.\n *\n * @type {{title: (string|Node), value: string, selected: boolean}[]}\n */\nconst toolbarFieldOptions = Object.values(FIELD_TYPES).map(type => ({\n  title: translate('curiosity-toolbar.granularity', { context: type }),\n  value: type,\n  selected: false\n}));\n\n/**\n * Display a granularity field with options.\n *\n * @fires onSelect\n * @param {object} props\n * @param {Array} props.options\n * @param {Function} props.t\n * @param {string} props.value\n * @param {string} props.viewId\n * @returns {Node}\n */\nconst ToolbarFieldGranularity = ({ options, t, value, viewId }) => {\n  const updatedValue = useSelector(\n    ({ view }) => view.graphTallyQuery?.[viewId]?.[RHSM_API_QUERY_TYPES.GRANULARITY],\n    value\n  );\n\n  const updatedOptions = options.map(option => ({ ...option, selected: option.value === updatedValue }));\n\n  /**\n   * On select, dispatch type.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @returns {void}\n   */\n  const onSelect = event => {\n    const { startDate, endDate } = dateHelpers.getRangedDateTime(event.value);\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n        viewId,\n        [RHSM_API_QUERY_TYPES.GRANULARITY]: event.value\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE],\n        viewId,\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString()\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE],\n        viewId,\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString()\n      }\n    ]);\n  };\n\n  return (\n    <Select\n      aria-label={t('curiosity-toolbar.placeholder', { context: 'granularity' })}\n      onSelect={onSelect}\n      options={updatedOptions}\n      selectedOptions={updatedValue}\n      placeholder={t('curiosity-toolbar.placeholder', { context: 'granularity' })}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{viewId: string, t: Function, options: Array, value: string}}\n */\nToolbarFieldGranularity.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      value: PropTypes.any,\n      selected: PropTypes.bool\n    })\n  ),\n  t: PropTypes.func,\n  value: PropTypes.oneOf([...Object.values(FIELD_TYPES)]),\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, options: Array, value: string}}\n */\nToolbarFieldGranularity.defaultProps = {\n  options: toolbarFieldOptions,\n  t: translate,\n  value: FIELD_TYPES.DAILY,\n  viewId: 'toolbarFieldGranularity'\n};\n\nexport { ToolbarFieldGranularity as default, ToolbarFieldGranularity, toolbarFieldOptions };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A subscriptions system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventorySubscriptions extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getSubscriptionsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getSubscriptionsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterInventoryData, listData, query, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n            <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter\n            className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n            aria-hidden={error || !itemCount || false}\n          >\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, listData: Array, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, error: boolean, getSubscriptionsInventory: Function, itemCount: number,\n *     t: Function, filterInventoryData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventorySubscriptions.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getSubscriptionsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, filterInventoryData: Array, listData: Array, session: object, pending: boolean,\n *     fulfilled: boolean, perPageDefault: number, isDisabled: boolean, error: boolean,\n *     getSubscriptionsInventory: Function, itemCount: number}}\n */\nInventorySubscriptions.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterInventoryData: [],\n  getSubscriptionsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getSubscriptionsInventory: (id, query) => dispatch(reduxActions.rhsm.getSubscriptionsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.subscriptionsList.makeSubscriptionsList();\n\nconst ConnectedInventorySubscriptions = connect(makeMapStateToProps, mapDispatchToProps)(InventorySubscriptions);\n\nexport { ConnectedInventorySubscriptions as default, ConnectedInventorySubscriptions, InventorySubscriptions };\n","import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, productLabel, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      header = getTooltipDate({\n        date: itemsByKey[key]?.data.date,\n        granularity\n      });\n    }\n\n    const tempDataFacet = {\n      color: itemsByKey[key]?.color\n    };\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key]?.data.hasInfinite && t('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel'));\n\n      tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n      tempDataFacet.value = thresholdStringValue;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n      tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product: productLabel });\n      tempDataFacet.value = dataFactsValue;\n    }\n\n    data.push(tempDataFacet);\n  });\n\n  return (\n    <div className=\"victory-tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  <div\n                    aria-hidden\n                    className=\"legend-icon victory-legend-icon\"\n                    style={{\n                      backgroundColor: dataFacet.color || 'transparent'\n                    }}\n                  />\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, productLabel: string, t: translate}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  productLabel: '',\n  t: translate\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { connect, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @param {string} options.chartId\n   * @param {string} options.color\n   * @param {boolean} options.isDisabled\n   * @param {boolean} options.isThreshold\n   * @param {string} options.labelContent\n   * @param {string} options.tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"victory-legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: color\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: color\n              }}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *  - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, productLabel, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}Label`, `curiosity-graph.thresholdLabel`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t([`curiosity-graph.${id}Label`, `curiosity-graph.noLabel`], {\n              product: productLabel,\n              context: productLabel\n            });\n\n          const tooltipContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}LegendTooltip`, `curiosity-graph.thresholdLegendTooltip`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t(`curiosity-graph.${id}LegendTooltip`, { product: productLabel, context: productLabel });\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold,\n            tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, legend: object, chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {dataSets: Array}, productLabel: string, viewId: string, t: translate, legend: object,\n *     chart: {hide: Function, toggle: Function, isToggled: Function}}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connect(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer } from 'victory-create-container';\nimport {\n  Chart,\n  ChartAxis,\n  ChartStack,\n  ChartThreshold,\n  ChartThemeColor,\n  ChartArea as PfChartArea,\n  ChartCursorFlyout,\n  ChartCursorTooltip\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: chart redraw flash related to custom tooltips use\n * Removing custom tooltips corrects redraw issues. As a temporary patch, caching at the selector alleviates\n * the symptoms.\n */\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  dataSetsToggle = {};\n\n  resizeObserver = helpers.noop;\n\n  containerRef = React.createRef();\n\n  tooltipRef = React.createRef();\n\n  componentDidMount() {\n    this.setResizeObserve();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * Consumer exposed, hides chart layer.\n   *\n   * @event onHide\n   * @param {string} id\n   */\n  onHide = id => {\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: true };\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns all chart layers back on.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    this.dataSetsToggle = {};\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns chart layer on/off.\n   *\n   * @event onToggle\n   * @param {string} id\n   * @returns {boolean}\n   */\n  onToggle = id => {\n    const updatedToggle = !this.dataSetsToggle[id];\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: updatedToggle };\n    this.forceUpdate();\n\n    return updatedToggle;\n  };\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { chartWidth } = this.state;\n    const { clientWidth = 0 } = this.containerRef.current || {};\n\n    if (clientWidth !== chartWidth) {\n      this.setState({ chartWidth: clientWidth });\n    }\n  };\n\n  /**\n   * Consumer exposed, determine if chart layer on/off.\n   * Note: Using \"setState\" as related to this exposed check gives the appearance of a race condition.\n   * Using a class property with forceUpdate to bypass.\n   *\n   * @param {string} id\n   * @returns {boolean}\n   */\n  getIsToggled = id => this.dataSetsToggle[id] || false;\n\n  /**\n   * Set ResizeObserver for scenarios where the window.resize event doesn't fire.\n   */\n  setResizeObserve() {\n    const containerElement = this.containerRef.current;\n    const { ResizeObserver } = window;\n\n    if (containerElement && ResizeObserver) {\n      const resizeObserver = new ResizeObserver(this.onResizeContainer);\n      resizeObserver.observe(containerElement);\n      this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n    } else {\n      this.onResizeContainer();\n      window.addEventListener('resize', this.onResizeContainer);\n      this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n    }\n  }\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { dataSetsToggle } = this;\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply data set to custom tooltips.\n   *\n   * @returns {Array}\n   */\n  getTooltipData() {\n    const { dataSetsToggle } = this;\n    const { dataSets, chartTooltip } = this.props;\n    let tooltipDataSet = [];\n\n    if (chartTooltip && dataSets && dataSets[0] && dataSets[0].data) {\n      tooltipDataSet = dataSets[0].data.map((dataSet, index) => {\n        const itemsByKey = {};\n\n        dataSets.forEach(data => {\n          if (!dataSetsToggle[data.id] && data.data && data.data[index]) {\n            itemsByKey[data.id] = {\n              color: data.stroke || data.fill || data.color || '',\n              data: _cloneDeep(data.data[index])\n            };\n          }\n        });\n\n        const mockDatum = {\n          datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey, dataSets: _cloneDeep(dataSets) }\n        };\n\n        return {\n          x: dataSet.x,\n          y: null,\n          itemsByKey,\n          tooltip:\n            (React.isValidElement(chartTooltip) && React.cloneElement(chartTooltip, { ...mockDatum })) ||\n            chartTooltip({ ...mockDatum })\n        };\n      });\n    }\n\n    return tooltipDataSet;\n  }\n\n  /**\n   * Return a chart/graph tooltip Victory container component to allow custom HTML tooltips.\n   *\n   * @returns {Node}\n   */\n  renderTooltip() {\n    const { dataSetsToggle } = this;\n    const { chartTooltip, dataSets } = this.props;\n\n    if (!chartTooltip || Object.values(dataSetsToggle).filter(v => v === true).length === dataSets.length) {\n      return null;\n    }\n\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const parsedTooltipData = this.getTooltipData();\n\n    const applyParsedTooltipData = ({ datum }) => {\n      const t = parsedTooltipData.find(v => v.x === datum.x) || {};\n      return t?.tooltip || '';\n    };\n\n    const getXCoordinate = (x, width, tooltipWidth) => {\n      let xCoordinate = x + 10;\n\n      if (x > width / 2) {\n        xCoordinate = x - 10 - tooltipWidth / 2;\n      }\n\n      return xCoordinate;\n    };\n\n    const getYCoordinate = (y, height, tooltipHeight) => {\n      let yCoordinate = y + 10;\n\n      if (y > height / 2) {\n        yCoordinate = y - 10 - tooltipHeight;\n      }\n\n      return yCoordinate;\n    };\n\n    const FlyoutComponent = obj => {\n      const containerRef = this.containerRef.current;\n      const tooltipRef = this.tooltipRef.current;\n      const containerBounds = (containerRef && containerRef.getBoundingClientRect()) || { width: 0, height: 0 };\n      const tooltipBounds = (tooltipRef && tooltipRef.getBoundingClientRect()) || { width: 0, height: 0 };\n      const htmlContent = applyParsedTooltipData({ ...obj });\n\n      if (htmlContent) {\n        return (\n          <g>\n            <foreignObject\n              x={getXCoordinate(obj.x, containerBounds.width, tooltipBounds.width)}\n              y={getYCoordinate(obj.y, containerBounds.height, tooltipBounds.height)}\n              width=\"100%\"\n              height=\"100%\"\n            >\n              <div ref={this.tooltipRef} style={{ display: 'inline-block' }} xmlns=\"http://www.w3.org/1999/xhtml\">\n                {htmlContent}\n              </div>\n            </foreignObject>\n          </g>\n        );\n      }\n\n      return <g />;\n    };\n\n    const labelComponent = (\n      <ChartCursorTooltip\n        flyout={<ChartCursorFlyout />}\n        flyoutStyle={{ fill: 'transparent' }}\n        labelComponent={<FlyoutComponent />}\n        renderInPortal\n      />\n    );\n\n    return (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={labelComponent}\n        voronoiPadding={50}\n        mouseFollowTooltips\n      />\n    );\n  }\n\n  /**\n   * Return a custom chart/graph legend component.\n   *\n   * @returns {Node}\n   */\n  renderLegend() {\n    const { chartLegend, dataSets } = this.props;\n\n    if (!chartLegend) {\n      return null;\n    }\n\n    const legendProps = {\n      datum: { dataSets: _cloneDeep(dataSets) },\n      chart: {\n        hide: this.onHide,\n        revert: this.onRevert,\n        toggle: this.onToggle,\n        isToggled: this.getIsToggled\n      }\n    };\n\n    return (\n      (React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n      chartLegend({ ...legendProps })\n    );\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const { dataSetsToggle } = this;\n    const { dataSets } = this.props;\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { chartLegend, padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const tooltipComponent = { containerComponent: (maxY >= 0 && this.renderTooltip()) || undefined };\n    const chartProps = { padding, ...chartDomain, ...tooltipComponent };\n\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n        {chartLegend && <div className=\"curiosity-chartarea-description victory-legend\">{this.renderLegend()}</div>}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartLegend: Node|Function, chartTooltip: Node|Function, padding, xAxisTickFormat: Function,\n *     themeColor: string, yAxisTickFormat: Function, domain: object|Array, dataSets: object,\n *     xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartLegend: null, chartTooltip: null, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: null, themeColor: string, yAxisTickFormat: null, domain: object,\n *     dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport _isEqual from 'lodash/isEqual';\nimport { connect, reduxActions, reduxSelectors } from '../../redux';\nimport { helpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { ChartArea } from '../chartArea/chartArea';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n    const { [RHSM_API_QUERY_TYPES.START_DATE]: startDate, [RHSM_API_QUERY_TYPES.END_DATE]: endDate } = query;\n\n    if (!isDisabled && graphGranularity && startDate && endDate && productId) {\n      getGraphReportsCapacity(productId, query);\n    }\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, productLabel, query, viewId } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: graphGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(graphGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          strokeWidth: 2,\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 3;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <ChartArea\n        key={`chart_${JSON.stringify(query)}`}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend chart={chart} datum={datum} productLabel={productLabel} viewId={viewId} />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={graphGranularity} productLabel={productLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * ToDo: Evaluate applying a minHeight attr to the MinHeight component graphCard setup\n   * Appears there may be a minor page shift when compared to the prior hard-set min-height\n   * of 410px\n   */\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, graphData, isDisabled, pending, settings } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    let actionDisplay = null;\n\n    // Apply actionDisplay callback, return node\n    if (typeof settings?.actionDisplay === 'function') {\n      actionDisplay = settings.actionDisplay({ ...graphData });\n    }\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <MinHeight key=\"headerMinHeight\">\n          <CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                {cardTitle}\n              </Title>\n            </CardTitle>\n            <CardActions className={(error && 'blur') || ''}>\n              <React.Fragment key=\"actionDisplay\">{actionDisplay}</React.Fragment>\n              {children}\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key=\"bodyMinHeight\">\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && <Loader variant=\"graph\" />}\n              {!pending && this.renderChart()}\n            </div>\n          </CardBody>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productLabel: string, settings: object, productId: string, query: object, pending: boolean,\n *     error: boolean, cardTitle: Node, filterGraphData: Array, getGraphReportsCapacity: Function,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.node,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired,\n    [RHSM_API_QUERY_TYPES.START_DATE]: PropTypes.string.isRequired,\n    [RHSM_API_QUERY_TYPES.END_DATE]: PropTypes.string.isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  settings: PropTypes.shape({\n    actionDisplay: PropTypes.func\n  }),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productLabel: string, settings: object, viewId: string,\n *     t: translate, children: Node, pending: boolean, graphData: object, isDisabled: boolean,\n *     error: boolean, cardTitle: Node, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  productLabel: '',\n  settings: {},\n  t: translate,\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import { helpers } from '../../common/helpers';\n\n/**\n * Create a consistent mock event object.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget, name, id: *, persist: Function, value, target}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput as PfTextInput } from '@patternfly/react-core';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly TextInput. Provides restructured event data,\n * and an onClear event for the search type.\n *\n * @augments React.Component\n * @fires onKeyUp\n * @fires onMouseUp\n * @fires onChange\n */\nclass TextInput extends React.Component {\n  state = {\n    updatedValue: null\n  };\n\n  /**\n   * onKeyUp event, provide additional functionality for onClear event.\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  onKeyUp = event => {\n    const { onClear, onKeyUp, type } = this.props;\n    const { currentTarget, keyCode } = event;\n    const clonedEvent = { ...event };\n\n    onKeyUp(createMockEvent(event, true));\n\n    if (keyCode === 27) {\n      if (type === 'search' && currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      } else {\n        this.setState({ updatedValue: '' }, () => {\n          onClear(\n            createMockEvent({ ...clonedEvent, ...{ currentTarget: { ...clonedEvent.currentTarget, value: '' } } })\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * onMouseUp event, provide additional functionality for onClear event.\n   *\n   * @event onMouseUp\n   * @param {object} event\n   */\n  onMouseUp = event => {\n    const { onClear, onMouseUp, type } = this.props;\n    const { currentTarget } = event;\n    const clonedEvent = { ...event };\n\n    onMouseUp(createMockEvent(event, true));\n\n    if (type !== 'search' || currentTarget.value === '') {\n      return;\n    }\n\n    setTimeout(() => {\n      if (currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      }\n    });\n  };\n\n  /**\n   * onChange event, provide restructured event.\n   *\n   * @param {string} value\n   * @param {object} event\n   */\n  onChange = (value, event) => {\n    const { onChange } = this.props;\n    const clonedEvent = { ...event };\n\n    this.setState({ updatedValue: value }, () => {\n      onChange(createMockEvent(clonedEvent));\n    });\n  };\n\n  /**\n   * Render a text input.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedValue } = this.state;\n    const {\n      className,\n      id,\n      isDisabled,\n      name,\n      onChange,\n      onClear,\n      onKeyUp,\n      onMouseUp,\n      isReadOnly,\n      type,\n      value,\n      ...props\n    } = this.props;\n    const updatedName = name || helpers.generateId();\n    const updatedId = id || updatedName;\n\n    return (\n      <PfTextInput\n        id={updatedId}\n        name={updatedName}\n        className={`curiosity-text-input ${className}`}\n        isDisabled={isDisabled || false}\n        onChange={this.onChange}\n        onKeyUp={this.onKeyUp}\n        onMouseUp={this.onMouseUp}\n        isReadOnly={isReadOnly || false}\n        type={type}\n        value={updatedValue ?? value ?? ''}\n        {...props}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.defaultProps = {\n  className: '',\n  id: null,\n  isDisabled: false,\n  isReadOnly: false,\n  name: null,\n  onChange: helpers.noop,\n  onClear: helpers.noop,\n  onKeyUp: helpers.noop,\n  onMouseUp: helpers.noop,\n  type: 'text',\n  value: ''\n};\n\nexport { TextInput as default, TextInput };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup } from '@patternfly/react-core';\nimport _debounce from 'lodash/debounce';\nimport { reduxTypes, store, useSelector } from '../../redux';\nimport { TextInput } from '../form/textInput';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: evaluate the debounce milliseconds, currently based off platforms default 800 ms\n */\n/**\n * Display a display name input field for search.\n *\n * @fires onSubmit\n * @fires onClear\n * @fires onKeyUp\n * @param {object} props\n * @param {Function} props.t\n * @param {string} props.value\n * @param {string} props.viewId\n * @returns {Node}\n */\nconst ToolbarFieldDisplayName = ({ t, value, viewId }) => {\n  const currentValue = useSelector(\n    ({ view }) => view.inventoryHostsQuery?.[viewId]?.[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n    value\n  );\n\n  /**\n   * On submit, dispatch type.\n   *\n   * @event onSubmit\n   * @param {string} submitValue\n   * @returns {void}\n   */\n  const onSubmit = submitValue =>\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: submitValue?.trim() || null\n      }\n    ]);\n\n  /**\n   * On clear, dispatch type.\n   *\n   * @event onClear\n   * @returns {void}\n   */\n  const onClear = () => {\n    if (currentValue === '' || !currentValue) {\n      return;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: null\n      }\n    ]);\n  };\n\n  /**\n   * Set up submit debounce event to allow for bypass.\n   */\n  const debounced = _debounce(onSubmit, 700);\n\n  /**\n   * On enter submit value, on type submit value, and on esc ignore (clear value at component level).\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 13:\n        onSubmit(event.value);\n        break;\n      case 27:\n        break;\n      default:\n        debounced(event.value);\n        break;\n    }\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        aria-label={t('curiosity-toolbar.placeholder', { context: 'displayName' })}\n        className=\"curiosity-input__display-name\"\n        iconVariant=\"search\"\n        maxLength={255}\n        onClear={onClear}\n        onKeyUp={onKeyUp}\n        value={currentValue}\n        placeholder={t('curiosity-toolbar.placeholder', { context: 'displayName' })}\n      />\n    </InputGroup>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{viewId: string, t: Function, value: string}}\n */\nToolbarFieldDisplayName.propTypes = {\n  t: PropTypes.func,\n  value: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, value: string}}\n */\nToolbarFieldDisplayName.defaultProps = {\n  t: translate,\n  value: null,\n  viewId: 'toolbarFieldDisplayName'\n};\n\nexport { ToolbarFieldDisplayName as default, ToolbarFieldDisplayName };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader, CardHeaderMain } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport GuestsList from '../guestsList/guestsList';\nimport { inventoryListHelpers } from './inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { ToolbarFieldDisplayName } from '../toolbar/toolbarFieldDisplayName';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A hosts system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventoryList extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getHostsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getHostsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterGuestsData, filterInventoryData, listData, query, session, settings } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      const guestsId = cellData?.subscriptionManagerId;\n      let hasGuests = cellData?.numberOfGuests > 0 && guestsId;\n\n      // Apply hasGuests callback, return boolean\n      if (typeof settings?.hasGuests === 'function') {\n        hasGuests = settings.hasGuests({ ...cellData }, { ...session });\n      }\n\n      return {\n        cells,\n        expandedContent:\n          (hasGuests && (\n            <GuestsList\n              key={guestsId}\n              filterGuestsData={filterGuestsData}\n              numberOfGuests={cellData?.numberOfGuests}\n              id={guestsId}\n              query={query}\n            />\n          )) ||\n          undefined\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t,\n      viewId\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n            <CardHeaderMain>\n              <ToolbarFieldDisplayName viewId={viewId} />\n            </CardHeaderMain>\n            <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter\n            className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n            aria-hidden={error || !itemCount || false}\n          >\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{settings:object, productId: string, listData: Array, session: object, pending: boolean,\n *     query: object, fulfilled: boolean, getHostsInventory: Function, error: boolean,\n *     itemCount: number, viewId: string, t: Function, filterInventoryData: Array, filterGuestsData: Array,\n *     perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterGuestsData: PropTypes.array,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  settings: PropTypes.shape({\n    hasGuests: PropTypes.func\n  }),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{settings: object, listData: Array, session: object, pending: boolean, fulfilled: boolean,\n *     getHostsInventory: Function, error: boolean, itemCount: number, viewId: string, t: translate,\n *     filterInventoryData: Array, filterGuestsData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterGuestsData: [],\n  filterInventoryData: [],\n  getHostsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_HOSTS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  settings: {},\n  t: translate,\n  viewId: 'inventoryList'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventory: (id, query) => dispatch(reduxActions.rhsm.getHostsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.inventoryList.makeInventoryList();\n\nconst ConnectedInventoryList = connect(makeMapStateToProps, mapDispatchToProps)(InventoryList);\n\nexport { ConnectedInventoryList as default, ConnectedInventoryList, InventoryList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs as PfTabs, Tab, TabTitleText, Grid, GridItem } from '@patternfly/react-core';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: PF tabs misinterprets \"isElementInView\" when tab title nodes are loaded dynamically\n * It appears the use of isElementInView within PF tabs is trying to be predicative in using\n * \"getBoundingClientRect\" but produces questionable results in scenarios where content is\n * async created. isElementInView assumes some form of the content will always be there\n * instead of scenarios where someone tries to dynamically apply components. It may be good to\n * review using a window.setTimeout(() => handleScrollButtons()) in componentDidMount.\n *\n * Our temporary solution is to simply hide the buttons with a manual set flag affecting the\n * CSS class. This will most likely cause long-term issues.\n */\n/**\n * ToDo: Insights frontend components uses a custom tabs layout, investigate related CSS classes\n * Originally we applied the CSS classes, but they appeared to provide nothing. Since Insights\n * rolled its own tabs we're hesitant to apply said classes without understanding what they provide.\n */\n/**\n * A set of tabs.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass Tabs extends React.Component {\n  state = {\n    updatedActiveTab: null,\n    updatedTabs: null\n  };\n\n  componentDidMount() {\n    const { updatedTabs } = this.state;\n\n    if (updatedTabs === null) {\n      this.setTabData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tabs } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (!_isEqualWith(prevProps.tabs, tabs, customizer)) {\n      this.setTabData();\n    }\n  }\n\n  /**\n   * On tab selected\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {number} params.index\n   */\n  onTab = ({ index }) => {\n    const { onTab } = this.props;\n\n    this.setState(\n      {\n        updatedActiveTab: index\n      },\n      () => onTab({ index })\n    );\n  };\n\n  /**\n   * Convert tab objects into the required PF Tab format.\n   */\n  setTabData() {\n    const { activeTab, defaultActiveTab, tabs } = this.props;\n    let updatedActiveTab = defaultActiveTab;\n\n    const updatedTabs = tabs.map(({ active, content, title }, index) => {\n      updatedActiveTab = active ? index : updatedActiveTab;\n\n      return (\n        <Tab key={title} eventKey={index} title={<TabTitleText>{title}</TabTitleText>}>\n          {content}\n        </Tab>\n      );\n    });\n\n    if (typeof activeTab === 'number') {\n      updatedActiveTab = activeTab;\n    }\n\n    this.setState({\n      updatedActiveTab,\n      updatedTabs\n    });\n  }\n\n  /**\n   * Apply props to tabs.\n   *\n   * @returns {Node}\n   */\n  renderTabs() {\n    const { updatedActiveTab, updatedTabs } = this.state;\n    const { className, hasOverflowScroll } = this.props;\n\n    return (\n      <PfTabs\n        className={`curiosity-tabs${(!hasOverflowScroll && '__no-scroll') || ''} ${className || ''}`}\n        activeKey={updatedActiveTab}\n        onSelect={(event, index) => this.onTab({ event, index })}\n        mountOnEnter\n        unmountOnExit\n        inset={{\n          default: 'insetNone',\n          md: 'insetLg'\n        }}\n      >\n        {updatedTabs}\n      </PfTabs>\n    );\n  }\n\n  /**\n   * Render tabs.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"curiosity-tabs-container\">\n        <GridItem span={12}>{this.renderTabs()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.propTypes = {\n  activeTab: PropTypes.number,\n  className: PropTypes.string,\n  defaultActiveTab: PropTypes.number,\n  hasOverflowScroll: PropTypes.bool,\n  onTab: PropTypes.func,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      content: PropTypes.node.isRequired,\n      title: PropTypes.node.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.defaultProps = {\n  activeTab: null,\n  className: '',\n  defaultActiveTab: 0,\n  hasOverflowScroll: false,\n  onTab: helpers.noop,\n  tabs: []\n};\n\nexport { Tabs as default, Tabs };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * A tab pass-through component for passing props to InventoryTabs.\n *\n * @param {object} props\n * @param {boolean} props.active\n * @param {Node} props.children\n * @param {string} props.title\n * @returns {Node}\n */\n// eslint-disable-next-line no-unused-vars\nconst InventoryTab = ({ active, children, title }) => <React.Fragment>{children}</React.Fragment>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nInventoryTab.propTypes = {\n  children: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  title: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nInventoryTab.defaultProps = {\n  active: false\n};\n\nexport { InventoryTab as default, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { Tabs } from '../tabs/tabs';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { InventoryTab } from './inventoryTab';\n\n/**\n * A system inventory tabs component.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass InventoryTabs extends React.Component {\n  /**\n   * On tab update state.\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {string} params.index tab index\n   */\n  onTab = ({ index }) => {\n    const { productId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.inventory.SET_INVENTORY_TAB,\n      tabs: {\n        [productId]: index\n      }\n    });\n  };\n\n  /**\n   * Render inventory tabs using Inventory tab passed props only. A parallel outcome can be\n   * achieved by passing an array of objects through a prop.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { activeTab, children, defaultActiveTab, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const updatedChildren = React.Children.toArray(children).map(({ props = {} }) => ({\n      active: props.active || false,\n      content: props.children,\n      title: props.title\n    }));\n\n    return (\n      <React.Fragment>\n        <Title headingLevel=\"h2\" className=\"sr-only\">\n          {t('curiosity-inventory.tabHeading', { count: updatedChildren.length })}\n        </Title>\n        <Tabs activeTab={activeTab} defaultActiveTab={defaultActiveTab} onTab={this.onTab} tabs={updatedChildren} />\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, t: Function, children: Node, defaultActiveTab: number, isDisabled: boolean,\n *     activeTab: number}}\n */\nInventoryTabs.propTypes = {\n  activeTab: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  defaultActiveTab: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.defaultProps = {\n  activeTab: 0,\n  defaultActiveTab: 0,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  t: translate\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst mapStateToProps = ({ inventory }, { productId }) => ({ activeTab: inventory.tabs?.[productId] });\n\nconst ConnectedInventoryTabs = connect(mapStateToProps)(InventoryTabs);\n\nexport { ConnectedInventoryTabs as default, ConnectedInventoryTabs, InventoryTabs, InventoryTab };\n","import { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SLA_TYPES as SLA_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES as USAGE_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = optionsType => {\n  switch (optionsType) {\n    case RHSM_API_QUERY_TYPES.SLA:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.slaPremium'),\n            value: SLA_TYPES.PREMIUM\n          },\n          {\n            title: translate('curiosity-toolbar.slaStandard'),\n            value: SLA_TYPES.STANDARD\n          },\n          {\n            title: translate('curiosity-toolbar.slaSelfSupport'),\n            value: SLA_TYPES.SELF\n          },\n          {\n            title: translate('curiosity-toolbar.slaNone'),\n            value: SLA_TYPES.NONE\n          }\n        ]\n      };\n    case RHSM_API_QUERY_TYPES.USAGE:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.usageDevelopment'),\n            value: USAGE_TYPES.DEVELOPMENT\n          },\n          {\n            title: translate('curiosity-toolbar.usageDisaster'),\n            value: USAGE_TYPES.DISASTER\n          },\n          {\n            title: translate('curiosity-toolbar.usageProduction'),\n            value: USAGE_TYPES.PRODUCTION\n          },\n          {\n            title: translate('curiosity-toolbar.usageUnspecified'),\n            value: USAGE_TYPES.UNSPECIFIED\n          }\n        ]\n      };\n    default:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.SLA }),\n            value: RHSM_API_QUERY_TYPES.SLA\n          },\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.USAGE }),\n            value: RHSM_API_QUERY_TYPES.USAGE\n          }\n        ]\n      };\n  }\n};\n\nconst toolbarHelpers = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarHelpers as default, toolbarHelpers, getOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar as PfToolbar,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup\n} from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons';\nimport { Select } from '../form/select';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { toolbarHelpers } from './toolbarHelpers';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onClearFilter\n * @fires onCategorySelect\n * @fires onSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear all filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    const { hardFilterReset } = this.props;\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: new Set() } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [RHSM_API_QUERY_TYPES.SLA]: null,\n            [RHSM_API_QUERY_TYPES.USAGE]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: null } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Clear individual filter state.\n   *\n   * @event onClearFilter\n   * @param {string} categoryTitle\n   */\n  onClearFilter = categoryTitle => {\n    const { activeFilters, currentFilter, hardFilterReset } = this.props;\n\n    const categoryOptions = toolbarHelpers.getOptions();\n    const { value: categoryValue } = categoryOptions.options.find(({ title }) => title === categoryTitle) || {};\n\n    if (!categoryValue) {\n      return;\n    }\n\n    const updatedActiveFilters = new Set(activeFilters);\n    updatedActiveFilters.delete(categoryValue);\n\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: updatedActiveFilters } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [categoryValue]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      const updatedCurrentFilter = (updatedActiveFilters.size > 0 && currentFilter) || null;\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: updatedCurrentFilter } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Set Category selection.\n   *\n   * @event onCategorySelect\n   * @param {object} event\n   */\n  onCategorySelect = event => {\n    const { value } = event;\n    this.setDispatch({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: value } });\n  };\n\n  /**\n   * Set select filter selection for dispatch.\n   *\n   * @param {object} params\n   * @param {object} params.event\n   * @param {string} params.field\n   */\n  onSelect = ({ event, field }) => {\n    const { activeFilters } = this.props;\n    const { value } = event;\n    const updatedActiveFilters = new Set(activeFilters).add(field);\n\n    this.setDispatch(\n      [\n        {\n          type: reduxTypes.toolbar.SET_ACTIVE_FILTERS,\n          data: { activeFilters: updatedActiveFilters }\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_TYPES[field],\n          data: { [field]: value }\n        }\n      ],\n      true\n    );\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {Array|object} actions\n   * @param {boolean} resetPage\n   */\n  setDispatch(actions, resetPage = false) {\n    const { viewId } = this.props;\n    const updatedActions = ((Array.isArray(actions) && actions) || [actions]).map(({ type, data }) => ({\n      type,\n      viewId,\n      ...data\n    }));\n\n    if (resetPage) {\n      updatedActions.push({\n        type: reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST,\n        viewId\n      });\n    }\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Available, and selected select filter options.\n   *\n   * @param {string} field\n   * @returns {{optionsSelected: Array, options: Array }}\n   */\n  setSelectFilter(field) {\n    const { query } = this.props;\n    const options = toolbarHelpers.getOptions(field);\n    const currentFilter = this.getCurrentFilter();\n    let filter;\n\n    if (field) {\n      filter = typeof query?.[field] === 'string' && options.options.find(({ value }) => value === query?.[field]);\n    } else {\n      filter = options.options.find(({ value }) => value === currentFilter);\n    }\n\n    const optionsSelected = (filter?.title && [filter.title]) || (options?.selected && [options.selected]) || [];\n\n    return { options, optionsSelected };\n  }\n\n  /**\n   * Return the currentFilter, fallback to selected\n   *\n   * @returns {string|undefined}\n   */\n  getCurrentFilter() {\n    const { currentFilter, filterOptions } = this.props;\n\n    return (\n      currentFilter ||\n      filterOptions.find(({ selected }) => selected === true)?.id ||\n      (filterOptions.length === 1 && filterOptions[0]?.id)\n    );\n  }\n\n  /**\n   * A select filter node.\n   *\n   * @param {object} params\n   * @param {string} params.id\n   * @returns {object}\n   */\n  renderSelectFilter({ id: field }) {\n    const { t } = this.props;\n    const { options, optionsSelected } = this.setSelectFilter(field);\n    const currentFilter = this.getCurrentFilter();\n\n    return (\n      <ToolbarFilter\n        key={field}\n        chips={optionsSelected}\n        deleteChip={this.onClearFilter}\n        categoryName={t('curiosity-toolbar.category', { context: field })}\n        showToolbarItem={currentFilter === field}\n      >\n        <Select\n          aria-label={t('curiosity-toolbar.category', { context: field })}\n          onSelect={event => this.onSelect({ event, field })}\n          selectedOptions={optionsSelected}\n          placeholder={t('curiosity-toolbar.placeholder', { context: field })}\n          options={options.options}\n        />\n      </ToolbarFilter>\n    );\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { filterOptions, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options: categoryOptions, optionsSelected: categoryOptionsSelected } = this.setSelectFilter();\n\n    return (\n      <PfToolbar\n        id=\"curiosity-toolbar\"\n        className=\"curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"sm\"\n        clearAllFilters={this.onClear}\n        clearFiltersButtonText={t('curiosity-toolbar.clearFilters')}\n      >\n        <ToolbarContent>\n          <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"md\">\n            <ToolbarGroup variant=\"filter-group\">\n              {filterOptions.length !== 1 && (\n                <ToolbarItem>\n                  <Select\n                    aria-label={t('curiosity-toolbar.category')}\n                    onSelect={this.onCategorySelect}\n                    selectedOptions={categoryOptionsSelected}\n                    placeholder={t('curiosity-toolbar.placeholder')}\n                    options={categoryOptions.options}\n                    toggleIcon={<FilterIcon />}\n                  />\n                </ToolbarItem>\n              )}\n              {filterOptions.map(({ id, selected }) => this.renderSelectFilter({ id, selected }))}\n            </ToolbarGroup>\n          </ToolbarToggleGroup>\n        </ToolbarContent>\n      </PfToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, filterOptions: Array}}\n */\nToolbar.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.SLA]: PropTypes.string,\n    [RHSM_API_QUERY_TYPES.USAGE]: PropTypes.string\n  }),\n  activeFilters: PropTypes.instanceOf(Set),\n  currentFilter: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n  filterOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      filterType: PropTypes.oneOf(['select']),\n      id: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n      selected: PropTypes.bool\n    })\n  ),\n  hardFilterReset: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, filterOptions: Array}}\n */\nToolbar.defaultProps = {\n  query: {},\n  activeFilters: new Set(),\n  currentFilter: null,\n  filterOptions: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA,\n      filterType: 'select'\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      filterType: 'select',\n      selected: true\n    }\n  ],\n  hardFilterReset: false,\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: translate,\n  viewId: 'toolbar'\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.toolbar\n * @param {object} state.view\n * @param {object} props\n * @param {string} props.query\n * @param {string} props.viewId\n * @returns {object}\n */\nconst mapStateToProps = ({ toolbar, view }, { query: initialQuery, viewId }) => ({\n  ...toolbar.filters?.[viewId],\n  query: view.query?.[viewId] || initialQuery\n});\n\nconst ConnectedToolbar = connect(mapStateToProps)(Toolbar);\n\nexport { ConnectedToolbar as default, ConnectedToolbar, Toolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Apply sort filter to filters.\n *\n * @param {object} params\n * @param {{ onSort: Function, sortActive: boolean, sortDirection: string, isSortDefault: boolean,\n *     sortDefaultInitialDirection: string }} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {object}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} }) => {\n  const { id } = filter;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === id\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  if (\n    hasSort &&\n    !updatedFilter.sortActive &&\n    !query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    updatedFilter.isSortDefault === true\n  ) {\n    updatedFilter.sortActive = true;\n\n    if (updatedFilter.sortDefaultInitialDirection) {\n      updatedFilter.sortDirection = updatedFilter.sortDefaultInitialDirection;\n    }\n  }\n\n  return updatedFilter;\n};\n\nconst applyWrappableFilters = ({ filter = {} }) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Apply additional properties to filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {Array}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} }) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.cellData\n * @param {object} params.session\n * @returns {{columnHeaders: Array, cells: Array, data: object}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, session = {} }) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value]) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value);\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    filters.forEach(({ id, cell, cellWidth, header, onSort, sortActive, sortDirection, transforms }) => {\n      let headerUpdated;\n      let cellUpdated;\n\n      if (allCells[id]) {\n        headerUpdated = allCells[id]?.title ?? id;\n        cellUpdated = allCells[id]?.value ?? '';\n      } else if (id) {\n        headerUpdated = translate('curiosity-inventory.header', { context: id });\n        cellUpdated = '';\n      }\n\n      // set table header cell filter params\n      if (header) {\n        headerUpdated = (typeof header === 'function' && header({ ...allCells })) || header;\n      }\n\n      if (\n        typeof headerUpdated === 'string' ||\n        typeof headerUpdated === 'number' ||\n        React.isValidElement(headerUpdated)\n      ) {\n        headerUpdated = {\n          title: headerUpdated\n        };\n      }\n\n      if (headerUpdated) {\n        headerUpdated.transforms = [];\n\n        if (Array.isArray(transforms)) {\n          headerUpdated.transforms = headerUpdated.transforms.concat([...transforms]);\n        }\n\n        if (typeof cellWidth === 'number') {\n          headerUpdated.transforms.push(PfCellWidth(cellWidth));\n        }\n      }\n\n      if (typeof onSort === 'function') {\n        headerUpdated = {\n          ...headerUpdated,\n          onSort: obj => onSort({ ...allCells }, { ...obj, id }),\n          sortActive,\n          sortDirection\n        };\n      }\n\n      // set table row cell filter params\n      if (cell) {\n        cellUpdated = (typeof cell === 'function' && cell({ ...allCells }, { ...session })) || cell;\n      }\n\n      if (typeof cellUpdated === 'string' || typeof cellUpdated === 'number' || React.isValidElement(cellUpdated)) {\n        cellUpdated = {\n          title: cellUpdated\n        };\n      }\n\n      updatedColumnHeaders.push(headerUpdated);\n      updatedCells.push(cellUpdated);\n    });\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryListHelpers = {\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryListHelpers as default,\n  inventoryListHelpers,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DropdownDirection,\n  DropdownPosition,\n  Select as PfSelect,\n  SelectOption as PfSelectOption,\n  SelectVariant\n} from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _findIndex from 'lodash/findIndex';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Pass direction as select component variant option.\n *\n * @type {DropdownDirection}\n */\nconst SelectDirection = DropdownDirection;\n\n/**\n * Pass position as select component variant option.\n *\n * @type {DropdownPosition}\n */\nconst SelectPosition = DropdownPosition;\n\n/**\n * A wrapper for Patternfly Select. Provides restructured event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @fires onToggle\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @event onToggle\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        let isSelected;\n\n        if (_isPlainObject(convertedOption.value)) {\n          isSelected = _findIndex(activateOptions, convertedOption.value) > -1;\n\n          if (!isSelected) {\n            const tempSearch = activateOptions.find(activeOption =>\n              Object.values(convertedOption.value).includes(activeOption)\n            );\n            isSelected = !!tempSearch;\n          }\n        } else {\n          isSelected = activateOptions.includes(convertedOption.value);\n        }\n\n        if (!isSelected) {\n          isSelected = activateOptions.includes(convertedOption.title);\n        }\n\n        updatedOptions[index].selected = isSelected;\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const {\n      ariaLabel,\n      className,\n      direction,\n      isDisabled,\n      isToggleText,\n      maxHeight,\n      placeholder,\n      position,\n      toggleIcon,\n      variant\n    } = this.props;\n\n    const pfSelectOptions = {\n      direction,\n      maxHeight\n    };\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select${(!isToggleText && '__no-toggle-text') || ''} ${\n          (position === DropdownPosition.right && 'curiosity-select__position-right') || ''\n        } ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isOpen={isExpanded}\n        toggleIcon={toggleIcon}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(`${option.title}-${option.value}`)}\n              id={window.btoa(`${option.title}-${option.value}`)}\n              value={option.title}\n              data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{toggleIcon: (Node|Function), className: string, ariaLabel: string, onSelect: Function,\n *     isToggleText: boolean, maxHeight: number, name: string, options: (Array|object),\n *     selectedOptions: (number|string|Array), variant: string, id: string, isDisabled: boolean,\n *     placeholder: string, position: string, direction: string}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  direction: PropTypes.oneOf(Object.values(SelectDirection)),\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  maxHeight: PropTypes.number,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.string,\n  position: PropTypes.oneOf(Object.values(SelectPosition)),\n  selectedOptions: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]))\n  ]),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{toggleIcon: (Node|Function), className: string, ariaLabel: string, onSelect: Function, isToggleText: boolean,\n *     maxHeight: number, name: string, options: (Array|object), selectedOptions: (number|string|Array),\n *     variant: SelectVariant.single, id: string, isDisabled: boolean, placeholder: string,\n *     position: DropdownPosition.left, direction: DropdownDirection.down}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  direction: SelectDirection.down,\n  id: helpers.generateId(),\n  isDisabled: false,\n  isToggleText: true,\n  maxHeight: null,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  position: SelectPosition.left,\n  selectedOptions: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select, SelectDirection, SelectPosition };\n"],"sourceRoot":""}
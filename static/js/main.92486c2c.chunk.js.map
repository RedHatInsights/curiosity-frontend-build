{"version":3,"sources":["components/router/router.js","components/pageLayout/pageHeader.js","components/pageLayout/pageMessages.js","components/pageLayout/pageToolbar.js","components/messageView/messageView.js","components/loader/loader.js","components/table/table.js","types/rhsmApiTypes.js","components/router/redirect.js","components/i18n/i18n.js","components/pageLayout/pageColumns.js","components/pageLayout/pageSection.js","components/table/tableSkeleton.js","components/table/tableEmpty.js","components/app.js","components/authentication/authentication.js","common/helpers.js","types/platformApiTypes.js","index.js","components lazy /^/.//.*/.js$/ exclude: //.test/.js$/ groupOptions: {} namespace object","redux/common/reduxHelpers.js","redux/middleware/actionRecordMiddleware.js","redux/middleware/index.js","redux/middleware/statusMiddleware.js","redux/middleware/multiActionMiddleware.js","redux/types/appTypes.js","redux/types/graphTypes.js","redux/types/inventoryTypes.js","redux/types/platformTypes.js","redux/types/queryTypes.js","redux/types/rhsmTypes.js","redux/types/userTypes.js","redux/types/index.js","redux/types/toolbarTypes.js","redux/reducers/graphReducer.js","redux/reducers/inventoryReducer.js","redux/reducers/messagesReducer.js","redux/reducers/toolbarReducer.js","redux/reducers/userReducer.js","redux/reducers/viewReducer.js","redux/reducers/index.js","redux/store.js","services/platformServices.js","redux/actions/platformActions.js","services/config.js","services/rhsmServices.js","redux/actions/rhsmActions.js","services/userServices.js","redux/actions/index.js","redux/actions/userActions.js","redux/common/apiQueries.js","redux/selectors/appMessagesSelectors.js","redux/selectors/userSelectors.js","redux/selectors/guestsListSelectors.js","redux/selectors/graphCardSelectors.js","redux/selectors/inventoryListSelectors.js","redux/selectors/subscriptionsListSelectors.js","redux/selectors/index.js","redux/index.js","components/router/index.js","components/router/routerHelpers.js","config/product.rhel.js","config/product.openshiftContainer.js","config/product.openshiftMetrics.js","config/product.openshiftDedicated.js","config/product.satellite.js","config/routes.js","common/dateHelpers.js","common/downloadHelpers.js","types/index.js","components/pageLayout/pageLayout.js"],"names":["Router","routes","useState","updatedRoutes","setUpdatedRoutes","redirectDefault","setRedirectDefault","useMount","a","activateOnErrorRoute","find","route","activateOnError","Promise","all","map","item","disabled","routerHelpers","importView","component","View","exact","path","strict","render","location","routeProps","routeConfig","id","getRouteConfig","window","URLSearchParams","decodeURIComponent","parsedSearch","Set","search","param","value","forEach","v","split","updatedLocation","routeDetail","baseName","errorRoute","routeItem","results","redirect","Suspense","fallback","variant","to","defaultProps","PageHeader","children","includeTour","productLabel","t","justifyContent","sm","title","className","isInline","color","appName","helpers","UI_DISPLAY_NAME","context","icon","iconPosition","target","href","UI_LINK_LEARN_MORE","translate","PageMessages","props","PageToolbar","MessageView","message","pageTitle","EmptyStateVariant","full","headingLevel","size","Loader","skeletonProps","tableProps","SkeletonSize","lg","md","xs","Table","state","isCollapsible","isSortable","sortBy","updatedColumnHeaders","updatedRows","onCollapse","index","isOpen","fullWidth","cells","expandedContent","setState","onSort","direction","data","updatedIndex","i","label","column","header","this","setRowData","prevProps","columnHeaders","rows","customizer","valueA","valueB","toString","_isEqualWith","updatedSort","isExpanded","rowObj","push","parent","length","cell","undefined","settings","React","isValidElement","columnHeader","sortActive","sortDirection","tempColumnHeader","transforms","sortable","SortByDirection","asc","filter","ariaLabel","borders","isHeader","summary","pfTableProps","emptyTable","SearchIcon","event","Fragment","aria-label","span","renderTable","Component","RHSM_API_PATH_ID_TYPES","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","OPENSHIFT","OPENSHIFT_METRICS","OPENSHIFT_DEDICATED_METRICS","SATELLITE","SATELLITE_CAPSULE","SATELLITE_SERVER","RHSM_API_QUERY_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_QUERY_SORT_TYPES","CORES","CORE_HOURS","HARDWARE","INSTANCE_HOURS","LAST_SEEN","MEASUREMENT","NAME","SOCKETS","RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES","SKU","PRODUCT_NAME","SERVICE_LEVEL","USAGE","UPCOMING_EVENT_DATE","PHYSICAL_CAPACITY","VIRTUAL_CAPACITY","TOTAL_CAPACITY","UOM","RHSM_API_QUERY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","RHSM_API_QUERY_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_QUERY_UOM_TYPES","RHSM_API_QUERY_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_SET_OPTIN_TYPES","CONDUIT_SYNC","TALLY_REPORT","TALLY_SYNC","RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES","END_DATE","GRANULARITY","SLA","START_DATE","RHSM_API_QUERY_SET_INVENTORY_TYPES","DIRECTION","DISPLAY_NAME","LIMIT","OFFSET","SORT","RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES","RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES","RHSM_API_QUERY_TYPES","rhsmApiTypes","RHSM_API_RESPONSE_ERROR_DATA","RHSM_API_RESPONSE_ERROR_DATA_TYPES","CODE","DETAIL","RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES","GENERIC","OPTIN","RHSM_API_RESPONSE_LINKS","RHSM_API_RESPONSE_LINKS_TYPES","FIRST","LAST","PREVIOUS","NEXT","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_META_TYPES","COUNT","TOTAL_CORE_HOURS","TOTAL_INSTANCE_HOURS","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","CLOUD_CORES","CLOUD_INSTANCES","CLOUD_SOCKETS","DATE","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_INVENTORY_DATA","RHSM_API_RESPONSE_INVENTORY_DATA_TYPES","CLOUD_PROVIDER","GUESTS","ID","INVENTORY_ID","SUBSCRIPTION_ID","RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES","RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES","SUBSCRIPTION_NUMBERS","UPCOMING_EVENT_TYPE","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","HAS_CLOUDIGRADE_DATA","HAS_CLOUDIGRADE_MISMATCH","HAS_DATA","Redirect","isForced","url","pathName","matchedRoutePath","matchedRoute","hash","forcePath","join","replace","forceNavigation","TEST_MODE","translateKey","values","components","updatedValues","Array","isArray","noopTranslate","i18next","store","i18nKey","translateComponent","withTranslation","i18n","noop","displayName","I18n","fallbackLng","loadPath","locale","initialized","setInitialized","use","XHR","initReactI18next","init","backend","lng","debug","PROD_MODE","ns","defaultNS","react","useSuspense","useEffect","changeLanguage","e","process","PageColumns","alignItems","spaceItems","Children","toArray","child","grow","key","generateId","PageSection","TableSkeleton","colCount","colWidth","rowCount","updatedHeader","cellWidth","updatedRowCount","TableEmpty","tableHeading","small","App","getLocale","ConnectedApp","connectRouter","user","session","dispatch","reduxActions","Authentication","removeListeners","authorizeUser","hideGlobalFilter","history","initializeChrome","onNavigation","setAppName","authorized","subscriptions","DEV_MODE","appNav","routeHref","navId","UI_DISABLED","description","pending","BinocularsIcon","errorCodes","includes","status","getErrorRoute","serviceName","makeMapStateToProps","reduxSelectors","makeUserSession","ConnectedAuthentication","isHidden","platform","callback","name","Function","prototype","noopPromise","resolve","UI_WINDOW_ID","browserExpose","obj","options","limit","prefix","Math","ceil","random","isDate","date","Object","call","isPromise","test","JSON","stringify","REVIEW_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED_GRAPH","UI_DISABLED_TABLE","UI_DISABLED_TABLE_HOSTS","UI_DISABLED_TABLE_SUBSCRIPTIONS","UI_DISABLED_TOOLBAR","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_LOGGER_FILE","UI_NAME","UI_PATH","UI_VERSION","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES","SUBSCRIPTIONS","PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES","ALL","PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES","READ","WRITE","platformApiTypes","PLATFORM_API_RESPONSE_NAV_TYPES","ACTIVE_APP","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","basename","document","getElementById","webpackAsyncContext","req","__webpack_require__","o","then","Error","code","ids","slice","keys","module","exports","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","schemas","initialValue","schema","generated","getSingleResponseFromResultArray","updatedResults","payload","response","updatedResultsMessage","firstErrorResponse","_get","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","_isPlainObject","getDateFromResults","getStatusFromResults","setStateProp","prop","initialState","reset","console","error","warn","singlePromiseDataResponseFromArray","reduxHelpers","parsedResponses","responses","customResponseValue","keyPrefix","updatedData","generatedSchema","parsedResponse","dataObj","customValue","update","updatedDataObj","entries","dataObjKey","dataObjValue","casedDataObjKey","_camelCase","val","Number","isInteger","parseInt","parseFloat","generateReflectedData","generatedData","types","action","type","expandedTypes","subVal","ref","RegExp","whichType","expandMetaTypes","meta","updatedMeta","query","metaData","metaId","metaQuery","baseState","errorMessage","fulfilled","setId","errorResponse","cancelled","recordAction","config","navigator","sessionStorage","items","getItem","parsedItems","parse","actions","getActions","priorItem","updatedAction","removeUserIdentity","updatedPayload","sanitizeData","headers","sanitizeActionHeaders","actionObj","diff","timestamp","Date","now","setItem","browser","userAgent","toLocaleString","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","next","httpStatus","payloadConfig","range","floor","statusMiddleware","promiseMiddleware","actionRecordMiddleware","app","version","notificationsMiddleware","appTypes","STATUS_4XX","STATUS_5XX","graphTypes","SET_GRAPH_LEGEND","inventoryTypes","SET_INVENTORY_TAB","platformTypes","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_GLOBAL_FILTER_HIDE","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","SET_QUERY_RHSM_TYPES","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","rhsmTypes","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","GET_MESSAGE_REPORTS_RHSM","GET_SUBSCRIPTIONS_INVENTORY_RHSM","userTypes","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","graph","inventory","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_RESET_INVENTORY_LIST","rhsm","toolbar","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","legend","reportCapacity","graphReducer","hostsInventory","hostsGuests","subscriptionsInventory","tabs","inventoryReducer","report","messagesReducer","filters","toolbarReducer","viewId","activeFilters","currentFilter","optin","userReducer","actionStatus","graphTallyQuery","inventoryGuestsQuery","inventoryHostsQuery","inventorySubscriptionsQuery","viewReducer","updateResetQueries","queryIds","productGroups","updatedQuery","queryId","productQuery","updateClearQueries","clearFilters","reducers","notifications","messages","view","reduxReducers","combineReducers","createStore","applyMiddleware","getUser","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","auth","getUserPermissions","USER_PERMISSION_TYPES","REACT_APP_DEBUG_PERMISSION_APP_ONE","REACT_APP_DEBUG_PERMISSION_APP_TWO","platformServices","on","identifyApp","reject","setAppNav","secondaryNav","appNavClick","parentId","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","serviceConfig","passedConfig","timeout","cancelTokens","responseCache","LruCache","maxAge","max","updateAgeOnGet","serviceCall","updatedConfig","axiosInstance","axios","create","cancel","cancelTokensId","cancelId","CancelToken","source","cancelToken","token","cache","sortedParams","params","sort","b","localeCompare","cacheId","cachedResponse","get","adapter","adapterConfig","interceptors","set","rhsmServices","getApiVersion","getGraphCapacity","getGraphReports","getHostsInventory","getHostsInventoryGuests","getSubscriptionsInventory","rhsmActions","getGraphReportsCapacity","getMessageReports","getLocaleFromCookie","Cookies","LocaleCode","getLanguageName","userServices","updatedPermissions","permissions","userData","allPermissions","userPermissions","flat","emulatedErrorResponse","defaultLocale","logoutUser","deleteAccountOptIn","method","getAccountOptIn","updateAccountOptIn","rejected","dismissable","apiQueries","parseRhsmQuery","queries","updatedGraphTallyQuery","updatedInventoryGuestsQuery","updatedInventoryHostsQuery","updatedInventorySubscriptionsQuery","toolbarQuery","selectorCache","selector","createSelector","productId","appMessages","cloudigradeMismatch","assign","reportData","reverse","appMessagesSelectors","makeAppMessages","createSelectorCreator","defaultMemoize","_isEqual","createDeepEqualSelector","rest","updatedSession","admin","entitled","responsePermissions","APP_TYPES","permission","definitions","resource","operation","resources","RESOURCE_TYPES","OPERATION_TYPES","resourcePermissions","res","op","userSessionSelectors","userSession","responseData","updatedResponseData","listData","updatedListData","guestsListSelectors","guestsList","makeGuestsList","stale","graphData","responseMetaQuery","capacity","reportMeta","capacityData","graphDataKey","tallySchema","capacitySchema","customReportValue","presetData","hasData","hasCloudigradeData","hasCloudigradeMismatch","customCapacityValue","x","y","hasInfinite","moment","utc","startOf","toDate","generateGraphData","graphDataObj","graphDataObjKey","generatedY","casedGraphDataObjKey","toFixed","updatedItem","updatedReportMeta","graphCardSelectors","graphCard","makeGraphCard","itemCount","listMeta","customInventoryValue","toLowerCase","updatedListMeta","inventoryListSelectors","inventoryList","makeInventoryList","subscriptionsList","makeSubscriptionsList","userSelectors","mapStateToProps","mapDispatchToProps","withRouter","connect","useSelector","UseSelector","equality","platformLandingRedirect","platformModalRedirect","dynamicBaseName","pathname","applicationName","dynamicBasePath","basePath","generateProductGroups","routesConfig","pathParameter","productParameter","generateRoutes","getRouteConfigByPath","basePathDirs","str","configs","allConfigs","configsById","allConfigsById","findConfig","dir","configPath","aliases","configItem","updatedConfigItem","decodedDir","decodeURI","firstMatch","navRouteItem","returnDefault","default","viewParameter","lazy","productGroup","dateHelpers","getRangedDateTime","GRANULARITY_TYPES","startDate","toISOString","endDate","SORT_DIRECTION_TYPES","initialGraphFilters","fill","chartColorBlueLight","stroke","chartColorBlueDark","chartColorCyanLight","chartColorCyanDark","chartColorPurpleLight","chartColorPurpleDark","chartType","initialGuestsFilters","inventoryId","Button","lastSeen","DateFormat","initialInventoryFilters","numberOfGuests","updatedDisplayName","count","cloudProvider","measurementType","isWrappable","initialInventorySettings","initialSubscriptionsInventoryFilters","upcomingEventDate","format","initialToolbarFilters","selected","productContextFilterUom","initialOption","isOptional","initialGraphSettings","getRangedMonthDateTime","actionDisplay","displayContent","totalCoreHours","total","numbro","average","mantissa","trimMantissa","lowPrecision","toUpperCase","coreHours","isStacked","yAxisUseDataSet","instanceHours","rhelConfig","productConfig","isSearchable","openshiftContainerConfig","openshiftMetricsConfig","openshiftDedicatedConfig","satelliteProductConfig","getCurrentDate","REACT_APP_DEBUG_DEFAULT_DATETIME","setRangedDateTime","subtract","measurement","endOfMeasurement","endOf","currentDateTime","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","rangedYearDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","month","currentYear","year","keyDateTimeRanges","listDateTimeRanges","startDateUpdated","endDateUpdated","dateTime","titleYear","titleIndex","isNextYear","_title","add","current","granularity","timestampDayFormats","downloadData","fileName","fileType","URL","blob","Blob","msSaveBlob","anchorTag","createElement","createObjectURL","style","display","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","debugLog","PageLayout","padding"],"mappings":"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,IAED,mBAAoB,CACnB,IACA,EACA,EACA,IAED,sBAAuB,CACtB,IACA,IAED,2BAA4B,CAC3B,IACA,EACA,EACA,IAED,sCAAuC,CACtC,IACA,IAED,uCAAwC,CACvC,IACA,IAED,kCAAmC,CAClC,IACA,IAED,6BAA8B,CAC7B,IACA,IAED,iBAAkB,CACjB,IAED,mCAAoC,CACnC,IACA,EACA,IAED,0CAA2C,CAC1C,IACA,IAED,qDAAsD,CACrD,IACA,EACA,IAED,kCAAmC,CAClC,IACA,IAED,mCAAoC,CACnC,IACA,EACA,IAED,qBAAsB,CACrB,KAED,+BAAgC,CAC/B,KAED,2BAA4B,CAC3B,IACA,IAED,2BAA4B,CAC3B,IACA,IAED,8BAA+B,CAC9B,KAED,6BAA8B,CAC7B,KAED,6BAA8B,CAC7B,IAED,+BAAgC,CAC/B,KAED,8BAA+B,CAC9B,KAED,8BAA+B,CAC9B,KAED,6BAA8B,CAC7B,IACA,IAED,oCAAqC,CACpC,IACA,IAED,+BAAgC,CAC/B,IACA,EACA,EACA,EACA,EACA,IAED,sCAAuC,CACtC,IACA,EACA,EACA,EACA,EACA,IAED,sCAAuC,CACtC,IACA,IAED,iDAAkD,CACjD,IACA,EACA,EACA,EACA,EACA,GAED,iDAAkD,CACjD,IACA,EACA,EACA,EACA,EACA,GAED,oBAAqB,CACpB,IAED,uBAAwB,CACvB,KAED,qBAAsB,CACrB,KAED,4BAA6B,CAC5B,IAED,mBAAoB,CACnB,KAED,wBAAyB,CACxB,KAED,2BAA4B,CAC3B,KAED,iBAAkB,CACjB,IACA,EACA,IAED,uBAAwB,CACvB,IACA,EACA,EACA,EACA,IAED,uCAAwC,CACvC,IACA,IAED,uCAAwC,CACvC,IACA,EACA,EACA,IAED,yCAA0C,CACzC,IACA,EACA,EACA,IAED,+BAAgC,CAC/B,IACA,EACA,EACA,IAED,8BAA+B,CAC9B,IACA,KAGF,SAAS+a,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAElb,EAAKgb,GAC9B,OAAOlb,QAAQqX,UAAUgE,MAAK,WAC7B,IAAIhI,EAAI,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","file":"static/js/main.92486c2c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport { useMount } from 'react-use';\nimport { routerHelpers } from './routerHelpers';\nimport { Loader } from '../loader/loader';\n\n/**\n * Load routes.\n *\n * @param {object} props\n * @param {Array} props.routes\n * @returns {Node}\n */\nconst Router = ({ routes } = {}) => {\n  const [updatedRoutes, setUpdatedRoutes] = useState([]);\n  const [redirectDefault, setRedirectDefault] = useState(null);\n\n  /**\n   * Initialize routes.\n   */\n  useMount(async () => {\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    const results = await Promise.all(\n      routes.map(async item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        const View = await routerHelpers.importView(item.component);\n\n        return (\n          <Route\n            exact={item.exact}\n            key={item.path}\n            path={item.path}\n            strict={item.strict}\n            render={({ location, ...routeProps }) => {\n              const routeConfig = item.id && routerHelpers.getRouteConfig({ id: item.id });\n              const { URLSearchParams, decodeURIComponent } = window;\n              const parsedSearch = {};\n\n              [\n                ...new Set(\n                  [...new URLSearchParams(decodeURIComponent(location.search))].map(\n                    ([param, value]) => `${param}~${value}`\n                  )\n                )\n              ].forEach(v => {\n                const [param, value] = v.split('~');\n                parsedSearch[param] = value;\n              });\n\n              const updatedLocation = {\n                ...location,\n                parsedSearch\n              };\n\n              return (\n                <View\n                  routeDetail={{\n                    baseName: routerHelpers.baseName,\n                    errorRoute: activateOnErrorRoute,\n                    routes,\n                    routeItem: { ...item },\n                    ...routeConfig\n                  }}\n                  location={updatedLocation}\n                  {...routeProps}\n                />\n              );\n            }}\n          />\n        );\n      })\n    );\n\n    setUpdatedRoutes(results);\n    setRedirectDefault(routes.find(({ disabled, redirect }) => !disabled && redirect) ?? null);\n  });\n\n  return (\n    <React.Suspense fallback={<Loader variant=\"title\" />}>\n      <Switch>\n        {updatedRoutes}\n        {redirectDefault && <ReactRouterDomRedirect to={redirectDefault.redirect} />}\n      </Switch>\n    </React.Suspense>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.boolean,\n      component: PropTypes.string.isRequired,\n      disabled: PropTypes.boolean,\n      exact: PropTypes.boolean,\n      id: PropTypes.string,\n      path: PropTypes.string.isRequired,\n      redirect: PropTypes.string,\n      render: PropTypes.boolean,\n      strict: PropTypes.boolean\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerHelpers.routes\n};\n\nexport { Router as default, Router };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader as RcsPageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Flex, FlexItem, Label as PfLabel } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {boolean} props.includeTour\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst PageHeader = ({ children, includeTour, productLabel, t }) => (\n  <RcsPageHeader>\n    <Flex justifyContent={{ sm: 'justifyContentSpaceBetween' }}>\n      <FlexItem>\n        <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n      </FlexItem>\n      <FlexItem>\n        {includeTour && (\n          <Button variant=\"link\" className=\"uxui-curiosity__button-tour\" isInline>\n            <PfLabel color=\"blue\">{t('curiosity-optin.buttonTour')}</PfLabel>\n          </Button>\n        )}\n      </FlexItem>\n    </Flex>\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, includeTour: boolean, productLabel: string, t: Function}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  includeTour: PropTypes.bool,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{includeTour: boolean, productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  includeTour: false,\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageMessages = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-messages ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageMessages.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageMessages.defaultProps = {\n  className: ''\n};\n\nexport { PageMessages as default, PageMessages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageToolbar = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-toolbar ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageToolbar.defaultProps = {\n  className: ''\n};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {Node|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {Node}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, icon: Node|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    colWidth: PropTypes.array,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  Table as PfTable,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * FixMe: PF tables uses sequentially ordered lists/arrays to denote expandable sections\n * Ideal solution is to nest expandable sections within their respective parents. There\n * are scenarios where manipulating a sequentially ordered list/array can, and will,\n * lead to unintended results. And forces an equal, if not greater, amount of effort on\n * state tracking in the consuming GUI/app. Compounding the issue, the index is used/returned\n * during events for a particular row being \"expanded\". This ends up making after-the-fact\n * application of the expandable list/array items problematic since said index is\n * constantly updating/shifting as rows are dynamically added. Add in a \"not every row\n * needs to be expandable\" scenario, you can start to see the issues. All of that\n * effort means that in some cases it may actually be quicker to simply use PF styles and\n * a HTML table directly, bypassing PF-React entirely.\n *\n * Applying a React node as content in the sequentially ordered list/array appears to\n * automatically \"mount\" said node. How this handles in child components where subsequent\n * AJAX/XHR calls are called means you are potentially hitting an API with dozens of calls,\n * row dependent, even when a user may not expand the nested row/child. This could easily\n * be resolved by nesting and applying the expandable contents after-the-fact.\n */\n/**\n * FixMe: PF tables misalignment of the column headers list/array and row cells breaks the component\n * The related PF error for this is cryptic. An immediate solution would be to simply fix the error\n * messaging, or do a length check before consuming the lists/arrays. This happens when a consumer\n * places more or less column header cells than row cells.\n */\n/**\n * FixMe: PF tables break when an empty list/array is used for the column headers\n * This appears related to the mismatched column header and row cells. The solution is to simply not\n * render the header row instead of throwing an error. This is similar to how the empty rows\n * list/array is handled.\n */\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n * @fires onSort\n */\nclass Table extends React.Component {\n  state = {\n    isCollapsible: false,\n    isSortable: false,\n    sortBy: {},\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (\n      !_isEqualWith(prevProps.rows, rows, customizer) ||\n      !_isEqualWith(prevProps.columnHeaders, columnHeaders, customizer)\n    ) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * FixMe: PF table sort callback doesn't use a zero based index when expandable?\n   * Educated guess there's a cell count happening instead of \"[you have this many data/entry cells]\"\n   * This is really confusing to implement in a consuming application, especially on first\n   * implementation. Special \"collapsible index\" logic had to be implemented to compensate for this\n   * odd behavior.\n   */\n  /**\n   * On column sort\n   *\n   * @event onSort\n   * @param {object} params\n   * @param {number} params.index\n   * @param {string} params.direction\n   * @param {object} params.data\n   */\n  onSort = ({ index, direction, data = {} }) => {\n    const { isCollapsible, updatedColumnHeaders, updatedRows } = this.state;\n    const updatedIndex = isCollapsible ? index - 1 : index;\n\n    updatedRows.forEach(async ({ isOpen }, i) => {\n      if (isOpen === true) {\n        await this.onCollapse({ index: i, isOpen: false });\n      }\n    });\n\n    this.setState(\n      {\n        sortBy: {\n          index,\n          direction\n        }\n      },\n      () =>\n        updatedColumnHeaders[updatedIndex].onSort({\n          direction,\n          index: updatedIndex,\n          label: data?.column?.header?.label\n        })\n    );\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n    const updatedSort = {};\n    let isCollapsible = false;\n    let isSortable = false;\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        isCollapsible = true;\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell?.title !== undefined) {\n          const { title, ...settings } = cell;\n          rowObj.cells.push({ title, ...settings });\n        } else {\n          rowObj.cells.push({\n            title: (React.isValidElement(cell) && cell) || (typeof cell === 'object' && `${cell}`) || cell\n          });\n        }\n      });\n    });\n\n    columnHeaders.forEach((columnHeader, index) => {\n      if (columnHeader?.title !== undefined) {\n        const { onSort, sortActive, sortDirection, title, ...settings } = columnHeader;\n        const tempColumnHeader = {\n          title,\n          ...settings\n        };\n\n        if (onSort) {\n          isSortable = true;\n          tempColumnHeader.transforms = [...(tempColumnHeader?.transforms || []), sortable];\n          tempColumnHeader.onSort = onSort;\n\n          if (sortActive) {\n            updatedSort.sortBy = { index: isCollapsible ? index + 1 : index };\n            updatedSort.sortBy.direction = SortByDirection.asc;\n          }\n\n          if (sortDirection) {\n            updatedSort.sortBy = { ...updatedSort.sortBy, direction: sortDirection };\n          }\n        } else if (tempColumnHeader.transforms) {\n          tempColumnHeader.transforms = tempColumnHeader.transforms.filter(v => v !== sortable);\n        }\n\n        updatedColumnHeaders.push(tempColumnHeader);\n      } else {\n        updatedColumnHeaders.push({\n          title:\n            (React.isValidElement(columnHeader) && columnHeader) ||\n            (typeof columnHeader === 'object' && `${columnHeader}`) ||\n            columnHeader\n        });\n      }\n    });\n\n    this.setState({\n      isCollapsible,\n      isSortable,\n      updatedColumnHeaders,\n      updatedRows,\n      ...updatedSort\n    });\n  }\n\n  /**\n   * FixMe: PF Tables automatically applies an expandable className when using the \"onCollapse\" prop?\n   * Not every row may need to be expandable. In certain scenarios a table may have no expandable\n   * sections, however it appears the \"onCollapse\" styling, and additionally added \"table cells\" are still\n   * applied.\n   */\n  /**\n   * Apply props to table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { isCollapsible, isSortable, sortBy, updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    const pfTableProps = {};\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    if (isCollapsible) {\n      pfTableProps.onCollapse = (event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data });\n    }\n\n    if (isSortable) {\n      pfTableProps.sortBy = sortBy;\n      pfTableProps.onSort = (event, index, direction, data) => this.onSort({ event, index, direction, data });\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n          {...pfTableProps}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: Node,\n *     isHeader: boolean, variant: string, className: string, rows: Array, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        onSort: PropTypes.func,\n        sortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)]),\n        title: PropTypes.node.isRequired\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.instanceOf(Date),\n          PropTypes.shape({\n            title: PropTypes.oneOfType([PropTypes.node, PropTypes.instanceOf(Date)]).isRequired\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","/**\n * RHSM response Error DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA = 'errors';\n\n/**\n * RHSM response Error DATA types.\n * Schema/map of expected Error data response properties.\n *\n * @type {{CODE: string, DETAIL: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_TYPES = {\n  CODE: 'code',\n  DETAIL: 'detail'\n};\n\n/**\n * RHSM response Error DATA CODE types.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response links type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS = 'links';\n\n/**\n * RHSM response LINKS type.\n * Schema/map of expected inventory LINKS response properties.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS_TYPES = {\n  FIRST: 'first',\n  LAST: 'last',\n  PREVIOUS: 'previous',\n  NEXT: 'next'\n};\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response META types.\n * Schema/map of expected META response properties.\n *\n * @type {{COUNT: string, TOTAL_INSTANCE_HOURS: string, TOTAL_CORE_HOURS: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  TOTAL_CORE_HOURS: 'total_core_hours',\n  TOTAL_INSTANCE_HOURS: 'total_instance_hours'\n};\n\n/**\n * RHSM response Capacity DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\n\n/**\n * RHSM response Capacity DATA types.\n * Schema/map of expected Capacity data response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string,\n *     HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response inventory DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA = 'data';\n\n/**\n * RHSM response inventory DATA types.\n * Schema/map of expected inventory DATA response properties.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, SUBSCRIPTION_ID: string,\n *     INVENTORY_ID: string, MEASUREMENT: string, ID: string, GUESTS: string, CLOUD_PROVIDER: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA_TYPES = {\n  CLOUD_PROVIDER: 'cloud_provider',\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  GUESTS: 'number_of_guests',\n  HARDWARE: 'hardware_type',\n  ID: 'insights_id',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets',\n  SUBSCRIPTION_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response inventory guests DATA types.\n * Schema/map of expected inventory guests DATA response properties.\n *\n * @type {{SUBSCRIPTION_ID: string, ID: string, NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES = {\n  ID: 'insights_id',\n  NAME: 'display_name',\n  SUBSCRIPTION_ID: 'subscription_manager_id',\n  LAST_SEEN: 'last_seen'\n};\n\n/**\n * RHSM response subscriptions inventory DATA types.\n *\n * @type {{UOM: string, PHYSICAL_CAPACITY: string, USAGE: string, UPCOMING_EVENT_TYPE: string,\n *     UPCOMING_EVENT_DATE: string, SUBSCRIPTION_NUMBERS: string, VIRTUAL_CAPACITY: string,\n *     TOTAL_CAPACITY: string, SKU: string, SERVICE_LEVEL: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES = {\n  SKU: 'sku',\n  PRODUCT_NAME: 'product_name',\n  SERVICE_LEVEL: 'service_level',\n  USAGE: 'usage',\n  SUBSCRIPTION_NUMBERS: 'subscription_numbers',\n  UPCOMING_EVENT_DATE: 'upcoming_event_date',\n  UPCOMING_EVENT_TYPE: 'upcoming_event_type',\n  PHYSICAL_CAPACITY: 'physical_capacity',\n  VIRTUAL_CAPACITY: 'virtual_capacity',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Reporting/Tally DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\n\n/**\n * RHSM response Reporting/Tally DATA types.\n * Schema/map of expected Reporting/Tally DATA response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, INSTANCE_HOURS: string, SOCKETS: string, CLOUD_CORES: string,\n *     HAS_DATA: string, PHYSICAL_SOCKETS: string, PHYSICAL_CORES: string, CLOUD_INSTANCES: string, DATE: string,\n *     CORE_HOURS: string, CLOUD_SOCKETS: string, HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string,\n *     HYPERVISOR_CORES: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORE_HOURS: 'core_hours',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  INSTANCE_HOURS: 'instance_hours',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM product id type values.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string,\n *     OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string}}\n */\nconst RHSM_API_PATH_ID_TYPES = {\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  OPENSHIFT: 'OpenShift Container Platform',\n  OPENSHIFT_METRICS: 'OpenShift-metrics',\n  OPENSHIFT_DEDICATED_METRICS: 'OpenShift-dedicated-metrics',\n  SATELLITE: 'Satellite',\n  SATELLITE_CAPSULE: 'Satellite Capsule',\n  SATELLITE_SERVER: 'Satellite Server'\n};\n\n/**\n * RHSM API query/search parameter of GRANULARITY type values.\n * Schema/map of expected query/search parameter granularity types.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, MEASUREMENT: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_SORT_TYPES = {\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  HARDWARE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{UOM: string, PHYSICAL_CAPACITY: string, USAGE: string, UPCOMING_EVENT_DATE: string,\n *     VIRTUAL_CAPACITY: string, TOTAL_CAPACITY: string, SKU: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES = {\n  SKU: 'sku',\n  PRODUCT_NAME: 'product_name',\n  SERVICE_LEVEL: 'service_level',\n  USAGE: 'usage',\n  UPCOMING_EVENT_DATE: 'upcoming_event_date',\n  PHYSICAL_CAPACITY: 'physical_capacity',\n  VIRTUAL_CAPACITY: 'virtual_capacity',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\n/**\n * RHSM API query/search parameter SLA type values.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_QUERY_SLA_TYPES = {\n  PREMIUM: 'premium',\n  STANDARD: 'standard',\n  SELF: 'self-support',\n  NONE: ''\n};\n\n/**\n * RHSM API query/search parameter UOM type values.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_QUERY_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter USAGE type values.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_QUERY_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\n/**\n * RHSM API query/search parameter OPTIN type values.\n *\n * @type {{TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_SET_OPTIN_TYPES = {\n  CONDUIT_SYNC: 'enable_conduit_sync',\n  TALLY_REPORT: 'enable_tally_reporting',\n  TALLY_SYNC: 'enable_tally_sync'\n};\n\n/**\n * RHSM API query/search parameter CAPACITY type values.\n *\n * @type {{GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string}}\n */\nconst RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES = {\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  DIRECTION: 'dir',\n  DISPLAY_NAME: 'display_name_contains',\n  END_DATE: 'ending',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  START_DATE: 'beginning',\n  UOM: 'uom',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM API query/search parameter GUESTS INVENTORY type values.\n *\n * @type {{OFFSET: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES = {\n  LIMIT: 'limit',\n  OFFSET: 'offset'\n};\n\n/**\n * RHSM API query/search parameter SUBSCRIPTIONS INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string, SLA: string,\n *     LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES = {\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES\n};\n\n/**\n * RHSM API query/search parameter values.\n *\n * @type {{GRANULARITY: string, TALLY_SYNC: string, DIRECTION: string, END_DATE: string,\n *     SLA: string, START_DATE: string, LIMIT: string, UOM: string, TALLY_REPORT: string,\n *     USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_TYPES = {\n  ...RHSM_API_QUERY_SET_OPTIN_TYPES,\n  ...RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\n/**\n * RHSM API types.\n *\n * @type {{RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string,\n *     OFFSET: string, SLA: string, LIMIT: string}, RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES: {UOM: string,\n *     PHYSICAL_CAPACITY: string, USAGE: string, UPCOMING_EVENT_TYPE: string, UPCOMING_EVENT_DATE: string,\n *     SUBSCRIPTION_NUMBERS: string, VIRTUAL_CAPACITY: string, TOTAL_CAPACITY: string, SKU: string,\n *     SERVICE_LEVEL: string}, RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES: {GENERIC: string, OPTIN: string},\n *     RHSM_API_RESPONSE_INVENTORY_DATA: string, RHSM_API_RESPONSE_CAPACITY_DATA: string,\n *     RHSM_API_RESPONSE_ERROR_DATA_TYPES: {CODE: string, DETAIL: string},\n *     RHSM_API_RESPONSE_CAPACITY_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string},\n *     RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES: {UOM: string, PHYSICAL_CAPACITY: string, USAGE: string,\n *     UPCOMING_EVENT_DATE: string, VIRTUAL_CAPACITY: string, TOTAL_CAPACITY: string, SKU: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string}, RHSM_API_RESPONSE_META_TYPES: {COUNT: string, TOTAL_INSTANCE_HOURS: string,\n *     TOTAL_CORE_HOURS: string}, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string,\n *     DAILY: string, MONTHLY: string}, RHSM_API_QUERY_SORT_DIRECTION_TYPES: {ASCENDING: string, DESCENDING: string},\n *     RHSM_API_RESPONSE_PRODUCTS_DATA: string, RHSM_API_QUERY_TYPES: {GRANULARITY: string, TALLY_SYNC: string,\n *     DIRECTION: string, END_DATE: string, SLA: string, START_DATE: string, LIMIT: string, UOM: string,\n *     TALLY_REPORT: string, USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string},\n *     RHSM_API_RESPONSE_LINKS: string, RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES: {OFFSET: string, LIMIT: string},\n *     RHSM_API_PATH_ID_TYPES: {RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string,\n *     OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string},\n *     RHSM_API_QUERY_SET_OPTIN_TYPES: {TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string},\n *     RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_SET_INVENTORY_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}, RHSM_API_QUERY_SORT_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string,\n *     SOCKETS: string, MEASUREMENT: string, LAST_SEEN: string, NAME: string},\n *     RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, INSTANCE_HOURS: string,\n *     SOCKETS: string, CLOUD_CORES: string, HAS_DATA: string, PHYSICAL_SOCKETS: string, PHYSICAL_CORES: string,\n *     CLOUD_INSTANCES: string, DATE: string, CORE_HOURS: string, CLOUD_SOCKETS: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HYPERVISOR_CORES: string}, RHSM_API_QUERY_UOM_TYPES: {CORES: string,\n *     SOCKETS: string}, RHSM_API_RESPONSE_LINKS_TYPES: string,\n *     RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES: {SUBSCRIPTION_ID: string, ID: string, NAME: string,\n *     LAST_SEEN: string}, RHSM_API_RESPONSE_ERROR_DATA: string, RHSM_API_RESPONSE_META: string,\n *     RHSM_API_RESPONSE_INVENTORY_DATA_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string,\n *     SUBSCRIPTION_ID: string, INVENTORY_ID: string, MEASUREMENT: string, ID: string, GUESTS: string,\n *     CLOUD_PROVIDER: string, LAST_SEEN: string, NAME: string},\n *     RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string,\n *     START_DATE: string}}}\n */\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n","import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Router } from './router';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\n/**\n * A routing redirect.\n *\n * @param {object} props\n * @param {string} props.baseName\n * @param {boolean} props.isForced\n * @param {string} props.route\n * @param {string} props.routes\n * @param {string} props.url\n * @returns {Node}\n */\nconst Redirect = ({ baseName, isForced, route, routes, url }) => {\n  /**\n   * Bypass router, force the location.\n   */\n  const forceNavigation = () => {\n    const { hash = '', search = '' } = window.location;\n    const forcePath = url || (route && `${path.join(baseName, route)}${search}${hash}`);\n\n    window.location.replace(forcePath);\n  };\n\n  const { path: matchedRoutePath, ...matchedRoute } = routerHelpers.getRouteConfig({ pathName: route, id: route });\n\n  if (!isForced && matchedRoutePath) {\n    return <Router routes={[{ ...matchedRoute, path: '*' }, ...routes]} />;\n  }\n\n  forceNavigation();\n\n  return (helpers.TEST_MODE && <React.Fragment>Redirected towards {url || route}</React.Fragment>) || null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, routes: Array, isReplace: boolean, baseName: string, url: string,\n *    isForced: boolean}}\n */\nRedirect.propTypes = {\n  baseName: PropTypes.string,\n  isForced: PropTypes.bool,\n  route: PropTypes.string,\n  routes: PropTypes.array,\n  url: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isRedirect: boolean, route: string, routes: Array, isReplace: boolean, baseName: string, url: string,\n *    isForced: boolean}}\n */\nRedirect.defaultProps = {\n  baseName: routerHelpers.baseName,\n  isForced: false,\n  route: null,\n  routes: routerHelpers.routes,\n  url: null\n};\n\nexport { Redirect as default, Redirect };\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, Trans } from 'react-i18next';\nimport { useMount } from 'react-use';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string} translateKey\n * @param {string|Array} values A default string if the key can't be found. An array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @returns {string|Node}\n */\nconst translate = (translateKey, values = null, components) => {\n  const updatedValues = values;\n\n  if (Array.isArray(updatedValues?.context)) {\n    updatedValues.context = updatedValues.context.join('_');\n  }\n\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(translateKey, updatedValues, components);\n  }\n\n  if (components) {\n    return (\n      (i18next.store && <Trans i18nKey={translateKey} values={updatedValues} components={components} />) || (\n        <React.Fragment>t({translateKey})</React.Fragment>\n      )\n    );\n  }\n\n  return (i18next.store && i18next.t(translateKey, updatedValues)) || `t(${translateKey})`;\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {Node} Component\n * @returns {Node}\n */\nconst translateComponent = Component => {\n  const withTranslation = ({ ...props }) => (\n    <Component\n      {...props}\n      t={(i18next.store && translate) || helpers.noopTranslate}\n      i18n={(i18next.store && i18next) || helpers.noop}\n    />\n  );\n\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\n/**\n * Load I18n.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.fallbackLng\n * @param {string} props.loadPath\n * @param {string} props.locale\n * @returns {Node}\n */\nconst I18n = ({ children, fallbackLng, loadPath, locale }) => {\n  const [initialized, setInitialized] = useState(false);\n\n  /**\n   * Initialize i18next\n   */\n  useMount(async () => {\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: undefined,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      //\n    }\n\n    setInitialized(true);\n  });\n\n  /**\n   * Update locale.\n   */\n  useEffect(() => {\n    if (initialized) {\n      try {\n        i18next.changeLanguage(locale);\n      } catch (e) {\n        //\n      }\n    }\n  }, [initialized, locale]);\n\n  return (initialized && <React.Fragment>{children}</React.Fragment>) || <React.Fragment />;\n};\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: Node, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { helpers } from '../../common';\n\n/**\n * Render page columns based on children.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageColumns = ({ children, className }) => (\n  <Flex\n    alignItems={{ sm: 'alignItemsStretch' }}\n    spaceItems={{ sm: 'spaceItemsNone' }}\n    className={`curiosity-page-columns ${className}`}\n  >\n    {React.Children.toArray(children)\n      .filter(child => React.isValidElement(child))\n      .map(child => (\n        <FlexItem\n          key={(child.key && `page-column-${child.key}`) || helpers.generateId()}\n          grow={{ sm: 'grow' }}\n          className=\"curiosity-page-columns-column\"\n        >\n          {child}\n        </FlexItem>\n      ))}\n  </Flex>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageColumns.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageColumns.defaultProps = {\n  className: ''\n};\n\nexport { PageColumns as default, PageColumns };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageSection = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-section ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageSection.defaultProps = {\n  className: ''\n};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cellWidth, TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {Array} props.colWidth\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableSkeleton = ({ className, borders, colCount, colWidth, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map((value, index) => {\n    const updatedHeader = { title: <Skeleton size={SkeletonSize.md} /> };\n\n    if (typeof colWidth[index] === 'number') {\n      updatedHeader.transforms = [cellWidth(colWidth[index])];\n    }\n\n    return updatedHeader;\n  });\n\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />)\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: string,\n *     className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.arrayOf(PropTypes.number),\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: null,\n *     className: null, rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  colWidth: [],\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {Node|Function} props.icon\n * @param {Node} props.message\n * @param {string} props.tableHeading\n * @param {Node} props.title\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, variant: string, message: Node, title: Node, tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router';\nimport Authentication from './authentication/authentication';\n\n/**\n * Application\n *\n * @augments React.Component\n */\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n    getLocale();\n  }\n\n  /**\n   * Render application.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <NotificationsPortal />\n        <Authentication>\n          <Router />\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{locale: object, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\n/**\n * Default props.\n *\n * @type {{locale: {}, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { connectRouter, reduxActions, reduxSelectors } from '../../redux';\nimport { rhsmApiTypes } from '../../types';\nimport { helpers } from '../../common';\nimport { routerHelpers, Redirect } from '../router';\nimport MessageView from '../messageView/messageView';\nimport { translate } from '../i18n/i18n';\n\n/**\n * An authentication pass-through component.\n *\n * @augments React.Component\n */\nclass Authentication extends Component {\n  appName = routerHelpers.appName;\n\n  removeListeners = helpers.noop;\n\n  async componentDidMount() {\n    const {\n      authorizeUser,\n      hideGlobalFilter,\n      history,\n      initializeChrome,\n      onNavigation,\n      session,\n      setAppName\n    } = this.props;\n    const { subscriptions: authorized } = session.authorized || {};\n\n    if (!authorized) {\n      await authorizeUser();\n    }\n\n    if (!helpers.DEV_MODE) {\n      initializeChrome();\n      setAppName(this.appName);\n      hideGlobalFilter();\n\n      const appNav = onNavigation(event => {\n        const { routeHref } = routerHelpers.getRouteConfig({ id: event.navId });\n        history.push(routeHref);\n      });\n\n      this.removeListeners = () => {\n        appNav();\n      };\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  /**\n   * Render authenticated children or messaging.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children, session, t } = this.props;\n    const { subscriptions: authorized } = session.authorized || {};\n\n    if (helpers.UI_DISABLED) {\n      return (\n        <MessageView>\n          <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n        </MessageView>\n      );\n    }\n\n    if (authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (session.errorCodes && session.errorCodes.includes(rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES.OPTIN)) ||\n      session.status === 418\n    ) {\n      return <Redirect route={routerHelpers.getErrorRoute.path} />;\n    }\n\n    return (\n      <MessageView>\n        <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n      </MessageView>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, t: Function,\n *     children: Node, initializeChrome: Function, session: object, history: object,\n *     hideGlobalFilter: Function}}\n */\nAuthentication.propTypes = {\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  hideGlobalFilter: PropTypes.func,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  initializeChrome: PropTypes.func,\n  onNavigation: PropTypes.func,\n  setAppName: PropTypes.func,\n  session: PropTypes.shape({\n    authorized: PropTypes.shape({\n      [routerHelpers.appName]: PropTypes.bool\n    }),\n    errorCodes: PropTypes.arrayOf(PropTypes.string),\n    pending: PropTypes.bool,\n    status: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, t: translate,\n *     initializeChrome: Function, session: {authorized: object, errorCodes: Array, pending: boolean,\n *     status: number}, hideGlobalFilter: Function}}\n */\nAuthentication.defaultProps = {\n  authorizeUser: helpers.noop,\n  hideGlobalFilter: helpers.noop,\n  initializeChrome: helpers.noop,\n  onNavigation: helpers.noop,\n  setAppName: helpers.noop,\n  session: {\n    authorized: {},\n    errorCodes: [],\n    pending: false,\n    status: null\n  },\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser()),\n  hideGlobalFilter: isHidden => dispatch(reduxActions.platform.hideGlobalFilter(isHidden)),\n  initializeChrome: () => dispatch(reduxActions.platform.initializeChrome()),\n  onNavigation: callback => dispatch(reduxActions.platform.onNavigation(callback)),\n  setAppName: name => dispatch(reduxActions.platform.setAppName(name))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.user.makeUserSession();\n\nconst ConnectedAuthentication = connectRouter(makeMapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string} key\n * @param {string|object} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) =>\n  `t(${key}${(value && `, ${(typeof value === 'string' && value) || (value && JSON.stringify(value))}`) || ''}${\n    (components && `, ${components}`) || ''\n  })`;\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the current hosts inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_HOSTS = process.env.REACT_APP_UI_DISABLED_TABLE_HOSTS === 'true';\n\n/**\n * Disable the current subscriptions inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_SUBSCRIPTIONS = process.env.REACT_APP_UI_DISABLED_TABLE_SUBSCRIPTIONS === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * A url, or uri, for \"recommend actions\"\n *\n * @type {string}\n */\nconst UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS = process.env.REACT_APP_UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI state logging file name.\n *\n * @type {string}\n */\nconst UI_LOGGER_FILE = process.env.REACT_APP_UI_LOGGER_FILE || 'debug_log_{0}.json';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  browserExpose,\n  generateId,\n  isDate,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TABLE_HOSTS,\n  UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_LOGGER_FILE,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","/**\n * Platform response for appNavClick.\n *\n * @type {{ACTIVE_APP: string}}\n */\nconst PLATFORM_API_RESPONSE_NAV_TYPES = {\n  ACTIVE_APP: 'activeApp'\n};\n\n/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string, RESOURCE_DEFS: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\n/**\n * Platform API types.\n *\n * @type {{PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES: {USER: string},\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS: string, PLATFORM_API_RESPONSE_USER_IDENTITY: string,\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES: {ENTITLED: string},\n *     PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES: {ORG_ADMIN: string}}}\n */\nconst platformApiTypes = {\n  PLATFORM_API_RESPONSE_NAV_TYPES,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformApiTypes as default,\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_NAV_TYPES,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { routerHelpers } from './components/router';\nimport { store } from './redux';\nimport App from './components/app';\nimport './styles/index.scss';\nimport '@patternfly/react-styles/css/components/Select/select.css';\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter basename={routerHelpers.baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","var map = {\n\t\"./app.js\": [\n\t\t234\n\t],\n\t\"./authentication/authentication.js\": [\n\t\t235\n\t],\n\t\"./bannerMessages/bannerMessages.js\": [\n\t\t614,\n\t\t34\n\t],\n\t\"./chart/chart.js\": [\n\t\t607,\n\t\t0,\n\t\t2,\n\t\t22\n\t],\n\t\"./chart/chartContext.js\": [\n\t\t586,\n\t\t35\n\t],\n\t\"./chart/chartElements.js\": [\n\t\t598,\n\t\t0,\n\t\t2,\n\t\t24\n\t],\n\t\"./chart/chartHelpers.js\": [\n\t\t600,\n\t\t14\n\t],\n\t\"./chart/chartIcon.js\": [\n\t\t591,\n\t\t36\n\t],\n\t\"./chart/chartLegend.js\": [\n\t\t599,\n\t\t13\n\t],\n\t\"./chart/chartTooltip.js\": [\n\t\t596,\n\t\t37\n\t],\n\t\"./form/checkbox.js\": [\n\t\t626,\n\t\t23\n\t],\n\t\"./form/formHelpers.js\": [\n\t\t593,\n\t\t38\n\t],\n\t\"./form/formState.js\": [\n\t\t627,\n\t\t15\n\t],\n\t\"./form/select.js\": [\n\t\t588,\n\t\t0,\n\t\t1,\n\t\t39\n\t],\n\t\"./form/textInput.js\": [\n\t\t601,\n\t\t20\n\t],\n\t\"./graphCard/graphCard.js\": [\n\t\t608,\n\t\t0,\n\t\t2,\n\t\t17\n\t],\n\t\"./graphCard/graphCardChartLegend.js\": [\n\t\t603,\n\t\t28\n\t],\n\t\"./graphCard/graphCardChartTooltip.js\": [\n\t\t602,\n\t\t25\n\t],\n\t\"./graphCard/graphCardHelpers.js\": [\n\t\t592,\n\t\t40\n\t],\n\t\"./guestsList/guestsList.js\": [\n\t\t597,\n\t\t32\n\t],\n\t\"./i18n/i18n.js\": [\n\t\t21\n\t],\n\t\"./inventoryList/inventoryList.js\": [\n\t\t609,\n\t\t3,\n\t\t12\n\t],\n\t\"./inventoryList/inventoryListHelpers.js\": [\n\t\t589,\n\t\t41\n\t],\n\t\"./inventorySubscriptions/inventorySubscriptions.js\": [\n\t\t610,\n\t\t3,\n\t\t18\n\t],\n\t\"./inventoryTabs/inventoryTab.js\": [\n\t\t595,\n\t\t42\n\t],\n\t\"./inventoryTabs/inventoryTabs.js\": [\n\t\t611,\n\t\t4,\n\t\t27\n\t],\n\t\"./loader/loader.js\": [\n\t\t195\n\t],\n\t\"./messageView/messageView.js\": [\n\t\t147\n\t],\n\t\"./minHeight/minHeight.js\": [\n\t\t590,\n\t\t43\n\t],\n\t\"./optinView/optinView.js\": [\n\t\t631,\n\t\t19\n\t],\n\t\"./pageLayout/pageColumns.js\": [\n\t\t210\n\t],\n\t\"./pageLayout/pageHeader.js\": [\n\t\t136\n\t],\n\t\"./pageLayout/pageLayout.js\": [\n\t\t93\n\t],\n\t\"./pageLayout/pageMessages.js\": [\n\t\t137\n\t],\n\t\"./pageLayout/pageSection.js\": [\n\t\t211\n\t],\n\t\"./pageLayout/pageToolbar.js\": [\n\t\t138\n\t],\n\t\"./pagination/pagination.js\": [\n\t\t594,\n\t\t33\n\t],\n\t\"./pagination/paginationHelpers.js\": [\n\t\t587,\n\t\t44\n\t],\n\t\"./productView/productView.js\": [\n\t\t615,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t11\n\t],\n\t\"./productView/productViewDefault.js\": [\n\t\t628,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t10\n\t],\n\t\"./productView/productViewMissing.js\": [\n\t\t632,\n\t\t21\n\t],\n\t\"./productView/productViewOpenShiftContainer.js\": [\n\t\t629,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t8\n\t],\n\t\"./productView/productViewOpenShiftDedicated.js\": [\n\t\t630,\n\t\t0,\n\t\t1,\n\t\t2,\n\t\t3,\n\t\t9\n\t],\n\t\"./router/index.js\": [\n\t\t61\n\t],\n\t\"./router/redirect.js\": [\n\t\t208\n\t],\n\t\"./router/router.js\": [\n\t\t133\n\t],\n\t\"./router/routerHelpers.js\": [\n\t\t68\n\t],\n\t\"./table/table.js\": [\n\t\t196\n\t],\n\t\"./table/tableEmpty.js\": [\n\t\t228\n\t],\n\t\"./table/tableSkeleton.js\": [\n\t\t227\n\t],\n\t\"./tabs/tabs.js\": [\n\t\t604,\n\t\t4,\n\t\t45\n\t],\n\t\"./toolbar/toolbar.js\": [\n\t\t613,\n\t\t0,\n\t\t1,\n\t\t3,\n\t\t26\n\t],\n\t\"./toolbar/toolbarFieldDisplayName.js\": [\n\t\t606,\n\t\t16\n\t],\n\t\"./toolbar/toolbarFieldGranularity.js\": [\n\t\t612,\n\t\t0,\n\t\t1,\n\t\t29\n\t],\n\t\"./toolbar/toolbarFieldRangedMonthly.js\": [\n\t\t620,\n\t\t0,\n\t\t1,\n\t\t30\n\t],\n\t\"./toolbar/toolbarFieldUom.js\": [\n\t\t623,\n\t\t0,\n\t\t1,\n\t\t31\n\t],\n\t\"./toolbar/toolbarHelpers.js\": [\n\t\t605,\n\t\t46\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 394;\nmodule.exports = webpackAsyncContext;","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(({ schema = {}, data, customResponseValue, keyPrefix: prefix }) => {\n    const isArray = Array.isArray(data);\n    const updatedData = (isArray && data) || (data && [data]) || [];\n    const [generatedSchema = {}] = setResponseSchemas([schema]);\n    const parsedResponse = [];\n\n    updatedData.forEach((value, index) => {\n      const generateReflectedData = ({ dataObj, keyPrefix = '', customValue = null, update = helpers.noop }) => {\n        const updatedDataObj = {};\n\n        Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n          const casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n          let val = dataObjValue;\n\n          if (typeof val === 'number') {\n            val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n          }\n\n          if (typeof customValue === 'function') {\n            updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n          } else {\n            updatedDataObj[casedDataObjKey] = val;\n          }\n        });\n\n        update(updatedDataObj);\n      };\n\n      generateReflectedData({\n        keyPrefix: prefix,\n        dataObj: { ...generatedSchema, ...value },\n        customValue: customResponseValue,\n        update: generatedData => parsedResponse.push(generatedData)\n      });\n    });\n\n    parsedResponses.push(parsedResponse);\n  });\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 400 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    delete updatedMeta.data;\n    delete updatedMeta.id;\n    delete updatedMeta.query;\n\n    return {\n      meta: { ...updatedMeta },\n      metaData: meta.data,\n      metaId: meta.id,\n      metaQuery: meta.query\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { platformApiTypes } from '../../types';\n\n/**\n * Modify actions' payload for privacy.\n *\n * @param {object} action\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeActionHeaders = ({ payload, ...action }) => {\n  if (payload) {\n    let updatedPayload = { ...payload, headers: {} };\n\n    if (Array.isArray(payload)) {\n      updatedPayload = payload.map(({ headers, ...obj }) => ({ ...obj, headers: {} }));\n    }\n\n    return { payload: updatedPayload, ...action };\n  }\n\n  return { ...action };\n};\n\n/**\n * Modify actions' payload data for privacy.\n *\n * @param {object} action\n * @param {string} action.type\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeData = ({ type, payload, ...action }) => {\n  const removeUserIdentity = obj => {\n    if (obj?.data?.user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]) {\n      return {\n        ...obj,\n        data: {\n          ...obj.data,\n          user: {\n            ...obj.data.user,\n            [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]: {\n              ...obj.data.user[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY],\n              [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]: {}\n            }\n          }\n        }\n      };\n    }\n\n    return undefined;\n  };\n\n  const updatedPayload = removeUserIdentity(payload) || payload;\n  const updatedAction = removeUserIdentity(action) || action;\n\n  if (updatedPayload) {\n    return { type, payload: updatedPayload, ...updatedAction };\n  }\n\n  return { type, ...updatedAction };\n};\n\n/**\n * Return existing sessionStorage log.\n *\n * @param {string} id\n * @param {number} limit\n * @returns {Array}\n */\nconst getActions = (id, limit) => {\n  const { sessionStorage } = window;\n  const item = sessionStorage.getItem(id);\n  let parsedItems = (item && (JSON.parse(item) || {})?.actions) || [];\n\n  if (parsedItems?.length && limit > 0) {\n    parsedItems = parsedItems.slice(limit * -1);\n  }\n\n  return parsedItems;\n};\n\n/**\n * Store actions against an id in sessionStorage.\n *\n * @param {object} action\n * @param {object} config\n * @param {number} config.id\n * @param {number} config.limit\n */\nconst recordAction = (action, { id, limit, ...config }) => {\n  const { navigator, sessionStorage } = window;\n  const items = getActions(id, limit) || [];\n  const priorItem = items[items.length - 1];\n  const updatedAction = sanitizeData(sanitizeActionHeaders(action));\n  const actionObj = {\n    diff: 0,\n    timestamp: Date.now(),\n    action: updatedAction\n  };\n\n  if (priorItem && priorItem.timestamp) {\n    actionObj.diff = actionObj.timestamp - priorItem.timestamp;\n  }\n\n  items.push(actionObj);\n  sessionStorage.setItem(\n    id,\n    JSON.stringify({\n      browser: navigator.userAgent,\n      timestamp: new Date().toLocaleString(),\n      ...config,\n      actions: items\n    })\n  );\n};\n\n/**\n * Expose settings and record middleware.\n *\n * @param {object} config\n * @returns {Function}\n */\nconst actionRecordMiddleware = (config = {}) => () => next => action => {\n  recordAction(action, {\n    id: 'actionRecordMiddleware/v1',\n    limit: 100,\n    ...config\n  });\n\n  return next(action);\n};\n\nexport { actionRecordMiddleware as default, actionRecordMiddleware };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { actionRecordMiddleware } from './actionRecordMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  actionRecordMiddleware({\n    id: process.env.REACT_APP_UI_LOGGER_ID,\n    app: { version: process.env.REACT_APP_UI_VERSION }\n  }),\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","const SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","const SET_INVENTORY_TAB = 'SET_INVENTORY_TAB';\n\n/**\n * Inventory action, reducer types.\n *\n * @type {{SET_INVENTORY_TAB: string}}\n */\nconst inventoryTypes = {\n  SET_INVENTORY_TAB\n};\n\nexport { inventoryTypes as default, inventoryTypes, SET_INVENTORY_TAB };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_GLOBAL_FILTER_HIDE = 'PLATFORM_GLOBAL_FILTER_HIDE';\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_GLOBAL_FILTER_HIDE: string, PLATFORM_INIT: string,\n *     PLATFORM_SET_NAV: string, PLATFORM_CLEAR_NOTIFICATIONS: string, PLATFORM_ADD_NOTIFICATION: string,\n *     PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n","import { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\nconst SET_QUERY_RESET_INVENTORY_LIST = 'SET_QUERY_RESET_INVENTORY_LIST';\n\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.END_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.END_DATE}`,\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.START_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.START_DATE}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\nconst SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DISPLAY_NAME}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\nconst SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES: object, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string,\n *     SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES: object, SET_QUERY_RESET_INVENTORY_LIST: string}}\n */\nconst queryTypes = {\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n","const GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\nconst GET_MESSAGE_REPORTS_RHSM = 'GET_MESSAGE_REPORTS_RHSM';\nconst GET_SUBSCRIPTIONS_INVENTORY_RHSM = 'GET_SUBSCRIPTIONS_INVENTORY_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_MESSAGE_REPORTS_RHSM: string,\n * GET_HOSTS_INVENTORY_GUESTS_RHSM: string, GET_SUBSCRIPTIONS_INVENTORY_RHSM: string,\n * GET_HOSTS_INVENTORY_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_AUTH: string, USER_LOCALE: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_AUTH,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { inventoryTypes } from './inventoryTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  inventory: inventoryTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  inventoryTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","const SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}}}\n */\nconst initialState = {\n  legend: {},\n  reportCapacity: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          ...action.legend\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [{ ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM }],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { inventoryTypes } from '../types';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{subscriptionsInventory: {}, tabs: {}, hostsInventory: {}, hostsGuests: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {},\n  subscriptionsInventory: {},\n  tabs: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system and subscriptions inventory to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inventoryTypes.SET_INVENTORY_TAB:\n      return reduxHelpers.setStateProp(\n        'tabs',\n        {\n          ...action.tabs\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n          { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM },\n          { ref: 'subscriptionsInventory', type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{report: {}}}\n */\nconst initialState = {\n  report: {}\n};\n\n/**\n * Generated daily observer/reducer for report to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst messagesReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [{ ref: 'report', type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM }],\n    state,\n    action\n  );\n\nmessagesReducer.initialState = initialState;\n\nexport { messagesReducer as default, initialState, messagesReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, userTypes } from '../types';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{session: {errorCodes: Array, locale: string}, optin: {}}}\n */\nconst initialState = {\n  optin: {},\n  session: {\n    errorCodes: [],\n    locale: null\n  }\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(\n          reduxHelpers.getDataFromResults(action),\n          [rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA],\n          []\n        );\n\n        return reduxHelpers.setStateProp(\n          'session',\n          {\n            error: true,\n            errorCodes: errorCodes.map(value => value[rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE]),\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            locale: state.session.locale,\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'session', type: userTypes.USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { routerHelpers } from '../../components/router';\nimport { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphTallyQuery: {}, inventoryHostsQuery: {}, inventorySubscriptionsQuery: {}, query: {},\n *     inventoryGuestsQuery: {}}}\n */\nconst initialState = {\n  query: {},\n  graphTallyQuery: {},\n  inventoryGuestsQuery: {},\n  inventoryHostsQuery: {},\n  inventorySubscriptionsQuery: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST:\n      const updateResetQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n\n          delete productQuery[RHSM_API_QUERY_TYPES.DIRECTION];\n          delete productQuery[RHSM_API_QUERY_TYPES.SORT];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateResetQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateResetQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updateClearQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateClearQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateClearQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'graphTallyQuery',\n        {\n          [action.viewId]: {\n            ...state.graphTallyQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.START_DATE]: action[RHSM_API_QUERY_TYPES.START_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.END_DATE]: action[RHSM_API_QUERY_TYPES.END_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: action[RHSM_API_QUERY_TYPES.DISPLAY_NAME]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport messagesReducer from './messagesReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  messages: messagesReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  messagesReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","import _set from 'lodash/set';\nimport { helpers } from '../common';\nimport {\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES\n} from '../types/platformApiTypes';\n\n/**\n * Basic user authentication.\n *\n * @returns {Promise<void>}\n */\nconst getUser = async () => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE &&\n        _set(\n          {},\n          [\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n          ],\n          process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n        )) ||\n      (await insights.chrome.auth.getUser())\n    );\n  } catch (e) {\n    throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n  }\n};\n\n/**\n * FixMe: revert this back towards async/await\n * Removed because there appears to be some quirky behavior where permissions will not come through\n * unless the function, and/or await are specifically returned, i.e. \"return await insights.chrome...\".\n */\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @returns {Promise<void>}\n */\nconst getUserPermissions = appName => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE && [\n        {\n          [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_ONE\n        },\n        {\n          [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_TWO\n        }\n      ]) ||\n      insights.chrome.getUserPermissions(appName)\n    );\n  } catch (e) {\n    throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Disables the Platform's global filter display.\n *\n * @param {boolean} isHidden\n * @returns {Promise<*>}\n */\nconst hideGlobalFilter = async (isHidden = true) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.hideGlobalFilter(isHidden);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<void>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n// FixMe: Revert catch to throwing an error. Relaxed for development\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<void>}\n */\nconst setAppName = async (name = null) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.identifyApp(name);\n  } catch (e) {\n    const error = `{ identifyApp } = insights.chrome, ${e.message}`;\n    await Promise.reject(error);\n  }\n};\n\n/**\n * Set app routes via the platform left-nav navigation.\n *\n * @param {string} id The navigation ID associated with internal route config, and external platform nav config\n * @param {object} options\n * @param {string} options.appName\n * @param {boolean} options.secondaryNav\n * @returns {Promise<object>}\n */\nconst setAppNav = async (id, { appName = helpers.UI_NAME, secondaryNav = true } = {}) => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE && { [platformApiTypes.PLATFORM_API_RESPONSE_NAV_TYPES.ACTIVE_APP]: id }) ||\n      (await insights.chrome.appNavClick({ id, secondaryNav, parentId: appName }))\n    );\n  } catch (e) {\n    throw new Error(`{ appNavClick } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = {\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Hide platform global filter.\n *\n * @param {boolean} isHidden\n * @returns {{Function}}\n */\nconst hideGlobalFilter = isHidden => ({\n  type: platformTypes.PLATFORM_GLOBAL_FILTER_HIDE,\n  payload: platformServices.hideGlobalFilter(isHidden)\n});\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for changing routes via the left-nav navigation.\n *\n * @param {string} id\n * @param {object} options\n * @param {string} options.appName\n * @param {boolean} options.secondaryNav\n * @returns {Function}\n */\nconst setAppNav = (id, { appName, secondaryNav } = {}) => dispatch =>\n  dispatch({\n    type: platformTypes.PLATFORM_SET_NAV,\n    payload: platformServices.setAppNav(id, { appName, secondaryNav }),\n    meta: {\n      id,\n      appName,\n      secondaryNav\n    }\n  });\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n","import axios, { CancelToken } from 'axios';\nimport LruCache from 'lru-cache';\nimport { platformServices } from './platformServices';\n\n/**\n * Apply consistent service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {object}\n */\nconst cancelTokens = {};\n\n/**\n * Cache Axios service call responses.\n *\n * @type {object}\n */\nconst responseCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_AJAX_CACHE, 10),\n  max: 100,\n  updateAgeOnGet: true\n});\n\n/**\n * Call platform \"getUser\" auth method, and apply service config. Service configuration\n * includes the ability to cancel all and specific calls, and cache specific calls with\n * their success response only. The cache will refresh its timeout on continuous calls.\n * To reset it a user will either need to refresh the page or wait the \"maxAge\".\n *\n * @param {object} config\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n\n  const updatedConfig = { ...config };\n  const axiosInstance = axios.create();\n\n  if (updatedConfig.cancel === true) {\n    const cancelTokensId = `${updatedConfig.cancelId || ''}-${updatedConfig.url}`;\n\n    if (cancelTokens[cancelTokensId]) {\n      cancelTokens[cancelTokensId].cancel('cancelled request');\n    }\n\n    cancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = cancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  if (updatedConfig.cache === true) {\n    const sortedParams = Object.entries(updatedConfig.params).sort(([a], [b]) => a.localeCompare(b));\n    const cacheId = `${updatedConfig.url}-${JSON.stringify(sortedParams)}`;\n    const cachedResponse = responseCache.get(cacheId);\n\n    if (cachedResponse) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          ...cachedResponse,\n          status: 304,\n          statusText: 'Not Modified',\n          config: adapterConfig\n        });\n    }\n\n    axiosInstance.interceptors.response.use(response => {\n      responseCache.set(cacheId, response);\n      return response;\n    });\n\n    delete updatedConfig.cache;\n  }\n\n  return axiosInstance(serviceConfig(updatedConfig));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getApiVersion = (options = {}) => {\n  const { cache = false, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {string} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {string} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {object} links\n * @apiSuccess {object} meta\n * @apiSuccess {string} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {string} meta.product\n * - RHEL\n * @apiSuccess {number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 12\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 4\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000.057890,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"has_cloudigrade_data\": true,\n *           \"has_cloudigrade_mismatch\": true,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\",\n *         \"total_core_hours\": 30500.04,\n *         \"total_instance_hours\": 35\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.20,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.15,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.11,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.32,\n *           \"instance_hours\": 23\n *         },\n *         {\n *           \"date\": \"2020-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.42,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 999.06,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\",\n *         \"total_core_hours\": 200.03,\n *         \"total_instance_hours\": 26\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 400,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\",\n *         \"total_core_hours\": 2050.04\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 500\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-123456789012\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.05,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 70,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6N\",\n *           \"cloud_provider\": \"AZURE\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.00,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"CLOUD\",\n *           \"measurement_type\": \"CLOUD\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6M\",\n *           \"cores\": 4,\n *           \"core_hours\": 1000.20,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 10,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"display_name\": \"dolor.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6L\",\n *           \"cores\": 4,\n *           \"core_hours\": 1001.60,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 1,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"display_name\": \"lorem.test.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YX\",\n *           \"cores\": 4,\n *           \"core_hours\": 999.60,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"display_name\": \"lorem.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YZ\",\n *           \"cores\": 0,\n *           \"core_hours\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"display_name\": \"lorem.another.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YA\",\n *           \"cores\": 0,\n *           \"core_hours\": 0.01,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-21T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YB\",\n *           \"cores\": 0,\n *           \"core_hours\": 999.61,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-22T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YC\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-23T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YD\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-24T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YEE\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-26T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YF\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-29T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 11\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = false, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', id),\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/subscriptions/products/:product_id Get RHSM subscriptions table/inventory data\n * @apiDescription Retrieve subscriptions table/inventory data.\n *\n * Reference [RHSM for subscriptions table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"sku\": \"RH00011\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscription_numbers\": [\"1234567890\", \"1234567890\", \"1234567890\"],\n *           \"upcoming_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"upcoming_event_type\": \"Subscription Begin\",\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\"\n *         },\n *         {\n *           \"sku\": \"RH00010\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server\",\n *           \"service_level\": \"Self-Support\",\n *           \"usage\": \"Production\",\n *           \"subscription_numbers\": [\"1234567890\", \"1234567890\", \"1234567890\"],\n *           \"upcoming_event_date\": \"2020-04-02T00:00:00Z\",\n *           \"upcoming_event_type\": \"Subscription Begin\",\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\"\n *         },\n *         {\n *           \"sku\": \"RH00009\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscription_numbers\": [\"1234567890\", \"1234567890\", \"1234567890\"],\n *           \"upcoming_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"upcoming_event_type\": \"Subscription End\",\n *           \"physical_capacity\": 2,\n *           \"virtual_capacity\": 2,\n *           \"total_capacity\": 4,\n *           \"uom\": \"Cores\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API subscriptions data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getSubscriptionsInventory = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_SUBSCRIPTIONS}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\nconst rhsmServices = {\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getSubscriptionsInventory\n};\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getSubscriptionsInventory\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsmServices';\n\n/**\n * Get a combined RHSM response from reporting and capacity.\n *\n * @param {string} id\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphReportsCapacity = (id = null, query = {}, options = {}) => dispatch => {\n  const { cancelId = 'graphReportsCapacity' } = options;\n\n  return dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n    payload: Promise.all([\n      rhsmServices.getGraphReports(id, query, { cancelId }),\n      rhsmServices.getGraphCapacity(id, query, { cancelId })\n    ]),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n};\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n    payload: rhsmServices.getHostsInventory(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n    payload: rhsmServices.getHostsInventoryGuests(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a RHSM response from message reporting.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getMessageReports = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM,\n    payload: rhsmServices.getGraphReports(id, query, { cancelId: 'messageReport' }),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a subscriptions response from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getSubscriptionsInventory = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM,\n    payload: rhsmServices.getSubscriptionsInventory(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActions = {\n  getGraphReportsCapacity,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n\nexport {\n  rhsmActions as default,\n  rhsmActions,\n  getGraphReportsCapacity,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { rbacConfig as permissions } from '../config';\nimport { getUser, getUserPermissions } from './platformServices';\nimport { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * Apply an emulated API response to the platforms getUser method.\n *\n * @returns {Promise<{data: {permissions: (void|*[]), user: void}, message: string, status: number}>}\n */\nconst authorizeUser = async () => {\n  const updatedPermissions = Object.keys(permissions);\n  let message = '{ auth.getUser, getUserPermissions } = insights.chrome';\n  let userData;\n  let userPermissions;\n\n  try {\n    userData = await getUser();\n\n    if (updatedPermissions.length) {\n      const allPermissions = await Promise.all(updatedPermissions.map(app => getUserPermissions(app)));\n\n      if (Array.isArray(allPermissions)) {\n        userPermissions = [...allPermissions.flat()];\n      }\n    } else {\n      userPermissions = await getUserPermissions();\n    }\n  } catch (e) {\n    message = e.message;\n  }\n\n  if (_isPlainObject(userData) && Object.keys(userData).length) {\n    return Promise.resolve({ data: { user: userData, permissions: userPermissions || [] }, message, status: 200 });\n  }\n\n  const emulatedErrorResponse = {\n    ...new Error(message),\n    message,\n    status: 418\n  };\n\n  return Promise.reject(emulatedErrorResponse);\n};\n\n/**\n * Return a platform locale value from a cookie.\n *\n * @private\n * @returns {{value: string, key: string | null}|null}\n */\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\n/**\n * Return platform locale.\n *\n * @returns {Promise<{data: void}>}\n */\nconst getLocale = () => {\n  const defaultLocale = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = (options = {}) => {\n  const { cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport {\n  userServices as default,\n  userServices,\n  authorizeUser,\n  getLocale,\n  logoutUser,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get an emulated API response from the platforms \"getUser\" method.\n *\n * @returns {Function}\n */\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userServices.authorizeUser()\n  });\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userServices.getLocale()\n});\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn = (query = {}) => dispatch =>\n  dispatch({\n    type: userTypes.UPDATE_USER_OPTIN,\n    payload: userServices.updateAccountOptIn(query),\n    meta: {\n      query,\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsErrorDescription'),\n          dismissable: true\n        },\n        fulfilled: {\n          variant: 'success',\n          title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsSuccessDescription'),\n          dismissable: true,\n          autoDismiss: false\n        }\n      }\n    }\n  });\n\nconst userActions = { authorizeUser, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport {\n  userActions as default,\n  userActions,\n  authorizeUser,\n  getLocale,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from './reduxHelpers';\n\n/**\n * Parse a query object against a schema for specific RHSM endpoints.\n *\n * @param {object} query\n * @param {object} queries\n * @returns {{graphTallyQuery: object, inventoryHostsQuery: object, inventorySubscriptionsQuery: object,\n *     query: object, inventoryGuestsQuery: object, toolbarQuery: object}}\n */\nconst parseRhsmQuery = (query = {}, queries = {}) => {\n  const { graphTallyQuery, inventoryGuestsQuery, inventoryHostsQuery, inventorySubscriptionsQuery } = queries;\n\n  const updatedGraphTallyQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES);\n  const updatedInventoryGuestsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES\n  );\n  const updatedInventoryHostsQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES);\n  const updatedInventorySubscriptionsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES\n  );\n\n  return {\n    query,\n    graphTallyQuery: { ...updatedGraphTallyQuery, ...graphTallyQuery },\n    inventoryGuestsQuery: { ...updatedInventoryGuestsQuery, ...inventoryGuestsQuery },\n    inventoryHostsQuery: { ...updatedInventoryHostsQuery, ...inventoryHostsQuery },\n    inventorySubscriptionsQuery: { ...updatedInventorySubscriptionsQuery, ...inventorySubscriptionsQuery },\n    toolbarQuery: query\n  };\n};\n\nconst apiQueries = {\n  parseRhsmQuery\n};\n\nexport { apiQueries as default, apiQueries };\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{data: {object}}}\n */\nconst selectorCache = { data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  report: state.messages?.report?.[props.productId],\n  viewId: props.viewId,\n  productId: props.productId\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => ({\n  ...props.query,\n  ...state.view?.query?.[props.productId],\n  ...state.view?.query?.[props.viewId]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{appMessages: {cloudigradeMismatch: boolean}}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (data, query = {}) => {\n  const { viewId = null, productId = null, report = {} } = data || {};\n  const appMessages = {\n    cloudigradeMismatch: false\n  };\n\n  const cache = (viewId && productId && selectorCache.data[`${viewId}_${productId}`]) || undefined;\n\n  Object.assign(appMessages, { ...cache });\n\n  // Scan Tally response for Cloud Meter flags\n  if (report.fulfilled && appMessages.cloudigradeMismatch !== true) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA]: reportData = [] } = report.data || {};\n\n    const cloudigradeMismatch = reportData\n      .reverse()\n      .find(\n        ({ [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]: mismatch }) =>\n          mismatch === true\n      );\n\n    appMessages.cloudigradeMismatch = cloudigradeMismatch !== undefined;\n\n    selectorCache.data[`${viewId}_${productId}`] = {\n      ...appMessages\n    };\n  }\n\n  return { appMessages, query };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{appMessages: {cloudigradeMismatch: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst appMessagesSelectors = {\n  appMessages: selector,\n  makeAppMessages: makeSelector\n};\n\nexport { appMessagesSelectors as default, appMessagesSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\nimport { rbacConfig as permissions } from '../../config';\nimport {\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES as APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES\n} from '../../types/platformApiTypes';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @returns {object}\n */\nconst statePropsFilter = state => ({\n  ...state.user?.session\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{session: {entitled: boolean, permissions: object, authorized: object, admin: boolean,\n *     error: boolean}}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter], response => {\n  const { error = false, fulfilled = false, data = {}, ...rest } = response || {};\n  const updatedSession = {\n    ...rest,\n    admin: false,\n    entitled: false,\n    error,\n    authorized: {},\n    permissions: {}\n  };\n\n  if (!error && fulfilled) {\n    const { user = {}, permissions: responsePermissions = [] } = data;\n\n    updatedSession.admin =\n      user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]?.[\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER\n      ]?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN] || false;\n\n    updatedSession.entitled =\n      user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]?.[APP_TYPES.SUBSCRIPTIONS]?.[\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED\n      ] || false;\n\n    // All permissions breakdown\n    responsePermissions.forEach(\n      ({\n        [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n        [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n      }) => {\n        const [app = '', resource, operation] = permission?.split(':') || [];\n\n        if (!updatedSession.permissions[app]) {\n          updatedSession.permissions[app] = {\n            all: false,\n            resources: {}\n          };\n        }\n\n        if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n          updatedSession.permissions[app].all = true;\n        }\n\n        if (!updatedSession.permissions[app].resources[resource]) {\n          updatedSession.permissions[app].resources[resource] = {};\n        }\n\n        updatedSession.permissions[app].resources[resource][operation] = definitions;\n      }\n    );\n\n    // Alias specific app permissions checks\n    Object.entries(permissions).forEach(([key, { permissions: resourcePermissions }]) => {\n      updatedSession.authorized[key] = updatedSession.permissions[key]?.all || false;\n\n      resourcePermissions.forEach(({ resource: res, operation: op }) => {\n        if (updatedSession.permissions[key]?.resources?.[res]?.[op]) {\n          updatedSession.authorized[key] = true;\n        }\n      });\n    });\n  }\n\n  return { session: updatedSession };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{session: {entitled: boolean, permissions: Array, authorized: boolean, admin: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst userSessionSelectors = {\n  userSession: selector,\n  makeUserSession: makeSelector\n};\n\nexport { userSessionSelectors as default, userSessionSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsGuests?.[props.id]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter], response => {\n  const { metaId, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    status: responseData.status\n  };\n\n  if (responseData.fulfilled) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [] } = responseData.data || {};\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n      data: listData,\n      customResponseValue: customInventoryValue\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    updatedResponseData.listData = updatedListData;\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst guestsListSelectors = {\n  guestsList: selector,\n  makeGuestsList: makeSelector\n};\n\nexport { guestsListSelectors as default, guestsListSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport LruCache from 'lru-cache';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.graph?.reportCapacity?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { graphTallyQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      graphTallyQuery: { ...state.view?.graphTallyQuery?.[props.viewId] }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    graphData: {},\n    meta: {},\n    query,\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, responseMetaQuery)) {\n    const [report, capacity] = responseData.data;\n    const reportData = report?.[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA] || [];\n    const reportMeta = report?.[rhsmApiTypes.RHSM_API_RESPONSE_META] || {};\n    const capacityData = capacity?.[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA] || [];\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Reporting graph entries\n    const customReportValue = (data, key, presetData) => ({\n      ...presetData,\n      hasData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_DATA],\n      hasCloudigradeData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_DATA],\n      hasCloudigradeMismatch: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]\n    });\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y,\n      hasInfinite: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE]\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment.utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE]).startOf('day').toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY =\n                (Number.isInteger(graphDataObj[graphDataObjKey]) &&\n                  Number.parseInt(graphDataObj[graphDataObjKey], 10)) ||\n                Number.parseFloat(Number.parseFloat(graphDataObj[graphDataObjKey]).toFixed(2));\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value }, customValue: customReportValue });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Generate normalized properties\n    const [updatedReportMeta] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n      data: reportMeta\n    });\n\n    const [meta = {}] = updatedReportMeta || [];\n\n    // Update response and cache\n    Object.assign(updatedResponseData.meta, meta);\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst graphCardSelectors = {\n  graphCard: selector,\n  makeGraphCard: makeSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport LruCache from 'lru-cache';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventoryHostsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventoryHostsQuery: {\n        ...state.view?.inventoryHostsQuery?.[props.productId],\n        ...state.view?.inventoryHostsQuery?.[props.viewId]\n      }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Note: We use an in-memory cache to provide the user a pleasant UX experience. To\n * aid in that UX we need \"pending\" to fire in scenarios that are not loaded in-memory. Because\n * we load the cache first there are scenarios where the previous XHR call is still in state\n * when a subsequent fulfilled XHR call comes through. Without the _isEqual(query, metaQuery) check\n * the overlap of the prior fulfilled call interferes with the pending of the subsequent call.\n */\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, metaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.CLOUD_PROVIDER:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.HARDWARE:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.MEASUREMENT:\n          return value?.toLowerCase() || null;\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst inventoryListSelectors = {\n  inventoryList: selector,\n  makeInventoryList: makeSelector\n};\n\nexport { inventoryListSelectors as default, inventoryListSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport LruCache from 'lru-cache';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * ToDo: Consider consolidating inventory selectors, and/or create API specific selectors, i.e. RHSM, etc\n * Breaking out the inventory selectors is a temporary solution until the API is finalized. Aspects\n * of the caching and applying the API schemas is now consistent enough to allow for grouping/refinement.\n */\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.subscriptionsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventorySubscriptionsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventorySubscriptionsQuery: {\n        ...state.view?.inventorySubscriptionsQuery?.[props.productId],\n        ...state.view?.inventorySubscriptionsQuery?.[props.viewId]\n      }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, metaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES.UPCOMING_EVENT_DATE:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst subscriptionsListSelectors = {\n  subscriptionsList: selector,\n  makeSubscriptionsList: makeSelector\n};\n\nexport { subscriptionsListSelectors as default, subscriptionsListSelectors, selector, makeSelector };\n","import appMessagesSelectors from './appMessagesSelectors';\nimport guestsListSelectors from './guestsListSelectors';\nimport graphCardSelectors from './graphCardSelectors';\nimport inventoryListSelectors from './inventoryListSelectors';\nimport subscriptionsListSelectors from './subscriptionsListSelectors';\nimport userSelectors from './userSelectors';\n\nconst reduxSelectors = {\n  appMessages: appMessagesSelectors,\n  guestsList: guestsListSelectors,\n  graphCard: graphCardSelectors,\n  inventoryList: inventoryListSelectors,\n  subscriptionsList: subscriptionsListSelectors,\n  user: userSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect, useDispatch, useSelector as UseSelector, shallowEqual } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxHelpers, apiQueries } from './common';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\nimport { helpers } from '../common';\n\n/**\n * Wrapper for applying Router Dom withRouter and Redux connect.\n *\n * @param {Function} mapStateToProps\n * @param {Function} mapDispatchToProps\n * @returns {Function}\n */\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connect(mapStateToProps, mapDispatchToProps)(component));\n\n/**\n * Wrapper for Redux hook, useSelector. Applies test mode and a fallback value.\n *\n * @param {Function} selector\n * @param {*} value\n * @param {object} options\n * @returns {*}\n */\nconst useSelector = (selector, value = null, options = {}) => {\n  if (helpers.TEST_MODE) {\n    return value;\n  }\n\n  return UseSelector(selector, options.equality) ?? value;\n};\n\nexport {\n  apiQueries,\n  connect,\n  connectRouter,\n  reduxActions,\n  reduxHelpers,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  shallowEqual,\n  store,\n  useDispatch,\n  useSelector\n};\n","import { Redirect } from './redirect';\nimport { Router } from './router';\nimport { routerHelpers } from './routerHelpers';\n\nexport { Redirect, Router, routerHelpers };\n","import React from 'react';\nimport path from 'path';\nimport { helpers } from '../../common/helpers';\nimport { routesConfig } from '../../config';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformLandingRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/');\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformModalRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return an assumed route baseName directory based on existing app name.\n * App name is defined in dotenv and package.json/insights.appname\n * [environment]/[OPTIONAL]/[OPTIONAL]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  `${pathName.split(applicationName)[0]}${applicationName}`;\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName = (helpers.TEST_MODE && '/') || (helpers.DEV_MODE && '/') || dynamicBaseName();\n\n/**\n * Return a base path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBasePath = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  pathName.split(applicationName)[0];\n\n/**\n * App basePath.\n *\n * @type {string}\n */\nconst basePath = (helpers.TEST_MODE && '/') || (helpers.DEV_MODE && '/') || dynamicBasePath();\n\n/**\n * Generate product groups for applying query filter resets.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateProductGroups = (config = routesConfig) => {\n  const productGroups = {};\n\n  config.forEach(({ pathParameter, productParameter }) => {\n    const viewIds = ((Array.isArray(productParameter) && productParameter) || [productParameter]).map(\n      id => (id && `view${id}`) || id\n    );\n\n    viewIds.forEach((id, index) => {\n      if (id) {\n        if (!productGroups[id]) {\n          productGroups[id] = [];\n        }\n\n        if (pathParameter) {\n          productGroups[id].push((Array.isArray(pathParameter) && pathParameter?.[index]) || pathParameter);\n        }\n      }\n    });\n  });\n\n  return productGroups;\n};\n\n/**\n * Reference for products grouped by view.\n */\nconst productGroups = generateProductGroups();\n\n/**\n * Generate routes to be consumed by router.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateRoutes = (config = routesConfig) =>\n  config.map(({ activateOnError, component, disabled, id, path: routePath, redirect }) => ({\n    activateOnError,\n    component,\n    disabled,\n    exact: true,\n    id,\n    path: routePath,\n    redirect\n  }));\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = generateRoutes();\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Match route config entries by path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {Array} params.config\n * @returns {{configs: Array, configFirstMatch: object, configsById: object}}\n */\nconst getRouteConfigByPath = ({ pathName = dynamicBasePath(), config = routesConfig } = {}) => {\n  const basePathDirs = pathName?.split('/').filter(str => str.length > 0);\n  const configs = [];\n  const allConfigs = [];\n  const configsById = {};\n  const allConfigsById = {};\n\n  const findConfig = dir => {\n    config.forEach(({ id, path: configPath, pathParameter, productParameter, aliases, ...configItem }) => {\n      const updatedConfigItem = {\n        aliases,\n        id,\n        path: configPath,\n        pathParameter,\n        productParameter,\n        ...configItem\n      };\n\n      if (\n        dir &&\n        (new RegExp(dir, 'i').test(configPath) ||\n          new RegExp(dir, 'i').test(productParameter?.toString()) ||\n          new RegExp(dir, 'i').test(pathParameter?.toString()) ||\n          new RegExp(dir, 'i').test(aliases?.toString()))\n      ) {\n        if (!configsById[id]) {\n          configsById[id] = { ...updatedConfigItem };\n          configs.push({ ...updatedConfigItem });\n        }\n      }\n\n      if (!allConfigsById[id]) {\n        allConfigsById[id] = { ...updatedConfigItem };\n        allConfigs.push({ ...updatedConfigItem });\n      }\n    });\n  };\n\n  if (basePathDirs?.length) {\n    basePathDirs.forEach(dir => {\n      if (dir) {\n        const decodedDir = window.decodeURI(dir);\n        findConfig(decodedDir);\n      }\n    });\n  } else {\n    findConfig();\n  }\n\n  return { allConfigs, allConfigsById, configs, configsById, firstMatch: configs?.[0] };\n};\n\n/**\n * Return a route config object.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathName\n * @param {boolean} params.returnDefault\n * @param {Array} params.config\n * @returns {object}\n */\nconst getRouteConfig = ({ id = null, pathName, returnDefault = false, config = routesConfig } = {}) => {\n  let navRouteItem;\n\n  if (id) {\n    navRouteItem = config.find(item => item.id === id);\n  }\n\n  if ((!navRouteItem && pathName) || (!navRouteItem && !pathName && !returnDefault)) {\n    navRouteItem = getRouteConfigByPath({ pathName, config }).firstMatch;\n  }\n\n  if (!navRouteItem && returnDefault) {\n    navRouteItem = config.find(item => item.default === true);\n  }\n\n  if (navRouteItem) {\n    const { search = '', hash = '' } = window.location;\n    navRouteItem.routeHref = `${navRouteItem.path}${search}${hash}`;\n\n    const { pathParameter, productParameter } = navRouteItem;\n    navRouteItem.pathParameter = (Array.isArray(pathParameter) && pathParameter[0]) || pathParameter;\n    navRouteItem.productParameter = (Array.isArray(productParameter) && productParameter[0]) || productParameter;\n    navRouteItem.viewParameter =\n      (productParameter && `view${(Array.isArray(productParameter) && productParameter[0]) || productParameter}`) ||\n      productParameter;\n  }\n\n  return { ...(navRouteItem || {}) };\n};\n\n/**\n * Import a route component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst importView = component => React.lazy(() => import(/* webpackExclude: /\\.test\\.js$/ */ `../${component}.js`));\n\nconst routerHelpers = {\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  importView,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  importView,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.RHEL;\n\nconst productId = null;\n\nconst config = {\n  productGroup,\n  productId,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.UPCOMING_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'physicalSockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'hypervisorSockets',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value\n    },\n    {\n      id: 'cloudSockets',\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value\n    },\n    { id: 'thresholdSockets', chartType: 'threshold' }\n  ],\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'measurementType',\n      cell: (data = {}) => {\n        const { cloudProvider = {}, measurementType = {} } = data;\n        return (\n          <React.Fragment>\n            {translate('curiosity-inventory.measurementType', { context: measurementType.value })}{' '}\n            {(cloudProvider.value && (\n              <PfLabel color=\"purple\">\n                {translate('curiosity-inventory.cloudProvider', { context: cloudProvider.value })}\n              </PfLabel>\n            )) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'sockets',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: 'productName',\n      isSortable: true\n    },\n    {\n      id: 'serviceLevel',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'upcomingEventDate',\n      cell: data =>\n        (data?.upcomingEventDate?.value &&\n          helpers.isDate(data?.upcomingEventDate?.value) &&\n          moment.utc(data?.upcomingEventDate?.value).format('YYYY-DD-MM')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      selected: true\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  productContextFilterUom: true,\n  query: {\n    [RHSM_API_QUERY_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.CORES,\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.UPCOMING_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialOption: RHSM_API_QUERY_UOM_TYPES.CORES,\n  initialGraphFilters: [\n    {\n      id: 'cores',\n      isOptional: true,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'sockets',\n      isOptional: true,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    { id: 'thresholdSockets', chartType: 'threshold', isOptional: true },\n    { id: 'thresholdCores', chartType: 'threshold', isOptional: true }\n  ],\n  initialGraphSettings: {},\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'sockets',\n      header: () => translate('curiosity-inventory.header', { context: 'sockets_OpenShift Container Platform' }),\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'cores',\n      header: () => translate('curiosity-inventory.header', { context: 'cores_OpenShift Container Platform' }),\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 25\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: 'productName',\n      isSortable: true\n    },\n    {\n      id: 'serviceLevel',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'upcomingEventDate',\n      cell: data =>\n        (data?.upcomingEventDate?.value &&\n          helpers.isDate(data?.upcomingEventDate?.value) &&\n          moment.utc(data?.upcomingEventDate?.value).format('YYYY-DD-MM')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport numbro from 'numbro';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'coreHours',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    }\n  ],\n  initialGraphSettings: {\n    actionDisplay: (data = {}) => {\n      const {\n        meta: { totalCoreHours }\n      } = data;\n      let displayContent;\n\n      if (totalCoreHours) {\n        displayContent = translate('curiosity-graph.card-action-total', {\n          context: 'coreHours',\n          total: numbro(totalCoreHours)\n            .format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n            .toUpperCase()\n        });\n      }\n\n      return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data = {}) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'coreHours',\n      cell: data =>\n        (typeof data?.coreHours?.value === 'number' && Number.parseFloat(data?.coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 25\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport numbro from 'numbro';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst config = {\n  productGroup,\n  productId,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'coreHours',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: 'line',\n      isStacked: false,\n      yAxisUseDataSet: true\n    },\n    {\n      id: 'instanceHours',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: 'line',\n      isStacked: false,\n      yAxisUseDataSet: true\n    }\n  ],\n  initialGraphSettings: {\n    actionDisplay: (data = {}) => {\n      const {\n        meta: { totalCoreHours }\n      } = data;\n      let displayContent;\n\n      if (totalCoreHours) {\n        displayContent = translate('curiosity-graph.card-action-total', {\n          context: 'coreHours',\n          total: numbro(totalCoreHours)\n            .format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n            .toUpperCase()\n        });\n      }\n\n      return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data = {}) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'coreHours',\n      cell: data =>\n        (typeof data?.coreHours?.value === 'number' && Number.parseFloat(data?.coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'instanceHours',\n      cell: data =>\n        (typeof data?.instanceHours?.value === 'number' && Number.parseFloat(data?.instanceHours?.value).toFixed(2)) ||\n        `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.SATELLITE;\n\nconst productId = null;\n\nconst config = {\n  productGroup,\n  productId,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.UPCOMING_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'physicalSockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'hypervisorSockets',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value\n    },\n    {\n      id: 'cloudSockets',\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value\n    },\n    { id: 'thresholdSockets', chartType: 'threshold' }\n  ],\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'measurementType',\n      cell: (data = {}) => {\n        const { cloudProvider = {}, measurementType = {} } = data;\n        return (\n          <React.Fragment>\n            {translate('curiosity-inventory.measurementType', { context: measurementType.value })}{' '}\n            {(cloudProvider.value && (\n              <PfLabel color=\"purple\">\n                {translate('curiosity-inventory.cloudProvider', { context: cloudProvider.value })}\n              </PfLabel>\n            )) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'sockets',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      selected: true\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import { config as rhelConfig } from './product.rhel';\nimport { config as openshiftContainerConfig } from './product.openshiftContainer';\nimport { config as openshiftMetricsConfig } from './product.openshiftMetrics';\nimport { config as openshiftDedicatedConfig } from './product.openshiftDedicated';\nimport { config as satelliteProductConfig } from './product.satellite';\nimport { RHSM_API_PATH_ID_TYPES } from '../types/rhsmApiTypes';\nimport { helpers } from '../common';\n\nconst routes = [\n  {\n    id: 'rhel',\n    path: '/rhel',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [rhelConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['insights'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewDefault'\n  },\n  {\n    id: 'rhel-arm',\n    path: '/rhel-arm',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_ARM],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [rhelConfig],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewDefault'\n  },\n  {\n    id: 'rhel-ibmpower',\n    path: '/rhel-ibmpower',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [rhelConfig],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewDefault'\n  },\n  {\n    id: 'rhel-ibmz',\n    path: '/rhel-ibmz',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [rhelConfig],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewDefault'\n  },\n  {\n    id: 'rhel-x86',\n    path: '/rhel-x86',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_X86],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [rhelConfig],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewDefault'\n  },\n  {\n    id: 'openshift-container',\n    path: '/openshift-container',\n    pathParameter: [openshiftContainerConfig.productId, openshiftMetricsConfig.productId],\n    productParameter: [openshiftContainerConfig.productGroup, openshiftMetricsConfig.productGroup],\n    productConfig: [openshiftContainerConfig, openshiftMetricsConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewOpenShiftContainer'\n  },\n  {\n    id: 'openshift-dedicated',\n    path: '/openshift-dedicated',\n    pathParameter: [openshiftDedicatedConfig.productId],\n    productParameter: [openshiftDedicatedConfig.productGroup],\n    productConfig: [openshiftDedicatedConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewOpenShiftDedicated'\n  },\n  {\n    id: 'satellite',\n    path: '/satellite',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [satelliteProductConfig],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewDefault'\n  },\n  {\n    id: 'satellite-capsule',\n    path: '/satellite-capsule',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE_CAPSULE],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [satelliteProductConfig],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewDefault'\n  },\n  {\n    id: 'satellite-server',\n    path: '/satellite-server',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE_SERVER],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [satelliteProductConfig],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewDefault'\n  },\n  {\n    id: 'optin',\n    path: '/optin',\n    pathParameter: null,\n    productParameter: null,\n    productConfig: null,\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'optinView/optinView'\n  },\n  {\n    id: 'missing',\n    path: '/',\n    pathParameter: null,\n    productParameter: null,\n    productConfig: null,\n    redirect: '/',\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: true,\n    component: 'productView/productViewMissing'\n  }\n];\n\nexport { routes as default, routes };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @param {string} params.endOfMeasurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement, endOfMeasurement = 'days' }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf(endOfMeasurement).toDate()\n});\n\nconst currentDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 1, measurement: 'days' });\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\nconst rangedYearDateTime = setRangedDateTime({\n  date: getCurrentDate(),\n  subtract: 11,\n  measurement: 'months',\n  endOfMeasurement: 'months'\n});\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case 'CURRENT':\n      return { ...currentDateTime };\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Generate a list of months for use in a select list.\n *\n * @param {string} month\n * @returns {{keyDateTimeRanges: {}, listDateTimeRanges: *[]}|*}\n */\nconst getRangedMonthDateTime = month => {\n  const currentYear = Number.parseInt(moment.utc(getCurrentDate()).year(), 10);\n  const { startDate, endDate } = { ...rangedYearDateTime };\n  const keyDateTimeRanges = {};\n  let listDateTimeRanges = [];\n\n  const startDateUpdated = moment.utc(startDate);\n  const endDateUpdated = moment.utc(endDate);\n\n  while (endDateUpdated > startDateUpdated || startDateUpdated.format('M') === endDateUpdated.format('M')) {\n    const dateTime = {\n      value: {\n        startDate: startDateUpdated.toDate()\n      }\n    };\n\n    const titleYear = startDateUpdated.format('MMMM YYYY');\n    const title = startDateUpdated.format('MMMM');\n    const titleIndex = startDateUpdated.format('M');\n    const isNextYear = currentYear !== Number.parseInt(startDateUpdated.year(), 10);\n\n    dateTime.title = (isNextYear && titleYear) || title;\n    dateTime._title = title.toLowerCase();\n    dateTime.value.endDate = moment.utc(startDateUpdated).endOf('month').toDate();\n\n    startDateUpdated.add(1, 'month');\n\n    dateTime.title = translate('curiosity-toolbar.granularityRange', { context: dateTime.title });\n    keyDateTimeRanges[title.toLowerCase()] = { ...dateTime };\n    keyDateTimeRanges[titleIndex] = { ...dateTime };\n    listDateTimeRanges.push(dateTime);\n  }\n\n  listDateTimeRanges = listDateTimeRanges.reverse();\n  listDateTimeRanges[0] = {\n    ...listDateTimeRanges[0],\n    _title: 'current',\n    title: translate('curiosity-toolbar.granularityRange', { context: 'current' })\n  };\n\n  keyDateTimeRanges.current = { ...listDateTimeRanges[0] };\n\n  if (month) {\n    return keyDateTimeRanges?.[month] || undefined;\n  }\n\n  return { keyDateTimeRanges, listDateTimeRanges };\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { dateHelpers } from './dateHelpers';\n\n/**\n * Download data to a file\n *\n * @param {object} options\n * @param {string} options.data\n * @param {string} options.fileName\n * @param {string} options.fileType\n * @returns {Promise}\n */\nconst downloadData = options => {\n  const { data = '', fileName = 'download.txt', fileType = 'text/plain' } = options || {};\n  return new Promise((resolve, reject) => {\n    try {\n      const { document, navigator, URL } = window;\n      const blob = new Blob([data], { type: fileType });\n\n      if (navigator?.msSaveBlob) {\n        navigator.msSaveBlob(blob, fileName);\n        resolve({ fileName, data });\n      } else {\n        const anchorTag = document.createElement('a');\n\n        anchorTag.href = URL.createObjectURL(blob);\n        anchorTag.style.display = 'none';\n        anchorTag.download = fileName;\n\n        document.body.appendChild(anchorTag);\n\n        anchorTag.click();\n\n        setTimeout(() => {\n          document.body.removeChild(anchorTag);\n          URL.revokeObjectURL(blob);\n          resolve({ fileName, data });\n        }, 250);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\n/**\n * Download the debug log file.\n */\nconst debugLog = async () => {\n  try {\n    const { sessionStorage } = window;\n    const fileName = `${helpers.UI_LOGGER_FILE}`.replace(\n      '{0}',\n      moment(dateHelpers.getCurrentDate()).format('YYYYMMDD_HHmmss')\n    );\n    const data = JSON.stringify(JSON.parse(sessionStorage.getItem(`${helpers.UI_LOGGER_ID}`)), null, 2);\n\n    await downloadData({ data, fileName, fileType: 'application/json' });\n  } catch (e) {\n    throw new Error(`debuglog error, ${e.message}`);\n  }\n};\n\nconst downloadHelpers = {\n  downloadData,\n  debugLog\n};\n\nhelpers.browserExpose({ debugLog }, { limit: false });\n\nexport { downloadHelpers as default, downloadHelpers, downloadData, debugLog };\n","import { platformApiTypes } from './platformApiTypes';\nimport { rhsmApiTypes } from './rhsmApiTypes';\n\nconst apiTypes = {\n  platformApi: platformApiTypes,\n  rhsmApi: rhsmApiTypes\n};\n\nexport { apiTypes as default, apiTypes, platformApiTypes, rhsmApiTypes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageColumns } from './pageColumns';\nimport { PageMessages } from './pageMessages';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageLayout = ({ children, className }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageMessages)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className={`curiosity ${className}`}>\n      {React.Children.toArray(children).filter(\n        child => child.type !== PageHeader && child.type !== PageMessages && child.type !== PageToolbar\n      )}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageLayout.defaultProps = {\n  className: ''\n};\n\nexport { PageLayout as default, PageLayout, PageColumns, PageHeader, PageMessages, PageSection, PageToolbar };\n"],"sourceRoot":""}
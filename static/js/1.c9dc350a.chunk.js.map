{"version":3,"sources":["components/graphCard/graphCardTypes.js","components/minHeight/minHeight.js","components/bannerMessages/bannerMessages.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardChartTooltip.js","components/graphCard/graphCardChartLegend.js","components/chartArea/chartArea.js","components/graphCard/graphCard.js","components/c3GraphCard/c3GraphCardHelpers.js","components/c3GraphCard/c3GraphCardLegendItem.js","components/c3Chart/c3Chart.js","components/c3GraphCard/c3GraphCard.js","components/inventoryList/inventoryListHelpers.js","components/guestsList/guestsList.js","components/pagination/pagination.js","components/inventoryList/inventoryList.js","components/toolbar/toolbarTypes.js","components/toolbar/toolbar.js","components/form/select.js"],"names":["graphCardTypes","getGranularityOptions","optionsType","selected","GRANULARITY_TYPES","DAILY","options","title","translate","value","WEEKLY","MONTHLY","QUARTERLY","MinHeight","containerRef","React","createRef","innerContainerRef","updatedContainerWidth","resizeObserver","helpers","noop","onResizeContainer","updateOnResize","props","clientWidth","current","setMinHeight","this","window","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","children","className","ref","Component","defaultProps","BannerMessages","state","onUpdateData","getMessageReports","productId","query","graphQuery","apiQueries","parseRhsmQuery","dateHelpers","getRangedDateTime","startDate","endDate","RHSM_API_QUERY_TYPES","GRANULARITY","START_DATE","toISOString","END_DATE","prevProps","_isEqual","appMessages","messages","updatedMessages","length","Object","entries","forEach","key","message","find","id","push","map","variant","AlertVariant","info","actionClose","onClose","setState","alerts","renderAlerts","context","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","appName","UI_DISPLAY_NAME","isInline","component","icon","iconPosition","target","href","makeMapStateToProps","reduxSelectors","makeAppMessages","ConnectedBannerMessages","connect","dispatch","reduxActions","rhsm","getTooltipDate","date","granularity","momentDate","moment","utc","format","timestampQuarterFormats","yearShort","add","timestampMonthFormats","yearLong","timestampDayFormats","yAxisTickFormatFallback","tick","abs","Math","updatedTick","updatedAbbr","pow","graphCardHelpers","getChartXAxisLabelIncrement","xAxisTickFormat","previousDate","formattedDate","isNewYear","Number","parseInt","year","replace","yAxisTickFormat","locale","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","GraphCardChartTooltip","datum","productLabel","t","header","data","itemsByKey","keys","index","tempDataFacet","color","test","thresholdStringValue","hasInfinite","y","label","dataFactsValue","hasData","product","summary","colSpan","dataFacet","aria-hidden","backgroundColor","GraphCardChartLegend","onClick","chart","viewId","updatedToggle","toggle","store","type","reduxTypes","graph","SET_GRAPH_LEGEND","legend","dataSets","isToggled","hide","chartId","isDisabled","isThreshold","labelContent","tooltipContent","checkIsToggled","button","Button","onKeyPress","tabIndex","visibility","borderTopColor","Tooltip","content","position","TooltipPosition","top","enableFlip","distance","entryDelay","exitDelay","Fragment","stroke","renderLegendItem","ConnectedGraphCardChartLegend","ChartArea","chartWidth","dataSetsToggle","tooltipRef","onHide","forceUpdate","onRevert","onToggle","getIsToggled","setResizeObserve","containerElement","ResizeObserver","observe","unobserve","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","x","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","item","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","filter","set","isStacked","dataSetMaxYStacked","floored","floor","log10","ceil","maxY","chartDomain","chartTooltip","tooltipDataSet","fill","_cloneDeep","mockDatum","tooltip","isValidElement","cloneElement","values","v","VictoryVoronoiCursorContainer","createContainer","parsedTooltipData","getTooltipData","globalContainerBounds","globalTooltipBounds","FlyoutComponent","obj","containerBounds","getBoundingClientRect","tooltipBounds","right","xCoordinate","width","htmlContent","applyParsedTooltipData","height","display","xmlns","cursorDimension","labels","labelComponent","voronoiPadding","chartLegend","legendProps","revert","stacked","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","generateId","name","themeColor","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","tooltipComponent","containerComponent","renderTooltip","undefined","chartProps","Chart","duration","ChartAxis","renderChart","ChartStack","renderLegend","bottom","left","GraphCard","onUpdateGraphData","getGraphReportsCapacity","graphGranularity","getQueryGranularity","onGranularitySelect","event","SET_QUERY_RHSM_TYPES","filterGraphData","graphData","selectOptionsType","updatedGranularity","chartAreaProps","JSON","stringify","filtered","tempFiltered","onLoad","chartColorGreenDark","assign","filteredGraphData","cardTitle","error","pending","Card","CardHeader","CardTitle","Title","headingLevel","size","CardActions","aria-label","onSelect","selectedOptions","placeholder","CardBody","UI_DISABLED_GRAPH","graphCard","makeGraphCard","ConnectedGraphCard","c3GraphCardHelpers","productShortLabel","hiddenDataFacets","converted","colors","columns","groups","names","types","convertTimeSeriesDate","TEST_MODE","local","totalData","filteredValue","pop","configuration","order","a","b","ratio","updatedValue","dataItem","dataValue","unloadBeforeLoad","show","spline","point","grid","axis","xAxisTicks","slice","dateIndex","default","min","outer","C3GraphCardLegendItem","updatedIsToggled","onFocus","getToggle","focus","getColor","onMouseOver","onBlur","onMouseOut","C3Chart","node","generateChart","config","destroy","onComplete","updatedChart","c3","generate","bindto","load","unload","done","C3GraphCard","filteredData","isDataHidden","includes","applySortFilters","onSort","updatedFilter","hasSort","sortActive","SORT","_camelCase","sortDirection","DIRECTION","SORT_DIRECTION_TYPES","DESCENDING","SortByDirection","desc","asc","applyWrappableFilters","Array","isArray","transforms","wrappable","inventoryListHelpers","filters","isSortable","isWrappable","cellData","session","updatedColumnHeaders","updatedCells","allCells","headerUpdated","cellUpdated","cell","cellWidth","PfCellWidth","columnHeaders","cells","GuestsList","currentPage","limit","previousData","onUpdateGuestsData","getHostsInventoryGuests","updatedQuery","LIMIT","OFFSET","guestsQuery","onScroll","numberOfGuests","listData","scrollHeight","scrollTop","newPage","updatedData","prevState","filterGuestsData","scrollLoader","tableProps","borders","colCount","rowCount","TableVariant","compact","updatedRows","updatedHeight","renderLoader","rows","perPageDefault","colWidth","renderTable","guestsList","makeGuestsList","ConnectedGuestsList","Pagination","onPage","page","offsetDefault","updatedPerPage","offset","setOffset","setLimit","onPerPage","perPage","updatedActions","dropDirection","isCompact","itemCount","updatedPage","onSetPage","onPerPageSelect","ConnectedPagination","view","InventoryList","onColumnSort","updatedDirection","direction","updatedSortColumn","SORT_TYPES","ASCENDING","onUpdateInventoryData","getHostsInventory","filterInventoryData","hasGuests","guestsId","subscriptionManagerId","expandedContent","fulfilled","isLastPage","minHeightContentRefreshKey","CardFooter","TableToolbar","isFooter","UI_DISABLED_TABLE","inventoryList","makeInventoryList","ConnectedInventoryList","toolbarTypes","SLA","SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","USAGE","USAGE_TYPES","DEVELOPMENT","DISASTER","PRODUCTION","UNSPECIFIED","Toolbar","onClear","hardFilterReset","dispatchActions","toolbar","SET_ACTIVE_FILTERS","activeFilters","Set","SET_QUERY_CLEAR","clearFilters","SET_FILTER_TYPE","currentFilter","setDispatch","onClearFilter","categoryTitle","categoryValue","updatedActiveFilters","updatedCurrentFilter","onCategorySelect","field","actions","resetPage","SET_QUERY_CLEAR_INVENTORY_LIST","getCurrentFilter","optionsSelected","filterOptions","setSelectFilter","ToolbarFilter","chips","deleteChip","categoryName","showToolbarItem","categoryOptions","categoryOptionsSelected","collapseListedFiltersBreakpoint","clearAllFilters","ToolbarContent","ToolbarToggleGroup","toggleIcon","breakpoint","ToolbarGroup","ToolbarItem","renderSelectFilter","filterType","UI_DISABLED_TOOLBAR","ConnectedToolbar","Select","isExpanded","titleSelection","updatedOptions","optionsIndex","findIndex","option","SelectVariant","single","updateSelected","opt","mockUpdatedOptions","mockTarget","selectedIndex","checkbox","checked","mockEvent","currentTarget","persist","expanded","formatOptions","_isPlainObject","activateOptions","convertedOption","text","textContent","ariaLabel","isToggleText","pfSelectOptions","selections","isOpen","placeholderText","btoa","data-value","data-title"],"mappings":"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","file":"static/js/1.c9dc350a.chunk.js","sourcesContent":["import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Return a set of options for display in a select/dropdown list.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getGranularityOptionsType = optionsType => {\n  if (optionsType === 'default') {\n    return {\n      selected: GRANULARITY_TYPES.DAILY,\n      options: [\n        { title: translate('curiosity-graph.dropdownDaily'), value: GRANULARITY_TYPES.DAILY, selected: true },\n        { title: translate('curiosity-graph.dropdownWeekly'), value: GRANULARITY_TYPES.WEEKLY },\n        { title: translate('curiosity-graph.dropdownMonthly'), value: GRANULARITY_TYPES.MONTHLY },\n        { title: translate('curiosity-graph.dropdownQuarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst graphCardTypes = {\n  getGranularityOptions: getGranularityOptionsType\n};\n\nexport { graphCardTypes as default, graphCardTypes, getGranularityOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertActionCloseButton, AlertVariant, Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport _isEqual from 'lodash/isEqual';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { dateHelpers, helpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Render banner messages.\n *\n * @augments React.Component\n */\nclass BannerMessages extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.onUpdateData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateData = () => {\n    const { getMessageReports, productId, query } = this.props;\n    const { graphQuery } = apiQueries.parseRhsmQuery(query);\n\n    if (productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime('CURRENT');\n      const updatedGraphQuery = {\n        ...graphQuery,\n        [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY,\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString()\n      };\n\n      getMessageReports(productId, updatedGraphQuery);\n    }\n  };\n\n  /**\n   * Apply messages' configuration to alerts.\n   *\n   * @returns {Node}\n   */\n  renderAlerts() {\n    const { state } = this;\n    const { appMessages, messages } = this.props;\n    const updatedMessages = [];\n\n    if (messages.length) {\n      Object.entries(appMessages).forEach(([key, value]) => {\n        if (state[key] !== true && value === true) {\n          const message = messages.find(({ id }) => id === key);\n\n          if (message) {\n            updatedMessages.push({\n              key,\n              ...message\n            });\n          }\n        }\n      });\n    }\n\n    return updatedMessages.map(({ key, message, title, variant = AlertVariant.info }) => {\n      const actionClose = <AlertActionCloseButton onClose={() => this.setState({ [key]: true })} />;\n\n      return (\n        <Alert actionClose={actionClose} key={key} title={title} variant={variant}>\n          {message}\n        </Alert>\n      );\n    });\n  }\n\n  /**\n   * Render a banner messages container.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const alerts = this.renderAlerts();\n\n    if (alerts.length) {\n      return <div className=\"curiosity-banner-messages\">{alerts}</div>;\n    }\n\n    return null;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{appMessages: object, productId: string, getMessageReports: Function, query: object, messages: Array}}\n */\nBannerMessages.propTypes = {\n  appMessages: PropTypes.object.isRequired,\n  getMessageReports: PropTypes.func,\n  query: PropTypes.object,\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.node.isRequired,\n      message: PropTypes.node.isRequired,\n      variant: PropTypes.oneOf([...Object.values(AlertVariant)])\n    })\n  ),\n  productId: PropTypes.string.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{getMessageReports: Function, query: object, messages: Array}}\n */\nBannerMessages.defaultProps = {\n  getMessageReports: helpers.noop,\n  query: {},\n  messages: [\n    {\n      id: 'cloudigradeMismatch',\n      title: translate('curiosity-banner.dataMismatchTitle'),\n      message: translate(\n        'curiosity-banner.dataMismatchMessage',\n        {\n          context: helpers.UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS !== '' && 'cloudigradeMismatch',\n          appName: helpers.UI_DISPLAY_NAME\n        },\n        [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS}\n          />\n        ]\n      )\n    }\n  ]\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getMessageReports: (id, query) => dispatch(reduxActions.rhsm.getMessageReports(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.appMessages.makeAppMessages();\n\nconst ConnectedBannerMessages = connect(makeMapStateToProps, mapDispatchToProps)(BannerMessages);\n\nexport { ConnectedBannerMessages as default, ConnectedBannerMessages, BannerMessages };\n","import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, productLabel, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      header = getTooltipDate({\n        date: itemsByKey[key]?.data.date,\n        granularity\n      });\n    }\n\n    const tempDataFacet = {\n      color: itemsByKey[key]?.color\n    };\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key]?.data.hasInfinite && t('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel'));\n\n      tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n      tempDataFacet.value = thresholdStringValue;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n      tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product: productLabel });\n      tempDataFacet.value = dataFactsValue;\n    }\n\n    data.push(tempDataFacet);\n  });\n\n  return (\n    <div className=\"victory-tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  <div\n                    aria-hidden\n                    className=\"legend-icon victory-legend-icon\"\n                    style={{\n                      backgroundColor: dataFacet.color || 'transparent'\n                    }}\n                  />\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, productLabel: string, t: translate}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  productLabel: '',\n  t: translate\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { connect, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @param {string} options.chartId\n   * @param {string} options.color\n   * @param {boolean} options.isDisabled\n   * @param {boolean} options.isThreshold\n   * @param {string} options.labelContent\n   * @param {string} options.tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"victory-legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: color\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: color\n              }}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *  - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, productLabel, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}Label`, `curiosity-graph.thresholdLabel`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t([`curiosity-graph.${id}Label`, `curiosity-graph.noLabel`], {\n              product: productLabel,\n              context: productLabel\n            });\n\n          const tooltipContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}LegendTooltip`, `curiosity-graph.thresholdLegendTooltip`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t(`curiosity-graph.${id}LegendTooltip`, { product: productLabel, context: productLabel });\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold,\n            tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, legend: object, chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {dataSets: Array}, productLabel: string, viewId: string, t: translate, legend: object,\n *     chart: {hide: Function, toggle: Function, isToggled: Function}}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connect(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer } from 'victory';\nimport {\n  Chart,\n  ChartAxis,\n  ChartStack,\n  ChartThreshold,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  dataSetsToggle = {};\n\n  resizeObserver = helpers.noop;\n\n  containerRef = React.createRef();\n\n  tooltipRef = React.createRef();\n\n  componentDidMount() {\n    this.setResizeObserve();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * Consumer exposed, hides chart layer.\n   *\n   * @event onHide\n   * @param {string} id\n   */\n  onHide = id => {\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: true };\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns all chart layers back on.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    this.dataSetsToggle = {};\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns chart layer on/off.\n   *\n   * @event onToggle\n   * @param {string} id\n   * @returns {boolean}\n   */\n  onToggle = id => {\n    const updatedToggle = !this.dataSetsToggle[id];\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: updatedToggle };\n    this.forceUpdate();\n\n    return updatedToggle;\n  };\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { chartWidth } = this.state;\n    const { clientWidth = 0 } = this.containerRef.current || {};\n\n    if (clientWidth !== chartWidth) {\n      this.setState({ chartWidth: clientWidth });\n    }\n  };\n\n  /**\n   * Consumer exposed, determine if chart layer on/off.\n   * Note: Using \"setState\" as related to this exposed check gives the appearance of a race condition.\n   * Using a class property with forceUpdate to bypass.\n   *\n   * @param {string} id\n   * @returns {boolean}\n   */\n  getIsToggled = id => this.dataSetsToggle[id] || false;\n\n  /**\n   * Set ResizeObserver for scenarios where the window.resize event doesn't fire.\n   */\n  setResizeObserve() {\n    const containerElement = this.containerRef.current;\n    const { ResizeObserver } = window;\n\n    if (containerElement && ResizeObserver) {\n      const resizeObserver = new ResizeObserver(this.onResizeContainer);\n      resizeObserver.observe(containerElement);\n      this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n    } else {\n      this.onResizeContainer();\n      window.addEventListener('resize', this.onResizeContainer);\n      this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n    }\n  }\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { dataSetsToggle } = this;\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply data set to custom tooltips.\n   *\n   * @returns {Array}\n   */\n  getTooltipData() {\n    const { dataSetsToggle } = this;\n    const { dataSets, chartTooltip } = this.props;\n    let tooltipDataSet = [];\n\n    if (chartTooltip && dataSets && dataSets[0] && dataSets[0].data) {\n      tooltipDataSet = dataSets[0].data.map((dataSet, index) => {\n        const itemsByKey = {};\n\n        dataSets.forEach(data => {\n          if (!dataSetsToggle[data.id] && data.data && data.data[index]) {\n            itemsByKey[data.id] = {\n              color: data.stroke || data.fill || data.color || '',\n              data: _cloneDeep(data.data[index])\n            };\n          }\n        });\n\n        const mockDatum = {\n          datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey, dataSets: _cloneDeep(dataSets) }\n        };\n\n        return {\n          x: dataSet.x,\n          y: null,\n          itemsByKey,\n          tooltip:\n            (React.isValidElement(chartTooltip) && React.cloneElement(chartTooltip, { ...mockDatum })) ||\n            chartTooltip({ ...mockDatum })\n        };\n      });\n    }\n\n    return tooltipDataSet;\n  }\n\n  /**\n   * ToDo: monitor Victory charts release version increment around Voronoi container attributes.\n   * Future updates could lead to additional unexpected behavior. Victory charts released a patch/fix\n   * around attribute behavior for Voronoi containers. The behavior was already \"unexpected\" in that there appears\n   * to be a need to provide the \"label\" attribute when using the \"labelComponent\" attribute, even if \"label\" is\n   * just a pass-through. Providing `label={() => ''}` was a work-around, that is now `label={obj => obj}`. See\n   * - https://github.com/FormidableLabs/victory/blob/master/CHANGELOG.md#3436-2020-05-18\n   * - https://github.com/FormidableLabs/victory/pull/1581\n   */\n  /**\n   * FixMe: Victory charts voronoi containers throw inaccurate coordinates on large graph widths\n   * Issue is \"patched\" by removing the \"x\" dimension attribute for voronoi.\n   * - https://github.com/RedHatInsights/curiosity-frontend/issues/318\n   */\n  /**\n   * Return a chart/graph tooltip Victory container component to allow custom HTML tooltips.\n   *\n   * @returns {Node}\n   */\n  renderTooltip() {\n    const { dataSetsToggle } = this;\n    const { chartTooltip, dataSets } = this.props;\n\n    if (!chartTooltip || Object.values(dataSetsToggle).filter(v => v === true).length === dataSets.length) {\n      return null;\n    }\n\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const parsedTooltipData = this.getTooltipData();\n    let globalContainerBounds = {};\n    let globalTooltipBounds = {};\n\n    const applyParsedTooltipData = ({ datum }) => {\n      const t = parsedTooltipData.find(v => v.x === datum.x) || {};\n      return t?.tooltip || '';\n    };\n\n    const FlyoutComponent = obj => {\n      const containerRef = this.containerRef.current;\n      const tooltipRef = this.tooltipRef.current;\n      const containerBounds = (containerRef && containerRef.getBoundingClientRect()) || {};\n      const tooltipBounds = (tooltipRef && tooltipRef.getBoundingClientRect()) || {};\n\n      if (containerBounds.right) {\n        globalContainerBounds = containerBounds;\n      }\n\n      if (tooltipBounds.right) {\n        globalTooltipBounds = tooltipBounds;\n      }\n\n      let xCoordinate = obj.x + 10;\n\n      if (\n        globalContainerBounds.right < globalTooltipBounds.right ||\n        obj.x + globalTooltipBounds.width > globalContainerBounds.right / 2\n      ) {\n        xCoordinate = obj.x - 10 - globalTooltipBounds.width;\n      }\n\n      const htmlContent = applyParsedTooltipData({ ...obj });\n\n      if (htmlContent) {\n        return (\n          <g>\n            <foreignObject x={xCoordinate} y={obj.y / 2.2} width=\"100%\" height=\"100%\">\n              <div ref={this.tooltipRef} style={{ display: 'inline-block' }} xmlns=\"http://www.w3.org/1999/xhtml\">\n                {htmlContent}\n              </div>\n            </foreignObject>\n          </g>\n        );\n      }\n\n      return <g />;\n    };\n\n    return (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={<FlyoutComponent />}\n        voronoiPadding={60}\n      />\n    );\n  }\n\n  /**\n   * Return a custom chart/graph legend component.\n   *\n   * @returns {Node}\n   */\n  renderLegend() {\n    const { chartLegend, dataSets } = this.props;\n\n    if (!chartLegend) {\n      return null;\n    }\n\n    const legendProps = {\n      datum: { dataSets: _cloneDeep(dataSets) },\n      chart: {\n        hide: this.onHide,\n        revert: this.onRevert,\n        toggle: this.onToggle,\n        isToggled: this.getIsToggled\n      }\n    };\n\n    return (\n      (React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n      chartLegend({ ...legendProps })\n    );\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const { dataSetsToggle } = this;\n    const { dataSets } = this.props;\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { chartLegend, padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const tooltipComponent = { containerComponent: (maxY >= 0 && this.renderTooltip()) || undefined };\n    const chartProps = { padding, ...chartDomain, ...tooltipComponent };\n\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n        {chartLegend && <div className=\"curiosity-chartarea-description victory-legend\">{this.renderLegend()}</div>}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartLegend: Node|Function, chartTooltip: Node|Function, padding, xAxisTickFormat: Function,\n *     themeColor: string, yAxisTickFormat: Function, domain: object|Array, dataSets: object,\n *     xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartLegend: null, chartTooltip: null, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: null, themeColor: string, yAxisTickFormat: null, domain: object,\n *     dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport { graphCardTypes } from './graphCardTypes';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { ChartArea } from '../chartArea/chartArea';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const graphQuery = {\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString(),\n        ...query\n      };\n\n      getGraphReportsCapacity(productId, graphQuery);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n      viewId,\n      [RHSM_API_QUERY_TYPES.GRANULARITY]: value\n    });\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, selectOptionsType, productLabel, query, viewId } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: updatedGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(updatedGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          strokeWidth: 2,\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 3;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <ChartArea\n        key={`chart_${JSON.stringify(query)}`}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend chart={chart} datum={datum} productLabel={productLabel} viewId={viewId} />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={updatedGranularity} productLabel={productLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * ToDo: Evaluate applying a minHeight attr to the MinHeight component graphCard setup\n   * Appears there may be a minor page shift when compared to the prior hard-set min-height\n   * of 410px\n   */\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, isDisabled, pending, selectOptionsType, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = this.getQueryGranularity();\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <MinHeight key=\"headerMinHeight\">\n          <CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                {cardTitle}\n              </Title>\n            </CardTitle>\n            <CardActions className={(error && 'blur') || ''}>\n              {children}\n              <Select\n                aria-label={t('curiosity-graph.dropdownPlaceholder')}\n                onSelect={this.onGranularitySelect}\n                options={options}\n                selectedOptions={graphGranularity}\n                placeholder={t('curiosity-graph.dropdownPlaceholder')}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key=\"bodyMinHeight\">\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && <Loader variant=\"graph\" />}\n              {!pending && this.renderChart()}\n            </div>\n          </CardBody>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productLabel: string, productId: string, pending: boolean, error: boolean, query: object,\n *     cardTitle: string, filterGraphData: Array, getGraphReportsCapacity: Function,\n *     selectOptionsType: string, viewId: string, t: Function, children: Node, graphData: object,\n *     isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productLabel: string, selectOptionsType: string,\n *     viewId: string, t: translate, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  productLabel: '',\n  selectOptionsType: 'default',\n  t: translate,\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import moment from 'moment';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale }) =>\n  new Intl.NumberFormat(locale, { maximumFractionDigits: 1, notation: 'compact', compactDisplay: 'short' }).format(\n    tick\n  );\n\n/**\n * Convert data into a C3 configuration object.\n *\n * @param {object} options\n * @param {Array} options.data\n * @param {string} options.granularity\n * @param {string} options.productShortLabel\n * @returns {{configuration: {padding: {top: number, left: number, bottom: number, right: number},\n *     data: {types: {}, names: {}, columns: Array, x: string, groups: Array, colors: {}},\n *     legend: {show: boolean}, grid: {y: {show: boolean}}, tooltip: {format: {title: Function,\n *     value: Function}, order: Function}, unloadBeforeLoad: boolean,\n *     spline: {interpolation: {type: string}}, axis: {x: {padding: number, tick: {format: Function},\n *     type: string}, y: {padding: {bottom: number}, default: number, min: number,\n *     tick: {show: boolean, outer: boolean, format: Function}}}, point: {show: boolean}},\n *     hiddenDataFacets: Array}}\n */\nconst c3Config = ({ data = [], granularity, productShortLabel }) => {\n  const hiddenDataFacets = [];\n  const converted = {\n    x: 'x',\n    colors: {},\n    columns: [],\n    groups: [[]],\n    names: {},\n    types: {}\n  };\n\n  const convertTimeSeriesDate = value => {\n    const dateStr = (helpers.TEST_MODE && moment.utc(value)) || moment.utc(value).local();\n    return dateStr.format('YYYY-MM-DD');\n  };\n\n  data.forEach(value => {\n    if (/^threshold/.test(value.id)) {\n      converted.colors[value.id] = value.color || chartColorGreenDark.value;\n      converted.types[value.id] = 'step';\n      converted.names[value.id] = translate(`curiosity-graph.thresholdLabel`);\n    } else {\n      converted.colors[value.id] = value.color;\n      converted.types[value.id] = 'area-spline';\n      converted.groups[0].push(value.id);\n      converted.names[value.id] = translate(`curiosity-graph.${value.id}Label`, { product: productShortLabel });\n    }\n\n    converted.columns[0] = ['x'];\n    converted.columns.push([value.id]);\n\n    let totalData = 0;\n\n    value.data.forEach(filteredValue => {\n      converted.columns[0].push(convertTimeSeriesDate(filteredValue.date));\n      converted.columns[converted.columns.length - 1].push(filteredValue.y);\n      totalData += filteredValue.y || 0;\n    });\n\n    // ToDo: need to check for infinite threshold, possibly has data\n    if (totalData <= 0) {\n      converted.columns.pop();\n      hiddenDataFacets.push(value.id);\n    }\n  });\n\n  return {\n    hiddenDataFacets,\n    configuration: {\n      tooltip: {\n        order: (a, b) => converted.columns.indexOf(a.id) - converted.columns.indexOf(b.id),\n        format: {\n          title: date =>\n            getTooltipDate({\n              date,\n              granularity\n            }),\n          value: (value, ratio, id, index) => {\n            const dataItem = data.find(dataValue => id === dataValue.id)?.data[index];\n            let updatedValue;\n\n            if (/^threshold/.test(id)) {\n              updatedValue =\n                (dataItem?.hasInfinite && translate('curiosity-graph.infiniteThresholdLabel')) ||\n                (dataItem?.y ?? translate('curiosity-graph.noDataLabel'));\n            } else {\n              updatedValue =\n                (dataItem?.hasData === false && translate('curiosity-graph.noDataLabel')) || dataItem?.y || 0;\n            }\n\n            return updatedValue;\n          }\n        }\n      },\n      unloadBeforeLoad: true,\n      padding: { left: 40, right: 40, top: 10, bottom: 10 },\n      legend: { show: false },\n      spline: {\n        interpolation: {\n          type: 'monotone'\n        }\n      },\n      data: {\n        ...converted\n      },\n      point: {\n        show: false\n      },\n      grid: {\n        y: {\n          show: true\n        }\n      },\n      axis: {\n        x: {\n          type: 'timeseries',\n          tick: {\n            format: tick => {\n              const xAxisTicks = converted.columns[0].slice(1);\n              const formattedDate = convertTimeSeriesDate(tick);\n              const dateIndex = xAxisTicks.indexOf(formattedDate);\n              const previousDate = dateIndex > -1 && xAxisTicks[dateIndex - 1];\n\n              return xAxisTickFormat({\n                tick: dateIndex,\n                date: formattedDate,\n                previousDate,\n                granularity\n              });\n            }\n          },\n          padding: 0\n        },\n        y: {\n          default: [0, 50],\n          padding: { bottom: 0 },\n          min: 0,\n          tick: {\n            show: false,\n            outer: false,\n            format: tick => (tick === 0 ? '' : yAxisTickFormat({ tick }))\n          }\n        }\n      }\n    }\n  };\n};\n\nconst c3GraphCardHelpers = {\n  c3Config,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  c3GraphCardHelpers as default,\n  c3GraphCardHelpers,\n  c3Config,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\n\n/**\n * A chart/graph legend button.\n *\n * @augments React.Component\n * @fires onFocus\n * @fires onRevert\n * @fires onToggle\n */\nclass C3GraphCardLegendItem extends React.Component {\n  state = { updatedIsToggled: null };\n\n  /**\n   * C3 chart display focus.\n   *\n   * @event onFocus\n   */\n  onFocus = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, chartId, getToggle, isToggled } = this.props;\n\n    if ((typeof getToggle === 'function' && !isToggled) || !updatedIsToggled) {\n      chart.focus(chartId);\n    }\n  };\n\n  /**\n   * C3 chart display revert.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, getToggle, isToggled } = this.props;\n\n    if ((typeof getToggle === 'function' && !isToggled) || !updatedIsToggled) {\n      chart.revert();\n    }\n  };\n\n  /**\n   * C3 chart display toggle.\n   *\n   * @event onToggle\n   */\n  onToggle = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, chartId, getToggle, isToggled } = this.props;\n\n    chart.toggle(chartId);\n\n    if (typeof getToggle === 'function') {\n      getToggle({ isToggled: !isToggled });\n    } else {\n      this.setState({\n        updatedIsToggled: !updatedIsToggled\n      });\n    }\n\n    this.onRevert();\n  };\n\n  /**\n   * C3 chart display config color.\n   *\n   * @returns {string}\n   */\n  getColor = () => {\n    const { chart, chartId } = this.props;\n    return chart.color(chartId);\n  };\n\n  /**\n   * ToDO: evaluate using nullish coalescing operator for checkIsToggled\n   */\n  /**\n   * Render a chart legend item.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedIsToggled } = this.state;\n    const { children, chart, chartId, isDisabled, isThreshold, isToggled, tooltipContent } = this.props;\n    const checkIsToggled =\n      (updatedIsToggled === null && typeof isToggled === 'boolean' && isToggled) || updatedIsToggled || false;\n\n    if (checkIsToggled) {\n      chart.hide(chartId);\n    }\n\n    const button = (\n      <Button\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        onClick={this.onToggle}\n        onFocus={this.onFocus}\n        onMouseOver={this.onFocus}\n        onBlur={this.onRevert}\n        onMouseOut={this.onRevert}\n        onKeyPress={this.onToggle}\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: this.getColor()\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: this.getColor()\n              }}\n            />\n          )\n        }\n      >\n        {children}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *   - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={tooltipContent}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartId: string, children: Node, isDisabled: boolean, tooltipContent: Node, chart: object,\n *    isThreshold: boolean, isToggled: boolean, getToggle: Function}}\n */\nC3GraphCardLegendItem.propTypes = {\n  chart: PropTypes.shape({\n    color: PropTypes.func,\n    focus: PropTypes.func,\n    hide: PropTypes.func,\n    revert: PropTypes.func,\n    toggle: PropTypes.func\n  }),\n  chartId: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  isThreshold: PropTypes.bool,\n  isToggled: PropTypes.bool,\n  tooltipContent: PropTypes.node,\n  getToggle: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, isDisabled: boolean, tooltipContent: null, chart: {hide: Function,\n *    color: Function, focus: Function, revert: Function, toggle: Function}, isThreshold: boolean,\n *    isToggled: boolean, getToggle: Function}}\n */\nC3GraphCardLegendItem.defaultProps = {\n  chart: {\n    color: helpers.noop,\n    focus: helpers.noop,\n    hide: helpers.noop,\n    revert: helpers.noop,\n    toggle: helpers.noop\n  },\n  children: null,\n  isDisabled: false,\n  isThreshold: false,\n  isToggled: false,\n  tooltipContent: null,\n  getToggle: null\n};\n\nexport { C3GraphCardLegendItem as default, C3GraphCardLegendItem };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport c3 from 'c3';\nimport _isEqual from 'lodash/isEqual';\nimport 'c3/c3.min.css';\nimport { helpers } from '../../common';\n\n/**\n * C3 wrapper.\n * Uses aspects from https://github.com/bcbcarl/react-c3js and https://github.com/wuct/react-c3-component\n *\n * @augments React.Component\n */\nclass C3Chart extends React.Component {\n  state = { chart: null };\n\n  node = React.createRef();\n\n  componentDidMount() {\n    this.generateChart();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { config } = this.props;\n\n    if (!_isEqual(prevProps.config.data, config.data)) {\n      this.generateChart();\n    }\n  }\n\n  componentWillUnmount() {\n    const { chart } = this.state;\n    if (chart) {\n      chart.destroy();\n    }\n    this.setState({ chart: null });\n  }\n\n  generateChart() {\n    const { chart } = this.state;\n    const { config, onComplete } = this.props;\n\n    let updatedChart = chart;\n    if (!updatedChart) {\n      updatedChart = c3.generate({ bindto: this.node.current, ...config });\n    }\n\n    updatedChart.load({\n      ...config.data,\n      unload: config.unloadBeforeLoad || false,\n      done: () => {\n        this.setState({ chart: updatedChart }, () => {\n          if (config.done) {\n            config.done({ chart: updatedChart, config });\n          } else {\n            onComplete({ chart: updatedChart, config });\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const { chart } = this.state;\n    const { className, children, config, style } = this.props;\n\n    return (\n      <div className={`curiosity-c3chart ${className}`} style={style}>\n        <div ref={this.node} className=\"curiosity-c3chart-container\" />\n        {chart && (\n          <div className=\"curiosity-c3chart-description\">\n            {(typeof children === 'function' && children({ chart, config })) || children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{children: Node|Function, onComplete: Function, className: string, style: object, config}}\n */\nC3Chart.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  className: PropTypes.string,\n  config: PropTypes.shape({\n    unloadBeforeLoad: PropTypes.bool,\n    data: PropTypes.object,\n    done: PropTypes.func\n  }),\n  onComplete: PropTypes.func,\n  style: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, onComplete: Function, className: null, style: {}, config: {}}}\n */\nC3Chart.defaultProps = {\n  children: null,\n  className: null,\n  config: {},\n  onComplete: helpers.noop,\n  style: {}\n};\n\nexport { C3Chart as default, C3Chart };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { c3GraphCardHelpers } from './c3GraphCardHelpers';\nimport { C3GraphCardLegendItem } from './c3GraphCardLegendItem';\nimport { graphCardTypes } from '../graphCard/graphCardTypes';\nimport { C3Chart } from '../c3Chart/c3Chart';\nimport { Loader } from '../loader/loader';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: Convert \"productShortLabel\" prop to \"productLabel\" for consistency\n * This is dependent on ALL c3 components being removed as part of future updates.\n */\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass C3GraphCard extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const graphQuery = {\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString(),\n        ...query\n      };\n\n      getGraphReportsCapacity(productId, graphQuery);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n      viewId,\n      [RHSM_API_QUERY_TYPES.GRANULARITY]: value\n    });\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * Apply a custom legend.\n   *\n   * @param {object} options\n   * @param {Function} options.chart\n   * @param {Array} options.filteredData\n   * @param {string} options.granularity\n   * @param {Array} options.hiddenDataFacets\n   * @returns {Array}\n   */\n  renderLegend({ chart, filteredData = [], granularity, hiddenDataFacets = [] }) {\n    const { state } = this;\n    const { productId, productShortLabel, t } = this.props;\n\n    return filteredData.map(({ id }) => {\n      const isThreshold = /^threshold/.test(id);\n      const isDataHidden = hiddenDataFacets.includes(id);\n      const tooltipContent = (\n        <p>{(isThreshold && t(`curiosity-graph.thresholdLegendTooltip`)) || t(`curiosity-graph.${id}LegendTooltip`)}</p>\n      );\n\n      const getToggle = ({ isToggled }) => this.setState({ [`${productId}-${granularity}-${id}`]: isToggled });\n      const isToggled = state[`${productId}-${granularity}-${id}`] || false;\n\n      return (\n        <C3GraphCardLegendItem\n          key={`legend-${productId}-${granularity}-${id}`}\n          chart={chart}\n          chartId={id}\n          tooltipContent={tooltipContent}\n          isDisabled={isDataHidden}\n          isThreshold={isThreshold}\n          isToggled={isToggled}\n          getToggle={getToggle}\n        >\n          {(isThreshold && t(`curiosity-graph.thresholdLabel`)) ||\n            t(`curiosity-graph.${id}Label`, { product: productShortLabel })}\n        </C3GraphCardLegendItem>\n      );\n    });\n  }\n\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, productId, productShortLabel, selectOptionsType } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    if (!graphData || !Object.values(graphData).length) {\n      return null;\n    }\n\n    const filtered = [];\n\n    if (filterGraphData.length) {\n      filterGraphData.forEach(filteredValue => {\n        if (graphData[filteredValue.id]) {\n          filtered.push({ ...filteredValue, data: [...graphData[filteredValue.id]] });\n        }\n      });\n    } else {\n      Object.keys(graphData).forEach(id => {\n        filtered.push({ id, data: [...graphData[id]] });\n      });\n    }\n\n    const { configuration = {}, hiddenDataFacets = [] } = c3GraphCardHelpers.c3Config({\n      data: filtered,\n      granularity: updatedGranularity,\n      productShortLabel\n    });\n\n    return (\n      <C3Chart key={`chart-${productId}-${updatedGranularity}`} config={configuration}>\n        {({ chart }) =>\n          this.renderLegend({\n            chart,\n            filteredData: filtered,\n            granularity: updatedGranularity,\n            hiddenDataFacets\n          })\n        }\n      </C3Chart>\n    );\n  }\n\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, isDisabled, pending, selectOptionsType, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = this.getQueryGranularity();\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <CardHeader>\n          <CardTitle>\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {cardTitle}\n            </Title>\n          </CardTitle>\n          <CardActions className={(error && 'blur') || ''}>\n            {children}\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onGranularitySelect}\n              options={options}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHeader>\n        <CardBody>\n          <div className={(error && 'blur') || 'fadein'}>\n            {pending && <Loader variant=\"graph\" />}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, pending: boolean, error: boolean, query: object, cardTitle: string,\n *     filterGraphData: Array, getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nC3GraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      color: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  productShortLabel: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: translate, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nC3GraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  selectOptionsType: 'default',\n  t: translate,\n  productShortLabel: '',\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(C3GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, C3GraphCard };\n","import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Apply sort filter to filters.\n *\n * @param {object} params\n * @param {object} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {object}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} }) => {\n  const { id } = filter;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === id\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  return updatedFilter;\n};\n\nconst applyWrappableFilters = ({ filter = {} }) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Apply additional properties to filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {Array}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} }) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.cellData\n * @param {object} params.session\n * @returns {{columnHeaders: Array, cells: Array, data: object}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, session = {} }) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value]) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value);\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    filters.forEach(({ id, cell, cellWidth, header, onSort, sortActive, sortDirection, transforms }) => {\n      let headerUpdated;\n      let cellUpdated;\n\n      if (allCells[id]) {\n        headerUpdated = allCells[id]?.title ?? id;\n        cellUpdated = allCells[id]?.value ?? '';\n      }\n\n      // set table header cell filter params\n      if (header) {\n        headerUpdated = (typeof header === 'function' && header({ ...allCells })) || header;\n      }\n\n      if (\n        typeof headerUpdated === 'string' ||\n        typeof headerUpdated === 'number' ||\n        React.isValidElement(headerUpdated)\n      ) {\n        headerUpdated = {\n          title: headerUpdated\n        };\n      }\n\n      headerUpdated.transforms = [];\n\n      if (Array.isArray(transforms)) {\n        headerUpdated.transforms = headerUpdated.transforms.concat([...transforms]);\n      }\n\n      if (typeof cellWidth === 'number') {\n        headerUpdated.transforms.push(PfCellWidth(cellWidth));\n      }\n\n      if (typeof onSort === 'function') {\n        headerUpdated = {\n          ...headerUpdated,\n          onSort: obj => onSort({ ...allCells }, { ...obj, id }),\n          sortActive,\n          sortDirection\n        };\n      }\n\n      // set table row cell filter params\n      if (cell) {\n        cellUpdated = (typeof cell === 'function' && cell({ ...allCells }, { ...session })) || cell;\n      }\n\n      if (typeof cellUpdated === 'string' || typeof cellUpdated === 'number' || React.isValidElement(cellUpdated)) {\n        cellUpdated = {\n          title: cellUpdated\n        };\n      }\n\n      updatedColumnHeaders.push(headerUpdated);\n      updatedCells.push(cellUpdated);\n    });\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryListHelpers = {\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryListHelpers as default,\n  inventoryListHelpers,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { helpers } from '../../common';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { Loader } from '../loader/loader';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { Table } from '../table/table';\n\n/**\n * ToDo: Consider removing the query prop entirely.\n * The current API doesn't allow setting more than \"offset\" and \"limit\"\n */\n/**\n * ToDo: Review moving the \"onScroll\" layout into a standalone component.\n */\n/**\n * A system inventory guests component.\n *\n * @augments React.Component\n * @fires onUpdateGuestsData\n * @fires onScroll\n */\nclass GuestsList extends React.Component {\n  state = { currentPage: 0, limit: 100, previousData: [] };\n\n  componentDidMount() {\n    this.onUpdateGuestsData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentPage } = this.state;\n\n    if (currentPage !== prevState.currentPage) {\n      this.onUpdateGuestsData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGuestsData\n   */\n  onUpdateGuestsData = () => {\n    const { currentPage, limit } = this.state;\n    const { getHostsInventoryGuests, query, id } = this.props;\n\n    if (id) {\n      const updatedQuery = {\n        ...query,\n        [RHSM_API_QUERY_TYPES.LIMIT]: limit,\n        [RHSM_API_QUERY_TYPES.OFFSET]: currentPage * limit || 0\n      };\n\n      const { guestsQuery } = apiQueries.parseRhsmQuery(updatedQuery);\n      getHostsInventoryGuests(id, guestsQuery);\n    }\n  };\n\n  /**\n   * Update page state.\n   *\n   * @event onScroll\n   * @param {object} event\n   */\n  onScroll = event => {\n    const { target } = event;\n    const { currentPage, limit, previousData } = this.state;\n    const { numberOfGuests, pending, listData } = this.props;\n\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > (currentPage + 1) * limit && bottom && !pending) {\n      const newPage = currentPage + 1;\n      const updatedData = [...previousData, ...(listData || [])];\n\n      this.setState({\n        previousData: updatedData,\n        currentPage: newPage\n      });\n    }\n  };\n\n  renderLoader() {\n    const { currentPage } = this.state;\n    const { filterGuestsData, listData, pending } = this.props;\n\n    if (currentPage > 0 && pending) {\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            rowCount: 0,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  }\n\n  /**\n   * ToDo: Consider moving the \"meaning of life\" into the default props on iteration.\n   * For everyone else... move the 42 into default props, possibly the 275.\n   */\n  /**\n   * Render a guests table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { previousData } = this.state;\n    const { filterGuestsData, listData, numberOfGuests, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = [...previousData, ...(listData || [])].map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: filterGuestsData,\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    // Include the table header\n    let updatedHeight = (numberOfGuests + 1) * 42;\n    updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n    return (\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={this.onScroll}\n        >\n          {this.renderLoader()}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render a guest list table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { currentPage } = this.state;\n    const { error, filterGuestsData, listData, numberOfGuests, pending, perPageDefault } = this.props;\n\n    return (\n      <div className={`fadein ${(error && 'blur') || ''}`}>\n        {pending && currentPage === 0 && (\n          <Loader\n            variant=\"table\"\n            tableProps={{\n              borders: false,\n              colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n              colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n              rowCount: numberOfGuests < perPageDefault ? numberOfGuests : perPageDefault,\n              variant: TableVariant.compact\n            }}\n          />\n        )}\n        {((!pending && currentPage === 0) || currentPage > 0) && this.renderTable()}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: object,\n *     pending: boolean, query: object, numberOfGuests: number, perPageDefault: number, id: string,\n *     error: boolean}}\n */\nGuestsList.propTypes = {\n  error: PropTypes.bool,\n  filterGuestsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventoryGuests: PropTypes.func,\n  listData: PropTypes.array,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  pending: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object,\n  session: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: Array,\n *     pending: boolean, query: object, perPageDefault: number, error: boolean}}\n */\nGuestsList.defaultProps = {\n  error: false,\n  filterGuestsData: [],\n  getHostsInventoryGuests: helpers.noop,\n  listData: [],\n  pending: false,\n  perPageDefault: 5,\n  query: {},\n  session: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventoryGuests: (id, query) => dispatch(reduxActions.rhsm.getHostsInventoryGuests(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.guestsList.makeGuestsList();\n\nconst ConnectedGuestsList = connect(makeMapStateToProps, mapDispatchToProps)(GuestsList);\n\nexport { ConnectedGuestsList as default, ConnectedGuestsList, GuestsList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * Contained pagination.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onPage\n * @fires onPerPage\n */\nclass Pagination extends React.Component {\n  /**\n   * Call page update.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.page\n   */\n  onPage = ({ page }) => {\n    const { offsetDefault, perPageDefault, query } = this.props;\n    const updatedPerPage = query?.[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const offset = updatedPerPage * (page - 1) || offsetDefault;\n\n    this.setOffset(offset);\n    this.setLimit(updatedPerPage);\n  };\n\n  /**\n   * Call per-page update.\n   *\n   * @event onPerPage\n   * @param {object} params\n   * @param {number} params.perPage\n   */\n  onPerPage = ({ perPage }) => {\n    this.setOffset();\n    this.setLimit(perPage);\n  };\n\n  /**\n   * Set page state.\n   *\n   * @param {number} offset\n   */\n  setOffset(offset) {\n    const { offsetDefault, productId } = this.props;\n    const updatedActions = [];\n\n    updatedActions.push({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n      viewId: productId,\n      [RHSM_API_QUERY_TYPES.OFFSET]: offset ?? offsetDefault\n    });\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Set per-page state.\n   *\n   * @param {number} limit\n   */\n  setLimit(limit) {\n    const { perPageDefault, productId } = this.props;\n    const updatedActions = [];\n\n    updatedActions.push({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n      viewId: productId,\n      [RHSM_API_QUERY_TYPES.LIMIT]: limit ?? perPageDefault\n    });\n\n    store.dispatch(updatedActions);\n  }\n\n  // ToDo: Consider using the PfPagination \"offset\" prop\n  /**\n   * Render pagination.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { dropDirection, isCompact, isDisabled, itemCount, perPageDefault, query, variant } = this.props;\n    const updatedPage = query[RHSM_API_QUERY_TYPES.OFFSET] / query[RHSM_API_QUERY_TYPES.LIMIT] + 1 || 1;\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n\n    return (\n      <PfPagination\n        className={(!itemCount && 'hidden') || ''}\n        dropDirection={dropDirection}\n        isCompact={isCompact}\n        isDisabled={isDisabled || !itemCount}\n        itemCount={itemCount}\n        page={updatedPage}\n        perPage={updatedPerPage}\n        onSetPage={(event, page) => this.onPage({ event, page })}\n        onPerPageSelect={(event, perPage) => this.onPerPage({ event, perPage })}\n        variant={variant}\n      />\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, productId: string, query, dropDirection: string,\n *     offsetDefault: number, variant: string, perPageDefault: number, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.LIMIT]: PropTypes.number,\n    [RHSM_API_QUERY_TYPES.OFFSET]: PropTypes.number\n  }),\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offsetDefault: PropTypes.number,\n  perPageDefault: PropTypes.number,\n  productId: PropTypes.string.isRequired,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, query: object, dropDirection: string, offsetDefault: number,\n *     variant: null, perPageDefault: number, isDisabled: boolean, itemCount: number}}\n */\nPagination.defaultProps = {\n  query: {},\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offsetDefault: 0,\n  perPageDefault: 10,\n  variant: null\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.view\n * @param {object} props\n * @param {string} props.productId\n * @returns {object}\n */\nconst mapStateToProps = ({ view }, { productId }) => ({ query: view.query?.[productId] });\n\nconst ConnectedPagination = connect(mapStateToProps)(Pagination);\n\nexport { ConnectedPagination as default, ConnectedPagination, Pagination };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Card, CardActions, CardBody, CardFooter, CardHeader, CardTitle, Title } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport GuestsList from '../guestsList/guestsList';\nimport { inventoryListHelpers } from './inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * A system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onUpdateInventoryData\n */\nclass InventoryList extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getHostsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getHostsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterGuestsData, filterInventoryData, listData, query, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      const hasGuests = cellData?.numberOfGuests > 0;\n      const guestsId = cellData?.subscriptionManagerId;\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells,\n        expandedContent: hasGuests && guestsId && (\n          <GuestsList\n            key={guestsId}\n            filterGuestsData={filterGuestsData}\n            numberOfGuests={cellData?.numberOfGuests}\n            id={guestsId}\n            query={query}\n          />\n        )\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      cardTitle,\n      error,\n      filterInventoryData,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      productId,\n      query,\n      viewId,\n      fulfilled\n    } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const updatedPerPage = query?.[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedPage = query[RHSM_API_QUERY_TYPES.OFFSET] / query[RHSM_API_QUERY_TYPES.LIMIT] + 1 || 1;\n    const isLastPage = updatedPage === Math.ceil(itemCount / updatedPerPage);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                {cardTitle}\n              </Title>\n            </CardTitle>\n            <CardActions className={(error && 'blur') || ''}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                productId={productId}\n                viewId={viewId}\n                perPageDefault={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter className={(error && 'blur') || ''}>\n            <TableToolbar isFooter>\n              <Pagination\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                productId={productId}\n                viewId={viewId}\n                perPageDefault={updatedPerPage}\n                dropDirection=\"up\"\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, listData: Array, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, getHostsInventory: Function, error: boolean, cardTitle: string, itemCount: number,\n *     viewId: string, filterInventoryData: Array, filterGuestsData: Array, perPageDefault: number,\n *     isDisabled: boolean}}\n */\nInventoryList.propTypes = {\n  cardTitle: PropTypes.string,\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterGuestsData: PropTypes.array,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{listData: Array, session: object, pending: boolean, fulfilled: boolean, getHostsInventory: Function,\n *     error: boolean, cardTitle: null, itemCount: number, viewId: string, filterInventoryData: Array,\n *     filterGuestsData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.defaultProps = {\n  cardTitle: null,\n  error: false,\n  fulfilled: false,\n  filterGuestsData: [],\n  filterInventoryData: [],\n  getHostsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  viewId: 'inventoryList'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventory: (id, query) => dispatch(reduxActions.rhsm.getHostsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.inventoryList.makeInventoryList();\n\nconst ConnectedInventoryList = connect(makeMapStateToProps, mapDispatchToProps)(InventoryList);\n\nexport { ConnectedInventoryList as default, ConnectedInventoryList, InventoryList };\n","import { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SLA_TYPES as SLA_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES as USAGE_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = optionsType => {\n  switch (optionsType) {\n    case RHSM_API_QUERY_TYPES.SLA:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.slaPremium'),\n            value: SLA_TYPES.PREMIUM\n          },\n          {\n            title: translate('curiosity-toolbar.slaStandard'),\n            value: SLA_TYPES.STANDARD\n          },\n          {\n            title: translate('curiosity-toolbar.slaSelfSupport'),\n            value: SLA_TYPES.SELF\n          },\n          {\n            title: translate('curiosity-toolbar.slaNone'),\n            value: SLA_TYPES.NONE\n          }\n        ]\n      };\n    case RHSM_API_QUERY_TYPES.USAGE:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.usageDevelopment'),\n            value: USAGE_TYPES.DEVELOPMENT\n          },\n          {\n            title: translate('curiosity-toolbar.usageDisaster'),\n            value: USAGE_TYPES.DISASTER\n          },\n          {\n            title: translate('curiosity-toolbar.usageProduction'),\n            value: USAGE_TYPES.PRODUCTION\n          },\n          {\n            title: translate('curiosity-toolbar.usageUnspecified'),\n            value: USAGE_TYPES.UNSPECIFIED\n          }\n        ]\n      };\n    default:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.SLA }),\n            value: RHSM_API_QUERY_TYPES.SLA\n          },\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.USAGE }),\n            value: RHSM_API_QUERY_TYPES.USAGE\n          }\n        ]\n      };\n  }\n};\n\nconst toolbarTypes = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarTypes as default, toolbarTypes, getOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar as PfToolbar,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup\n} from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons';\nimport { Select } from '../form/select';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onClearFilter\n * @fires onCategorySelect\n * @fires onSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear all filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    const { hardFilterReset } = this.props;\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: new Set() } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [RHSM_API_QUERY_TYPES.SLA]: null,\n            [RHSM_API_QUERY_TYPES.USAGE]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: null } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Clear individual filter state.\n   *\n   * @event onClearFilter\n   * @param {string} categoryTitle\n   */\n  onClearFilter = categoryTitle => {\n    const { activeFilters, currentFilter, hardFilterReset } = this.props;\n\n    const categoryOptions = toolbarTypes.getOptions();\n    const { value: categoryValue } = categoryOptions.options.find(({ title }) => title === categoryTitle) || {};\n\n    if (!categoryValue) {\n      return;\n    }\n\n    const updatedActiveFilters = new Set(activeFilters);\n    updatedActiveFilters.delete(categoryValue);\n\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: updatedActiveFilters } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [categoryValue]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      const updatedCurrentFilter = (updatedActiveFilters.size > 0 && currentFilter) || null;\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: updatedCurrentFilter } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Set Category selection.\n   *\n   * @event onCategorySelect\n   * @param {object} event\n   */\n  onCategorySelect = event => {\n    const { value } = event;\n    this.setDispatch({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: value } });\n  };\n\n  /**\n   * Set select filter selection for dispatch.\n   *\n   * @param {object} params\n   * @param {object} params.event\n   * @param {string} params.field\n   */\n  onSelect = ({ event, field }) => {\n    const { activeFilters } = this.props;\n    const { value } = event;\n    const updatedActiveFilters = new Set(activeFilters).add(field);\n\n    this.setDispatch(\n      [\n        {\n          type: reduxTypes.toolbar.SET_ACTIVE_FILTERS,\n          data: { activeFilters: updatedActiveFilters }\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_TYPES[field],\n          data: { [field]: value }\n        }\n      ],\n      true\n    );\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {Array|object} actions\n   * @param {boolean} resetPage\n   */\n  setDispatch(actions, resetPage = false) {\n    const { viewId } = this.props;\n    const updatedActions = ((Array.isArray(actions) && actions) || [actions]).map(({ type, data }) => ({\n      type,\n      viewId,\n      ...data\n    }));\n\n    if (resetPage) {\n      updatedActions.push({\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST\n      });\n    }\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Available, and selected select filter options.\n   *\n   * @param {string} field\n   * @returns {{optionsSelected: Array, options: Array }}\n   */\n  setSelectFilter(field) {\n    const { query } = this.props;\n    const options = toolbarTypes.getOptions(field);\n    const currentFilter = this.getCurrentFilter();\n    let filter;\n\n    if (field) {\n      filter = typeof query?.[field] === 'string' && options.options.find(({ value }) => value === query?.[field]);\n    } else {\n      filter = options.options.find(({ value }) => value === currentFilter);\n    }\n\n    const optionsSelected = (filter?.title && [filter.title]) || (options?.selected && [options.selected]) || [];\n\n    return { options, optionsSelected };\n  }\n\n  /**\n   * Return the currentFilter, fallback to selected\n   *\n   * @returns {string|undefined}\n   */\n  getCurrentFilter() {\n    const { currentFilter, filterOptions } = this.props;\n\n    return (\n      currentFilter ||\n      filterOptions.find(({ selected }) => selected === true)?.id ||\n      (filterOptions.length === 1 && filterOptions[0]?.id)\n    );\n  }\n\n  /**\n   * A select filter node.\n   *\n   * @param {object} params\n   * @param {string} params.id\n   * @returns {object}\n   */\n  renderSelectFilter({ id: field }) {\n    const { t } = this.props;\n    const { options, optionsSelected } = this.setSelectFilter(field);\n    const currentFilter = this.getCurrentFilter();\n\n    return (\n      <ToolbarFilter\n        key={field}\n        chips={optionsSelected}\n        deleteChip={this.onClearFilter}\n        categoryName={t('curiosity-toolbar.category', { context: field })}\n        showToolbarItem={currentFilter === field}\n      >\n        <Select\n          aria-label={t('curiosity-toolbar.category', { context: field })}\n          onSelect={event => this.onSelect({ event, field })}\n          selectedOptions={optionsSelected}\n          placeholder={t('curiosity-toolbar.placeholder', { context: field })}\n          options={options.options}\n        />\n      </ToolbarFilter>\n    );\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { filterOptions, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options: categoryOptions, optionsSelected: categoryOptionsSelected } = this.setSelectFilter();\n\n    return (\n      <PfToolbar\n        id=\"curiosity-toolbar\"\n        className=\"curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"sm\"\n        clearAllFilters={this.onClear}\n      >\n        <ToolbarContent>\n          <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"md\">\n            <ToolbarGroup variant=\"filter-group\">\n              {filterOptions.length !== 1 && (\n                <ToolbarItem>\n                  <Select\n                    aria-label={t('curiosity-toolbar.category')}\n                    onSelect={this.onCategorySelect}\n                    selectedOptions={categoryOptionsSelected}\n                    placeholder={t('curiosity-toolbar.placeholder')}\n                    options={categoryOptions.options}\n                    toggleIcon={<FilterIcon />}\n                  />\n                </ToolbarItem>\n              )}\n              {filterOptions.map(({ id, selected }) => this.renderSelectFilter({ id, selected }))}\n            </ToolbarGroup>\n          </ToolbarToggleGroup>\n        </ToolbarContent>\n      </PfToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, Array}}\n */\nToolbar.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.SLA]: PropTypes.string,\n    [RHSM_API_QUERY_TYPES.USAGE]: PropTypes.string\n  }),\n  activeFilters: PropTypes.instanceOf(Set),\n  currentFilter: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n  filterOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      filterType: PropTypes.oneOf(['select']),\n      id: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n      selected: PropTypes.bool\n    })\n  ),\n  hardFilterReset: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, filterOptions: Array}}\n */\nToolbar.defaultProps = {\n  query: {},\n  activeFilters: new Set(),\n  currentFilter: null,\n  filterOptions: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA,\n      filterType: 'select'\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      filterType: 'select',\n      selected: true\n    }\n  ],\n  hardFilterReset: false,\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: translate,\n  viewId: 'toolbar'\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.toolbar\n * @param {object} props\n * @param {string} props.viewId\n * @returns {object}\n */\nconst mapStateToProps = ({ toolbar }, { viewId }) => ({ ...toolbar.filters?.[viewId] });\n\nconst ConnectedToolbar = connect(mapStateToProps)(Toolbar);\n\nexport { ConnectedToolbar as default, ConnectedToolbar, Toolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * FixMe: Patternfly React select generates a random ID for select options.\n * On the surface this seems like a legitimate update until you remember unit tests.\n * Quite a few apps use test snapshots causing certain rendered select snapshots to\n * fail consistently. Appears this may have been part of the \"favorites\" update.\n * The solution centers around updating the  \"GenerateId helper\" and detecting a\n * test, dev, or prod environment instead of generating a random string every time.\n *\n * This issue also has the side-effect of making the attribute inadvertently\n * \"required\" anywhere it's used in an effort to squash it.\n */\n/**\n * A wrapper for Patternfly Select. Provides additional event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @param expanded\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected =\n          activateOptions.includes(convertedOption.value) || activateOptions.includes(convertedOption.title);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, isToggleText, placeholder, toggleIcon, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select${(!isToggleText && '__no-toggle-text') || ''} ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isOpen={isExpanded}\n        toggleIcon={toggleIcon}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(`${option.title}-${option.value}`)}\n              id={window.btoa(`${option.title}-${option.value}`)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{isToggleText: boolean, toggleIcon: Node|Function, name: string, options: object,\n *     selectedOptions: (number|string|Array), variant: (object|string), className: string,\n *     id: string, isDisabled: boolean, placeholder: string, ariaLabel: string,\n *     onSelect: Function}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.string,\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{isToggleText: boolean, toggleIcon: null, name: null, options: Array, selectedOptions: null,\n *     variant: SelectVariant.single, className: string, id: string, isDisabled: boolean,\n *     placeholder: string, ariaLabel: string, onSelect: Function}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  isToggleText: true,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  selectedOptions: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n"],"sourceRoot":""}
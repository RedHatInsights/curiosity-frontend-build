{"version":3,"sources":["components/chart/chartContext.js","components/chart/chartLegend.js","../node_modules/lodash/cloneDeep.js","../node_modules/lodash/_getSymbolsIn.js","../node_modules/lodash/_getAllKeysIn.js","../node_modules/lodash/_baseClone.js","../node_modules/lodash/_arrayEach.js","../node_modules/lodash/_baseAssign.js","../node_modules/lodash/_baseAssignIn.js","../node_modules/lodash/_copySymbols.js","../node_modules/lodash/_copySymbolsIn.js","../node_modules/lodash/_initCloneArray.js","../node_modules/lodash/_initCloneByTag.js","../node_modules/lodash/_cloneDataView.js","../node_modules/lodash/_cloneRegExp.js","../node_modules/lodash/_cloneSymbol.js","../node_modules/lodash/isMap.js","../node_modules/lodash/_baseIsMap.js","../node_modules/lodash/isSet.js","../node_modules/lodash/_baseIsSet.js"],"names":["DEFAULT_CONTEXT","chartContainerRef","helpers","noop","chartSettings","chartTooltipRef","dataSetsToggle","ChartContext","React","createContext","useChartContext","useContext","useToggleData","useAliasChartContext","contextDataSetsToggle","setDataSetsToggle","onHide","useCallback","id","prevState","onRevert","onToggle","updatedToggle","getIsToggled","context","ChartLegend","chartLegend","dataSets","legendProps","datum","_cloneDeep","chart","hide","revert","toggle","isToggled","className","isValidElement","cloneElement","defaultProps","baseClone","require","module","exports","value","CLONE_DEEP_FLAG","arrayPush","getPrototype","getSymbols","stubArray","getSymbolsIn","Object","getOwnPropertySymbols","object","result","baseGetAllKeys","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","isSet","keys","argsTag","funcTag","objectTag","cloneableTags","bitmask","customizer","key","stack","isDeep","isFlat","isFull","undefined","isArr","tag","isFunc","stacked","get","set","forEach","subValue","add","props","array","iteratee","index","length","copyObject","source","hasOwnProperty","prototype","constructor","call","input","cloneArrayBuffer","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","dataView","buffer","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","Symbol","symbolProto","symbolValueOf","valueOf","symbol","baseIsMap","baseUnary","nodeUtil","nodeIsMap","isObjectLike","baseIsSet","nodeIsSet"],"mappings":"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","file":"static/js/14.45265862.chunk.js","sourcesContent":["import React, { useCallback, useContext } from 'react';\nimport { helpers } from '../../common';\n\n/**\n * Chart context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { chartContainerRef: helpers.noop, chartSettings: {}, chartTooltipRef: helpers.noop, dataSetsToggle: [] },\n  helpers.noop\n];\n\nconst ChartContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated chart context.\n *\n * @returns {React.Context<{}>}\n */\nconst useChartContext = () => useContext(ChartContext);\n\n/**\n * ToDo: reevaluate this alternative pattern of passing hooks as options, helps testing\n */\n/**\n * Track, show, and hide chart data layers.\n *\n * @param {object} hooks\n * @param {Function} hooks.useChartContext\n * @returns {{onRevert: Function, onToggle: Function, getIsToggled: Function, dataSetsToggle: object,\n *     onHide: Function}}\n */\nconst useToggleData = ({ useChartContext: useAliasChartContext = useChartContext } = {}) => {\n  const { dataSetsToggle: contextDataSetsToggle = [] } = useAliasChartContext();\n  const [dataSetsToggle, setDataSetsToggle] = contextDataSetsToggle;\n\n  /**\n   * Hide a graph layer.\n   *\n   * @type {(function(*): void)|*}\n   */\n  const onHide = useCallback(\n    id => {\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: true }));\n    },\n    [setDataSetsToggle]\n  );\n\n  // ToDo: re-evaluate useCallback here.\n  /**\n   * Reset graph layers.\n   *\n   * @type {(function(): void)|*}\n   */\n  const onRevert = useCallback(() => {\n    setDataSetsToggle(() => ({}));\n  }, [setDataSetsToggle]);\n\n  /**\n   * Hide/show graph layers.\n   *\n   * @type {function(*): boolean}\n   */\n  const onToggle = useCallback(\n    id => {\n      const updatedToggle = !dataSetsToggle?.[id];\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: updatedToggle }));\n      return updatedToggle;\n    },\n    [dataSetsToggle, setDataSetsToggle]\n  );\n\n  // ToDo: review return undefined if doesn't exist\n  /**\n   * Graph layer status.\n   *\n   * @type {function(*): boolean}\n   */\n  const getIsToggled = useCallback(id => dataSetsToggle?.[id] || false, [dataSetsToggle]);\n\n  return {\n    ...{ dataSetsToggle },\n    onHide,\n    onRevert,\n    onToggle,\n    getIsToggled\n  };\n};\n\nconst context = {\n  ChartContext,\n  DEFAULT_CONTEXT,\n  useChartContext,\n  useToggleData\n};\n\nexport { context as default, context, ChartContext, DEFAULT_CONTEXT, useChartContext, useToggleData };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { useChartContext, useToggleData } from './chartContext';\n\n/**\n * Wrapper for rendering an HTML based legend.\n *\n * @returns {Node}\n */\nconst ChartLegend = () => {\n  const { getIsToggled, onHide, onRevert, onToggle } = useToggleData();\n  const { chartSettings = {} } = useChartContext();\n  const { chartLegend, dataSets } = chartSettings;\n\n  if (!chartLegend) {\n    return null;\n  }\n\n  const legendProps = {\n    datum: { dataSets: _cloneDeep(dataSets) },\n    chart: {\n      hide: onHide,\n      revert: onRevert,\n      toggle: onToggle,\n      isToggled: getIsToggled\n    }\n  };\n\n  return (\n    <div className=\"curiosity-chartarea__legend\">\n      {(React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n        chartLegend({ ...legendProps })}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n */\nChartLegend.propTypes = {};\n\n/**\n * Default props.\n */\nChartLegend.defaultProps = {};\n\nexport { ChartLegend as default, ChartLegend };\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n"],"sourceRoot":""}
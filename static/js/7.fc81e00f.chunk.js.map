{"version":3,"sources":["images/graph2x.png","images/graph4x.png","components/optinView/optinView.js"],"names":["module","exports","OptinView","onSubmitOptIn","updateAccountOptIn","props","this","error","fulfilled","pending","session","t","disableButton","status","variant","isDisabled","size","appName","helpers","UI_DISPLAY_NAME","isInline","component","target","href","onClick","className","srcSet","graphPng4x","graphPng2x","src","alt","aria-hidden","headingLevel","flex","default","key","renderOptinForm","alignSelf","renderTour","React","Component","defaultProps","translate","noop","ConnectedOptinView","connect","user","optin","dispatch","query","reduxActions"],"mappings":"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","file":"static/js/7.fc81e00f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/graph2x.1e4428de.png\";","module.exports = __webpack_public_path__ + \"static/media/graph4x.4d450825.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Brand,\n  Button,\n  Card,\n  CardHeaderMain,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Flex,\n  FlexItem,\n  Form,\n  ActionGroup,\n  Spinner,\n  Title\n} from '@patternfly/react-core';\nimport { connect, reduxActions } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { PageLayout } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport graphPng2x from '../../images/graph2x.png';\nimport graphPng4x from '../../images/graph4x.png';\n\n/**\n * An account opt-in view.\n *\n * @augments React.Component\n * @fires onSubmitOptIn\n */\nclass OptinView extends React.Component {\n  /**\n   * Submit and update account opt-in.\n   *\n   * @event onSubmitOptIn\n   */\n  onSubmitOptIn = () => {\n    const { updateAccountOptIn } = this.props;\n    updateAccountOptIn();\n  };\n\n  /**\n   * Render opt-in form states.\n   *\n   * @returns {Node}\n   */\n  renderOptinForm() {\n    const { error, fulfilled, pending, session, t } = this.props;\n    const disableButton = session.status !== 403;\n\n    if (pending) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              <Spinner size=\"sm\" /> {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n        </Form>\n      );\n    }\n\n    if (error) {\n      return (\n        <p>\n          {t('curiosity-optin.cardIsErrorDescription', { appName: helpers.UI_DISPLAY_NAME }, [\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              target=\"_blank\"\n              href=\"https://access.redhat.com/account-team\"\n            />\n          ])}\n        </p>\n      );\n    }\n\n    if (disableButton || fulfilled) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              {t('curiosity-optin.buttonIsActive', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n          {fulfilled && <p>{t('curiosity-optin.cardIsActiveDescription')}</p>}\n        </Form>\n      );\n    }\n\n    return (\n      <Form>\n        <ActionGroup>\n          <Button variant=\"primary\" onClick={this.onSubmitOptIn}>\n            {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n          </Button>\n        </ActionGroup>\n      </Form>\n    );\n  }\n\n  /**\n   * Render tour copy and button.\n   *\n   * @returns {Node}\n   */\n  renderTour() {\n    const { t } = this.props;\n\n    return (\n      <Card className=\"curiosity-optin-tour\">\n        <CardHeader>\n          <CardHeaderMain>\n            <Brand\n              srcSet={`${graphPng4x} 1064w, ${graphPng2x} 600w`}\n              src={graphPng4x}\n              alt={t('curiosity-optin.tourTitleImageAlt')}\n              aria-hidden\n              className=\"curiosity-optin-image\"\n            />\n          </CardHeaderMain>\n        </CardHeader>\n        <CardTitle>\n          <Title headingLevel=\"h3\" size=\"2xl\">\n            {t('curiosity-optin.tourTitle')}\n          </Title>\n        </CardTitle>\n        <CardBody>{t('curiosity-optin.tourDescription')}</CardBody>\n        <CardFooter>\n          <Button variant=\"secondary\" className=\"uxui-curiosity__button-tour\">\n            {t('curiosity-optin.buttonTour')}\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n\n  /**\n   * Render opt-in.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { t } = this.props;\n\n    return (\n      <PageLayout>\n        <Card>\n          <Flex>\n            <Flex flex={{ default: 'flex_2' }}>\n              <FlexItem>\n                <CardTitle key=\"heading1Title\">\n                  <Title headingLevel=\"h1\" size=\"2xl\">\n                    {t('curiosity-optin.cardTitle', { appName: helpers.UI_DISPLAY_NAME })}\n                  </Title>\n                </CardTitle>\n                <CardBody key=\"heading1Desc\">\n                  {t('curiosity-optin.cardDescription', { appName: helpers.UI_DISPLAY_NAME })}\n                </CardBody>\n\n                <CardTitle key=\"heading2Title\">\n                  <Title headingLevel=\"h2\" size=\"xl\">\n                    {t('curiosity-optin.cardSeeTitle')}\n                  </Title>\n                </CardTitle>\n                <CardBody key=\"heading2Desc\">{t('curiosity-optin.cardSeeDescription')}</CardBody>\n\n                <CardTitle key=\"heading3Title\">\n                  <Title headingLevel=\"h2\" size=\"xl\">\n                    {t('curiosity-optin.cardReportTitle')}\n                  </Title>\n                </CardTitle>\n                <CardBody key=\"heading3Desc\">{t('curiosity-optin.cardReportDescription')}</CardBody>\n\n                <CardTitle key=\"heading4Title\">\n                  <Title headingLevel=\"h2\" size=\"xl\">\n                    {t('curiosity-optin.cardFilterTitle')}\n                  </Title>\n                </CardTitle>\n                <CardBody key=\"heading4Desc\">{t('curiosity-optin.cardFilterDescription')}</CardBody>\n\n                <CardFooter>{this.renderOptinForm()}</CardFooter>\n              </FlexItem>\n            </Flex>\n            <Flex flex={{ default: 'flex_1' }} alignSelf={{ default: 'alignSelfCenter' }}>\n              <FlexItem>\n                <CardBody>{this.renderTour()}</CardBody>\n              </FlexItem>\n            </Flex>\n          </Flex>\n        </Card>\n      </PageLayout>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{t: Function, session: object, updateAccountOptIn: Function, pending: boolean, fulfilled: boolean,\n *     error: boolean}}\n */\nOptinView.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  pending: PropTypes.bool,\n  session: PropTypes.shape({\n    status: PropTypes.number\n  }),\n  t: PropTypes.func,\n  updateAccountOptIn: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, session: {status: null}, updateAccountOptIn: Function, pending: boolean,\n *     fulfilled: boolean, error: boolean}}\n */\nOptinView.defaultProps = {\n  error: false,\n  fulfilled: false,\n  pending: false,\n  session: {\n    status: null\n  },\n  t: translate,\n  updateAccountOptIn: helpers.noop\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  updateAccountOptIn: query => dispatch(reduxActions.user.updateAccountOptIn(query))\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.user\n * @returns {object}\n */\nconst mapStateToProps = ({ user }) => ({ ...user.optin, session: user.session });\n\nconst ConnectedOptinView = connect(mapStateToProps, mapDispatchToProps)(OptinView);\n\nexport { ConnectedOptinView as default, ConnectedOptinView, OptinView };\n"],"sourceRoot":""}
{"version":3,"sources":["components/form/select.js","components/minHeight/minHeight.js","components/inventoryList/inventoryListHelpers.js","components/graphCard/graphCardTypes.js","components/pagination/pagination.js","components/inventorySubscriptions/inventorySubscriptions.js","components/bannerMessages/bannerMessages.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardChartTooltip.js","components/graphCard/graphCardChartLegend.js","components/chartArea/chartArea.js","components/graphCard/graphCard.js","components/c3GraphCard/c3GraphCardHelpers.js","components/c3GraphCard/c3GraphCardLegendItem.js","components/c3Chart/c3Chart.js","components/c3GraphCard/c3GraphCard.js","components/tabs/tabs.js","components/inventoryTabs/inventoryTab.js","components/inventoryTabs/inventoryTabs.js","components/toolbar/toolbarTypes.js","components/toolbar/toolbar.js","components/guestsList/guestsList.js","components/inventoryList/inventoryList.js"],"names":["Select","state","isExpanded","options","selected","onSelect","event","titleSelection","props","id","name","variant","updatedOptions","optionsIndex","findIndex","option","title","SelectVariant","single","forEach","index","updateSelected","filter","opt","map","setState","mockUpdatedOptions","_cloneDeep","mockTarget","value","selectedIndex","type","checkbox","checked","mockEvent","target","currentTarget","persist","helpers","noop","onToggle","expanded","this","formatOptions","prevProps","selectedOptions","_isEqual","_isPlainObject","Object","keys","key","activateOptions","convertedOption","text","textContent","label","includes","find","ariaLabel","className","isDisabled","isToggleText","placeholder","toggleIcon","pfSelectOptions","length","aria-label","selections","isOpen","placeholderText","window","btoa","data-value","data-title","React","Component","defaultProps","generateId","MinHeight","containerRef","createRef","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","clientWidth","current","setMinHeight","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","children","ref","applySortFilters","onSort","query","updatedFilter","hasSort","sortActive","RHSM_API_QUERY_TYPES","SORT","_camelCase","sortDirection","DIRECTION","SORT_DIRECTION_TYPES","DESCENDING","SortByDirection","desc","asc","isSortDefault","sortDefaultInitialDirection","applyWrappableFilters","Array","isArray","transforms","push","wrappable","inventoryListHelpers","parseInventoryFilters","filters","isSortable","assign","isWrappable","parseRowCellsListData","cellData","session","updatedColumnHeaders","updatedCells","allCells","entries","translate","context","headerUpdated","cellUpdated","cell","cellWidth","header","isValidElement","concat","PfCellWidth","obj","columnHeaders","cells","data","graphCardTypes","getGranularityOptions","optionsType","GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","Pagination","onPage","page","offsetDefault","perPageDefault","updatedPerPage","LIMIT","offset","setOffset","setLimit","onPerPage","perPage","offsetType","productId","updatedActions","viewId","OFFSET","store","dispatch","limit","limitType","dropDirection","isCompact","itemCount","updatedPage","onSetPage","onPerPageSelect","ConnectedPagination","connect","view","InventorySubscriptions","onColumnSort","updatedDirection","direction","updatedSortColumn","values","SORT_TYPES","ASCENDING","reduxTypes","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","onUpdateInventoryData","getSubscriptionsInventory","filterInventoryData","listData","updatedRows","borders","TableVariant","compact","rows","error","fulfilled","pending","t","isLastPage","Math","ceil","minHeightContentRefreshKey","tableProps","colCount","colWidth","rowCount","renderTable","isFooter","UI_DISABLED_TABLE_SUBSCRIPTIONS","makeMapStateToProps","reduxSelectors","subscriptionsList","makeSubscriptionsList","ConnectedInventorySubscriptions","reduxActions","rhsm","BannerMessages","onUpdateData","getMessageReports","graphTallyQuery","apiQueries","parseRhsmQuery","dateHelpers","getRangedDateTime","startDate","endDate","GRANULARITY","START_DATE","toISOString","END_DATE","appMessages","messages","updatedMessages","message","AlertVariant","info","actionClose","onClose","alerts","renderAlerts","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","appName","UI_DISPLAY_NAME","isInline","component","icon","iconPosition","href","makeAppMessages","ConnectedBannerMessages","getTooltipDate","date","granularity","momentDate","moment","utc","format","timestampQuarterFormats","yearShort","add","timestampMonthFormats","yearLong","timestampDayFormats","yAxisTickFormatFallback","tick","abs","updatedTick","updatedAbbr","pow","graphCardHelpers","getChartXAxisLabelIncrement","xAxisTickFormat","previousDate","formattedDate","isNewYear","Number","parseInt","year","replace","yAxisTickFormat","locale","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","GraphCardChartTooltip","datum","productLabel","itemsByKey","tempDataFacet","color","test","thresholdStringValue","hasInfinite","y","dataFactsValue","hasData","product","summary","colSpan","dataFacet","aria-hidden","backgroundColor","GraphCardChartLegend","onClick","chart","updatedToggle","toggle","graph","SET_GRAPH_LEGEND","legend","dataSets","isToggled","hide","chartId","isThreshold","labelContent","tooltipContent","checkIsToggled","button","Button","onKeyPress","tabIndex","visibility","borderTopColor","Tooltip","content","position","TooltipPosition","top","enableFlip","distance","entryDelay","exitDelay","Fragment","stroke","renderLegendItem","ConnectedGraphCardChartLegend","ChartArea","chartWidth","dataSetsToggle","tooltipRef","onHide","forceUpdate","onRevert","getIsToggled","setResizeObserve","containerElement","ResizeObserver","observe","unobserve","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","x","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","item","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","floored","floor","log10","maxY","chartDomain","chartTooltip","tooltipDataSet","fill","mockDatum","tooltip","cloneElement","v","VictoryVoronoiCursorContainer","createContainer","parsedTooltipData","getTooltipData","globalContainerBounds","globalTooltipBounds","FlyoutComponent","containerBounds","getBoundingClientRect","tooltipBounds","right","xCoordinate","width","htmlContent","applyParsedTooltipData","height","display","xmlns","cursorDimension","labels","labelComponent","voronoiPadding","chartLegend","legendProps","revert","stacked","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","themeColor","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","tooltipComponent","containerComponent","renderTooltip","undefined","chartProps","Chart","duration","ChartAxis","renderChart","ChartStack","renderLegend","bottom","left","GraphCard","onUpdateGraphData","getGraphReportsCapacity","graphGranularity","getQueryGranularity","onGranularitySelect","SET_QUERY_RHSM_TYPES","filterGraphData","graphData","selectOptionsType","updatedGranularity","chartAreaProps","JSON","stringify","filtered","tempFiltered","onLoad","chartColorGreenDark","filteredGraphData","cardTitle","Card","CardHeader","CardTitle","Title","headingLevel","size","CardActions","CardBody","UI_DISABLED_GRAPH","graphCard","makeGraphCard","ConnectedGraphCard","c3GraphCardHelpers","productShortLabel","hiddenDataFacets","converted","colors","columns","groups","names","types","convertTimeSeriesDate","TEST_MODE","local","totalData","filteredValue","pop","configuration","order","a","b","ratio","updatedValue","dataItem","dataValue","unloadBeforeLoad","show","spline","point","grid","axis","xAxisTicks","slice","dateIndex","default","min","outer","C3GraphCardLegendItem","updatedIsToggled","onFocus","getToggle","focus","getColor","onMouseOver","onBlur","onMouseOut","C3Chart","node","generateChart","config","destroy","onComplete","updatedChart","c3","generate","bindto","load","unload","done","C3GraphCard","filteredData","isDataHidden","Tabs","updatedActiveTab","updatedTabs","onTab","setTabData","tabs","_isEqualWith","valueA","valueB","toString","activeTab","defaultActiveTab","active","Tab","eventKey","TabTitleText","hasOverflowScroll","activeKey","mountOnEnter","unmountOnExit","inset","md","Grid","guttter","GridItem","span","renderTabs","InventoryTab","InventoryTabs","inventory","SET_INVENTORY_TAB","updatedChildren","Children","toArray","count","UI_DISABLED_TABLE","ConnectedInventoryTabs","toolbarTypes","SLA","SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","USAGE","USAGE_TYPES","DEVELOPMENT","DISASTER","PRODUCTION","UNSPECIFIED","Toolbar","onClear","hardFilterReset","dispatchActions","toolbar","SET_ACTIVE_FILTERS","activeFilters","Set","SET_QUERY_CLEAR","clearFilters","SET_FILTER_TYPE","currentFilter","setDispatch","onClearFilter","categoryTitle","categoryValue","updatedActiveFilters","updatedCurrentFilter","onCategorySelect","field","actions","resetPage","SET_QUERY_CLEAR_INVENTORY_LIST","getCurrentFilter","optionsSelected","filterOptions","setSelectFilter","ToolbarFilter","chips","deleteChip","categoryName","showToolbarItem","categoryOptions","categoryOptionsSelected","collapseListedFiltersBreakpoint","clearAllFilters","ToolbarContent","ToolbarToggleGroup","breakpoint","ToolbarGroup","ToolbarItem","renderSelectFilter","filterType","UI_DISABLED_TOOLBAR","ConnectedToolbar","GuestsList","currentPage","previousData","onUpdateGuestsData","getHostsInventoryGuests","updatedQuery","inventoryGuestsQuery","onScroll","numberOfGuests","scrollHeight","scrollTop","newPage","updatedData","prevState","filterGuestsData","scrollLoader","updatedHeight","renderLoader","guestsList","makeGuestsList","ConnectedGuestsList","InventoryList","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","getHostsInventory","settings","guestsId","subscriptionManagerId","hasGuests","expandedContent","Bullseye","CardFooter","TableToolbar","UI_DISABLED_TABLE_HOSTS","inventoryList","makeInventoryList","ConnectedInventoryList"],"mappings":"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","file":"static/js/1.10ad3452.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * FixMe: Patternfly React select generates a random ID for select options.\n * On the surface this seems like a legitimate update until you remember unit tests.\n * Quite a few apps use test snapshots causing certain rendered select snapshots to\n * fail consistently. Appears this may have been part of the \"favorites\" update.\n * The solution centers around updating the  \"GenerateId helper\" and detecting a\n * test, dev, or prod environment instead of generating a random string every time.\n *\n * This issue also has the side-effect of making the attribute inadvertently\n * \"required\" anywhere it's used in an effort to squash it.\n */\n/**\n * A wrapper for Patternfly Select. Provides additional event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @param expanded\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected =\n          activateOptions.includes(convertedOption.value) || activateOptions.includes(convertedOption.title);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, isToggleText, placeholder, toggleIcon, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select${(!isToggleText && '__no-toggle-text') || ''} ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isOpen={isExpanded}\n        toggleIcon={toggleIcon}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(`${option.title}-${option.value}`)}\n              id={window.btoa(`${option.title}-${option.value}`)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{isToggleText: boolean, toggleIcon: Node|Function, name: string, options: object,\n *     selectedOptions: (number|string|Array), variant: (object|string), className: string,\n *     id: string, isDisabled: boolean, placeholder: string, ariaLabel: string,\n *     onSelect: Function}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.string,\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{isToggleText: boolean, toggleIcon: null, name: null, options: Array, selectedOptions: null,\n *     variant: SelectVariant.single, className: string, id: string, isDisabled: boolean,\n *     placeholder: string, ariaLabel: string, onSelect: Function}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  isToggleText: true,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  selectedOptions: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Apply sort filter to filters.\n *\n * @param {object} params\n * @param {object} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {object}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} }) => {\n  const { id } = filter;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === id\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  if (\n    hasSort &&\n    !updatedFilter.sortActive &&\n    !query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    updatedFilter.isSortDefault === true\n  ) {\n    updatedFilter.sortActive = true;\n\n    if (updatedFilter.sortDefaultInitialDirection) {\n      updatedFilter.sortDirection = updatedFilter.sortDefaultInitialDirection;\n    }\n  }\n\n  return updatedFilter;\n};\n\nconst applyWrappableFilters = ({ filter = {} }) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Apply additional properties to filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {Array}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} }) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.cellData\n * @param {object} params.session\n * @returns {{columnHeaders: Array, cells: Array, data: object}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, session = {} }) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value]) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value);\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    filters.forEach(({ id, cell, cellWidth, header, onSort, sortActive, sortDirection, transforms }) => {\n      let headerUpdated;\n      let cellUpdated;\n\n      if (allCells[id]) {\n        headerUpdated = allCells[id]?.title ?? id;\n        cellUpdated = allCells[id]?.value ?? '';\n      }\n\n      // set table header cell filter params\n      if (header) {\n        headerUpdated = (typeof header === 'function' && header({ ...allCells })) || header;\n      }\n\n      if (\n        typeof headerUpdated === 'string' ||\n        typeof headerUpdated === 'number' ||\n        React.isValidElement(headerUpdated)\n      ) {\n        headerUpdated = {\n          title: headerUpdated\n        };\n      }\n\n      headerUpdated.transforms = [];\n\n      if (Array.isArray(transforms)) {\n        headerUpdated.transforms = headerUpdated.transforms.concat([...transforms]);\n      }\n\n      if (typeof cellWidth === 'number') {\n        headerUpdated.transforms.push(PfCellWidth(cellWidth));\n      }\n\n      if (typeof onSort === 'function') {\n        headerUpdated = {\n          ...headerUpdated,\n          onSort: obj => onSort({ ...allCells }, { ...obj, id }),\n          sortActive,\n          sortDirection\n        };\n      }\n\n      // set table row cell filter params\n      if (cell) {\n        cellUpdated = (typeof cell === 'function' && cell({ ...allCells }, { ...session })) || cell;\n      }\n\n      if (typeof cellUpdated === 'string' || typeof cellUpdated === 'number' || React.isValidElement(cellUpdated)) {\n        cellUpdated = {\n          title: cellUpdated\n        };\n      }\n\n      updatedColumnHeaders.push(headerUpdated);\n      updatedCells.push(cellUpdated);\n    });\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryListHelpers = {\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryListHelpers as default,\n  inventoryListHelpers,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Return a set of options for display in a select/dropdown list.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getGranularityOptionsType = optionsType => {\n  if (optionsType === 'default') {\n    return {\n      selected: GRANULARITY_TYPES.DAILY,\n      options: [\n        { title: translate('curiosity-graph.dropdownDaily'), value: GRANULARITY_TYPES.DAILY, selected: true },\n        { title: translate('curiosity-graph.dropdownWeekly'), value: GRANULARITY_TYPES.WEEKLY },\n        { title: translate('curiosity-graph.dropdownMonthly'), value: GRANULARITY_TYPES.MONTHLY },\n        { title: translate('curiosity-graph.dropdownQuarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst graphCardTypes = {\n  getGranularityOptions: getGranularityOptionsType\n};\n\nexport { graphCardTypes as default, graphCardTypes, getGranularityOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * Contained pagination.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onPage\n * @fires onPerPage\n */\nclass Pagination extends React.Component {\n  /**\n   * Call page update.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.page\n   */\n  onPage = ({ page }) => {\n    const { offsetDefault, perPageDefault, query } = this.props;\n    const updatedPerPage = query?.[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const offset = updatedPerPage * (page - 1) || offsetDefault;\n\n    this.setOffset(offset);\n    this.setLimit(updatedPerPage);\n  };\n\n  /**\n   * Call per-page update.\n   *\n   * @event onPerPage\n   * @param {object} params\n   * @param {number} params.perPage\n   */\n  onPerPage = ({ perPage }) => {\n    this.setOffset();\n    this.setLimit(perPage);\n  };\n\n  /**\n   * Set page state.\n   *\n   * @param {number} offset\n   */\n  setOffset(offset) {\n    const { offsetDefault, offsetType, productId } = this.props;\n    const updatedActions = [];\n\n    updatedActions.push({\n      type: offsetType,\n      viewId: productId,\n      [RHSM_API_QUERY_TYPES.OFFSET]: offset ?? offsetDefault\n    });\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Set per-page state.\n   *\n   * @param {number} limit\n   */\n  setLimit(limit) {\n    const { limitType, perPageDefault, productId } = this.props;\n    const updatedActions = [];\n\n    updatedActions.push({\n      type: limitType,\n      viewId: productId,\n      [RHSM_API_QUERY_TYPES.LIMIT]: limit ?? perPageDefault\n    });\n\n    store.dispatch(updatedActions);\n  }\n\n  // ToDo: Consider using the PfPagination \"offset\" prop\n  /**\n   * Render pagination.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { dropDirection, isCompact, isDisabled, itemCount, perPageDefault, query, variant } = this.props;\n    const updatedPage = query[RHSM_API_QUERY_TYPES.OFFSET] / query[RHSM_API_QUERY_TYPES.LIMIT] + 1 || 1;\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n\n    return (\n      <PfPagination\n        className={(!itemCount && 'hidden') || ''}\n        dropDirection={dropDirection}\n        isCompact={isCompact}\n        isDisabled={isDisabled || !itemCount}\n        itemCount={itemCount}\n        page={updatedPage}\n        perPage={updatedPerPage}\n        onSetPage={(event, page) => this.onPage({ event, page })}\n        onPerPageSelect={(event, perPage) => this.onPerPage({ event, perPage })}\n        variant={variant}\n      />\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, productId: string, query: object, dropDirection: string,\n *     offsetDefault: number, variant: string, offsetType: string, perPageDefault: number,\n *     isDisabled: boolean, limitType: string, itemCount: number}}\n */\nPagination.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.LIMIT]: PropTypes.number,\n    [RHSM_API_QUERY_TYPES.OFFSET]: PropTypes.number\n  }),\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  limitType: PropTypes.oneOf([\n    reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n    reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]\n  ]).isRequired,\n  offsetDefault: PropTypes.number,\n  offsetType: PropTypes.oneOf([\n    reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n    reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]\n  ]).isRequired,\n  perPageDefault: PropTypes.number,\n  productId: PropTypes.string.isRequired,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, query: object, dropDirection: string, offsetDefault: number,\n *     variant: null, perPageDefault: number, isDisabled: boolean, itemCount: number}}\n */\nPagination.defaultProps = {\n  query: {},\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offsetDefault: 0,\n  perPageDefault: 10,\n  variant: null\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.view\n * @param {object} props\n * @param {string} props.productId\n * @returns {object}\n */\nconst mapStateToProps = ({ view }, { productId }) => ({ query: view.query?.[productId] });\n\nconst ConnectedPagination = connect(mapStateToProps)(Pagination);\n\nexport { ConnectedPagination as default, ConnectedPagination, Pagination };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A subscriptions system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onUpdateInventoryData\n */\nclass InventorySubscriptions extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getSubscriptionsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getSubscriptionsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterInventoryData, listData, query, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      productId,\n      query,\n      t,\n      viewId\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query?.[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedPage = query[RHSM_API_QUERY_TYPES.OFFSET] / query[RHSM_API_QUERY_TYPES.LIMIT] + 1 || 1;\n    const isLastPage = updatedPage === Math.ceil(itemCount / updatedPerPage);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader>\n            <CardActions className={(error && 'blur') || ''}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                productId={productId}\n                viewId={viewId}\n                perPageDefault={updatedPerPage}\n                offsetType={reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]}\n                limitType={reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter className={(error && 'blur') || ''}>\n            <TableToolbar isFooter>\n              <Pagination\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                productId={productId}\n                viewId={viewId}\n                perPageDefault={updatedPerPage}\n                dropDirection=\"up\"\n                offsetType={reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]}\n                limitType={reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, listData: Array, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, error: boolean, getSubscriptionsInventory: Function, itemCount: number, viewId: string,\n *     t: Function, filterInventoryData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventorySubscriptions.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getSubscriptionsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, filterInventoryData: Array, listData: Array, session: object,\n *     pending: boolean, fulfilled: boolean, perPageDefault: number, isDisabled: boolean, error: boolean,\n *     getSubscriptionsInventory: Function, itemCount: number}}\n */\nInventorySubscriptions.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterInventoryData: [],\n  getSubscriptionsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  t: translate,\n  viewId: 'subscriptionsList'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getSubscriptionsInventory: (id, query) => dispatch(reduxActions.rhsm.getSubscriptionsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.subscriptionsList.makeSubscriptionsList();\n\nconst ConnectedInventorySubscriptions = connect(makeMapStateToProps, mapDispatchToProps)(InventorySubscriptions);\n\nexport { ConnectedInventorySubscriptions as default, ConnectedInventorySubscriptions, InventorySubscriptions };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertActionCloseButton, AlertVariant, Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport _isEqual from 'lodash/isEqual';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { dateHelpers, helpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Render banner messages.\n *\n * @augments React.Component\n */\nclass BannerMessages extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.onUpdateData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateData = () => {\n    const { getMessageReports, productId, query } = this.props;\n    const { graphTallyQuery } = apiQueries.parseRhsmQuery(query);\n\n    if (productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime('CURRENT');\n      const updatedGraphQuery = {\n        ...graphTallyQuery,\n        [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY,\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString()\n      };\n\n      getMessageReports(productId, updatedGraphQuery);\n    }\n  };\n\n  /**\n   * Apply messages' configuration to alerts.\n   *\n   * @returns {Node}\n   */\n  renderAlerts() {\n    const { state } = this;\n    const { appMessages, messages } = this.props;\n    const updatedMessages = [];\n\n    if (messages.length) {\n      Object.entries(appMessages).forEach(([key, value]) => {\n        if (state[key] !== true && value === true) {\n          const message = messages.find(({ id }) => id === key);\n\n          if (message) {\n            updatedMessages.push({\n              key,\n              ...message\n            });\n          }\n        }\n      });\n    }\n\n    return updatedMessages.map(({ key, message, title, variant = AlertVariant.info }) => {\n      const actionClose = <AlertActionCloseButton onClose={() => this.setState({ [key]: true })} />;\n\n      return (\n        <Alert actionClose={actionClose} key={key} title={title} variant={variant}>\n          {message}\n        </Alert>\n      );\n    });\n  }\n\n  /**\n   * Render a banner messages container.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const alerts = this.renderAlerts();\n\n    if (alerts.length) {\n      return <div className=\"curiosity-banner-messages\">{alerts}</div>;\n    }\n\n    return null;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{appMessages: object, productId: string, getMessageReports: Function, query: object, messages: Array}}\n */\nBannerMessages.propTypes = {\n  appMessages: PropTypes.object.isRequired,\n  getMessageReports: PropTypes.func,\n  query: PropTypes.object,\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.node.isRequired,\n      message: PropTypes.node.isRequired,\n      variant: PropTypes.oneOf([...Object.values(AlertVariant)])\n    })\n  ),\n  productId: PropTypes.string.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{getMessageReports: Function, query: object, messages: Array}}\n */\nBannerMessages.defaultProps = {\n  getMessageReports: helpers.noop,\n  query: {},\n  messages: [\n    {\n      id: 'cloudigradeMismatch',\n      title: translate('curiosity-banner.dataMismatchTitle'),\n      message: translate(\n        'curiosity-banner.dataMismatchMessage',\n        {\n          context: helpers.UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS !== '' && 'cloudigradeMismatch',\n          appName: helpers.UI_DISPLAY_NAME\n        },\n        [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS}\n          />\n        ]\n      )\n    }\n  ]\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getMessageReports: (id, query) => dispatch(reduxActions.rhsm.getMessageReports(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.appMessages.makeAppMessages();\n\nconst ConnectedBannerMessages = connect(makeMapStateToProps, mapDispatchToProps)(BannerMessages);\n\nexport { ConnectedBannerMessages as default, ConnectedBannerMessages, BannerMessages };\n","import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, productLabel, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      header = getTooltipDate({\n        date: itemsByKey[key]?.data.date,\n        granularity\n      });\n    }\n\n    const tempDataFacet = {\n      color: itemsByKey[key]?.color\n    };\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key]?.data.hasInfinite && t('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel'));\n\n      tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n      tempDataFacet.value = thresholdStringValue;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n      tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product: productLabel });\n      tempDataFacet.value = dataFactsValue;\n    }\n\n    data.push(tempDataFacet);\n  });\n\n  return (\n    <div className=\"victory-tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  <div\n                    aria-hidden\n                    className=\"legend-icon victory-legend-icon\"\n                    style={{\n                      backgroundColor: dataFacet.color || 'transparent'\n                    }}\n                  />\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, productLabel: string, t: translate}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  productLabel: '',\n  t: translate\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { connect, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @param {string} options.chartId\n   * @param {string} options.color\n   * @param {boolean} options.isDisabled\n   * @param {boolean} options.isThreshold\n   * @param {string} options.labelContent\n   * @param {string} options.tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"victory-legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: color\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: color\n              }}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *  - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, productLabel, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}Label`, `curiosity-graph.thresholdLabel`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t([`curiosity-graph.${id}Label`, `curiosity-graph.noLabel`], {\n              product: productLabel,\n              context: productLabel\n            });\n\n          const tooltipContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}LegendTooltip`, `curiosity-graph.thresholdLegendTooltip`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t(`curiosity-graph.${id}LegendTooltip`, { product: productLabel, context: productLabel });\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold,\n            tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, legend: object, chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {dataSets: Array}, productLabel: string, viewId: string, t: translate, legend: object,\n *     chart: {hide: Function, toggle: Function, isToggled: Function}}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connect(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer } from 'victory-create-container';\nimport {\n  Chart,\n  ChartAxis,\n  ChartStack,\n  ChartThreshold,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * ToDo: Evaluate Victory Charts combined with PF react-charts, updating adds 100+-kb to the output bundle\n * This appears to be related to Victory Charts itself, upgrading to versions after 35.3.1 of\n * the Victory Charts components also expands the bundle at a similar rate. Breaking out the imports\n * into individual direct imports from PF react-charts increases the build even more, by our estimates 200+-kb.\n * If Victory Charts combined with PF react-charts continues to balloon in size we may need to review pulling\n * the Victory components directly instead of through PF react-charts.\n */\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  dataSetsToggle = {};\n\n  resizeObserver = helpers.noop;\n\n  containerRef = React.createRef();\n\n  tooltipRef = React.createRef();\n\n  componentDidMount() {\n    this.setResizeObserve();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * Consumer exposed, hides chart layer.\n   *\n   * @event onHide\n   * @param {string} id\n   */\n  onHide = id => {\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: true };\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns all chart layers back on.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    this.dataSetsToggle = {};\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns chart layer on/off.\n   *\n   * @event onToggle\n   * @param {string} id\n   * @returns {boolean}\n   */\n  onToggle = id => {\n    const updatedToggle = !this.dataSetsToggle[id];\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: updatedToggle };\n    this.forceUpdate();\n\n    return updatedToggle;\n  };\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { chartWidth } = this.state;\n    const { clientWidth = 0 } = this.containerRef.current || {};\n\n    if (clientWidth !== chartWidth) {\n      this.setState({ chartWidth: clientWidth });\n    }\n  };\n\n  /**\n   * Consumer exposed, determine if chart layer on/off.\n   * Note: Using \"setState\" as related to this exposed check gives the appearance of a race condition.\n   * Using a class property with forceUpdate to bypass.\n   *\n   * @param {string} id\n   * @returns {boolean}\n   */\n  getIsToggled = id => this.dataSetsToggle[id] || false;\n\n  /**\n   * Set ResizeObserver for scenarios where the window.resize event doesn't fire.\n   */\n  setResizeObserve() {\n    const containerElement = this.containerRef.current;\n    const { ResizeObserver } = window;\n\n    if (containerElement && ResizeObserver) {\n      const resizeObserver = new ResizeObserver(this.onResizeContainer);\n      resizeObserver.observe(containerElement);\n      this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n    } else {\n      this.onResizeContainer();\n      window.addEventListener('resize', this.onResizeContainer);\n      this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n    }\n  }\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { dataSetsToggle } = this;\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply data set to custom tooltips.\n   *\n   * @returns {Array}\n   */\n  getTooltipData() {\n    const { dataSetsToggle } = this;\n    const { dataSets, chartTooltip } = this.props;\n    let tooltipDataSet = [];\n\n    if (chartTooltip && dataSets && dataSets[0] && dataSets[0].data) {\n      tooltipDataSet = dataSets[0].data.map((dataSet, index) => {\n        const itemsByKey = {};\n\n        dataSets.forEach(data => {\n          if (!dataSetsToggle[data.id] && data.data && data.data[index]) {\n            itemsByKey[data.id] = {\n              color: data.stroke || data.fill || data.color || '',\n              data: _cloneDeep(data.data[index])\n            };\n          }\n        });\n\n        const mockDatum = {\n          datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey, dataSets: _cloneDeep(dataSets) }\n        };\n\n        return {\n          x: dataSet.x,\n          y: null,\n          itemsByKey,\n          tooltip:\n            (React.isValidElement(chartTooltip) && React.cloneElement(chartTooltip, { ...mockDatum })) ||\n            chartTooltip({ ...mockDatum })\n        };\n      });\n    }\n\n    return tooltipDataSet;\n  }\n\n  /**\n   * ToDo: monitor Victory charts release version increment around Voronoi container attributes.\n   * Future updates could lead to additional unexpected behavior. Victory charts released a patch/fix\n   * around attribute behavior for Voronoi containers. The behavior was already \"unexpected\" in that there appears\n   * to be a need to provide the \"label\" attribute when using the \"labelComponent\" attribute, even if \"label\" is\n   * just a pass-through. Providing `label={() => ''}` was a work-around, that is now `label={obj => obj}`. See\n   * - https://github.com/FormidableLabs/victory/blob/master/CHANGELOG.md#3436-2020-05-18\n   * - https://github.com/FormidableLabs/victory/pull/1581\n   */\n  /**\n   * FixMe: Victory charts voronoi containers throw inaccurate coordinates on large graph widths\n   * Issue is \"patched\" by removing the \"x\" dimension attribute for voronoi.\n   * - https://github.com/RedHatInsights/curiosity-frontend/issues/318\n   */\n  /**\n   * Return a chart/graph tooltip Victory container component to allow custom HTML tooltips.\n   *\n   * @returns {Node}\n   */\n  renderTooltip() {\n    const { dataSetsToggle } = this;\n    const { chartTooltip, dataSets } = this.props;\n\n    if (!chartTooltip || Object.values(dataSetsToggle).filter(v => v === true).length === dataSets.length) {\n      return null;\n    }\n\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const parsedTooltipData = this.getTooltipData();\n    let globalContainerBounds = {};\n    let globalTooltipBounds = {};\n\n    const applyParsedTooltipData = ({ datum }) => {\n      const t = parsedTooltipData.find(v => v.x === datum.x) || {};\n      return t?.tooltip || '';\n    };\n\n    const FlyoutComponent = obj => {\n      const containerRef = this.containerRef.current;\n      const tooltipRef = this.tooltipRef.current;\n      const containerBounds = (containerRef && containerRef.getBoundingClientRect()) || {};\n      const tooltipBounds = (tooltipRef && tooltipRef.getBoundingClientRect()) || {};\n\n      if (containerBounds.right) {\n        globalContainerBounds = containerBounds;\n      }\n\n      if (tooltipBounds.right) {\n        globalTooltipBounds = tooltipBounds;\n      }\n\n      let xCoordinate = obj.x + 10;\n\n      if (\n        globalContainerBounds.right < globalTooltipBounds.right ||\n        obj.x + globalTooltipBounds.width > globalContainerBounds.right / 2\n      ) {\n        xCoordinate = obj.x - 10 - globalTooltipBounds.width;\n      }\n\n      const htmlContent = applyParsedTooltipData({ ...obj });\n\n      if (htmlContent) {\n        return (\n          <g>\n            <foreignObject x={xCoordinate} y={obj.y / 2.2} width=\"100%\" height=\"100%\">\n              <div ref={this.tooltipRef} style={{ display: 'inline-block' }} xmlns=\"http://www.w3.org/1999/xhtml\">\n                {htmlContent}\n              </div>\n            </foreignObject>\n          </g>\n        );\n      }\n\n      return <g />;\n    };\n\n    return (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={<FlyoutComponent />}\n        voronoiPadding={60}\n      />\n    );\n  }\n\n  /**\n   * Return a custom chart/graph legend component.\n   *\n   * @returns {Node}\n   */\n  renderLegend() {\n    const { chartLegend, dataSets } = this.props;\n\n    if (!chartLegend) {\n      return null;\n    }\n\n    const legendProps = {\n      datum: { dataSets: _cloneDeep(dataSets) },\n      chart: {\n        hide: this.onHide,\n        revert: this.onRevert,\n        toggle: this.onToggle,\n        isToggled: this.getIsToggled\n      }\n    };\n\n    return (\n      (React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n      chartLegend({ ...legendProps })\n    );\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const { dataSetsToggle } = this;\n    const { dataSets } = this.props;\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { chartLegend, padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const tooltipComponent = { containerComponent: (maxY >= 0 && this.renderTooltip()) || undefined };\n    const chartProps = { padding, ...chartDomain, ...tooltipComponent };\n\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n        {chartLegend && <div className=\"curiosity-chartarea-description victory-legend\">{this.renderLegend()}</div>}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartLegend: Node|Function, chartTooltip: Node|Function, padding, xAxisTickFormat: Function,\n *     themeColor: string, yAxisTickFormat: Function, domain: object|Array, dataSets: object,\n *     xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartLegend: null, chartTooltip: null, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: null, themeColor: string, yAxisTickFormat: null, domain: object,\n *     dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport { graphCardTypes } from './graphCardTypes';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { ChartArea } from '../chartArea/chartArea';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const graphQuery = {\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString(),\n        ...query\n      };\n\n      getGraphReportsCapacity(productId, graphQuery);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n      viewId,\n      [RHSM_API_QUERY_TYPES.GRANULARITY]: value\n    });\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, selectOptionsType, productLabel, query, viewId } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: updatedGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(updatedGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          strokeWidth: 2,\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 3;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <ChartArea\n        key={`chart_${JSON.stringify(query)}`}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend chart={chart} datum={datum} productLabel={productLabel} viewId={viewId} />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={updatedGranularity} productLabel={productLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * ToDo: Evaluate applying a minHeight attr to the MinHeight component graphCard setup\n   * Appears there may be a minor page shift when compared to the prior hard-set min-height\n   * of 410px\n   */\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, isDisabled, pending, selectOptionsType, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = this.getQueryGranularity();\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <MinHeight key=\"headerMinHeight\">\n          <CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                {cardTitle}\n              </Title>\n            </CardTitle>\n            <CardActions className={(error && 'blur') || ''}>\n              {children}\n              <Select\n                aria-label={t('curiosity-graph.dropdownPlaceholder')}\n                onSelect={this.onGranularitySelect}\n                options={options}\n                selectedOptions={graphGranularity}\n                placeholder={t('curiosity-graph.dropdownPlaceholder')}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key=\"bodyMinHeight\">\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && <Loader variant=\"graph\" />}\n              {!pending && this.renderChart()}\n            </div>\n          </CardBody>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productLabel: string, productId: string, pending: boolean, error: boolean, query: object,\n *     cardTitle: string, filterGraphData: Array, getGraphReportsCapacity: Function,\n *     selectOptionsType: string, viewId: string, t: Function, children: Node, graphData: object,\n *     isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productLabel: string, selectOptionsType: string,\n *     viewId: string, t: translate, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  productLabel: '',\n  selectOptionsType: 'default',\n  t: translate,\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import moment from 'moment';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale }) =>\n  new Intl.NumberFormat(locale, { maximumFractionDigits: 1, notation: 'compact', compactDisplay: 'short' }).format(\n    tick\n  );\n\n/**\n * Convert data into a C3 configuration object.\n *\n * @param {object} options\n * @param {Array} options.data\n * @param {string} options.granularity\n * @param {string} options.productShortLabel\n * @returns {{configuration: {padding: {top: number, left: number, bottom: number, right: number},\n *     data: {types: {}, names: {}, columns: Array, x: string, groups: Array, colors: {}},\n *     legend: {show: boolean}, grid: {y: {show: boolean}}, tooltip: {format: {title: Function,\n *     value: Function}, order: Function}, unloadBeforeLoad: boolean,\n *     spline: {interpolation: {type: string}}, axis: {x: {padding: number, tick: {format: Function},\n *     type: string}, y: {padding: {bottom: number}, default: number, min: number,\n *     tick: {show: boolean, outer: boolean, format: Function}}}, point: {show: boolean}},\n *     hiddenDataFacets: Array}}\n */\nconst c3Config = ({ data = [], granularity, productShortLabel }) => {\n  const hiddenDataFacets = [];\n  const converted = {\n    x: 'x',\n    colors: {},\n    columns: [],\n    groups: [[]],\n    names: {},\n    types: {}\n  };\n\n  const convertTimeSeriesDate = value => {\n    const dateStr = (helpers.TEST_MODE && moment.utc(value)) || moment.utc(value).local();\n    return dateStr.format('YYYY-MM-DD');\n  };\n\n  data.forEach(value => {\n    if (/^threshold/.test(value.id)) {\n      converted.colors[value.id] = value.color || chartColorGreenDark.value;\n      converted.types[value.id] = 'step';\n      converted.names[value.id] = translate(`curiosity-graph.thresholdLabel`);\n    } else {\n      converted.colors[value.id] = value.color;\n      converted.types[value.id] = 'area-spline';\n      converted.groups[0].push(value.id);\n      converted.names[value.id] = translate(`curiosity-graph.${value.id}Label`, { product: productShortLabel });\n    }\n\n    converted.columns[0] = ['x'];\n    converted.columns.push([value.id]);\n\n    let totalData = 0;\n\n    value.data.forEach(filteredValue => {\n      converted.columns[0].push(convertTimeSeriesDate(filteredValue.date));\n      converted.columns[converted.columns.length - 1].push(filteredValue.y);\n      totalData += filteredValue.y || 0;\n    });\n\n    // ToDo: need to check for infinite threshold, possibly has data\n    if (totalData <= 0) {\n      converted.columns.pop();\n      hiddenDataFacets.push(value.id);\n    }\n  });\n\n  return {\n    hiddenDataFacets,\n    configuration: {\n      tooltip: {\n        order: (a, b) => converted.columns.indexOf(a.id) - converted.columns.indexOf(b.id),\n        format: {\n          title: date =>\n            getTooltipDate({\n              date,\n              granularity\n            }),\n          value: (value, ratio, id, index) => {\n            const dataItem = data.find(dataValue => id === dataValue.id)?.data[index];\n            let updatedValue;\n\n            if (/^threshold/.test(id)) {\n              updatedValue =\n                (dataItem?.hasInfinite && translate('curiosity-graph.infiniteThresholdLabel')) ||\n                (dataItem?.y ?? translate('curiosity-graph.noDataLabel'));\n            } else {\n              updatedValue =\n                (dataItem?.hasData === false && translate('curiosity-graph.noDataLabel')) || dataItem?.y || 0;\n            }\n\n            return updatedValue;\n          }\n        }\n      },\n      unloadBeforeLoad: true,\n      padding: { left: 40, right: 40, top: 10, bottom: 10 },\n      legend: { show: false },\n      spline: {\n        interpolation: {\n          type: 'monotone'\n        }\n      },\n      data: {\n        ...converted\n      },\n      point: {\n        show: false\n      },\n      grid: {\n        y: {\n          show: true\n        }\n      },\n      axis: {\n        x: {\n          type: 'timeseries',\n          tick: {\n            format: tick => {\n              const xAxisTicks = converted.columns[0].slice(1);\n              const formattedDate = convertTimeSeriesDate(tick);\n              const dateIndex = xAxisTicks.indexOf(formattedDate);\n              const previousDate = dateIndex > -1 && xAxisTicks[dateIndex - 1];\n\n              return xAxisTickFormat({\n                tick: dateIndex,\n                date: formattedDate,\n                previousDate,\n                granularity\n              });\n            }\n          },\n          padding: 0\n        },\n        y: {\n          default: [0, 50],\n          padding: { bottom: 0 },\n          min: 0,\n          tick: {\n            show: false,\n            outer: false,\n            format: tick => (tick === 0 ? '' : yAxisTickFormat({ tick }))\n          }\n        }\n      }\n    }\n  };\n};\n\nconst c3GraphCardHelpers = {\n  c3Config,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  c3GraphCardHelpers as default,\n  c3GraphCardHelpers,\n  c3Config,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\n\n/**\n * A chart/graph legend button.\n *\n * @augments React.Component\n * @fires onFocus\n * @fires onRevert\n * @fires onToggle\n */\nclass C3GraphCardLegendItem extends React.Component {\n  state = { updatedIsToggled: null };\n\n  /**\n   * C3 chart display focus.\n   *\n   * @event onFocus\n   */\n  onFocus = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, chartId, getToggle, isToggled } = this.props;\n\n    if ((typeof getToggle === 'function' && !isToggled) || !updatedIsToggled) {\n      chart.focus(chartId);\n    }\n  };\n\n  /**\n   * C3 chart display revert.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, getToggle, isToggled } = this.props;\n\n    if ((typeof getToggle === 'function' && !isToggled) || !updatedIsToggled) {\n      chart.revert();\n    }\n  };\n\n  /**\n   * C3 chart display toggle.\n   *\n   * @event onToggle\n   */\n  onToggle = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, chartId, getToggle, isToggled } = this.props;\n\n    chart.toggle(chartId);\n\n    if (typeof getToggle === 'function') {\n      getToggle({ isToggled: !isToggled });\n    } else {\n      this.setState({\n        updatedIsToggled: !updatedIsToggled\n      });\n    }\n\n    this.onRevert();\n  };\n\n  /**\n   * C3 chart display config color.\n   *\n   * @returns {string}\n   */\n  getColor = () => {\n    const { chart, chartId } = this.props;\n    return chart.color(chartId);\n  };\n\n  /**\n   * ToDO: evaluate using nullish coalescing operator for checkIsToggled\n   */\n  /**\n   * Render a chart legend item.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedIsToggled } = this.state;\n    const { children, chart, chartId, isDisabled, isThreshold, isToggled, tooltipContent } = this.props;\n    const checkIsToggled =\n      (updatedIsToggled === null && typeof isToggled === 'boolean' && isToggled) || updatedIsToggled || false;\n\n    if (checkIsToggled) {\n      chart.hide(chartId);\n    }\n\n    const button = (\n      <Button\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        onClick={this.onToggle}\n        onFocus={this.onFocus}\n        onMouseOver={this.onFocus}\n        onBlur={this.onRevert}\n        onMouseOut={this.onRevert}\n        onKeyPress={this.onToggle}\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: this.getColor()\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: this.getColor()\n              }}\n            />\n          )\n        }\n      >\n        {children}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *   - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={tooltipContent}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartId: string, children: Node, isDisabled: boolean, tooltipContent: Node, chart: object,\n *    isThreshold: boolean, isToggled: boolean, getToggle: Function}}\n */\nC3GraphCardLegendItem.propTypes = {\n  chart: PropTypes.shape({\n    color: PropTypes.func,\n    focus: PropTypes.func,\n    hide: PropTypes.func,\n    revert: PropTypes.func,\n    toggle: PropTypes.func\n  }),\n  chartId: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  isThreshold: PropTypes.bool,\n  isToggled: PropTypes.bool,\n  tooltipContent: PropTypes.node,\n  getToggle: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, isDisabled: boolean, tooltipContent: null, chart: {hide: Function,\n *    color: Function, focus: Function, revert: Function, toggle: Function}, isThreshold: boolean,\n *    isToggled: boolean, getToggle: Function}}\n */\nC3GraphCardLegendItem.defaultProps = {\n  chart: {\n    color: helpers.noop,\n    focus: helpers.noop,\n    hide: helpers.noop,\n    revert: helpers.noop,\n    toggle: helpers.noop\n  },\n  children: null,\n  isDisabled: false,\n  isThreshold: false,\n  isToggled: false,\n  tooltipContent: null,\n  getToggle: null\n};\n\nexport { C3GraphCardLegendItem as default, C3GraphCardLegendItem };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport c3 from 'c3';\nimport _isEqual from 'lodash/isEqual';\nimport 'c3/c3.min.css';\nimport { helpers } from '../../common';\n\n/**\n * C3 wrapper.\n * Uses aspects from https://github.com/bcbcarl/react-c3js and https://github.com/wuct/react-c3-component\n *\n * @augments React.Component\n */\nclass C3Chart extends React.Component {\n  state = { chart: null };\n\n  node = React.createRef();\n\n  componentDidMount() {\n    this.generateChart();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { config } = this.props;\n\n    if (!_isEqual(prevProps.config.data, config.data)) {\n      this.generateChart();\n    }\n  }\n\n  componentWillUnmount() {\n    const { chart } = this.state;\n    if (chart) {\n      chart.destroy();\n    }\n    this.setState({ chart: null });\n  }\n\n  generateChart() {\n    const { chart } = this.state;\n    const { config, onComplete } = this.props;\n\n    let updatedChart = chart;\n    if (!updatedChart) {\n      updatedChart = c3.generate({ bindto: this.node.current, ...config });\n    }\n\n    updatedChart.load({\n      ...config.data,\n      unload: config.unloadBeforeLoad || false,\n      done: () => {\n        this.setState({ chart: updatedChart }, () => {\n          if (config.done) {\n            config.done({ chart: updatedChart, config });\n          } else {\n            onComplete({ chart: updatedChart, config });\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const { chart } = this.state;\n    const { className, children, config, style } = this.props;\n\n    return (\n      <div className={`curiosity-c3chart ${className}`} style={style}>\n        <div ref={this.node} className=\"curiosity-c3chart-container\" />\n        {chart && (\n          <div className=\"curiosity-c3chart-description\">\n            {(typeof children === 'function' && children({ chart, config })) || children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{children: Node|Function, onComplete: Function, className: string, style: object, config}}\n */\nC3Chart.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  className: PropTypes.string,\n  config: PropTypes.shape({\n    unloadBeforeLoad: PropTypes.bool,\n    data: PropTypes.object,\n    done: PropTypes.func\n  }),\n  onComplete: PropTypes.func,\n  style: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, onComplete: Function, className: null, style: {}, config: {}}}\n */\nC3Chart.defaultProps = {\n  children: null,\n  className: null,\n  config: {},\n  onComplete: helpers.noop,\n  style: {}\n};\n\nexport { C3Chart as default, C3Chart };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { c3GraphCardHelpers } from './c3GraphCardHelpers';\nimport { C3GraphCardLegendItem } from './c3GraphCardLegendItem';\nimport { graphCardTypes } from '../graphCard/graphCardTypes';\nimport { C3Chart } from '../c3Chart/c3Chart';\nimport { Loader } from '../loader/loader';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: Convert \"productShortLabel\" prop to \"productLabel\" for consistency\n * This is dependent on ALL c3 components being removed as part of future updates.\n */\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass C3GraphCard extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const graphQuery = {\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString(),\n        ...query\n      };\n\n      getGraphReportsCapacity(productId, graphQuery);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n      viewId,\n      [RHSM_API_QUERY_TYPES.GRANULARITY]: value\n    });\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * Apply a custom legend.\n   *\n   * @param {object} options\n   * @param {Function} options.chart\n   * @param {Array} options.filteredData\n   * @param {string} options.granularity\n   * @param {Array} options.hiddenDataFacets\n   * @returns {Array}\n   */\n  renderLegend({ chart, filteredData = [], granularity, hiddenDataFacets = [] }) {\n    const { state } = this;\n    const { productId, productShortLabel, t } = this.props;\n\n    return filteredData.map(({ id }) => {\n      const isThreshold = /^threshold/.test(id);\n      const isDataHidden = hiddenDataFacets.includes(id);\n      const tooltipContent = (\n        <p>{(isThreshold && t(`curiosity-graph.thresholdLegendTooltip`)) || t(`curiosity-graph.${id}LegendTooltip`)}</p>\n      );\n\n      const getToggle = ({ isToggled }) => this.setState({ [`${productId}-${granularity}-${id}`]: isToggled });\n      const isToggled = state[`${productId}-${granularity}-${id}`] || false;\n\n      return (\n        <C3GraphCardLegendItem\n          key={`legend-${productId}-${granularity}-${id}`}\n          chart={chart}\n          chartId={id}\n          tooltipContent={tooltipContent}\n          isDisabled={isDataHidden}\n          isThreshold={isThreshold}\n          isToggled={isToggled}\n          getToggle={getToggle}\n        >\n          {(isThreshold && t(`curiosity-graph.thresholdLabel`)) ||\n            t(`curiosity-graph.${id}Label`, { product: productShortLabel })}\n        </C3GraphCardLegendItem>\n      );\n    });\n  }\n\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, productId, productShortLabel, selectOptionsType } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    if (!graphData || !Object.values(graphData).length) {\n      return null;\n    }\n\n    const filtered = [];\n\n    if (filterGraphData.length) {\n      filterGraphData.forEach(filteredValue => {\n        if (graphData[filteredValue.id]) {\n          filtered.push({ ...filteredValue, data: [...graphData[filteredValue.id]] });\n        }\n      });\n    } else {\n      Object.keys(graphData).forEach(id => {\n        filtered.push({ id, data: [...graphData[id]] });\n      });\n    }\n\n    const { configuration = {}, hiddenDataFacets = [] } = c3GraphCardHelpers.c3Config({\n      data: filtered,\n      granularity: updatedGranularity,\n      productShortLabel\n    });\n\n    return (\n      <C3Chart key={`chart-${productId}-${updatedGranularity}`} config={configuration}>\n        {({ chart }) =>\n          this.renderLegend({\n            chart,\n            filteredData: filtered,\n            granularity: updatedGranularity,\n            hiddenDataFacets\n          })\n        }\n      </C3Chart>\n    );\n  }\n\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, isDisabled, pending, selectOptionsType, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = this.getQueryGranularity();\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <CardHeader>\n          <CardTitle>\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {cardTitle}\n            </Title>\n          </CardTitle>\n          <CardActions className={(error && 'blur') || ''}>\n            {children}\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onGranularitySelect}\n              options={options}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHeader>\n        <CardBody>\n          <div className={(error && 'blur') || 'fadein'}>\n            {pending && <Loader variant=\"graph\" />}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, pending: boolean, error: boolean, query: object, cardTitle: string,\n *     filterGraphData: Array, getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nC3GraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      color: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  productShortLabel: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: translate, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nC3GraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  selectOptionsType: 'default',\n  t: translate,\n  productShortLabel: '',\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(C3GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, C3GraphCard };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs as PfTabs, Tab, TabTitleText, Grid, GridItem } from '@patternfly/react-core';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: PF tabs misinterprets \"isElementInView\" when tab title nodes are loaded dynamically\n * It appears the use of isElementInView within PF tabs is trying to be predicative in using\n * \"getBoundingClientRect\" but produces questionable results in scenarios where content is\n * async created. isElementInView assumes some form of the content will always be there\n * instead of scenarios where someone tries to dynamically apply components. It may be good to\n * review using a window.setTimeout(() => handleScrollButtons()) in componentDidMount.\n *\n * Our temporary solution is to simply hide the buttons with a manual set flag affecting the\n * CSS class. This will most likely cause long-term issues.\n */\n/**\n * ToDo: Insights frontend components uses a custom tabs layout, investigate related CSS classes\n * Originally we applied the CSS classes, but they appeared to provide nothing. Since Insights\n * rolled its own tabs we're hesitant to apply said classes without understanding what they provide.\n */\n/**\n * A set of tabs.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass Tabs extends React.Component {\n  state = {\n    updatedActiveTab: null,\n    updatedTabs: null\n  };\n\n  componentDidMount() {\n    const { updatedTabs } = this.state;\n\n    if (updatedTabs === null) {\n      this.setTabData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tabs } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (!_isEqualWith(prevProps.tabs, tabs, customizer)) {\n      this.setTabData();\n    }\n  }\n\n  /**\n   * On tab selected\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {number} params.index\n   */\n  onTab = ({ index }) => {\n    const { onTab } = this.props;\n\n    this.setState(\n      {\n        updatedActiveTab: index\n      },\n      () => onTab({ index })\n    );\n  };\n\n  /**\n   * Convert tab objects into the required PF Tab format.\n   */\n  setTabData() {\n    const { activeTab, defaultActiveTab, tabs } = this.props;\n    let updatedActiveTab = defaultActiveTab;\n\n    const updatedTabs = tabs.map(({ active, content, title }, index) => {\n      updatedActiveTab = active ? index : updatedActiveTab;\n\n      return (\n        <Tab key={title} eventKey={index} title={<TabTitleText>{title}</TabTitleText>}>\n          {content}\n        </Tab>\n      );\n    });\n\n    if (typeof activeTab === 'number') {\n      updatedActiveTab = activeTab;\n    }\n\n    this.setState({\n      updatedActiveTab,\n      updatedTabs\n    });\n  }\n\n  /**\n   * Apply props to tabs.\n   *\n   * @returns {Node}\n   */\n  renderTabs() {\n    const { updatedActiveTab, updatedTabs } = this.state;\n    const { className, hasOverflowScroll } = this.props;\n\n    return (\n      <PfTabs\n        className={`curiosity-tabs${(!hasOverflowScroll && '__no-scroll') || ''} ${className || ''}`}\n        activeKey={updatedActiveTab}\n        onSelect={(event, index) => this.onTab({ event, index })}\n        mountOnEnter\n        unmountOnExit\n        inset={{\n          default: 'insetNone',\n          md: 'insetLg'\n        }}\n      >\n        {updatedTabs}\n      </PfTabs>\n    );\n  }\n\n  /**\n   * Render tabs.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"curiosity-tabs-container\" guttter=\"sm\">\n        <GridItem span={12}>{this.renderTabs()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.propTypes = {\n  activeTab: PropTypes.number,\n  className: PropTypes.string,\n  defaultActiveTab: PropTypes.number,\n  hasOverflowScroll: PropTypes.bool,\n  onTab: PropTypes.func,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      content: PropTypes.node.isRequired,\n      title: PropTypes.node.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.defaultProps = {\n  activeTab: null,\n  className: '',\n  defaultActiveTab: 0,\n  hasOverflowScroll: false,\n  onTab: helpers.noop,\n  tabs: []\n};\n\nexport { Tabs as default, Tabs };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * A tab pass-through component for passing props to InventoryTabs.\n *\n * @param {object} props\n * @param {boolean} props.active\n * @param {Node} props.children\n * @param {string} props.title\n * @returns {Node}\n */\n// eslint-disable-next-line no-unused-vars\nconst InventoryTab = ({ active, children, title }) => <React.Fragment>{children}</React.Fragment>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nInventoryTab.propTypes = {\n  children: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  title: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nInventoryTab.defaultProps = {\n  active: false\n};\n\nexport { InventoryTab as default, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { Tabs } from '../tabs/tabs';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { InventoryTab } from './inventoryTab';\n\n/**\n * A system inventory tabs component.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass InventoryTabs extends React.Component {\n  /**\n   * On tab update state.\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {string} params.index tab index\n   */\n  onTab = ({ index }) => {\n    const { productId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.inventory.SET_INVENTORY_TAB,\n      tabs: {\n        [productId]: index\n      }\n    });\n  };\n\n  /**\n   * Render inventory tabs using Inventory tab passed props only. A parallel outcome can be\n   * achieved by passing an array of objects through a prop.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { activeTab, children, defaultActiveTab, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const updatedChildren = React.Children.toArray(children).map(({ props = {} }) => ({\n      active: props.active || false,\n      content: props.children,\n      title: props.title\n    }));\n\n    return (\n      <React.Fragment>\n        <Title headingLevel=\"h2\" className=\"sr-only\">\n          {t('curiosity-inventory.tabHeading', { count: updatedChildren.length })}\n        </Title>\n        <Tabs activeTab={activeTab} defaultActiveTab={defaultActiveTab} onTab={this.onTab} tabs={updatedChildren} />\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, t: Function, children: Node, defaultActiveTab: number, isDisabled: boolean,\n *     activeTab: number}}\n */\nInventoryTabs.propTypes = {\n  activeTab: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  defaultActiveTab: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.defaultProps = {\n  activeTab: 0,\n  defaultActiveTab: 0,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  t: translate\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst mapStateToProps = ({ inventory }, { productId }) => ({ activeTab: inventory.tabs?.[productId] });\n\nconst ConnectedInventoryTabs = connect(mapStateToProps)(InventoryTabs);\n\nexport { ConnectedInventoryTabs as default, ConnectedInventoryTabs, InventoryTabs, InventoryTab };\n","import { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SLA_TYPES as SLA_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES as USAGE_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = optionsType => {\n  switch (optionsType) {\n    case RHSM_API_QUERY_TYPES.SLA:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.slaPremium'),\n            value: SLA_TYPES.PREMIUM\n          },\n          {\n            title: translate('curiosity-toolbar.slaStandard'),\n            value: SLA_TYPES.STANDARD\n          },\n          {\n            title: translate('curiosity-toolbar.slaSelfSupport'),\n            value: SLA_TYPES.SELF\n          },\n          {\n            title: translate('curiosity-toolbar.slaNone'),\n            value: SLA_TYPES.NONE\n          }\n        ]\n      };\n    case RHSM_API_QUERY_TYPES.USAGE:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.usageDevelopment'),\n            value: USAGE_TYPES.DEVELOPMENT\n          },\n          {\n            title: translate('curiosity-toolbar.usageDisaster'),\n            value: USAGE_TYPES.DISASTER\n          },\n          {\n            title: translate('curiosity-toolbar.usageProduction'),\n            value: USAGE_TYPES.PRODUCTION\n          },\n          {\n            title: translate('curiosity-toolbar.usageUnspecified'),\n            value: USAGE_TYPES.UNSPECIFIED\n          }\n        ]\n      };\n    default:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.SLA }),\n            value: RHSM_API_QUERY_TYPES.SLA\n          },\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.USAGE }),\n            value: RHSM_API_QUERY_TYPES.USAGE\n          }\n        ]\n      };\n  }\n};\n\nconst toolbarTypes = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarTypes as default, toolbarTypes, getOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar as PfToolbar,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup\n} from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons';\nimport { Select } from '../form/select';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onClearFilter\n * @fires onCategorySelect\n * @fires onSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear all filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    const { hardFilterReset } = this.props;\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: new Set() } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [RHSM_API_QUERY_TYPES.SLA]: null,\n            [RHSM_API_QUERY_TYPES.USAGE]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: null } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Clear individual filter state.\n   *\n   * @event onClearFilter\n   * @param {string} categoryTitle\n   */\n  onClearFilter = categoryTitle => {\n    const { activeFilters, currentFilter, hardFilterReset } = this.props;\n\n    const categoryOptions = toolbarTypes.getOptions();\n    const { value: categoryValue } = categoryOptions.options.find(({ title }) => title === categoryTitle) || {};\n\n    if (!categoryValue) {\n      return;\n    }\n\n    const updatedActiveFilters = new Set(activeFilters);\n    updatedActiveFilters.delete(categoryValue);\n\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: updatedActiveFilters } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [categoryValue]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      const updatedCurrentFilter = (updatedActiveFilters.size > 0 && currentFilter) || null;\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: updatedCurrentFilter } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Set Category selection.\n   *\n   * @event onCategorySelect\n   * @param {object} event\n   */\n  onCategorySelect = event => {\n    const { value } = event;\n    this.setDispatch({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: value } });\n  };\n\n  /**\n   * Set select filter selection for dispatch.\n   *\n   * @param {object} params\n   * @param {object} params.event\n   * @param {string} params.field\n   */\n  onSelect = ({ event, field }) => {\n    const { activeFilters } = this.props;\n    const { value } = event;\n    const updatedActiveFilters = new Set(activeFilters).add(field);\n\n    this.setDispatch(\n      [\n        {\n          type: reduxTypes.toolbar.SET_ACTIVE_FILTERS,\n          data: { activeFilters: updatedActiveFilters }\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_TYPES[field],\n          data: { [field]: value }\n        }\n      ],\n      true\n    );\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {Array|object} actions\n   * @param {boolean} resetPage\n   */\n  setDispatch(actions, resetPage = false) {\n    const { viewId } = this.props;\n    const updatedActions = ((Array.isArray(actions) && actions) || [actions]).map(({ type, data }) => ({\n      type,\n      viewId,\n      ...data\n    }));\n\n    if (resetPage) {\n      updatedActions.push({\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST\n      });\n    }\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Available, and selected select filter options.\n   *\n   * @param {string} field\n   * @returns {{optionsSelected: Array, options: Array }}\n   */\n  setSelectFilter(field) {\n    const { query } = this.props;\n    const options = toolbarTypes.getOptions(field);\n    const currentFilter = this.getCurrentFilter();\n    let filter;\n\n    if (field) {\n      filter = typeof query?.[field] === 'string' && options.options.find(({ value }) => value === query?.[field]);\n    } else {\n      filter = options.options.find(({ value }) => value === currentFilter);\n    }\n\n    const optionsSelected = (filter?.title && [filter.title]) || (options?.selected && [options.selected]) || [];\n\n    return { options, optionsSelected };\n  }\n\n  /**\n   * Return the currentFilter, fallback to selected\n   *\n   * @returns {string|undefined}\n   */\n  getCurrentFilter() {\n    const { currentFilter, filterOptions } = this.props;\n\n    return (\n      currentFilter ||\n      filterOptions.find(({ selected }) => selected === true)?.id ||\n      (filterOptions.length === 1 && filterOptions[0]?.id)\n    );\n  }\n\n  /**\n   * A select filter node.\n   *\n   * @param {object} params\n   * @param {string} params.id\n   * @returns {object}\n   */\n  renderSelectFilter({ id: field }) {\n    const { t } = this.props;\n    const { options, optionsSelected } = this.setSelectFilter(field);\n    const currentFilter = this.getCurrentFilter();\n\n    return (\n      <ToolbarFilter\n        key={field}\n        chips={optionsSelected}\n        deleteChip={this.onClearFilter}\n        categoryName={t('curiosity-toolbar.category', { context: field })}\n        showToolbarItem={currentFilter === field}\n      >\n        <Select\n          aria-label={t('curiosity-toolbar.category', { context: field })}\n          onSelect={event => this.onSelect({ event, field })}\n          selectedOptions={optionsSelected}\n          placeholder={t('curiosity-toolbar.placeholder', { context: field })}\n          options={options.options}\n        />\n      </ToolbarFilter>\n    );\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { filterOptions, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options: categoryOptions, optionsSelected: categoryOptionsSelected } = this.setSelectFilter();\n\n    return (\n      <PfToolbar\n        id=\"curiosity-toolbar\"\n        className=\"curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"sm\"\n        clearAllFilters={this.onClear}\n      >\n        <ToolbarContent>\n          <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"md\">\n            <ToolbarGroup variant=\"filter-group\">\n              {filterOptions.length !== 1 && (\n                <ToolbarItem>\n                  <Select\n                    aria-label={t('curiosity-toolbar.category')}\n                    onSelect={this.onCategorySelect}\n                    selectedOptions={categoryOptionsSelected}\n                    placeholder={t('curiosity-toolbar.placeholder')}\n                    options={categoryOptions.options}\n                    toggleIcon={<FilterIcon />}\n                  />\n                </ToolbarItem>\n              )}\n              {filterOptions.map(({ id, selected }) => this.renderSelectFilter({ id, selected }))}\n            </ToolbarGroup>\n          </ToolbarToggleGroup>\n        </ToolbarContent>\n      </PfToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, Array}}\n */\nToolbar.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.SLA]: PropTypes.string,\n    [RHSM_API_QUERY_TYPES.USAGE]: PropTypes.string\n  }),\n  activeFilters: PropTypes.instanceOf(Set),\n  currentFilter: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n  filterOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      filterType: PropTypes.oneOf(['select']),\n      id: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n      selected: PropTypes.bool\n    })\n  ),\n  hardFilterReset: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, filterOptions: Array}}\n */\nToolbar.defaultProps = {\n  query: {},\n  activeFilters: new Set(),\n  currentFilter: null,\n  filterOptions: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA,\n      filterType: 'select'\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      filterType: 'select',\n      selected: true\n    }\n  ],\n  hardFilterReset: false,\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: translate,\n  viewId: 'toolbar'\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.toolbar\n * @param {object} props\n * @param {string} props.viewId\n * @returns {object}\n */\nconst mapStateToProps = ({ toolbar }, { viewId }) => ({ ...toolbar.filters?.[viewId] });\n\nconst ConnectedToolbar = connect(mapStateToProps)(Toolbar);\n\nexport { ConnectedToolbar as default, ConnectedToolbar, Toolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { helpers } from '../../common';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { Loader } from '../loader/loader';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { Table } from '../table/table';\n\n/**\n * ToDo: Consider removing the query prop entirely.\n * The current API doesn't allow setting more than \"offset\" and \"limit\"\n */\n/**\n * ToDo: Review moving the \"onScroll\" layout into a standalone component.\n */\n/**\n * A system inventory guests component.\n *\n * @augments React.Component\n * @fires onUpdateGuestsData\n * @fires onScroll\n */\nclass GuestsList extends React.Component {\n  state = { currentPage: 0, limit: 100, previousData: [] };\n\n  componentDidMount() {\n    this.onUpdateGuestsData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentPage } = this.state;\n\n    if (currentPage !== prevState.currentPage) {\n      this.onUpdateGuestsData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGuestsData\n   */\n  onUpdateGuestsData = () => {\n    const { currentPage, limit } = this.state;\n    const { getHostsInventoryGuests, query, id } = this.props;\n\n    if (id) {\n      const updatedQuery = {\n        ...query,\n        [RHSM_API_QUERY_TYPES.LIMIT]: limit,\n        [RHSM_API_QUERY_TYPES.OFFSET]: currentPage * limit || 0\n      };\n\n      const { inventoryGuestsQuery } = apiQueries.parseRhsmQuery(updatedQuery);\n      getHostsInventoryGuests(id, inventoryGuestsQuery);\n    }\n  };\n\n  /**\n   * Update page state.\n   *\n   * @event onScroll\n   * @param {object} event\n   */\n  onScroll = event => {\n    const { target } = event;\n    const { currentPage, limit, previousData } = this.state;\n    const { numberOfGuests, pending, listData } = this.props;\n\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > (currentPage + 1) * limit && bottom && !pending) {\n      const newPage = currentPage + 1;\n      const updatedData = [...previousData, ...(listData || [])];\n\n      this.setState({\n        previousData: updatedData,\n        currentPage: newPage\n      });\n    }\n  };\n\n  renderLoader() {\n    const { currentPage } = this.state;\n    const { filterGuestsData, listData, pending } = this.props;\n\n    if (currentPage > 0 && pending) {\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            rowCount: 0,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  }\n\n  /**\n   * ToDo: Consider moving the \"meaning of life\" into the default props on iteration.\n   * For everyone else... move the 42 into default props, possibly the 275.\n   */\n  /**\n   * Render a guests table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { previousData } = this.state;\n    const { filterGuestsData, listData, numberOfGuests, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = [...previousData, ...(listData || [])].map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: filterGuestsData,\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    // Include the table header\n    let updatedHeight = (numberOfGuests + 1) * 42;\n    updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n    return (\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={this.onScroll}\n        >\n          {this.renderLoader()}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render a guest list table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { currentPage } = this.state;\n    const { error, filterGuestsData, listData, numberOfGuests, pending, perPageDefault } = this.props;\n\n    return (\n      <div className={`fadein ${(error && 'blur') || ''}`}>\n        {pending && currentPage === 0 && (\n          <Loader\n            variant=\"table\"\n            tableProps={{\n              borders: false,\n              colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n              colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n              rowCount: numberOfGuests < perPageDefault ? numberOfGuests : perPageDefault,\n              variant: TableVariant.compact\n            }}\n          />\n        )}\n        {((!pending && currentPage === 0) || currentPage > 0) && this.renderTable()}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: object,\n *     pending: boolean, query: object, numberOfGuests: number, perPageDefault: number, id: string,\n *     error: boolean}}\n */\nGuestsList.propTypes = {\n  error: PropTypes.bool,\n  filterGuestsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventoryGuests: PropTypes.func,\n  listData: PropTypes.array,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  pending: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object,\n  session: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: Array,\n *     pending: boolean, query: object, perPageDefault: number, error: boolean}}\n */\nGuestsList.defaultProps = {\n  error: false,\n  filterGuestsData: [],\n  getHostsInventoryGuests: helpers.noop,\n  listData: [],\n  pending: false,\n  perPageDefault: 5,\n  query: {},\n  session: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventoryGuests: (id, query) => dispatch(reduxActions.rhsm.getHostsInventoryGuests(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.guestsList.makeGuestsList();\n\nconst ConnectedGuestsList = connect(makeMapStateToProps, mapDispatchToProps)(GuestsList);\n\nexport { ConnectedGuestsList as default, ConnectedGuestsList, GuestsList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport GuestsList from '../guestsList/guestsList';\nimport { inventoryListHelpers } from './inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A hosts system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onUpdateInventoryData\n */\nclass InventoryList extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getHostsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getHostsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterGuestsData, filterInventoryData, listData, query, session, settings } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      const guestsId = cellData?.subscriptionManagerId;\n      let hasGuests = cellData?.numberOfGuests > 0 && guestsId;\n\n      // Apply hasGuests callback, return boolean\n      if (typeof settings?.hasGuests === 'function') {\n        hasGuests = settings.hasGuests({ ...cellData }, { ...session });\n      }\n\n      return {\n        cells,\n        expandedContent:\n          (hasGuests && (\n            <GuestsList\n              key={guestsId}\n              filterGuestsData={filterGuestsData}\n              numberOfGuests={cellData?.numberOfGuests}\n              id={guestsId}\n              query={query}\n            />\n          )) ||\n          undefined\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      productId,\n      query,\n      t,\n      viewId\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query?.[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedPage = query[RHSM_API_QUERY_TYPES.OFFSET] / query[RHSM_API_QUERY_TYPES.LIMIT] + 1 || 1;\n    const isLastPage = updatedPage === Math.ceil(itemCount / updatedPerPage);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader>\n            <CardActions className={(error && 'blur') || ''}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                productId={productId}\n                viewId={viewId}\n                perPageDefault={updatedPerPage}\n                offsetType={reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]}\n                limitType={reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter className={(error && 'blur') || ''}>\n            <TableToolbar isFooter>\n              <Pagination\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                productId={productId}\n                viewId={viewId}\n                perPageDefault={updatedPerPage}\n                dropDirection=\"up\"\n                offsetType={reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]}\n                limitType={reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{settings: object, productId: string, listData: Array, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, getHostsInventory: Function, error: boolean, itemCount: number, viewId: string,\n *     t: Function, filterInventoryData: Array, filterGuestsData: Array, perPageDefault: number,\n *     isDisabled: boolean}}\n */\nInventoryList.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterGuestsData: PropTypes.array,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  settings: PropTypes.shape({\n    hasGuests: PropTypes.func\n  }),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{settings: object, listData: Array, session: object, pending: boolean, fulfilled: boolean,\n *     getHostsInventory: Function, error: boolean, itemCount: number, viewId: string, t: translate,\n *     filterInventoryData: Array, filterGuestsData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterGuestsData: [],\n  filterInventoryData: [],\n  getHostsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_HOSTS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  settings: {},\n  t: translate,\n  viewId: 'inventoryList'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventory: (id, query) => dispatch(reduxActions.rhsm.getHostsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.inventoryList.makeInventoryList();\n\nconst ConnectedInventoryList = connect(makeMapStateToProps, mapDispatchToProps)(InventoryList);\n\nexport { ConnectedInventoryList as default, ConnectedInventoryList, InventoryList };\n"],"sourceRoot":""}
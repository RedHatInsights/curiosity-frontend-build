{"version":3,"sources":["components/table/tableEmpty.js","components/table/table.js","components/table/tableSkeleton.js","components/loader/loader.js","common/helpers.js","components/i18n/i18n.js","redux/common/reduxHelpers.js","redux/middleware/index.js","redux/middleware/statusMiddleware.js","redux/middleware/multiActionMiddleware.js","redux/types/appTypes.js","redux/types/graphTypes.js","redux/types/platformTypes.js","redux/types/queryTypes.js","redux/types/rhsmTypes.js","redux/types/userTypes.js","redux/types/index.js","redux/types/toolbarTypes.js","redux/reducers/graphReducer.js","redux/reducers/inventoryReducer.js","redux/reducers/toolbarReducer.js","redux/reducers/userReducer.js","redux/reducers/viewReducer.js","redux/reducers/index.js","redux/store.js","services/platformServices.js","redux/actions/platformActions.js","services/config.js","services/rhsmServices.js","redux/actions/rhsmActions.js","services/userServices.js","redux/actions/index.js","redux/actions/userActions.js","redux/selectors/guestsListSelectors.js","redux/selectors/graphCardSelectors.js","redux/selectors/inventoryListSelectors.js","redux/selectors/userSelectors.js","redux/selectors/viewSelectors.js","redux/selectors/index.js","redux/index.js","types/rhsmApiTypes.js","types/platformApiTypes.js","components/router/routerTypes.js","components/router/routerHelpers.js","components/router/redirect.js","components/router/router.js","components/messageView/messageView.js","components/authentication/authentication.js","components/app.js","index.js","types/index.js","common/index.js","components/pageLayout/pageHeader.js","components/pageLayout/pageSection.js","components/pageLayout/pageToolbar.js","components/pageLayout/pageLayout.js","common/dateHelpers.js"],"names":["TableEmpty","icon","message","tableHeading","title","variant","EmptyState","EmptyStateIcon","Title","headingLevel","size","EmptyStateBody","defaultProps","EmptyStateVariant","small","Table","state","updatedColumnHeaders","updatedRows","onCollapse","index","isOpen","fullWidth","cells","expandedContent","setState","this","setRowData","prevProps","props","columnHeaders","rows","_isEqual","forEach","columnHeader","push","isExpanded","rowObj","parent","length","cell","contentCell","settings","ariaLabel","borders","children","className","isHeader","summary","t","emptyTable","SearchIcon","Fragment","aria-label","appName","helpers","UI_DISPLAY_NAME","event","data","Grid","guttter","GridItem","span","renderTable","React","Component","translate","TableSkeleton","colCount","rowCount","Array","map","Skeleton","SkeletonSize","md","Loader","skeletonProps","tableProps","lg","xs","sm","Spinner","noop","Function","prototype","noopPromise","Promise","resolve","browserExpose","obj","options","limit","id","process","window","generateId","prefix","Math","ceil","random","isDate","date","Object","toString","call","isPromise","test","noopTranslate","key","value","components","DEV_MODE","PROD_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_TABLE","UI_DISABLED_TOOLBAR","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_NAME","UI_PATH","UI_VERSION","UI_WINDOW_ID","translateKey","values","i18nKey","i18next","I18n","isLoaded","i18nInit","a","fallbackLng","loadPath","locale","use","XHR","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","getSingleResponseFromResultArray","results","updatedResults","payload","response","updatedResultsMessage","isArray","firstErrorResponse","find","_get","status","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","_isPlainObject","JSON","stringify","getDateFromResults","getStatusFromResults","setStateProp","prop","initialState","reset","singlePromiseDataResponseFromArray","reduxHelpers","schemas","initialValue","schema","generated","types","action","type","expandedTypes","val","subVal","ref","filter","RegExp","whichType","expandMetaTypes","meta","updatedMeta","query","metaData","metaId","metaQuery","baseState","error","errorMessage","fulfilled","pending","setId","errorResponse","cancelled","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","config","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","store","dispatch","next","httpStatus","payloadConfig","range","floor","statusMiddleware","promiseMiddleware","notificationsMiddleware","appTypes","STATUS_4XX","STATUS_5XX","graphTypes","SET_GRAPH_LEGEND","platformTypes","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","SET_QUERY_RHSM_TYPES","RHSM_API_QUERY_GRANULARITY","RHSM_API_QUERY_USAGE","RHSM_API_QUERY_SLA","RHSM_API_QUERY_LIMIT","RHSM_API_QUERY_OFFSET","rhsmTypes","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_RHSM","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","userTypes","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","app","graph","platform","SET_QUERY_CLEAR","SET_QUERY_PAGE_LIMIT_RHSM","SET_QUERY_PAGE_OFFSET_RHSM","rhsm","toolbar","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","user","legend","reportCapacity","graphReducer","hostsInventory","hostsGuests","inventoryReducer","filters","toolbarReducer","viewId","activeFilters","currentFilter","optin","session","errorCodes","userReducer","actionStatus","rhsmApiTypes","RHSM_API_RESPONSE_ERROR_DATA","RHSM_API_RESPONSE_ERROR_DATA_TYPES","CODE","viewReducer","clearFilters","reducers","notifications","inventory","view","reduxReducers","combineReducers","createStore","applyMiddleware","getUser","insights","_set","platformApiTypes","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","REACT_APP_DEBUG_ORG_ADMIN","chrome","auth","Error","getUserPermissions","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","REACT_APP_DEBUG_PERMISSION_RESOURCE","REACT_APP_DEBUG_PERMISSION_OPERATION","e","platformServices","initializeChrome","onNavigation","callback","on","setAppName","name","identifyApp","reject","setNavigation","location","navigation","item","active","pathname","split","slice","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","serviceConfig","passedConfig","headers","timeout","cancelTokens","serviceCall","updatedConfig","cancelTokensId","url","cancel","CancelToken","source","cancelToken","token","axios","rhsmServices","getApiVersion","getGraphCapacity","params","getGraphReports","getHostsInventory","getHostsInventoryGuests","replace","rhsmActions","getGraphReportsCapacity","all","getLocaleFromCookie","Cookies","get","LocaleCode","getLanguageName","userServices","authorizeUser","userData","userPermissions","keys","permissions","emulatedErrorResponse","getLocale","defaultLocale","logoutUser","deleteAccountOptIn","method","getAccountOptIn","updateAccountOptIn","actions","rejected","description","dismissable","reduxActions","selectorCache","dataId","selector","createSelector","productId","listQuery","responseData","updatedResponseData","listData","responseMetaQuery","cache","undefined","assign","RHSM_API_RESPONSE_INVENTORY_DATA","RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES","hostsSchema","customInventoryValue","RHSM_API_RESPONSE_INVENTORY_DATA_TYPES","LAST_SEEN","moment","utc","startOf","from","getCurrentDate","dataObj","keyPrefix","customValue","updatedDataObj","dataObjKey","casedDataObjKey","_camelCase","generateReflectedData","guestsListSelectors","guestsList","makeGuestsList","graphData","RHSM_API_QUERY_START_DATE","RHSM_API_QUERY_END_DATE","cachedGranularity","report","capacity","reportData","RHSM_API_RESPONSE_PRODUCTS_DATA","capacityData","RHSM_API_RESPONSE_CAPACITY_DATA","graphDataKey","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","tallySchema","capacitySchema","customReportValue","presetData","hasData","HAS_DATA","customCapacityValue","x","y","HAS_INFINITE","hasInfinite","DATE","toDate","generateGraphData","graphDataObj","graphDataObjKey","generatedY","casedGraphDataObjKey","Number","parseInt","updatedItem","graphCardSelectors","graphCard","makeGraphCard","inventoryListSelectors","inventoryList","makeInventoryList","rest","updatedSession","admin","authorized","entitled","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","subscriptionPermissions","src","permission","resource","operation","definitions","RESOURCE_DEFS","userSessionSelectors","userSession","makeUserSession","createSelectorCreator","defaultMemoize","createDeepEqualSelector","reduxSelectors","userSelectors","makeView","connectRouter","mapStateToProps","mapDispatchToProps","component","withRouter","connect","RHSM_API_PATH_ID_TYPES","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","OPENSHIFT","RHSM_API_QUERY_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_QUERY_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_QUERY_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","DETAIL","RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES","GENERIC","OPTIN","RHSM_API_RESPONSE_LINKS","RHSM_API_RESPONSE_LINKS_TYPES","FIRST","LAST","PREVIOUS","NEXT","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_META_TYPES","COUNT","CLOUD_CORES","CLOUD_INSTANCES","CLOUD_SOCKETS","CORES","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","SOCKETS","ID","NAME","SUBSCRIPTION_ID","HARDWARE","GUESTS","RHSM_API_QUERY_OPTIN_TALLY_SYNC","RHSM_API_QUERY_OPTIN_TALLY_REPORT","RHSM_API_QUERY_OPTIN_CONDUIT_SYNC","platformLandingRedirect","path","join","platformModalRedirect","routes","to","redirect","lazy","exact","render","disabled","activateOnError","pathId","pathParameter","default","routerTypes","dynamicBaseName","pathName","pathPrefix","shift","pathSlice","baseName","getErrorRoute","route","getNavigationDetail","navigationItem","returnDefault","defaultItem","href","routeHref","getRouteDetail","routeItem","includes","routerHelpers","getNavRouteDetail","navDetail","routeDetail","Redirect","urlRoute","history","isRedirect","isReplace","Suspense","fallback","forcePath","RoutedRedirect","Router","activateOnErrorRoute","redirectRoot","renderRoutes","hasParameters","strict","routeProps","URLSearchParams","decodeURIComponent","parsedSearch","Set","search","param","v","updatedLocation","errorRoute","MessageView","pageTitle","full","Authentication","removeListeners","appNav","navId","BinocularsIcon","LockIcon","makeMapStateToProps","ConnectedAuthentication","App","ConnectedApp","basename","document","getElementById","PageHeader","context","Button","isInline","iconPosition","target","PageSection","Section","PageToolbar","PageLayout","Children","toArray","child","isValidElement","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","subtract","measurement","startDate","endDate","endOf","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats"],"mappings":"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","file":"static/js/main.bb246dd4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/components/cjs/EmptyTable';\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {Node|Function} props.icon\n * @param {Node} props.message\n * @param {string} props.tableHeading\n * @param {Node} props.title\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, variant: string, message: Node, title: Node, tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { Table as PfTable, TableBody, TableHeader, TableVariant } from '@patternfly/react-table';\nimport _isEqual from 'lodash/isEqual';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n */\nclass Table extends React.Component {\n  state = {\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n\n    if (!_isEqual(prevProps.rows, rows) || !_isEqual(prevProps.columnHeaders, columnHeaders)) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n\n    columnHeaders.forEach(columnHeader => {\n      updatedColumnHeaders.push(columnHeader);\n    });\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell?.cell) {\n          const { cell: contentCell, ...settings } = cell;\n          rowObj.cells.push({ title: contentCell, ...settings });\n        } else {\n          rowObj.cells.push({ title: cell });\n        }\n      });\n    });\n\n    this.setState({\n      updatedColumnHeaders,\n      updatedRows\n    });\n  }\n\n  /**\n   * Apply props to table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          onCollapse={(event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data })}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid guttter=\"sm\" className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: Node,\n *     isHeader: boolean, variant: string, className: string, rows, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        title: PropTypes.node\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.shape({\n            cell: PropTypes.node\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/cjs/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableSkeleton = ({ className, borders, colCount, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />);\n\n  const updatedRows = [...new Array(rowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => ({ cell: <Skeleton size={SkeletonSize.md} /> }))\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table ${className || ''}`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, variant: string, className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, variant: null, className: null,\n *     rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/cjs/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/components/cjs/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader };\n","/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string} key\n * @param {string|object} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) =>\n  `t(${key}${(value && `, ${value}`) || ''}${(components && `, ${components}`) || ''})`;\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  browserExpose,\n  generateId,\n  isDate,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, Trans } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string} translateKey\n * @param {string|Array} values A default string if the key can't be found. An array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @returns {string|Node}\n */\nconst translate = (translateKey, values = null, components) => {\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(translateKey, values, components);\n  }\n\n  if (components) {\n    return <Trans i18nKey={translateKey} values={values} components={components} />;\n  }\n\n  return i18next.t(translateKey, values);\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {Node} Component\n * @returns {Node}\n */\nconst translateComponent = Component => {\n  const withTranslation = ({ ...props }) => <Component {...props} t={translate} i18n={i18next} />;\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\n/**\n * ToDo: reevaluate the \"I18nextProvider\" on package update.\n * Appears to have timing issues, and subsequent firings of the\n * ajax/xhr setup. Reverting it to just a function call that populates behind\n * the scenes appears more predictable.\n */\n/**\n * Load I18n.\n *\n * @augments React.Component\n */\nclass I18n extends React.Component {\n  state = { isLoaded: false };\n\n  componentDidMount() {\n    this.i18nInit();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { locale } = this.props;\n\n    if (locale !== prevProps.locale) {\n      this.i18nInit();\n    }\n  }\n\n  /**\n   * Load i18next.\n   *\n   * @returns {Promise<void>}\n   */\n  i18nInit = async () => {\n    const { fallbackLng, loadPath, locale } = this.props;\n\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: locale,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      // ToDo: eval the need for an isError state ref\n    }\n\n    this.setState({ isLoaded: true });\n  };\n\n  /**\n   * Render children after i18next loads.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { isLoaded } = this.state;\n    const { children } = this.props;\n\n    return (isLoaded && <React.Fragment>{children}</React.Fragment>) || <React.Fragment />;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: Node, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} initialValue\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 300 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (process.env.REACT_APP_ENV === 'development' && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (process.env.REACT_APP_ENV === 'development' && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    delete updatedMeta.data;\n    delete updatedMeta.id;\n    delete updatedMeta.query;\n\n    return {\n      meta: { ...updatedMeta },\n      metaData: meta.data,\n      metaId: meta.id,\n      metaQuery: meta.query\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setResponseSchemas,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/cjs';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","const SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications/cjs';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_INIT: string, PLATFORM_SET_NAV: string,\n *     PLATFORM_CLEAR_NOTIFICATIONS: string, PLATFORM_ADD_NOTIFICATION: string,\n *     PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n","import {\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_USAGE,\n  RHSM_API_QUERY_SLA,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET\n} from '../../types/rhsmApiTypes';\n\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\n\n/**\n * ToDo: convert use SET_QUERY_PAGE_LIMIT_RHSM and SET_QUERY_PAGE_OFFSET_RHSM to SET_QUERY_RHSM_TYPES syntax\n * This work will be in place before the inventory display and paging. Make sure to switch over to the\n * use of SET_QUERY_RHSM_TYPES when dealing with \"limit\" and \"offset\" for paging.\n */\nconst SET_QUERY_PAGE_LIMIT_RHSM = 'SET_QUERY_PAGE_LIMIT_RHSM';\nconst SET_QUERY_PAGE_OFFSET_RHSM = 'SET_QUERY_PAGE_OFFSET_RHSM';\n\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_GRANULARITY}`,\n  [RHSM_API_QUERY_USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_USAGE}`,\n  [RHSM_API_QUERY_SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_SLA}`,\n  [RHSM_API_QUERY_LIMIT]: `SET_QUERY_RHSM_${RHSM_API_QUERY_LIMIT}`,\n  [RHSM_API_QUERY_OFFSET]: `SET_QUERY_RHSM_${RHSM_API_QUERY_OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_PAGE_OFFSET_RHSM: string, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_PAGE_LIMIT_RHSM: string, SET_QUERY_CLEAR: string}}\n */\nconst queryTypes = {\n  SET_QUERY_CLEAR,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_PAGE_LIMIT_RHSM,\n  SET_QUERY_PAGE_OFFSET_RHSM\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY_CLEAR,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_PAGE_LIMIT_RHSM,\n  SET_QUERY_PAGE_OFFSET_RHSM\n};\n","const GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_RHSM = 'GET_GRAPH_REPORT_RHSM';\nconst GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_HOSTS_INVENTORY_GUESTS_RHSM: string,\n *     GET_GRAPH_CAPACITY_RHSM: string, GET_HOSTS_INVENTORY_RHSM: string, GET_GRAPH_REPORT_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_AUTH: string, USER_LOCALE: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_AUTH,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","const SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}}}\n */\nconst initialState = {\n  legend: {},\n  reportCapacity: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          ...action.legend\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [{ ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM }],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{hostsInventoryGuests: {}, hostsInventory: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system inventory to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [\n      { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n      { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM }\n    ],\n    state,\n    action\n  );\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, userTypes } from '../types';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{session: {errorCodes: Array, locale: string}, optin: {}}}\n */\nconst initialState = {\n  optin: {},\n  session: {\n    errorCodes: [],\n    locale: null\n  }\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(\n          reduxHelpers.getDataFromResults(action),\n          [rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA],\n          []\n        );\n\n        return reduxHelpers.setStateProp(\n          'session',\n          {\n            error: true,\n            errorCodes: errorCodes.map(value => value[rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE]),\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            locale: state.session.locale,\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'session', type: userTypes.USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport {\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_SLA,\n  RHSM_API_QUERY_USAGE\n} from '../../types/rhsmApiTypes';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{query: {}}}\n */\nconst initialState = {\n  query: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_GRANULARITY]: action[RHSM_API_QUERY_GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_SLA]: action[RHSM_API_QUERY_SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_USAGE]: action[RHSM_API_QUERY_USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_PAGE_LIMIT_RHSM:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_LIMIT]: action[RHSM_API_QUERY_LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_PAGE_OFFSET_RHSM:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_OFFSET]: action[RHSM_API_QUERY_OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications/cjs';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","import _set from 'lodash/set';\nimport { helpers } from '../common';\nimport { platformApiTypes } from '../types';\n\n/**\n * Basic user authentication.\n *\n * @returns {Promise<void>}\n */\nconst getUser = async () => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE &&\n        _set(\n          {},\n          [\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n          ],\n          process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n        )) ||\n      (await insights.chrome.auth.getUser())\n    );\n  } catch (e) {\n    throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n  }\n};\n\n/**\n * FixMe: revert this back towards async/await\n * Removed because there appears to be some quirky behavior where permissions will not come through\n * unless the function, and/or await are specifically returned, i.e. \"return await insights.chrome...\".\n */\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @returns {Promise<void>}\n */\nconst getUserPermissions = (appName = '') => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE && [\n        {\n          [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES\n            .PERMISSION]: `${helpers.UI_NAME}:${process.env.REACT_APP_DEBUG_PERMISSION_RESOURCE}:${process.env.REACT_APP_DEBUG_PERMISSION_OPERATION}`\n        }\n      ]) ||\n      insights.chrome.getUserPermissions(appName)\n    );\n  } catch (e) {\n    throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<void>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n// FixMe: Revert catch to throwing an error. Relaxed for development\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<void>}\n */\nconst setAppName = async (name = null) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.identifyApp(name);\n  } catch (e) {\n    const error = `{ identifyApp } = insights.chrome, ${e.message}`;\n    await Promise.reject(error);\n  }\n};\n\n// ToDo: Clean up, consider removing setNavigation, currently no longer used.\n/**\n * Set platform left hand navigation active item.\n *\n * @param {Array} data\n * @returns {*}\n */\nconst setNavigation = (data = []) => {\n  const { insights, location } = window;\n  try {\n    return insights.chrome.navigation(\n      data.map(item => ({\n        ...item,\n        active: item.id === location.pathname.split('/').slice(-1)[0]\n      }))\n    );\n  } catch (e) {\n    throw new Error(`{ navigation } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = { getUser, getUserPermissions, initializeChrome, onNavigation, setAppName, setNavigation };\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  getUserPermissions,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for handling the left-nav navigation active item.\n *\n * @param {object} data\n * @returns {Function}\n */\nconst setNavigation = data => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_SET_NAV\n  });\n  return platformServices.setNavigation(data);\n};\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import axios, { CancelToken } from 'axios';\nimport { platformServices } from './platformServices';\n\n/**\n * Apply consistent service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {object}\n */\nconst cancelTokens = {};\n\n/**\n * Call platform \"getUser\" auth method, and apply service config.\n *\n * @param {object} config\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n\n  const updatedConfig = { ...config };\n  const cancelTokensId = updatedConfig.url;\n\n  if (updatedConfig.cancel === true) {\n    if (cancelTokens[cancelTokensId]) {\n      cancelTokens[cancelTokensId].cancel('cancelled request');\n    }\n\n    cancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = cancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  return axios(serviceConfig(updatedConfig));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @returns {Promise<*>}\n */\nconst getApiVersion = () =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {Enum} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {Enum} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {Object} links\n * @apiSuccess {Object} meta\n * @apiSuccess {Enum} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {Enum} meta.product\n * - RHEL\n * @apiSuccess {Number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2019-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2019-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2019-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2019-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40\n *         },\n *         {\n *           \"date\": \"2019-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2018-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2018-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2018-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2018-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\"\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params,\n    cancel: true\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-07-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-02T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-03T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-04T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-05T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-06T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-08T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-09T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-10T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-31T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 1000\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-56043XXX0d2f\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-2e65ad8e7d3e\",\n *           \"cores\": 4,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"physical\",\n *           \"number_of_guests\": 2,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-56043FFF0d2e\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-2e25aa8e7d3e\",\n *           \"cores\": 4,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"physical\",\n *           \"number_of_guests\": 2,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 2\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${id}`,\n    params,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 2\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}) =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', id),\n    params,\n    cancel: true\n  });\n\nconst rhsmServices = { getApiVersion, getGraphCapacity, getGraphReports, getHostsInventory, getHostsInventoryGuests };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getHostsInventory,\n  getHostsInventoryGuests\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsmServices';\n\n/**\n * Get a combined RHSM response from reporting and capacity.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getGraphReportsCapacity = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n    payload: Promise.all([rhsmServices.getGraphReports(id, query), rhsmServices.getGraphCapacity(id, query)]),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n    payload: rhsmServices.getHostsInventory(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n    payload: rhsmServices.getHostsInventoryGuests(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActions = { getGraphReportsCapacity, getHostsInventory, getHostsInventoryGuests };\n\nexport { rhsmActions as default, rhsmActions, getGraphReportsCapacity, getHostsInventory, getHostsInventoryGuests };\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { getUser, getUserPermissions } from './platformServices';\nimport { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * Apply an emulated API response to the platforms getUser method.\n *\n * @returns {Promise<{data: {permissions: (void|*[]), user: void}, message: string, status: number}>}\n */\nconst authorizeUser = async () => {\n  let message = '{ auth.getUser, getUserPermissions } = insights.chrome';\n  let userData;\n  let userPermissions;\n\n  try {\n    userData = await getUser();\n    userPermissions = await getUserPermissions(helpers.UI_NAME);\n  } catch (e) {\n    message = e.message;\n  }\n\n  if (_isPlainObject(userData) && Object.keys(userData).length) {\n    return Promise.resolve({ data: { user: userData, permissions: userPermissions || [] }, message, status: 200 });\n  }\n\n  const emulatedErrorResponse = {\n    ...new Error(message),\n    message,\n    status: 418\n  };\n\n  return Promise.reject(emulatedErrorResponse);\n};\n\n/**\n * Return a platform locale value from a cookie.\n *\n * @private\n * @returns {{value: string, key: string | null}|null}\n */\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\n/**\n * Return platform locale.\n *\n * @returns {Promise<{data: void}>}\n */\nconst getLocale = () => {\n  const defaultLocale = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_numner\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = () =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_numner\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport {\n  userServices as default,\n  userServices,\n  authorizeUser,\n  getLocale,\n  logoutUser,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get an emulated API response from the platforms \"getUser\" method.\n *\n * @returns {Function}\n */\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userServices.authorizeUser()\n  });\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userServices.getLocale()\n});\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn = (query = {}) => dispatch =>\n  dispatch({\n    type: userTypes.UPDATE_USER_OPTIN,\n    payload: userServices.updateAccountOptIn(query),\n    meta: {\n      query,\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsErrorDescription'),\n          dismissable: true\n        },\n        fulfilled: {\n          variant: 'success',\n          title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsSuccessDescription'),\n          dismissable: true,\n          autoDismiss: false\n        }\n      }\n    }\n  });\n\nconst userActions = { authorizeUser, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport {\n  userActions as default,\n  userActions,\n  authorizeUser,\n  getLocale,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { getCurrentDate } from '../../common/dateHelpers';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{dataId: {string}, data: {object}}}\n */\nconst selectorCache = { dataId: null, data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsGuests?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId,\n    query: props.listQuery\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter], response => {\n  const { viewId = null, productId = null, query = {}, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n\n  const cache =\n    (viewId && productId && selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`]) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (viewId && selectorCache.dataId !== viewId) {\n    selectorCache.dataId = viewId;\n    selectorCache.data = {};\n  }\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, responseMetaQuery)) {\n    const inventory = responseData.data;\n    const listData = inventory?.[rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA] || [];\n\n    updatedResponseData.listData.length = 0;\n\n    // Populate expected API response values with undefined\n    const [hostsSchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return moment.utc(value).startOf('day').from(getCurrentDate()) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate reflected properties\n    listData.forEach(value => {\n      const generateReflectedData = ({ dataObj, keyPrefix = '', customValue = null }) => {\n        const updatedDataObj = {};\n\n        Object.keys(dataObj).forEach(dataObjKey => {\n          const casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n\n          if (typeof customValue === 'function') {\n            updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: value[dataObjKey] });\n          } else {\n            updatedDataObj[casedDataObjKey] = value[dataObjKey];\n          }\n        });\n\n        updatedResponseData.listData.push(updatedDataObj);\n      };\n\n      generateReflectedData({ dataObj: { ...hostsSchema, ...value }, customValue: customInventoryValue });\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`] = {\n      ...updatedResponseData\n    };\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst guestsListSelectors = {\n  guestsList: selector,\n  makeGuestsList: makeSelector\n};\n\nexport { guestsListSelectors as default, guestsListSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{dataId: {string}, data: {object}}}\n */\nconst selectorCache = { dataId: null, data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.graph?.reportCapacity?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId,\n    query: props.query\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter], response => {\n  const { viewId = null, productId = null, query = {}, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    graphData: {},\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n  delete responseMetaQuery[rhsmApiTypes.RHSM_API_QUERY_START_DATE];\n  delete responseMetaQuery[rhsmApiTypes.RHSM_API_QUERY_END_DATE];\n\n  const cachedGranularity =\n    (viewId && productId && selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`]) || undefined;\n\n  Object.assign(updatedResponseData, { ...cachedGranularity });\n\n  if (viewId && selectorCache.dataId !== viewId) {\n    selectorCache.dataId = viewId;\n    selectorCache.data = {};\n  }\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, responseMetaQuery)) {\n    const [report, capacity] = responseData.data;\n    const reportData = report?.[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA] || [];\n    const capacityData = capacity?.[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA] || [];\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Reporting graph entries\n    const customReportValue = (data, key, presetData) => ({\n      ...presetData,\n      hasData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_DATA]\n    });\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y,\n      hasInfinite: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE]\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment.utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE]).startOf('day').toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY = Number.parseInt(graphDataObj[graphDataObjKey], 10);\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value }, customValue: customReportValue });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`] = {\n      ...updatedResponseData\n    };\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst graphCardSelectors = {\n  graphCard: selector,\n  makeGraphCard: makeSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { getCurrentDate } from '../../common/dateHelpers';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{dataId: {string}, data: {object}}}\n */\nconst selectorCache = { dataId: null, data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId,\n    query: props.listQuery\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter], response => {\n  const { viewId = null, productId = null, query = {}, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n\n  const cache =\n    (viewId && productId && selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`]) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (viewId && selectorCache.dataId !== viewId) {\n    selectorCache.dataId = viewId;\n    selectorCache.data = {};\n  }\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, responseMetaQuery)) {\n    const inventory = responseData.data;\n    const listData = inventory?.[rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA] || [];\n\n    updatedResponseData.listData.length = 0;\n\n    // Populate expected API response values with undefined\n    const [hostsSchema = {}] = reduxHelpers.setResponseSchemas([rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES]);\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return moment.utc(value).startOf('day').from(getCurrentDate()) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate reflected properties\n    listData.forEach(value => {\n      const generateReflectedData = ({ dataObj, keyPrefix = '', customValue = null }) => {\n        const updatedDataObj = {};\n\n        Object.keys(dataObj).forEach(dataObjKey => {\n          const casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n\n          if (typeof customValue === 'function') {\n            updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: value[dataObjKey] });\n          } else {\n            updatedDataObj[casedDataObjKey] = value[dataObjKey];\n          }\n        });\n\n        updatedResponseData.listData.push(updatedDataObj);\n      };\n\n      generateReflectedData({ dataObj: { ...hostsSchema, ...value }, customValue: customInventoryValue });\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`] = {\n      ...updatedResponseData\n    };\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst inventoryListSelectors = {\n  inventoryList: selector,\n  makeInventoryList: makeSelector\n};\n\nexport { inventoryListSelectors as default, inventoryListSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport { platformApiTypes } from '../../types/platformApiTypes';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @returns {object}\n */\nconst statePropsFilter = state => ({\n  ...state.user?.session\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{session: {entitled: boolean, permissions: Array, authorized: boolean, admin: boolean, error: boolean}}}\n */\nconst selector = createSelector([statePropsFilter], response => {\n  const { error = false, fulfilled = false, data = {}, ...rest } = response || {};\n  const updatedSession = {\n    ...rest,\n    admin: false,\n    authorized: false,\n    entitled: false,\n    error,\n    permissions: []\n  };\n\n  if (!error && fulfilled) {\n    const { user = {}, permissions = [] } = data;\n\n    const admin = _get(\n      user,\n      [\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n      ],\n      false\n    );\n\n    const entitled = _get(\n      user,\n      [\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n        helpers.UI_NAME,\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED\n      ],\n      false\n    );\n\n    const subscriptionPermissions = permissions.map(value => {\n      const src = value[platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION];\n      const [app, resource, operation] = src.split(':');\n      return {\n        permission: { app, resource, operation, src },\n        definitions: value[platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]\n      };\n    });\n\n    updatedSession.admin = admin;\n    updatedSession.entitled = entitled;\n    updatedSession.permissions = subscriptionPermissions;\n\n    if (subscriptionPermissions.find(({ permission }) => permission.resource === '*' && permission.operation === '*')) {\n      updatedSession.authorized = true;\n    }\n  }\n\n  return { session: updatedSession };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{session: {entitled: boolean, permissions: Array, authorized: boolean, admin: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst userSessionSelectors = {\n  userSession: selector,\n  makeUserSession: makeSelector\n};\n\nexport { userSessionSelectors as default, userSessionSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @param {object} defaultProps\n * @returns {object}\n */\nconst statePropsFilter = (state = {}, props, defaultProps = {}) => ({\n  query: {\n    ...defaultProps.query,\n    ...state.view?.query?.[defaultProps.viewId]\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable API param/query object.\n *\n * @type {{query: object}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter], view => ({\n  query: { ...view.query }\n}));\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{query: object}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst viewSelectors = {\n  view: selector,\n  makeView: makeSelector\n};\n\nexport { viewSelectors as default, viewSelectors, selector, makeSelector };\n","import guestsListSelectors from './guestsListSelectors';\nimport graphCardSelectors from './graphCardSelectors';\nimport inventoryListSelectors from './inventoryListSelectors';\nimport userSelectors from './userSelectors';\nimport viewSelectors from './viewSelectors';\n\nconst reduxSelectors = {\n  guestsList: guestsListSelectors,\n  graphCard: graphCardSelectors,\n  inventoryList: inventoryListSelectors,\n  user: userSelectors,\n  view: viewSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\n\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connect(mapStateToProps, mapDispatchToProps)(component));\n\nexport { connect, connectRouter, reduxActions, reduxReducers, reduxSelectors, reduxTypes, store };\n","/**\n * RHSM response Error DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA = 'errors';\n\n/**\n * RHSM response Error DATA types.\n * Schema/map of expected Error data response properties.\n *\n * @type {{CODE: string, DETAIL: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_TYPES = {\n  CODE: 'code',\n  DETAIL: 'detail'\n};\n\n/**\n * RHSM response Error DATA CODE types.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response links type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS = 'links';\n\n/**\n * RHSM response LINKS type.\n * Schema/map of expected inventory LINKS response properties.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS_TYPES = {\n  FIRST: 'first',\n  LAST: 'last',\n  PREVIOUS: 'previous',\n  NEXT: 'next'\n};\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response META types.\n * Schema/map of expected META response properties.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count'\n};\n\n/**\n * RHSM response Capacity DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\n\n/**\n * RHSM response Capacity DATA types.\n * Schema/map of expected Capacity data response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string,\n *     HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response inventory DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA = 'data';\n\n/**\n * RHSM response inventory DATA types.\n * Schema/map of expected inventory DATA response properties.\n *\n * @type {{CORES: string, HARDWARE: string, SOCKETS: string, ID: string, NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA_TYPES = {\n  ID: 'insights_id',\n  NAME: 'display_name',\n  SUBSCRIPTION_ID: 'subscription_manager_id',\n  CORES: 'cores',\n  SOCKETS: 'sockets',\n  HARDWARE: 'hardware_type',\n  GUESTS: 'number_of_guests',\n  LAST_SEEN: 'last_seen'\n};\n\n/**\n * RHSM response inventory guests DATA types.\n * Schema/map of expected inventory guests DATA response properties.\n *\n * @type {{SUBSCRIPTION_ID: string, ID: string, NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES = {\n  ID: 'insights_id',\n  NAME: 'display_name',\n  SUBSCRIPTION_ID: 'subscription_manager_id',\n  LAST_SEEN: 'last_seen'\n};\n\n/**\n * RHSM response Reporting/Tally DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\n\n/**\n * RHSM response Reporting/Tally DATA types.\n * Schema/map of expected Reporting/Tally DATA response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, HAS_DATA: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM product id type values.\n *\n * @type {{RHEL_ARM: string, RHEL_WORKSTATION: string, RHEL_DESKTOP: string, RHEL: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_COMPUTE_NODE: string, RHEL_IBM_POWER: string,\n *     RHEL_X86: string, OPENSHIFT: string}}\n */\nconst RHSM_API_PATH_ID_TYPES = {\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  OPENSHIFT: 'OpenShift Container Platform'\n};\n\n/**\n * RHSM API query/search parameter GRANULARITY type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_GRANULARITY = 'granularity';\n\n/**\n * RHSM API query/search parameter of GRANULARITY type values.\n * Schema/map of expected query/search parameter granularity types.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\n\n/**\n * RHSM API query/search parameter results LIMIT type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_LIMIT = 'limit';\n\n/**\n * RHSM API query/search parameter result set OFFSET type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OFFSET = 'offset';\n\n/**\n * RHSM API query/search parameter OPT-IN TALLY SYNC type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OPTIN_TALLY_SYNC = 'enable_tally_sync';\n\n/**\n * RHSM API query/search parameter OPT-IN TALLY REPORT type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OPTIN_TALLY_REPORT = 'enable_tally_reporting';\n\n/**\n * RHSM API query/search parameter OPTIN CONDUIT SYNC type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OPTIN_CONDUIT_SYNC = 'enable_conduit_sync';\n\n/**\n * RHSM API query/search parameter SLA type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_SLA = 'sla';\n\n/**\n * RHSM API query/search parameter SLA type values.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_QUERY_SLA_TYPES = {\n  PREMIUM: 'premium',\n  STANDARD: 'standard',\n  SELF: 'self-support',\n  NONE: ''\n};\n\n/**\n * RHSM API query/search parameter START DATE type.\n * Associated with a sequential date prior/before the target date.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_START_DATE = 'beginning';\n\n/**\n * RHSM API query/search parameter END DATE type.\n * Associated with a sequential date on or after the target date. Limited by the current date.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_END_DATE = 'ending';\n\n/**\n * RHSM API query/search parameter USAGE type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_USAGE = 'usage';\n\n/**\n * RHSM API query/search parameter USAGE type values.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_QUERY_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\n/**\n * RHSM API types.\n *\n * @type {{RHSM_API_QUERY_END_DATE: string, RHSM_API_QUERY_START_DATE: string,\n *     RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES: {GENERIC: string, OPTIN: string}, RHSM_API_RESPONSE_INVENTORY_DATA: string,\n *     RHSM_API_RESPONSE_CAPACITY_DATA: string, RHSM_API_RESPONSE_ERROR_DATA_TYPES: {CODE: string, DETAIL: string},\n *     RHSM_API_QUERY_OPTIN_TALLY_REPORT: string, RHSM_API_QUERY_OPTIN_TALLY_SYNC: string,\n *     RHSM_API_RESPONSE_CAPACITY_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string},\n *     RHSM_API_QUERY_LIMIT: string, RHSM_API_RESPONSE_META_TYPES: string, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string,\n *     QUARTERLY: string, DAILY: string, MONTHLY: string}, RHSM_API_QUERY_USAGE: string, RHSM_API_RESPONSE_PRODUCTS_DATA: string,\n *     RHSM_API_RESPONSE_LINKS: string, RHSM_API_QUERY_GRANULARITY: string, RHSM_API_PATH_ID_TYPES: {RHEL_ARM: string,\n *     RHEL_WORKSTATION: string, RHEL_DESKTOP: string, RHEL: string, RHEL_SERVER: string, RHEL_IBM_Z: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_IBM_POWER: string, RHEL_X86: string, OPENSHIFT: string}, RHSM_API_QUERY_SLA: string,\n *     RHSM_API_QUERY_OPTIN_CONDUIT_SYNC: string, RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string,\n *     DEVELOPMENT: string, PRODUCTION: string}, RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string,\n *     STANDARD: string}, RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string,\n *     SOCKETS: string, HAS_DATA: string, PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, PHYSICAL_CORES: string},\n *     RHSM_API_RESPONSE_LINKS_TYPES: string, RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES: {SUBSCRIPTION_ID: string, ID: string,\n *     NAME: string, LAST_SEEN: string}, RHSM_API_RESPONSE_ERROR_DATA: string, RHSM_API_RESPONSE_META: string,\n *     RHSM_API_RESPONSE_INVENTORY_DATA_TYPES: {CORES: string, HARDWARE: string, SOCKETS: string, ID: string, NAME: string,\n *     LAST_SEEN: string}, RHSM_API_QUERY_OFFSET: string}}\n */\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_OPTIN_TALLY_SYNC,\n  RHSM_API_QUERY_OPTIN_TALLY_REPORT,\n  RHSM_API_QUERY_OPTIN_CONDUIT_SYNC,\n  RHSM_API_QUERY_SLA,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE,\n  RHSM_API_QUERY_USAGE,\n  RHSM_API_QUERY_USAGE_TYPES\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_OPTIN_TALLY_SYNC,\n  RHSM_API_QUERY_OPTIN_TALLY_REPORT,\n  RHSM_API_QUERY_OPTIN_CONDUIT_SYNC,\n  RHSM_API_QUERY_SLA,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE,\n  RHSM_API_QUERY_USAGE,\n  RHSM_API_QUERY_USAGE_TYPES\n};\n","/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\n/**\n * Platform API types.\n *\n * @type {{PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES: {USER: string},\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS: string, PLATFORM_API_RESPONSE_USER_IDENTITY: string,\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES: {ENTITLED: string},\n *     PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES: {ORG_ADMIN: string}}}\n */\nconst platformApiTypes = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES\n};\n\nexport {\n  platformApiTypes as default,\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES\n};\n","import React from 'react';\nimport path from 'path';\nimport { helpers } from '../../common/helpers';\nimport { RHSM_API_PATH_ID_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformLandingRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/');\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformModalRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = [\n  {\n    to: '/rhel-sw/all',\n    redirect: true,\n    component: React.lazy(() => import('../rhelView/rhelView')),\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'rhel-sw',\n    to: '/rhel-sw/:variant',\n    component: React.lazy(() => import('../rhelView/rhelView')),\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'openshift-sw',\n    to: '/openshift-sw',\n    component: React.lazy(() => import('../openshiftView/openshiftView')),\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'optin',\n    to: '/optin',\n    component: React.lazy(() => import('../optinView/optinView')),\n    exact: true,\n    render: true,\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED\n  }\n];\n\n/**\n * Return an array of objects that describes navigation against API product IDs.\n *\n * @returns {Array}\n */\nconst navigation = [\n  {\n    id: 'all',\n    path: '/rhel-sw/all',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL,\n    default: true\n  },\n  {\n    id: 'arm',\n    path: '/rhel-sw/arm',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_ARM\n  },\n  {\n    id: 'ibmpower',\n    path: '/rhel-sw/ibmpower',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER\n  },\n  {\n    id: 'ibmz',\n    path: '/rhel-sw/ibmz',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z\n  },\n  {\n    id: 'x86',\n    path: '/rhel-sw/x86',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_X86\n  },\n  {\n    id: 'openshift-sw',\n    path: '/openshift-sw',\n    pathId: 'openshift-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.OPENSHIFT\n  }\n];\n\nconst routerTypes = {\n  appName,\n  navigation,\n  platformLandingRedirect,\n  platformModalRedirect,\n  routes\n};\n\nexport {\n  routerTypes as default,\n  routerTypes,\n  appName,\n  navigation,\n  platformLandingRedirect,\n  platformModalRedirect,\n  routes\n};\n","import { helpers } from '../../common/helpers';\nimport { routes, navigation } from './routerTypes';\n\n/**\n * Return an assumed dynamic route baseName directory\n * based on a predictable platform directory depth of\n * /[OPTIONAL]/[environment]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.pathPrefix\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName, pathPrefix }) => {\n  const path = pathName.split('/');\n  path.shift();\n  const pathSlice = pathPrefix && new RegExp(path[0]).test(pathPrefix) ? 2 : 1;\n\n  return `/${path.slice(0, pathSlice).join('/')}`;\n};\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName =\n  (helpers.TEST_MODE && '/') ||\n  (helpers.DEV_MODE && '/') ||\n  dynamicBaseName({ pathName: window.location.pathname, pathPrefix: helpers.UI_DEPLOY_PATH_PREFIX });\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Return an object matching a specific navigation object.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathname\n * @param {boolean} params.returnDefault\n * @returns {object}\n */\nconst getNavigationDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const defaultItem = returnDefault && navigation.find(item => item.default === true);\n  let navigationItem;\n\n  if (id) {\n    navigationItem = navigation.find(item => item.id === id);\n  }\n\n  if (!navigationItem && pathname) {\n    navigationItem =\n      navigation.find(item => item.path.replace(/\\/$/, '') === pathname.replace(/\\/$/, '')) ||\n      (returnDefault && defaultItem);\n  }\n\n  if (!navigationItem && returnDefault) {\n    navigationItem = defaultItem;\n  }\n\n  if (navigationItem) {\n    const [, routeHref] = window.location.href.split(navigationItem.path);\n    navigationItem.routeHref = `${navigationItem.path}${routeHref || ''}`;\n  }\n\n  return { ...(navigationItem || {}) };\n};\n\n/**\n * Return an object matching a specific, or the first generic route.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathname\n * @returns {object}\n */\nconst getRouteDetail = ({ id = null, pathname = null }) => {\n  let routeItem;\n\n  if (id) {\n    routeItem = routes.find(value => id === value.id);\n  }\n\n  if (!routeItem && pathname) {\n    routeItem = routes.find(value => pathname === value.to);\n    routeItem = routeItem || routes.find(item => pathname.includes(item.to.split(':')[0]));\n  }\n\n  return { ...(routeItem || {}) };\n};\n\n/**\n * Return an object generated from both generic routes and specific navigation objects.\n * ID is not passed to \"getRouteDetail\" to avoid conflicts between routing and\n * navigation.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathname\n * @param {boolean} params.returnDefault\n * @returns {object}\n */\nconst getNavRouteDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const navDetail = getNavigationDetail({ id, pathname, returnDefault });\n  const routeDetail = getRouteDetail({ pathname: navDetail.path || pathname });\n\n  return { ...routeDetail, ...navDetail };\n};\n\nconst routerHelpers = {\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n","import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Route } from 'react-router-dom';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\nimport { Loader } from '../loader/loader';\n\n/**\n * A routing redirect.\n *\n * @param {object} props\n * @param {string} props.baseName\n * @param {object} props.history\n * @param {boolean} props.isRedirect\n * @param {boolean} props.isReplace\n * @param {string} props.url\n * @param {string} props.route\n * @returns {Node}\n */\nconst Redirect = ({ baseName, history, isRedirect, isReplace, url, route }) => {\n  const forceNavigation = urlRoute => {\n    if (!helpers.DEV_MODE && !helpers.TEST_MODE) {\n      if (isReplace) {\n        window.location.replace(urlRoute);\n      } else {\n        window.location.href = urlRoute;\n      }\n    }\n  };\n\n  if (isRedirect === true) {\n    if (route && history) {\n      const routeDetail = routerHelpers.getRouteDetail({ pathname: route });\n\n      return (\n        <React.Suspense fallback={<Loader variant=\"title\" />}>\n          <Route path=\"*\">{routeDetail && <routeDetail.component />}</Route>\n        </React.Suspense>\n      );\n    }\n\n    const forcePath = url || (route && path.join(baseName, route));\n    forceNavigation(forcePath);\n\n    return (\n      ((helpers.DEV_MODE || helpers.TEST_MODE) && <React.Fragment>Redirected towards {forcePath}</React.Fragment>) ||\n      null\n    );\n  }\n\n  return null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, isReplace: boolean, history: object, baseName: string, url: string}}\n */\nRedirect.propTypes = {\n  history: PropTypes.object,\n  isRedirect: PropTypes.bool.isRequired,\n  isReplace: PropTypes.bool,\n  url: PropTypes.string,\n  baseName: PropTypes.string,\n  route: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{route: null, isReplace: boolean, history: null, baseName: string, url: null}}\n */\nRedirect.defaultProps = {\n  history: null,\n  isReplace: false,\n  url: null,\n  baseName: routerHelpers.baseName,\n  route: null\n};\n\nconst RoutedRedirect = withRouter(Redirect);\n\nexport { RoutedRedirect as default, RoutedRedirect, Redirect };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport Redirect from './redirect';\nimport { routerHelpers } from './routerHelpers';\nimport { routerTypes } from './routerTypes';\nimport { Loader } from '../loader/loader';\n\n/**\n * Load routes.\n *\n * @augments React.Component\n */\nclass Router extends React.Component {\n  /**\n   * Parse settings array with route options.\n   *\n   * @returns {{redirectRoot: Node, renderRoutes: Array}}\n   */\n  renderRoutes() {\n    const { routes } = this.props;\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    let redirectRoot = null;\n\n    return {\n      renderRoutes: routes.map(item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        if (item.redirect === true) {\n          redirectRoot = <ReactRouterDomRedirect to={item.to} />;\n        }\n\n        if (item.render === true) {\n          return (\n            <Route\n              exact={item.hasParameters || item.exact}\n              key={item.to}\n              path={item.to}\n              strict={item.strict}\n              render={({ location, ...routeProps }) => {\n                const navDetail = routerHelpers.getNavigationDetail({\n                  pathname: location && location.pathname,\n                  returnDefault: false\n                });\n\n                const { URLSearchParams, decodeURIComponent } = window;\n                const parsedSearch = {};\n\n                [\n                  ...new Set(\n                    [...new URLSearchParams(decodeURIComponent(location.search))].map(\n                      ([param, value]) => `${param}~${value}`\n                    )\n                  )\n                ].forEach(v => {\n                  const [param, value] = v.split('~');\n                  parsedSearch[param] = value;\n                });\n\n                const updatedLocation = {\n                  ...location,\n                  parsedSearch\n                };\n\n                return (\n                  <item.component\n                    routeDetail={{\n                      baseName: routerHelpers.baseName,\n                      errorRoute: activateOnErrorRoute,\n                      routes,\n                      routeItem: { ...item },\n                      ...navDetail\n                    }}\n                    location={updatedLocation}\n                    {...routeProps}\n                  />\n                );\n              }}\n            />\n          );\n        }\n\n        return (\n          <Route exact={item.hasParameters || item.exact} key={item.to} path={item.to} component={item.component} />\n        );\n      }),\n      redirectRoot\n    };\n  }\n\n  /**\n   * Render router.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { renderRoutes, redirectRoot } = this.renderRoutes();\n\n    return (\n      <React.Suspense fallback={<Loader variant=\"title\" />}>\n        <Switch>\n          {renderRoutes}\n          {redirectRoot}\n        </Switch>\n      </React.Suspense>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.boolean,\n      component: PropTypes.any.isRequired,\n      disabled: PropTypes.boolean,\n      exact: PropTypes.boolean,\n      hasParameters: PropTypes.boolean,\n      redirect: PropTypes.boolean,\n      render: PropTypes.boolean,\n      strict: PropTypes.boolean,\n      to: PropTypes.string.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerTypes.routes\n};\n\nexport { Router as default, Router, Redirect, routerHelpers, routerTypes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @param {object} props\n * @param {Node|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {Node}\n */\nconst MessageView = ({ icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n      {icon && <EmptyStateIcon icon={icon} />}\n      {title && (\n        <Title headingLevel=\"h2\" size=\"lg\">\n          {title}\n        </Title>\n      )}\n      {message && <EmptyStateBody>{message}</EmptyStateBody>}\n    </EmptyState>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, message: string, title: string}}\n */\nMessageView.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, message: null, title: null}}\n */\nMessageView.defaultProps = {\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon, LockIcon } from '@patternfly/react-icons';\nimport { connectRouter, reduxActions, reduxSelectors } from '../../redux';\nimport { rhsmApiTypes } from '../../types';\nimport { helpers } from '../../common';\nimport { Redirect, routerHelpers, routerTypes } from '../router/router';\nimport MessageView from '../messageView/messageView';\nimport { translate } from '../i18n/i18n';\n\n/**\n * An authentication pass-through component.\n *\n * @augments React.Component\n */\nclass Authentication extends Component {\n  appName = routerTypes.appName;\n\n  removeListeners = helpers.noop;\n\n  async componentDidMount() {\n    const { authorizeUser, history, initializeChrome, onNavigation, setAppName, session } = this.props;\n\n    if (!session.authorized) {\n      await authorizeUser();\n    }\n\n    if (helpers.PROD_MODE || helpers.REVIEW_MODE) {\n      initializeChrome();\n      setAppName(this.appName);\n\n      const appNav = onNavigation(event => {\n        const { routeHref } = routerHelpers.getNavRouteDetail({ id: event.navId, returnDefault: true });\n        history.push(routeHref);\n      });\n\n      this.removeListeners = () => {\n        appNav();\n      };\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  /**\n   * Render authenticated children or messaging.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children, session, t } = this.props;\n\n    if (session.authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (session.errorCodes && session.errorCodes.includes(rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES.OPTIN)) ||\n      session.status === 418\n    ) {\n      if (helpers.TEST_MODE) {\n        return <React.Fragment>{session.status} redirect</React.Fragment>;\n      }\n      return <Redirect isRedirect route={routerHelpers.getErrorRoute.to} />;\n    }\n\n    return (\n      <MessageView\n        title={t('curiosity-auth.authorizedTitle', { appName: helpers.UI_DISPLAY_NAME })}\n        message={t('curiosity-auth.authorizedCopy', '...')}\n        icon={LockIcon}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, t: Function,\n *     children: Node, initializeChrome: Function, session: object, history: object}}\n */\nAuthentication.propTypes = {\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  initializeChrome: PropTypes.func,\n  onNavigation: PropTypes.func,\n  setAppName: PropTypes.func,\n  session: PropTypes.shape({\n    authorized: PropTypes.bool,\n    error: PropTypes.bool,\n    errorCodes: PropTypes.arrayOf(PropTypes.string),\n    errorMessage: PropTypes.string,\n    pending: PropTypes.bool,\n    status: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, t: translate,\n *     initializeChrome: Function, session: {authorized: boolean, errorCodes: Array, pending: boolean,\n *     errorMessage: string, error: boolean, status: null}}}\n */\nAuthentication.defaultProps = {\n  authorizeUser: helpers.noop,\n  initializeChrome: helpers.noop,\n  onNavigation: helpers.noop,\n  setAppName: helpers.noop,\n  session: {\n    authorized: false,\n    error: false,\n    errorCodes: [],\n    errorMessage: '',\n    pending: false,\n    status: null\n  },\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser()),\n  initializeChrome: () => dispatch(reduxActions.platform.initializeChrome()),\n  onNavigation: callback => dispatch(reduxActions.platform.onNavigation(callback)),\n  setAppName: name => dispatch(reduxActions.platform.setAppName(name))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.user.makeUserSession();\n\nconst ConnectedAuthentication = connectRouter(makeMapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/cjs';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router/router';\nimport Authentication from './authentication/authentication';\n\n/**\n * Application\n *\n * @augments React.Component\n */\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n    getLocale();\n  }\n\n  /**\n   * Render application.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <NotificationsPortal />\n        <Authentication>\n          <Router />\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{locale: object, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\n/**\n * Default props.\n *\n * @type {{locale: {}, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { baseName } from './components/router/routerHelpers';\nimport { store } from './redux';\nimport App from './components/app';\nimport '@redhat-cloud-services/frontend-components/index.css';\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './styles/index.scss';\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter basename={baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import { platformApiTypes } from './platformApiTypes';\nimport { rhsmApiTypes } from './rhsmApiTypes';\n\nconst apiTypes = {\n  platformApi: platformApiTypes,\n  rhsmApi: rhsmApiTypes\n};\n\nexport { apiTypes as default, apiTypes, platformApiTypes, rhsmApiTypes };\n","import { helpers } from './helpers';\nimport { dateHelpers } from './dateHelpers';\n\nexport { helpers as default, helpers, dateHelpers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PageHeader as RcsPageHeader,\n  PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components/components/cjs/PageHeader';\nimport { Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.viewId\n * @param {Function} props.t\n * @returns {Node}\n */\nconst PageHeader = ({ children, t, viewId }) => (\n  <RcsPageHeader>\n    <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n    {viewId && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: viewId }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href=\"https://access.redhat.com/documentation/en-us/subscription_central/2020-04/html/getting_started_with_subscription_watch/con-how-does-subscriptionwatch-show-data_assembly-opening-subscriptionwatch-ctxt/\"\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{viewId: string, t: Function, children: Node}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  t: translate,\n  viewId: null\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @returns {Node}\n */\nconst PageSection = ({ children, ...props }) => <Section {...props}>{children}</Section>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageSection.defaultProps = {};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @returns {Node}\n */\nconst PageToolbar = ({ children, ...props }) => <Section {...props}>{children}</Section>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageToolbar.defaultProps = {};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {Node} props.children\n * @returns {Node}\n */\nconst PageLayout = ({ children }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main className=\"curiosity\">\n      {React.Children.toArray(children).filter(child => child.type !== PageHeader && child.type !== PageToolbar)}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageLayout.defaultProps = {};\n\nexport { PageLayout as default, PageLayout, PageHeader, PageSection, PageToolbar };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf('days').toDate()\n});\n\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n"],"sourceRoot":""}
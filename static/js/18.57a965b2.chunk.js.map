{"version":3,"sources":["components/chart/chartContext.js","components/minHeight/minHeight.js","../node_modules/@patternfly/react-icons/dist/esm/icons/eye-icon.js","../node_modules/@patternfly/react-icons/dist/esm/icons/eye-slash-icon.js","../node_modules/@patternfly/react-icons/dist/esm/icons/infinity-icon.js","../node_modules/@patternfly/react-icons/dist/esm/icons/square-icon.js","components/chart/chartIcon.js","components/graphCard/graphCardHelpers.js","components/chart/chartTooltip.js","components/chart/chartElements.js","components/chart/chartLegend.js","components/chart/chartHelpers.js","components/graphCard/graphCardChartTooltip.js","components/graphCard/graphCardChartLegend.js","hooks/useWindow.js","components/chart/chart.js","components/graphCard/graphCard.js","../../../../../src/components/Card/CardHeader.tsx","../../../../../src/components/Card/CardTitle.tsx","../../../../../src/components/Card/CardActions.tsx"],"names":["DEFAULT_CONTEXT","chartContainerRef","helpers","noop","chartSettings","chartTooltipRef","dataSetsToggle","ChartContext","React","createContext","useChartContext","useContext","useToggleData","useAliasChartContext","contextDataSetsToggle","setDataSetsToggle","onHide","useCallback","id","prevState","onRevert","onToggle","updatedToggle","getIsToggled","context","MinHeight","containerRef","createRef","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","props","clientWidth","current","setMinHeight","this","window","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","children","className","ref","Component","defaultProps","EyeIcon","createIcon","name","height","width","svgPath","yOffset","xOffset","EyeSlashIcon","InfinityIcon","SquareIcon","ChartIcon","fill","symbol","size","title","svgProps","iconProps","emSvgSize","getSize","color","Number","parseFloat","viewBox","role","y","x","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","setIcon","getChartXAxisLabelIncrement","granularity","GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","getTooltipDate","date","momentDate","moment","utc","format","dateHelpers","timestampQuarterFormats","yearShort","add","timestampMonthFormats","yearLong","timestampDayFormats","short","long","xAxisTickFormat","tick","previousDate","formattedDate","isNewYear","parseInt","year","replace","yAxisTickFormatFallback","abs","Math","updatedTick","updatedAbbr","pow","yAxisTickFormat","locale","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","length","graphCardHelpers","chartTooltip","minChartWidth","getXCoordinate","tooltipWidth","padding","minWidth","getYCoordinate","tooltipHeight","tailPosition","datum","tooltipDataSetLookUp","tooltipRef","content","tooltip","containerPaddingBottom","bottom","containerBounds","querySelector","getBoundingClientRect","tooltipBounds","updatedClassName","display","xmlns","ChartElements","chartElements","stackedChartElements","chartTypeDefaults","chartDomain","chartElementsProps","chartWidth","hasData","themeColor","xAxisProps","yAxisProps","containerComponent","yAxis","VictoryVoronoiCursorContainer","createContainer","TooltipLabelComponent","cursorDimension","voronoiDimension","labels","obj","labelComponent","dx","dy","centerOffset","flyoutStyle","voronoiPadding","mouseFollowTooltips","Array","isArray","map","axisProps","animate","orientation","setChartElement","chartType","area","component","elements","stackedElements","duration","ChartArea","onLoad","interpolation","line","ChartLine","threshold","ChartThreshold","ChartLegend","chartLegend","dataSets","legendProps","_cloneDeep","chart","hide","revert","toggle","isToggled","isValidElement","cloneElement","generateMaxXY","individualDataSetsMaxY","combinedDataSetMaxX","combinedDataSetsMaxY","filter","isStacked","forEach","data","max","value","dataSetMaxY","maxX","maxY","individualMaxY","generateDomains","updatedChartDomain","generatedDomain","Object","values","floored","floor","log10","ceil","keys","domain","generateElementsProps","xValueFormat","yValueFormat","elementsById","stackedElementsById","dataSet","dataColorStroke","chartElementProps","key","themeVariant","undefined","isMultiAxis","updatedProps","push","generateTooltipData","index","itemsByKey","mockDatum","generateXAxisProps","xAxisLabelIncrement","xAxisPropDefaults","tickValues","reduce","acc","concat","tickFormat","xAxisLabel","tickIndex","indexOf","previousItem","nextItem","item","generateYAxisProps","yAxisPropDefaults","updatedAxisProps","axis","tickLabels","updatedMaxY","generateAxisProps","xAxisDataSet","xAxisFixLabelOverlap","fixLabelOverlap","dependentAxis","showGrid","yAxisDataSets","yAxisUseDataSet","xAxisUseDataSet","slice","chartHelpers","GraphCardChartTooltip","productLabel","t","header","reverse","tempDataFacet","thresholdStringValue","hasInfinite","label","dataFactsValue","product","summary","colSpan","dataFacet","translate","GraphCardChartLegend","onClick","viewId","store","dispatch","type","reduxTypes","graph","SET_GRAPH_LEGEND","legend","chartId","isDisabled","isThreshold","labelContent","tooltipContent","checkIsToggled","button","onKeyPress","tabIndex","variant","icon","visibility","position","TooltipPosition","top","enableFlip","distance","productId","Fragment","find","renderLegendItem","ConnectedGraphCardChartLegend","connect","useResizeObserver","target","useState","dimensions","setDimensions","useEffect","isElementResize","ResizeObserver","element","removeObserver","handler","innerHeight","innerWidth","observe","unobserve","Chart","setContext","useRef","toggledDataSets","isMultiYAxis","updateChartSettings","updatedSettings","Provider","left","right","GraphCard","onUpdateGraphData","getGraphReportsCapacity","query","graphGranularity","getQueryGranularity","startDate","RHSM_API_QUERY_TYPES","START_DATE","endDate","END_DATE","prevProps","_isEqual","GRANULARITY","filterGraphData","graphData","chartAreaProps","filtered","tempFiltered","test","chartColorGreenDark","assign","filteredGraphData","JSON","stringify","cardTitle","error","meta","pending","settings","actionDisplay","headingLevel","renderChart","UI_DISABLED_GRAPH","makeMapStateToProps","reduxSelectors","graphCard","makeGraphCard","ConnectedGraphCard","reduxActions","rhsm"],"mappings":"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","file":"static/js/18.57a965b2.chunk.js","sourcesContent":["import React, { useCallback, useContext } from 'react';\nimport { helpers } from '../../common';\n\n/**\n * Chart context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { chartContainerRef: helpers.noop, chartSettings: {}, chartTooltipRef: helpers.noop, dataSetsToggle: [] },\n  helpers.noop\n];\n\nconst ChartContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated chart context.\n *\n * @returns {React.Context<{}>}\n */\nconst useChartContext = () => useContext(ChartContext);\n\n/**\n * ToDo: reevaluate this alternative pattern of passing hooks as options, helps testing\n */\n/**\n * Track, show, and hide chart data layers.\n *\n * @param {object} hooks\n * @param {Function} hooks.useChartContext\n * @returns {{onRevert: Function, onToggle: Function, getIsToggled: Function, dataSetsToggle: object,\n *     onHide: Function}}\n */\nconst useToggleData = ({ useChartContext: useAliasChartContext = useChartContext } = {}) => {\n  const { dataSetsToggle: contextDataSetsToggle = [] } = useAliasChartContext();\n  const [dataSetsToggle, setDataSetsToggle] = contextDataSetsToggle;\n\n  /**\n   * Hide a graph layer.\n   *\n   * @type {(function(*): void)|*}\n   */\n  const onHide = useCallback(\n    id => {\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: true }));\n    },\n    [setDataSetsToggle]\n  );\n\n  // ToDo: re-evaluate useCallback here.\n  /**\n   * Reset graph layers.\n   *\n   * @type {(function(): void)|*}\n   */\n  const onRevert = useCallback(() => {\n    setDataSetsToggle(() => ({}));\n  }, [setDataSetsToggle]);\n\n  /**\n   * Hide/show graph layers.\n   *\n   * @type {function(*): boolean}\n   */\n  const onToggle = useCallback(\n    id => {\n      const updatedToggle = !dataSetsToggle?.[id];\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: updatedToggle }));\n      return updatedToggle;\n    },\n    [dataSetsToggle, setDataSetsToggle]\n  );\n\n  // ToDo: review return undefined if doesn't exist\n  /**\n   * Graph layer status.\n   *\n   * @type {function(*): boolean}\n   */\n  const getIsToggled = useCallback(id => dataSetsToggle?.[id] || false, [dataSetsToggle]);\n\n  return {\n    ...{ dataSetsToggle },\n    onHide,\n    onRevert,\n    onToggle,\n    getIsToggled\n  };\n};\n\nconst context = {\n  ChartContext,\n  DEFAULT_CONTEXT,\n  useChartContext,\n  useToggleData\n};\n\nexport { context as default, context, ChartContext, DEFAULT_CONTEXT, useChartContext, useToggleData };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import { createIcon } from '../createIcon';\n\nexport const EyeIconConfig = {\n  name: 'EyeIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M572.52 241.4C518.29 135.59 410.93 64 288 64S57.68 135.64 3.48 241.41a32.35 32.35 0 0 0 0 29.19C57.71 376.41 165.07 448 288 448s230.32-71.64 284.52-177.41a32.35 32.35 0 0 0 0-29.19zM288 400a144 144 0 1 1 144-144 143.93 143.93 0 0 1-144 144zm0-240a95.31 95.31 0 0 0-25.31 3.79 47.85 47.85 0 0 1-66.9 66.9A95.78 95.78 0 1 0 288 160z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const EyeIcon = createIcon(EyeIconConfig);\n\nexport default EyeIcon;","import { createIcon } from '../createIcon';\n\nexport const EyeSlashIconConfig = {\n  name: 'EyeSlashIcon',\n  height: 512,\n  width: 640,\n  svgPath: 'M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const EyeSlashIcon = createIcon(EyeSlashIconConfig);\n\nexport default EyeSlashIcon;","import { createIcon } from '../createIcon';\n\nexport const InfinityIconConfig = {\n  name: 'InfinityIcon',\n  height: 512,\n  width: 640,\n  svgPath: 'M471.1 96C405 96 353.3 137.3 320 174.6 286.7 137.3 235 96 168.9 96 75.8 96 0 167.8 0 256s75.8 160 168.9 160c66.1 0 117.8-41.3 151.1-78.6 33.3 37.3 85 78.6 151.1 78.6 93.1 0 168.9-71.8 168.9-160S564.2 96 471.1 96zM168.9 320c-40.2 0-72.9-28.7-72.9-64s32.7-64 72.9-64c38.2 0 73.4 36.1 94 64-20.4 27.6-55.9 64-94 64zm302.2 0c-38.2 0-73.4-36.1-94-64 20.4-27.6 55.9-64 94-64 40.2 0 72.9 28.7 72.9 64s-32.7 64-72.9 64z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const InfinityIcon = createIcon(InfinityIconConfig);\n\nexport default InfinityIcon;","import { createIcon } from '../createIcon';\n\nexport const SquareIconConfig = {\n  name: 'SquareIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M400 32H48C21.5 32 0 53.5 0 80v352c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V80c0-26.5-21.5-48-48-48z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const SquareIcon = createIcon(SquareIconConfig);\n\nexport default SquareIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EyeIcon, EyeSlashIcon, InfinityIcon, SquareIcon, IconSize } from '@patternfly/react-icons';\n\n/**\n * Emulate pf icon sizing for custom SVGs\n *\n * @param {string} size\n * @returns {string} em measurement\n */\nconst getSize = size => {\n  switch (size) {\n    case 'md':\n      return '1.5em';\n    case 'lg':\n      return '2em';\n    case 'xl':\n      return '3em';\n    case 'sm':\n    default:\n      return '1em';\n  }\n};\n\n/**\n * Render an icon for use outside of Victory charts.\n *\n * @param {object} props\n * @param {string} props.fill\n * @param {string} props.symbol\n * @param {string} props.size\n * @param {string} props.title\n * @returns {Node}\n */\nconst ChartIcon = ({ fill, symbol, size, title }) => {\n  const svgProps = {};\n  const iconProps = { size, title };\n  const emSvgSize = getSize(size);\n\n  if (title) {\n    svgProps['aria-labelledby'] = title;\n  } else {\n    svgProps['aria-hidden'] = true;\n  }\n\n  if (fill) {\n    iconProps.color = fill;\n  }\n\n  const setIcon = () => {\n    switch (symbol) {\n      case 'dash':\n        return (\n          <span\n            style={{\n              width: emSvgSize,\n              height: `${Number.parseFloat(emSvgSize) / 2}em`\n            }}\n          >\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 38 10\" role=\"img\" {...svgProps}>\n              <rect y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"14\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"28\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n            </svg>\n          </span>\n        );\n      case 'threshold':\n        return (\n          <span style={{ width: `${Number.parseFloat(emSvgSize) * 2}em`, height: emSvgSize }}>\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 18 10\" role=\"img\" {...svgProps}>\n              <line\n                x1={0}\n                y1={(Number.parseFloat(emSvgSize) * 16) / 2}\n                x2={Number.parseFloat(emSvgSize) * 16 * 3}\n                y2={(Number.parseFloat(emSvgSize) * 16) / 2}\n                stroke={fill}\n                strokeWidth={3}\n                strokeDasharray=\"4,3\"\n              />\n            </svg>\n          </span>\n        );\n      case 'eye':\n        return <EyeIcon {...iconProps} />;\n      case 'eyeSlash':\n        return <EyeSlashIcon {...iconProps} />;\n      case 'infinity':\n        return <InfinityIcon {...iconProps} />;\n      case 'square':\n      default:\n        return <SquareIcon {...iconProps} />;\n    }\n  };\n\n  return <span className={`curiosity-chartarea__icon curiosity-chartarea__icon-${symbol}`}>{setIcon()}</span>;\n};\n\nChartIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOf([...Object.keys(IconSize)]),\n  symbol: PropTypes.oneOf(['dash', 'eye', 'eyeSlash', 'infinity', 'square', 'threshold']),\n  title: PropTypes.string\n};\n\nChartIcon.defaultProps = {\n  fill: null,\n  size: 'sm',\n  symbol: 'square',\n  title: null\n};\n\nexport { ChartIcon as default, ChartIcon };\n","import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n","import React from 'react';\nimport { helpers } from '../../common';\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * Return a compatible Victory tooltip component.\n *\n * @param {object} params\n * @param {object} params.chartSettings\n * @param {Function} params.chartContainerRef\n * @param {Function} params.chartTooltipRef\n * @param {number} params.minChartWidth\n * @returns {Function}\n */\nconst chartTooltip = ({\n  chartSettings = {},\n  chartContainerRef = helpers.noop,\n  chartTooltipRef = helpers.noop,\n  minChartWidth = 500\n} = {}) => {\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip x coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getXCoordinate = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return x + padding - tooltipWidth / 2;\n    }\n\n    return x > width / 2 ? x - tooltipWidth + padding : x + padding;\n  };\n\n  /**\n   * Return a tooltip y coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.y\n   * @param {number} params.height\n   * @param {number} params.tooltipHeight\n   * @param {number} params.width\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getYCoordinate = ({ y, height, tooltipHeight, width, padding = 15, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth) {\n      return y > height / 2 ? y - tooltipHeight - padding : y + padding;\n    }\n\n    return height * 0.25;\n  };\n\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip tail position CSS class.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const tailPosition = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return 'middle';\n    }\n\n    return x > width / 2 ? 'right' : 'left';\n  };\n\n  return ({ x, y, datum = {} }) => { // eslint-disable-line\n    const { padding = {}, tooltipDataSetLookUp = {} } = chartSettings;\n\n    const containerRef = chartContainerRef();\n    const tooltipRef = chartTooltipRef();\n    const content = tooltipDataSetLookUp?.[datum.x]?.tooltip || '';\n    const containerPaddingBottom = padding.bottom ?? 0;\n    const containerBounds = containerRef?.current?.querySelector('svg')?.getBoundingClientRect() || {\n      width: 0,\n      height: 0\n    };\n    const tooltipBounds = tooltipRef?.current?.getBoundingClientRect() || { width: 0, height: 0 };\n\n    if (content) {\n      const updatedClassName = `${(tooltipBounds.height <= 0 && 'fadein') || ''}`;\n\n      return (\n        <g>\n          <foreignObject\n            x={getXCoordinate({ x, width: containerBounds.width, tooltipWidth: tooltipBounds.width })}\n            y={getYCoordinate({\n              y,\n              height: containerBounds.height,\n              tooltipHeight: tooltipBounds.height,\n              width: containerBounds.width\n            })}\n            width=\"100%\"\n            height=\"100%\"\n          >\n            <div\n              className={`curiosity-chartarea__tooltip-container ${updatedClassName}`}\n              ref={tooltipRef}\n              style={{ display: (y > containerBounds.height - containerPaddingBottom && 'none') || 'inline-block' }}\n              xmlns=\"http://www.w3.org/1999/xhtml\"\n            >\n              <div\n                className={`curiosity-chartarea__tooltip curiosity-chartarea__tooltip-${tailPosition({\n                  x,\n                  y,\n                  width: containerBounds.width,\n                  tooltipWidth: tooltipBounds.width\n                })}`}\n              >\n                {content}\n              </div>\n            </div>\n          </foreignObject>\n        </g>\n      );\n    }\n\n    return <g />;\n  };\n};\n\nexport { chartTooltip as default, chartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VictoryStack as ChartStack, VictoryTooltip as ChartCursorTooltip } from 'victory';\nimport { createContainer } from 'victory-create-container';\nimport { Chart, ChartArea, ChartAxis, ChartContainer, ChartLine, ChartThreshold } from '@patternfly/react-charts';\nimport { useChartContext } from './chartContext';\nimport { chartTooltip } from './chartTooltip';\n\n/**\n * Generate a compatible Victory chart element/facet component.\n *\n * @param {object} props\n * @param {object} props.chartTypeDefaults\n * @returns {Node}\n */\nconst ChartElements = ({ chartTypeDefaults }) => {\n  const { chartSettings = {}, chartContainerRef, chartTooltipRef } = useChartContext();\n  const {\n    chartDomain,\n    chartElementsProps,\n    chartWidth,\n    hasData,\n    padding,\n    themeColor,\n    xAxisProps,\n    yAxisProps\n  } = chartSettings;\n\n  let containerComponent = <ChartContainer />;\n  let yAxis = null;\n  let chartElements = [];\n  let stackedChartElements = [];\n\n  if (hasData) {\n    /**\n     * Note: both cursor and voronoiDimension attrs required if the need is to have...\n     * the tooltip populate consistently without being \"near\" a chart element y axis point\n     */\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const TooltipLabelComponent = chartTooltip({ chartSettings, chartContainerRef, chartTooltipRef });\n\n    containerComponent = (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        voronoiDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={\n          <ChartCursorTooltip\n            dx={0}\n            dy={0}\n            centerOffset={{ x: 0, y: 0 }}\n            flyoutStyle={{ fill: 'transparent', stroke: 'transparent' }}\n            labelComponent={<TooltipLabelComponent />}\n          />\n        }\n        voronoiPadding={50}\n        mouseFollowTooltips\n      />\n    );\n  }\n\n  if (Array.isArray(yAxisProps)) {\n    yAxis = yAxisProps.map(axisProps => (\n      <ChartAxis key={`yaxis-${axisProps.orientation}`} {...axisProps} animate={false} />\n    ));\n  }\n\n  const setChartElement = ({ chartType, props }) => {\n    const { component: Component, ...defaultProps } = chartTypeDefaults[chartType] || chartTypeDefaults.area;\n    return <Component {...{ ...defaultProps, ...props }} />;\n  };\n\n  chartElements = chartElementsProps?.elements.map(setChartElement);\n  stackedChartElements = chartElementsProps?.stackedElements.map(setChartElement);\n\n  return (\n    <Chart\n      animate={{ duration: 0 }}\n      width={chartWidth}\n      themeColor={themeColor}\n      {...{ padding, containerComponent, ...chartDomain }}\n    >\n      <ChartAxis {...xAxisProps} animate={false} />\n      {yAxis}\n      {chartElements}\n      <ChartStack>{stackedChartElements}</ChartStack>\n    </Chart>\n  );\n};\n\nChartElements.propTypes = {\n  chartTypeDefaults: PropTypes.objectOf(\n    PropTypes.shape({\n      component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      interpolation: PropTypes.oneOf(['monotoneX', 'step'])\n    })\n  )\n};\n\nChartElements.defaultProps = {\n  chartTypeDefaults: {\n    area: {\n      component: ChartArea,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    line: {\n      component: ChartLine,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    threshold: {\n      component: ChartThreshold,\n      animate: {\n        duration: 100,\n        onLoad: { duration: 100 }\n      },\n      interpolation: 'step'\n    }\n  }\n};\n\nexport { ChartElements as default, ChartElements };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { useChartContext, useToggleData } from './chartContext';\n\n/**\n * Wrapper for rendering an HTML based legend.\n *\n * @returns {Node}\n */\nconst ChartLegend = () => {\n  const { getIsToggled, onHide, onRevert, onToggle } = useToggleData();\n  const { chartSettings = {} } = useChartContext();\n  const { chartLegend, dataSets } = chartSettings;\n\n  if (!chartLegend) {\n    return null;\n  }\n\n  const legendProps = {\n    datum: { dataSets: _cloneDeep(dataSets) },\n    chart: {\n      hide: onHide,\n      revert: onRevert,\n      toggle: onToggle,\n      isToggled: getIsToggled\n    }\n  };\n\n  return (\n    <div className=\"curiosity-chartarea__legend\">\n      {(React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n        chartLegend({ ...legendProps })}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n */\nChartLegend.propTypes = {};\n\n/**\n * Default props.\n */\nChartLegend.defaultProps = {};\n\nexport { ChartLegend as default, ChartLegend };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * Generate max X and Y values from datasets.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @returns {{individualMaxY: object, maxY: number, maxX: number}}\n */\nconst generateMaxXY = ({ dataSets = [] } = {}) => {\n  const individualDataSetsMaxY = {};\n  let combinedDataSetMaxX = 0;\n  let combinedDataSetsMaxY = 0;\n\n  dataSets\n    .filter(({ isStacked }) => isStacked === true)\n    .forEach(({ data }) => {\n      if (Array.isArray(data)) {\n        combinedDataSetsMaxY += Math.max(...data.map(value => value?.y ?? 0));\n      }\n    });\n\n  dataSets.forEach(({ id, data }) => {\n    let dataSetMaxY = 0;\n\n    if (Array.isArray(data)) {\n      combinedDataSetMaxX = data.length > combinedDataSetMaxX ? data.length : combinedDataSetMaxX;\n\n      dataSetMaxY = Math.max(...data.map(value => value?.y ?? 0));\n      combinedDataSetsMaxY = dataSetMaxY > combinedDataSetsMaxY ? dataSetMaxY : combinedDataSetsMaxY;\n    }\n\n    if (id) {\n      individualDataSetsMaxY[id] = dataSetMaxY;\n    }\n  });\n\n  return {\n    maxX: combinedDataSetMaxX,\n    maxY: combinedDataSetsMaxY,\n    individualMaxY: individualDataSetsMaxY\n  };\n};\n\n/**\n * Generate Y axis domain ranges from dataSets, ignore X axis.\n *\n * @param {object} params\n * @param {number|object} params.maxY\n * @returns {{ domain: { y: Array } }}\n */\nconst generateDomains = ({ maxY } = {}) => {\n  const updatedChartDomain = {};\n  const generatedDomain = {};\n\n  if (Object.values(maxY).length) {\n    generatedDomain.y = [0, 1.25];\n  } else {\n    const floored = Math.pow(10, Math.floor(Math.log10(maxY || 10)));\n    generatedDomain.y = [0, Math.ceil((maxY + 1) / floored) * floored];\n  }\n\n  if (Object.keys(generatedDomain).length) {\n    updatedChartDomain.domain = generatedDomain;\n  }\n\n  return {\n    ...updatedChartDomain\n  };\n};\n\n/**\n * Generate chart element props.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {number} params.maxX\n * @param {number} params.maxY\n * @param {Function} params.xValueFormat\n * @param {Function} params.yValueFormat\n * @returns {{elementsById: object, stackedElements: Array, stackedElementsById: object, elements: Array}}\n */\nconst generateElementsProps = ({ dataSets = [], maxX, maxY, xValueFormat, yValueFormat }) => {\n  const elements = [];\n  const stackedElements = [];\n  const elementsById = {};\n  const stackedElementsById = {};\n\n  dataSets.forEach(dataSet => {\n    const {\n      animate,\n      chartType,\n      data,\n      fill,\n      id,\n      isStacked,\n      interpolation,\n      stroke,\n      strokeDasharray,\n      strokeWidth\n    } = dataSet;\n\n    if (data?.length) {\n      const dataColorStroke = {\n        data: {}\n      };\n\n      if (fill && chartType !== 'line' && chartType !== 'threshold') {\n        dataColorStroke.data.fill = fill;\n      }\n\n      if (stroke) {\n        dataColorStroke.data.stroke = stroke;\n      }\n\n      if (strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = strokeDasharray;\n      }\n\n      if (strokeWidth) {\n        dataColorStroke.data.strokeWidth = strokeWidth;\n      }\n\n      const defaultProps = {};\n\n      if (animate) {\n        defaultProps.animate = animate;\n      }\n\n      if (interpolation) {\n        defaultProps.interpolation = interpolation;\n      }\n\n      const chartElementProps = {\n        ...defaultProps,\n        key: `chart-${dataSet.id}-${chartType || ''}`,\n        name: `chart-${dataSet.id}-${chartType || ''}`,\n        data: dataSet.data,\n        style: { ...(dataSet.style || {}), ...dataColorStroke },\n        themeColor: dataSet.themeColor,\n        themeVariant: dataSet.themeVariant,\n        x: (xValueFormat && (datum => xValueFormat({ datum, maxX }))) || undefined,\n        y:\n          (yValueFormat &&\n            (datum =>\n              yValueFormat({\n                datum,\n                isMultiAxis: typeof maxY !== 'number',\n                maxY: typeof maxY === 'number' ? maxY : maxY?.[dataSet.id]\n              }))) ||\n          (datum => (typeof maxY === 'number' ? datum.y : datum.y / maxY?.[dataSet.id]))\n      };\n\n      const props = { ...chartElementProps };\n      const updatedProps = { chartType, props };\n\n      if (isStacked) {\n        stackedElementsById[id] = updatedProps;\n        stackedElements.push(updatedProps);\n      } else {\n        elementsById[id] = updatedProps;\n        elements.push(updatedProps);\n      }\n    }\n  });\n\n  return {\n    elements,\n    elementsById,\n    stackedElements,\n    stackedElementsById\n  };\n};\n\n/**\n * Preprocess datasets for tooltips.\n *\n * @param {object} params\n * @param {Node|Function} params.content\n * @param {Array} params.dataSets\n * @returns {{}}\n */\nconst generateTooltipData = ({ content = helpers.noop, dataSets = [] } = {}) => {\n  const tooltipDataSetLookUp = {};\n\n  if (content && dataSets?.[0]?.data) {\n    dataSets[0].data.forEach((dataSet, index) => {\n      const itemsByKey = {};\n\n      dataSets.forEach(data => {\n        if (data?.data[index]) {\n          itemsByKey[data.id] = {\n            color: data.stroke || data.fill || data.color || '',\n            chartType: data.chartType,\n            data: _cloneDeep(data.data[index])\n          };\n        }\n      });\n\n      const mockDatum = {\n        datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey }\n      };\n\n      tooltipDataSetLookUp[dataSet.x] = {\n        x: dataSet.x,\n        y: null,\n        itemsByKey,\n        tooltip:\n          (React.isValidElement(content) && React.cloneElement(content, { ...mockDatum })) || content({ ...mockDatum })\n      };\n    });\n  }\n\n  return tooltipDataSetLookUp;\n};\n\n/**\n * Generate X axis props, ticks, tick formatting.\n *\n * @param {object} params\n * @param {object} params.dataSet\n * @param {number} params.maxX\n * @param {number} params.xAxisLabelIncrement\n * @param {object} params.xAxisPropDefaults\n * @param {Function} params.xAxisTickFormat\n * @returns {{tickFormat: (function(*)), tickValues: *}}\n */\nconst generateXAxisProps = ({\n  dataSet = {},\n  maxX,\n  xAxisLabelIncrement,\n  xAxisPropDefaults = {},\n  xAxisTickFormat\n} = {}) => {\n  const { data = [] } = dataSet;\n  const axisProps = {\n    ...xAxisPropDefaults,\n    tickValues: data.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    ),\n    tickFormat: tick => data[tick]?.xAxisLabel || tick\n  };\n\n  if (typeof xAxisTickFormat === 'function') {\n    axisProps.tickFormat = tick => {\n      const tickIndex = axisProps.tickValues.indexOf(tick);\n      const previousItem = { ...data[axisProps.tickValues[tickIndex - 1]] };\n      const nextItem = { ...data[axisProps.tickValues[tickIndex + 1]] };\n      const item = { ...data[tick] };\n\n      return xAxisTickFormat({ tick, previousItem, item, nextItem, maxX });\n    };\n  }\n\n  return axisProps;\n};\n\n/**\n * Generate Y axis props, ticks, tick formatting.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {number|object} params.maxY\n * @param {object} params.yAxisPropDefaults\n * @param {Function} params.yAxisTickFormat\n * @returns {Array}\n */\nconst generateYAxisProps = ({ dataSets = [], maxY, yAxisPropDefaults = {}, yAxisTickFormat } = {}) => {\n  const axisProps = [];\n  const isMultiAxis = dataSets.length > 1;\n\n  dataSets.forEach(({ id, stroke, strokeWidth } = {}, index) => {\n    const updatedAxisProps = {\n      style: { axis: {}, tickLabels: {} },\n      tickFormat: tick => tick\n    };\n\n    if (isMultiAxis && stroke) {\n      updatedAxisProps.style.axis.stroke = stroke;\n    }\n\n    if (isMultiAxis && strokeWidth) {\n      updatedAxisProps.style.axis.strokeWidth = strokeWidth;\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      const updatedMaxY = (typeof maxY === 'number' && maxY) || maxY?.[id];\n\n      updatedAxisProps.tickFormat = tick => {\n        const normalizedTick = (isMultiAxis && tick * updatedMaxY) || tick;\n\n        return yAxisTickFormat({\n          tick: normalizedTick,\n          isMultiAxis,\n          maxY: updatedMaxY\n        });\n      };\n    }\n\n    axisProps.push({\n      ...yAxisPropDefaults,\n      ...updatedAxisProps,\n      orientation: (index === 0 && 'left') || 'right'\n    });\n  });\n\n  return axisProps;\n};\n\n/**\n * Generate x,y props.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {object} params.individualMaxY\n * @param {number} params.maxX\n * @param {number} params.maxY\n * @param {boolean} params.xAxisFixLabelOverlap\n * @param {number} params.xAxisLabelIncrement\n * @param {Function} params.xAxisTickFormat\n * @param {Function} params.yAxisTickFormat\n * @returns {{xAxisProps: object, yAxisProps: Array}}\n */\nconst generateAxisProps = ({\n  dataSets = [],\n  individualMaxY = {},\n  maxX,\n  maxY,\n  xAxisFixLabelOverlap = true,\n  xAxisLabelIncrement = 1,\n  xAxisTickFormat,\n  yAxisTickFormat\n} = {}) => {\n  const xAxisPropDefaults = {\n    fixLabelOverlap: xAxisFixLabelOverlap\n  };\n\n  const yAxisPropDefaults = {\n    dependentAxis: true,\n    showGrid: true\n  };\n\n  let yAxisDataSets = [];\n  let xAxisDataSet;\n\n  dataSets.forEach(dataSet => {\n    if (dataSet.yAxisUseDataSet) {\n      yAxisDataSets.push(dataSet);\n    }\n    if (dataSet.xAxisUseDataSet) {\n      xAxisDataSet = dataSet;\n    }\n  });\n\n  if (!yAxisDataSets.length) {\n    yAxisDataSets.push(dataSets?.[0]);\n  } else {\n    yAxisDataSets = yAxisDataSets.slice(0, 2);\n  }\n\n  if (!xAxisDataSet) {\n    xAxisDataSet = dataSets?.[0] || [];\n  }\n\n  const updatedMaxY = (yAxisDataSets.length > 1 && individualMaxY) || maxY;\n\n  return {\n    xAxisProps: generateXAxisProps({\n      dataSet: xAxisDataSet,\n      maxX,\n      xAxisLabelIncrement,\n      xAxisPropDefaults,\n      xAxisTickFormat\n    }),\n    yAxisProps: generateYAxisProps({ dataSets: yAxisDataSets, maxY: updatedMaxY, yAxisPropDefaults, yAxisTickFormat })\n  };\n};\n\nconst chartHelpers = {\n  generateAxisProps,\n  generateDomains,\n  generateElementsProps,\n  generateMaxXY,\n  generateTooltipData,\n  generateXAxisProps,\n  generateYAxisProps\n};\n\nexport {\n  chartHelpers as default,\n  chartHelpers,\n  generateAxisProps,\n  generateDomains,\n  generateElementsProps,\n  generateMaxXY,\n  generateTooltipData,\n  generateXAxisProps,\n  generateYAxisProps\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\nimport { ChartIcon } from '../chart/chartIcon';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, productLabel, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey)\n    .reverse()\n    .forEach((key, index) => {\n      if (index === 0) {\n        header = getTooltipDate({\n          date: itemsByKey[key]?.data.date,\n          granularity\n        });\n      }\n\n      const tempDataFacet = {\n        color: itemsByKey[key]?.color\n      };\n\n      if (itemsByKey[key]?.chartType === 'threshold') {\n        let thresholdStringValue = itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel');\n\n        if (itemsByKey[key]?.data.hasInfinite) {\n          if (tempDataFacet.color) {\n            thresholdStringValue = (\n              <ChartIcon symbol=\"infinity\" fill=\"#ffffff\" title={t('curiosity-graph.infiniteThresholdLabel')} />\n            );\n          } else {\n            thresholdStringValue = t('curiosity-graph.infiniteThresholdLabel');\n          }\n        }\n\n        tempDataFacet.label = t('curiosity-graph.label', { context: 'threshold' });\n        tempDataFacet.value = thresholdStringValue;\n      } else {\n        const dataFactsValue =\n          (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n        tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product: productLabel });\n        tempDataFacet.value = dataFactsValue;\n      }\n\n      tempDataFacet.chartType = itemsByKey[key]?.chartType;\n      data.push(tempDataFacet);\n    });\n\n  return (\n    <div className=\"curiosity-usage-graph__tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  {dataFacet.chartType === 'threshold' && (\n                    <ChartIcon size=\"sm\" symbol=\"dash\" fill={dataFacet.color || 'transparent'} />\n                  )}\n                  {dataFacet.chartType !== 'threshold' && (\n                    <ChartIcon size=\"sm\" fill={dataFacet.color || 'transparent'} />\n                  )}{' '}\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        chartType: PropTypes.string,\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, productLabel: string, t: translate}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  productLabel: '',\n  t: translate\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { connect, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { ChartIcon } from '../chart/chartIcon';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @param {string} options.chartId\n   * @param {string} options.color\n   * @param {boolean} options.isDisabled\n   * @param {boolean} options.isThreshold\n   * @param {string} options.labelContent\n   * @param {string} options.tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"curiosity-usage-graph__legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <ChartIcon symbol=\"eyeSlash\" />) || (\n            <ChartIcon\n              symbol={(isThreshold && 'dash') || 'square'}\n              style={{ visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible' }}\n              fill={color}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, productId, productLabel, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold &&\n              t('curiosity-graph.label_threshold', {\n                product: productLabel,\n                context: [id, productId]\n              })) ||\n            t([`curiosity-graph.${id}Label`, `curiosity-graph.noLabel`], {\n              product: productLabel,\n              context: productLabel\n            });\n\n          const tooltipContent =\n            (isThreshold &&\n              t('curiosity-graph.legendTooltip_threshold', {\n                product: productLabel,\n                context: [id, productId]\n              })) ||\n            t(`curiosity-graph.${id}LegendTooltip`, { product: productLabel, context: productLabel });\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold,\n            tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum: object, productLabel: string, viewId: string, productId: string, t: Function, legend: object,\n *     chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  productId: PropTypes.string,\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, productLabel: string, viewId: string, productId: string, t: translate, legend: object,\n *     chart: object}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  productId: '',\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connect(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import { useEffect, useState } from 'react';\nimport { helpers } from '../common';\n\n/**\n * Apply a resize observer to an element.\n *\n * @param {*} target\n * @returns {{width: number, height: number}}\n */\nconst useResizeObserver = target => {\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    const isElementResize = target && window.ResizeObserver && true;\n    const element = target?.current;\n    let removeObserver = helpers.noop;\n\n    if (element) {\n      const handler = () => {\n        const { clientHeight = 0, clientWidth = 0, innerHeight = 0, innerWidth = 0 } = element || {};\n\n        setDimensions({\n          width: isElementResize ? clientWidth : innerWidth,\n          height: isElementResize ? clientHeight : innerHeight\n        });\n      };\n\n      if (isElementResize) {\n        const resizeObserver = new window.ResizeObserver(handler);\n        resizeObserver.observe(element);\n        removeObserver = () => resizeObserver.unobserve(element);\n      } else {\n        handler();\n        window.addEventListener('resize', handler);\n        removeObserver = () => window.removeEventListener('resize', handler);\n      }\n    }\n\n    return () => {\n      removeObserver();\n    };\n  }, [target]);\n\n  return dimensions;\n};\n\nconst windowHooks = {\n  useResizeObserver\n};\n\nexport { windowHooks as default, windowHooks, useResizeObserver };\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ChartThemeColor } from '@patternfly/react-charts';\nimport { ChartContext } from './chartContext';\nimport { ChartElements } from './chartElements';\nimport { ChartLegend } from './chartLegend';\nimport { chartHelpers } from './chartHelpers';\nimport { useResizeObserver } from '../../hooks/useWindow';\n\n/**\n * Return a chart and elements with a context provider.\n *\n * @param {object} props\n * @param {Node|Function} props.chartLegend\n * @param {Node|Function} props.chartTooltip\n * @param {Array} props.dataSets\n * @param {object} props.padding\n * @param {string} props.themeColor\n * @param {boolean} props.xAxisFixLabelOverlap\n * @param {number} props.xAxisLabelIncrement\n * @param {Function} props.xAxisTickFormat\n * @param {Function} props.yAxisTickFormat\n * @param {Function} props.xValueFormat\n * @param {Function} props.yValueFormat\n * @returns {Node}\n */\nconst Chart = ({\n  chartLegend,\n  chartTooltip,\n  dataSets,\n  padding,\n  themeColor,\n  xAxisFixLabelOverlap,\n  xAxisLabelIncrement,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  xValueFormat,\n  yValueFormat\n}) => {\n  const [context, setContext] = useState();\n  const [dataSetsToggle, setDataSetsToggle] = useState({});\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const { width: chartWidth } = useResizeObserver(containerRef);\n\n  useEffect(() => {\n    /**\n     * Aggregate chart related settings.\n     *\n     * @returns {{isMultiYAxis: boolean, padding: object, chartDomain: {domain: {y: Array}}, tooltipDataSetLookUp: {},\n     *     xAxisProps: object, themeColor: string, maxY: (object|number), hasData: boolean, maxX: number,\n     *     yAxisProps: Array, chartElementsProps: {elementsById: object, stackedElements: Array,\n     *     stackedElementsById: object, elements: Array}}}\n     */\n    const updateChartSettings = () => {\n      const toggledDataSets = dataSets.filter(({ id }) => !dataSetsToggle[id]);\n\n      const tooltipDataSetLookUp = chartHelpers.generateTooltipData({\n        content: chartTooltip,\n        dataSets: toggledDataSets\n      });\n\n      const { maxX, maxY } = chartHelpers.generateMaxXY({ dataSets: toggledDataSets });\n      const { individualMaxY } = chartHelpers.generateMaxXY({ dataSets });\n      const { xAxisProps, yAxisProps } = chartHelpers.generateAxisProps({\n        dataSets,\n        individualMaxY,\n        maxX,\n        maxY,\n        xAxisFixLabelOverlap,\n        xAxisLabelIncrement,\n        xAxisTickFormat,\n        yAxisTickFormat\n      });\n\n      const isMultiYAxis = yAxisProps.length > 1;\n      const chartElementsProps = chartHelpers.generateElementsProps({\n        dataSets: toggledDataSets,\n        maxX,\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        xValueFormat,\n        yValueFormat\n      });\n      const chartDomain = chartHelpers.generateDomains({ maxY: (isMultiYAxis && individualMaxY) || maxY });\n      const hasData = !!xAxisProps.tickValues;\n\n      return {\n        xAxisProps,\n        yAxisProps,\n        chartDomain,\n        chartElementsProps,\n        hasData,\n        isMultiYAxis,\n        maxX,\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        padding,\n        themeColor,\n        tooltipDataSetLookUp\n      };\n    };\n\n    const chartSettings = updateChartSettings();\n    const updatedSettings = {\n      chartContainerRef: () => containerRef,\n      chartSettings: { ...chartSettings, chartLegend, chartWidth, dataSets },\n      chartTooltipRef: () => tooltipRef,\n      dataSetsToggle: [dataSetsToggle, setDataSetsToggle]\n    };\n\n    setContext(updatedSettings);\n  }, [\n    chartLegend,\n    chartTooltip,\n    chartWidth,\n    dataSets,\n    dataSetsToggle,\n    padding,\n    setContext,\n    themeColor,\n    yAxisTickFormat,\n    xAxisTickFormat,\n    xAxisLabelIncrement,\n    xAxisFixLabelOverlap,\n    xValueFormat,\n    yValueFormat\n  ]);\n\n  return (\n    <ChartContext.Provider value={context}>\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"curiosity-chartarea uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={containerRef}\n      >\n        {chartWidth > 0 && (\n          <React.Fragment>\n            <ChartElements />\n            <ChartLegend />\n          </React.Fragment>\n        )}\n      </div>\n    </ChartContext.Provider>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{chartTooltip: Node|Function, xValueFormat: Function, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: Function, themeColor: string, chartLegend: Node|Function,\n *     yAxisTickFormat: Function, dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number,\n *     yValueFormat: Function}}\n */\nChart.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      chartType: PropTypes.oneOf(['area', 'line', 'threshold']),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      xAxisUseDataSet: PropTypes.bool,\n      yAxisUseDataSet: PropTypes.bool\n    })\n  ),\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func,\n  xValueFormat: PropTypes.func,\n  yValueFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartTooltip: Node|Function, xValueFormat: Function, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: Function, themeColor: string, chartLegend: Node|Function,\n *     yAxisTickFormat: Function, dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number,\n *     yValueFormat: Function}}\n */\nChart.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  dataSets: [],\n  padding: {\n    bottom: 75,\n    left: 55,\n    right: 55,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: true,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null,\n  xValueFormat: null,\n  yValueFormat: null\n};\n\nexport { Chart as default, Chart };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport _isEqual from 'lodash/isEqual';\nimport { connect, reduxActions, reduxSelectors } from '../../redux';\nimport { helpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { Chart } from '../chart/chart';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n    const { [RHSM_API_QUERY_TYPES.START_DATE]: startDate, [RHSM_API_QUERY_TYPES.END_DATE]: endDate } = query;\n\n    if (!isDisabled && graphGranularity && startDate && endDate && productId) {\n      getGraphReportsCapacity(productId, query);\n    }\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, productId, productLabel, query, viewId } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    const chartAreaProps = {\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(graphGranularity),\n      xAxisTickFormat: ({ item, previousItem, tick }) =>\n        graphCardHelpers.xAxisTickFormat({\n          tick,\n          date: item.date,\n          previousDate: previousItem.date,\n          granularity: graphGranularity\n        }),\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          strokeWidth: 2,\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 3;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <Chart\n        key={`chart_${JSON.stringify(query)}`}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend\n            chart={chart}\n            datum={datum}\n            productId={productId}\n            productLabel={productLabel}\n            viewId={viewId}\n          />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={graphGranularity} productLabel={productLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * ToDo: Evaluate applying a minHeight attr to the MinHeight component graphCard setup\n   * Appears there may be a minor page shift when compared to the prior hard-set min-height\n   * of 410px\n   */\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, graphData, meta, isDisabled, pending, settings } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    let actionDisplay = null;\n\n    // Apply actionDisplay callback, return node\n    if (typeof settings?.actionDisplay === 'function') {\n      actionDisplay = settings.actionDisplay({ data: { ...graphData }, meta: { ...meta } });\n    }\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <MinHeight key=\"headerMinHeight\">\n          <CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                {cardTitle}\n              </Title>\n            </CardTitle>\n            <CardActions className={(error && 'blur') || ''}>\n              <React.Fragment key=\"actionDisplay\">{actionDisplay}</React.Fragment>\n              {children}\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key=\"bodyMinHeight\">\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && <Loader variant=\"graph\" />}\n              {!pending && this.renderChart()}\n            </div>\n          </CardBody>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productLabel: string, settings: object, productId: string, query: object, pending: boolean,\n *     error: boolean, cardTitle: Node, filterGraphData: Array, getGraphReportsCapacity: Function,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean,\n *     meta: object}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.node,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  meta: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired,\n    [RHSM_API_QUERY_TYPES.START_DATE]: PropTypes.string.isRequired,\n    [RHSM_API_QUERY_TYPES.END_DATE]: PropTypes.string.isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  settings: PropTypes.shape({\n    actionDisplay: PropTypes.func\n  }),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{productLabel: string, settings: object, pending: boolean, error: boolean, cardTitle: Node,\n *     filterGraphData: Array, getGraphReportsCapacity: Function, viewId: string, t: translate,\n *     children: Node, graphData: object, isDisabled: boolean, meta: object}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  meta: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  productLabel: '',\n  settings: {},\n  t: translate,\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { CardContext } from './Card';\nimport { Button } from '../Button';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nexport const CardHeader = (_a) => {\n    var { children = null, className = '', id, onExpand, toggleButtonProps, isToggleRightAligned } = _a, props = __rest(_a, [\"children\", \"className\", \"id\", \"onExpand\", \"toggleButtonProps\", \"isToggleRightAligned\"]);\n    return (React.createElement(CardContext.Consumer, null, ({ cardId }) => {\n        const cardHeaderToggle = (React.createElement(\"div\", { className: css(styles.cardHeaderToggle) },\n            React.createElement(Button, Object.assign({ variant: \"plain\", type: \"button\", onClick: evt => {\n                    onExpand(evt, cardId);\n                } }, toggleButtonProps),\n                React.createElement(\"span\", { className: css(styles.cardHeaderToggleIcon) },\n                    React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" })))));\n        return (React.createElement(\"div\", Object.assign({ className: css(styles.cardHeader, isToggleRightAligned && styles.modifiers.toggleRight, className), id: id }, props),\n            onExpand && !isToggleRightAligned && cardHeaderToggle,\n            children,\n            onExpand && isToggleRightAligned && cardHeaderToggle));\n    }));\n};\nCardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nexport const CardTitle = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardTitle, className) }, props), children));\n};\nCardTitle.displayName = 'CardTitle';\n//# sourceMappingURL=CardTitle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nexport const CardActions = (_a) => {\n    var { children = null, className = '', hasNoOffset = false } = _a, props = __rest(_a, [\"children\", \"className\", \"hasNoOffset\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.cardActions, hasNoOffset && styles.modifiers.noOffset, className) }, props), children));\n};\nCardActions.displayName = 'CardActions';\n//# sourceMappingURL=CardActions.js.map"],"sourceRoot":""}
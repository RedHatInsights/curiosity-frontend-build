{"version":3,"sources":["common/helpers.js","redux/common/reduxHelpers.js","redux/middleware/index.js","redux/types/rhelTypes.js","redux/types/userTypes.js","redux/types/index.js","types/rhelApiTypes.js","common/dateHelpers.js","redux/reducers/rhelGraphReducer.js","redux/reducers/rhelViewReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store.js","services/config.js","services/rhelServices.js","redux/actions/rhelActions.js","services/userServices.js","redux/actions/userActions.js","redux/actions/index.js","redux/selectors/graphCardSelectors.js","redux/selectors/index.js","redux/index.js","components/select/select.js","components/i18n/i18n.js","common/graphHelpers.js","components/rhelGraphCard/rhelGraphCardTypes.js","components/chartArea/chartArea.js","components/rhelGraphCard/rhelGraphCard.js","components/rhelView/rhelView.js","components/router/routerTypes.js","components/router/router.js","components/pageLayout/pageLayout.js","components/authentication/authentication.js","components/app.js","index.js"],"names":["helpers","generateId","prefix","Math","ceil","random","noop","Function","prototype","noopPromise","Promise","resolve","noopTranslate","key","value","DEV_MODE","process","PROD_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISPLAY_NAME","UI_LOGGER_ID","UI_NAME","UI_PATH","UI_VERSION","window","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","getMessageFromResults","results","filterField","status","_get","statusResponse","statusText","messageResponse","message","detailResponse","detail","serverStatus","undefined","getMessages","messageObject","filterKey","obj","_map","next","Array","isArray","_join","getStatusFromResults","setStateProp","prop","data","options","state","initialState","reset","reduxHelpers","types","action","type","expandedTypes","forEach","val","subVal","push","ref","filter","RegExp","test","whichType","baseState","error","errorMessage","fulfilled","metaData","meta","metaId","id","metaQuery","query","pending","update","setId","payload","errorStatus","date","headers","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","promiseMiddleware","notificationsMiddleware","GET_GRAPH_CAPACITY_RHEL","GET_GRAPH_REPORT_RHEL","SET_GRAPH_RHEL_GRANULARITY","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","rhel","rhelTypes","user","userTypes","RHSM_API_QUERY_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","rhelApiTypes","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","DATE","SOCKETS","PHYSICAL_SOCKETS","HYPERVISOR_SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_CAPACITY_META","RHSM_API_RESPONSE_CAPACITY_META_TYPES","COUNT","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","HAS_DATA","RHSM_API_RESPONSE_PRODUCTS_META","RHSM_API_RESPONSE_PRODUCTS_META_TYPES","RHSM_API_QUERY_GRANULARITY","RHSM_API_QUERY_LIMIT","RHSM_API_QUERY_OFFSET","RHSM_API_QUERY_START_DATE","RHSM_API_QUERY_END_DATE","getCurrentDate","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","subtract","measurement","startDate","moment","utc","startOf","toDate","endDate","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","dateHelpers","getRangedDateTime","granularity","GRANULARITY_TYPES","capacity","component","report","rhelGraphReducer","graphGranularity","view","rhelViewReducer","session","authorized","locale","userReducer","username","reducers","notifications","rhelGraph","rhelView","reduxReducers","combineReducers","store","createStore","applyMiddleware","serviceConfig","passedConfig","timeout","rhelServices","params","axios","url","getGraphReportsRhel","dispatch","rejected","variant","title","description","getGraphCapacityRhel","getLocaleFromCookie","Cookies","get","replace","LocaleCode","getLanguageName","userServices","returnMethod","insights","chrome","auth","getUser","e","console","warn","defaultLocale","authorizeUser","userService","getLocale","reduxActions","rhelActions","userActions","rhelGraphCardCache","rhelGraphCardSelector","createSelector","reportGranularity","capacityGranularity","cachedGranularity","initialLoad","updatedData","graphData","sockets","hypervisor","threshold","productsData","thresholdData","index","x","y","Number","parseInt","item","itemDate","isSame","checkThresholdDate","reduxSelectors","rhelGraphCard","makeRhelGraphCard","connectTranslate","mapStateToProps","mapDispatchToProps","connect","withTranslation","connectRouter","withRouter","Select","isExpanded","selected","onSelect","event","titleSelection","props","name","updatedOptions","optionsIndex","findIndex","option","SelectVariant","single","updateSelected","opt","map","setState","mockUpdatedOptions","_cloneDeep","mockTarget","selectedIndex","mockEvent","target","currentTarget","persist","onToggle","expanded","this","formatOptions","prevProps","_isEqual","selectedOptions","_isPlainObject","Object","keys","activateOptions","convertedOption","text","textContent","label","includes","find","ariaLabel","className","isDisabled","placeholder","pfSelectOptions","length","aria-label","selections","placeholderText","btoa","data-value","data-title","React","Component","defaultProps","translate","str","i18next","t","I18n","i18nInit","fallbackLng","loadPath","use","XHR","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","children","Fragment","getChartXAxisLabelIncrement","getGraphLabels","labels","tooltipLabel","previousLabel","getGranularityDateType","getLabel","previousData","formattedDate","previousCount","updatedLabel","getThresholdLabel","yValue","tooltipThresholdLabel","fillFormatChartData","tooltipLabelNoData","granularityType","granularityTick","endDateStartDateDiff","diff","chartData","chartDataThresholds","isThreshold","previousYear","i","momentDate","add","stringDate","toISOString","year","checkTick","isNewYear","formattedDateTooltip","format","yAxis","yAxisThreshold","dataThreshold","labelData","chartDataThresholdsItem","tooltip","chartDataItem","xAxisLabel","graphHelpers","tick","numbro","average","mantissa","optionalMantissa","formattedData","chartXAxisLabelIncrement","rhelGraphCardTypes","ChartArea","chartWidth","containerRef","createRef","onResizeContainer","containerElement","current","clientWidth","addEventListener","removeEventListener","dataSets","tooltips","updatedDataSets","itemsByKey","items","_tooltip","xAxisLabelIncrement","xAxisTickFormat","yAxisTickFormat","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","tickValue","tickValues","tickIndex","indexOf","previousItem","nextItem","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","floored","pow","floor","log10","maxY","chartDomain","legendData","legendLabel","legendDataSettings","symbol","color","fill","legendOrientation","legendPosition","legendComponent","ChartLegend","borderPadding","top","stacked","setDataSets","charts","chartsStacked","updatedDataSet","ChartThreshold","animate","interpolation","themeColor","style","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","chartProps","getChartLegend","getContainerComponent","Chart","duration","width","ChartAxis","renderChart","ChartStack","VictoryVoronoiCursorContainer","createContainer","containerComponentProps","constrainToVisibleArea","cursorDimension","voronoiDimension","voronoiPadding","mouseFollowTooltips","labelComponent","ChartTooltip","pointerLength","centerOffset","flyoutWidth","datum","childName","containerComponent","height","bottom","left","right","RhelGraphCard","onUpdateGraphData","submit","onLoad","ChartThemeColor","green","getDateMenuOptions","Card","CardHead","CardActions","CardBody","size","SkeletonSize","xs","sm","md","lg","ConnectedRhelGraphCard","getRhelGraphCard","RhelView","PageSection","ConnectedRhelView","baseName","pathName","pathPrefix","path","split","shift","pathSlice","slice","join","dynamicBaseName","location","pathname","routes","to","redirect","exact","disabled","Router","routesType","redirectRoot","renderRoutes","hasParameters","PageLayout","Page","noPadding","Authentication","appNav","buildNav","buildNavigation","currentPath","active","appName","history","identifyApp","navigation","on","navId","listen","EmptyState","EmptyStateVariant","full","EmptyStateIcon","icon","BinocularsIcon","EmptyStateBody","BanIcon","appRoutes","ConnectedAuthentication","App","ConnectedApp","render","basename","document","getElementById"],"mappings":"+/BAAA,IA+BMA,EAAU,CACdC,WAhCiB,SAAAC,GAAM,gBACpBA,GAAU,cADU,YACgDC,KAAKC,KAAK,IAAMD,KAAKE,WAAc,KAgC1GC,KA9BWC,SAASC,UA+BpBC,YA7BkBC,QAAQC,QAAQ,IA8BlCC,cA5BoB,SAACC,EAAKC,GAAN,OAAgBA,GAAK,aAAUD,EAAV,OA6BzCE,UA3BeC,EA4BfC,WA1BgBD,EA2BhBE,aAzBkBF,EA0BlBG,WAxBgBH,EAyBhBI,sBAvB4BJ,QAwB5BK,aAtBkBL,EAuBlBM,gBArBsBN,yBAsBtBO,aApBmBP,YAqBnBQ,QAnBcR,gBAoBdS,QAlBcT,2BAmBdU,WAjBiBV,iBAoBnBW,OAAM,U,qVAAN,IAA4B3B,G,0uBC7C5B,IAAM4B,EAAmB,eAACC,EAAD,uDAAQ,GAAR,gBAAkBA,EAAlB,eAEnBC,EAAiB,eAACD,EAAD,uDAAQ,GAAR,gBAAkBA,EAAlB,aAEjBE,EAAkB,eAACF,EAAD,uDAAQ,GAAR,gBAAkBA,EAAlB,cAElBG,EAAwB,SAACC,GAAiC,IAAxBC,EAAuB,uDAAT,KAC9CC,EAASC,IAAKH,EAAS,kBAAmBA,EAAQE,QAClDE,EAAiBD,IAAKH,EAAS,sBAAuBA,EAAQK,YAC9DC,EAAkBH,IAAKH,EAAS,gBAAiBA,EAAQO,SACzDC,EAAiBL,IAAKH,EAAS,gBAAiBA,EAAQS,QAE1DC,EAAe,GAEnB,IAAKJ,IAAoBE,EAAgB,CACvC,GAAIN,EAAS,IACX,OAAOE,EAGT,GAAIF,GAAU,UAAkBS,IAAXT,EACnB,MAAM,GAAN,OAAUA,GAAU,GAApB,uDAQJ,IAJIA,GAAU,UAAkBS,IAAXT,KACnBQ,EAAeR,EAAM,UAAMA,EAAN,KAAkB,IAGV,kBAApBI,EACT,MAAM,GAAN,OAAUI,GAAV,OAAyBJ,GAG3B,GAA8B,kBAAnBE,EACT,MAAM,GAAN,OAAUE,GAAV,OAAyBF,GAG3B,IAAMI,EAAc,SAAdA,EAAeC,EAAeC,GAClC,IAAMC,EAAMD,EAAYD,EAAcC,GAAaD,EAEnD,OAAOG,IACLD,EACA,SAAAE,GACE,OAAIC,MAAMC,QAAQF,GACTL,EAAYK,GAGdA,GAET,OAIJ,MAAM,GAAN,OAAUP,GAAV,OAAyBU,IAAMR,EAAYN,GAAmBE,EAAgBP,GAAc,QAGxFoB,EAAuB,SAAArB,GAC3B,IAAIE,EAASC,IAAKH,EAAS,kBAAmBA,EAAQE,QAMtD,YAJeS,IAAXT,IACFA,EAAS,GAGJA,GAGHoB,EAAe,SAACC,EAAMC,EAAMC,GAAa,IAAD,EACYA,EAAhDC,aADoC,MAC5B,GAD4B,IACYD,EAApCE,oBADwB,MACT,GADS,IACYF,EAAjBG,aADK,SAExCb,EAAG,KAAQW,GAkCf,OAxBIE,GAASL,EACXR,EAAIQ,GAAJ,KACKG,EAAMH,GADX,GAEKI,EAAaJ,GAFlB,GAGKC,GAEII,IAAUL,EACnBR,EAAG,KACEW,EADF,GAEEC,EAFF,GAGEH,GAEID,EACTR,EAAIQ,GAAJ,KACKG,EAAMH,GADX,GAEKC,GAGLT,EAAG,KACEW,EADF,GAEEF,GAIAT,GA+EHc,EACJlC,EADIkC,EAEJhC,EAFIgC,EAGJ/B,EAHI+B,EA5EgC,WAA0C,IAAzCC,EAAwC,uDAAhC,GAAIJ,EAA4B,uDAApB,GAAIK,EAAgB,uDAAP,GAC9DC,EAASD,EAATC,KACFC,EAAgB,GAEtBH,EAAMI,QACJ,SAAAC,GAAG,OACAjB,MAAMC,QAAQgB,EAAIH,OAASG,EAAIH,KAAKE,QAAQ,SAAAE,GAAM,OAAIH,EAAcI,KAAK,CAAEC,IAAKH,EAAIG,IAAKN,KAAMI,OAChGH,EAAcI,KAAKF,KAPsD,MAUzDF,EAAcM,OAAO,SAAAJ,GAAG,OAC1C,IAAIK,OAAJ,YACO1C,EAAgBqC,EAAIH,MAAQG,GADnC,YAC2CtC,EAAesC,EAAIH,MAAQG,GADtE,YAC8ExC,EAAiBwC,EAAIH,MAAQG,GAD3G,OAEEM,KAAKT,KAboE,mBAUtEU,EAVsE,KAgB7E,IAAKA,EACH,OAAOhB,EAGT,IAAMiB,EAAY,CAChBC,OAAO,EACPC,aAAc,GACdC,WAAW,EACXC,SAAUhB,EAAOiB,MAAQjB,EAAOiB,KAAKxB,KACrCyB,OAAQlB,EAAOiB,MAAQjB,EAAOiB,KAAKE,GACnCC,UAAWpB,EAAOiB,MAAQjB,EAAOiB,KAAKI,MACtCC,SAAS,EACTC,QAAQ,GAGJC,EAAQ,SAAA/B,GAAI,OACfO,EAAOiB,MAAQjB,EAAOiB,KAAKE,IAA3B,eAAoCnB,EAAOiB,KAAKE,GAAhD,KAA0DP,EAA1D,GAAwEnB,KAAzE,KAA2FmB,EAA3F,GAAyGnB,IAE3G,OAAQQ,GACN,KAAKlC,EAAgB4C,EAAUV,MAAQU,GACrC,OAAOpB,EACLoB,EAAUJ,KAAO,KACjBiB,EAAM,CACJX,OAAO,EACPC,aAAc9C,EAAsBgC,EAAOyB,SAC3CC,YAAapC,EAAqBU,EAAOyB,WAE3C,CACE9B,UAGN,KAAK7B,EAAe6C,EAAUV,MAAQU,GACpC,OAAOpB,EACLoB,EAAUJ,KAAO,KACjBiB,EAAM,CACJF,SAAS,IAEX,CACE3B,UAIN,KAAK/B,EAAiB+C,EAAUV,MAAQU,GACtC,OAAOpB,EACLoB,EAAUJ,KAAO,KACjBiB,EAAM,CACJG,KAAM3B,EAAOyB,QAAQG,SAAW5B,EAAOyB,QAAQG,QAAQD,KACvDlC,KAAOO,EAAOyB,SAAWzB,EAAOyB,QAAQhC,MAAS,GACjDsB,WAAW,IAEb,CACEpB,UAIN,QACE,OAAOA,IAIPG,EAKJ9B,EALI8B,EAMJR,EANIQ,EAOJP,ECzLIsC,EAAuB,CAC3BC,wBAAwB,EACxBC,cAAejC,IACfkC,gBAAiBlC,IACjBmC,eAAgBnC,IAChBoC,aAAa,EACbC,aAAc,IACdC,cAAe,QACfC,oBAAqB,UAGjBC,EAAkB,CAACC,IAAiBC,IAAmBC,kCAAwBZ,ICjBrF,IAAMa,EAA0B,0BAC1BC,GAAwB,wBACxBC,GAA6B,6BCF7BC,GAAY,YACZC,GAAc,cACdC,GAAc,cCCdC,GAAa,CACjBC,KAAMC,EACNC,KAAMC,G,oBCsBFC,GAAmC,CACvCC,MAAO,QACPC,OAAQ,SACRC,QAAS,UACTC,UAAW,aAOPC,GAAe,CACnBC,gCAvCsC,OAwCtCC,sCAvC4C,CAC5CC,KAAM,OACNC,QAAS,UACTC,iBAAkB,mBAClBC,mBAAoB,qBACpBC,aAAc,yBAmCdC,gCAjCsC,OAkCtCC,sCAjC4C,CAC5CC,MAAO,SAiCPC,gCA9BsC,OA+BtCC,sCA9B4C,CAC5CT,KAAM,OACNC,QAAS,UACTC,iBAAkB,mBAClBC,mBAAoB,qBACpBO,SAAU,YA0BVC,gCAxBsC,OAyBtCC,sCAxB4C,CAC5CL,MAAO,SAwBPM,2BArBiC,cAsBjCrB,oCACAsB,qBAhB2B,QAiB3BC,sBAhB4B,SAiB5BC,0BAhBgC,YAiBhCC,wBAhB8B,U,ujBChChC,IAAMC,GAAiB,kBACpB/I,EAAQmB,UAAa,WAAgBnB,EAAQe,UAAYC,ipCAAYgI,mCAAqC,IAAIC,MAE3GC,GAAoB,SAAC,GAAD,IAAGvD,EAAH,EAAGA,KAAMwD,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,YAAnB,MAAsC,CAC9DC,UAAWC,KACRC,IAAI5D,GACJ6D,QAAQJ,GACRD,SAASA,EAAUC,GACnBK,SACHC,QAASJ,KACNC,IAAI5D,GACJ6D,QAAQJ,GACRK,WAGCE,GAAkBT,GAAkB,CAAEvD,KAAMoD,KAAkBI,SAAU,GAAIC,YAAa,SACzFQ,GAAiBV,GAAkB,CAAEvD,KAAMoD,KAAkBI,SAAU,GAAIC,YAAa,UACxFS,GAAkBX,GAAkB,CAAEvD,KAAMoD,KAAkBI,SAAU,GAAIC,YAAa,WACzFU,GAAoBZ,GAAkB,CAAEvD,KAAMoD,KAAkBI,SAAU,GAAIC,YAAa,WAsB3FW,GAAc,CAClBhB,kBACAiB,kBAhBwB,SAAAC,GACxB,OAAQA,GACN,KAAKC,GAAkB3C,OACrB,OAAO,MAAKqC,IACd,KAAKM,GAAkB1C,QACrB,OAAO,MAAKqC,IACd,KAAKK,GAAkBzC,UACrB,OAAO,MAAKqC,IACd,KAAKI,GAAkB5C,MACvB,QACE,OAAO,MAAKqC,MAOhBT,qBACAS,mBACAE,mBACAC,qBACAF,mB,ujBC/CF,IAAMhG,GAAe,CACnBuG,SAAU,GACVC,UAAW,GACXC,OAAQ,IAGJC,GAAmB,WAAmC,IAAlC3G,EAAiC,uDAAzBC,GAAcI,EAAW,uCACzD,OAAQA,EAAOC,MACb,KAAK+C,GAAWC,KAAKL,2BACnB,OAAO9C,EACL,YADK,IAGHyG,iBAAkBvG,EAAOuG,kBACtBR,GAAYC,kBAAkBhG,EAAOuG,mBAE1C,CACE5G,QACAC,kBAIN,QACE,OAAOE,EACL,CACE,CAAES,IAAK,WAAYN,KAAMiD,EAAUR,yBACnC,CAAEnC,IAAK,SAAUN,KAAMiD,EAAUP,wBAEnChD,EACAK,KAKRsG,GAAiB1G,aAAeA,GCrChC,IAAMA,GAAe,CACnB4G,KAAM,CACJ/G,KAAM,GACNoB,OAAO,EACPa,YAAa,KACbZ,aAAc,KACdQ,SAAS,EACTP,WAAW,IAIT0F,GAAkB,eAAC9G,EAAD,uDAASC,GAAT,OAA0BD,GAElD8G,GAAgB7G,aAAeA,GCV/B,IAAMA,GAAe,CACnB8G,QAAS,CACP7F,OAAO,EACPC,aAAc,KACdY,YAAa,KACbJ,SAAS,EACTP,WAAW,EACX4F,YAAY,EACZC,OAAQ,OAINC,GAAc,WAAmC,IAAlClH,EAAiC,uDAAzBC,GAAcI,EAAW,uCACpD,OAAQA,EAAOC,MACb,KAAKH,EAA6BsD,EAAUP,WAC1C,OAAO/C,EACL,UACA,CACEe,MAAOb,EAAOa,MACdC,aAAchB,EAAmCE,EAAOyB,SACxDC,YAAa5B,EAAkCE,EAAOyB,SACtDmF,OAAQjH,EAAM+G,QAAQE,QAExB,CACEjH,QACAC,kBAIN,KAAKE,EAA4BsD,EAAUP,WACzC,OAAO/C,EACL,UACA,CACE8G,OAAQjH,EAAM+G,QAAQE,OACtBtF,SAAS,GAEX,CACE3B,QACAC,kBAIN,KAAKE,EAA8BsD,EAAUP,WAC3C,OAAO/C,EACL,UACA,CACE6G,YAAY,EACZ5F,WAAW,EACX6F,OAAQjH,EAAM+G,QAAQE,OACtBE,SAAU9G,EAAO8G,UAEnB,CACEnH,QACAC,kBAIN,KAAKE,EAA8BsD,EAAUN,aAC3C,OAAOhD,EACL,UACA,CACE8G,OAAQ5G,EAAOyB,QAAQhC,MAEzB,CACEE,QACAE,OAAO,IAIb,QACE,OAAOF,IAIbkH,GAAYjH,aAAeA,GCvE3B,IAAMmH,GAAW,CACfC,8BACAC,UAAWX,GACXY,SAAUT,GACVtD,KAAM0D,IAGFM,GAAgBC,YAAgBL,ICThCM,GAAQC,YAAYH,GAAeI,IAAe,WAAf,cAAmBjF,K,4kBCJ5D,IAAMkF,GAAgB,eAACC,EAAD,uDAAgB,GAAhB,WACpB7F,QAAS,GACT8F,QAAS1K,SACNyK,ICoiBCE,GARuB,eAACC,EAAD,uDAAU,GAAV,OAC3BC,KACEL,GAAc,CACZM,IAAK9K,oDACL4K,aAIAD,GA3KsB,eAACC,EAAD,uDAAU,GAAV,OAC1BC,KACEL,GAAc,CACZM,IAAK9K,iDACL4K,aC7XAG,GAAsB,eAAC1G,EAAD,uDAAS,GAAT,OAAgB,SAAA2G,GAAQ,OAClDA,EAAS,CACP/H,KAAMiD,EAAUP,sBAChBlB,QAASkG,GAAiCtG,GAC1CJ,KAAM,CACJI,QACA2F,cAAe,CACbiB,SAAU,CACRC,QAAS,OACTC,MAAO,kCACPC,YAAa,8CAMjBC,GAAuB,eAAChH,EAAD,uDAAS,GAAT,OAAgB,SAAA2G,GAAQ,OACnDA,EAAS,CACP/H,KAAMiD,EAAUR,wBAChBjB,QAASkG,GAAkCtG,GAC3CJ,KAAM,CACJI,QACA2F,cAAe,CACbiB,SAAU,CACRC,QAAS,OACTC,MAAO,iCACPC,YAAa,8C,+BCgCjBE,GAAsB,WAC1B,IAAMxL,GAASyL,KAAQC,IAAIxL,cAAwD,IAAIyL,QAAQ,IAAK,KAC9F5L,EAAOC,GAAS4L,KAAWC,gBAAgB7L,IAAW,KAE5D,OAAQD,GAAO,CAAEC,QAAOD,QAAU,MAoB9B+L,GA/EgB,WACpB,IAAIC,EAAe7M,EAAQS,YAE3B,IACOT,EAAQe,WACX8L,EAAelL,OAAOmL,SAASC,OAAOC,KAAKC,SAE7C,MAAOC,GACFlN,EAAQmB,WACXgM,QAAQC,KAAR,8CAAoDF,EAAE1K,UAI1D,OAAOqK,GAkEHD,GAjBY,WAChB,IAAMS,EAAgB,CACpBvM,MAAOE,QACPH,IAAKG,WAEP,OAAO,IAAIN,QAAQ,SAAAC,GAAO,OACxBA,EAAQ,CACN8C,KAAM6I,MAAyBe,OCxE/BC,GAAgB,kBAAM,SAAAtB,GAAQ,OAClCA,EAAS,CACP/H,KAAMmD,EAAUP,UAChBpB,QAAS8H,SAGPC,GAAY,iBAAO,CACvBvJ,KAAMmD,EAAUN,YAChBrB,QAAS8H,O,6NCRX,IAKME,G,uVAAY,IALF,CACdxG,KAAMyG,EACNvG,KAAMwG,I,ikBCAR,IAAMC,GAAqB,GAIrBC,GAAwBC,aAC5B,CAHgB,SAAAnK,GAAK,OAAIA,EAAMsH,YAI/B,SAAAX,GAAqB,IAAD,EACqBA,GAAoB,GADzC,IACVH,gBADU,MACC,GADD,MACKE,cADL,MACc,GADd,EAEZ0D,EAAoB3L,IAAKiI,EAAQ,CAAC,YAAa3C,GAAagB,6BAC5DsF,EAAsB5L,IAAK+H,EAAU,CAAC,YAAazC,GAAagB,6BAChEuB,EAAc8D,GAAqBC,GAAuB,KAC1DC,EAAqBhE,GAAe2D,GAAmB3D,IAAiB,GACxEiE,EAAuD,mBAAlCD,EAAkBC,aAA4BD,EAAkBC,YAErFC,EAAW,IACftJ,OAAO,EACPE,WAAW,EACXO,SAAS,EACT4I,cACAE,UAAW,CACTC,QAAS,GACTC,WAAY,GACZC,UAAW,KAEVN,GAGL,GAAoB,OAAhBhE,EAEF,OADAkE,EAAYtJ,OAAQ,EACbsJ,EAQT,GALID,IACFC,EAAYtJ,MAAQwF,EAAOxF,OAASsF,EAAStF,QAAS,EACtDsJ,EAAY7I,QAAU+E,EAAO/E,SAAW6E,EAAS7E,UAAW,GAG1D6E,EAASpF,WAAasF,EAAOtF,WAAakF,EAAa,CACzD,IAAMuE,EAAepM,IAAKiI,EAAQ,CAAC,OAAQ3C,GAAaW,iCAAkC,IACpFoG,EAAgBrM,IAAK+H,EAAU,CAAC,OAAQzC,GAAaC,iCAAkC,IAE7F6G,EAAarK,QAAQ,SAACrD,EAAO4N,GAC3B,IAAM/I,EAAO2D,KACVC,IAAIzI,EAAM4G,GAAaY,sCAAsCT,OAC7D2B,QAAQ,OACRC,SAeH0E,EAAYC,UAAUC,QAAQ/J,KAAK,CACjCqB,OACAgJ,EAAGD,EACHE,EAAGC,OAAOC,SAAShO,EAAM4G,GAAaY,sCAAsCP,kBAAmB,MAGjGoG,EAAYC,UAAUE,WAAWhK,KAAK,CACpCqB,OACAgJ,EAAGD,EACHE,EAAGC,OAAOC,SAAShO,EAAM4G,GAAaY,sCAAsCN,oBAAqB,MAGnGmG,EAAYC,UAAUG,UAAUjK,KAAK,CACnCqB,OACAgJ,EAAGD,EACHE,EAAGC,OAAOC,SA5Be,SAAAC,GACzB,IAAKA,EACH,OAAO,EAGT,IAAMC,EAAW1F,KACdC,IAAIwF,EAAKrH,GAAaE,sCAAsCC,OAC5D2B,QAAQ,OACRC,SAEH,OAAOH,KAAO3D,GAAMsJ,OAAOD,GAmBxBE,CAAmBT,GAAiBA,EAAcC,KACjDD,EAAcC,GAAOhH,GAAaE,sCAAsCE,UACxE,EACF,QAKNqG,EAAYD,aAAc,EAC1BC,EAAYpJ,WAAY,EAEpBgJ,IAAsBC,IACxBJ,GAAmB3D,GAAnB,MAAuCkE,IAI3C,OAAOA,IC/FLgB,GDqGqB,CACzBC,cAAevB,GACfwB,kBAJgC,kBAAMxB,KE3FlCyB,GAAmB,SAACC,EAAiBC,GAAlB,OAAyC,SAAApF,GAAS,OACzEqF,kBACEF,EACAC,EAFFC,EAGIzP,EAAQmB,WAAauO,cAAkBtF,IAAeA,KAKtDuF,GAAgB,SAACJ,EAAiBC,GAAlB,OAAyC,SAAApF,GAAS,OACtEwF,YACEH,kBACEF,EACAC,EAFFC,CAGErF,M,usBChBAyF,G,2MACJlM,MAAQ,CAAEmM,YAAY,EAAOpM,QAAS,KAAMqM,SAAU,M,EAkBtDC,SAAW,SAACC,EAAOC,GAAoB,IAC7BxM,EAAY,EAAKC,MAAjBD,QAD4B,EAEI,EAAKyM,MAArChL,EAF4B,EAE5BA,GAAIiL,EAFwB,EAExBA,KAAMJ,EAFkB,EAElBA,SAAU9D,EAFQ,EAERA,QAEtBmE,EAAiB3M,EACjB4M,EAAeD,EAAeE,UAAU,SAAAC,GAAM,OAAIA,EAAOrE,QAAU+D,IACzEG,EAAeC,GAAcP,SAC3B7D,IAAYuE,KAAcC,SAAiBL,EAAeC,GAAcP,SAEtEU,KAAcC,QAChBL,EAAelM,QAAQ,SAACqM,EAAQ9B,GAC1B4B,IAAiB5B,IACnB2B,EAAe3B,GAAOqB,UAAW,KAKvC,IAAMY,EACJzE,IAAYuE,KAAcC,OACtBR,EACAG,EAAe7L,OAAO,SAAAoM,GAAG,OAAqB,IAAjBA,EAAIb,WAAmBc,IAAI,SAAAD,GAAG,OAAIA,EAAIzE,QAEzE,EAAK2E,SACH,CACEpN,QAAS2M,EACTN,SAAUY,GAEZ,WACE,IAAMI,EAAqBC,KAAWX,GAEhCY,EAAa,CACjB9L,KACAiL,KAAMA,GAAQjL,EACdrE,MAAOiQ,EAAmBT,GAAcxP,MACxCoQ,cAAeZ,EACfrM,KAAK,UAAD,OAAaiI,IAAYuE,KAAcC,OAAU,MAAU,YAC/DhN,QAASqN,GAGLI,EAAS,MACVF,EADU,CAEbG,OAAO,MAAMH,GACbI,cAAc,MAAMJ,GACpBK,QAAStR,EAAQM,OAGnB0P,EAAS,MAAKmB,GAAab,EAAcS,GAErC7E,IAAYuE,KAAcC,QAC5B,EAAKI,SAAS,CACZhB,YAAY,O,EAOtByB,SAAW,SAAAC,GACT,EAAKV,SAAS,CACZhB,WAAY0B,K,mFAxEE,OAFIC,KAAK9N,MAAjBD,SAGN+N,KAAKC,kB,yCAIUC,GAAY,IACrBjO,EAAY+N,KAAKtB,MAAjBzM,QAEHkO,KAASD,EAAUjO,QAASA,IAC/B+N,KAAKC,kB,sCAmEQ,IAgCXf,EAhCU,EACgCc,KAAKtB,MAA3CzM,EADM,EACNA,QAASmO,EADH,EACGA,gBAAiB3F,EADpB,EACoBA,QAC5BmE,EAAiByB,KAAepO,GAClCqO,OAAOC,KAAKtO,GAASmN,IAAI,SAAAhQ,GAAG,aAAU6C,EAAQ7C,GAAlB,CAAwBsL,MAAOtL,EAAKC,MAAO4C,EAAQ7C,OAC/EmQ,KAAWtN,GAETuO,EACHJ,GAA8C,kBAApBA,GAA4D,kBAApBA,EAC/D,CAACA,GACDA,EAENxB,EAAelM,QAAQ,SAACqM,EAAQ9B,GAC9B,IAAIwD,EAAkB1B,EAES,kBAApB0B,IACTA,EAAkB,CAChB/F,MAAOqE,EACP1P,MAAO0P,GAGTH,EAAe3B,GAASwD,GAG1BA,EAAgBC,KAAOD,EAAgBC,MAAQD,EAAgB/F,MAC/D+F,EAAgBE,YAAcF,EAAgBE,aAAeF,EAAgB/F,MAC7E+F,EAAgBG,MAAQH,EAAgBG,OAASH,EAAgB/F,MAE7D8F,IACF5B,EAAe3B,GAAOqB,SAAWkC,EAAgBK,SAASJ,EAAgBpR,UAO5E6P,EADEzE,IAAYuE,KAAcC,QACVL,EAAekC,KAAK,SAAA3B,GAAG,OAAqB,IAAjBA,EAAIb,YAAsB,IAAI5D,MAE1DkE,EAAe7L,OAAO,SAAAoM,GAAG,OAAqB,IAAjBA,EAAIb,WAAmBc,IAAI,SAAAD,GAAG,OAAIA,EAAIzE,QAGtFsF,KAAKX,SAAS,CACZpN,QAAS2M,EACTN,SAAUY,M,+BAIJ,IAAD,EACmCc,KAAK9N,MAAvCD,EADD,EACCA,QAASqM,EADV,EACUA,SAAUD,EADpB,EACoBA,WADpB,EAE4D2B,KAAKtB,MAAhEqC,EAFD,EAECA,UAAWC,EAFZ,EAEYA,UAAWC,EAFvB,EAEuBA,WAAYC,EAFnC,EAEmCA,YAAazG,EAFhD,EAEgDA,QAEjD0G,EAAkB,GAaxB,OAVKlP,GAAYA,EAAQmP,SAAUH,IACjCE,EAAgBF,YAAa,GAU7B,kBAAC,KAAD,eACED,UAAS,2BAAsBA,GAC/BvG,QAASA,EACT4G,aAAYN,EACZjB,SAAUE,KAAKF,SACfvB,SAAUyB,KAAKzB,SACf+C,WAAYhD,EACZD,WAAYA,EACZkD,gBAAiBL,GACbC,GAEFlP,GACAA,EAAQmN,IAAI,SAAAL,GAAM,OAChB,kBAAC,KAAD,CACE3P,IAAKc,OAAOsR,KAAKzC,EAAOrE,OACxBrL,MAAO0P,EAAOrE,MACd+G,aAAY1C,EAAO1P,MACnBqS,aAAY3C,EAAOrE,WAGvB,Q,GAtKWiH,IAAMC,WAwM3BxD,GAAOyD,aAAe,CACpBd,UAAW,gBACXC,UAAW,GACXtN,GAAInF,EAAQC,aACZyS,YAAY,EACZtC,KAAM,KACNJ,SAAUhQ,EAAQM,KAClBoD,QAAS,GACTmO,gBAAiB,KACjBc,YAAa,gBACbzG,QAASuE,KAAcC,Q,6CCnNnB6C,GAAY,SAACC,GAAD,IAAMb,EAAN,uDAAoB,KAApB,OACd3S,EAAQmB,WAAasS,KAAQC,EAAEF,EAAKb,IAAiB3S,EAAQY,cAAc4S,EAAKb,IAQ9EgB,G,4LAEFlC,KAAKmC,a,yCAGYjC,GACEF,KAAKtB,MAAhBvF,SAEO+G,EAAU/G,QACvB6G,KAAKmC,a,iCAIG,IAAD,EACiCnC,KAAKtB,MAAvC0D,EADC,EACDA,YAAaC,EADZ,EACYA,SAAUlJ,EADtB,EACsBA,OAE/B6I,KACGM,IAAIC,MACJD,IAAIE,KACJC,KAAK,CACJC,QAAS,CACPL,YAEFD,cACAO,IAAKxJ,EACLyJ,OAAQrU,EAAQiB,UAChBqT,GAAI,CAAC,WACLC,UAAW,UACXC,MAAO,CACLC,aAAa,O,+BAKX,IACAC,EAAajD,KAAKtB,MAAlBuE,SAER,OAAO,kBAAC,IAAMC,SAAP,KAAiBD,O,GArCTtB,IAAMC,WAgDzBM,GAAKL,aAAe,CAClBO,YAAa7S,QACb8S,SAAU9S,gDACV4J,OAAQ,MC3DV,IAqBMgK,GAA8B,SAAA3K,GAClC,OAAQA,GACN,KAAKC,GAAkB5C,MACrB,OAAO,EACT,KAAK4C,GAAkB3C,OACvB,KAAK2C,GAAkB1C,QACrB,OAAO,EACT,KAAK0C,GAAkBzC,UACvB,QACE,OAAO,IAWPoN,GAAiB,SAAC,GAAmC,IAAjC5K,EAAgC,EAAhCA,YAClB6K,EAAS,CACbzC,MAFsD,EAAnB0C,cAKrC,OAAQ9K,GACN,KAAKC,GAAkB3C,OACrBuN,EAAOE,cAAgBzB,GAAU,8CACjC,MACF,KAAKrJ,GAAkB1C,QACrBsN,EAAOE,cAAgBzB,GAAU,+CACjC,MACF,KAAKrJ,GAAkBzC,UACrBqN,EAAOE,cAAgBzB,GAAU,iDACjC,MACF,KAAKrJ,GAAkB5C,MACvB,QACEwN,EAAOE,cAAgBzB,GAAU,6CAIrC,OAAOuB,GASHG,GAAyB,SAAAhL,GAC7B,OAAQA,GACN,KAAKC,GAAkB3C,OACrB,MAAO,QACT,KAAK2C,GAAkB1C,QACrB,MAAO,SACT,KAAK0C,GAAkBzC,UACrB,MAAO,WACT,KAAKyC,GAAkB5C,MACvB,QACE,MAAO,SAcP4N,GAAW,SAAC,GAAsE,IAApEzR,EAAmE,EAAnEA,KAAM0R,EAA6D,EAA7DA,aAAcC,EAA+C,EAA/CA,cAAenL,EAAgC,EAAhCA,YAAa8K,EAAmB,EAAnBA,aAAmB,EACpDF,GAAe,CAAE5K,cAAa8K,iBAAvD1C,EAD6E,EAC7EA,MAAO2C,EADsE,EACtEA,cACTK,EAAgB5R,EAAO0R,EACvBG,EAAY,UAAM7R,EAAN,YAAc4O,EAAd,YAAuB+C,GAEzC,OAAKD,GAAkC,IAAlBE,EAIf,GAAN,OAAUC,EAAV,cAA4BD,GAAiB,EAAI,IAAM,IAAvD,OAA4DA,EAA5D,YAA6EL,GAHpEM,GAWLC,GAAoB,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,sBACnC,MAAM,GAAN,OAAUA,EAAV,aAAoCD,IAgBhCE,GAAsB,SAAC,GAmB3B,IAXK,IAPLjS,EAOI,EAPJA,KACAiG,EAMI,EANJA,QACAO,EAKI,EALJA,YACAZ,EAII,EAJJA,UACA0L,EAGI,EAHJA,aACAY,EAEI,EAFJA,mBACAF,EACI,EADJA,sBAEMG,EAAkBX,GAAuBhL,GACzC4L,EAAkBjB,GAA4B3K,GAC9C6L,EAAuBxM,KAAOI,GAASqM,KAAK1M,EAAWuM,GACvDI,EAAY,GACZC,EAAsB,GAExBC,GAAc,EACdf,EAAe,KACfgB,EAAe,KAEVC,EAAI,EAAGA,GAAKN,EAAsBM,IAAK,CAC9C,IAAMC,EAAa/M,KAChBC,IAAIF,GACJiN,IAAIF,EAAGR,GACPpM,QAAQoM,GACLW,EAAaF,EAAWG,cACxBC,EAAO3H,SAASuH,EAAWI,OAAQ,IAEnCC,EAAYN,EAAIP,IAAoB,EACpCc,EAAkB,IAANP,GAAWM,GAAaD,IAASN,EAC/Cf,OAAa,EACbwB,OAAoB,EAEA,aAApBhB,GACFR,EAAgBuB,EACZN,EAAWQ,OAtJmB,YAuJ9BR,EAAWQ,OAxJe,OA0J9BD,EAAuBD,EACnBN,EAAWQ,OA5JkB,aA6J7BR,EAAWQ,OA9Jc,SA+JA,WAApBjB,GACTR,EAAgBuB,EACZN,EAAWQ,OAnKiB,YAoK5BR,EAAWQ,OArKa,OAuK5BD,EAAuBD,EACnBN,EAAWQ,OAzKgB,aA0K3BR,EAAWQ,OA3KY,UA6K3BzB,EAAgBuB,EACZN,EAAWQ,OAhLe,cAiL1BR,EAAWQ,OAlLW,SAoL1BD,EAAuBD,EACnBN,EAAWQ,OAtLc,eAuLzBR,EAAWQ,OAxLU,WA2L3B,IAAMC,EAASrT,EAAK8S,IAAe9S,EAAK8S,GAAY9S,MAAS,EACvDsT,EAAkBtT,EAAK8S,IAAe9S,EAAK8S,GAAYS,eAAkB,EAE/Ed,EAAcA,GAAea,EAAiB,EAE9C,IAAME,EAAY,CAChBxT,KAAMqT,EACN3B,eACAC,cAAewB,EACf3M,cACA8K,gBAGImC,EAA0B,CAC9BvI,EAAGqH,EAAUnD,OACbjE,EAAGmI,GAGDA,IACFG,EAAwBC,QAAU5B,GAAkB,CAAEC,OAAQuB,EAAgBtB,2BAGhFQ,EAAoB3R,KAAK4S,GAEzB,IAAME,EAAgB,CACpBzI,EAAGqH,EAAUnD,OACbjE,EAAGkI,EACHO,WACsB,WAApBzB,GAAoD,aAApBA,EAC5BR,EAAc3I,QAAQ,KAAM,MAC5B2I,GAGRgC,EAAcD,QAAUL,EAAQ5B,GAAS+B,GAAatB,IAEhDmB,GAASC,IAAoBK,EAAcD,iBACxCC,EAAcD,QAGvBnB,EAAU1R,KAAK8S,GAEfjC,EAAe2B,EAEXJ,GAAaD,IAASN,IACxBA,EAAeM,GAInB,MAAO,CAAET,YAAWC,oBAAsBC,GAAeD,GAAwB,KAiE7EqB,GAFkB,SAAAC,GAAI,OAAIC,KAAOD,GAAMV,OAAO,CAAEY,SAAS,EAAMC,SAAU,EAAGC,kBAAkB,KAE9FL,GA7CmB,SAAC,GASnB,IARL7T,EAQI,EARJA,KACAuT,EAOI,EAPJA,cACAjC,EAMI,EANJA,aACAY,EAKI,EALJA,mBACAF,EAII,EAJJA,sBACApM,EAGI,EAHJA,UACAK,EAEI,EAFJA,QACAO,EACI,EADJA,YAEM2N,EAAgB,IAErBnU,GAAQ,IAAIU,QAAQ,SAACrD,EAAO4N,GAC3B,GAAI5N,EAAO,CACT,IAAMyV,EAAajN,KAChBC,IAAIzI,EAAM6E,MACV6D,QAAQ,OACRgN,cAEHoB,EAAcrB,GAAc,CAC1B9S,KAAM3C,EAAM8N,EACZoI,cAAgBA,GAAiBA,EAActI,IAAUsI,EAActI,GAAOE,GAAM,MAZtF,MAiBuC8G,GAAoB,CAC7DjS,KAAMmU,EACNlO,UACAO,cACAZ,YACA0L,eACAY,qBACAF,0BAGF,MAAO,CACLO,UA5BE,EAiBIA,UAYNC,oBA7BE,EAiBeA,oBAajB4B,yBAA0BjD,GAA4B3K,KCpSpD6N,GAPyB,iBAAM,CACnC,CAAE3L,MAAOoH,GAAU,gCAAiC,SAAUzS,MAAOoJ,GAAkB5C,OACvF,CAAE6E,MAAOoH,GAAU,iCAAkC,UAAWzS,MAAOoJ,GAAkB3C,QACzF,CAAE4E,MAAOoH,GAAU,kCAAmC,WAAYzS,MAAOoJ,GAAkB1C,SAC3F,CAAE2E,MAAOoH,GAAU,oCAAqC,aAAczS,MAAOoJ,GAAkBzC,a,qpBCQ3FsQ,G,2MACJpU,MAAQ,CAAEqU,WAAY,G,EAEtBC,aAAe7E,IAAM8E,Y,EAWrBC,kBAAoB,WAClB,IAAMC,EAAmB,EAAKH,aAAaI,QAEvCD,GAAoBA,EAAiBE,aACvC,EAAKxH,SAAS,CAAEkH,WAAYI,EAAiBE,e,mFAZ/C7G,KAAK0G,oBACLxW,OAAO4W,iBAAiB,SAAU9G,KAAK0G,qB,6CAIvCxW,OAAO6W,oBAAoB,SAAU/G,KAAK0G,qB,oCAW7B,IAAD,EACmB1G,KAAKtB,MAA5BsI,EADI,EACJA,SAAUC,EADN,EACMA,SAElB,GAAIA,GAAYD,GAAYA,EAAS,IAAMA,EAAS,GAAGhV,KAAM,CAC3D,IAAMkV,EAAkB3H,KAAWyH,GA0BnC,OAxBAE,EAAgB,GAAGlV,KAAOkV,EAAgB,GAAGlV,KAAKoN,IAAI,SAAC/P,EAAO4N,GAC5D,IAAMkK,EAAa,GACbC,EAAQ,GASd,OAPAJ,EAAStU,QAAQ,SAACV,EAAM2S,GAClB3S,EAAKA,MAAQA,EAAKA,KAAK3C,EAAM6N,KAC/BiK,EAAWnV,EAAK0B,IAAL,kBAAsBiR,IAAO3S,EAAKA,KAAK3C,EAAM6N,GACxDkK,EAAMvU,KAAKb,EAAKA,KAAK3C,EAAM6N,OAIxB,MACF7N,EADL,CAEEgY,SAAUJ,EAAS,CACjB/J,EAAG7N,EAAM6N,EACTC,EAAG9N,EAAM8N,EACTF,QACAmK,QACAD,aACAH,SAAUzH,KAAWyH,SAKpBE,EAGT,OAAOF,I,sCAGQ,IAAD,EAC8DhH,KAAKtB,MAAzE4I,EADM,EACNA,oBAAqBC,EADf,EACeA,gBAAiBC,EADhC,EACgCA,gBAAiBR,EADjD,EACiDA,SACzDS,EAAa,GACbC,EAAa,GACfC,EAAgBX,EAAS5F,QAAU4F,EAAS,GAAGhV,MAAS,GAgC5D,OA9BAgV,EAAStU,QAAQ,SAAAkV,GACXA,EAAQC,uBACVF,EAAeC,EAAQ5V,QAI3ByV,EAAWK,gBAAkBH,EAAaI,OACxC,SAACC,EAAKpB,EAAS3J,GAAf,OAA0BA,EAAQqK,IAAwB,EAAIU,EAAIC,OAAOrB,EAAQ1J,GAAK8K,GACtF,IAGFP,EAAWF,gBAAkB,SAAAW,GAAS,OACnCP,EAAaO,IAAcP,EAAaO,GAAWtC,YAAesC,GAEtC,oBAApBX,IACTE,EAAWF,gBAAkB,SAAAzB,GAC3B,IAAMqC,EAAaV,EAAWK,gBACxBM,EAAYD,EAAWE,QAAQvC,GAC/BwC,EAAY,MAASX,EAAaQ,EAAWC,EAAY,KAAO,IAChEG,EAAQ,MAASZ,EAAaQ,EAAWC,EAAY,KAAO,IAC5D9K,EAAI,MAASqK,EAAa7B,IAAS,IAEzC,OAAOyB,EAAgB,CAAEzB,OAAMwC,eAAchL,OAAMiL,eAIxB,oBAApBf,IACTE,EAAWF,gBAAkB,SAAA1B,GAAI,OAAI0B,EAAgB,CAAE1B,WAGlD,MACF2B,EADL,GAEKC,K,sCAIU,IACPc,EAAyBxI,KAAKtB,MAA9B8J,qBADM,EAGgDxI,KAAKyI,gBAA3DX,EAHM,EAGNA,gBAAiBP,EAHX,EAGWA,gBAAiBC,EAH5B,EAG4BA,gBACpCkB,EAAoB,CACxBC,gBAAiBH,GAEbI,EAAoB,CACxBC,eAAe,EACfC,UAAU,GAeZ,OAZIhB,IACFY,EAAkBP,WAAaL,GAG7BP,IACFmB,EAAkBK,WAAaxB,GAG7BC,IACFoB,EAAkBG,WAAavB,GAG1B,CACLwB,eAAgBlB,EAChBL,WAAYiB,EACZhB,WAAYkB,K,wCAKkB,IAAjBI,EAAgB,EAAhBA,aAAgB,EACFhJ,KAAKtB,MAA1BuK,EADuB,EACvBA,OAAQjC,EADe,EACfA,SAEhB,GAAI1G,OAAOC,KAAK0I,GAAQ7H,OACtB,OAAO6H,EAGT,IAAMC,EAAkB,GAClBC,EAAqB,GACvBC,EAAc,EACdC,EAAc,EAEErC,EAASjU,OAAO,SAAAuW,GAAG,OAAsB,IAAlBA,EAAIC,YAEnC7W,QAAQ,SAAAkV,GAClB,GAAIA,EAAQ5V,KAAM,CAChB,IAAIwX,EAAqB,EAEzB5B,EAAQ5V,KAAKU,QAAQ,SAACrD,EAAO4N,GAC3BuM,EAAqBna,GAASA,EAAM8N,EAAIqM,EAAqBna,EAAM8N,EAAIqM,EAEnEvM,IAAU2K,EAAQ5V,KAAKoP,OAAS,IAClCiI,GAAeG,QAMvBxC,EAAStU,QAAQ,SAAAkV,GACXA,EAAQ5V,OACVoX,EAAcxB,EAAQ5V,KAAKoP,OAASgI,EAAcxB,EAAQ5V,KAAKoP,OAASgI,EAExExB,EAAQ5V,KAAKU,QAAQ,SAAArD,GACnBga,EAAcha,GAASA,EAAM8N,EAAIkM,EAAcha,EAAM8N,EAAIkM,OAK1DL,IACHE,EAAgBhM,EAAI,CAAC,EAAGkM,GAAe,KAGzC,IAAMK,EAAU/a,KAAKgb,IAAI,GAAIhb,KAAKib,MAAMjb,KAAKkb,MAAOP,EAAc,IAAMA,GAAgB,MAOxF,OANAH,EAAgB/L,EAAI,CAAC,EAAGzO,KAAKC,MAAM0a,EAAc,GAAKI,GAAWA,GAE7DnJ,OAAOC,KAAK2I,GAAiB9H,SAC/B+H,EAAmBF,OAASC,GAGvB,CACLW,KAAMR,EACNS,YAAY,MAAMX,M,uCAIJ,IACRnC,EAAahH,KAAKtB,MAAlBsI,SACF+C,EAAa,GAkBnB,OAhBA/C,EAAStU,QAAQ,SAAAkV,GACf,GAAIA,EAAQoC,YAAa,CACvB,IAAMC,EAAqB,CAAEC,OAAQ,GAAIvL,KAAMiJ,EAAQoC,aAEnDpC,EAAQnD,cACVwF,EAAmBC,OAAS,CAAE1X,KAAM,cAGlCoV,EAAQuC,QACVF,EAAmBC,OAAOE,KAAOxC,EAAQuC,OAG3CJ,EAAWlX,KAAKoX,MAIb,CACLF,aACAM,kBAAmB,aACnBC,eAAgB,cAChBC,gBAAiB,kBAACC,GAAA,EAAD,CAAaC,cAAe,CAAEC,IAAK,S,qCA4BtB,IAAD,IAAnBC,eAAmB,SACzB3D,EAAWhH,KAAK4K,cAChBC,EAAS,GACTC,EAAgB,GAuCtB,OAZA9D,EAAStU,QAAQ,SAACkV,EAAS3K,GACzB,GAAI2K,EAAQ5V,MAAQ4V,EAAQ5V,KAAKoP,OAAQ,CACvC,IAAM2J,EAAkBnD,EAAQnD,aA3Bb,SAACmD,EAAS3K,GAAV,OACrB,kBAAC+N,GAAA,EAAD,CACEC,QAASrD,EAAQqD,UAAW,EAC5BC,cAAetD,EAAQsD,eAAiB,OACxC9b,IAAKb,EAAQC,aACbmQ,KAAI,oBAAe1B,EAAf,cACJjL,KAAM4V,EAAQ5V,KAEdmZ,WAAYvD,EAAQuC,MACpBiB,MAAOxD,EAAQwD,OAAS,KAkBuBC,CAAezD,EAAS3K,IAdzD,SAAC2K,EAAS3K,GAAV,OAChB,kBAAC,KAAD,CACEgO,QAASrD,EAAQqD,UAAW,EAC5BC,cAAetD,EAAQsD,eAAiB,aACxC9b,IAAKb,EAAQC,aACbmQ,KAAI,oBAAe1B,EAAf,SACJjL,KAAM4V,EAAQ5V,KAEdoZ,MAAK,IAAIpZ,KAAM,CAAEoY,KAAMxC,EAAQuC,QAAYvC,EAAQwD,SAM+BE,CAAU1D,EAAS3K,GAEjG2K,EAAQ2B,UACVuB,EAAcjY,KAAKkY,GAEnBF,EAAOhY,KAAKkY,MAKVJ,GAAWG,GAAkBD,I,+BAG7B,IACAtE,EAAevG,KAAK9N,MAApBqU,WACAgF,EAAYvL,KAAKtB,MAAjB6M,QAFD,EAI0CvL,KAAKwL,gBAA9CxC,EAJD,EAICA,aAAcvB,EAJf,EAIeA,WAAYC,EAJ3B,EAI2BA,WAJ3B,EAKuB1H,KAAKyL,eAAe,CAAEzC,iBAA5Cc,EALD,EAKCA,YAAaD,EALd,EAKcA,KAGf6B,EAAU,IAAKH,WAFIvL,KAAK2L,iBAEd,GAAsC7B,EAAtC,GADYD,EAAO,GAAKvD,EAAUsF,yBAA4B,IAQ9E,OACE,yBAAK9Y,IAAKkN,KAAKwG,cACb,kBAACqF,GAAA,EAAD,eAAOZ,QAAS,CAAEa,SAAU,GAAKC,MAAOxF,GAAgBmF,GACtD,kBAACM,GAAA,EAAD,iBAAevE,EAAf,CAA2BwD,SAAS,KACpC,kBAACe,GAAA,EAAD,iBAAetE,EAAf,CAA2BuD,SAAS,KACnCjL,KAAKiM,YAAY,IAClB,kBAACC,GAAA,EAAD,KAAalM,KAAKiM,YAAY,CAAEtB,SAAS,U,+CAzF/C,IAAMwB,EAAgCC,aAAgB,UAAW,UAC3DC,EAA0B,CAC9BC,wBAAwB,EACxBC,gBAAiB,IACjBC,iBAAkB,IAClBC,eAAgB,GAChBC,qBAAqB,GAYvB,OATAL,EAAwBM,eACtB,kBAAC,KAAD,KACE,kBAACC,GAAA,EAAD,CAAcC,cAAe,EAAGC,aAAc,CAAE5P,EAAG,SAAAwI,GAAO,OAAIA,EAAQqH,YAAc,EAAI,GAAG5P,EAAG,MAIlGkP,EAAwBhJ,OAAS,gBAAG2J,EAAH,EAAGA,MAAH,MAC9B,eAAe/Z,KAAK+Z,EAAMC,YAAcD,EAAM3F,UAAa2F,EAAMtH,cAAWvU,GAExE,CACL+b,mBAAoB,kBAACf,EAAkCE,Q,GA3OrC1K,IAAMC,W,6NA6V9B0E,GAAUzE,aAAe,CACvBoH,OAAQ,GACRjC,SAAU,GACVmG,OAAQ,IACR5B,QAAS,CACP6B,OAAQ,GACRC,KAAM,GACNC,MAAO,GACP5C,IAAK,IAEPzD,SAAU,KACVuB,sBAAsB,EACtBlB,oBAAqB,EACrBC,gBAAiB,KACjBC,gBAAiB,M,IC9Wb+F,G,2MAaJC,kBAAoB,WAAO,IAAD,IACoE,EAAK9O,MAAzF9D,EADgB,EAChBA,qBAAsBN,EADN,EACMA,oBAAqBxB,EAD3B,EAC2BA,iBAAkBlB,EAD7C,EAC6CA,UAAWK,EADxD,EACwDA,QAC1EwV,GAAM,mBACTxX,GAAagB,2BAA6B6B,GADjC,cAET7C,GAAamB,0BAA4BQ,EAAUmN,eAF1C,cAGT9O,GAAaoB,wBAA0BY,EAAQ8M,eAHtC,GAMZnK,EAAqB6S,GACrBnT,EAAoBmT,I,EAGtBlP,SAAW,SAAAC,GAAU,IACX1F,EAAqB,EAAK4F,MAA1B5F,iBACAzJ,EAAUmP,EAAVnP,MAEJyJ,IAAqBzJ,GACvBuK,GAAMW,SAAS,CACb/H,KAAM+C,GAAWC,KAAKL,2BACtB2D,iBAAkBzJ,K,mFA9BtB2Q,KAAKwN,sB,yCAGYtN,GACYF,KAAKtB,MAA1B5F,mBAEiBoH,EAAUpH,kBACjCkH,KAAKwN,sB,oCA6BM,IAAD,EACmDxN,KAAKtB,MAA5D/B,EADI,EACJA,UAAW7D,EADP,EACOA,iBAAkBlB,EADzB,EACyBA,UAAWK,EADpC,EACoCA,QAASgK,EAD7C,EAC6CA,EAD7C,EAEyD4D,GAA8B,CACjG7T,KAAM2K,EAAUC,QAChB2I,cAAe5I,EAAUG,UACzBwG,aAAcrB,EAAE,kCAChBiC,mBAAoBjC,EAAE,wCACtB+B,sBAAuB/B,EAAE,2CACzBrK,YACAK,UACAO,YAAaM,IARPsN,EAFI,EAEJA,yBAA0B7B,EAFtB,EAEsBA,UAAWC,EAFjC,EAEiCA,oBAW7C,OACE,kBAAC,GAAD,CACEgE,sBAAoB,EACpBlB,oBAAqBlB,EACrBoB,gBAAiB,gBAAG1B,EAAH,EAAGA,KAAH,OAAcD,GAA6BC,IAC5DkB,SAAU,CACR,CACEhV,KAAMuS,EACN0G,QAAS,CACPa,SAAU,IACV4B,OAAQ,CAAE5B,SAAU,MAEtB9B,YAAa/H,EAAE,sCACfsH,WAAW,GAEb,CACEvX,KAAMwS,EACNyG,QAAS,CACPa,SAAU,IACV4B,OAAQ,CAAE5B,SAAU,MAEtB3B,MAAOwD,KAAgBC,MACvB5D,YAAa/H,EAAE,+CACfwC,aAAa,Q,+BAQb,IAAD,EACkCzE,KAAKtB,MAAtC5F,EADD,EACCA,iBAAkBjF,EADnB,EACmBA,QAASoO,EAD5B,EAC4BA,EAC7B4L,EAAqBxH,KAE3B,OACE,kBAACyH,GAAA,EAAD,CAAM9M,UAAU,gCACd,kBAAC+M,GAAA,EAAD,KACE,4BAAK9L,EAAE,0BAA2B,qBAClC,kBAAC+L,GAAA,EAAD,KACE,kBAAC,GAAD,CACE3M,aAAYY,EAAE,sCAAuC,qBACrD1D,SAAUyB,KAAKzB,SACftM,QAAS4b,EACTzN,gBAAiBtH,EACjBoI,YAAae,EAAE,sCAAuC,yBAI5D,kBAACgM,GAAA,EAAD,KACE,yBAAKjN,UAAU,gCACZnN,GACC,kBAAC,IAAMqP,SAAP,KACE,kBAAC,WAAD,CAAUgL,KAAMC,eAAaC,KAC7B,kBAAC,WAAD,CAAUF,KAAMC,eAAaE,KAC7B,kBAAC,WAAD,CAAUH,KAAMC,eAAaG,KAC7B,kBAAC,WAAD,CAAUJ,KAAMC,eAAaI,OAG/B1a,GAAWmM,KAAKiM,qB,GA9GFtK,IAAMC,WAqJlC2L,GAAc1L,aAAe,CAC3BjH,qBAAsBrM,EAAQM,KAC9ByL,oBAAqB/L,EAAQM,KAC7B8N,UAAW,CACTC,QAAS,GACTE,UAAW,IAEbhE,iBAAkBL,GAAkB5C,MACpChC,SAAS,EACToO,EAAG1T,EAAQY,cACXyI,UAAWU,GAAYJ,gBAAgBN,UACvCK,QAASK,GAAYJ,gBAAgBD,SAGvC,IAcMuW,GAAyB3Q,GAdH,WAC1B,IAAM4Q,EAAmB/Q,GAAyBE,oBAElD,OAAO,SAAC1L,EAAOwM,GAAR,O,uVAAA,IACFxM,EAAMsH,UAAUb,UADd,GAEF8V,EAAiBvc,EAAOwM,MAIJ,SAAAnE,GAAQ,MAAK,CACtCK,qBAAsB,SAAAhH,GAAK,OAAI2G,EAASyB,GAAaxG,KAAKoF,qBAAqBhH,KAC/E0G,oBAAqB,SAAA1G,GAAK,OAAI2G,EAASyB,GAAaxG,KAAK8E,oBAAoB1G,OAGhDiK,CAA0D0P,ICvLnFmB,G,8NAIF,OACE,kBAAC,IAAMxL,SAAP,KACE,kBAAC,aAAD,KACE,kBAAC,kBAAD,CAAiBxI,MAAM,8BAEzB,kBAACiU,EAAA,EAAD,KACE,kBAAC,GAAD,Y,GAVahN,IAAMC,WAmB7B8M,GAAS7M,aAAe,GAExB,IAIM+M,GAAoB1Q,GAJF,iBAAO,IAEJ,iBAAO,IAERA,CAAmDwQ,ICTvEG,IACHtgB,EAAQmB,UAAa,IACrBnB,EAAQe,UAAY,MAZC,SAAC,GAA8B,IAA5Bwf,EAA2B,EAA3BA,SAAUC,EAAiB,EAAjBA,WAC7BC,EAAOF,EAASG,MAAM,KAE5BD,EAAKE,QAEL,IAAMC,EAAYJ,GAAc,IAAI/b,OAAOgc,EAAK,IAAI/b,KAAK8b,GAAc,EAAI,EAE3E,MAAM,IAAN,OAAWC,EAAKI,MAAM,EAAGD,GAAWE,KAAK,MAMzCC,CAAgB,CAAER,SAAU5e,OAAOqf,SAASC,SAAUT,WAAYxgB,EAAQoB,wBAMtE8f,GAAS,CACb,CACE/U,MAAO,2BACPhH,GAAI,OACJgc,GAAI,QACJC,UAAU,EACVhX,UAAW+V,GACXkB,OAAO,EACPC,SAAUthB,EAAQqB,cClChBkgB,G,uLACY,IACNC,EAAe/P,KAAKtB,MAApBqR,WAEJC,EAAe,KAEnB,MAAO,CACLC,aAAcF,EAAW3Q,IAAI,SAAA9B,GAC3B,OAAIA,EAAKuS,SACA,OAGa,IAAlBvS,EAAKqS,WACPK,EAAe,kBAAC,IAAD,CAAUN,GAAIpS,EAAKoS,MAIlC,kBAAC,IAAD,CAAOE,MAAOtS,EAAK4S,eAAiB5S,EAAKsS,MAAOxgB,IAAKkO,EAAKoS,GAAIV,KAAM1R,EAAKoS,GAAI/W,UAAW2E,EAAK3E,eAGjGqX,kB,+BAIM,IAAD,EACgChQ,KAAKiQ,eAApCA,EADD,EACCA,aAAcD,EADf,EACeA,aAEtB,OACE,yBAAKhP,UAAU,qBACb,kBAAC,IAAD,KACGiP,EACAD,Q,GA/BUrO,IAAMC,WA0C3BkO,GAAOjO,aAAe,CACpBkO,WAAYN,I,gEC5CRU,GAAa,SAAC,GAAD,IAAGlN,EAAH,EAAGA,SAAH,OACjB,kBAACmN,GAAA,EAAD,CAAMpP,UAAU,uBACd,kBAAC2N,EAAA,EAAD,CAAa0B,WAAS,GAAEpN,K,6NAQ5BkN,GAAWtO,aAAe,G,ICJpByO,G,2MACJC,OAAShiB,EAAQM,K,EAEjB2hB,SAAWjiB,EAAQM,K,EAiCnB4hB,gBAAkB,WAAO,IACfhB,EAAW,EAAK/Q,MAAhB+Q,OACFiB,EAAcxgB,OAAOqf,SAASC,SAASP,MAAM,KAAKG,OAAO,GAAG,GAElE,OAAOK,EAAOrQ,IAAI,SAAA9B,GAAI,O,uVAAA,IACjBA,EADiB,CAEpBqT,OAAQrT,EAAK5J,KAAOgd,O,mFArCH,IAAD,SACqD1Q,KAAKtB,MAApEkS,EADU,EACVA,QAAS/U,EADC,EACDA,cAAegV,EADd,EACcA,QAASxV,EADvB,EACuBA,SAAUoU,EADjC,EACiCA,OAAQxW,EADzC,EACyCA,QAE3D,KACM1K,EAAQiB,WAAajB,EAAQkB,cAC/B4L,EAASC,OAAOmH,OAGdlU,EAAQiB,YACV6L,EAASC,OAAOwV,YAAYF,GAC5BvV,EAASC,OAAOyV,WAAWtB,GAE3BzP,KAAKuQ,OAASlV,EAASC,OAAO0V,GAAG,iBAAkB,SAAAxS,GAAK,OAAIqS,EAAQhe,KAAR,WAAiB2L,EAAMyS,UACnFjR,KAAKwQ,SAAWK,EAAQK,OAAO,kBAAM7V,EAASC,OAAOyV,WAAW,EAAKN,sBAGlExX,EAAQC,YACX2C,IAEF,MAAOJ,GACFlN,EAAQmB,WACXgM,QAAQC,KAAR,+DAAqEF,EAAE1K,a,6CAM3EiP,KAAKuQ,SACLvQ,KAAKwQ,a,+BAaG,IAAD,EACuBxQ,KAAKtB,MAA3BuE,EADD,EACCA,SAAUhK,EADX,EACWA,QAElB,OAAIA,EAAQC,WACH,kBAAC,IAAMgK,SAAP,KAAiBD,GAGtBhK,EAAQpF,QAER,kBAAC,GAAD,KACE,kBAAC,aAAD,KACE,kBAAC,kBAAD,CAAiB6G,MAAM,UAEzB,kBAACyW,GAAA,EAAD,CAAY1W,QAAS2W,KAAkBC,KAAMrQ,UAAU,UACrD,kBAACsQ,GAAA,EAAD,CAAgBC,KAAMC,OACtB,kBAACC,GAAA,EAAD,4BAON,kBAAC,GAAD,KACE,kBAAC,aAAD,KACE,kBAAC,kBAAD,CAAiB/W,MAAM,kBAEzB,kBAACyW,GAAA,EAAD,CAAY1W,QAAS2W,KAAkBC,KAAMrQ,UAAU,UACrD,kBAACsQ,GAAA,EAAD,CAAgBC,KAAMG,OACtB,kBAACD,GAAA,EAAD,0F,GA1EmB7P,aA8G7B0O,GAAezO,aAAe,CAC5B+O,QAASriB,EAAQwB,QACjB8L,cAAetN,EAAQM,KACvBwM,SAAUnL,OAAOmL,SACjBoU,OAAQkC,GACR1Y,QAAS,CACPC,YAAY,EACZ9F,OAAO,EACPC,aAAc,GACdQ,SAAS,IAIb,IAMM+d,GAA0B1T,GAFR,SAAAhM,GAAK,MAAK,CAAE+G,QAAS/G,EAAMwD,KAAKuD,UAJ7B,SAAAsB,GAAQ,MAAK,CACtCsB,cAAe,kBAAMtB,EAASyB,GAAatG,KAAKmG,oBAKlBqC,CAAmDoS,IClI7EuB,G,6LAIF9V,EAFsBiE,KAAKtB,MAAnB3C,e,+BAKA,IACA5C,EAAW6G,KAAKtB,MAAhBvF,OAER,OACE,kBAAC,GAAD,CAAMA,OAASA,GAAUA,EAAO9J,OAAU,MACxC,kBAAC,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,GAAD,a,GAdMsS,IAAMC,WA6BxBiQ,GAAIhQ,aAAe,CACjB9F,UAAWxN,EAAQM,KACnBsK,OAAQ,IAGV,IAMM2Y,GAAe5T,GAFG,SAAAhM,GAAK,MAAK,CAAEiH,OAAQjH,EAAMwD,KAAKuD,QAAQE,SAJpC,SAAAoB,GAAQ,MAAK,CACtCwB,UAAW,kBAAMxB,EAASyB,GAAatG,KAAKqG,gBAKzBmC,CAAmD2T,I,OCvCxEE,iBACE,kBAAC,WAAD,CAAUnY,MAAOA,IACf,kBAAC,sBAAD,MACA,kBAAC,gBAAD,CAAeoY,SAAUnD,IACvB,kBAAC,GAAD,QAGJoD,SAASC,eAAe,W","file":"static/js/main.2902c7b6.chunk.js","sourcesContent":["const generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\nconst noop = Function.prototype;\n\nconst noopPromise = Promise.resolve({});\n\nconst noopTranslate = (key, value) => value || `t('${key}')`;\n\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\nconst helpers = {\n  generateId,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISPLAY_NAME,\n  UI_LOGGER_ID,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION\n};\n\nwindow[UI_LOGGER_ID] = { ...helpers };\n\nexport { helpers as default, helpers };\n","import _get from 'lodash/get';\nimport _join from 'lodash/join';\nimport _map from 'lodash/map';\n\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\nconst getMessageFromResults = (results, filterField = null) => {\n  const status = _get(results, 'response.status', results.status);\n  const statusResponse = _get(results, 'response.statusText', results.statusText);\n  const messageResponse = _get(results, 'response.data', results.message);\n  const detailResponse = _get(results, 'response.data', results.detail);\n\n  let serverStatus = '';\n\n  if (!messageResponse && !detailResponse) {\n    if (status < 400) {\n      return statusResponse;\n    }\n\n    if (status >= 500 || status === undefined) {\n      return `${status || ''} Server is currently unable to handle this request.`;\n    }\n  }\n\n  if (status >= 500 || status === undefined) {\n    serverStatus = status ? `${status} ` : '';\n  }\n\n  if (typeof messageResponse === 'string') {\n    return `${serverStatus}${messageResponse}`;\n  }\n\n  if (typeof detailResponse === 'string') {\n    return `${serverStatus}${detailResponse}`;\n  }\n\n  const getMessages = (messageObject, filterKey) => {\n    const obj = filterKey ? messageObject[filterKey] : messageObject;\n\n    return _map(\n      obj,\n      next => {\n        if (Array.isArray(next)) {\n          return getMessages(next);\n        }\n\n        return next;\n      },\n      null\n    );\n  };\n\n  return `${serverStatus}${_join(getMessages(messageResponse || detailResponse, filterField), '\\n')}`;\n};\n\nconst getStatusFromResults = results => {\n  let status = _get(results, 'response.status', results.status);\n\n  if (status === undefined) {\n    status = 0;\n  }\n\n  return status;\n};\n\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (process.env.REACT_APP_ENV === 'development' && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (process.env.REACT_APP_ENV === 'development' && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    metaData: action.meta && action.meta.data,\n    metaId: action.meta && action.meta.id,\n    metaQuery: action.meta && action.meta.query,\n    pending: false,\n    update: false\n  };\n\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          error: true,\n          errorMessage: getMessageFromResults(action.payload),\n          errorStatus: getStatusFromResults(action.payload)\n        }),\n        {\n          state\n        }\n      );\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: action.payload.headers && action.payload.headers.date,\n          data: (action.payload && action.payload.data) || {},\n          fulfilled: true\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  generatedPromiseActionReducer,\n  getMessageFromResults,\n  getStatusFromResults,\n  setStateProp\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\nconst notificationsOptions = {\n  dispatchDefaultFailure: true, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 5000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\nconst reduxMiddleware = [thunkMiddleware, promiseMiddleware, notificationsMiddleware(notificationsOptions)];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  thunkMiddleware\n};\n","const GET_GRAPH_CAPACITY_RHEL = 'GET_GRAPH_CAPACITY_RHEL';\nconst GET_GRAPH_REPORT_RHEL = 'GET_GRAPH_REPORT_RHEL';\nconst SET_GRAPH_RHEL_GRANULARITY = 'SET_GRAPH_RHEL_GRANULARITY';\n\nexport { GET_GRAPH_CAPACITY_RHEL, GET_GRAPH_REPORT_RHEL, SET_GRAPH_RHEL_GRANULARITY };\n","const USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\nexport { USER_AUTH, USER_LOCALE, USER_LOGOUT };\n","import * as rhelTypes from './rhelTypes';\nimport * as userTypes from './userTypes';\n\nconst reduxTypes = {\n  rhel: rhelTypes,\n  user: userTypes\n};\n\nexport { reduxTypes as default, reduxTypes, rhelTypes, userTypes };\n","const RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  DATE: 'date',\n  SOCKETS: 'sockets',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\nconst RHSM_API_RESPONSE_CAPACITY_META = 'meta';\nconst RHSM_API_RESPONSE_CAPACITY_META_TYPES = {\n  COUNT: 'count'\n};\n\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  DATE: 'date',\n  SOCKETS: 'sockets',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  HAS_DATA: 'has_data'\n};\nconst RHSM_API_RESPONSE_PRODUCTS_META = 'meta';\nconst RHSM_API_RESPONSE_PRODUCTS_META_TYPES = {\n  COUNT: 'count'\n};\n\nconst RHSM_API_QUERY_GRANULARITY = 'granularity';\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\nconst RHSM_API_QUERY_LIMIT = 'limit';\nconst RHSM_API_QUERY_OFFSET = 'offset';\nconst RHSM_API_QUERY_START_DATE = 'beginning';\nconst RHSM_API_QUERY_END_DATE = 'ending';\n\nconst rhelApiTypes = {\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n\nexport {\n  rhelApiTypes as default,\n  rhelApiTypes,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhelApiTypes';\n\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\nconst setRangedDateTime = ({ date, subtract, measurement }) => ({\n  startDate: moment\n    .utc(date)\n    .startOf(measurement)\n    .subtract(subtract, measurement)\n    .toDate(),\n  endDate: moment\n    .utc(date)\n    .startOf(measurement)\n    .toDate()\n});\n\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\n\n/**\n * Return a range of time based on granularity.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime\n};\n","import { reduxTypes, rhelTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { dateHelpers } from '../../common/dateHelpers';\n\nconst initialState = {\n  capacity: {},\n  component: {},\n  report: {}\n};\n\nconst rhelGraphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.rhel.SET_GRAPH_RHEL_GRANULARITY:\n      return reduxHelpers.setStateProp(\n        'component',\n        {\n          graphGranularity: action.graphGranularity,\n          ...dateHelpers.getRangedDateTime(action.graphGranularity)\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'capacity', type: rhelTypes.GET_GRAPH_CAPACITY_RHEL },\n          { ref: 'report', type: rhelTypes.GET_GRAPH_REPORT_RHEL }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nrhelGraphReducer.initialState = initialState;\n\nexport { rhelGraphReducer as default, initialState, rhelGraphReducer };\n","const initialState = {\n  view: {\n    data: [],\n    error: false,\n    errorStatus: null,\n    errorMessage: null,\n    pending: false,\n    fulfilled: false\n  }\n};\n\nconst rhelViewReducer = (state = initialState) => state;\n\nrhelViewReducer.initialState = initialState;\n\nexport { rhelViewReducer as default, initialState, rhelViewReducer };\n","import { userTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\nconst initialState = {\n  session: {\n    error: false,\n    errorMessage: null,\n    errorStatus: null,\n    pending: false,\n    fulfilled: false,\n    authorized: false,\n    locale: null\n  }\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.REJECTED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          error: action.error,\n          errorMessage: reduxHelpers.getMessageFromResults(action.payload),\n          errorStatus: reduxHelpers.getStatusFromResults(action.payload),\n          locale: state.session.locale\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.PENDING_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: state.session.locale,\n          pending: true\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          authorized: true,\n          fulfilled: true,\n          locale: state.session.locale,\n          username: action.username\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport rhelGraphReducer from './rhelGraphReducer';\nimport rhelViewReducer from './rhelViewReducer';\nimport userReducer from './userReducer';\n\nconst reducers = {\n  notifications,\n  rhelGraph: rhelGraphReducer,\n  rhelView: rhelViewReducer,\n  user: userReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport { reduxReducers as default, reduxReducers, rhelGraphReducer, rhelViewReducer, userReducer };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","const serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\nexport { serviceConfig as default, serviceConfig };\n","import axios from 'axios';\nimport serviceConfig from './config';\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {ForceStatus} 200\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {Enum} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {Enum} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {Object} links\n * @apiSuccess {Object} meta\n * @apiSuccess {Enum} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {Enum} meta.product\n * - RHEL\n * @apiSuccess {Number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2018-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2019-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-05-26T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-02T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-09T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-16T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-23T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-30T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-01-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-02-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-03-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"hypervisor\": 0,\n *           \"sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-04-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-05-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"hypervisor\": 50,\n *           \"sockets\": 48\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} QUARTERLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-01-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"hypervisor\": 50,\n *           \"sockets\": 48\n *         },\n *         {\n *           \"date\": \"2018-04-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2018-07-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2018-10-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"hypervisor\": 10,\n *           \"sockets\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 4,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"quarterly\"\n *       }\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getGraphReportsRhel = (params = {}) =>\n  axios(\n    serviceConfig({\n      url: process.env.REACT_APP_SERVICES_RHSM_REPORT_RHEL,\n      params\n    })\n  );\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2018-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getGraphCapacityRhel = (params = {}) =>\n  axios(\n    serviceConfig({\n      url: process.env.REACT_APP_SERVICES_RHSM_CAPACITY_RHEL,\n      params\n    })\n  );\n\nconst rhelServices = { getGraphCapacityRhel, getGraphReportsRhel };\n\nexport { rhelServices as default, rhelServices, getGraphCapacityRhel, getGraphReportsRhel };\n","import { rhelTypes } from '../types';\nimport rhelServices from '../../services/rhelServices';\n\nconst getGraphReportsRhel = (query = {}) => dispatch =>\n  dispatch({\n    type: rhelTypes.GET_GRAPH_REPORT_RHEL,\n    payload: rhelServices.getGraphReportsRhel(query),\n    meta: {\n      query,\n      notifications: {\n        rejected: {\n          variant: 'info',\n          title: 'Reporting connection has failed',\n          description: 'Product ID: Red Hat Enterprise Linux'\n        }\n      }\n    }\n  });\n\nconst getGraphCapacityRhel = (query = {}) => dispatch =>\n  dispatch({\n    type: rhelTypes.GET_GRAPH_CAPACITY_RHEL,\n    payload: rhelServices.getGraphCapacityRhel(query),\n    meta: {\n      query,\n      notifications: {\n        rejected: {\n          variant: 'info',\n          title: 'Capacity connection has failed',\n          description: 'Product ID: Red Hat Enterprise Linux'\n        }\n      }\n    }\n  });\n\nexport { getGraphCapacityRhel, getGraphReportsRhel };\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport axios from 'axios';\nimport serviceConfig from './config';\nimport { helpers } from '../common/helpers';\n\nconst authorizeUser = () => {\n  let returnMethod = helpers.noopPromise;\n\n  try {\n    if (!helpers.DEV_MODE) {\n      returnMethod = window.insights.chrome.auth.getUser;\n    }\n  } catch (e) {\n    if (!helpers.TEST_MODE) {\n      console.warn(`{ getUser } = insights.chrome.auth: ${e.message}`);\n    }\n  }\n\n  return returnMethod;\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *       \"version\": \"0.0.0\",\n *       \"gitDescription\": \"lorem ipsum\",\n *       \"artifact\": \"dolor sit\",\n *       \"name\": \"lorem\",\n *       \"group\": \"ipsum\",\n *       \"gitHash\": \"0000000000000000\"\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getApiVersion = () =>\n  axios(\n    serviceConfig({\n      url: process.env.REACT_APP_SERVICES_RHSM_VERSION\n    })\n  );\n\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\nconst getLocale = () => {\n  const defaultLocale = {\n    value: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n    key: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC\n  };\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\nconst userServices = { authorizeUser, getApiVersion, getLocale, logoutUser };\n\nexport { userServices as default, userServices, authorizeUser, getApiVersion, getLocale, logoutUser };\n","import { userTypes } from '../types';\nimport userService from '../../services/userServices';\n\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userService.authorizeUser()\n  });\n\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userService.getLocale()\n});\n\nexport { authorizeUser, getLocale };\n","import * as rhelActions from './rhelActions';\nimport * as userActions from './userActions';\n\nconst actions = {\n  rhel: rhelActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, rhelActions, userActions };\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\nimport _get from 'lodash/get';\nimport { rhelApiTypes } from '../../types/rhelApiTypes';\n\nconst rhelGraphCardCache = {};\n\nconst rhelGraph = state => state.rhelGraph;\n\nconst rhelGraphCardSelector = createSelector(\n  [rhelGraph],\n  rhelGraphReducer => {\n    const { capacity = {}, report = {} } = rhelGraphReducer || {};\n    const reportGranularity = _get(report, ['metaQuery', rhelApiTypes.RHSM_API_QUERY_GRANULARITY]);\n    const capacityGranularity = _get(capacity, ['metaQuery', rhelApiTypes.RHSM_API_QUERY_GRANULARITY]);\n    const granularity = reportGranularity || capacityGranularity || null;\n    const cachedGranularity = (granularity && rhelGraphCardCache[granularity]) || {};\n    const initialLoad = typeof cachedGranularity.initialLoad === 'boolean' ? cachedGranularity.initialLoad : true;\n\n    const updatedData = {\n      error: false,\n      fulfilled: false,\n      pending: false,\n      initialLoad,\n      graphData: {\n        sockets: [],\n        hypervisor: [],\n        threshold: []\n      },\n      ...cachedGranularity\n    };\n\n    if (granularity === null) {\n      updatedData.error = true;\n      return updatedData;\n    }\n\n    if (initialLoad) {\n      updatedData.error = report.error || capacity.error || false;\n      updatedData.pending = report.pending || capacity.pending || false;\n    }\n\n    if (capacity.fulfilled && report.fulfilled && granularity) {\n      const productsData = _get(report, ['data', rhelApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA], []);\n      const thresholdData = _get(capacity, ['data', rhelApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA], []);\n\n      productsData.forEach((value, index) => {\n        const date = moment\n          .utc(value[rhelApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE])\n          .startOf('day')\n          .toDate();\n\n        const checkThresholdDate = item => {\n          if (!item) {\n            return false;\n          }\n\n          const itemDate = moment\n            .utc(item[rhelApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.DATE])\n            .startOf('day')\n            .toDate();\n\n          return moment(date).isSame(itemDate);\n        };\n\n        updatedData.graphData.sockets.push({\n          date,\n          x: index,\n          y: Number.parseInt(value[rhelApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.PHYSICAL_SOCKETS], 10)\n        });\n\n        updatedData.graphData.hypervisor.push({\n          date,\n          x: index,\n          y: Number.parseInt(value[rhelApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HYPERVISOR_SOCKETS], 10)\n        });\n\n        updatedData.graphData.threshold.push({\n          date,\n          x: index,\n          y: Number.parseInt(\n            (checkThresholdDate(thresholdData && thresholdData[index]) &&\n              thresholdData[index][rhelApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.SOCKETS]) ||\n              0,\n            10\n          )\n        });\n      });\n\n      updatedData.initialLoad = false;\n      updatedData.fulfilled = true;\n\n      if (reportGranularity === capacityGranularity) {\n        rhelGraphCardCache[granularity] = { ...updatedData };\n      }\n    }\n\n    return updatedData;\n  }\n);\n\nconst makeRhelGraphCardSelector = () => rhelGraphCardSelector;\n\nconst graphCardSelectors = {\n  rhelGraphCard: rhelGraphCardSelector,\n  makeRhelGraphCard: makeRhelGraphCardSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, rhelGraphCardSelector, makeRhelGraphCardSelector };\n","import graphCardSelectors from './graphCardSelectors';\n\nconst reduxSelectors = {\n  graphCard: graphCardSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\nimport { helpers } from '../common/helpers';\n\nconst connectTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )((!helpers.TEST_MODE && withTranslation()(component)) || component);\n\nconst connectRouterTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connectTranslate(mapStateToProps, mapDispatchToProps)(component));\n\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(component)\n  );\n\nexport {\n  connect,\n  connectRouter,\n  connectRouterTranslate,\n  connectTranslate,\n  reduxActions,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  store\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options } = this.props;\n\n    if (!_isEqual(prevProps.options, options)) {\n      this.formatOptions();\n    }\n  }\n\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected = activateOptions.includes(convertedOption.value);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, placeholder, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isExpanded={isExpanded}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(option.title)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  placeholder: PropTypes.string,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  selectedOptions: null,\n  placeholder: 'Select option',\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\nconst translate = (str, placeholder = null) =>\n  (!helpers.TEST_MODE && i18next.t(str, placeholder)) || helpers.noopTranslate(str, placeholder);\n\n/**\n * ToDo: reevaluate the \"I18nextProvider\" on package update.\n * Appears to have timing issues, and subsequent firings of the\n * ajax/xhr setup. Reverting it to just a function call that populates behind\n * the scenes appears more predictable.\n */\nclass I18n extends React.Component {\n  componentDidMount() {\n    this.i18nInit();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { locale } = this.props;\n\n    if (locale !== prevProps.locale) {\n      this.i18nInit();\n    }\n  }\n\n  i18nInit() {\n    const { fallbackLng, loadPath, locale } = this.props;\n\n    i18next\n      .use(XHR)\n      .use(initReactI18next)\n      .init({\n        backend: {\n          loadPath\n        },\n        fallbackLng,\n        lng: locale,\n        debug: !helpers.PROD_MODE,\n        ns: ['default'],\n        defaultNS: 'default',\n        react: {\n          useSuspense: false\n        }\n      });\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return <React.Fragment>{children}</React.Fragment>;\n  }\n}\n\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, translate };\n","import moment from 'moment';\nimport numbro from 'numbro';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhelApiTypes';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * Chart Date Format (used in axis and tooltips)\n */\nconst chartDateDayFormatLong = 'MMMM D';\nconst chartDateDayFormatYearLong = 'MMMM D YYYY';\nconst chartDateDayFormatShort = 'MMM D';\nconst chartDateDayFormatYearShort = 'MMM D YYYY';\n\nconst chartDateMonthFormatLong = 'MMMM';\nconst chartDateMonthFormatYearLong = 'MMMM YYYY';\nconst chartDateMonthFormatShort = 'MMM';\nconst chartDateMonthFormatYearShort = 'MMM YYYY';\n\nconst chartDateQuarterFormatLong = 'MMMM';\nconst chartDateQuarterFormatYearLong = 'MMMM YYYY';\nconst chartDateQuarterFormatShort = 'MMM';\nconst chartDateQuarterFormatYearShort = 'MMM YYYY';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return translated labels based on granularity.\n *\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {string} tooltipLabel\n * @returns {Object}\n */\nconst getGraphLabels = ({ granularity, tooltipLabel }) => {\n  const labels = {\n    label: tooltipLabel\n  };\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      labels.previousLabel = translate('curiosity-graph.tooltipPreviousLabelWeekly');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      labels.previousLabel = translate('curiosity-graph.tooltipPreviousLabelMonthly');\n      break;\n    case GRANULARITY_TYPES.QUARTERLY:\n      labels.previousLabel = translate('curiosity-graph.tooltipPreviousLabelQuarterly');\n      break;\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      labels.previousLabel = translate('curiosity-graph.tooltipPreviousLabelDaily');\n      break;\n  }\n\n  return labels;\n};\n\n/**\n * Return a time allotment based on granularity\n *\n * @param {string} granularity enum based on rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getGranularityDateType = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return 'weeks';\n    case GRANULARITY_TYPES.MONTHLY:\n      return 'months';\n    case GRANULARITY_TYPES.QUARTERLY:\n      return 'quarters';\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return 'days';\n  }\n};\n\n/**\n * Apply label formatting\n *\n * @param {number} data\n * @param {number} previousData\n * @param {string} formattedDate\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {string} tooltipLabel\n * @returns {string}\n */\nconst getLabel = ({ data, previousData, formattedDate, granularity, tooltipLabel }) => {\n  const { label, previousLabel } = getGraphLabels({ granularity, tooltipLabel });\n  const previousCount = data - previousData;\n  const updatedLabel = `${data} ${label} ${formattedDate}`;\n\n  if (!previousData || previousCount === 0) {\n    return updatedLabel;\n  }\n\n  return `${updatedLabel}\\n ${previousCount > -1 ? '+' : ''}${previousCount} ${previousLabel}`;\n};\n\n/**\n * Apply Threshold Label formatting\n * @param {number} yValue the yaxis value\n * @param {string} tooltipThresholdLabel the threshold label\n */\nconst getThresholdLabel = ({ yValue, tooltipThresholdLabel }) => {\n  return `${tooltipThresholdLabel}: ${yValue}`;\n};\n\n// ToDo: when the API returns filler date values \"fillFormatChartData\" should be updated\n/**\n * Fill missing dates, and format graph data\n *\n * @param {Array} data\n * @param {Date} endDate\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {Date} startDate\n * @param {string} tooltipLabel\n * @param {string} tooltipLabelNoData\n * @param {string} tooltipThresholdLabel\n * @returns {Object}\n */\nconst fillFormatChartData = ({\n  data,\n  endDate,\n  granularity,\n  startDate,\n  tooltipLabel,\n  tooltipLabelNoData,\n  tooltipThresholdLabel\n}) => {\n  const granularityType = getGranularityDateType(granularity);\n  const granularityTick = getChartXAxisLabelIncrement(granularity);\n  const endDateStartDateDiff = moment(endDate).diff(startDate, granularityType);\n  const chartData = [];\n  const chartDataThresholds = [];\n\n  let isThreshold = false;\n  let previousData = null;\n  let previousYear = null;\n\n  for (let i = 0; i <= endDateStartDateDiff; i++) {\n    const momentDate = moment\n      .utc(startDate)\n      .add(i, granularityType)\n      .startOf(granularityType);\n    const stringDate = momentDate.toISOString();\n    const year = parseInt(momentDate.year(), 10);\n\n    const checkTick = i % granularityTick === 0;\n    const isNewYear = i !== 0 && checkTick && year !== previousYear;\n    let formattedDate;\n    let formattedDateTooltip;\n\n    if (granularityType === 'quarters') {\n      formattedDate = isNewYear\n        ? momentDate.format(chartDateQuarterFormatYearShort)\n        : momentDate.format(chartDateQuarterFormatShort);\n\n      formattedDateTooltip = isNewYear\n        ? momentDate.format(chartDateQuarterFormatYearLong)\n        : momentDate.format(chartDateQuarterFormatLong);\n    } else if (granularityType === 'months') {\n      formattedDate = isNewYear\n        ? momentDate.format(chartDateMonthFormatYearShort)\n        : momentDate.format(chartDateMonthFormatShort);\n\n      formattedDateTooltip = isNewYear\n        ? momentDate.format(chartDateMonthFormatYearLong)\n        : momentDate.format(chartDateMonthFormatLong);\n    } else {\n      formattedDate = isNewYear\n        ? momentDate.format(chartDateDayFormatYearShort)\n        : momentDate.format(chartDateDayFormatShort);\n\n      formattedDateTooltip = isNewYear\n        ? momentDate.format(chartDateDayFormatYearLong)\n        : momentDate.format(chartDateDayFormatLong);\n    }\n\n    const yAxis = (data[stringDate] && data[stringDate].data) || 0;\n    const yAxisThreshold = (data[stringDate] && data[stringDate].dataThreshold) || 0;\n\n    isThreshold = isThreshold || yAxisThreshold > 0;\n\n    const labelData = {\n      data: yAxis,\n      previousData,\n      formattedDate: formattedDateTooltip,\n      granularity,\n      tooltipLabel\n    };\n\n    const chartDataThresholdsItem = {\n      x: chartData.length,\n      y: yAxisThreshold\n    };\n\n    if (yAxisThreshold) {\n      chartDataThresholdsItem.tooltip = getThresholdLabel({ yValue: yAxisThreshold, tooltipThresholdLabel });\n    }\n\n    chartDataThresholds.push(chartDataThresholdsItem);\n\n    const chartDataItem = {\n      x: chartData.length,\n      y: yAxis,\n      xAxisLabel:\n        granularityType === 'months' || granularityType === 'quarters'\n          ? formattedDate.replace(/\\s/, '\\n')\n          : formattedDate\n    };\n\n    chartDataItem.tooltip = yAxis ? getLabel(labelData) : tooltipLabelNoData;\n\n    if ((!yAxis && yAxisThreshold) || !chartDataItem.tooltip) {\n      delete chartDataItem.tooltip;\n    }\n\n    chartData.push(chartDataItem);\n\n    previousData = yAxis;\n\n    if (checkTick && year !== previousYear) {\n      previousYear = year;\n    }\n  }\n\n  return { chartData, chartDataThresholds: (isThreshold && chartDataThresholds) || [] };\n};\n\n/**\n * ToDo: the y axis should be a total of all y axis values, an aspect of threshold\n * When multiple data facets are being displayed \"convertChartData\" should be cleaned up.\n */\n/**\n * Convert graph data to consumable format\n *\n * @param {Array} data list of available report data\n * @param {Array} dataThreshold list of available capacity data\n * @param {string} tooltipLabel the tooltip label\n * @param {string} tooltipLabelNoData\n * @param {string} tooltipThresholdLabel the tooltip threshold label\n * @param {date} startDate\n * @param {date} endDate\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {Object} Object array result converted { chartData: {...} chartDomain {...} }\n */\nconst convertChartData = ({\n  data,\n  dataThreshold,\n  tooltipLabel,\n  tooltipLabelNoData,\n  tooltipThresholdLabel,\n  startDate,\n  endDate,\n  granularity\n}) => {\n  const formattedData = {};\n\n  (data || []).forEach((value, index) => {\n    if (value) {\n      const stringDate = moment\n        .utc(value.date)\n        .startOf('day')\n        .toISOString();\n\n      formattedData[stringDate] = {\n        data: value.y,\n        dataThreshold: (dataThreshold && dataThreshold[index] && dataThreshold[index].y) || 0\n      };\n    }\n  });\n\n  const { chartData, chartDataThresholds } = fillFormatChartData({\n    data: formattedData,\n    endDate,\n    granularity,\n    startDate,\n    tooltipLabel,\n    tooltipLabelNoData,\n    tooltipThresholdLabel\n  });\n\n  return {\n    chartData,\n    chartDataThresholds,\n    chartXAxisLabelIncrement: getChartXAxisLabelIncrement(granularity)\n  };\n};\n\nconst yAxisTickFormat = tick => numbro(tick).format({ average: true, mantissa: 1, optionalMantissa: true });\n\nconst graphHelpers = {\n  yAxisTickFormat,\n  fillFormatChartData,\n  convertChartData,\n  getGranularityDateType,\n  getGraphLabels,\n  getChartXAxisLabelIncrement,\n  getLabel\n};\n\nexport {\n  graphHelpers as default,\n  graphHelpers,\n  yAxisTickFormat,\n  fillFormatChartData,\n  convertChartData,\n  getGranularityDateType,\n  getGraphLabels,\n  getChartXAxisLabelIncrement,\n  getLabel\n};\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhelApiTypes';\n\nconst getDateMenuOptionsType = () => [\n  { title: translate('curiosity-graph.dropdownDaily', 'Daily'), value: GRANULARITY_TYPES.DAILY },\n  { title: translate('curiosity-graph.dropdownWeekly', 'Weekly'), value: GRANULARITY_TYPES.WEEKLY },\n  { title: translate('curiosity-graph.dropdownMonthly', 'Monthly'), value: GRANULARITY_TYPES.MONTHLY },\n  { title: translate('curiosity-graph.dropdownQuarterly', 'Quarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n];\n\nconst rhelGraphCardTypes = {\n  getDateMenuOptions: getDateMenuOptionsType\n};\n\nexport { rhelGraphCardTypes as default, rhelGraphCardTypes, getDateMenuOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer, VictoryPortal } from 'victory';\nimport {\n  Chart,\n  ChartAxis,\n  ChartLegend,\n  ChartStack,\n  ChartThreshold,\n  ChartTooltip,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  containerRef = React.createRef();\n\n  componentDidMount() {\n    this.onResizeContainer();\n    window.addEventListener('resize', this.onResizeContainer);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  onResizeContainer = () => {\n    const containerElement = this.containerRef.current;\n\n    if (containerElement && containerElement.clientWidth) {\n      this.setState({ chartWidth: containerElement.clientWidth });\n    }\n  };\n\n  setDataSets() {\n    const { dataSets, tooltips } = this.props;\n\n    if (tooltips && dataSets && dataSets[0] && dataSets[0].data) {\n      const updatedDataSets = _cloneDeep(dataSets);\n\n      updatedDataSets[0].data = updatedDataSets[0].data.map((value, index) => {\n        const itemsByKey = {};\n        const items = [];\n\n        dataSets.forEach((data, i) => {\n          if (data.data && data.data[value.x]) {\n            itemsByKey[data.id || `dataSet-${i}`] = data.data[value.x];\n            items.push(data.data[value.x]);\n          }\n        });\n\n        return {\n          ...value,\n          _tooltip: tooltips({\n            x: value.x,\n            y: value.y,\n            index,\n            items,\n            itemsByKey,\n            dataSets: _cloneDeep(dataSets)\n          })\n        };\n      });\n\n      return updatedDataSets;\n    }\n\n    return dataSets;\n  }\n\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  // ToDo: the domain range needs to be update when additional datasets are added\n  getChartDomain({ isXAxisTicks }) {\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  getChartLegend() {\n    const { dataSets } = this.props;\n    const legendData = [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.legendLabel) {\n        const legendDataSettings = { symbol: {}, name: dataSet.legendLabel };\n\n        if (dataSet.isThreshold) {\n          legendDataSettings.symbol = { type: 'threshold' };\n        }\n\n        if (dataSet.color) {\n          legendDataSettings.symbol.fill = dataSet.color;\n        }\n\n        legendData.push(legendDataSettings);\n      }\n    });\n\n    return {\n      legendData,\n      legendOrientation: 'horizontal',\n      legendPosition: 'bottom-left',\n      legendComponent: <ChartLegend borderPadding={{ top: 20 }} />\n    };\n  }\n\n  static getContainerComponent() {\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const containerComponentProps = {\n      constrainToVisibleArea: true,\n      cursorDimension: 'x',\n      voronoiDimension: 'x',\n      voronoiPadding: 50,\n      mouseFollowTooltips: true\n    };\n\n    containerComponentProps.labelComponent = (\n      <VictoryPortal>\n        <ChartTooltip pointerLength={0} centerOffset={{ x: tooltip => tooltip.flyoutWidth / 2 + 5, y: 0 }} />\n      </VictoryPortal>\n    );\n\n    containerComponentProps.labels = ({ datum }) =>\n      (/^chartArea-0/.test(datum.childName) && datum._tooltip) || datum.tooltip || undefined;\n\n    return {\n      containerComponent: <VictoryVoronoiCursorContainer {...containerComponentProps} />\n    };\n  }\n\n  renderChart({ stacked = false }) {\n    const dataSets = this.setDataSets();\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => (\n      <ChartThreshold\n        animate={dataSet.animate || false}\n        interpolation={dataSet.interpolation || 'step'}\n        key={helpers.generateId()}\n        name={`chartArea-${index}-threshold`}\n        data={dataSet.data}\n        // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n        themeColor={dataSet.color}\n        style={dataSet.style || {}}\n      />\n    );\n\n    const areaChart = (dataSet, index) => (\n      <PfChartArea\n        animate={dataSet.animate || false}\n        interpolation={dataSet.interpolation || 'catmullRom'}\n        key={helpers.generateId()}\n        name={`chartArea-${index}-area`}\n        data={dataSet.data}\n        // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n        style={{ data: { fill: dataSet.color }, ...dataSet.style }}\n      />\n    );\n\n    dataSets.forEach((dataSet, index) => {\n      if (dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  render() {\n    const { chartWidth } = this.state;\n    const { padding } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const chartLegendProps = this.getChartLegend();\n    const containerComponent = (maxY > 0 && ChartArea.getContainerComponent()) || {};\n    const chartProps = { padding, ...chartLegendProps, ...chartDomain, ...containerComponent };\n\n    /**\n     * FixMe: PFCharts or Victory, unable to return null or empty content.\n     * General practice of returning \"null\" shouldn't necessarily melt the\n     * graph. To avoid issues we return an empty array\n     */\n    return (\n      <div ref={this.containerRef}>\n        <Chart animate={{ duration: 0 }} width={chartWidth} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n      </div>\n    );\n  }\n}\n\nChartArea.propTypes = {\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number.isRequired,\n          tooltip: PropTypes.string,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      color: PropTypes.string,\n      id: PropTypes.string,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  tooltips: PropTypes.func,\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\nChartArea.defaultProps = {\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  tooltips: null,\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHead, CardActions, CardBody } from '@patternfly/react-core';\nimport { ChartThemeColor } from '@patternfly/react-charts';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport { Select } from '../select/select';\nimport { connectTranslate, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers, graphHelpers } from '../../common';\nimport { rhelApiTypes, RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhelApiTypes';\nimport { rhelGraphCardTypes } from './rhelGraphCardTypes';\nimport ChartArea from '../chartArea/chartArea';\n\nclass RhelGraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphGranularity } = this.props;\n\n    if (graphGranularity !== prevProps.graphGranularity) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  onUpdateGraphData = () => {\n    const { getGraphCapacityRhel, getGraphReportsRhel, graphGranularity, startDate, endDate } = this.props;\n    const submit = {\n      [rhelApiTypes.RHSM_API_QUERY_GRANULARITY]: graphGranularity,\n      [rhelApiTypes.RHSM_API_QUERY_START_DATE]: startDate.toISOString(),\n      [rhelApiTypes.RHSM_API_QUERY_END_DATE]: endDate.toISOString()\n    };\n\n    getGraphCapacityRhel(submit);\n    getGraphReportsRhel(submit);\n  };\n\n  onSelect = event => {\n    const { graphGranularity } = this.props;\n    const { value } = event;\n\n    if (graphGranularity !== value) {\n      store.dispatch({\n        type: reduxTypes.rhel.SET_GRAPH_RHEL_GRANULARITY,\n        graphGranularity: value\n      });\n    }\n  };\n\n  // ToDo: evaluate show error toast on chart error\n  renderChart() {\n    const { graphData, graphGranularity, startDate, endDate, t } = this.props;\n    const { chartXAxisLabelIncrement, chartData, chartDataThresholds } = graphHelpers.convertChartData({\n      data: graphData.sockets,\n      dataThreshold: graphData.threshold,\n      tooltipLabel: t('curiosity-graph.tooltipSockets'),\n      tooltipLabelNoData: t('curiosity-graph.tooltipSocketsNoData'),\n      tooltipThresholdLabel: t('curiosity-graph.tooltipSocketsThreshold'),\n      startDate,\n      endDate,\n      granularity: graphGranularity\n    });\n\n    return (\n      <ChartArea\n        xAxisFixLabelOverlap\n        xAxisLabelIncrement={chartXAxisLabelIncrement}\n        yAxisTickFormat={({ tick }) => graphHelpers.yAxisTickFormat(tick)}\n        dataSets={[\n          {\n            data: chartData,\n            animate: {\n              duration: 250,\n              onLoad: { duration: 250 }\n            },\n            legendLabel: t('curiosity-graph.legendSocketsLabel'),\n            isStacked: true\n          },\n          {\n            data: chartDataThresholds,\n            animate: {\n              duration: 100,\n              onLoad: { duration: 100 }\n            },\n            color: ChartThemeColor.green,\n            legendLabel: t('curiosity-graph.legendSocketsThresholdLabel'),\n            isThreshold: true\n          }\n        ]}\n      />\n    );\n  }\n\n  // ToDo: combine \"curiosity-skeleton-container\" into a single class w/ --loading and BEM style\n  render() {\n    const { graphGranularity, pending, t } = this.props;\n    const getDateMenuOptions = rhelGraphCardTypes.getDateMenuOptions();\n\n    return (\n      <Card className=\"curiosity-usage-graph fadein\">\n        <CardHead>\n          <h2>{t('curiosity-graph.heading', 'CPU socket usage')}</h2>\n          <CardActions>\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder', 'Select date range')}\n              onSelect={this.onSelect}\n              options={getDateMenuOptions}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder', 'Select date range')}\n            />\n          </CardActions>\n        </CardHead>\n        <CardBody>\n          <div className=\"curiosity-skeleton-container\">\n            {pending && (\n              <React.Fragment>\n                <Skeleton size={SkeletonSize.xs} />\n                <Skeleton size={SkeletonSize.sm} />\n                <Skeleton size={SkeletonSize.md} />\n                <Skeleton size={SkeletonSize.lg} />\n              </React.Fragment>\n            )}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nRhelGraphCard.propTypes = {\n  getGraphCapacityRhel: PropTypes.func,\n  getGraphReportsRhel: PropTypes.func,\n  graphData: PropTypes.shape({\n    sockets: PropTypes.arrayOf(\n      PropTypes.shape({\n        date: PropTypes.instanceOf(Date),\n        x: PropTypes.number,\n        y: PropTypes.number\n      })\n    ),\n    threshold: PropTypes.arrayOf(\n      PropTypes.shape({\n        date: PropTypes.instanceOf(Date),\n        x: PropTypes.number,\n        y: PropTypes.number\n      })\n    )\n  }),\n  graphGranularity: PropTypes.oneOf([\n    GRANULARITY_TYPES.DAILY,\n    GRANULARITY_TYPES.WEEKLY,\n    GRANULARITY_TYPES.MONTHLY,\n    GRANULARITY_TYPES.QUARTERLY\n  ]),\n  pending: PropTypes.bool,\n  t: PropTypes.func,\n  startDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date)\n};\n\nRhelGraphCard.defaultProps = {\n  getGraphCapacityRhel: helpers.noop,\n  getGraphReportsRhel: helpers.noop,\n  graphData: {\n    sockets: [],\n    threshold: []\n  },\n  graphGranularity: GRANULARITY_TYPES.DAILY,\n  pending: false,\n  t: helpers.noopTranslate,\n  startDate: dateHelpers.defaultDateTime.startDate,\n  endDate: dateHelpers.defaultDateTime.endDate\n};\n\nconst makeMapStateToProps = () => {\n  const getRhelGraphCard = reduxSelectors.graphCard.makeRhelGraphCard();\n\n  return (state, props) => ({\n    ...state.rhelGraph.component,\n    ...getRhelGraphCard(state, props)\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getGraphCapacityRhel: query => dispatch(reduxActions.rhel.getGraphCapacityRhel(query)),\n  getGraphReportsRhel: query => dispatch(reduxActions.rhel.getGraphReportsRhel(query))\n});\n\nconst ConnectedRhelGraphCard = connectTranslate(makeMapStateToProps, mapDispatchToProps)(RhelGraphCard);\n\nexport { ConnectedRhelGraphCard as default, ConnectedRhelGraphCard, RhelGraphCard };\n","import React from 'react';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { PageSection } from '@patternfly/react-core';\nimport { connectRouter } from '../../redux';\nimport RhelGraphCard from '../rhelGraphCard/rhelGraphCard';\n\nclass RhelView extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    return (\n      <React.Fragment>\n        <PageHeader>\n          <PageHeaderTitle title=\"Red Hat Enterprise Linux\" />\n        </PageHeader>\n        <PageSection>\n          <RhelGraphCard />\n        </PageSection>\n      </React.Fragment>\n    );\n  }\n}\n\nRhelView.propTypes = {};\n\nRhelView.defaultProps = {};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = () => ({});\n\nconst ConnectedRhelView = connectRouter(mapStateToProps, mapDispatchToProps)(RhelView);\n\nexport { ConnectedRhelView as default, ConnectedRhelView, RhelView };\n","import { helpers } from '../../common/helpers';\nimport RhelView from '../rhelView/rhelView';\n\n/**\n * Return an assumed dynamic route baseName directory\n * based on a predictable platform directory depth of\n * /[OPTIONAL]/[environment]/[APP NAME]\n *\n * @param pathName {string}\n * @param pathPrefix {string}\n * @return {string}\n */\nconst dynamicBaseName = ({ pathName, pathPrefix }) => {\n  const path = pathName.split('/');\n\n  path.shift();\n\n  const pathSlice = pathPrefix && new RegExp(path[0]).test(pathPrefix) ? 3 : 2;\n\n  return `/${path.slice(0, pathSlice).join('/')}`;\n};\n\nconst baseName =\n  (helpers.TEST_MODE && '/') ||\n  (helpers.DEV_MODE && '/') ||\n  dynamicBaseName({ pathName: window.location.pathname, pathPrefix: helpers.UI_DEPLOY_PATH_PREFIX });\n\n/**\n * Return array of objects that describe navigation\n * @return {array}\n */\nconst routes = [\n  {\n    title: 'Red Hat Enterprise Linux',\n    id: 'rhel',\n    to: '/rhel',\n    redirect: true,\n    component: RhelView,\n    exact: true,\n    disabled: helpers.UI_DISABLED\n  }\n];\n\nexport { routes as default, baseName, dynamicBaseName, routes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { baseName, routes } from './routerTypes';\n\nclass Router extends React.Component {\n  renderRoutes() {\n    const { routesType } = this.props;\n\n    let redirectRoot = null;\n\n    return {\n      renderRoutes: routesType.map(item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        if (item.redirect === true) {\n          redirectRoot = <Redirect to={item.to} />;\n        }\n\n        return (\n          <Route exact={item.hasParameters || item.exact} key={item.to} path={item.to} component={item.component} />\n        );\n      }),\n      redirectRoot\n    };\n  }\n\n  render() {\n    const { renderRoutes, redirectRoot } = this.renderRoutes();\n\n    return (\n      <div className=\"curiosity-content\">\n        <Switch>\n          {renderRoutes}\n          {redirectRoot}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nRouter.propTypes = {\n  routesType: PropTypes.array\n};\n\nRouter.defaultProps = {\n  routesType: routes\n};\n\nexport { Router as default, Router, baseName, routes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Page, PageSection } from '@patternfly/react-core';\n\nconst PageLayout = ({ children }) => (\n  <Page className=\"layout-pf curiosity\">\n    <PageSection noPadding>{children}</PageSection>\n  </Page>\n);\n\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nPageLayout.defaultProps = {};\n\nexport { PageLayout as default, PageLayout };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant } from '@patternfly/react-core';\nimport { BanIcon, BinocularsIcon } from '@patternfly/react-icons';\nimport { connectRouter, reduxActions } from '../../redux';\nimport { helpers } from '../../common/helpers';\nimport { routes as appRoutes } from '../router/router';\nimport PageLayout from '../pageLayout/pageLayout';\n\nclass Authentication extends Component {\n  appNav = helpers.noop;\n\n  buildNav = helpers.noop;\n\n  componentDidMount() {\n    const { appName, authorizeUser, history, insights, routes, session } = this.props;\n\n    try {\n      if (helpers.PROD_MODE || helpers.REVIEW_MODE) {\n        insights.chrome.init();\n      }\n\n      if (helpers.PROD_MODE) {\n        insights.chrome.identifyApp(appName);\n        insights.chrome.navigation(routes);\n\n        this.appNav = insights.chrome.on('APP_NAVIGATION', event => history.push(`/${event.navId}`));\n        this.buildNav = history.listen(() => insights.chrome.navigation(this.buildNavigation()));\n      }\n\n      if (!session.authorized) {\n        authorizeUser();\n      }\n    } catch (e) {\n      if (!helpers.TEST_MODE) {\n        console.warn(`{ init, identifyApp, navigation } = insights.chrome: ${e.message}`);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.appNav();\n    this.buildNav();\n  }\n\n  buildNavigation = () => {\n    const { routes } = this.props;\n    const currentPath = window.location.pathname.split('/').slice(-1)[0];\n\n    return routes.map(item => ({\n      ...item,\n      active: item.id === currentPath\n    }));\n  };\n\n  render() {\n    const { children, session } = this.props;\n\n    if (session.authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return (\n        <PageLayout>\n          <PageHeader>\n            <PageHeaderTitle title=\"&nbsp;\" />\n          </PageHeader>\n          <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n            <EmptyStateIcon icon={BinocularsIcon} />\n            <EmptyStateBody>Authenticating...</EmptyStateBody>\n          </EmptyState>\n        </PageLayout>\n      );\n    }\n\n    return (\n      <PageLayout>\n        <PageHeader>\n          <PageHeaderTitle title=\"Unauthorized\" />\n        </PageHeader>\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          <EmptyStateIcon icon={BanIcon} />\n          <EmptyStateBody>You do not have permission to access reporting. Contact your administrator.</EmptyStateBody>\n        </EmptyState>\n      </PageLayout>\n    );\n  }\n}\n\nAuthentication.propTypes = {\n  appName: PropTypes.string,\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  insights: PropTypes.shape({\n    chrome: PropTypes.shape({\n      init: PropTypes.func,\n      identifyApp: PropTypes.func,\n      navigation: PropTypes.func,\n      on: PropTypes.func\n    })\n  }),\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string\n    })\n  ),\n  session: PropTypes.shape({\n    authorized: PropTypes.bool,\n    error: PropTypes.bool,\n    errorMessage: PropTypes.string,\n    pending: PropTypes.bool\n  })\n};\n\nAuthentication.defaultProps = {\n  appName: helpers.UI_NAME,\n  authorizeUser: helpers.noop,\n  insights: window.insights,\n  routes: appRoutes,\n  session: {\n    authorized: false,\n    error: false,\n    errorMessage: '',\n    pending: false\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser())\n});\n\nconst mapStateToProps = state => ({ session: state.user.session });\n\nconst ConnectedAuthentication = connectRouter(mapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router/router';\nimport Authentication from './authentication/authentication';\nimport PageLayout from './pageLayout/pageLayout';\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n\n    getLocale();\n  }\n\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <Authentication>\n          <PageLayout>\n            <Router />\n          </PageLayout>\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { baseName } from './components/router/routerTypes';\nimport { store } from './redux';\nimport App from './components/app';\nimport './styles/index.scss';\n\nrender(\n  <Provider store={store}>\n    <NotificationsPortal />\n    <BrowserRouter basename={baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
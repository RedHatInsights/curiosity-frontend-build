{"version":3,"sources":["components/graphCard/graphCardTypes.js","components/minHeight/minHeight.js","components/inventoryList/inventoryList.js","components/inventoryList/inventoryListHelpers.js","components/inventorySubscriptions/inventorySubscriptions.js","components/bannerMessages/bannerMessages.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardChartTooltip.js","components/graphCard/graphCardChartLegend.js","components/chartArea/chartArea.js","components/graphCard/graphCard.js","components/tabs/tabs.js","components/inventoryTabs/inventoryTab.js","components/inventoryTabs/inventoryTabs.js","components/toolbar/toolbarTypes.js","components/toolbar/toolbar.js","components/guestsList/guestsList.js","components/pagination/pagination.js","components/form/select.js"],"names":["graphCardTypes","getGranularityOptions","optionsType","selected","GRANULARITY_TYPES","DAILY","options","title","translate","value","WEEKLY","MONTHLY","QUARTERLY","MinHeight","containerRef","React","createRef","innerContainerRef","updatedContainerWidth","resizeObserver","helpers","noop","onResizeContainer","updateOnResize","props","clientWidth","current","setMinHeight","this","window","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","children","className","ref","Component","defaultProps","InventoryList","onColumnSort","data","updatedDirection","direction","id","productId","updatedSortColumn","Object","values","SORT_TYPES","find","_camelCase","SortByDirection","desc","SORT_DIRECTION_TYPES","DESCENDING","ASCENDING","store","dispatch","type","reduxTypes","query","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","RHSM_API_QUERY_TYPES","DIRECTION","viewId","SORT","onUpdateInventoryData","getHostsInventory","isDisabled","prevProps","_isEqual","filterGuestsData","filterInventoryData","listData","session","settings","updatedColumnHeaders","updatedRows","map","cellData","inventoryListHelpers","parseRowCellsListData","filters","parseInventoryFilters","onSort","columnHeaders","cells","guestsId","subscriptionManagerId","hasGuests","numberOfGuests","expandedContent","key","undefined","borders","variant","TableVariant","compact","rows","error","fulfilled","itemCount","pending","perPageDefault","t","context","updatedPerPage","LIMIT","isLastPage","OFFSET","Math","ceil","minHeightContentRefreshKey","isCompact","offsetType","limitType","tableProps","colCount","length","keys","colWidth","cellWidth","rowCount","renderTable","isFooter","dropDirection","UI_DISABLED_TABLE_HOSTS","makeMapStateToProps","reduxSelectors","inventoryList","makeInventoryList","ConnectedInventoryList","connect","reduxActions","rhsm","applySortFilters","filter","updatedFilter","hasSort","sortActive","sortDirection","asc","isSortDefault","sortDefaultInitialDirection","applyWrappableFilters","Array","isArray","transforms","push","wrappable","isSortable","assign","isWrappable","updatedCells","allCells","entries","forEach","headerUpdated","cellUpdated","cell","header","isValidElement","concat","PfCellWidth","obj","InventorySubscriptions","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","getSubscriptionsInventory","UI_DISABLED_TABLE_SUBSCRIPTIONS","subscriptionsList","makeSubscriptionsList","ConnectedInventorySubscriptions","BannerMessages","state","onUpdateData","getMessageReports","graphTallyQuery","apiQueries","parseRhsmQuery","dateHelpers","getRangedDateTime","startDate","endDate","GRANULARITY","START_DATE","toISOString","END_DATE","appMessages","messages","updatedMessages","message","AlertVariant","info","actionClose","onClose","setState","alerts","renderAlerts","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","appName","UI_DISPLAY_NAME","isInline","component","icon","iconPosition","target","href","makeAppMessages","ConnectedBannerMessages","getTooltipDate","date","granularity","momentDate","moment","utc","format","timestampQuarterFormats","yearShort","add","timestampMonthFormats","yearLong","timestampDayFormats","yAxisTickFormatFallback","tick","abs","updatedTick","updatedAbbr","pow","graphCardHelpers","getChartXAxisLabelIncrement","xAxisTickFormat","previousDate","formattedDate","isNewYear","Number","parseInt","year","replace","yAxisTickFormat","locale","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","GraphCardChartTooltip","datum","productLabel","itemsByKey","index","tempDataFacet","color","test","thresholdStringValue","hasInfinite","y","label","dataFactsValue","hasData","product","summary","colSpan","dataFacet","aria-hidden","backgroundColor","GraphCardChartLegend","onClick","chart","updatedToggle","toggle","graph","SET_GRAPH_LEGEND","legend","dataSets","isToggled","hide","chartId","isThreshold","labelContent","tooltipContent","checkIsToggled","button","Button","onKeyPress","tabIndex","visibility","borderTopColor","Tooltip","content","position","TooltipPosition","top","enableFlip","distance","entryDelay","exitDelay","Fragment","stroke","renderLegendItem","ConnectedGraphCardChartLegend","ChartArea","chartWidth","dataSetsToggle","tooltipRef","onHide","forceUpdate","onRevert","onToggle","getIsToggled","setResizeObserve","containerElement","ResizeObserver","observe","unobserve","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","x","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","item","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","floored","floor","log10","maxY","chartDomain","chartTooltip","tooltipDataSet","fill","_cloneDeep","mockDatum","tooltip","cloneElement","v","VictoryVoronoiCursorContainer","createContainer","parsedTooltipData","getTooltipData","globalContainerBounds","globalTooltipBounds","FlyoutComponent","containerBounds","getBoundingClientRect","tooltipBounds","right","xCoordinate","width","htmlContent","applyParsedTooltipData","height","display","xmlns","cursorDimension","labels","labelComponent","voronoiPadding","chartLegend","legendProps","revert","stacked","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","generateId","name","themeColor","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","tooltipComponent","containerComponent","renderTooltip","chartProps","Chart","duration","ChartAxis","renderChart","ChartStack","renderLegend","bottom","left","GraphCard","onUpdateGraphData","getGraphReportsCapacity","graphGranularity","getQueryGranularity","onGranularitySelect","event","SET_QUERY_RHSM_TYPES","filterGraphData","graphData","selectOptionsType","updatedGranularity","chartAreaProps","JSON","stringify","filtered","tempFiltered","onLoad","chartColorGreenDark","filteredGraphData","cardTitle","Card","CardHeader","CardTitle","Title","headingLevel","size","CardActions","aria-label","onSelect","selectedOptions","placeholder","CardBody","UI_DISABLED_GRAPH","graphCard","makeGraphCard","ConnectedGraphCard","Tabs","updatedActiveTab","updatedTabs","onTab","setTabData","tabs","_isEqualWith","valueA","valueB","toString","activeTab","defaultActiveTab","active","Tab","eventKey","TabTitleText","hasOverflowScroll","activeKey","mountOnEnter","unmountOnExit","inset","default","md","Grid","GridItem","span","renderTabs","InventoryTab","InventoryTabs","inventory","SET_INVENTORY_TAB","updatedChildren","Children","toArray","count","UI_DISABLED_TABLE","ConnectedInventoryTabs","toolbarTypes","SLA","SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","USAGE","USAGE_TYPES","DEVELOPMENT","DISASTER","PRODUCTION","UNSPECIFIED","Toolbar","onClear","hardFilterReset","dispatchActions","toolbar","SET_ACTIVE_FILTERS","activeFilters","Set","SET_QUERY_CLEAR","clearFilters","SET_FILTER_TYPE","currentFilter","setDispatch","onClearFilter","categoryTitle","categoryValue","updatedActiveFilters","updatedCurrentFilter","onCategorySelect","field","actions","resetPage","updatedActions","SET_QUERY_CLEAR_INVENTORY_LIST","getCurrentFilter","optionsSelected","filterOptions","setSelectFilter","ToolbarFilter","chips","deleteChip","categoryName","showToolbarItem","categoryOptions","categoryOptionsSelected","collapseListedFiltersBreakpoint","clearAllFilters","ToolbarContent","ToolbarToggleGroup","toggleIcon","breakpoint","ToolbarGroup","ToolbarItem","renderSelectFilter","filterType","UI_DISABLED_TOOLBAR","ConnectedToolbar","GuestsList","currentPage","limit","previousData","onUpdateGuestsData","getHostsInventoryGuests","updatedQuery","inventoryGuestsQuery","onScroll","scrollHeight","scrollTop","newPage","updatedData","prevState","scrollLoader","updatedHeight","renderLoader","guestsList","makeGuestsList","ConnectedGuestsList","Pagination","onPage","page","offsetDefault","offset","setOffset","setLimit","onPerPage","perPage","updatedPage","onSetPage","onPerPageSelect","ConnectedPagination","view","Select","isExpanded","titleSelection","updatedOptions","optionsIndex","findIndex","option","SelectVariant","single","updateSelected","opt","mockUpdatedOptions","mockTarget","selectedIndex","checkbox","checked","mockEvent","currentTarget","persist","expanded","formatOptions","_isPlainObject","activateOptions","convertedOption","text","textContent","includes","ariaLabel","isToggleText","pfSelectOptions","selections","isOpen","placeholderText","btoa","data-value","data-title"],"mappings":"iIAAA,qDAyBMA,EAAiB,CACrBC,sBAjBgC,SAAAC,GAChC,MAAoB,YAAhBA,EACK,CACLC,SAAUC,IAAkBC,MAC5BC,QAAS,CACP,CAAEC,MAAOC,YAAU,iCAAkCC,MAAOL,IAAkBC,MAAOF,UAAU,GAC/F,CAAEI,MAAOC,YAAU,kCAAmCC,MAAOL,IAAkBM,QAC/E,CAAEH,MAAOC,YAAU,mCAAoCC,MAAOL,IAAkBO,SAChF,CAAEJ,MAAOC,YAAU,qCAAsCC,MAAOL,IAAkBQ,aAKjF,CAAEN,QAAS,O,yICZdO,E,4MACJC,aAAeC,IAAMC,Y,EAErBC,kBAAoBF,IAAMC,Y,EAE1BE,sBAAwB,E,EAExBC,eAAiBC,IAAQC,K,EAgCzBC,kBAAoB,WAAO,IAAD,IAChBJ,EADgB,eAChBA,sBACAK,EAAmB,EAAKC,MAAxBD,eACFE,GAAc,YAAKX,oBAAL,mBAAmBY,eAAnB,eAA4BD,cAAe,EAE3DF,GAAkBE,IAAgBP,IACpC,EAAKA,sBAAwBO,EAC7B,EAAKE,cAAa,K,kEArCD,IAAD,OACVJ,EAAmBK,KAAKJ,MAAxBD,eACRM,OAAOC,YAAW,WAChB,EAAKH,kBAGHJ,GACFK,KAAKG,sB,2CAIa,IAAD,OACSH,KAAKJ,MAAzBQ,iBAGNH,OAAOC,YAAW,WAChB,EAAKH,oB,6CAMTC,KAAKT,mB,qCAwBsB,IAMrBc,EANKC,EAAe,wDACPC,EAAsBP,KAAKJ,MAAtCY,UADkB,EAEWR,KAAKd,aAAlCY,QAASW,OAFS,MAEI,GAFJ,IAGgBT,KAAKX,kBAAvCS,QAASY,OAHS,MAGS,GAHT,GAK1B,OAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAYE,SASVJ,GALFF,EADEC,GAC4B,OAAfI,QAAe,IAAfA,OAAA,EAAAA,EAAiBL,eAAgB,GAEvB,OAAVI,QAAU,IAAVA,OAAA,EAAAA,EAAYJ,eAAgB,KAI3CA,EAAeE,GAGjBE,EAAWE,MAAMH,UAAjB,UAAgCH,EAAhC,S,0CAOiB,IAAD,OAClBJ,OAAOW,iBAAiB,SAAUZ,KAAKN,mBACvCM,KAAKT,eAAiB,kBAAMU,OAAOY,oBAAoB,SAAU,EAAKnB,sB,+BAQ9D,IACAoB,EAAad,KAAKJ,MAAlBkB,SAER,OACE,yBAAKC,UAAU,sBAAsBC,IAAKhB,KAAKd,cAC7C,yBAAK8B,IAAKhB,KAAKX,mBAAoByB,Q,GA/FnB3B,IAAM8B,WAsH9BhC,EAAUiC,aAAe,CACvBd,iBAAiB,EACjBT,gBAAgB,EAChBa,UAAW,I,4XCtGPW,E,4MAsBJC,aAAe,SAACC,EAAD,GAA8B,IAGvCC,EAHkBC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GACzBC,EAAc,EAAK7B,MAAnB6B,UACFC,EAAoBC,OAAOC,OAAOC,KAAYC,MAAK,SAAAjD,GAAK,OAAIkD,IAAWlD,KAAW2C,KAGxF,GAAKE,EAAL,CAIA,OAAQH,GACN,KAAKS,IAAgBC,KACnBX,EAAmBY,IAAqBC,WACxC,MACF,QACEb,EAAmBY,IAAqBE,UAI5CC,IAAMC,SAAS,CAAC,aAEZC,KAAMC,IAAWC,MAAMC,qCAAqCC,IAAqBC,WACjFC,OAAQpB,GACPkB,IAAqBC,UAAYtB,GAJvB,aAOXiB,KAAMC,IAAWC,MAAMC,qCAAqCC,IAAqBG,MACjFD,OAAQpB,GACPkB,IAAqBG,KAAOpB,O,EAUnCqB,sBAAwB,WAAO,IAAD,EACgC,EAAKnD,MAAzDoD,EADoB,EACpBA,kBAAmBC,EADC,EACDA,WAAYxB,EADX,EACWA,UAAWgB,EADtB,EACsBA,OAE7CQ,GAAcxB,GACjBuB,EAAkBvB,EAAWgB,I,kEA7D/BzC,KAAK+C,0B,yCAGYG,GAAY,IAAD,EACClD,KAAKJ,MAA1B6B,EADoB,EACpBA,UAAWgB,EADS,EACTA,MAEfhB,IAAcyB,EAAUzB,WAAc0B,IAASV,EAAOS,EAAUT,QAClEzC,KAAK+C,0B,oCA+DM,IAAD,SAC0E/C,KAAKJ,MAAnFwD,EADI,EACJA,iBAAkBC,EADd,EACcA,oBAAqBC,EADnC,EACmCA,SAAUb,EAD7C,EAC6CA,MAAOc,EADpD,EACoDA,QAASC,EAD7D,EAC6DA,SACrEC,EAAuB,GAErBC,EAAcJ,EAASK,KAAI,YAAsB,IAAhBC,EAAe,sBACnBC,IAAqBC,sBAAsB,CAC1EC,QAASF,IAAqBG,sBAAsB,CAClDD,QAASV,EACTY,OAAQ,EAAK7C,aACbqB,UAEFmB,WACAL,YAPMW,EAD4C,EAC5CA,cAAeC,EAD6B,EAC7BA,MAUvBV,EAAuBS,EAEvB,IAAME,EAAQ,OAAGR,QAAH,IAAGA,OAAH,EAAGA,EAAUS,sBACvBC,GAAoB,OAARV,QAAQ,IAARA,OAAA,EAAAA,EAAUW,gBAAiB,GAAKH,EAOhD,MAJmC,oBAA/B,OAAOZ,QAAP,IAAOA,OAAP,EAAOA,EAAUc,aACnBA,EAAYd,EAASc,UAAT,eAAwBV,GAAxB,eAAyCL,KAGhD,CACLY,QACAK,gBACGF,GACC,kBAAC,IAAD,CACEG,IAAKL,EACLhB,iBAAkBA,EAClBmB,eAAc,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAUW,eAC1B/C,GAAI4C,EACJ3B,MAAOA,UAGXiC,MAIN,OACE,kBAAC,IAAD,CACEC,SAAO,EACPC,QAASC,IAAaC,QACtB/D,UAAU,2BACVmD,cAAeT,EACfsB,KAAMrB,M,+BAUF,IAAD,EAcH1D,KAAKJ,MAZPoF,EAFK,EAELA,MACA3B,EAHK,EAGLA,oBACA4B,EAJK,EAILA,UACAhC,EALK,EAKLA,WACAiC,EANK,EAMLA,UACA5B,EAPK,EAOLA,SACA6B,EARK,EAQLA,QACAC,EATK,EASLA,eACA3D,EAVK,EAULA,UACAgB,EAXK,EAWLA,MACA4C,EAZK,EAYLA,EACAxC,EAbK,EAaLA,OAGF,GAAII,EACF,OACE,kBAAC,IAAD,CAAMlC,UAAU,sCACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAWsE,EAAE,0BAA2B,CAAEC,QAAS,gBAM3D,IAAMC,GAAsB,OAAL9C,QAAK,IAALA,OAAA,EAAAA,EAAQE,IAAqB6C,SAAUJ,EAExDK,GADchD,EAAME,IAAqB+C,QAAUjD,EAAME,IAAqB6C,OAAS,GAAK,KAC/DG,KAAKC,KAAKV,EAAYK,GAGnDM,GACW,IAAdZ,GAAsBC,EAAYK,GAAlC,wBAAqEA,EAArE,aACc,IAAdN,GAAsBQ,GAAtB,wBAAqDF,EAArD,YADD,wBAEiBA,GAEnB,OACE,kBAAC,IAAD,CAAMxE,UAAU,4BACd,kBAAC,IAAD,CAAW0D,IAAI,kBAAkBrE,iBAAe,GAC9C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaW,UAAYiE,EAAS,OAAW,IAC3C,kBAAC,IAAD,CACEc,WAAS,EACT7C,WAAYkC,GAAWH,EACvBE,UAAWA,EACXzD,UAAWA,EACXoB,OAAQA,EACRuC,eAAgBG,EAChBQ,WAAYvD,IAAWC,MAAMC,qCAAqCC,IAAqB+C,QACvFM,UAAWxD,IAAWC,MAAMC,qCAAqCC,IAAqB6C,YAK9F,kBAAC,IAAD,CAAWf,IAAKoB,EAA4BzF,iBAAe,GACzD,kBAAC,IAAD,KACE,yBAAKW,UAAYiE,EAAS,OAAW,UAClCG,GACC,kBAAC,IAAD,CACEP,QAAQ,QACRqB,WAAY,CACVlF,UAAW,2BACXmF,UAA6B,OAAnB7C,QAAmB,IAAnBA,OAAA,EAAAA,EAAqB8C,UAAmB,OAAR7C,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAAM3B,OAAOyE,KAAK9C,EAAS,IAAI6C,QAAW,EAC/FE,UACsB,OAAnBhD,QAAmB,IAAnBA,OAAA,EAAAA,EAAqB8C,SAAU9C,EAAoBM,KAAI,qBAAG2C,cAA+B,GAC5FC,UAAkB,OAARjD,QAAQ,IAARA,OAAA,EAAAA,EAAU6C,SAAUZ,EAC9BX,QAASC,IAAaC,YAI1BK,GAAWnF,KAAKwG,iBAIxB,kBAAC,IAAD,CAAW/B,IAAI,kBAAkBrE,iBAAe,GAC9C,kBAAC,IAAD,CAAYW,UAAYiE,EAAS,OAAW,IAC1C,kBAAC,eAAD,CAAcyB,UAAQ,GACpB,kBAAC,IAAD,CACExD,WAAYkC,GAAWH,EACvBE,UAAWA,EACXzD,UAAWA,EACXoB,OAAQA,EACRuC,eAAgBG,EAChBmB,cAAc,KACdX,WAAYvD,IAAWC,MAAMC,qCAAqCC,IAAqB+C,QACvFM,UAAWxD,IAAWC,MAAMC,qCAAqCC,IAAqB6C,iB,GAtN1ErG,IAAM8B,WAsRlCE,EAAcD,aAAe,CAC3B8D,OAAO,EACPC,WAAW,EACX7B,iBAAkB,GAClBC,oBAAqB,GACrBL,kBAAmBxD,IAAQC,KAC3BwD,WAAYzD,IAAQmH,wBACpBzB,UAAW,EACX5B,SAAU,GACV6B,SAAS,EACTC,eAAgB,GAChB7B,QAAS,GACTC,SAAU,GACV6B,EAAGzG,IACHiE,OAAQ,iBASV,IASM+D,EAAsBC,IAAeC,cAAcC,oBAEnDC,EAAyBC,YAAQL,GAXZ,SAAAtE,GAAQ,MAAK,CACtCU,kBAAmB,SAACxB,EAAIiB,GAAL,OAAeH,EAAS4E,IAAaC,KAAKnE,kBAAkBxB,EAAIiB,QAUtDwE,CAAiD9F,I,0KCnU1EiG,EAAmB,SAAC,GAAyC,IAAD,IAAtCC,cAAsC,MAA7B,GAA6B,EAAzBpD,EAAyB,EAAzBA,OAAyB,IAAjBxB,aAAiB,MAAT,GAAS,EACxDjB,EAAO6F,EAAP7F,GACF8F,EAAa,eAAQD,GACrBE,EAAUD,EAAcrD,QAAUA,EAiBxC,IAfKqD,EAAcrD,QAAUA,IAC3BqD,EAAcrD,OAASA,GAKvBsD,GACoC,mBAA7BD,EAAcE,aADrB,OAEA/E,QAFA,IAEAA,OAFA,EAEAA,EAAQE,IAAqBG,QAC7Bf,IAAU,OAACU,QAAD,IAACA,OAAD,EAACA,EAAQE,IAAqBG,SAAWtB,IAEnD8F,EAAcE,YAAa,GAIzBD,IAAYD,EAAcG,gBAA1B,OAA2ChF,QAA3C,IAA2CA,OAA3C,EAA2CA,EAAQE,IAAqBC,YAC1E,cAAQH,QAAR,IAAQA,OAAR,EAAQA,EAAQE,IAAqBC,YACnC,KAAKV,IAAqBC,WACxBmF,EAAcG,cAAgBzF,IAAgBC,KAC9C,MACF,QACEqF,EAAcG,cAAgBzF,IAAgB0F,IAkBpD,OAZEH,GACCD,EAAcE,aACf,OAAC/E,QAAD,IAACA,OAAD,EAACA,EAAQE,IAAqBG,SACE,IAAhCwE,EAAcK,gBAEdL,EAAcE,YAAa,EAEvBF,EAAcM,8BAChBN,EAAcG,cAAgBH,EAAcM,8BAIzCN,GAGHO,EAAwB,SAAC,GAAqB,IAAD,IAAlBR,cAAkB,MAAT,GAAS,EAC3CC,EAAa,eAAQD,GAQ3B,OANIS,MAAMC,QAAQT,EAAcU,YAC9BV,EAAcU,WAAWC,KAAKC,KAE9BZ,EAAcU,WAAa,CAACE,KAGvBZ,GA2HHzD,EAAuB,CAC3BuD,mBACAS,wBACA7D,sBAlH4B,SAAC,GAAD,QAAGD,eAAH,MAAa,GAAb,EAAiBE,EAAjB,EAAiBA,OAAjB,IAAyBxB,aAAzB,MAAiC,GAAjC,SAC5B,YAAIsB,GAASJ,KAAI,SAAA0D,GACf,IAAMC,EAAa,eAAQD,GAU3B,OARIC,EAAca,YAChBxG,OAAOyG,OAAOd,EAAeF,EAAiB,CAAEC,OAAQC,EAAerD,SAAQxB,WAG7E6E,EAAce,aAChB1G,OAAOyG,OAAOd,EAAeO,EAAsB,CAAER,OAAQC,KAGxDA,MAuGTxD,sBA3F4B,SAAC,GAAmD,IAAD,IAAhDC,eAAgD,MAAtC,GAAsC,MAAlCH,gBAAkC,MAAvB,GAAuB,MAAnBL,eAAmB,MAAT,GAAS,EACzEE,EAAuB,GACvB6E,EAAe,GACfC,EAAW,GA6EjB,OA1EA5G,OAAO6G,QAAQ5E,GAAU6E,SAAQ,YAAmB,IAAD,mBAAhBhE,EAAgB,KAAX5F,EAAW,KACjD0J,EAAS9D,GAAO,CACd9F,MAAOC,YAAU,6BAA8B,CAAE0G,QAASb,IAC1D5F,SAGF4E,EAAqBwE,KAAKM,EAAS9D,GAAK9F,OACxC2J,EAAaL,KAAKpJ,OAIpB,OAAIkF,QAAJ,IAAIA,OAAJ,EAAIA,EAASoC,UACX1C,EAAqB0C,OAAS,EAC9BmC,EAAanC,OAAS,EAEtBpC,EAAQ0E,SAAQ,YAAqF,IAC/FC,EACAC,EAEc,QAJDnH,EAAiF,EAAjFA,GAAIoH,EAA6E,EAA7EA,KAAMtC,EAAuE,EAAvEA,UAAWuC,EAA4D,EAA5DA,OAAQ5E,EAAoD,EAApDA,OAAQuD,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,cAAeO,EAAiB,EAAjBA,WAI7EO,EAAS/G,KACXkH,EAAa,oBAAGH,EAAS/G,UAAZ,aAAG,EAAc7C,aAAjB,QAA0B6C,EACvCmH,EAAW,oBAAGJ,EAAS/G,UAAZ,aAAG,EAAc3C,aAAjB,QAA0B,IAInCgK,IACFH,EAAmC,oBAAXG,GAAyBA,EAAO,eAAKN,KAAgBM,IAIpD,kBAAlBH,GACkB,kBAAlBA,GACPvJ,IAAM2J,eAAeJ,MAErBA,EAAgB,CACd/J,MAAO+J,IAIXA,EAAcV,WAAa,GAEvBF,MAAMC,QAAQC,KAChBU,EAAcV,WAAaU,EAAcV,WAAWe,OAAzB,YAAoCf,KAGxC,kBAAd1B,GACToC,EAAcV,WAAWC,KAAKe,YAAY1C,IAGtB,oBAAXrC,IACTyE,EAAa,eACRA,EADQ,CAEXzE,OAAQ,SAAAgF,GAAG,OAAIhF,EAAO,eAAKsE,GAAN,eAAuBU,EAAvB,CAA4BzH,SACjDgG,aACAC,mBAKAmB,IACFD,EAA+B,oBAATC,GAAuBA,EAAK,eAAKL,GAAN,eAAuBhF,KAAeqF,IAG9D,kBAAhBD,GAAmD,kBAAhBA,GAA4BxJ,IAAM2J,eAAeH,MAC7FA,EAAc,CACZhK,MAAOgK,IAIXlF,EAAqBwE,KAAKS,GAC1BJ,EAAaL,KAAKU,OAIf,CACLzE,cAAeT,EACfU,MAAOmE,EACPjH,KAAK,eAAMkH,O,2WCrKTW,E,4MAsBJ9H,aAAe,SAACC,EAAD,GAA8B,IAGvCC,EAHkBC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GACzBC,EAAc,EAAK7B,MAAnB6B,UACFC,EAAoBC,OAAOC,OAAOC,KAAYC,MAAK,SAAAjD,GAAK,OAAIkD,IAAWlD,KAAW2C,KAGxF,GAAKE,EAAL,CAIA,OAAQH,GACN,KAAKS,IAAgBC,KACnBX,EAAmBY,IAAqBC,WACxC,MACF,QACEb,EAAmBY,IAAqBE,UAI5CC,IAAMC,SAAS,CAAC,aAEZC,KAAMC,IAAWC,MAAM0G,6CAA6CxG,IAAqBC,WACzFC,OAAQpB,GACPkB,IAAqBC,UAAYtB,GAJvB,aAOXiB,KAAMC,IAAWC,MAAM0G,6CAA6CxG,IAAqBG,MACzFD,OAAQpB,GACPkB,IAAqBG,KAAOpB,O,EAUnCqB,sBAAwB,WAAO,IAAD,EACwC,EAAKnD,MAAjEwJ,EADoB,EACpBA,0BAA2BnG,EADP,EACOA,WAAYxB,EADnB,EACmBA,UAAWgB,EAD9B,EAC8BA,OAErDQ,GAAcxB,GACjB2H,EAA0B3H,EAAWgB,I,kEA7DvCzC,KAAK+C,0B,yCAGYG,GAAY,IAAD,EACClD,KAAKJ,MAA1B6B,EADoB,EACpBA,UAAWgB,EADS,EACTA,MAEfhB,IAAcyB,EAAUzB,WAAc0B,IAASV,EAAOS,EAAUT,QAClEzC,KAAK+C,0B,oCA+DM,IAAD,SAC8C/C,KAAKJ,MAAvDyD,EADI,EACJA,oBAAqBC,EADjB,EACiBA,SAAUb,EAD3B,EAC2BA,MAAOc,EADlC,EACkCA,QAC1CE,EAAuB,GAErBC,EAAcJ,EAASK,KAAI,YAAsB,IAAhBC,EAAe,sBACnBC,IAAqBC,sBAAsB,CAC1EC,QAASF,IAAqBG,sBAAsB,CAClDD,QAASV,EACTY,OAAQ,EAAK7C,aACbqB,UAEFmB,WACAL,YAPMW,EAD4C,EAC5CA,cAAeC,EAD6B,EAC7BA,MAYvB,OAFAV,EAAuBS,EAEhB,CACLC,YAIJ,OACE,kBAAC,IAAD,CACEQ,SAAO,EACPC,QAASC,IAAaC,QACtB/D,UAAU,2BACVmD,cAAeT,EACfsB,KAAMrB,M,+BAUF,IAAD,EAcH1D,KAAKJ,MAZPoF,EAFK,EAELA,MACA3B,EAHK,EAGLA,oBACA4B,EAJK,EAILA,UACAhC,EALK,EAKLA,WACAiC,EANK,EAMLA,UACA5B,EAPK,EAOLA,SACA6B,EARK,EAQLA,QACAC,EATK,EASLA,eACA3D,EAVK,EAULA,UACAgB,EAXK,EAWLA,MACA4C,EAZK,EAYLA,EACAxC,EAbK,EAaLA,OAGF,GAAII,EACF,OACE,kBAAC,IAAD,CAAMlC,UAAU,sCACd,kBAAC,IAAD,KACE,kBAAC,IAAD,KAAWsE,EAAE,0BAA2B,CAAEC,QAAS,gBAM3D,IAAMC,GAAsB,OAAL9C,QAAK,IAALA,OAAA,EAAAA,EAAQE,IAAqB6C,SAAUJ,EAExDK,GADchD,EAAME,IAAqB+C,QAAUjD,EAAME,IAAqB6C,OAAS,GAAK,KAC/DG,KAAKC,KAAKV,EAAYK,GAGnDM,GACW,IAAdZ,GAAsBC,EAAYK,GAAlC,wBAAqEA,EAArE,aACc,IAAdN,GAAsBQ,GAAtB,wBAAqDF,EAArD,YADD,wBAEiBA,GAEnB,OACE,kBAAC,IAAD,CAAMxE,UAAU,4BACd,kBAAC,IAAD,CAAW0D,IAAI,kBAAkBrE,iBAAe,GAC9C,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaW,UAAYiE,EAAS,OAAW,IAC3C,kBAAC,IAAD,CACEc,WAAS,EACT7C,WAAYkC,GAAWH,EACvBE,UAAWA,EACXzD,UAAWA,EACXoB,OAAQA,EACRuC,eAAgBG,EAChBQ,WAAYvD,IAAWC,MAAM0G,6CAA6CxG,IAAqB+C,QAC/FM,UAAWxD,IAAWC,MAAM0G,6CAA6CxG,IAAqB6C,YAKtG,kBAAC,IAAD,CAAWf,IAAKoB,EAA4BzF,iBAAe,GACzD,kBAAC,IAAD,KACE,yBAAKW,UAAYiE,EAAS,OAAW,UAClCG,GACC,kBAAC,IAAD,CACEP,QAAQ,QACRqB,WAAY,CACVlF,UAAW,2BACXmF,UAA6B,OAAnB7C,QAAmB,IAAnBA,OAAA,EAAAA,EAAqB8C,UAAmB,OAAR7C,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAAM3B,OAAOyE,KAAK9C,EAAS,IAAI6C,QAAW,EAC/FE,UACsB,OAAnBhD,QAAmB,IAAnBA,OAAA,EAAAA,EAAqB8C,SAAU9C,EAAoBM,KAAI,qBAAG2C,cAA+B,GAC5FC,UAAkB,OAARjD,QAAQ,IAARA,OAAA,EAAAA,EAAU6C,SAAUZ,EAC9BX,QAASC,IAAaC,YAI1BK,GAAWnF,KAAKwG,iBAIxB,kBAAC,IAAD,CAAW/B,IAAI,kBAAkBrE,iBAAe,GAC9C,kBAAC,IAAD,CAAYW,UAAYiE,EAAS,OAAW,IAC1C,kBAAC,eAAD,CAAcyB,UAAQ,GACpB,kBAAC,IAAD,CACExD,WAAYkC,GAAWH,EACvBE,UAAWA,EACXzD,UAAWA,EACXoB,OAAQA,EACRuC,eAAgBG,EAChBmB,cAAc,KACdX,WAAYvD,IAAWC,MAAM0G,6CAA6CxG,IAAqB+C,QAC/FM,UAAWxD,IAAWC,MAAM0G,6CAA6CxG,IAAqB6C,iB,GAnMzErG,IAAM8B,WA8P3CiI,EAAuBhI,aAAe,CACpC8D,OAAO,EACPC,WAAW,EACX5B,oBAAqB,GACrB+F,0BAA2B5J,IAAQC,KACnCwD,WAAYzD,IAAQ6J,gCACpBnE,UAAW,EACX5B,SAAU,GACV6B,SAAS,EACTC,eAAgB,GAChB7B,QAAS,GACT8B,EAAGzG,IACHiE,OAAQ,qBASV,IASM+D,EAAsBC,IAAeyC,kBAAkBC,wBAEvDC,EAAkCvC,YAAQL,GAXrB,SAAAtE,GAAQ,MAAK,CACtC8G,0BAA2B,SAAC5H,EAAIiB,GAAL,OAAeH,EAAS4E,IAAaC,KAAKiC,0BAA0B5H,EAAIiB,QAU7DwE,CAAiDiC,I,oOC3SnFO,E,4MACJC,MAAQ,G,EAmBRC,aAAe,WAAO,IAAD,EAC6B,EAAK/J,MAA7CgK,EADW,EACXA,kBAAmBnI,EADR,EACQA,UAAWgB,EADnB,EACmBA,MAC9BoH,EAAoBC,IAAWC,eAAetH,GAA9CoH,gBAER,GAAIpI,EAAW,CAAC,IAAD,IACkBuI,IAAYC,kBAAkB,WAArDC,EADK,EACLA,UAAWC,EADN,EACMA,QAQnBP,EAAkBnI,EAPK,eAClBoI,GADkB,mBAEpBlH,IAAqByH,YAAc5L,IAAkBC,OAFjC,cAGpBkE,IAAqB0H,WAAaH,EAAUI,eAHxB,cAIpB3H,IAAqB4H,SAAWJ,EAAQG,eAJpB,O,kEAtBzBtK,KAAK2J,iB,yCAGYzG,GAAY,IAAD,EACClD,KAAKJ,MAA1B6C,EADoB,EACpBA,MADoB,EACbhB,YAEGyB,EAAUzB,WAAc0B,IAASV,EAAOS,EAAUT,QAClEzC,KAAK2J,iB,qCA+BO,IAAD,OACLD,EAAU1J,KAAV0J,MADK,EAEqB1J,KAAKJ,MAA/B4K,EAFK,EAELA,YAAaC,EAFR,EAEQA,SACfC,EAAkB,GAiBxB,OAfID,EAAStE,QACXxE,OAAO6G,QAAQgC,GAAa/B,SAAQ,YAAmB,IAAD,mBAAhBhE,EAAgB,KAAX5F,EAAW,KACpD,IAAmB,IAAf6K,EAAMjF,KAA2B,IAAV5F,EAAgB,CACzC,IAAM8L,EAAUF,EAAS3I,MAAK,qBAAGN,KAAgBiD,KAE7CkG,GACFD,EAAgBzC,KAAhB,aACExD,OACGkG,QAOND,EAAgB/G,KAAI,YAA2D,IAAxDc,EAAuD,EAAvDA,IAAKkG,EAAkD,EAAlDA,QAAShM,EAAyC,EAAzCA,MAAyC,IAAlCiG,eAAkC,MAAxBgG,IAAaC,KAAW,EAC7EC,EAAc,kBAAC,IAAD,CAAwBC,QAAS,kBAAM,EAAKC,SAAL,eAAiBvG,GAAM,OAElF,OACE,kBAAC,IAAD,CAAOqG,YAAaA,EAAarG,IAAKA,EAAK9F,MAAOA,EAAOiG,QAASA,GAC/D+F,Q,+BAYP,IAAMM,EAASjL,KAAKkL,eAEpB,OAAID,EAAO9E,OACF,yBAAKpF,UAAU,6BAA6BkK,GAG9C,S,GArFkB9L,IAAM8B,WAkHnCwI,EAAevI,aAAe,CAC5B0I,kBAAmBpK,IAAQC,KAC3BgD,MAAO,GACPgI,SAAU,CACR,CACEjJ,GAAI,sBACJ7C,MAAOC,YAAU,sCACjB+L,QAAS/L,YACP,uCACA,CACE0G,QAA6D,KAApD9F,IAAQ2L,yCAAkD,sBACnEC,QAAS5L,IAAQ6L,iBAEnB,CACE,kBAAC,IAAD,CACEC,UAAQ,EACRC,UAAU,IACV3G,QAAQ,OACR4G,KAAM,kBAAC,IAAD,MACNC,aAAa,QACbC,OAAO,SACPC,KAAMnM,IAAQ2L,+CAc1B,IASMvE,EAAsBC,IAAe2D,YAAYoB,kBAEjDC,EAA0B5E,YAAQL,GAXb,SAAAtE,GAAQ,MAAK,CACtCsH,kBAAmB,SAACpI,EAAIiB,GAAL,OAAeH,EAAS4E,IAAaC,KAAKyC,kBAAkBpI,EAAIiB,QAUrDwE,CAAiDwC,I,gTChJ3EqC,EAAiB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACxBC,EAAaC,IAAOC,IAAIJ,GAE9B,OAAQC,GACN,KAAKxN,IAAkBQ,UACrB,MAAM,GAAN,OAAUiN,EAAWG,OAAOpC,IAAYqC,wBAAwBC,WAAhE,cAAgFL,EAC7EM,IAAI,EAAG,WACPH,OAAOpC,IAAYqC,wBAAwBC,YAEhD,KAAK9N,IAAkBO,QACrB,OAAOkN,EAAWG,OAAOpC,IAAYwC,sBAAsBC,UAE7D,KAAKjO,IAAkBM,OACrB,MAAM,GAAN,OAAUmN,EAAWG,OAAOpC,IAAY0C,oBAAZ,OAA5B,cAAwET,EACrEM,IAAI,EAAG,QACPH,OAAOpC,IAAY0C,oBAAoBJ,YAE5C,KAAK9N,IAAkBC,MACvB,QACE,OAAOwN,EAAWG,OAAOpC,IAAY0C,oBAAZ,QAmEzBC,EAA0B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC3BC,EAAMlH,KAAKkH,IAAID,GACjBE,EAAcF,EACdG,EAAc,GAgBlB,OAdIF,GAAOlH,KAAKqH,IAAI,GAAI,KACtBD,EAAc,IACdD,EAAcF,EAAOjH,KAAKqH,IAAI,GAAI,KACzBH,EAAMlH,KAAKqH,IAAI,GAAI,KAAOH,GAAOlH,KAAKqH,IAAI,GAAI,IACvDD,EAAc,IACdD,EAAcF,EAAOjH,KAAKqH,IAAI,GAAI,IACzBH,EAAMlH,KAAKqH,IAAI,GAAI,IAAMH,GAAOlH,KAAKqH,IAAI,GAAI,IACtDD,EAAc,IACdD,EAAcF,EAAOjH,KAAKqH,IAAI,GAAI,IACzBH,EAAMlH,KAAKqH,IAAI,GAAI,IAAMH,GAAOlH,KAAKqH,IAAI,GAAI,KACtDD,EAAc,IACdD,EAAcF,EAAOjH,KAAKqH,IAAI,GAAI,IAG9B,GAAN,OAAUF,GAAV,OAAwBC,IA0BpBE,EAAmB,CACvBC,4BAzJkC,SAAAlB,GAClC,OAAQA,GACN,KAAKxN,IAAkBC,MACrB,OAAO,EACT,KAAKD,IAAkBM,OACvB,KAAKN,IAAkBO,QACrB,OAAO,EACT,KAAKP,IAAkBQ,UACvB,QACE,OAAO,IAiJX8M,iBACAqB,gBArGsB,SAAC,GAA+C,IAA7CpB,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,YAAaY,EAAyB,EAAzBA,KAAMQ,EAAmB,EAAnBA,aAClD,GAAKrB,GAASC,EAAd,CAIA,IAGIqB,EAHEpB,EAAaC,IAAOC,IAAIJ,GACxBuB,EACK,IAATV,GAAcW,OAAOC,SAASvB,EAAWwB,OAAQ,MAAQF,OAAOC,SAAStB,IAAOC,IAAIiB,GAAcK,OAAQ,IAG5G,OAAQzB,GACN,KAAKxN,IAAkBQ,UAKrBqO,GAJAA,EAAgBC,EACZrB,EAAWG,OAAOpC,IAAYqC,wBAAwBC,WACtDL,EAAWG,OAAOpC,IAAYqC,wBAAZ,QAEQqB,QAAQ,KAAM,MAC5C,MACF,KAAKlP,IAAkBO,QAKrBsO,GAJAA,EAAgBC,EACZrB,EAAWG,OAAOpC,IAAYwC,sBAAsBF,WACpDL,EAAWG,OAAOpC,IAAYwC,sBAAZ,QAEQkB,QAAQ,KAAM,MAC5C,MACF,KAAKlP,IAAkBM,OACvB,KAAKN,IAAkBC,MACvB,QAKE4O,GAJAA,EAAgBC,EACZrB,EAAWG,OAAOpC,IAAY0C,oBAAoBJ,WAClDL,EAAWG,OAAOpC,IAAY0C,oBAAZ,QAEQgB,QAAQ,aAAc,QAIxD,OAAOL,IAkEPM,gBAlBsB,SAAC,GAAkD,IAAhDf,EAA+C,EAA/CA,KAA+C,IAAzCgB,cAAyC,MAAhCpO,IAAQqO,kBAAwB,EACpEf,EAAW,UAAM,IAAIgB,KAAKC,aAAaH,EAAQ,CACjDI,sBAAuB,EACvBC,SAAU,UACVC,eAAgB,UACf9B,OAAOQ,IAMV,OAJIE,EAAY3G,OAAS,GAAK2G,EAAY3G,QAAU,UAAGyG,GAAOzG,SAC5D2G,EAAcH,EAAwB,CAAEC,UAGnCE,GAQPH,2B,kBCxJIwB,EAAwB,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAOpC,EAAmC,EAAnCA,YAAaqC,EAAsB,EAAtBA,aAAchJ,EAAQ,EAARA,EAC7DwD,EAAS,KACPxH,EAAO,GAF4D,GAG7C+M,GAAS,IAA7BE,kBAHiE,MAGpD,GAHoD,EAmCzE,OA9BA3M,OAAOyE,KAAKkI,GAAY7F,SAAQ,SAAChE,EAAK8J,GAAW,IAAD,EAC7B,EAAH,IAAVA,IACF1F,EAASiD,EAAe,CACtBC,KAAI,UAAEuC,EAAW7J,UAAb,aAAE,EAAiBpD,KAAK0K,KAC5BC,iBAIJ,IAAMwC,EAAgB,CACpBC,MAAK,UAAEH,EAAW7J,UAAb,aAAE,EAAiBgK,OAG1B,GAAI,aAAaC,KAAKjK,GAAM,CAAC,IAAD,MACpBkK,GACH,UAAAL,EAAW7J,UAAX,eAAiBpD,KAAKuN,cAAevJ,EAAE,4CAAxC,oBACCiJ,EAAW7J,UADZ,aACC,EAAiBpD,KAAKwN,SADvB,QAC4BxJ,EAAE,gCAEhCmJ,EAAcM,MAAQzJ,EAAE,kCACxBmJ,EAAc3P,MAAQ8P,MACjB,CAAC,IAAD,IACCI,GAC+B,KAAlC,UAAAT,EAAW7J,UAAX,eAAiBpD,KAAK2N,UAAqB3J,EAAE,iCAA9C,UAAiFiJ,EAAW7J,UAA5F,aAAiF,EAAiBpD,KAAKwN,IAAK,EAE9GL,EAAcM,MAAQzJ,EAAE,mBAAD,OAAoBZ,EAApB,SAAgC,CAAEwK,QAASZ,IAClEG,EAAc3P,MAAQkQ,EAGxB1N,EAAK4G,KAAKuG,MAIV,yBAAKzN,UAAU,mBACb,2BAAOmO,QAAS7J,EAAE,mCACdhE,EAAK8E,QAAU0C,GACf,+BACE,4BACE,wBAAIsG,QAAS,GAAItG,MAIrB,KACAxH,EAAK8E,QACL,+BACG9E,EAAKsC,KAAI,SAAAyL,GAAS,OACjB,wBAAI3K,IAAG,kBAAa2K,EAAUN,QAC5B,4BACE,yBACEO,eAAA,EACAtO,UAAU,kCACVJ,MAAO,CACL2O,gBAAiBF,EAAUX,OAAS,iBAGvCW,EAAUN,OAEb,4BAAKM,EAAUvQ,aAKrB,OAEDwC,EAAK8E,QAAUd,EAAE,qCAAwC,OAkClE8I,EAAsBjN,aAAe,CACnCkN,MAAO,GACPC,aAAc,GACdhJ,EAAGzG,K,gCCzGC2Q,E,4MAkBJC,QAAU,SAAAhO,GAAO,IAAD,EACY,EAAK5B,MAAvB6P,EADM,EACNA,MAAO5M,EADD,EACCA,OACT6M,EAAgBD,EAAME,OAAOnO,GAEnCa,IAAMC,SAAS,CACbC,KAAMC,IAAWoN,MAAMC,iBACvBC,OAAO,yBACDjN,EADA,YACUrB,GAAOkO,M,kEAxBN,IAAD,EACuB1P,KAAKJ,MAAtC6P,EADU,EACVA,MAAOrB,EADG,EACHA,MAAO0B,EADJ,EACIA,OAAQjN,EADZ,EACYA,OAC9BuL,EAAM2B,SAAStH,SAAQ,YAAa,IAAVjH,EAAS,EAATA,IACDsO,EAAO,GAAD,OAAIjN,EAAJ,YAAcrB,KAASiO,EAAMO,UAAUxO,KAGlEiO,EAAMQ,KAAKzO,Q,0CAmC4E,IAAD,OAAzE0O,EAAyE,EAAzEA,QAASzB,EAAgE,EAAhEA,MAAOxL,EAAyD,EAAzDA,WAAYkN,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,eAAkB,EACxDrQ,KAAKJ,MAA/B6P,EADkF,EAClFA,MAAOK,EAD2E,EAC3EA,OAAQjN,EADmE,EACnEA,OACjByN,EAAiBR,EAAO,GAAD,OAAIjN,EAAJ,YAAcqN,KAAcT,EAAMO,UAAUE,GAEnEK,EACJ,kBAACC,EAAA,EAAD,CACEhB,QAAS,kBAAM,EAAKA,QAAQU,IAC5BO,WAAY,kBAAM,EAAKjB,QAAQU,IAC/BnP,UAAU,sBACV2P,SAAU,EACVjM,IAAG,2BAAsByL,GACzBtL,QAAQ,OACR2G,UAAU,IACVtI,WAAYA,EACZuI,MACIvI,GAAcqN,IAAmB,kBAAC,IAAD,OAClCH,GACC,wBACEd,eAAA,EACAtO,UAAU,wBACVJ,MAAO,CACLgQ,WAAa1N,GAA4BqN,EAAd,SAA6C,UACxEM,eAAgBnC,MAIpB,yBACEY,eAAA,EACAtO,UAAU,cACVJ,MAAO,CACLgQ,WAAa1N,GAA4BqN,EAAd,SAA6C,UACxEhB,gBAAiBb,MAMxB2B,GAiBL,OAAIC,EAEA,kBAACQ,EAAA,EAAD,CACEpM,IAAG,4BAAuByL,GAC1BY,QAAS,2BAAIT,GACbU,SAAUC,IAAgBC,IAC1BC,YAAY,EACZC,SAAU,EACVC,WAAY,IACZC,UAAW,GAEVd,GAKAA,I,+BAQC,IAAD,SAC4BvQ,KAAKJ,MAAhCwO,EADD,EACCA,MAAOC,EADR,EACQA,aAAchJ,EADtB,EACsBA,EAE7B,OACE,kBAAC,IAAMiM,SAAP,KACGlD,EAAM2B,SAASpM,KAAI,YAA6C,IAA1CnC,EAAyC,EAAzCA,GAAI2O,EAAqC,EAArCA,YAAaoB,EAAwB,EAAxBA,OAAwB,IAAhBlQ,KACxC4B,SADwD,MAAT,GAAS,GAEtDnB,MAAK,gBAAG+M,EAAH,EAAGA,EAAGG,EAAN,EAAMA,QAAN,OAAqBH,GAAK,IAAiB,IAAZG,GAAsBH,GAAK,IAAqB,IAAhBsB,OAA0B,EAEhGC,EACHD,GACC9K,EAAE,CAAC,mBAAD,OAAoB7D,EAApB,2CAAkE,CAClEyN,QAASZ,EACT/I,QAAS+I,KAEbhJ,EAAE,CAAC,mBAAD,OAAoB7D,EAApB,oCAA2D,CAC3DyN,QAASZ,EACT/I,QAAS+I,IAGPgC,EACHF,GACC9K,EAAE,CAAC,mBAAD,OAAoB7D,EAApB,2DAAkF,CAClFyN,QAASZ,EACT/I,QAAS+I,KAEbhJ,EAAE,mBAAD,OAAoB7D,EAApB,iBAAuC,CAAEyN,QAASZ,EAAc/I,QAAS+I,IAE5E,OAAO,EAAKmD,iBAAiB,CAC3BtB,QAAS1O,EACTiN,MAAO8C,EACPnB,eACAnN,aACAkN,cACAE,2B,GA1JuBlR,IAAM8B,WAkMzCsO,EAAqBrO,aAAe,CAClCuO,MAAO,CACLQ,KAAMzQ,IAAQC,KACdkQ,OAAQnQ,IAAQC,KAChBuQ,UAAWxQ,IAAQC,MAErB2O,MAAO,CACL2B,SAAU,IAEZD,OAAQ,GACRzB,aAAc,GACdhJ,EAAGzG,IACHiE,OAAQ,mBAGV,IAEM4O,EAAgCxK,aAFd,SAAC,GAAD,MAAgB,CAAE6I,OAAlB,EAAGF,MAA6BE,UAElB7I,CAAyBsI,G,+EClMzDmC,E,4MACJhI,MAAQ,CAAEiI,WAAY,G,EAEtBC,eAAiB,G,EAEjBrS,eAAiBC,IAAQC,K,EAEzBP,aAAeC,IAAMC,Y,EAErByS,WAAa1S,IAAMC,Y,EAgBnB0S,OAAS,SAAAtQ,GACP,EAAKoQ,eAAL,eAA2B,EAAKA,eAAhC,eAAiDpQ,GAAK,IACtD,EAAKuQ,e,EAQPC,SAAW,WACT,EAAKJ,eAAiB,GACtB,EAAKG,e,EAUPE,SAAW,SAAAzQ,GACT,IAAMkO,GAAiB,EAAKkC,eAAepQ,GAI3C,OAHA,EAAKoQ,eAAL,eAA2B,EAAKA,eAAhC,eAAiDpQ,EAAKkO,IACtD,EAAKqC,cAEErC,G,EAQThQ,kBAAoB,WAAO,IACjBiS,EAAe,EAAKjI,MAApBiI,WADgB,GAEI,EAAKzS,aAAaY,SAAW,IAAjDD,mBAFgB,MAEF,EAFE,EAIpBA,IAAgB8R,GAClB,EAAK3G,SAAS,CAAE2G,WAAY9R,K,EAYhCqS,aAAe,SAAA1Q,GAAE,OAAI,EAAKoQ,eAAepQ,KAAO,G,kEAjE9CxB,KAAKmS,qB,6CAILnS,KAAKT,mB,yCAkEa,IAAD,OACX6S,EAAmBpS,KAAKd,aAAaY,QACnCuS,EAAmBpS,OAAnBoS,eAER,GAAID,GAAoBC,EAAgB,CACtC,IAAM9S,EAAiB,IAAI8S,EAAerS,KAAKN,mBAC/CH,EAAe+S,QAAQF,GACvBpS,KAAKT,eAAiB,kBAAMA,EAAegT,UAAUH,SAErDpS,KAAKN,oBACLO,OAAOW,iBAAiB,SAAUZ,KAAKN,mBACvCM,KAAKT,eAAiB,kBAAMU,OAAOY,oBAAoB,SAAU,EAAKnB,sB,sCASzD,IAAD,EAC8DM,KAAKJ,MAAzE4S,EADM,EACNA,oBAAqBrF,EADf,EACeA,gBAAiBQ,EADhC,EACgCA,gBAAiBoC,EADjD,EACiDA,SACzD0C,EAAa,GACbC,EAAa,GACfC,EAAgB5C,EAAS5J,QAAU4J,EAAS,GAAG1O,MAAS,GAgC5D,OA9BA0O,EAAStH,SAAQ,SAAAmK,GACXA,EAAQC,uBACVF,EAAeC,EAAQvR,SAI3BoR,EAAWK,gBAAkBH,EAAaI,QACxC,SAACC,EAAKlT,EAASyO,GAAf,OAA0BA,EAAQiE,IAAwB,EAAIQ,EAAIjK,OAAOjJ,EAAQmT,GAAKD,IACtF,IAGFP,EAAWtF,gBAAkB,SAAA+F,GAAS,OACnCP,EAAaO,IAAcP,EAAaO,GAAWC,YAAeD,GAEtC,oBAApB/F,IACTsF,EAAWtF,gBAAkB,SAAAP,GAC3B,IAAMwG,EAAaX,EAAWK,gBACxBO,EAAYD,EAAWE,QAAQ1G,GAC/B2G,EAAY,eAASZ,EAAaS,EAAWC,EAAY,KAAO,IAChEG,EAAQ,eAASb,EAAaS,EAAWC,EAAY,KAAO,IAC5DI,EAAI,eAASd,EAAa/F,IAAS,IAEzC,OAAOO,EAAgB,CAAEP,OAAM2G,eAAcE,OAAMD,eAIxB,oBAApB7F,IACT+E,EAAW/E,gBAAkB,SAAAf,GAAI,OAAIe,EAAgB,CAAEf,WAGlD,eACF6F,EADL,GAEKC,K,sCASU,IACPgB,EAAyB1T,KAAKJ,MAA9B8T,qBADM,EAGgD1T,KAAK2T,gBAA3Db,EAHM,EAGNA,gBAAiB3F,EAHX,EAGWA,gBAAiBQ,EAH5B,EAG4BA,gBACpCiG,EAAoB,CACxBC,gBAAiBH,GAEbI,EAAoB,CACxBC,eAAe,EACfC,UAAU,GAeZ,OAZIlB,IACFc,EAAkBR,WAAaN,GAG7B3F,IACFyG,EAAkBK,WAAa9G,GAG7BQ,IACFmG,EAAkBG,WAAatG,GAG1B,CACLuG,eAAgBpB,EAChBL,WAAYmB,EACZlB,WAAYoB,K,wCAUkB,IAAjBI,EAAgB,EAAhBA,aACPtC,EAAmB5R,KAAnB4R,eADuB,EAEF5R,KAAKJ,MAA1BuU,EAFuB,EAEvBA,OAAQpE,EAFe,EAEfA,SAEhB,GAAIpO,OAAOyE,KAAK+N,GAAQhO,OACtB,OAAOgO,EAGT,IAAMC,EAAkB,GAClBC,EAAqB,GACvBC,EAAc,EACdC,EAAc,EAEExE,EAAS1I,QAAO,SAAAmN,GAAG,OAAsB,IAAlBA,EAAIC,aAEnChM,SAAQ,SAAAmK,GAClB,IAAKhB,EAAegB,EAAQpR,KAAOoR,EAAQvR,KAAM,CAC/C,IAAIqT,EAAqB,EAEzB9B,EAAQvR,KAAKoH,SAAQ,SAAC5J,EAAO0P,GAC3BmG,EAAqB7V,GAASA,EAAMgQ,EAAI6F,EAAqB7V,EAAMgQ,EAAI6F,EAEnEnG,IAAUqE,EAAQvR,KAAK8E,OAAS,IAClCoO,GAAeG,UAMvB3E,EAAStH,SAAQ,SAAAmK,IACVhB,EAAegB,EAAQpR,KAAOoR,EAAQvR,OACzCiT,EAAc1B,EAAQvR,KAAK8E,OAASmO,EAAc1B,EAAQvR,KAAK8E,OAASmO,EAExE1B,EAAQvR,KAAKoH,SAAQ,SAAA5J,GACnB0V,EAAc1V,GAASA,EAAMgQ,EAAI0F,EAAc1V,EAAMgQ,EAAI0F,SAK1DL,IACHE,EAAgBnB,EAAI,CAAC,EAAGqB,GAAe,KAGzC,IAAMK,EAAUhP,KAAKqH,IAAI,GAAIrH,KAAKiP,MAAMjP,KAAKkP,MAAON,EAAc,IAAMA,GAAgB,MAOxF,OANAH,EAAgBvF,EAAI,CAAC,EAAGlJ,KAAKC,MAAM2O,EAAc,GAAKI,GAAWA,GAE7DhT,OAAOyE,KAAKgO,GAAiBjO,SAC/BkO,EAAmBF,OAASC,GAGvB,CACLU,KAAMP,EACNQ,YAAY,eAAMV,M,uCASJ,IACRzC,EAAmB5R,KAAnB4R,eADO,EAEoB5R,KAAKJ,MAAhCmQ,EAFO,EAEPA,SAAUiF,EAFH,EAEGA,aACdC,EAAiB,GA8BrB,OA5BID,GAAgBjF,GAAYA,EAAS,IAAMA,EAAS,GAAG1O,OACzD4T,EAAiBlF,EAAS,GAAG1O,KAAKsC,KAAI,SAACiP,EAASrE,GAC9C,IAAMD,EAAa,GAEnByB,EAAStH,SAAQ,SAAApH,IACVuQ,EAAevQ,EAAKG,KAAOH,EAAKA,MAAQA,EAAKA,KAAKkN,KACrDD,EAAWjN,EAAKG,IAAM,CACpBiN,MAAOpN,EAAKkQ,QAAUlQ,EAAK6T,MAAQ7T,EAAKoN,OAAS,GACjDpN,KAAM8T,IAAW9T,EAAKA,KAAKkN,SAKjC,IAAM6G,EAAY,CAChBhH,MAAO,CAAE6E,EAAGL,EAAQK,EAAGpE,EAAG+D,EAAQ/D,EAAGN,QAAOD,aAAYyB,SAAUoF,IAAWpF,KAG/E,MAAO,CACLkD,EAAGL,EAAQK,EACXpE,EAAG,KACHP,aACA+G,QACGlW,IAAM2J,eAAekM,IAAiB7V,IAAMmW,aAAaN,EAAnB,eAAsCI,KAC7EJ,EAAa,eAAKI,SAKnBH,I,sCAsBQ,IAAD,OACNrD,EAAmB5R,KAAnB4R,eADM,EAEqB5R,KAAKJ,MAAhCoV,EAFM,EAENA,aAAcjF,EAFR,EAEQA,SAEtB,IAAKiF,GAAgBrT,OAAOC,OAAOgQ,GAAgBvK,QAAO,SAAAkO,GAAC,OAAU,IAANA,KAAYpP,SAAW4J,EAAS5J,OAC7F,OAAO,KAGT,IAAMqP,EAAgCC,YAAgB,UAAW,UAC3DC,EAAoB1V,KAAK2V,iBAC3BC,EAAwB,GACxBC,EAAsB,GAOpBC,EAAkB,SAAA7M,GACtB,IAAM/J,EAAe,EAAKA,aAAaY,QACjC+R,EAAa,EAAKA,WAAW/R,QAC7BiW,EAAmB7W,GAAgBA,EAAa8W,yBAA4B,GAC5EC,EAAiBpE,GAAcA,EAAWmE,yBAA4B,GAExED,EAAgBG,QAClBN,EAAwBG,GAGtBE,EAAcC,QAChBL,EAAsBI,GAGxB,IAAIE,EAAclN,EAAIgK,EAAI,IAGxB2C,EAAsBM,MAAQL,EAAoBK,OAClDjN,EAAIgK,EAAI4C,EAAoBO,MAAQR,EAAsBM,MAAQ,KAElEC,EAAclN,EAAIgK,EAAI,GAAK4C,EAAoBO,OAGjD,IAAMC,EA5BuB,SAAC,GAAe,IAAbjI,EAAY,EAAZA,MAC1B/I,EAAIqQ,EAAkB5T,MAAK,SAAAyT,GAAC,OAAIA,EAAEtC,IAAM7E,EAAM6E,MAAM,GAC1D,OAAQ,OAAD5N,QAAC,IAADA,OAAA,EAAAA,EAAGgQ,UAAW,GA0BDiB,CAAuB,eAAKrN,IAEhD,OAAIoN,EAEA,2BACE,mCAAepD,EAAGkD,EAAatH,EAAG5F,EAAI4F,EAAI,IAAKuH,MAAM,OAAOG,OAAO,QACjE,yBAAKvV,IAAK,EAAK6Q,WAAYlR,MAAO,CAAE6V,QAAS,gBAAkBC,MAAM,gCAClEJ,KAOJ,6BAGT,OACE,kBAACb,EAAD,CACEkB,gBAAgB,IAChBC,OAAQ,SAAA1N,GAAG,OAAIA,GACf2N,eAAgB,kBAACd,EAAD,MAChBe,eAAgB,O,qCAUN,IAAD,EACqB7W,KAAKJ,MAA/BkX,EADK,EACLA,YAAa/G,EADR,EACQA,SAErB,IAAK+G,EACH,OAAO,KAGT,IAAMC,EAAc,CAClB3I,MAAO,CAAE2B,SAAUoF,IAAWpF,IAC9BN,MAAO,CACLQ,KAAMjQ,KAAK8R,OACXkF,OAAQhX,KAAKgS,SACbrC,OAAQ3P,KAAKiS,SACbjC,UAAWhQ,KAAKkS,eAIpB,OACG/S,IAAM2J,eAAegO,IAAgB3X,IAAMmW,aAAawB,EAAnB,eAAqCC,KAC3ED,EAAY,eAAKC,M,qCAUa,IAAD,IAAnBE,eAAmB,SACvBrF,EAAmB5R,KAAnB4R,eACA7B,EAAa/P,KAAKJ,MAAlBmQ,SACFmH,EAAS,GACTC,EAAgB,GA8EtB,OAZApH,EAAStH,SAAQ,SAACmK,EAASrE,GACzB,IAAKqD,EAAegB,EAAQpR,KAAOoR,EAAQvR,MAAQuR,EAAQvR,KAAK8E,OAAQ,CACtE,IAAMiR,EAAkBxE,EAAQzC,aAlEb,SAACyC,EAASrE,GAC/B,IAAM8I,EAAkB,CAAEhW,KAAM,IAkBhC,OAhBIuR,EAAQsC,OACVmC,EAAgBhW,KAAK6T,KAAOtC,EAAQsC,MAGlCtC,EAAQrB,SACV8F,EAAgBhW,KAAKkQ,OAASqB,EAAQrB,QAGpCqB,EAAQ0E,cACVD,EAAgBhW,KAAKiW,YAAc1E,EAAQ0E,aAGzC1E,EAAQ2E,kBACVF,EAAgBhW,KAAKkW,gBAAkB3E,EAAQ2E,iBAI/C,kBAACC,EAAA,EAAD,CACEC,QAAS7E,EAAQ6E,UAAW,EAC5BC,cAAe9E,EAAQ8E,eAAiB,OACxCjT,IAAKjF,IAAQmY,aACbC,KAAI,oBAAerJ,EAAf,cACJlN,KAAMuR,EAAQvR,KACdV,MAAK,eAAQiS,EAAQjS,OAAS,GAAzB,GAAiC0W,GAEtCQ,WAAYjF,EAAQiF,WACpBC,aAAclF,EAAQkF,eAqCuBC,CAAenF,EAASrE,IAhCzD,SAACqE,EAASrE,GAC1B,IAAM8I,EAAkB,CAAEhW,KAAM,IAchC,OAZIuR,EAAQsC,OACVmC,EAAgBhW,KAAK6T,KAAOtC,EAAQsC,MAGlCtC,EAAQrB,SACV8F,EAAgBhW,KAAKkQ,OAASqB,EAAQrB,QAGpCqB,EAAQ0E,cACVD,EAAgBhW,KAAKiW,YAAc1E,EAAQ0E,aAI3C,kBAAC,IAAD,CACEG,QAAS7E,EAAQ6E,UAAW,EAC5BC,cAAe9E,EAAQ8E,eAAiB,YACxCjT,IAAKjF,IAAQmY,aACbC,KAAI,oBAAerJ,EAAf,SACJlN,KAAMuR,EAAQvR,KACdV,MAAK,eAAQiS,EAAQjS,OAAS,GAAzB,GAAiC0W,GAEtCQ,WAAYjF,EAAQiF,WACpBC,aAAclF,EAAQkF,eAO0DE,CAAUpF,EAASrE,GAEjGqE,EAAQ6B,UACV0C,EAAclP,KAAKmP,GAEnBF,EAAOjP,KAAKmP,OAKVH,GAAWE,GAAkBD,I,+BAQ7B,IACAvF,EAAe3R,KAAK0J,MAApBiI,WADD,EAEsC3R,KAAKJ,MAA1CkX,EAFD,EAECA,YAAamB,EAFd,EAEcA,QAASJ,EAFvB,EAEuBA,WAFvB,EAI0C7X,KAAKkY,gBAA9ChE,EAJD,EAICA,aAAczB,EAJf,EAIeA,WAAYC,EAJ3B,EAI2BA,WAJ3B,EAKuB1S,KAAKmY,eAAe,CAAEjE,iBAA5Ca,EALD,EAKCA,YACFqD,EAAmB,CAAEC,mBANpB,EAKcvD,MACmC,GAAK9U,KAAKsY,sBAAoB5T,GAChF6T,EAAU,aAAKN,WAAYlD,EAAjB,GAAiCqD,GAEjD,OACE,yBACE5W,GAAG,sBACHT,UAAU,uDACVC,IAAKhB,KAAKd,cAEV,kBAACsZ,EAAA,EAAD,eAAOf,QAAS,CAAEgB,SAAU,GAAKrC,MAAOzE,EAAYkG,WAAYA,GAAgBU,GAC9E,kBAACG,EAAA,EAAD,iBAAejG,EAAf,CAA2BgF,SAAS,KACpC,kBAACiB,EAAA,EAAD,iBAAehG,EAAf,CAA2B+E,SAAS,KACnCzX,KAAK2Y,YAAY,IAClB,kBAACC,EAAA,EAAD,KAAa5Y,KAAK2Y,YAAY,CAAE1B,SAAS,MAE1CH,GAAe,yBAAK/V,UAAU,kDAAkDf,KAAK6Y,qB,GAngBtE1Z,IAAM8B,WAmkB9ByQ,EAAUxQ,aAAe,CACvB4V,YAAa,KACb9B,aAAc,KACdb,OAAQ,GACRpE,SAAU,GACVwG,OAAQ,IACR0B,QAAS,CACPa,OAAQ,GACRC,KAAM,GACN7C,MAAO,GACPjF,IAAK,IAEP4G,WAAY,OACZnE,sBAAsB,EACtBlB,oBAAqB,EACrBrF,gBAAiB,KACjBQ,gBAAiB,M,uBCzlBbqL,E,4MAkBJC,kBAAoB,WAAO,IAAD,EAC0C,EAAKrZ,MAA/DsZ,EADgB,EAChBA,wBAAyBjW,EADT,EACSA,WAAYxB,EADrB,EACqBA,UAAWgB,EADhC,EACgCA,MAClD0W,EAAmB,EAAKC,sBAE9B,IAAKnW,GAAckW,GAAoB1X,EAAW,CAAC,IAAD,IACjBuI,IAAYC,kBAAkBkP,GAArDjP,EADwC,EACxCA,UAAWC,EAD6B,EAC7BA,QAOnB+O,EAAwBzX,EANR,gCACbkB,IAAqB0H,WAAaH,EAAUI,eAD/B,cAEb3H,IAAqB4H,SAAWJ,EAAQG,eAF3B,GAGX7H,M,EAaT4W,oBAAsB,WAAiB,IAAhBC,EAAe,uDAAP,GACrBza,EAAUya,EAAVza,MACAgE,EAAW,EAAKjD,MAAhBiD,OAERR,IAAMC,SAAN,aACEC,KAAMC,IAAWC,MAAM8W,qBAAqB5W,IAAqByH,aACjEvH,UACCF,IAAqByH,YAAcvL,K,kEA7CtCmB,KAAKiZ,sB,yCAGY/V,GAAY,IAAD,EACClD,KAAKJ,MAA1B6B,EADoB,EACpBA,UAAWgB,EADS,EACTA,MAEfhB,IAAcyB,EAAUzB,WAAc0B,IAASV,EAAOS,EAAUT,QAClEzC,KAAKiZ,sB,4CA0Cc,IACbxW,EAAUzC,KAAKJ,MAAf6C,MACR,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAQE,IAAqByH,e,oCAavB,IAAD,EAC2EpK,KAAKJ,MAApF4Z,EADI,EACJA,gBAAiBC,EADb,EACaA,UAAWC,EADxB,EACwBA,kBAAmBrL,EAD3C,EAC2CA,aAAc5L,EADzD,EACyDA,MAAOI,EADhE,EACgEA,OACtEsW,EAAmBnZ,KAAKoZ,sBACtB7a,EAAaH,IAAeC,sBAAsBqb,GAAlDnb,SACFob,EAAqBR,GAAoB5a,EAUzCqb,EAAiB,CACrBlG,sBAAsB,EACtBlB,oBAAqBvF,EAAiBC,4BAA4ByM,GAClExM,gBAXsB,SAAC,GAAD,IAAGsG,EAAH,EAAGA,KAAMF,EAAT,EAASA,aAAc3G,EAAvB,EAAuBA,KAAvB,OACtBK,EAAiBE,gBAAgB,CAC/BP,OACAb,KAAM0H,EAAK1H,KACXqB,aAAcmG,EAAaxH,KAC3BC,YAAa2N,KAOfhM,gBAAiBV,EAAiBU,iBAqCpC,OACE,kBAAC,EAAD,eACElJ,IAAG,gBAAWoV,KAAKC,UAAUrX,KACzBmX,EAFN,CAGE7J,SAtCsB,SAAA1O,GACxB,IAAM0Y,EAAW,SAAAtV,GACf,IAAMuV,EAAe,CACnB3Y,KAAMA,EAAKoD,GACXjD,GAAIiD,EACJgT,QAAS,CACPgB,SAAU,IACVwB,OAAQ,CAAExB,SAAU,MAEtBnB,YAAa,EACb7C,WAAY,aAAa/F,KAAKjK,GAC9B0L,YAAa,aAAazB,KAAKjK,IAajC,MAVI,aAAaiK,KAAKjK,KACpBuV,EAAavC,QAAU,CACrBgB,SAAU,IACVwB,OAAQ,CAAExB,SAAU,MAEtBuB,EAAazI,OAAS2I,IAAoBrb,MAC1Cmb,EAAazC,gBAAkB,MAC/ByC,EAAa1C,YAAc,GAGtB0C,GAGT,OAAIR,EAAgBrT,OACXqT,EAAgB7V,KAAI,SAAA9E,GAAK,OAAI8C,OAAOyG,OAAO2R,EAASlb,EAAM2C,IAAK3C,MAGjE8C,OAAOyE,KAAK/E,GAAMsC,KAAI,SAAAc,GAAG,OAAIsV,EAAStV,MAOjC0V,CAAkBV,GAC5B3C,YAAa,gBAAGrH,EAAH,EAAGA,MAAOrB,EAAV,EAAUA,MAAV,OACX,kBAAC,EAAD,CAAsBqB,MAAOA,EAAOrB,MAAOA,EAAOC,aAAcA,EAAcxL,OAAQA,KAExFmS,aAAc,gBAAG5G,EAAH,EAAGA,MAAH,OACZ,kBAAC,EAAD,CAAuBA,MAAOA,EAAOpC,YAAa2N,EAAoBtL,aAAcA,U,+BAgBlF,IAAD,EAC2ErO,KAAKJ,MAA/Ewa,EADD,EACCA,UAAWtZ,EADZ,EACYA,SAAUkE,EADtB,EACsBA,MAAO/B,EAD7B,EAC6BA,WAAYkC,EADzC,EACyCA,QAASuU,EADlD,EACkDA,kBAAmBrU,EADrE,EACqEA,EAE5E,GAAIpC,EACF,OAAO,KAJF,IAOCvE,EAAYN,IAAeC,sBAAsBqb,GAAjDhb,QACFya,EAAmBnZ,KAAKoZ,sBAE9B,OACE,kBAACiB,EAAA,EAAD,CAAMtZ,UAAU,yBACd,kBAAC,IAAD,CAAW0D,IAAI,mBACb,kBAAC6V,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,MAC3BN,IAGL,kBAACO,EAAA,EAAD,CAAa5Z,UAAYiE,EAAS,OAAW,IAC1ClE,EACD,kBAAC,IAAD,CACE8Z,aAAYvV,EAAE,uCACdwV,SAAU7a,KAAKqZ,oBACf3a,QAASA,EACToc,gBAAiB3B,EACjB4B,YAAa1V,EAAE,4CAKvB,kBAAC,IAAD,CAAWZ,IAAI,iBACb,kBAACuW,EAAA,EAAD,KACE,yBAAKja,UAAYiE,EAAS,OAAW,UAClCG,GAAW,kBAAC,IAAD,CAAQP,QAAQ,WAC1BO,GAAWnF,KAAK2Y,sB,GArLRxZ,IAAM8B,WAsO9B+X,EAAU9X,aAAe,CACvBkZ,UAAW,KACXtZ,SAAU,KACVkE,OAAO,EACPwU,gBAAiB,GACjBN,wBAAyB1Z,IAAQC,KACjCga,UAAW,GACXxW,WAAYzD,IAAQyb,kBACpB9V,SAAS,EACTkJ,aAAc,GACdqL,kBAAmB,UACnBrU,EAAGzG,IACHiE,OAAQ,aASV,IASM+D,EAAsBC,IAAeqU,UAAUC,gBAE/CC,EAAqBnU,YAAQL,GAXR,SAAAtE,GAAQ,MAAK,CACtC4W,wBAAyB,SAAC1X,EAAIiB,GAAL,OAAeH,EAAS4E,IAAaC,KAAK+R,wBAAwB1X,EAAIiB,QAUtEwE,CAAiD+R,I,4PCnQtEqC,E,4MACJ3R,MAAQ,CACN4R,iBAAkB,KAClBC,YAAa,M,EAiCfC,MAAQ,YAAgB,IAAbjN,EAAY,EAAZA,MACDiN,EAAU,EAAK5b,MAAf4b,MAER,EAAKxQ,SACH,CACEsQ,iBAAkB/M,IAEpB,kBAAMiN,EAAM,CAAEjN,c,kEAlCI,OAFIvO,KAAK0J,MAArB6R,aAGNvb,KAAKyb,e,yCAIUvY,GAAY,IACrBwY,EAAS1b,KAAKJ,MAAd8b,KASHC,IAAazY,EAAUwY,KAAMA,GARf,SAACE,EAAQC,GAC1B,GAAsB,oBAAXD,GAA2C,oBAAXC,EACzC,OAAOD,EAAOE,aAAeD,EAAOC,eAOtC9b,KAAKyb,e,mCAyBK,IAAD,EACmCzb,KAAKJ,MAA3Cmc,EADG,EACHA,UAAWC,EADR,EACQA,iBAAkBN,EAD1B,EAC0BA,KACjCJ,EAAmBU,EAEjBT,EAAcG,EAAK/X,KAAI,WAA6B4K,GAAW,IAArC0N,EAAoC,EAApCA,OAAQnL,EAA4B,EAA5BA,QAASnS,EAAmB,EAAnBA,MAG/C,OAFA2c,EAAmBW,EAAS1N,EAAQ+M,EAGlC,kBAACY,EAAA,EAAD,CAAKzX,IAAK9F,EAAOwd,SAAU5N,EAAO5P,MAAO,kBAACyd,EAAA,EAAD,KAAezd,IACrDmS,MAKkB,kBAAdiL,IACTT,EAAmBS,GAGrB/b,KAAKgL,SAAS,CACZsQ,mBACAC,kB,mCASU,IAAD,SAC+Bvb,KAAK0J,MAAvC4R,EADG,EACHA,iBAAkBC,EADf,EACeA,YADf,EAE8Bvb,KAAKJ,MAAtCmB,EAFG,EAEHA,UAAWsb,EAFR,EAEQA,kBAEnB,OACE,kBAAC,IAAD,CACEtb,UAAS,wBAAqBsb,EAAuC,GAAlB,cAA1C,YAAkEtb,GAAa,IACxFub,UAAWhB,EACXT,SAAU,SAACvB,EAAO/K,GAAR,OAAkB,EAAKiN,MAAM,CAAElC,QAAO/K,WAChDgO,cAAY,EACZC,eAAa,EACbC,MAAO,CACLC,QAAS,YACTC,GAAI,YAGLpB,K,+BAWL,OACE,kBAACqB,EAAA,EAAD,CAAM7b,UAAU,4BACd,kBAAC8b,EAAA,EAAD,CAAUC,KAAM,IAAK9c,KAAK+c,mB,GA5Gf5d,IAAM8B,WA6IzBoa,EAAKna,aAAe,CAClB6a,UAAW,KACXhb,UAAW,GACXib,iBAAkB,EAClBK,mBAAmB,EACnBb,MAAOhc,IAAQC,KACfic,KAAM,I,YClKFsB,EAAe,SAAC,GAAD,EAAGf,OAAH,IAAWnb,EAAX,EAAWA,SAAX,EAAqBnC,MAArB,OAAiC,kBAAC,IAAM2S,SAAP,KAAiBxQ,IAkBvEkc,EAAa9b,aAAe,CAC1B+a,QAAQ,G,ICjBJgB,E,4MAQJzB,MAAQ,YAAgB,IAAbjN,EAAY,EAAZA,MACD9M,EAAc,EAAK7B,MAAnB6B,UAERY,IAAMC,SAAS,CACbC,KAAMC,IAAW0a,UAAUC,kBAC3BzB,KAAK,eACFja,EAAY8M,M,uDAWT,IAAD,EAC0DvO,KAAKJ,MAA9Dmc,EADD,EACCA,UAAWjb,EADZ,EACYA,SAAUkb,EADtB,EACsBA,iBAAkB/Y,EADxC,EACwCA,WAAYoC,EADpD,EACoDA,EAE3D,GAAIpC,EACF,OAAO,KAGT,IAAMma,EAAkBje,IAAMke,SAASC,QAAQxc,GAAU6C,KAAI,oBAAG/D,aAAH,MAAW,GAAX,QAAqB,CAChFqc,OAAQrc,EAAMqc,SAAU,EACxBnL,QAASlR,EAAMkB,SACfnC,MAAOiB,EAAMjB,UAGf,OACE,kBAAC,IAAM2S,SAAP,KACE,kBAACkJ,EAAA,EAAD,CAAOC,aAAa,KAAK1Z,UAAU,WAChCsE,EAAE,iCAAkC,CAAEkY,MAAOH,EAAgBjX,UAEhE,kBAAC,EAAD,CAAM4V,UAAWA,EAAWC,iBAAkBA,EAAkBR,MAAOxb,KAAKwb,MAAOE,KAAM0B,S,GA3CrEje,IAAM8B,WAqElCgc,EAAc/b,aAAe,CAC3B6a,UAAW,EACXC,iBAAkB,EAClB/Y,WAAYzD,IAAQge,kBACpBnY,EAAGzG,KAQL,IAEM6e,EAAyBxW,aAFP,SAAC,EAAD,SAAGiW,EAAH,EAAGA,UAAezb,EAAlB,EAAkBA,UAAlB,MAAmC,CAAEsa,UAAS,UAAEmB,EAAUxB,YAAZ,aAAE,EAAiBja,MAE1DwF,CAAyBgW,I,8QCtBlDS,EA/DiB,SAAApf,GACrB,OAAQA,GACN,KAAKqE,IAAqBgb,IACxB,MAAO,CACLpf,SAAU,KACVG,QAAS,CACP,CACEC,MAAOC,YAAU,gCACjBC,MAAO+e,IAAUC,SAEnB,CACElf,MAAOC,YAAU,iCACjBC,MAAO+e,IAAUE,UAEnB,CACEnf,MAAOC,YAAU,oCACjBC,MAAO+e,IAAUG,MAEnB,CACEpf,MAAOC,YAAU,6BACjBC,MAAO+e,IAAUI,QAIzB,KAAKrb,IAAqBsb,MACxB,MAAO,CACL1f,SAAU,KACVG,QAAS,CACP,CACEC,MAAOC,YAAU,sCACjBC,MAAOqf,IAAYC,aAErB,CACExf,MAAOC,YAAU,mCACjBC,MAAOqf,IAAYE,UAErB,CACEzf,MAAOC,YAAU,qCACjBC,MAAOqf,IAAYG,YAErB,CACE1f,MAAOC,YAAU,sCACjBC,MAAOqf,IAAYI,eAI3B,QACE,MAAO,CACL/f,SAAU,KACVG,QAAS,CACP,CACEC,MAAOC,YAAU,6BAA8B,CAAE0G,QAAS3C,IAAqBgb,MAC/E9e,MAAO8D,IAAqBgb,KAE9B,CACEhf,MAAOC,YAAU,6BAA8B,CAAE0G,QAAS3C,IAAqBsb,QAC/Epf,MAAO8D,IAAqBsb,W,QC1ClCM,E,4MAMJC,QAAU,WAAO,IAAD,EACNC,EAAoB,EAAK7e,MAAzB6e,gBACFC,EAAkB,CACtB,CAAEnc,KAAMC,IAAWmc,QAAQC,mBAAoBvd,KAAM,CAAEwd,cAAe,IAAIC,MAC1E,CACEvc,KAAMC,IAAWC,MAAMsc,gBACvB1d,KAAM,CACJ2d,cAAY,mBACTrc,IAAqBgb,IAAM,MADlB,cAEThb,IAAqBsb,MAAQ,MAFpB,MAQdQ,GACFC,EAAgBzW,KAAK,CAAE1F,KAAMC,IAAWmc,QAAQM,gBAAiB5d,KAAM,CAAE6d,cAAe,QAG1F,EAAKC,YAAYT,GAAiB,I,EASpCU,cAAgB,SAAAC,GAAkB,IAAD,EAC2B,EAAKzf,MAAvDif,EADuB,EACvBA,cAAeK,EADQ,EACRA,cAAeT,EADP,EACOA,gBAGvBa,GADS5B,IACyBhf,QAAQoD,MAAK,qBAAGnD,QAAsB0gB,MAAkB,IAAjGxgB,MAER,GAAKygB,EAAL,CAIA,IAAMC,EAAuB,IAAIT,IAAID,GACrCU,EAAoB,OAAQD,GAE5B,IAAMZ,EAAkB,CACtB,CAAEnc,KAAMC,IAAWmc,QAAQC,mBAAoBvd,KAAM,CAAEwd,cAAeU,IACtE,CACEhd,KAAMC,IAAWC,MAAMsc,gBACvB1d,KAAM,CACJ2d,aAAa,eACVM,EAAgB,SAMzB,GAAIb,EAAiB,CACnB,IAAMe,EAAwBD,EAAqB7E,KAAO,GAAKwE,GAAkB,KACjFR,EAAgBzW,KAAK,CAAE1F,KAAMC,IAAWmc,QAAQM,gBAAiB5d,KAAM,CAAE6d,cAAeM,KAG1F,EAAKL,YAAYT,GAAiB,K,EASpCe,iBAAmB,SAAAnG,GAAU,IACnBza,EAAUya,EAAVza,MACR,EAAKsgB,YAAY,CAAE5c,KAAMC,IAAWmc,QAAQM,gBAAiB5d,KAAM,CAAE6d,cAAergB,M,EAUtFgc,SAAW,YAAuB,IAApBvB,EAAmB,EAAnBA,MAAOoG,EAAY,EAAZA,MACXb,EAAkB,EAAKjf,MAAvBif,cACAhgB,EAAUya,EAAVza,MACF0gB,EAAuB,IAAIT,IAAID,GAAetS,IAAImT,GAExD,EAAKP,YACH,CACE,CACE5c,KAAMC,IAAWmc,QAAQC,mBACzBvd,KAAM,CAAEwd,cAAeU,IAEzB,CACEhd,KAAMC,IAAWC,MAAM8W,qBAAqBmG,GAC5Cre,KAAK,eAAIqe,EAAQ7gB,MAGrB,I,0DAUQ8gB,GAA6B,IAApBC,EAAmB,wDAC9B/c,EAAW7C,KAAKJ,MAAhBiD,OACFgd,GAAmB/X,MAAMC,QAAQ4X,IAAYA,GAAY,CAACA,IAAUhc,KAAI,gBAAGpB,EAAH,EAAGA,KAAMlB,EAAT,EAASA,KAAT,oBAC5EkB,OACAM,UACGxB,MAGDue,GACFC,EAAe5X,KAAK,CAClB1F,KAAMC,IAAWC,MAAMqd,iCAI3Bzd,IAAMC,SAASud,K,sCASDH,GAAQ,IAAD,EAIjBrY,EAHI5E,EAAUzC,KAAKJ,MAAf6C,MACF/D,EAAUgf,EAAwBgC,GAClCR,EAAgBlf,KAAK+f,mBAW3B,OAPE1Y,EADEqY,EACiC,kBAA1B,OAAOjd,QAAP,IAAOA,OAAP,EAAOA,EAAQid,KAAuBhhB,EAAQA,QAAQoD,MAAK,qBAAGjD,SAAiB,OAAK4D,QAAL,IAAKA,OAAL,EAAKA,EAAQid,OAE5FhhB,EAAQA,QAAQoD,MAAK,qBAAGjD,QAAsBqgB,KAKlD,CAAExgB,UAASshB,iBAFa,QAAN,EAAA3Y,SAAA,eAAQ1I,QAAS,CAAC0I,EAAO1I,SAAmB,OAAPD,QAAO,IAAPA,OAAA,EAAAA,EAASH,WAAY,CAACG,EAAQH,WAAc,M,yCAUxF,IAAD,MACwByB,KAAKJ,MAAtCsf,EADS,EACTA,cAAee,EADN,EACMA,cAEvB,OACEf,IAAa,UACbe,EAAcne,MAAK,mBAA+B,IAA/B,EAAGvD,mBADT,aACb,EAAyDiD,KAC/B,IAAzBye,EAAc9Z,SAAd,UAA8B8Z,EAAc,UAA5C,aAA8B,EAAkBze,M,4CAWlB,IAAD,OAATke,EAAS,EAAble,GACX6D,EAAMrF,KAAKJ,MAAXyF,EADwB,EAEKrF,KAAKkgB,gBAAgBR,GAAlDhhB,EAFwB,EAExBA,QAASshB,EAFe,EAEfA,gBACXd,EAAgBlf,KAAK+f,mBAE3B,OACE,kBAACI,EAAA,EAAD,CACE1b,IAAKib,EACLU,MAAOJ,EACPK,WAAYrgB,KAAKof,cACjBkB,aAAcjb,EAAE,6BAA8B,CAAEC,QAASoa,IACzDa,gBAAiBrB,IAAkBQ,GAEnC,kBAAC,IAAD,CACE9E,aAAYvV,EAAE,6BAA8B,CAAEC,QAASoa,IACvD7E,SAAU,SAAAvB,GAAK,OAAI,EAAKuB,SAAS,CAAEvB,QAAOoG,WAC1C5E,gBAAiBkF,EACjBjF,YAAa1V,EAAE,gCAAiC,CAAEC,QAASoa,IAC3DhhB,QAASA,EAAQA,a,+BAWf,IAAD,SACkCsB,KAAKJ,MAAtCqgB,EADD,EACCA,cAAehd,EADhB,EACgBA,WAAYoC,EAD5B,EAC4BA,EAEnC,GAAIpC,EACF,OAAO,KAJF,MAOwEjD,KAAKkgB,kBAAnEM,EAPV,EAOC9hB,QAA2C+hB,EAP5C,EAO2BT,gBAElC,OACE,kBAAC,IAAD,CACExe,GAAG,oBACHT,UAAU,sEACV2f,gCAAgC,KAChCC,gBAAiB3gB,KAAKwe,SAEtB,kBAACoC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAoBC,WAAY,kBAAC,IAAD,MAAgBC,WAAW,MACzD,kBAACC,EAAA,EAAD,CAAcpc,QAAQ,gBACM,IAAzBqb,EAAc9Z,QACb,kBAAC8a,EAAA,EAAD,KACE,kBAAC,IAAD,CACErG,aAAYvV,EAAE,8BACdwV,SAAU7a,KAAKyf,iBACf3E,gBAAiB2F,EACjB1F,YAAa1V,EAAE,iCACf3G,QAAS8hB,EAAgB9hB,QACzBoiB,WAAY,kBAAC,IAAD,SAIjBb,EAActc,KAAI,gBAAGnC,EAAH,EAAGA,GAAIjD,EAAP,EAAOA,SAAP,OAAsB,EAAK2iB,mBAAmB,CAAE1f,KAAIjD,wB,GAzO/DY,IAAM8B,WAkR5Bsd,EAAQrd,aAAe,CACrBuB,MAAO,GACPoc,cAAe,IAAIC,IACnBI,cAAe,KACfe,cAAe,CACb,CACEze,GAAImB,IAAqBgb,IACzBwD,WAAY,UAEd,CACE3f,GAAImB,IAAqBsb,MACzBkD,WAAY,SACZ5iB,UAAU,IAGdkgB,iBAAiB,EACjBxb,WAAYzD,IAAQ4hB,oBACpB/b,EAAGzG,IACHiE,OAAQ,WAYV,IAEMwe,EAAmBpa,aAFD,SAAC,EAAD,SAAG0X,EAAH,EAAGA,QAAa9b,EAAhB,EAAgBA,OAAhB,gCAAmC8b,EAAQ5a,eAA3C,aAAmC,EAAkBlB,MAEpDoE,CAAyBsX,I,yMCrT5C+C,E,4MACJ5X,MAAQ,CAAE6X,YAAa,EAAGC,MAAO,IAAKC,aAAc,I,EAmBpDC,mBAAqB,WAAO,IAAD,EACM,EAAKhY,MAA5B6X,EADiB,EACjBA,YAAaC,EADI,EACJA,MADI,EAEsB,EAAK5hB,MAA5C+hB,EAFiB,EAEjBA,wBAAyBlf,EAFR,EAEQA,MAAOjB,EAFf,EAEeA,GAExC,GAAIA,EAAI,CAAC,IAAD,EACAogB,EAAY,eACbnf,GADa,mBAEfE,IAAqB6C,MAAQgc,GAFd,cAGf7e,IAAqB+C,OAAS6b,EAAcC,GAAS,GAHtC,IAOlBG,EAAwBngB,EADSsI,IAAWC,eAAe6X,GAAnDC,wB,EAWZC,SAAW,SAAAxI,GAAU,IACX5N,EAAW4N,EAAX5N,OADU,EAE2B,EAAKhC,MAA1C6X,EAFU,EAEVA,YAAaC,EAFH,EAEGA,MAAOC,EAFV,EAEUA,aAFV,EAG4B,EAAK7hB,MAA3C2E,EAHU,EAGVA,eAAgBY,EAHN,EAGMA,QAAS7B,EAHf,EAGeA,SAE3BwV,EAASpN,EAAOqW,aAAerW,EAAOsW,YAActW,EAAOrL,aAEjE,GAAIkE,GAAkBgd,EAAc,GAAKC,GAAS1I,IAAW3T,EAAS,CACpE,IAAM8c,EAAUV,EAAc,EACxBW,EAAW,sBAAOT,GAAP,YAAyBne,GAAY,KAEtD,EAAK0H,SAAS,CACZyW,aAAcS,EACdX,YAAaU,M,kEAnDjBjiB,KAAK0hB,uB,yCAGYxe,EAAWif,GACJniB,KAAK0J,MAArB6X,cAEYY,EAAUZ,aAC5BvhB,KAAK0hB,uB,qCAiDO,IACNH,EAAgBvhB,KAAK0J,MAArB6X,YADK,EAEmCvhB,KAAKJ,MAA7CwD,EAFK,EAELA,iBAAkBE,EAFb,EAEaA,SAAU6B,EAFvB,EAEuBA,QAEpC,GAAIoc,EAAc,GAAKpc,EAAS,CAC9B,IAAMid,EACJ,kBAAC,IAAD,CACExd,QAAQ,QACRqB,WAAY,CACVtB,SAAS,EACTuB,UAA0B,OAAhB9C,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB+C,UAAmB,OAAR7C,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAAM3B,OAAOyE,KAAK9C,EAAS,IAAI6C,QAAW,EAC5FI,SAAU,EACV3B,QAASC,IAAaC,WAK5B,OAAO,yBAAK/D,UAAU,yCAAyCqhB,GAGjE,OAAO,O,oCAYM,IACLX,EAAiBzhB,KAAK0J,MAAtB+X,aADI,EAEoDzhB,KAAKJ,MAA7DwD,EAFI,EAEJA,iBAAkBE,EAFd,EAEcA,SAAUiB,EAFxB,EAEwBA,eAAgBhB,EAFxC,EAEwCA,QAChDE,EAAuB,GAErBC,EAAc,sBAAI+d,GAAJ,YAAsBne,GAAY,KAAKK,KAAI,YAAsB,IAAhBC,EAAe,sBACjDC,IAAqBC,sBAAsB,CAC1EC,QAASX,EACTQ,WACAL,YAHMW,EAD0E,EAC1EA,cAAeC,EAD2D,EAC3DA,MAQvB,OAFAV,EAAuBS,EAEhB,CACLC,YAKAke,EAAuC,IAAtB9d,EAAiB,GAGtC,OAFA8d,EAAiBA,EAAgB,KAAOA,GAAkB,IAGxD,yBAAKthB,UAAU,yBAAyBJ,MAAO,CAAE4V,OAAO,GAAD,OAAK8L,EAAL,QACrD,yBACEthB,UAAS,qCAAiCshB,EAAgB,IAAO,cAAkB,IACnFP,SAAU9hB,KAAK8hB,UAEd9hB,KAAKsiB,eACJ5e,EAAYyC,QACZ,kBAAC,IAAD,CACExB,SAAS,EACTC,QAASC,IAAaC,QACtB/D,UAAU,wBACVmD,cAAeT,EACfsB,KAAMrB,KAGR,S,+BAWA,IACA6d,EAAgBvhB,KAAK0J,MAArB6X,YADD,EAEgFvhB,KAAKJ,MAApFoF,EAFD,EAECA,MAAO5B,EAFR,EAEQA,iBAAkBE,EAF1B,EAE0BA,SAAUiB,EAFpC,EAEoCA,eAAgBY,EAFpD,EAEoDA,QAASC,EAF7D,EAE6DA,eAEpE,OACE,yBAAKrE,UAAS,iBAAaiE,EAAS,OAAW,KAC5CG,GAA2B,IAAhBoc,GACV,kBAAC,IAAD,CACE3c,QAAQ,QACRqB,WAAY,CACVtB,SAAS,EACTuB,UAA0B,OAAhB9C,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB+C,UAAmB,OAAR7C,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAAM3B,OAAOyE,KAAK9C,EAAS,IAAI6C,QAAW,EAC5FE,UAA2B,OAAhBjD,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB+C,SAAU/C,EAAiBO,KAAI,qBAAG2C,cAA+B,GAC9FC,SAAUhC,EAAiBa,EAAiBb,EAAiBa,EAC7DR,QAASC,IAAaC,aAIxBK,GAA2B,IAAhBoc,GAAsBA,EAAc,IAAMvhB,KAAKwG,mB,GAhK7CrH,IAAM8B,WAkN/BqgB,EAAWpgB,aAAe,CACxB8D,OAAO,EACP5B,iBAAkB,GAClBue,wBAAyBniB,IAAQC,KACjC6D,SAAU,GACV6B,SAAS,EACTC,eAAgB,EAChB3C,MAAO,GACPc,QAAS,IASX,IASMqD,EAAsBC,IAAe0b,WAAWC,iBAEhDC,EAAsBxb,YAAQL,GAXT,SAAAtE,GAAQ,MAAK,CACtCqf,wBAAyB,SAACngB,EAAIiB,GAAL,OAAeH,EAAS4E,IAAaC,KAAKwa,wBAAwBngB,EAAIiB,QAUrEwE,CAAiDqa,I,wJCrPvEoB,E,4MAQJC,OAAS,YAAe,IAAZC,EAAW,EAAXA,KAAW,EAC4B,EAAKhjB,MAA9CijB,EADa,EACbA,cAAezd,EADF,EACEA,eAAgB3C,EADlB,EACkBA,MACjC8C,GAAsB,OAAL9C,QAAK,IAALA,OAAA,EAAAA,EAAQE,IAAqB6C,SAAUJ,EACxD0d,EAASvd,GAAkBqd,EAAO,IAAMC,EAE9C,EAAKE,UAAUD,GACf,EAAKE,SAASzd,I,EAUhB0d,UAAY,YAAkB,IAAfC,EAAc,EAAdA,QACb,EAAKH,YACL,EAAKC,SAASE,I,wDAQNJ,GAAS,IAAD,EACiC9iB,KAAKJ,MAA9CijB,EADQ,EACRA,cAAe9c,EADP,EACOA,WAAYtE,EADnB,EACmBA,UAC7Boe,EAAiB,GAEvBA,EAAe5X,KAAf,aACE1F,KAAMwD,EACNlD,OAAQpB,GACPkB,IAAqB+C,OAHxB,OAGiCod,QAHjC,IAGiCA,IAAUD,IAG3CxgB,IAAMC,SAASud,K,+BAQR2B,GAAQ,IAAD,EACmCxhB,KAAKJ,MAA9CoG,EADM,EACNA,UAAWZ,EADL,EACKA,eAAgB3D,EADrB,EACqBA,UAC7Boe,EAAiB,GAEvBA,EAAe5X,KAAf,aACE1F,KAAMyD,EACNnD,OAAQpB,GACPkB,IAAqB6C,MAHxB,OAGgCgc,QAHhC,IAGgCA,IAASpc,IAGzC/C,IAAMC,SAASud,K,+BASP,IAAD,SACqF7f,KAAKJ,MAAzF8G,EADD,EACCA,cAAeZ,EADhB,EACgBA,UAAW7C,EAD3B,EAC2BA,WAAYiC,EADvC,EACuCA,UAAWE,EADlD,EACkDA,eAAgB3C,EADlE,EACkEA,MAAOmC,EADzE,EACyEA,QAC1Eue,EAAc1gB,EAAME,IAAqB+C,QAAUjD,EAAME,IAAqB6C,OAAS,GAAK,EAC5FD,EAAiB9C,EAAME,IAAqB6C,QAAUJ,EAE5D,OACE,kBAAC,IAAD,CACErE,UAAamE,EAA0B,GAAb,SAC1BwB,cAAeA,EACfZ,UAAWA,EACX7C,WAAYA,IAAeiC,EAC3BA,UAAWA,EACX0d,KAAMO,EACND,QAAS3d,EACT6d,UAAW,SAAC9J,EAAOsJ,GAAR,OAAiB,EAAKD,OAAO,CAAErJ,QAAOsJ,UACjDS,gBAAiB,SAAC/J,EAAO4J,GAAR,OAAoB,EAAKD,UAAU,CAAE3J,QAAO4J,aAC7Dte,QAASA,Q,GAvFQzF,IAAM8B,WAiI/ByhB,EAAWxhB,aAAe,CACxBuB,MAAO,GACPiE,cAAe,OACfZ,WAAW,EACX7C,YAAY,EACZiC,UAAW,EACX2d,cAAe,EACfzd,eAAgB,GAChBR,QAAS,MAYX,IAEM0e,EAAsBrc,aAFJ,SAAC,EAAD,SAAGsc,EAAH,EAAGA,KAAU9hB,EAAb,EAAaA,UAAb,MAA8B,CAAEgB,MAAK,UAAE8gB,EAAK9gB,aAAP,aAAE,EAAahB,MAEhDwF,CAAyByb,I,yNC9I/Cc,E,4MACJ9Z,MAAQ,CAAE+Z,YAAY,EAAO/kB,QAAS,KAAMH,SAAU,M,EAyBtDsc,SAAW,SAACvB,EAAOoK,GAAoB,IAC7BhlB,EAAY,EAAKgL,MAAjBhL,QAD4B,EAEI,EAAKkB,MAArC4B,EAF4B,EAE5BA,GAAIoW,EAFwB,EAExBA,KAAMiD,EAFkB,EAElBA,SAAUjW,EAFQ,EAERA,QAEtB+e,EAAiBjlB,EACjBklB,EAAeD,EAAeE,WAAU,SAAAC,GAAM,OAAIA,EAAOnlB,QAAU+kB,KACzEC,EAAeC,GAAcrlB,SAC3BqG,IAAYmf,IAAcC,SAAiBL,EAAeC,GAAcrlB,SAEtEqG,IAAYmf,IAAcC,QAC5BL,EAAelb,SAAQ,SAACqb,EAAQvV,GAC1BqV,IAAiBrV,IACnBoV,EAAepV,GAAOhQ,UAAW,MAKvC,IAAM0lB,EACJrf,IAAYmf,IAAcC,OACtBN,EACAC,EAAetc,QAAO,SAAA6c,GAAG,OAAqB,IAAjBA,EAAI3lB,YAAmBoF,KAAI,SAAAugB,GAAG,OAAIA,EAAIvlB,SAEzE,EAAKqM,SACH,CACEtM,QAASilB,EACTplB,SAAU0lB,IAEZ,WACE,IAAME,EAAqBhP,IAAWwO,GAEhCS,EAAa,CACjB5iB,KACAoW,KAAMA,GAAQpW,EACd3C,MAAOslB,EAAmBP,GAAc/kB,MACxCN,SACGqG,IAAYmf,IAAcC,QAAUG,EAAmBP,IAAkBzO,IAAW8O,GACvFI,cAAeT,EACfrhB,KAAK,UAAD,OAAaqC,IAAYmf,IAAcC,OAAU,MAAU,YAC/DtlB,QAASylB,GAGPvf,IAAYmf,IAAcO,WAC5BF,EAAWG,QAAUJ,EAAmBP,GAAcrlB,UAGxD,IAAMimB,EAAS,eACVJ,EADU,CAEb1Y,OAAO,eAAM0Y,GACbK,cAAc,eAAML,GACpBM,QAASllB,IAAQC,OAGnBob,EAAS,eAAK2J,GAAaZ,EAAcO,GAErCvf,IAAYmf,IAAcC,QAC5B,EAAKhZ,SAAS,CACZyY,YAAY,Q,EAYtBxR,SAAW,SAAA0S,GACT,EAAK3Z,SAAS,CACZyY,WAAYkB,K,kEA1FE,OAFI3kB,KAAK0J,MAAjBhL,SAGNsB,KAAK4kB,kB,yCAIU1hB,GAAY,IAAD,EACSlD,KAAKJ,MAAlClB,EADoB,EACpBA,QAASoc,EADW,EACXA,gBAEZ3X,IAASD,EAAUxE,QAASA,IAAayE,IAASD,EAAU4X,gBAAiBA,IAChF9a,KAAK4kB,kB,sCAwFQ,IAiCXX,EAjCU,EACgCjkB,KAAKJ,MAA3ClB,EADM,EACNA,QAASoc,EADH,EACGA,gBAAiBlW,EADpB,EACoBA,QAC5B+e,EAAiBkB,IAAenmB,GAClCiD,OAAOyE,KAAK1H,GAASiF,KAAI,SAAAc,GAAG,sBAAU/F,EAAQ+F,GAAlB,CAAwB9F,MAAO8F,EAAK5F,MAAOH,EAAQ+F,QAC/E0Q,IAAWzW,GAETomB,EACHhK,GAA8C,kBAApBA,GAA4D,kBAApBA,EAC/D,CAACA,GACDA,EAEN6I,EAAelb,SAAQ,SAACqb,EAAQvV,GAC9B,IAAIwW,EAAkBjB,EAES,kBAApBiB,IACTA,EAAkB,CAChBpmB,MAAOmlB,EACPjlB,MAAOilB,GAGTH,EAAepV,GAASwW,GAG1BA,EAAgBC,KAAOD,EAAgBC,MAAQD,EAAgBpmB,MAC/DomB,EAAgBE,YAAcF,EAAgBE,aAAeF,EAAgBpmB,MAC7EomB,EAAgBjW,MAAQiW,EAAgBjW,OAASiW,EAAgBpmB,MAE7DmmB,IACFnB,EAAepV,GAAOhQ,SACpBumB,EAAgBI,SAASH,EAAgBlmB,QAAUimB,EAAgBI,SAASH,EAAgBpmB,WAOhGslB,EADErf,IAAYmf,IAAcC,QACVL,EAAe7hB,MAAK,SAAAoiB,GAAG,OAAqB,IAAjBA,EAAI3lB,aAAsB,IAAII,MAE1DglB,EAAetc,QAAO,SAAA6c,GAAG,OAAqB,IAAjBA,EAAI3lB,YAAmBoF,KAAI,SAAAugB,GAAG,OAAIA,EAAIvlB,SAGtFqB,KAAKgL,SAAS,CACZtM,QAASilB,EACTplB,SAAU0lB,M,+BASJ,IAAD,EACmCjkB,KAAK0J,MAAvChL,EADD,EACCA,QAASH,EADV,EACUA,SAAUklB,EADpB,EACoBA,WADpB,EAEsFzjB,KAAKJ,MAA1FulB,EAFD,EAECA,UAAWpkB,EAFZ,EAEYA,UAAWkC,EAFvB,EAEuBA,WAAYmiB,EAFnC,EAEmCA,aAAcrK,EAFjD,EAEiDA,YAAa+F,EAF9D,EAE8DA,WAAYlc,EAF1E,EAE0EA,QAE3EygB,EAAkB,GAaxB,OAVK3mB,GAAYA,EAAQyH,SAAUlD,IACjCoiB,EAAgBpiB,YAAa,GAU7B,kBAAC,IAAD,eACElC,UAAS,0BAAuBqkB,EAAuC,GAAvB,mBAAvC,YAAoErkB,GAC7E6D,QAASA,EACTgW,aAAYuK,EACZlT,SAAUjS,KAAKiS,SACf4I,SAAU7a,KAAK6a,SACfyK,WAAY/mB,EACZgnB,OAAQ9B,EACR3C,WAAYA,EACZ0E,gBAAiBzK,GACbsK,GAEF3mB,GACAA,EAAQiF,KAAI,SAAAmgB,GAAM,OAChB,kBAAC,IAAD,CACErf,IAAKxE,OAAOwlB,KAAP,UAAe3B,EAAOnlB,MAAtB,YAA+BmlB,EAAOjlB,QAC3C2C,GAAIvB,OAAOwlB,KAAP,UAAe3B,EAAOnlB,MAAtB,YAA+BmlB,EAAOjlB,QAC1CA,MAAOilB,EAAOnlB,MACd+mB,aAAY5B,EAAOjlB,MACnB8mB,aAAY7B,EAAOnlB,YAGvB,Q,GAnMWQ,IAAM8B,WAsP3BuiB,EAAOtiB,aAAe,CACpBikB,UAAW,gBACXpkB,UAAW,GACXS,GAAIhC,IAAQmY,aACZ1U,YAAY,EACZmiB,cAAc,EACdxN,KAAM,KACNiD,SAAUrb,IAAQC,KAClBf,QAAS,GACTqc,YAAa,gBACbD,gBAAiB,KACjBgG,WAAY,KACZlc,QAASmf,IAAcC","file":"static/js/1.e74a4fea.chunk.js","sourcesContent":["import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Return a set of options for display in a select/dropdown list.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getGranularityOptionsType = optionsType => {\n  if (optionsType === 'default') {\n    return {\n      selected: GRANULARITY_TYPES.DAILY,\n      options: [\n        { title: translate('curiosity-graph.dropdownDaily'), value: GRANULARITY_TYPES.DAILY, selected: true },\n        { title: translate('curiosity-graph.dropdownWeekly'), value: GRANULARITY_TYPES.WEEKLY },\n        { title: translate('curiosity-graph.dropdownMonthly'), value: GRANULARITY_TYPES.MONTHLY },\n        { title: translate('curiosity-graph.dropdownQuarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst graphCardTypes = {\n  getGranularityOptions: getGranularityOptionsType\n};\n\nexport { graphCardTypes as default, graphCardTypes, getGranularityOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport GuestsList from '../guestsList/guestsList';\nimport { inventoryListHelpers } from './inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A hosts system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onUpdateInventoryData\n */\nclass InventoryList extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getHostsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getHostsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterGuestsData, filterInventoryData, listData, query, session, settings } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      const guestsId = cellData?.subscriptionManagerId;\n      let hasGuests = cellData?.numberOfGuests > 0 && guestsId;\n\n      // Apply hasGuests callback, return boolean\n      if (typeof settings?.hasGuests === 'function') {\n        hasGuests = settings.hasGuests({ ...cellData }, { ...session });\n      }\n\n      return {\n        cells,\n        expandedContent:\n          (hasGuests && (\n            <GuestsList\n              key={guestsId}\n              filterGuestsData={filterGuestsData}\n              numberOfGuests={cellData?.numberOfGuests}\n              id={guestsId}\n              query={query}\n            />\n          )) ||\n          undefined\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      productId,\n      query,\n      t,\n      viewId\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query?.[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedPage = query[RHSM_API_QUERY_TYPES.OFFSET] / query[RHSM_API_QUERY_TYPES.LIMIT] + 1 || 1;\n    const isLastPage = updatedPage === Math.ceil(itemCount / updatedPerPage);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader>\n            <CardActions className={(error && 'blur') || ''}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                productId={productId}\n                viewId={viewId}\n                perPageDefault={updatedPerPage}\n                offsetType={reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]}\n                limitType={reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter className={(error && 'blur') || ''}>\n            <TableToolbar isFooter>\n              <Pagination\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                productId={productId}\n                viewId={viewId}\n                perPageDefault={updatedPerPage}\n                dropDirection=\"up\"\n                offsetType={reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]}\n                limitType={reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{settings: object, productId: string, listData: Array, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, getHostsInventory: Function, error: boolean, itemCount: number, viewId: string,\n *     t: Function, filterInventoryData: Array, filterGuestsData: Array, perPageDefault: number,\n *     isDisabled: boolean}}\n */\nInventoryList.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterGuestsData: PropTypes.array,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  settings: PropTypes.shape({\n    hasGuests: PropTypes.func\n  }),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{settings: object, listData: Array, session: object, pending: boolean, fulfilled: boolean,\n *     getHostsInventory: Function, error: boolean, itemCount: number, viewId: string, t: translate,\n *     filterInventoryData: Array, filterGuestsData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterGuestsData: [],\n  filterInventoryData: [],\n  getHostsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_HOSTS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  settings: {},\n  t: translate,\n  viewId: 'inventoryList'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventory: (id, query) => dispatch(reduxActions.rhsm.getHostsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.inventoryList.makeInventoryList();\n\nconst ConnectedInventoryList = connect(makeMapStateToProps, mapDispatchToProps)(InventoryList);\n\nexport { ConnectedInventoryList as default, ConnectedInventoryList, InventoryList };\n","import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Apply sort filter to filters.\n *\n * @param {object} params\n * @param {object} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {object}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} }) => {\n  const { id } = filter;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === id\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  if (\n    hasSort &&\n    !updatedFilter.sortActive &&\n    !query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    updatedFilter.isSortDefault === true\n  ) {\n    updatedFilter.sortActive = true;\n\n    if (updatedFilter.sortDefaultInitialDirection) {\n      updatedFilter.sortDirection = updatedFilter.sortDefaultInitialDirection;\n    }\n  }\n\n  return updatedFilter;\n};\n\nconst applyWrappableFilters = ({ filter = {} }) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Apply additional properties to filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {Array}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} }) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.cellData\n * @param {object} params.session\n * @returns {{columnHeaders: Array, cells: Array, data: object}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, session = {} }) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value]) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value);\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    filters.forEach(({ id, cell, cellWidth, header, onSort, sortActive, sortDirection, transforms }) => {\n      let headerUpdated;\n      let cellUpdated;\n\n      if (allCells[id]) {\n        headerUpdated = allCells[id]?.title ?? id;\n        cellUpdated = allCells[id]?.value ?? '';\n      }\n\n      // set table header cell filter params\n      if (header) {\n        headerUpdated = (typeof header === 'function' && header({ ...allCells })) || header;\n      }\n\n      if (\n        typeof headerUpdated === 'string' ||\n        typeof headerUpdated === 'number' ||\n        React.isValidElement(headerUpdated)\n      ) {\n        headerUpdated = {\n          title: headerUpdated\n        };\n      }\n\n      headerUpdated.transforms = [];\n\n      if (Array.isArray(transforms)) {\n        headerUpdated.transforms = headerUpdated.transforms.concat([...transforms]);\n      }\n\n      if (typeof cellWidth === 'number') {\n        headerUpdated.transforms.push(PfCellWidth(cellWidth));\n      }\n\n      if (typeof onSort === 'function') {\n        headerUpdated = {\n          ...headerUpdated,\n          onSort: obj => onSort({ ...allCells }, { ...obj, id }),\n          sortActive,\n          sortDirection\n        };\n      }\n\n      // set table row cell filter params\n      if (cell) {\n        cellUpdated = (typeof cell === 'function' && cell({ ...allCells }, { ...session })) || cell;\n      }\n\n      if (typeof cellUpdated === 'string' || typeof cellUpdated === 'number' || React.isValidElement(cellUpdated)) {\n        cellUpdated = {\n          title: cellUpdated\n        };\n      }\n\n      updatedColumnHeaders.push(headerUpdated);\n      updatedCells.push(cellUpdated);\n    });\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryListHelpers = {\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryListHelpers as default,\n  inventoryListHelpers,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A subscriptions system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onUpdateInventoryData\n */\nclass InventorySubscriptions extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getSubscriptionsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getSubscriptionsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterInventoryData, listData, query, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      productId,\n      query,\n      t,\n      viewId\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query?.[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedPage = query[RHSM_API_QUERY_TYPES.OFFSET] / query[RHSM_API_QUERY_TYPES.LIMIT] + 1 || 1;\n    const isLastPage = updatedPage === Math.ceil(itemCount / updatedPerPage);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader>\n            <CardActions className={(error && 'blur') || ''}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                productId={productId}\n                viewId={viewId}\n                perPageDefault={updatedPerPage}\n                offsetType={reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]}\n                limitType={reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter className={(error && 'blur') || ''}>\n            <TableToolbar isFooter>\n              <Pagination\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                productId={productId}\n                viewId={viewId}\n                perPageDefault={updatedPerPage}\n                dropDirection=\"up\"\n                offsetType={reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]}\n                limitType={reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, listData: Array, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, error: boolean, getSubscriptionsInventory: Function, itemCount: number, viewId: string,\n *     t: Function, filterInventoryData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventorySubscriptions.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getSubscriptionsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, filterInventoryData: Array, listData: Array, session: object,\n *     pending: boolean, fulfilled: boolean, perPageDefault: number, isDisabled: boolean, error: boolean,\n *     getSubscriptionsInventory: Function, itemCount: number}}\n */\nInventorySubscriptions.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterInventoryData: [],\n  getSubscriptionsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  t: translate,\n  viewId: 'subscriptionsList'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getSubscriptionsInventory: (id, query) => dispatch(reduxActions.rhsm.getSubscriptionsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.subscriptionsList.makeSubscriptionsList();\n\nconst ConnectedInventorySubscriptions = connect(makeMapStateToProps, mapDispatchToProps)(InventorySubscriptions);\n\nexport { ConnectedInventorySubscriptions as default, ConnectedInventorySubscriptions, InventorySubscriptions };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertActionCloseButton, AlertVariant, Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport _isEqual from 'lodash/isEqual';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { dateHelpers, helpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Render banner messages.\n *\n * @augments React.Component\n */\nclass BannerMessages extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.onUpdateData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateData = () => {\n    const { getMessageReports, productId, query } = this.props;\n    const { graphTallyQuery } = apiQueries.parseRhsmQuery(query);\n\n    if (productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime('CURRENT');\n      const updatedGraphQuery = {\n        ...graphTallyQuery,\n        [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY,\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString()\n      };\n\n      getMessageReports(productId, updatedGraphQuery);\n    }\n  };\n\n  /**\n   * Apply messages' configuration to alerts.\n   *\n   * @returns {Node}\n   */\n  renderAlerts() {\n    const { state } = this;\n    const { appMessages, messages } = this.props;\n    const updatedMessages = [];\n\n    if (messages.length) {\n      Object.entries(appMessages).forEach(([key, value]) => {\n        if (state[key] !== true && value === true) {\n          const message = messages.find(({ id }) => id === key);\n\n          if (message) {\n            updatedMessages.push({\n              key,\n              ...message\n            });\n          }\n        }\n      });\n    }\n\n    return updatedMessages.map(({ key, message, title, variant = AlertVariant.info }) => {\n      const actionClose = <AlertActionCloseButton onClose={() => this.setState({ [key]: true })} />;\n\n      return (\n        <Alert actionClose={actionClose} key={key} title={title} variant={variant}>\n          {message}\n        </Alert>\n      );\n    });\n  }\n\n  /**\n   * Render a banner messages container.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const alerts = this.renderAlerts();\n\n    if (alerts.length) {\n      return <div className=\"curiosity-banner-messages\">{alerts}</div>;\n    }\n\n    return null;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{appMessages: object, productId: string, getMessageReports: Function, query: object, messages: Array}}\n */\nBannerMessages.propTypes = {\n  appMessages: PropTypes.object.isRequired,\n  getMessageReports: PropTypes.func,\n  query: PropTypes.object,\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.node.isRequired,\n      message: PropTypes.node.isRequired,\n      variant: PropTypes.oneOf([...Object.values(AlertVariant)])\n    })\n  ),\n  productId: PropTypes.string.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{getMessageReports: Function, query: object, messages: Array}}\n */\nBannerMessages.defaultProps = {\n  getMessageReports: helpers.noop,\n  query: {},\n  messages: [\n    {\n      id: 'cloudigradeMismatch',\n      title: translate('curiosity-banner.dataMismatchTitle'),\n      message: translate(\n        'curiosity-banner.dataMismatchMessage',\n        {\n          context: helpers.UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS !== '' && 'cloudigradeMismatch',\n          appName: helpers.UI_DISPLAY_NAME\n        },\n        [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS}\n          />\n        ]\n      )\n    }\n  ]\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getMessageReports: (id, query) => dispatch(reduxActions.rhsm.getMessageReports(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.appMessages.makeAppMessages();\n\nconst ConnectedBannerMessages = connect(makeMapStateToProps, mapDispatchToProps)(BannerMessages);\n\nexport { ConnectedBannerMessages as default, ConnectedBannerMessages, BannerMessages };\n","import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, productLabel, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      header = getTooltipDate({\n        date: itemsByKey[key]?.data.date,\n        granularity\n      });\n    }\n\n    const tempDataFacet = {\n      color: itemsByKey[key]?.color\n    };\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key]?.data.hasInfinite && t('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel'));\n\n      tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n      tempDataFacet.value = thresholdStringValue;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n      tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product: productLabel });\n      tempDataFacet.value = dataFactsValue;\n    }\n\n    data.push(tempDataFacet);\n  });\n\n  return (\n    <div className=\"victory-tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  <div\n                    aria-hidden\n                    className=\"legend-icon victory-legend-icon\"\n                    style={{\n                      backgroundColor: dataFacet.color || 'transparent'\n                    }}\n                  />\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, productLabel: string, t: translate}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  productLabel: '',\n  t: translate\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { connect, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @param {string} options.chartId\n   * @param {string} options.color\n   * @param {boolean} options.isDisabled\n   * @param {boolean} options.isThreshold\n   * @param {string} options.labelContent\n   * @param {string} options.tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"victory-legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: color\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: color\n              }}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *  - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, productLabel, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}Label`, `curiosity-graph.thresholdLabel`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t([`curiosity-graph.${id}Label`, `curiosity-graph.noLabel`], {\n              product: productLabel,\n              context: productLabel\n            });\n\n          const tooltipContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}LegendTooltip`, `curiosity-graph.thresholdLegendTooltip`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t(`curiosity-graph.${id}LegendTooltip`, { product: productLabel, context: productLabel });\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold,\n            tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, legend: object, chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {dataSets: Array}, productLabel: string, viewId: string, t: translate, legend: object,\n *     chart: {hide: Function, toggle: Function, isToggled: Function}}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connect(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer } from 'victory-create-container';\nimport {\n  Chart,\n  ChartAxis,\n  ChartStack,\n  ChartThreshold,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * ToDo: Evaluate Victory Charts combined with PF react-charts, updating adds 100+-kb to the output bundle\n * This appears to be related to Victory Charts itself, upgrading to versions after 35.3.1 of\n * the Victory Charts components also expands the bundle at a similar rate. Breaking out the imports\n * into individual direct imports from PF react-charts increases the build even more, by our estimates 200+-kb.\n * If Victory Charts combined with PF react-charts continues to balloon in size we may need to review pulling\n * the Victory components directly instead of through PF react-charts.\n */\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  dataSetsToggle = {};\n\n  resizeObserver = helpers.noop;\n\n  containerRef = React.createRef();\n\n  tooltipRef = React.createRef();\n\n  componentDidMount() {\n    this.setResizeObserve();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * Consumer exposed, hides chart layer.\n   *\n   * @event onHide\n   * @param {string} id\n   */\n  onHide = id => {\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: true };\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns all chart layers back on.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    this.dataSetsToggle = {};\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns chart layer on/off.\n   *\n   * @event onToggle\n   * @param {string} id\n   * @returns {boolean}\n   */\n  onToggle = id => {\n    const updatedToggle = !this.dataSetsToggle[id];\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: updatedToggle };\n    this.forceUpdate();\n\n    return updatedToggle;\n  };\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { chartWidth } = this.state;\n    const { clientWidth = 0 } = this.containerRef.current || {};\n\n    if (clientWidth !== chartWidth) {\n      this.setState({ chartWidth: clientWidth });\n    }\n  };\n\n  /**\n   * Consumer exposed, determine if chart layer on/off.\n   * Note: Using \"setState\" as related to this exposed check gives the appearance of a race condition.\n   * Using a class property with forceUpdate to bypass.\n   *\n   * @param {string} id\n   * @returns {boolean}\n   */\n  getIsToggled = id => this.dataSetsToggle[id] || false;\n\n  /**\n   * Set ResizeObserver for scenarios where the window.resize event doesn't fire.\n   */\n  setResizeObserve() {\n    const containerElement = this.containerRef.current;\n    const { ResizeObserver } = window;\n\n    if (containerElement && ResizeObserver) {\n      const resizeObserver = new ResizeObserver(this.onResizeContainer);\n      resizeObserver.observe(containerElement);\n      this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n    } else {\n      this.onResizeContainer();\n      window.addEventListener('resize', this.onResizeContainer);\n      this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n    }\n  }\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { dataSetsToggle } = this;\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply data set to custom tooltips.\n   *\n   * @returns {Array}\n   */\n  getTooltipData() {\n    const { dataSetsToggle } = this;\n    const { dataSets, chartTooltip } = this.props;\n    let tooltipDataSet = [];\n\n    if (chartTooltip && dataSets && dataSets[0] && dataSets[0].data) {\n      tooltipDataSet = dataSets[0].data.map((dataSet, index) => {\n        const itemsByKey = {};\n\n        dataSets.forEach(data => {\n          if (!dataSetsToggle[data.id] && data.data && data.data[index]) {\n            itemsByKey[data.id] = {\n              color: data.stroke || data.fill || data.color || '',\n              data: _cloneDeep(data.data[index])\n            };\n          }\n        });\n\n        const mockDatum = {\n          datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey, dataSets: _cloneDeep(dataSets) }\n        };\n\n        return {\n          x: dataSet.x,\n          y: null,\n          itemsByKey,\n          tooltip:\n            (React.isValidElement(chartTooltip) && React.cloneElement(chartTooltip, { ...mockDatum })) ||\n            chartTooltip({ ...mockDatum })\n        };\n      });\n    }\n\n    return tooltipDataSet;\n  }\n\n  /**\n   * ToDo: monitor Victory charts release version increment around Voronoi container attributes.\n   * Future updates could lead to additional unexpected behavior. Victory charts released a patch/fix\n   * around attribute behavior for Voronoi containers. The behavior was already \"unexpected\" in that there appears\n   * to be a need to provide the \"label\" attribute when using the \"labelComponent\" attribute, even if \"label\" is\n   * just a pass-through. Providing `label={() => ''}` was a work-around, that is now `label={obj => obj}`. See\n   * - https://github.com/FormidableLabs/victory/blob/master/CHANGELOG.md#3436-2020-05-18\n   * - https://github.com/FormidableLabs/victory/pull/1581\n   */\n  /**\n   * FixMe: Victory charts voronoi containers throw inaccurate coordinates on large graph widths\n   * Issue is \"patched\" by removing the \"x\" dimension attribute for voronoi.\n   * - https://github.com/RedHatInsights/curiosity-frontend/issues/318\n   */\n  /**\n   * Return a chart/graph tooltip Victory container component to allow custom HTML tooltips.\n   *\n   * @returns {Node}\n   */\n  renderTooltip() {\n    const { dataSetsToggle } = this;\n    const { chartTooltip, dataSets } = this.props;\n\n    if (!chartTooltip || Object.values(dataSetsToggle).filter(v => v === true).length === dataSets.length) {\n      return null;\n    }\n\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const parsedTooltipData = this.getTooltipData();\n    let globalContainerBounds = {};\n    let globalTooltipBounds = {};\n\n    const applyParsedTooltipData = ({ datum }) => {\n      const t = parsedTooltipData.find(v => v.x === datum.x) || {};\n      return t?.tooltip || '';\n    };\n\n    const FlyoutComponent = obj => {\n      const containerRef = this.containerRef.current;\n      const tooltipRef = this.tooltipRef.current;\n      const containerBounds = (containerRef && containerRef.getBoundingClientRect()) || {};\n      const tooltipBounds = (tooltipRef && tooltipRef.getBoundingClientRect()) || {};\n\n      if (containerBounds.right) {\n        globalContainerBounds = containerBounds;\n      }\n\n      if (tooltipBounds.right) {\n        globalTooltipBounds = tooltipBounds;\n      }\n\n      let xCoordinate = obj.x + 10;\n\n      if (\n        globalContainerBounds.right < globalTooltipBounds.right ||\n        obj.x + globalTooltipBounds.width > globalContainerBounds.right / 2\n      ) {\n        xCoordinate = obj.x - 10 - globalTooltipBounds.width;\n      }\n\n      const htmlContent = applyParsedTooltipData({ ...obj });\n\n      if (htmlContent) {\n        return (\n          <g>\n            <foreignObject x={xCoordinate} y={obj.y / 2.2} width=\"100%\" height=\"100%\">\n              <div ref={this.tooltipRef} style={{ display: 'inline-block' }} xmlns=\"http://www.w3.org/1999/xhtml\">\n                {htmlContent}\n              </div>\n            </foreignObject>\n          </g>\n        );\n      }\n\n      return <g />;\n    };\n\n    return (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={<FlyoutComponent />}\n        voronoiPadding={60}\n      />\n    );\n  }\n\n  /**\n   * Return a custom chart/graph legend component.\n   *\n   * @returns {Node}\n   */\n  renderLegend() {\n    const { chartLegend, dataSets } = this.props;\n\n    if (!chartLegend) {\n      return null;\n    }\n\n    const legendProps = {\n      datum: { dataSets: _cloneDeep(dataSets) },\n      chart: {\n        hide: this.onHide,\n        revert: this.onRevert,\n        toggle: this.onToggle,\n        isToggled: this.getIsToggled\n      }\n    };\n\n    return (\n      (React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n      chartLegend({ ...legendProps })\n    );\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const { dataSetsToggle } = this;\n    const { dataSets } = this.props;\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { chartLegend, padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const tooltipComponent = { containerComponent: (maxY >= 0 && this.renderTooltip()) || undefined };\n    const chartProps = { padding, ...chartDomain, ...tooltipComponent };\n\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n        {chartLegend && <div className=\"curiosity-chartarea-description victory-legend\">{this.renderLegend()}</div>}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartLegend: Node|Function, chartTooltip: Node|Function, padding, xAxisTickFormat: Function,\n *     themeColor: string, yAxisTickFormat: Function, domain: object|Array, dataSets: object,\n *     xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartLegend: null, chartTooltip: null, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: null, themeColor: string, yAxisTickFormat: null, domain: object,\n *     dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport { graphCardTypes } from './graphCardTypes';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { ChartArea } from '../chartArea/chartArea';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const graphQuery = {\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString(),\n        ...query\n      };\n\n      getGraphReportsCapacity(productId, graphQuery);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n      viewId,\n      [RHSM_API_QUERY_TYPES.GRANULARITY]: value\n    });\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, selectOptionsType, productLabel, query, viewId } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: updatedGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(updatedGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          strokeWidth: 2,\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 3;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <ChartArea\n        key={`chart_${JSON.stringify(query)}`}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend chart={chart} datum={datum} productLabel={productLabel} viewId={viewId} />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={updatedGranularity} productLabel={productLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * ToDo: Evaluate applying a minHeight attr to the MinHeight component graphCard setup\n   * Appears there may be a minor page shift when compared to the prior hard-set min-height\n   * of 410px\n   */\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, isDisabled, pending, selectOptionsType, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = this.getQueryGranularity();\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <MinHeight key=\"headerMinHeight\">\n          <CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                {cardTitle}\n              </Title>\n            </CardTitle>\n            <CardActions className={(error && 'blur') || ''}>\n              {children}\n              <Select\n                aria-label={t('curiosity-graph.dropdownPlaceholder')}\n                onSelect={this.onGranularitySelect}\n                options={options}\n                selectedOptions={graphGranularity}\n                placeholder={t('curiosity-graph.dropdownPlaceholder')}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key=\"bodyMinHeight\">\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && <Loader variant=\"graph\" />}\n              {!pending && this.renderChart()}\n            </div>\n          </CardBody>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productLabel: string, productId: string, pending: boolean, error: boolean, query: object,\n *     cardTitle: string, filterGraphData: Array, getGraphReportsCapacity: Function,\n *     selectOptionsType: string, viewId: string, t: Function, children: Node, graphData: object,\n *     isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productLabel: string, selectOptionsType: string,\n *     viewId: string, t: translate, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  productLabel: '',\n  selectOptionsType: 'default',\n  t: translate,\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs as PfTabs, Tab, TabTitleText, Grid, GridItem } from '@patternfly/react-core';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: PF tabs misinterprets \"isElementInView\" when tab title nodes are loaded dynamically\n * It appears the use of isElementInView within PF tabs is trying to be predicative in using\n * \"getBoundingClientRect\" but produces questionable results in scenarios where content is\n * async created. isElementInView assumes some form of the content will always be there\n * instead of scenarios where someone tries to dynamically apply components. It may be good to\n * review using a window.setTimeout(() => handleScrollButtons()) in componentDidMount.\n *\n * Our temporary solution is to simply hide the buttons with a manual set flag affecting the\n * CSS class. This will most likely cause long-term issues.\n */\n/**\n * ToDo: Insights frontend components uses a custom tabs layout, investigate related CSS classes\n * Originally we applied the CSS classes, but they appeared to provide nothing. Since Insights\n * rolled its own tabs we're hesitant to apply said classes without understanding what they provide.\n */\n/**\n * A set of tabs.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass Tabs extends React.Component {\n  state = {\n    updatedActiveTab: null,\n    updatedTabs: null\n  };\n\n  componentDidMount() {\n    const { updatedTabs } = this.state;\n\n    if (updatedTabs === null) {\n      this.setTabData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tabs } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (!_isEqualWith(prevProps.tabs, tabs, customizer)) {\n      this.setTabData();\n    }\n  }\n\n  /**\n   * On tab selected\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {number} params.index\n   */\n  onTab = ({ index }) => {\n    const { onTab } = this.props;\n\n    this.setState(\n      {\n        updatedActiveTab: index\n      },\n      () => onTab({ index })\n    );\n  };\n\n  /**\n   * Convert tab objects into the required PF Tab format.\n   */\n  setTabData() {\n    const { activeTab, defaultActiveTab, tabs } = this.props;\n    let updatedActiveTab = defaultActiveTab;\n\n    const updatedTabs = tabs.map(({ active, content, title }, index) => {\n      updatedActiveTab = active ? index : updatedActiveTab;\n\n      return (\n        <Tab key={title} eventKey={index} title={<TabTitleText>{title}</TabTitleText>}>\n          {content}\n        </Tab>\n      );\n    });\n\n    if (typeof activeTab === 'number') {\n      updatedActiveTab = activeTab;\n    }\n\n    this.setState({\n      updatedActiveTab,\n      updatedTabs\n    });\n  }\n\n  /**\n   * Apply props to tabs.\n   *\n   * @returns {Node}\n   */\n  renderTabs() {\n    const { updatedActiveTab, updatedTabs } = this.state;\n    const { className, hasOverflowScroll } = this.props;\n\n    return (\n      <PfTabs\n        className={`curiosity-tabs${(!hasOverflowScroll && '__no-scroll') || ''} ${className || ''}`}\n        activeKey={updatedActiveTab}\n        onSelect={(event, index) => this.onTab({ event, index })}\n        mountOnEnter\n        unmountOnExit\n        inset={{\n          default: 'insetNone',\n          md: 'insetLg'\n        }}\n      >\n        {updatedTabs}\n      </PfTabs>\n    );\n  }\n\n  /**\n   * Render tabs.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"curiosity-tabs-container\">\n        <GridItem span={12}>{this.renderTabs()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.propTypes = {\n  activeTab: PropTypes.number,\n  className: PropTypes.string,\n  defaultActiveTab: PropTypes.number,\n  hasOverflowScroll: PropTypes.bool,\n  onTab: PropTypes.func,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      content: PropTypes.node.isRequired,\n      title: PropTypes.node.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.defaultProps = {\n  activeTab: null,\n  className: '',\n  defaultActiveTab: 0,\n  hasOverflowScroll: false,\n  onTab: helpers.noop,\n  tabs: []\n};\n\nexport { Tabs as default, Tabs };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * A tab pass-through component for passing props to InventoryTabs.\n *\n * @param {object} props\n * @param {boolean} props.active\n * @param {Node} props.children\n * @param {string} props.title\n * @returns {Node}\n */\n// eslint-disable-next-line no-unused-vars\nconst InventoryTab = ({ active, children, title }) => <React.Fragment>{children}</React.Fragment>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nInventoryTab.propTypes = {\n  children: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  title: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nInventoryTab.defaultProps = {\n  active: false\n};\n\nexport { InventoryTab as default, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { Tabs } from '../tabs/tabs';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { InventoryTab } from './inventoryTab';\n\n/**\n * A system inventory tabs component.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass InventoryTabs extends React.Component {\n  /**\n   * On tab update state.\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {string} params.index tab index\n   */\n  onTab = ({ index }) => {\n    const { productId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.inventory.SET_INVENTORY_TAB,\n      tabs: {\n        [productId]: index\n      }\n    });\n  };\n\n  /**\n   * Render inventory tabs using Inventory tab passed props only. A parallel outcome can be\n   * achieved by passing an array of objects through a prop.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { activeTab, children, defaultActiveTab, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const updatedChildren = React.Children.toArray(children).map(({ props = {} }) => ({\n      active: props.active || false,\n      content: props.children,\n      title: props.title\n    }));\n\n    return (\n      <React.Fragment>\n        <Title headingLevel=\"h2\" className=\"sr-only\">\n          {t('curiosity-inventory.tabHeading', { count: updatedChildren.length })}\n        </Title>\n        <Tabs activeTab={activeTab} defaultActiveTab={defaultActiveTab} onTab={this.onTab} tabs={updatedChildren} />\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, t: Function, children: Node, defaultActiveTab: number, isDisabled: boolean,\n *     activeTab: number}}\n */\nInventoryTabs.propTypes = {\n  activeTab: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  defaultActiveTab: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.defaultProps = {\n  activeTab: 0,\n  defaultActiveTab: 0,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  t: translate\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst mapStateToProps = ({ inventory }, { productId }) => ({ activeTab: inventory.tabs?.[productId] });\n\nconst ConnectedInventoryTabs = connect(mapStateToProps)(InventoryTabs);\n\nexport { ConnectedInventoryTabs as default, ConnectedInventoryTabs, InventoryTabs, InventoryTab };\n","import { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SLA_TYPES as SLA_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES as USAGE_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = optionsType => {\n  switch (optionsType) {\n    case RHSM_API_QUERY_TYPES.SLA:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.slaPremium'),\n            value: SLA_TYPES.PREMIUM\n          },\n          {\n            title: translate('curiosity-toolbar.slaStandard'),\n            value: SLA_TYPES.STANDARD\n          },\n          {\n            title: translate('curiosity-toolbar.slaSelfSupport'),\n            value: SLA_TYPES.SELF\n          },\n          {\n            title: translate('curiosity-toolbar.slaNone'),\n            value: SLA_TYPES.NONE\n          }\n        ]\n      };\n    case RHSM_API_QUERY_TYPES.USAGE:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.usageDevelopment'),\n            value: USAGE_TYPES.DEVELOPMENT\n          },\n          {\n            title: translate('curiosity-toolbar.usageDisaster'),\n            value: USAGE_TYPES.DISASTER\n          },\n          {\n            title: translate('curiosity-toolbar.usageProduction'),\n            value: USAGE_TYPES.PRODUCTION\n          },\n          {\n            title: translate('curiosity-toolbar.usageUnspecified'),\n            value: USAGE_TYPES.UNSPECIFIED\n          }\n        ]\n      };\n    default:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.SLA }),\n            value: RHSM_API_QUERY_TYPES.SLA\n          },\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.USAGE }),\n            value: RHSM_API_QUERY_TYPES.USAGE\n          }\n        ]\n      };\n  }\n};\n\nconst toolbarTypes = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarTypes as default, toolbarTypes, getOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar as PfToolbar,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup\n} from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons';\nimport { Select } from '../form/select';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onClearFilter\n * @fires onCategorySelect\n * @fires onSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear all filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    const { hardFilterReset } = this.props;\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: new Set() } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [RHSM_API_QUERY_TYPES.SLA]: null,\n            [RHSM_API_QUERY_TYPES.USAGE]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: null } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Clear individual filter state.\n   *\n   * @event onClearFilter\n   * @param {string} categoryTitle\n   */\n  onClearFilter = categoryTitle => {\n    const { activeFilters, currentFilter, hardFilterReset } = this.props;\n\n    const categoryOptions = toolbarTypes.getOptions();\n    const { value: categoryValue } = categoryOptions.options.find(({ title }) => title === categoryTitle) || {};\n\n    if (!categoryValue) {\n      return;\n    }\n\n    const updatedActiveFilters = new Set(activeFilters);\n    updatedActiveFilters.delete(categoryValue);\n\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: updatedActiveFilters } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [categoryValue]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      const updatedCurrentFilter = (updatedActiveFilters.size > 0 && currentFilter) || null;\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: updatedCurrentFilter } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Set Category selection.\n   *\n   * @event onCategorySelect\n   * @param {object} event\n   */\n  onCategorySelect = event => {\n    const { value } = event;\n    this.setDispatch({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: value } });\n  };\n\n  /**\n   * Set select filter selection for dispatch.\n   *\n   * @param {object} params\n   * @param {object} params.event\n   * @param {string} params.field\n   */\n  onSelect = ({ event, field }) => {\n    const { activeFilters } = this.props;\n    const { value } = event;\n    const updatedActiveFilters = new Set(activeFilters).add(field);\n\n    this.setDispatch(\n      [\n        {\n          type: reduxTypes.toolbar.SET_ACTIVE_FILTERS,\n          data: { activeFilters: updatedActiveFilters }\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_TYPES[field],\n          data: { [field]: value }\n        }\n      ],\n      true\n    );\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {Array|object} actions\n   * @param {boolean} resetPage\n   */\n  setDispatch(actions, resetPage = false) {\n    const { viewId } = this.props;\n    const updatedActions = ((Array.isArray(actions) && actions) || [actions]).map(({ type, data }) => ({\n      type,\n      viewId,\n      ...data\n    }));\n\n    if (resetPage) {\n      updatedActions.push({\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST\n      });\n    }\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Available, and selected select filter options.\n   *\n   * @param {string} field\n   * @returns {{optionsSelected: Array, options: Array }}\n   */\n  setSelectFilter(field) {\n    const { query } = this.props;\n    const options = toolbarTypes.getOptions(field);\n    const currentFilter = this.getCurrentFilter();\n    let filter;\n\n    if (field) {\n      filter = typeof query?.[field] === 'string' && options.options.find(({ value }) => value === query?.[field]);\n    } else {\n      filter = options.options.find(({ value }) => value === currentFilter);\n    }\n\n    const optionsSelected = (filter?.title && [filter.title]) || (options?.selected && [options.selected]) || [];\n\n    return { options, optionsSelected };\n  }\n\n  /**\n   * Return the currentFilter, fallback to selected\n   *\n   * @returns {string|undefined}\n   */\n  getCurrentFilter() {\n    const { currentFilter, filterOptions } = this.props;\n\n    return (\n      currentFilter ||\n      filterOptions.find(({ selected }) => selected === true)?.id ||\n      (filterOptions.length === 1 && filterOptions[0]?.id)\n    );\n  }\n\n  /**\n   * A select filter node.\n   *\n   * @param {object} params\n   * @param {string} params.id\n   * @returns {object}\n   */\n  renderSelectFilter({ id: field }) {\n    const { t } = this.props;\n    const { options, optionsSelected } = this.setSelectFilter(field);\n    const currentFilter = this.getCurrentFilter();\n\n    return (\n      <ToolbarFilter\n        key={field}\n        chips={optionsSelected}\n        deleteChip={this.onClearFilter}\n        categoryName={t('curiosity-toolbar.category', { context: field })}\n        showToolbarItem={currentFilter === field}\n      >\n        <Select\n          aria-label={t('curiosity-toolbar.category', { context: field })}\n          onSelect={event => this.onSelect({ event, field })}\n          selectedOptions={optionsSelected}\n          placeholder={t('curiosity-toolbar.placeholder', { context: field })}\n          options={options.options}\n        />\n      </ToolbarFilter>\n    );\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { filterOptions, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options: categoryOptions, optionsSelected: categoryOptionsSelected } = this.setSelectFilter();\n\n    return (\n      <PfToolbar\n        id=\"curiosity-toolbar\"\n        className=\"curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"sm\"\n        clearAllFilters={this.onClear}\n      >\n        <ToolbarContent>\n          <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"md\">\n            <ToolbarGroup variant=\"filter-group\">\n              {filterOptions.length !== 1 && (\n                <ToolbarItem>\n                  <Select\n                    aria-label={t('curiosity-toolbar.category')}\n                    onSelect={this.onCategorySelect}\n                    selectedOptions={categoryOptionsSelected}\n                    placeholder={t('curiosity-toolbar.placeholder')}\n                    options={categoryOptions.options}\n                    toggleIcon={<FilterIcon />}\n                  />\n                </ToolbarItem>\n              )}\n              {filterOptions.map(({ id, selected }) => this.renderSelectFilter({ id, selected }))}\n            </ToolbarGroup>\n          </ToolbarToggleGroup>\n        </ToolbarContent>\n      </PfToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, Array}}\n */\nToolbar.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.SLA]: PropTypes.string,\n    [RHSM_API_QUERY_TYPES.USAGE]: PropTypes.string\n  }),\n  activeFilters: PropTypes.instanceOf(Set),\n  currentFilter: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n  filterOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      filterType: PropTypes.oneOf(['select']),\n      id: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n      selected: PropTypes.bool\n    })\n  ),\n  hardFilterReset: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, filterOptions: Array}}\n */\nToolbar.defaultProps = {\n  query: {},\n  activeFilters: new Set(),\n  currentFilter: null,\n  filterOptions: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA,\n      filterType: 'select'\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      filterType: 'select',\n      selected: true\n    }\n  ],\n  hardFilterReset: false,\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: translate,\n  viewId: 'toolbar'\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.toolbar\n * @param {object} props\n * @param {string} props.viewId\n * @returns {object}\n */\nconst mapStateToProps = ({ toolbar }, { viewId }) => ({ ...toolbar.filters?.[viewId] });\n\nconst ConnectedToolbar = connect(mapStateToProps)(Toolbar);\n\nexport { ConnectedToolbar as default, ConnectedToolbar, Toolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { helpers } from '../../common';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { Loader } from '../loader/loader';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { Table } from '../table/table';\n\n/**\n * ToDo: Consider removing the query prop entirely.\n * The current API doesn't allow setting more than \"offset\" and \"limit\"\n */\n/**\n * ToDo: Review moving the \"onScroll\" layout into a standalone component.\n */\n/**\n * A system inventory guests component.\n *\n * @augments React.Component\n * @fires onUpdateGuestsData\n * @fires onScroll\n */\nclass GuestsList extends React.Component {\n  state = { currentPage: 0, limit: 100, previousData: [] };\n\n  componentDidMount() {\n    this.onUpdateGuestsData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentPage } = this.state;\n\n    if (currentPage !== prevState.currentPage) {\n      this.onUpdateGuestsData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGuestsData\n   */\n  onUpdateGuestsData = () => {\n    const { currentPage, limit } = this.state;\n    const { getHostsInventoryGuests, query, id } = this.props;\n\n    if (id) {\n      const updatedQuery = {\n        ...query,\n        [RHSM_API_QUERY_TYPES.LIMIT]: limit,\n        [RHSM_API_QUERY_TYPES.OFFSET]: currentPage * limit || 0\n      };\n\n      const { inventoryGuestsQuery } = apiQueries.parseRhsmQuery(updatedQuery);\n      getHostsInventoryGuests(id, inventoryGuestsQuery);\n    }\n  };\n\n  /**\n   * Update page state.\n   *\n   * @event onScroll\n   * @param {object} event\n   */\n  onScroll = event => {\n    const { target } = event;\n    const { currentPage, limit, previousData } = this.state;\n    const { numberOfGuests, pending, listData } = this.props;\n\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > (currentPage + 1) * limit && bottom && !pending) {\n      const newPage = currentPage + 1;\n      const updatedData = [...previousData, ...(listData || [])];\n\n      this.setState({\n        previousData: updatedData,\n        currentPage: newPage\n      });\n    }\n  };\n\n  renderLoader() {\n    const { currentPage } = this.state;\n    const { filterGuestsData, listData, pending } = this.props;\n\n    if (currentPage > 0 && pending) {\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            rowCount: 0,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  }\n\n  /**\n   * ToDo: Consider moving the \"meaning of life\" into the default props on iteration.\n   * For everyone else... move the 42 into default props, possibly the 275.\n   */\n  /**\n   * Render a guests table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { previousData } = this.state;\n    const { filterGuestsData, listData, numberOfGuests, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = [...previousData, ...(listData || [])].map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: filterGuestsData,\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    // Include the table header\n    let updatedHeight = (numberOfGuests + 1) * 42;\n    updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n    return (\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={this.onScroll}\n        >\n          {this.renderLoader()}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render a guest list table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { currentPage } = this.state;\n    const { error, filterGuestsData, listData, numberOfGuests, pending, perPageDefault } = this.props;\n\n    return (\n      <div className={`fadein ${(error && 'blur') || ''}`}>\n        {pending && currentPage === 0 && (\n          <Loader\n            variant=\"table\"\n            tableProps={{\n              borders: false,\n              colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n              colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n              rowCount: numberOfGuests < perPageDefault ? numberOfGuests : perPageDefault,\n              variant: TableVariant.compact\n            }}\n          />\n        )}\n        {((!pending && currentPage === 0) || currentPage > 0) && this.renderTable()}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: object,\n *     pending: boolean, query: object, numberOfGuests: number, perPageDefault: number, id: string,\n *     error: boolean}}\n */\nGuestsList.propTypes = {\n  error: PropTypes.bool,\n  filterGuestsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventoryGuests: PropTypes.func,\n  listData: PropTypes.array,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  pending: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object,\n  session: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: Array,\n *     pending: boolean, query: object, perPageDefault: number, error: boolean}}\n */\nGuestsList.defaultProps = {\n  error: false,\n  filterGuestsData: [],\n  getHostsInventoryGuests: helpers.noop,\n  listData: [],\n  pending: false,\n  perPageDefault: 5,\n  query: {},\n  session: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventoryGuests: (id, query) => dispatch(reduxActions.rhsm.getHostsInventoryGuests(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.guestsList.makeGuestsList();\n\nconst ConnectedGuestsList = connect(makeMapStateToProps, mapDispatchToProps)(GuestsList);\n\nexport { ConnectedGuestsList as default, ConnectedGuestsList, GuestsList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * Contained pagination.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onPage\n * @fires onPerPage\n */\nclass Pagination extends React.Component {\n  /**\n   * Call page update.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.page\n   */\n  onPage = ({ page }) => {\n    const { offsetDefault, perPageDefault, query } = this.props;\n    const updatedPerPage = query?.[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const offset = updatedPerPage * (page - 1) || offsetDefault;\n\n    this.setOffset(offset);\n    this.setLimit(updatedPerPage);\n  };\n\n  /**\n   * Call per-page update.\n   *\n   * @event onPerPage\n   * @param {object} params\n   * @param {number} params.perPage\n   */\n  onPerPage = ({ perPage }) => {\n    this.setOffset();\n    this.setLimit(perPage);\n  };\n\n  /**\n   * Set page state.\n   *\n   * @param {number} offset\n   */\n  setOffset(offset) {\n    const { offsetDefault, offsetType, productId } = this.props;\n    const updatedActions = [];\n\n    updatedActions.push({\n      type: offsetType,\n      viewId: productId,\n      [RHSM_API_QUERY_TYPES.OFFSET]: offset ?? offsetDefault\n    });\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Set per-page state.\n   *\n   * @param {number} limit\n   */\n  setLimit(limit) {\n    const { limitType, perPageDefault, productId } = this.props;\n    const updatedActions = [];\n\n    updatedActions.push({\n      type: limitType,\n      viewId: productId,\n      [RHSM_API_QUERY_TYPES.LIMIT]: limit ?? perPageDefault\n    });\n\n    store.dispatch(updatedActions);\n  }\n\n  // ToDo: Consider using the PfPagination \"offset\" prop\n  /**\n   * Render pagination.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { dropDirection, isCompact, isDisabled, itemCount, perPageDefault, query, variant } = this.props;\n    const updatedPage = query[RHSM_API_QUERY_TYPES.OFFSET] / query[RHSM_API_QUERY_TYPES.LIMIT] + 1 || 1;\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n\n    return (\n      <PfPagination\n        className={(!itemCount && 'hidden') || ''}\n        dropDirection={dropDirection}\n        isCompact={isCompact}\n        isDisabled={isDisabled || !itemCount}\n        itemCount={itemCount}\n        page={updatedPage}\n        perPage={updatedPerPage}\n        onSetPage={(event, page) => this.onPage({ event, page })}\n        onPerPageSelect={(event, perPage) => this.onPerPage({ event, perPage })}\n        variant={variant}\n      />\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, productId: string, query: object, dropDirection: string,\n *     offsetDefault: number, variant: string, offsetType: string, perPageDefault: number,\n *     isDisabled: boolean, limitType: string, itemCount: number}}\n */\nPagination.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.LIMIT]: PropTypes.number,\n    [RHSM_API_QUERY_TYPES.OFFSET]: PropTypes.number\n  }),\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  limitType: PropTypes.oneOf([\n    reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n    reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]\n  ]).isRequired,\n  offsetDefault: PropTypes.number,\n  offsetType: PropTypes.oneOf([\n    reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n    reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]\n  ]).isRequired,\n  perPageDefault: PropTypes.number,\n  productId: PropTypes.string.isRequired,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, query: object, dropDirection: string, offsetDefault: number,\n *     variant: null, perPageDefault: number, isDisabled: boolean, itemCount: number}}\n */\nPagination.defaultProps = {\n  query: {},\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offsetDefault: 0,\n  perPageDefault: 10,\n  variant: null\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.view\n * @param {object} props\n * @param {string} props.productId\n * @returns {object}\n */\nconst mapStateToProps = ({ view }, { productId }) => ({ query: view.query?.[productId] });\n\nconst ConnectedPagination = connect(mapStateToProps)(Pagination);\n\nexport { ConnectedPagination as default, ConnectedPagination, Pagination };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * FixMe: Patternfly React select generates a random ID for select options.\n * On the surface this seems like a legitimate update until you remember unit tests.\n * Quite a few apps use test snapshots causing certain rendered select snapshots to\n * fail consistently. Appears this may have been part of the \"favorites\" update.\n * The solution centers around updating the  \"GenerateId helper\" and detecting a\n * test, dev, or prod environment instead of generating a random string every time.\n *\n * This issue also has the side-effect of making the attribute inadvertently\n * \"required\" anywhere it's used in an effort to squash it.\n */\n/**\n * A wrapper for Patternfly Select. Provides additional event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @param expanded\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected =\n          activateOptions.includes(convertedOption.value) || activateOptions.includes(convertedOption.title);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, isToggleText, placeholder, toggleIcon, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select${(!isToggleText && '__no-toggle-text') || ''} ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isOpen={isExpanded}\n        toggleIcon={toggleIcon}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(`${option.title}-${option.value}`)}\n              id={window.btoa(`${option.title}-${option.value}`)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{isToggleText: boolean, toggleIcon: Node|Function, name: string, options: object,\n *     selectedOptions: (number|string|Array), variant: (object|string), className: string,\n *     id: string, isDisabled: boolean, placeholder: string, ariaLabel: string,\n *     onSelect: Function}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.string,\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{isToggleText: boolean, toggleIcon: null, name: null, options: Array, selectedOptions: null,\n *     variant: SelectVariant.single, className: string, id: string, isDisabled: boolean,\n *     placeholder: string, ariaLabel: string, onSelect: Function}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  isToggleText: true,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  selectedOptions: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n"],"sourceRoot":""}
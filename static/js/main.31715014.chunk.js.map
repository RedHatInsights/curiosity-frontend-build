{"version":3,"sources":["images/graph4x.png","images/graph2x.png","images/subscriptions.svg","common/helpers.js","components/pageLayout/pageHeader.js","components/pageLayout/pageSection.js","components/pageLayout/pageToolbar.js","components/pageLayout/pageLayout.js","types/rhsmApiTypes.js","common/dateHelpers.js","redux/common/reduxHelpers.js","redux/middleware/index.js","redux/middleware/statusMiddleware.js","redux/types/appTypes.js","redux/types/graphTypes.js","redux/types/platformTypes.js","redux/types/rhsmTypes.js","redux/types/userTypes.js","redux/types/index.js","redux/reducers/graphReducer.js","redux/reducers/inventoryReducer.js","redux/reducers/viewReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store.js","types/platformApiTypes.js","services/platformServices.js","redux/actions/platformActions.js","services/config.js","services/rhsmServices.js","redux/actions/rhsmActions.js","services/userServices.js","components/i18n/i18n.js","redux/actions/userActions.js","redux/actions/index.js","redux/selectors/graphCardSelectors.js","redux/selectors/userSelectors.js","redux/selectors/viewSelectors.js","redux/selectors/index.js","redux/index.js","components/form/select.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardTypes.js","components/graphCard/graphCardChartTooltip.js","components/graphCard/graphCardChartLegend.js","components/chartArea/chartArea.js","components/graphCard/graphCard.js","components/c3GraphCard/c3GraphCardHelpers.js","components/c3GraphCard/c3GraphCardLegendItem.js","components/c3Chart/c3Chart.js","components/c3GraphCard/c3GraphCard.js","components/toolbar/toolbarTypes.js","components/toolbar/toolbar.js","components/openshiftView/openshiftView.js","components/optinView/optinView.js","components/rhelView/rhelView.js","components/tourView/tourView.js","components/router/routerTypes.js","components/router/routerHelpers.js","components/router/redirect.js","components/router/router.js","components/messageView/messageView.js","components/authentication/authentication.js","components/app.js","index.js"],"names":["module","exports","noop","Function","prototype","noopPromise","Promise","resolve","helpers","browserExpose","obj","options","limit","id","process","window","generateId","prefix","Math","ceil","random","isPromise","Object","toString","call","noopTranslate","key","value","components","DEV_MODE","PROD_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_TABLE","UI_DISABLED_TOOLBAR","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_NAME","UI_PATH","UI_VERSION","UI_WINDOW_ID","PageHeader","children","title","defaultProps","PageSection","props","Section","PageToolbar","PageLayout","Fragment","React","Children","toArray","filter","child","isValidElement","type","className","RHSM_API_PATH_ID_TYPES","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","OPENSHIFT","RHSM_API_QUERY_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_QUERY_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","rhsmApiTypes","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","CLOUD_CORES","CLOUD_INSTANCES","CLOUD_SOCKETS","CORES","DATE","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_CAPACITY_META","RHSM_API_RESPONSE_CAPACITY_META_TYPES","COUNT","RHSM_API_RESPONSE_ERROR_DATA","RHSM_API_RESPONSE_ERROR_DATA_TYPES","CODE","DETAIL","RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES","GENERIC","OPTIN","RHSM_API_RESPONSE_INVENTORY_DATA","RHSM_API_RESPONSE_INVENTORY_DATA_TYPES","ID","NAME","HARDWARE","LAST_SEEN","RHSM_API_RESPONSE_INVENTORY_META","RHSM_API_RESPONSE_INVENTORY_META_TYPES","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","HAS_DATA","RHSM_API_RESPONSE_PRODUCTS_META","RHSM_API_RESPONSE_PRODUCTS_META_TYPES","RHSM_API_QUERY_GRANULARITY","RHSM_API_QUERY_LIMIT","RHSM_API_QUERY_OFFSET","RHSM_API_QUERY_OPTIN_TALLY_SYNC","RHSM_API_QUERY_OPTIN_TALLY_REPORT","RHSM_API_QUERY_OPTIN_CONDUIT_SYNC","RHSM_API_QUERY_SLA","RHSM_API_QUERY_START_DATE","RHSM_API_QUERY_END_DATE","getCurrentDate","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","date","subtract","measurement","startDate","moment","utc","startOf","toDate","endDate","endOf","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","getSingleResponseFromResultArray","results","updatedResults","payload","response","updatedResultsMessage","message","Array","isArray","firstErrorResponse","find","_get","status","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","data","formattedStatus","trim","_isPlainObject","JSON","stringify","getDateFromResults","getStatusFromResults","setStateProp","prop","state","initialState","reset","singlePromiseDataResponseFromArray","map","reduxHelpers","schemas","initialValue","schema","generated","values","forEach","types","action","expandedTypes","val","subVal","push","ref","RegExp","test","whichType","expandMetaTypes","meta","updatedMeta","query","metaData","metaId","metaQuery","baseState","error","errorMessage","fulfilled","pending","setId","errorResponse","cancelled","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","config","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","store","dispatch","next","httpStatus","payloadConfig","range","floor","statusMiddleware","promiseMiddleware","notificationsMiddleware","appTypes","STATUS_4XX","STATUS_5XX","graphTypes","SET_GRAPH_LEGEND","platformTypes","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","rhsmTypes","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_RHSM","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_HOSTS_INVENTORY_RHSM","SET_GRAPH_GRANULARITY_RHSM","SET_GRAPH_SLA_RHSM","userTypes","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","legend","reportCapacity","graphReducer","hostsInventory","inventoryReducer","graphQuery","viewReducer","viewId","optin","session","errorCodes","locale","userReducer","actionStatus","reducers","notifications","graph","inventory","user","view","reduxReducers","combineReducers","createStore","applyMiddleware","platformApiTypes","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","getUser","a","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","auth","Error","getUserPermissions","appName","REACT_APP_DEBUG_PERMISSION_RESOURCE","REACT_APP_DEBUG_PERMISSION_OPERATION","e","platformServices","initializeChrome","init","onNavigation","callback","on","setAppName","name","identifyApp","reject","setNavigation","location","navigation","item","active","pathname","split","slice","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","serviceConfig","passedConfig","headers","timeout","cancelTokens","serviceCall","updatedConfig","cancelTokensId","url","cancel","CancelToken","source","cancelToken","token","axios","rhsmServices","getApiVersion","getGraphCapacity","params","getGraphReports","getHostsInventory","rhsmActions","getGraphReportsCapacity","all","getLocaleFromCookie","Cookies","get","replace","LocaleCode","getLanguageName","userServices","authorizeUser","userData","userPermissions","keys","length","permissions","emulatedErrorResponse","getLocale","defaultLocale","logoutUser","deleteAccountOptIn","method","getAccountOptIn","updateAccountOptIn","translate","translateKey","Trans","i18nKey","i18next","t","I18n","isLoaded","i18nInit","fallbackLng","loadPath","use","XHR","initReactI18next","backend","lng","debug","ns","defaultNS","react","useSuspense","setState","this","prevProps","Component","actions","platform","rhsm","rejected","variant","description","dismissable","reduxActions","graphCardCache","dataId","graphCardSelector","createSelector","productId","responseData","updatedResponseData","graphData","responseMetaQuery","cachedGranularity","undefined","assign","_isEqual","report","capacity","reportData","capacityData","graphDataKey","tallySchema","capacitySchema","customReportValue","presetData","hasData","customCapacityValue","x","y","hasInfinite","index","generateGraphData","graphDataObj","keyPrefix","customValue","graphDataObjKey","generatedY","casedGraphDataObjKey","_camelCase","Number","parseInt","updatedItem","graphCardSelectors","graphCard","makeGraphCard","userSessionSelector","rest","updatedSession","admin","authorized","entitled","subscriptionPermissions","src","permission","app","resource","operation","definitions","userSessionSelectors","userSession","makeUserSession","viewSelector","createSelectorCreator","defaultMemoize","createDeepEqualSelector","viewGraph","reduxSelectors","userSelectors","makeView","connectTranslate","mapStateToProps","mapDispatchToProps","component","connect","withTranslation","Select","isExpanded","selected","onSelect","event","titleSelection","updatedOptions","optionsIndex","findIndex","option","SelectVariant","single","updateSelected","opt","mockUpdatedOptions","_cloneDeep","mockTarget","selectedIndex","checkbox","checked","mockEvent","target","currentTarget","persist","onToggle","expanded","formatOptions","selectedOptions","activateOptions","convertedOption","text","textContent","label","includes","ariaLabel","isDisabled","placeholder","pfSelectOptions","aria-label","selections","placeholderText","btoa","data-value","data-title","getTooltipDate","momentDate","format","add","graphCardHelpers","getChartXAxisLabelIncrement","xAxisTickFormat","tick","previousDate","formattedDate","isNewYear","year","yAxisTickFormat","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","graphCardTypes","optionsType","GraphCardChartTooltip","datum","product","header","itemsByKey","tempDataFacet","color","thresholdStringValue","dataFactsValue","summary","colSpan","dataFacet","aria-hidden","style","backgroundColor","TranslatedGraphCardChartTooltip","GraphCardChartLegend","onClick","chart","updatedToggle","toggle","dataSets","isToggled","hide","chartId","isThreshold","labelContent","tooltipContent","checkIsToggled","button","Button","onKeyPress","tabIndex","icon","visibility","borderTopColor","Tooltip","content","position","TooltipPosition","top","distance","entryDelay","exitDelay","stroke","renderLegendItem","ConnectedGraphCardChartLegend","ChartArea","chartWidth","dataSetsToggle","containerRef","createRef","tooltipRef","onResizeContainer","containerElement","current","clientWidth","onHide","forceUpdate","onRevert","getIsToggled","addEventListener","removeEventListener","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","floored","pow","log10","maxY","chartDomain","chartTooltip","tooltipDataSet","fill","mockDatum","tooltip","cloneElement","v","VictoryVoronoiCursorContainer","createContainer","parsedTooltipData","getTooltipData","globalContainerBounds","globalTooltipBounds","FlyoutComponent","containerBounds","getBoundingClientRect","tooltipBounds","right","xCoordinate","width","htmlContent","applyParsedTooltipData","height","display","xmlns","cursorDimension","labels","labelComponent","voronoiDimension","voronoiPadding","chartLegend","legendProps","revert","stacked","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","themeColor","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","tooltipComponent","containerComponent","renderTooltip","chartProps","Chart","duration","ChartAxis","renderChart","ChartStack","renderLegend","bottom","left","GraphCard","onUpdateGraphData","graphGranularity","toISOString","onGranularitySelect","filterGraphData","selectOptionsType","productShortLabel","updatedGranularity","chartAreaProps","filtered","tempFiltered","onLoad","chartColorGreenDark","filteredGraphData","cardTitle","Card","CardHead","CardActions","CardBody","Skeleton","size","SkeletonSize","xs","sm","md","lg","makeMapStateToProps","ConnectedGraphCard","c3GraphCardHelpers","hiddenDataFacets","converted","colors","columns","groups","names","convertTimeSeriesDate","local","totalData","filteredValue","pop","configuration","order","b","ratio","updatedValue","dataItem","dataValue","unloadBeforeLoad","show","spline","point","grid","axis","xAxisTicks","dateIndex","default","min","outer","C3GraphCardLegendItem","updatedIsToggled","onFocus","getToggle","focus","getColor","onMouseOver","onBlur","onMouseOut","C3Chart","node","generateChart","destroy","onComplete","updatedChart","c3","generate","bindto","load","unload","done","C3GraphCard","filteredData","isDataHidden","toolbarTypes","SLA_TYPES","Toolbar","onClear","dispatchFilter","onSlaSelect","slaOptions","filterSla","slaOptionsSelected","DataToolbar","collapseListedFiltersBreakpoint","clearAllFilters","DataToolbarContent","DataToolbarGroup","DataToolbarFilter","chips","deleteChip","categoryName","TranslatedToolbar","OpenshiftView","filters","initialFilters","initialOption","routeDetail","isC3","parsedSearch","pathParameter","renderSelect","chartColorBlueLight","chartColorBlueDark","ConnectedOpenshiftView","OptinView","onSubmitOptIn","disableButton","Form","ActionGroup","Spinner","isInline","href","CardHeadMain","Brand","srcSet","graphPng4x","graphPng2x","alt","CardHeader","Title","headingLevel","CardFooter","Flex","breakpointMods","modifier","FlexModifiers","column","row","breakpoint","FlexBreakpoints","FlexItem","renderOptinForm","renderTour","ConnectedOptinView","RhelView","chartColorCyanLight","chartColorCyanDark","chartColorPurpleLight","chartColorPurpleDark","ConnectedRhelView","TourView","EmptyState","EmptyStateVariant","full","subscriptionsSvg","EmptyStateBody","EmptyStateSecondaryActions","ConnectedTourView","platformLandingRedirect","path","join","platformModalRedirect","routes","to","redirect","exact","render","disabled","activateOnError","pathId","routerTypes","dynamicBaseName","pathName","pathPrefix","shift","pathSlice","baseName","getErrorRoute","route","getNavigationDetail","navigationItem","returnDefault","defaultItem","routeHref","getRouteDetail","routeItem","routerHelpers","getNavRouteDetail","navDetail","Redirect","urlRoute","history","isRedirect","isReplace","forcePath","RoutedRedirect","withRouter","Router","activateOnErrorRoute","redirectRoot","renderRoutes","hasParameters","strict","routeProps","URLSearchParams","decodeURIComponent","Set","search","param","updatedLocation","errorRoute","MessageView","pageTitle","EmptyStateIcon","Authentication","removeListeners","appNav","navId","BinocularsIcon","LockIcon","ConnectedAuthentication","App","ConnectedApp","connectRouter","basename","document","getElementById"],"mappings":"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","file":"static/js/main.31715014.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/graph4x.4d450825.png\";","module.exports = __webpack_public_path__ + \"static/media/graph2x.1e4428de.png\";","module.exports = __webpack_public_path__ + \"static/media/subscriptions.0ad5eae0.svg\";","/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n// ToDo: expand to include \"async\" check in scenarios where async/await are utilized.\n/**\n * Check if \"is a Promise\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => Object.prototype.toString.call(obj) === '[object Promise]';\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string} key\n * @param {string|object} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) =>\n  `t(${key}${(value && `, ${value}`) || ''}${(components && `, ${components}`) || ''})`;\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  browserExpose,\n  generateId,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PageHeader as RcsPageHeader,\n  PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components/components/PageHeader';\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {Node} props.children\n * @returns {Node}\n */\nconst PageHeader = ({ children }) => (\n  <RcsPageHeader>\n    <PageHeaderTitle title={children} />\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageHeader.defaultProps = {};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @returns {Node}\n */\nconst PageSection = ({ children, ...props }) => <Section {...props}>{children}</Section>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageSection.defaultProps = {};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @returns {Node}\n */\nconst PageToolbar = ({ children, ...props }) => <Section {...props}>{children}</Section>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageToolbar.defaultProps = {};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {Node} props.children\n * @returns {Node}\n */\nconst PageLayout = ({ children }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main className=\"curiosity\">\n      {React.Children.toArray(children).filter(child => child.type !== PageHeader && child.type !== PageToolbar)}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageLayout.defaultProps = {};\n\nexport { PageLayout as default, PageLayout, PageHeader, PageSection, PageToolbar };\n","/**\n * RHSM response Capacity DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\n\n/**\n * RHSM response Capacity DATA types.\n * Schema/map of expected Capacity data response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string,\n *     HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response Capacity META type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_META = 'meta';\n\n/**\n * RHSM response Capacity META types.\n * Schema/map of expected Capacity META response properties.\n *\n * @type {{COUNT: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_META_TYPES = {\n  COUNT: 'count'\n};\n\n/**\n * RHSM response Error DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA = 'errors';\n\n/**\n * RHSM response Error DATA types.\n * Schema/map of expected Error data response properties.\n *\n * @type {{CODE: string, DETAIL: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_TYPES = {\n  CODE: 'code',\n  DETAIL: 'detail'\n};\n\n/**\n * RHSM response Error DATA CODE types.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response inventory DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA = 'data';\n\n/**\n * RHSM response inventory DATA types.\n * Schema/map of expected inventory DATA response properties.\n *\n * @type {{CORES: string, HARDWARE: string, SOCKETS: string, ID: string, NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA_TYPES = {\n  ID: 'insights_id',\n  NAME: 'display_name',\n  CORES: 'cores',\n  SOCKETS: 'sockets',\n  HARDWARE: 'hardware_type',\n  LAST_SEEN: 'last_seen'\n};\n\n/**\n * RHSM response inventory type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_INVENTORY_META = 'meta';\n\n/**\n * RHSM response inventory META types.\n * Schema/map of expected Reporting/Tally META response properties.\n *\n * @type {{COUNT: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_META_TYPES = {\n  COUNT: 'count'\n};\n\n/**\n * RHSM response Reporting/Tally DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\n\n/**\n * RHSM response Reporting/Tally DATA types.\n * Schema/map of expected Reporting/Tally DATA response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, HAS_DATA: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM response Reporting/Tally META type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_META = 'meta';\n\n/**\n * RHSM response Reporting/Tally META types.\n * Schema/map of expected Reporting/Tally META response properties.\n *\n * @type {{COUNT: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_META_TYPES = {\n  COUNT: 'count'\n};\n\n/**\n * RHSM product id type values.\n *\n * @type {{RHEL_ARM: string, RHEL_WORKSTATION: string, RHEL_DESKTOP: string, RHEL: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_COMPUTE_NODE: string, RHEL_IBM_POWER: string,\n *     RHEL_X86: string, OPENSHIFT: string}}\n */\nconst RHSM_API_PATH_ID_TYPES = {\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  OPENSHIFT: 'OpenShift Container Platform'\n};\n\n/**\n * RHSM API query/search parameter GRANULARITY type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_GRANULARITY = 'granularity';\n\n/**\n * RHSM API query/search parameter of GRANULARITY type values.\n * Schema/map of expected query/search parameter granularity types.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\n\n/**\n * RHSM API query/search parameter results LIMIT type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_LIMIT = 'limit';\n\n/**\n * RHSM API query/search parameter result set OFFSET type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OFFSET = 'offset';\n\n/**\n * RHSM API query/search parameter OPT-IN TALLY SYNC type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OPTIN_TALLY_SYNC = 'enable_tally_sync';\n\n/**\n * RHSM API query/search parameter OPT-IN TALLY REPORT type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OPTIN_TALLY_REPORT = 'enable_tally_reporting';\n\n/**\n * RHSM API query/search parameter OPTIN CONDUIT SYNC type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OPTIN_CONDUIT_SYNC = 'enable_conduit_sync';\n\n/**\n * RHSM API query/search parameter SLA type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_SLA = 'sla';\n\n/**\n * RHSM API query/search parameter SLA type values.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_QUERY_SLA_TYPES = {\n  PREMIUM: 'premium',\n  STANDARD: 'standard',\n  SELF: 'self-support',\n  NONE: ''\n};\n\n/**\n * RHSM API query/search parameter START DATE type.\n * Associated with a sequential date prior/before the target date.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_START_DATE = 'beginning';\n\n/**\n * RHSM API query/search parameter END DATE type.\n * Associated with a sequential date on or after the target date. Limited by the current date.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_END_DATE = 'ending';\n\n/**\n * RHSM API types.\n *\n * @type {{RHSM_API_QUERY_END_DATE: string, RHSM_API_QUERY_START_DATE: string,\n *     RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES: {GENERIC: string, OPTIN: string},\n *     RHSM_API_RESPONSE_INVENTORY_DATA: string, RHSM_API_RESPONSE_CAPACITY_DATA: string,\n *     RHSM_API_RESPONSE_ERROR_DATA_TYPES: {CODE: string, DETAIL: string},\n *     RHSM_API_QUERY_OPTIN_TALLY_REPORT: string, RHSM_API_QUERY_OPTIN_TALLY_SYNC: string,\n *     RHSM_API_RESPONSE_CAPACITY_META_TYPES: {COUNT: string},\n *     RHSM_API_RESPONSE_CAPACITY_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string,\n *     SOCKETS: string, PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, HAS_INFINITE: string,\n *     PHYSICAL_CORES: string}, RHSM_API_QUERY_LIMIT: string,\n *     RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *     RHSM_API_RESPONSE_PRODUCTS_DATA: string, RHSM_API_QUERY_GRANULARITY: string,\n *     RHSM_API_RESPONSE_INVENTORY_META: string, RHSM_API_PATH_ID_TYPES: {RHEL_ARM: string,\n *     RHEL_WORKSTATION: string, RHEL_DESKTOP: string, RHEL: string, RHEL_SERVER: string, RHEL_IBM_Z: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_IBM_POWER: string, RHEL_X86: string, OPENSHIFT: string},\n *     RHSM_API_QUERY_SLA: string, RHSM_API_QUERY_OPTIN_CONDUIT_SYNC: string,\n *     RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_RESPONSE_CAPACITY_META: string,\n *     RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string,\n *     SOCKETS: string, HAS_DATA: string, PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string,\n *     PHYSICAL_CORES: string}, RHSM_API_RESPONSE_PRODUCTS_META: string, RHSM_API_RESPONSE_ERROR_DATA: string,\n *     RHSM_API_RESPONSE_INVENTORY_META_TYPES: {COUNT: string},\n *     RHSM_API_RESPONSE_PRODUCTS_META_TYPES: {COUNT: string},\n *     RHSM_API_RESPONSE_INVENTORY_DATA_TYPES: {CORES: string, HARDWARE: string, SOCKETS: string, ID: string,\n *     NAME: string, LAST_SEEN: string}, RHSM_API_QUERY_OFFSET: string}}\n */\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_META,\n  RHSM_API_RESPONSE_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_OPTIN_TALLY_SYNC,\n  RHSM_API_QUERY_OPTIN_TALLY_REPORT,\n  RHSM_API_QUERY_OPTIN_CONDUIT_SYNC,\n  RHSM_API_QUERY_SLA,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_META,\n  RHSM_API_RESPONSE_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_OPTIN_TALLY_SYNC,\n  RHSM_API_QUERY_OPTIN_TALLY_REPORT,\n  RHSM_API_QUERY_OPTIN_CONDUIT_SYNC,\n  RHSM_API_QUERY_SLA,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf('days').toDate()\n});\n\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} initialValue\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 300 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (process.env.REACT_APP_ENV === 'development' && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (process.env.REACT_APP_ENV === 'development' && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    delete updatedMeta.data;\n    delete updatedMeta.id;\n    delete updatedMeta.query;\n\n    return {\n      meta: { ...updatedMeta },\n      metaData: meta.data,\n      metaId: meta.id,\n      metaQuery: meta.query\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setResponseSchemas,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { statusMiddleware } from './statusMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  promiseMiddleware,\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","const SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_INIT: string, PLATFORM_SET_NAV: string,\n *     PLATFORM_CLEAR_NOTIFICATIONS: string, PLATFORM_ADD_NOTIFICATION: string,\n *     PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n","const GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_RHSM = 'GET_GRAPH_REPORT_RHSM';\nconst GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst SET_GRAPH_GRANULARITY_RHSM = 'SET_GRAPH_GRANULARITY_RHSM';\nconst SET_GRAPH_SLA_RHSM = 'SET_GRAPH_SLA_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, SET_GRAPH_GRANULARITY_RHSM: string,\n *     GET_GRAPH_CAPACITY_RHSM: string, SET_GRAPH_SLA_RHSM: string, GET_HOSTS_INVENTORY_RHSM: string,\n *     GET_GRAPH_REPORT_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  SET_GRAPH_GRANULARITY_RHSM,\n  SET_GRAPH_SLA_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  SET_GRAPH_GRANULARITY_RHSM,\n  SET_GRAPH_SLA_RHSM\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_AUTH: string, USER_LOCALE: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_AUTH,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { platformTypes } from './platformTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  platform: platformTypes,\n  rhsm: rhsmTypes,\n  user: userTypes\n};\n\nexport { reduxTypes as default, reduxTypes, appTypes, graphTypes, platformTypes, rhsmTypes, userTypes };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}}}\n */\nconst initialState = {\n  legend: {},\n  reportCapacity: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          ...action.legend\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [{ ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM }],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{inventory: {}}}\n */\nconst initialState = {\n  hostsInventory: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for systemInventory to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [{ ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM }],\n    state,\n    action\n  );\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_GRANULARITY, RHSM_API_QUERY_SLA } from '../../types/rhsmApiTypes';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphQuery: {}}}\n */\nconst initialState = {\n  graphQuery: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM:\n      return reduxHelpers.setStateProp(\n        'graphQuery',\n        {\n          [action.viewId]: {\n            ...state.graphQuery[action.viewId],\n            [RHSM_API_QUERY_GRANULARITY]: action[RHSM_API_QUERY_GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.rhsm.SET_GRAPH_SLA_RHSM:\n      return reduxHelpers.setStateProp(\n        'graphQuery',\n        {\n          [action.viewId]: {\n            ...state.graphQuery[action.viewId],\n            [RHSM_API_QUERY_SLA]: action[RHSM_API_QUERY_SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import _get from 'lodash/get';\nimport { appTypes, userTypes } from '../types';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{session: {errorCodes: Array, locale: string}, optin: {}}}\n */\nconst initialState = {\n  optin: {},\n  session: {\n    errorCodes: [],\n    locale: null\n  }\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(\n          reduxHelpers.getDataFromResults(action),\n          [rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA],\n          []\n        );\n\n        return reduxHelpers.setStateProp(\n          'session',\n          {\n            error: true,\n            errorCodes: errorCodes.map(value => value[rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE]),\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            locale: state.session.locale,\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'session', type: userTypes.USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport viewReducer from './viewReducer';\nimport userReducer from './userReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport { reduxReducers as default, reduxReducers, graphReducer, inventoryReducer, userReducer, viewReducer };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\n/**\n * Platform API types.\n *\n * @type {{PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES: {USER: string},\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS: string, PLATFORM_API_RESPONSE_USER_IDENTITY: string,\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES: {ENTITLED: string},\n *     PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES: {ORG_ADMIN: string}}}\n */\nconst platformApiTypes = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES\n};\n\nexport {\n  platformApiTypes as default,\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES\n};\n","import _set from 'lodash/set';\nimport { helpers } from '../common';\nimport { platformApiTypes } from '../types';\n\n/**\n * Basic user authentication.\n *\n * @returns {Promise<void>}\n */\nconst getUser = async () => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE &&\n        _set(\n          {},\n          [\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n          ],\n          process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n        )) ||\n      (await insights.chrome.auth.getUser())\n    );\n  } catch (e) {\n    throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n  }\n};\n\n/**\n * FixMe: revert this back towards async/await\n * Removed because there appears to be some quirky behavior where permissions will not come through\n * unless the function, and/or await are specifically returned, i.e. \"return await insights.chrome...\".\n */\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @returns {Promise<void>}\n */\nconst getUserPermissions = (appName = '') => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE && [\n        {\n          [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES\n            .PERMISSION]: `${helpers.UI_NAME}:${process.env.REACT_APP_DEBUG_PERMISSION_RESOURCE}:${process.env.REACT_APP_DEBUG_PERMISSION_OPERATION}`\n        }\n      ]) ||\n      insights.chrome.getUserPermissions(appName)\n    );\n  } catch (e) {\n    throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<void>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n// FixMe: Revert catch to throwing an error. Relaxed for development\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<void>}\n */\nconst setAppName = async (name = null) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.identifyApp(name);\n  } catch (e) {\n    const error = `{ identifyApp } = insights.chrome, ${e.message}`;\n    await Promise.reject(error);\n  }\n};\n\n// ToDo: Clean up, consider removing setNavigation, currently no longer used.\n/**\n * Set platform left hand navigation active item.\n *\n * @param {Array} data\n * @returns {*}\n */\nconst setNavigation = (data = []) => {\n  const { insights, location } = window;\n  try {\n    return insights.chrome.navigation(\n      data.map(item => ({\n        ...item,\n        active: item.id === location.pathname.split('/').slice(-1)[0]\n      }))\n    );\n  } catch (e) {\n    throw new Error(`{ navigation } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = { getUser, getUserPermissions, initializeChrome, onNavigation, setAppName, setNavigation };\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  getUserPermissions,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for handling the left-nav navigation active item.\n *\n * @param {object} data\n * @returns {Function}\n */\nconst setNavigation = data => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_SET_NAV\n  });\n  return platformServices.setNavigation(data);\n};\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import axios, { CancelToken } from 'axios';\nimport { platformServices } from './platformServices';\n\n/**\n * Apply consistent service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {object}\n */\nconst cancelTokens = {};\n\n/**\n * Call platform \"getUser\" auth method, and apply service config.\n *\n * @param {object} config\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n\n  const updatedConfig = { ...config };\n  const cancelTokensId = updatedConfig.url;\n\n  if (updatedConfig.cancel === true) {\n    if (cancelTokens[cancelTokensId]) {\n      cancelTokens[cancelTokensId].cancel('cancelled request');\n    }\n\n    cancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = cancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  return axios(serviceConfig(updatedConfig));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @returns {Promise<*>}\n */\nconst getApiVersion = () =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {Enum} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {Enum} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {Object} links\n * @apiSuccess {Object} meta\n * @apiSuccess {Enum} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {Enum} meta.product\n * - RHEL\n * @apiSuccess {Number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2019-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2019-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2019-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2019-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40\n *         },\n *         {\n *           \"date\": \"2019-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2018-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2018-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2018-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2018-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\"\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params,\n    cancel: true\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-07-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-02T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-03T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-04T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-05T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-06T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-08T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-09T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-10T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-31T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params,\n    cancel: true\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-56043XXX0d2f\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-2e65ad8e7d3e\",\n *           \"cores\": 4,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"physical\",\n *           \"number_of_guests\": 4,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-56043FFF0d2e\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-2e25aa8e7d3e\",\n *           \"cores\": 4,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"physical\",\n *           \"number_of_guests\": 2,\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 2\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${id}`,\n    params,\n    cancel: true\n  });\n\nconst rhsmServices = { getApiVersion, getGraphCapacity, getGraphReports, getHostsInventory };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport { rhsmServices as default, rhsmServices, getApiVersion, getGraphCapacity, getGraphReports, getHostsInventory };\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsmServices';\n\n/**\n * Get a combined RHSM response from reporting and capacity.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getGraphReportsCapacity = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n    payload: Promise.all([rhsmServices.getGraphReports(id, query), rhsmServices.getGraphCapacity(id, query)]),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst getHostsInventory = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n    payload: rhsmServices.getHostsInventory(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActions = { getGraphReportsCapacity, getHostsInventory };\n\nexport { rhsmActions as default, rhsmActions, getGraphReportsCapacity, getHostsInventory };\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { getUser, getUserPermissions } from './platformServices';\nimport { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * Apply an emulated API response to the platforms getUser method.\n *\n * @returns {Promise<{data: {permissions: (void|*[]), user: void}, message: string, status: number}>}\n */\nconst authorizeUser = async () => {\n  let message = '{ auth.getUser, getUserPermissions } = insights.chrome';\n  let userData;\n  let userPermissions;\n\n  try {\n    userData = await getUser();\n    userPermissions = await getUserPermissions(helpers.UI_NAME);\n  } catch (e) {\n    message = e.message;\n  }\n\n  if (_isPlainObject(userData) && Object.keys(userData).length) {\n    return Promise.resolve({ data: { user: userData, permissions: userPermissions || [] }, message, status: 200 });\n  }\n\n  const emulatedErrorResponse = {\n    ...new Error(message),\n    message,\n    status: 418\n  };\n\n  return Promise.reject(emulatedErrorResponse);\n};\n\n/**\n * Return a platform locale value from a cookie.\n *\n * @private\n * @returns {{value: string, key: string | null}|null}\n */\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\n/**\n * Return platform locale.\n *\n * @returns {Promise<{data: void}>}\n */\nconst getLocale = () => {\n  const defaultLocale = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_numner\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = () =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_numner\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport {\n  userServices as default,\n  userServices,\n  authorizeUser,\n  getLocale,\n  logoutUser,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, Trans, withTranslation } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string} translateKey\n * @param {string|Array} values A default string if the key can't be found. An array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @returns {string|Node}\n */\nconst translate = (translateKey, values = null, components) => {\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(translateKey, values, components);\n  }\n\n  if (components) {\n    return <Trans i18nKey={translateKey} values={values} components={components} />;\n  }\n\n  return i18next.t(translateKey, values);\n};\n\n/**\n * Apply string replacements against a component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst translateComponent = component => (!helpers.TEST_MODE && withTranslation()(component)) || component;\n\n/**\n * ToDo: reevaluate the \"I18nextProvider\" on package update.\n * Appears to have timing issues, and subsequent firings of the\n * ajax/xhr setup. Reverting it to just a function call that populates behind\n * the scenes appears more predictable.\n */\n/**\n * Load I18n.\n *\n * @augments React.Component\n */\nclass I18n extends React.Component {\n  state = { isLoaded: false };\n\n  componentDidMount() {\n    this.i18nInit();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { locale } = this.props;\n\n    if (locale !== prevProps.locale) {\n      this.i18nInit();\n    }\n  }\n\n  /**\n   * Load i18next.\n   *\n   * @returns {Promise<void>}\n   */\n  i18nInit = async () => {\n    const { fallbackLng, loadPath, locale } = this.props;\n\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: locale,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      // ToDo: eval the need for an isError state ref\n    }\n\n    this.setState({ isLoaded: true });\n  };\n\n  /**\n   * Render children after i18next loads.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { isLoaded } = this.state;\n    const { children } = this.props;\n\n    return (isLoaded && <React.Fragment>{children}</React.Fragment>) || <React.Fragment />;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: Node, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get an emulated API response from the platforms \"getUser\" method.\n *\n * @returns {Function}\n */\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userServices.authorizeUser()\n  });\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userServices.getLocale()\n});\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn = (query = {}) => dispatch =>\n  dispatch({\n    type: userTypes.UPDATE_USER_OPTIN,\n    payload: userServices.updateAccountOptIn(query),\n    meta: {\n      query,\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsErrorDescription'),\n          dismissable: true\n        },\n        fulfilled: {\n          variant: 'success',\n          title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsSuccessDescription'),\n          dismissable: true,\n          autoDismiss: false\n        }\n      }\n    }\n  });\n\nconst userActions = { authorizeUser, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport {\n  userActions as default,\n  userActions,\n  authorizeUser,\n  getLocale,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _get from 'lodash/get';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{dataId: {string}, data: {object}}}\n */\nconst graphCardCache = { dataId: null, data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst graphResponse = (state, props = {}) => ({\n  ..._get(state, ['graph', 'reportCapacity', props.productId]),\n  ...{\n    viewId: props.viewId,\n    productId: props.productId,\n    graphQuery: props.graphQuery\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst graphCardSelector = createSelector([graphResponse], response => {\n  const { viewId = null, productId = null, graphQuery = {}, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    graphData: {},\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n  delete responseMetaQuery[rhsmApiTypes.RHSM_API_QUERY_START_DATE];\n  delete responseMetaQuery[rhsmApiTypes.RHSM_API_QUERY_END_DATE];\n\n  const cachedGranularity =\n    (viewId && productId && graphCardCache.data[`${viewId}_${productId}_${JSON.stringify(graphQuery)}`]) || undefined;\n\n  Object.assign(updatedResponseData, { ...cachedGranularity });\n\n  if (viewId && graphCardCache.dataId !== viewId) {\n    graphCardCache.dataId = viewId;\n    graphCardCache.data = {};\n  }\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(graphQuery, responseMetaQuery)) {\n    const [report, capacity] = responseData.data;\n    const reportData = _get(report, [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA], []);\n    const capacityData = _get(capacity, [rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA], []);\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Reporting graph entries\n    const customReportValue = (data, key, presetData) => ({\n      ...presetData,\n      hasData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_DATA]\n    });\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y,\n      hasInfinite: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE]\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment.utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE]).startOf('day').toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY = Number.parseInt(graphDataObj[graphDataObjKey], 10);\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value }, customValue: customReportValue });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    graphCardCache.data[`${viewId}_${productId}_${JSON.stringify(graphQuery)}`] = {\n      ...updatedResponseData\n    };\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeGraphCardSelector = defaultProps => (state, props) => ({\n  ...graphCardSelector(state, props, defaultProps)\n});\n\nconst graphCardSelectors = {\n  graphCard: graphCardSelector,\n  makeGraphCard: makeGraphCardSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, graphCardSelector, makeGraphCardSelector };\n","import { createSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport { platformApiTypes } from '../../types/platformApiTypes';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @returns {object}\n */\nconst userSession = state => ({\n  ...state.user?.session\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{session: {entitled: boolean, permissions: Array, authorized: boolean, admin: boolean, error: boolean}}}\n */\nconst userSessionSelector = createSelector([userSession], response => {\n  const { error = false, fulfilled = false, data = {}, ...rest } = response || {};\n  const updatedSession = {\n    ...rest,\n    admin: false,\n    authorized: false,\n    entitled: false,\n    error,\n    permissions: []\n  };\n\n  if (!error && fulfilled) {\n    const { user = {}, permissions = [] } = data;\n\n    const admin = _get(\n      user,\n      [\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n      ],\n      false\n    );\n\n    const entitled = _get(\n      user,\n      [\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n        helpers.UI_NAME,\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED\n      ],\n      false\n    );\n\n    const subscriptionPermissions = permissions.map(value => {\n      const src = value[platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION];\n      const [app, resource, operation] = src.split(':');\n      return {\n        permission: { app, resource, operation, src },\n        definitions: value[platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]\n      };\n    });\n\n    updatedSession.admin = admin;\n    updatedSession.entitled = entitled;\n    updatedSession.permissions = subscriptionPermissions;\n\n    if (subscriptionPermissions.find(({ permission }) => permission.resource === '*' && permission.operation === '*')) {\n      updatedSession.authorized = true;\n    }\n  }\n\n  return { session: updatedSession };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{session: {entitled: boolean, permissions: Array, authorized: boolean, admin: boolean}}}\n */\nconst makeUserSessionSelector = defaultProps => (state, props) => ({\n  ...userSessionSelector(state, props, defaultProps)\n});\n\nconst userSessionSelectors = {\n  userSession: userSessionSelector,\n  makeUserSession: makeUserSessionSelector\n};\n\nexport { userSessionSelectors as default, userSessionSelectors, userSessionSelector, makeUserSessionSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _get from 'lodash/get';\nimport _isEqual from 'lodash/isEqual';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @param {object} defaultProps\n * @returns {object}\n */\nconst viewGraphQuery = (state = {}, props, defaultProps = {}) => ({\n  graphQuery: {\n    ...defaultProps.graphQuery,\n    ..._get(state, ['view', 'graphQuery', defaultProps.viewId])\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable API param/query object.\n *\n * @type {{graphQuery: object}}\n */\nconst viewSelector = createDeepEqualSelector([viewGraphQuery], viewGraph => ({\n  graphQuery: { ...viewGraph.graphQuery }\n}));\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{graphQuery: object}}\n */\nconst makeViewSelector = defaultProps => (state, props) => ({\n  ...viewSelector(state, props, defaultProps)\n});\n\nconst viewSelectors = {\n  view: viewSelector,\n  makeView: makeViewSelector\n};\n\nexport { viewSelectors as default, viewSelectors, viewSelector, makeViewSelector };\n","import graphCardSelectors from './graphCardSelectors';\nimport userSelectors from './userSelectors';\nimport viewSelectors from './viewSelectors';\n\nconst reduxSelectors = {\n  graphCard: graphCardSelectors,\n  user: userSelectors,\n  view: viewSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\nimport { helpers } from '../common/helpers';\n\nconst connectTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  connect(mapStateToProps, mapDispatchToProps)((!helpers.TEST_MODE && withTranslation()(component)) || component);\n\nconst connectRouterTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connectTranslate(mapStateToProps, mapDispatchToProps)(component));\n\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connect(mapStateToProps, mapDispatchToProps)(component));\n\nexport {\n  connect,\n  connectRouter,\n  connectRouterTranslate,\n  connectTranslate,\n  reduxActions,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  store\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * A wrapper for Patternfly Select. Provides additional event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @param expanded\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected =\n          activateOptions.includes(convertedOption.value) || activateOptions.includes(convertedOption.title);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, placeholder, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isExpanded={isExpanded}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(option.title)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{name: string, options: object, selectedOptions: (number|string|Array), variant: (object|string),\n *     className: string, id: string, isDisabled: boolean, placeholder: string, ariaLabel: string,\n *     onSelect: Function}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  placeholder: PropTypes.string,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{name: null, options: Array, selectedOptions: null, variant: SelectVariant.single,\n *     className: string, id: string, isDisabled: boolean, placeholder: string,\n *     ariaLabel: string, onSelect: Function}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  selectedOptions: null,\n  placeholder: 'Select option',\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) =>\n  new Intl.NumberFormat(locale, { maximumFractionDigits: 1, notation: 'compact', compactDisplay: 'short' }).format(\n    tick\n  );\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Return a set of options for display in a select/dropdown list.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getGranularityOptionsType = optionsType => {\n  if (optionsType === 'default') {\n    return {\n      selected: GRANULARITY_TYPES.DAILY,\n      options: [\n        { title: translate('curiosity-graph.dropdownDaily'), value: GRANULARITY_TYPES.DAILY, selected: true },\n        { title: translate('curiosity-graph.dropdownWeekly'), value: GRANULARITY_TYPES.WEEKLY },\n        { title: translate('curiosity-graph.dropdownMonthly'), value: GRANULARITY_TYPES.MONTHLY },\n        { title: translate('curiosity-graph.dropdownQuarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst graphCardTypes = {\n  getGranularityOptions: getGranularityOptionsType\n};\n\nexport { graphCardTypes as default, graphCardTypes, getGranularityOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.product\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, product, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      header = getTooltipDate({\n        date: itemsByKey[key]?.data.date,\n        granularity\n      });\n    }\n\n    const tempDataFacet = {\n      color: itemsByKey[key]?.color\n    };\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key]?.data.hasInfinite && t('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel'));\n\n      tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n      tempDataFacet.value = thresholdStringValue;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n      tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product });\n      tempDataFacet.value = dataFactsValue;\n    }\n\n    data.push(tempDataFacet);\n  });\n\n  return (\n    <div className=\"victory-tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  <div\n                    aria-hidden\n                    className=\"legend-icon victory-legend-icon\"\n                    style={{\n                      backgroundColor: dataFacet.color || 'transparent'\n                    }}\n                  />\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, product: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  product: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {}, product: string, t: Function}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  product: '',\n  t: helpers.noopTranslate\n};\n\nconst TranslatedGraphCardChartTooltip = withTranslation()(GraphCardChartTooltip);\n\nexport { TranslatedGraphCardChartTooltip as default, TranslatedGraphCardChartTooltip, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { connectTranslate, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @param {string} options.chartId\n   * @param {string} options.color\n   * @param {boolean} options.isDisabled\n   * @param {boolean} options.isThreshold\n   * @param {string} options.labelContent\n   * @param {string} options.tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"victory-legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: color\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: color\n              }}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          distance={-10}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, product, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold && t(`curiosity-graph.thresholdLabel`)) ||\n            t(`curiosity-graph.${id}Label`, { product }) ||\n            t(`curiosity-graph.noLabel`, { product });\n\n          // ToDo: Disabled tooltip content, reactivate accordingly, issues/158\n          // const tooltipContent =\n          //  (isThreshold && t(`curiosity-graph.thresholdLegendTooltip`)) || t(`curiosity-graph.${id}LegendTooltip`);\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold\n            // tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum, product: string, t: Function, legend, chart}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  product: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: { dataSets: [] }, product: string, t: Function, legend: {}, chart: {hide: Function,\n *     toggle: Function, isToggled: Function}}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  product: '',\n  t: helpers.noopTranslate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connectTranslate(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer } from 'victory';\nimport {\n  Chart,\n  ChartAxis,\n  ChartStack,\n  ChartThreshold,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n * @param id\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  dataSetsToggle = {};\n\n  containerRef = React.createRef();\n\n  tooltipRef = React.createRef();\n\n  componentDidMount() {\n    this.onResizeContainer();\n    window.addEventListener('resize', this.onResizeContainer);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * On window resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const containerElement = this.containerRef.current;\n\n    if (containerElement && containerElement.clientWidth) {\n      this.setState({ chartWidth: containerElement.clientWidth });\n    }\n  };\n\n  /**\n   * Consumer exposed, hides chart layer.\n   *\n   * @event onHide\n   * @param {string} id\n   */\n  onHide = id => {\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: true };\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns all chart layers back on.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    this.dataSetsToggle = {};\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns chart layer on/off.\n   *\n   * @event onToggle\n   * @param {string} id\n   * @returns {boolean}\n   */\n  onToggle = id => {\n    const updatedToggle = !this.dataSetsToggle[id];\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: updatedToggle };\n    this.forceUpdate();\n\n    return updatedToggle;\n  };\n\n  /**\n   * Consumer exposed, determine if chart layer on/off.\n   * Note: Using \"setState\" as related to this exposed check gives the appearance of a race condition.\n   * Using a class property with forceUpdate to bypass.\n   *\n   * @param {string} id\n   * @returns {boolean}\n   */\n  getIsToggled = id => this.dataSetsToggle[id] || false;\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { dataSetsToggle } = this;\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply data set to custom tooltips.\n   *\n   * @returns {Array}\n   */\n  getTooltipData() {\n    const { dataSetsToggle } = this;\n    const { dataSets, chartTooltip } = this.props;\n    let tooltipDataSet = [];\n\n    if (chartTooltip && dataSets && dataSets[0] && dataSets[0].data) {\n      tooltipDataSet = dataSets[0].data.map((dataSet, index) => {\n        const itemsByKey = {};\n\n        dataSets.forEach(data => {\n          if (!dataSetsToggle[data.id] && data.data && data.data[index]) {\n            itemsByKey[data.id] = {\n              color: data.stroke || data.fill || data.color || '',\n              data: _cloneDeep(data.data[index])\n            };\n          }\n        });\n\n        const mockDatum = {\n          datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey, dataSets: _cloneDeep(dataSets) }\n        };\n\n        return {\n          x: dataSet.x,\n          y: null,\n          itemsByKey,\n          tooltip:\n            (React.isValidElement(chartTooltip) && React.cloneElement(chartTooltip, { ...mockDatum })) ||\n            chartTooltip({ ...mockDatum })\n        };\n      });\n    }\n\n    return tooltipDataSet;\n  }\n\n  /**\n   * ToDo: monitor Victory charts release version increment around Voronoi container attributes.\n   * Future updates could lead to additional unexpected behavior. Victory charts released a patch/fix\n   * around attribute behavior for Voronoi containers. The behavior was already \"unexpected\" in that there appears\n   * to be a need to provide the \"label\" attribute when using the \"labelComponent\" attribute, even if \"label\" is\n   * just a pass-through. Providing `label={() => ''}` was a work-around, that is now `label={obj => obj}`. See\n   * - https://github.com/FormidableLabs/victory/blob/master/CHANGELOG.md#3436-2020-05-18\n   * - https://github.com/FormidableLabs/victory/pull/1581\n   */\n  /**\n   * Return a chart/graph tooltip Victory container component to allow custom HTML tooltips.\n   *\n   * @returns {Node}\n   */\n  renderTooltip() {\n    const { dataSetsToggle } = this;\n    const { chartTooltip, dataSets } = this.props;\n\n    if (!chartTooltip || Object.values(dataSetsToggle).filter(v => v === true).length === dataSets.length) {\n      return null;\n    }\n\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const parsedTooltipData = this.getTooltipData();\n    let globalContainerBounds = {};\n    let globalTooltipBounds = {};\n\n    const applyParsedTooltipData = ({ datum }) => {\n      const t = parsedTooltipData.find(v => v.x === datum.x) || {};\n      return t?.tooltip || '';\n    };\n\n    const FlyoutComponent = obj => {\n      const containerRef = this.containerRef.current;\n      const tooltipRef = this.tooltipRef.current;\n      const containerBounds = (containerRef && containerRef.getBoundingClientRect()) || {};\n      const tooltipBounds = (tooltipRef && tooltipRef.getBoundingClientRect()) || {};\n\n      if (containerBounds.right) {\n        globalContainerBounds = containerBounds;\n      }\n\n      if (tooltipBounds.right) {\n        globalTooltipBounds = tooltipBounds;\n      }\n\n      let xCoordinate = obj.x + 10;\n\n      if (\n        globalContainerBounds.right < globalTooltipBounds.right ||\n        obj.x + globalTooltipBounds.width > globalContainerBounds.right / 2\n      ) {\n        xCoordinate = obj.x - 10 - globalTooltipBounds.width;\n      }\n\n      const htmlContent = applyParsedTooltipData({ ...obj });\n\n      if (htmlContent) {\n        return (\n          <g>\n            <foreignObject x={xCoordinate} y={obj.y / 2} width=\"100%\" height=\"100%\">\n              <div ref={this.tooltipRef} style={{ display: 'inline-block' }} xmlns=\"http://www.w3.org/1999/xhtml\">\n                {htmlContent}\n              </div>\n            </foreignObject>\n          </g>\n        );\n      }\n\n      return <g />;\n    };\n\n    return (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={<FlyoutComponent />}\n        voronoiDimension=\"x\"\n        voronoiPadding={60}\n      />\n    );\n  }\n\n  /**\n   * Return a custom chart/graph legend component.\n   *\n   * @returns {Node}\n   */\n  renderLegend() {\n    const { chartLegend, dataSets } = this.props;\n\n    if (!chartLegend) {\n      return null;\n    }\n\n    const legendProps = {\n      datum: { dataSets: _cloneDeep(dataSets) },\n      chart: {\n        hide: this.onHide,\n        revert: this.onRevert,\n        toggle: this.onToggle,\n        isToggled: this.getIsToggled\n      }\n    };\n\n    return (\n      (React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n      chartLegend({ ...legendProps })\n    );\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const { dataSetsToggle } = this;\n    const { dataSets } = this.props;\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { chartLegend, padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const tooltipComponent = { containerComponent: (maxY >= 0 && this.renderTooltip()) || undefined };\n    const chartProps = { padding, ...chartDomain, ...tooltipComponent };\n\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n        {chartLegend && <div className=\"curiosity-chartarea-description victory-legend\">{this.renderLegend()}</div>}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartLegend: Node|Function, chartTooltip: Node|Function, padding, xAxisTickFormat: Function,\n *     themeColor: string, yAxisTickFormat: Function, domain: object|Array, dataSets: object,\n *     xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartLegend: null, chartTooltip: null, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: null, themeColor: string, yAxisTickFormat: null, domain: object,\n *     dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHead, CardActions, CardBody } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connectTranslate, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { rhsmApiTypes, RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport { graphCardTypes } from './graphCardTypes';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { ChartArea } from '../chartArea/chartArea';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphQuery, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(graphQuery, prevProps.graphQuery)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, graphQuery, isDisabled, productId } = this.props;\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const query = {\n        [rhsmApiTypes.RHSM_API_QUERY_START_DATE]: startDate.toISOString(),\n        [rhsmApiTypes.RHSM_API_QUERY_END_DATE]: endDate.toISOString(),\n        ...graphQuery\n      };\n\n      getGraphReportsCapacity(productId, query);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM,\n      viewId,\n      [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: value\n    });\n  };\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, graphQuery, selectOptionsType, productShortLabel, viewId } = this.props;\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: updatedGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(updatedGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 2.5;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <ChartArea\n        key={helpers.generateId()}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend chart={chart} datum={datum} product={productShortLabel} viewId={viewId} />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={updatedGranularity} product={productShortLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, graphQuery, isDisabled, selectOptionsType, pending, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    return (\n      <Card className=\"curiosity-usage-graph fadein\">\n        <CardHead>\n          <h2>{cardTitle}</h2>\n          <CardActions>\n            {children}\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onGranularitySelect}\n              options={options}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHead>\n        <CardBody>\n          <div className={`curiosity-skeleton-container ${(error && 'blur') || ''}`}>\n            {pending && (\n              <React.Fragment>\n                <Skeleton size={SkeletonSize.xs} />\n                <Skeleton size={SkeletonSize.sm} />\n                <Skeleton size={SkeletonSize.md} />\n                <Skeleton size={SkeletonSize.lg} />\n              </React.Fragment>\n            )}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, pending: boolean, error: boolean, graphQuery: object, cardTitle: string,\n *     filterGraphData: Array, getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  productShortLabel: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  selectOptionsType: 'default',\n  t: helpers.noopTranslate,\n  productShortLabel: '',\n  viewId: 'graphCard'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\nconst ConnectedGraphCard = connectTranslate(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import moment from 'moment';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale }) =>\n  new Intl.NumberFormat(locale, { maximumFractionDigits: 1, notation: 'compact', compactDisplay: 'short' }).format(\n    tick\n  );\n\n/**\n * Convert data into a C3 configuration object.\n *\n * @param {object} options\n * @param {Array} options.data\n * @param {string} options.granularity\n * @param {string} options.productShortLabel\n * @returns {{configuration: {padding: {top: number, left: number, bottom: number, right: number},\n *     data: {types: {}, names: {}, columns: [], x: string, groups: [[]], colors: {}},\n *     legend: {show: boolean}, grid: {y: {show: boolean}}, tooltip: {format: {title: (function(*): string),\n *     value: (function(*, *, *=, *): *)}, order: (function(*, *): number)}, unloadBeforeLoad: boolean,\n *     spline: {interpolation: {type: string}}, axis: {x: {padding: number,\n *     tick: {format: (function(*=): string)}, type: string}, y: {padding: {bottom: number},\n *     default: number[], min: number, tick: {show: boolean, outer: boolean,\n *     format: (function(*): string)}}}, point: {show: boolean}}, hiddenDataFacets: []}}\n */\nconst c3Config = ({ data = [], granularity, productShortLabel }) => {\n  const hiddenDataFacets = [];\n  const converted = {\n    x: 'x',\n    colors: {},\n    columns: [],\n    groups: [[]],\n    names: {},\n    types: {}\n  };\n\n  const convertTimeSeriesDate = value => {\n    const dateStr = (helpers.TEST_MODE && moment.utc(value)) || moment.utc(value).local();\n    return dateStr.format('YYYY-MM-DD');\n  };\n\n  data.forEach(value => {\n    if (/^threshold/.test(value.id)) {\n      converted.colors[value.id] = value.color || chartColorGreenDark.value;\n      converted.types[value.id] = 'step';\n      converted.names[value.id] = translate(`curiosity-graph.thresholdLabel`);\n    } else {\n      converted.colors[value.id] = value.color;\n      converted.types[value.id] = 'area-spline';\n      converted.groups[0].push(value.id);\n      converted.names[value.id] = translate(`curiosity-graph.${value.id}Label`, { product: productShortLabel });\n    }\n\n    converted.columns[0] = ['x'];\n    converted.columns.push([value.id]);\n\n    let totalData = 0;\n\n    value.data.forEach(filteredValue => {\n      converted.columns[0].push(convertTimeSeriesDate(filteredValue.date));\n      converted.columns[converted.columns.length - 1].push(filteredValue.y);\n      totalData += filteredValue.y || 0;\n    });\n\n    // ToDo: need to check for infinite threshold, possibly has data\n    if (totalData <= 0) {\n      converted.columns.pop();\n      hiddenDataFacets.push(value.id);\n    }\n  });\n\n  return {\n    hiddenDataFacets,\n    configuration: {\n      tooltip: {\n        order: (a, b) => converted.columns.indexOf(a.id) - converted.columns.indexOf(b.id),\n        format: {\n          title: date =>\n            getTooltipDate({\n              date,\n              granularity\n            }),\n          value: (value, ratio, id, index) => {\n            const dataItem = data.find(dataValue => id === dataValue.id)?.data[index];\n            let updatedValue;\n\n            if (/^threshold/.test(id)) {\n              updatedValue =\n                (dataItem?.hasInfinite && translate('curiosity-graph.infiniteThresholdLabel')) ||\n                (dataItem?.y ?? translate('curiosity-graph.noDataLabel'));\n            } else {\n              updatedValue =\n                (dataItem?.hasData === false && translate('curiosity-graph.noDataLabel')) || dataItem?.y || 0;\n            }\n\n            return updatedValue;\n          }\n        }\n      },\n      unloadBeforeLoad: true,\n      padding: { left: 40, right: 40, top: 10, bottom: 10 },\n      legend: { show: false },\n      spline: {\n        interpolation: {\n          type: 'monotone'\n        }\n      },\n      data: {\n        ...converted\n      },\n      point: {\n        show: false\n      },\n      grid: {\n        y: {\n          show: true\n        }\n      },\n      axis: {\n        x: {\n          type: 'timeseries',\n          tick: {\n            format: tick => {\n              const xAxisTicks = converted.columns[0].slice(1);\n              const formattedDate = convertTimeSeriesDate(tick);\n              const dateIndex = xAxisTicks.indexOf(formattedDate);\n              const previousDate = dateIndex > -1 && xAxisTicks[dateIndex - 1];\n\n              return xAxisTickFormat({\n                tick: dateIndex,\n                date: formattedDate,\n                previousDate,\n                granularity\n              });\n            }\n          },\n          padding: 0\n        },\n        y: {\n          default: [0, 50],\n          padding: { bottom: 0 },\n          min: 0,\n          tick: {\n            show: false,\n            outer: false,\n            format: tick => (tick === 0 ? '' : yAxisTickFormat({ tick }))\n          }\n        }\n      }\n    }\n  };\n};\n\nconst c3GraphCardHelpers = {\n  c3Config,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  c3GraphCardHelpers as default,\n  c3GraphCardHelpers,\n  c3Config,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\n\n/**\n * A chart/graph legend button.\n *\n * @augments React.Component\n * @fires onFocus\n * @fires onRevert\n * @fires onToggle\n */\nclass C3GraphCardLegendItem extends React.Component {\n  state = { updatedIsToggled: null };\n\n  /**\n   * C3 chart display focus.\n   *\n   * @event onFocus\n   */\n  onFocus = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, chartId, getToggle, isToggled } = this.props;\n\n    if ((typeof getToggle === 'function' && !isToggled) || !updatedIsToggled) {\n      chart.focus(chartId);\n    }\n  };\n\n  /**\n   * C3 chart display revert.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, getToggle, isToggled } = this.props;\n\n    if ((typeof getToggle === 'function' && !isToggled) || !updatedIsToggled) {\n      chart.revert();\n    }\n  };\n\n  /**\n   * C3 chart display toggle.\n   *\n   * @event onToggle\n   */\n  onToggle = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, chartId, getToggle, isToggled } = this.props;\n\n    chart.toggle(chartId);\n\n    if (typeof getToggle === 'function') {\n      getToggle({ isToggled: !isToggled });\n    } else {\n      this.setState({\n        updatedIsToggled: !updatedIsToggled\n      });\n    }\n\n    this.onRevert();\n  };\n\n  /**\n   * C3 chart display config color.\n   *\n   * @returns {string}\n   */\n  getColor = () => {\n    const { chart, chartId } = this.props;\n    return chart.color(chartId);\n  };\n\n  /**\n   * ToDO: evaluate using nullish coalescing operator for checkIsToggled\n   */\n  /**\n   * Render a chart legend item.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedIsToggled } = this.state;\n    const { children, chart, chartId, isDisabled, isThreshold, isToggled, tooltipContent } = this.props;\n    const checkIsToggled =\n      (updatedIsToggled === null && typeof isToggled === 'boolean' && isToggled) || updatedIsToggled || false;\n\n    if (checkIsToggled) {\n      chart.hide(chartId);\n    }\n\n    const button = (\n      <Button\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        onClick={this.onToggle}\n        onFocus={this.onFocus}\n        onMouseOver={this.onFocus}\n        onBlur={this.onRevert}\n        onMouseOut={this.onRevert}\n        onKeyPress={this.onToggle}\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: this.getColor()\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: this.getColor()\n              }}\n            />\n          )\n        }\n      >\n        {children}\n      </Button>\n    );\n\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={tooltipContent}\n          position={TooltipPosition.top}\n          distance={-10}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartId: string, children: Node, isDisabled: boolean, tooltipContent: Node, chart: object,\n *    isThreshold: boolean, isToggled: boolean, getToggle: Function}}\n */\nC3GraphCardLegendItem.propTypes = {\n  chart: PropTypes.shape({\n    color: PropTypes.func,\n    focus: PropTypes.func,\n    hide: PropTypes.func,\n    revert: PropTypes.func,\n    toggle: PropTypes.func\n  }),\n  chartId: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  isThreshold: PropTypes.bool,\n  isToggled: PropTypes.bool,\n  tooltipContent: PropTypes.node,\n  getToggle: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, isDisabled: boolean, tooltipContent: null, chart: {hide: Function,\n *    color: Function, focus: Function, revert: Function, toggle: Function}, isThreshold: boolean,\n *    isToggled: boolean, getToggle: Function}}\n */\nC3GraphCardLegendItem.defaultProps = {\n  chart: {\n    color: helpers.noop,\n    focus: helpers.noop,\n    hide: helpers.noop,\n    revert: helpers.noop,\n    toggle: helpers.noop\n  },\n  children: null,\n  isDisabled: false,\n  isThreshold: false,\n  isToggled: false,\n  tooltipContent: null,\n  getToggle: null\n};\n\nexport { C3GraphCardLegendItem as default, C3GraphCardLegendItem };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport c3 from 'c3';\nimport _isEqual from 'lodash/isEqual';\nimport 'c3/c3.min.css';\nimport { helpers } from '../../common';\n\n/**\n * C3 wrapper.\n * Uses aspects from https://github.com/bcbcarl/react-c3js and https://github.com/wuct/react-c3-component\n *\n * @augments React.Component\n */\nclass C3Chart extends React.Component {\n  state = { chart: null };\n\n  node = React.createRef();\n\n  componentDidMount() {\n    this.generateChart();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { config } = this.props;\n\n    if (!_isEqual(prevProps.config.data, config.data)) {\n      this.generateChart();\n    }\n  }\n\n  componentWillUnmount() {\n    const { chart } = this.state;\n    if (chart) {\n      chart.destroy();\n    }\n    this.setState({ chart: null });\n  }\n\n  generateChart() {\n    const { chart } = this.state;\n    const { config, onComplete } = this.props;\n\n    let updatedChart = chart;\n    if (!updatedChart) {\n      updatedChart = c3.generate({ bindto: this.node.current, ...config });\n    }\n\n    updatedChart.load({\n      ...config.data,\n      unload: config.unloadBeforeLoad || false,\n      done: () => {\n        this.setState({ chart: updatedChart }, () => {\n          if (config.done) {\n            config.done({ chart: updatedChart, config });\n          } else {\n            onComplete({ chart: updatedChart, config });\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const { chart } = this.state;\n    const { className, children, config, style } = this.props;\n\n    return (\n      <div className={`curiosity-c3chart ${className}`} style={style}>\n        <div ref={this.node} className=\"curiosity-c3chart-container\" />\n        {chart && (\n          <div className=\"curiosity-c3chart-description\">\n            {(typeof children === 'function' && children({ chart, config })) || children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{children: Node|Function, onComplete: Function, className: string, style: object, config}}\n */\nC3Chart.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  className: PropTypes.string,\n  config: PropTypes.shape({\n    unloadBeforeLoad: PropTypes.bool,\n    data: PropTypes.object,\n    done: PropTypes.func\n  }),\n  onComplete: PropTypes.func,\n  style: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, onComplete: Function, className: null, style: {}, config: {}}}\n */\nC3Chart.defaultProps = {\n  children: null,\n  className: null,\n  config: {},\n  onComplete: helpers.noop,\n  style: {}\n};\n\nexport { C3Chart as default, C3Chart };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHead, CardActions, CardBody } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connectTranslate, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { rhsmApiTypes, RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { c3GraphCardHelpers } from './c3GraphCardHelpers';\nimport { C3GraphCardLegendItem } from './c3GraphCardLegendItem';\nimport { graphCardTypes } from '../graphCard/graphCardTypes';\nimport { C3Chart } from '../c3Chart/c3Chart';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass C3GraphCard extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphQuery, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(graphQuery, prevProps.graphQuery)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, graphQuery, isDisabled, productId } = this.props;\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const query = {\n        [rhsmApiTypes.RHSM_API_QUERY_START_DATE]: startDate.toISOString(),\n        [rhsmApiTypes.RHSM_API_QUERY_END_DATE]: endDate.toISOString(),\n        ...graphQuery\n      };\n\n      getGraphReportsCapacity(productId, query);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM,\n      viewId,\n      [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: value\n    });\n  };\n\n  /**\n   * Apply a custom legend.\n   *\n   * @param {object} options\n   * @param {Function} options.chart\n   * @param {Array} options.filteredData\n   * @param {string} options.granularity\n   * @param {Array} options.hiddenDataFacets\n   * @returns {Array}\n   */\n  renderLegend({ chart, filteredData = [], granularity, hiddenDataFacets = [] }) {\n    const { state } = this;\n    const { productId, productShortLabel, t } = this.props;\n\n    return filteredData.map(({ id }) => {\n      const isThreshold = /^threshold/.test(id);\n      const isDataHidden = hiddenDataFacets.includes(id);\n      const tooltipContent = (\n        <p>{(isThreshold && t(`curiosity-graph.thresholdLegendTooltip`)) || t(`curiosity-graph.${id}LegendTooltip`)}</p>\n      );\n\n      const getToggle = ({ isToggled }) => this.setState({ [`${productId}-${granularity}-${id}`]: isToggled });\n      const isToggled = state[`${productId}-${granularity}-${id}`] || false;\n\n      return (\n        <C3GraphCardLegendItem\n          key={`legend-${productId}-${granularity}-${id}`}\n          chart={chart}\n          chartId={id}\n          tooltipContent={tooltipContent}\n          isDisabled={isDataHidden}\n          isThreshold={isThreshold}\n          isToggled={isToggled}\n          getToggle={getToggle}\n        >\n          {(isThreshold && t(`curiosity-graph.thresholdLabel`)) ||\n            t(`curiosity-graph.${id}Label`, { product: productShortLabel })}\n        </C3GraphCardLegendItem>\n      );\n    });\n  }\n\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, graphQuery, selectOptionsType, productId, productShortLabel } = this.props;\n\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    if (!graphData || !Object.values(graphData).length) {\n      return null;\n    }\n\n    const filtered = [];\n\n    if (filterGraphData.length) {\n      filterGraphData.forEach(filteredValue => {\n        if (graphData[filteredValue.id]) {\n          filtered.push({ ...filteredValue, data: [...graphData[filteredValue.id]] });\n        }\n      });\n    } else {\n      Object.keys(graphData).forEach(id => {\n        filtered.push({ id, data: [...graphData[id]] });\n      });\n    }\n\n    const { configuration = {}, hiddenDataFacets = [] } = c3GraphCardHelpers.c3Config({\n      data: filtered,\n      granularity: updatedGranularity,\n      productShortLabel\n    });\n\n    return (\n      <C3Chart key={`chart-${productId}-${updatedGranularity}`} config={configuration}>\n        {({ chart }) =>\n          this.renderLegend({\n            chart,\n            filteredData: filtered,\n            granularity: updatedGranularity,\n            hiddenDataFacets\n          })\n        }\n      </C3Chart>\n    );\n  }\n\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, graphQuery, isDisabled, selectOptionsType, pending, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    return (\n      <Card className=\"curiosity-usage-graph fadein\">\n        <CardHead>\n          <h2>{cardTitle}</h2>\n          <CardActions>\n            {children}\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onGranularitySelect}\n              options={options}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHead>\n        <CardBody>\n          <div className={`curiosity-skeleton-container ${(error && 'blur') || ''}`}>\n            {pending && (\n              <React.Fragment>\n                <Skeleton size={SkeletonSize.xs} />\n                <Skeleton size={SkeletonSize.sm} />\n                <Skeleton size={SkeletonSize.md} />\n                <Skeleton size={SkeletonSize.lg} />\n              </React.Fragment>\n            )}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, pending: boolean, error: boolean, graphQuery: object, cardTitle: string,\n *     filterGraphData: Array, getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nC3GraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      color: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  productShortLabel: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nC3GraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  selectOptionsType: 'default',\n  t: helpers.noopTranslate,\n  productShortLabel: '',\n  viewId: 'graphCard'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\nconst ConnectedGraphCard = connectTranslate(makeMapStateToProps, mapDispatchToProps)(C3GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, C3GraphCard };\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_SLA_TYPES as SLA_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = (optionsType = 'sla') => {\n  if (optionsType === 'sla') {\n    return {\n      selected: null,\n      options: [\n        {\n          title: translate('curiosity-toolbar.slaPremium'),\n          value: SLA_TYPES.PREMIUM\n        },\n        {\n          title: translate('curiosity-toolbar.slaStandard'),\n          value: SLA_TYPES.STANDARD\n        },\n        {\n          title: translate('curiosity-toolbar.slaSelfSupport'),\n          value: SLA_TYPES.SELF\n        },\n        {\n          title: translate('curiosity-toolbar.slaNone'),\n          value: SLA_TYPES.NONE\n        }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst toolbarTypes = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarTypes as default, toolbarTypes, getOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { DataToolbar, DataToolbarContent, DataToolbarFilter, DataToolbarGroup } from '@patternfly/react-core';\nimport { Select } from '../form/select';\nimport { reduxTypes, store } from '../../redux';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { helpers } from '../../common';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onSlaSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    this.dispatchFilter(reduxTypes.rhsm.SET_GRAPH_SLA_RHSM, { [rhsmApiTypes.RHSM_API_QUERY_SLA]: null });\n  };\n\n  /**\n   * Set SLA filter selection.\n   *\n   * @event onSlaSelect\n   * @param {object} event\n   */\n  onSlaSelect = event => {\n    const { value } = event;\n\n    this.dispatchFilter(reduxTypes.rhsm.SET_GRAPH_SLA_RHSM, { [rhsmApiTypes.RHSM_API_QUERY_SLA]: value });\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {string} type\n   * @param {object} data\n   */\n  dispatchFilter(type, data = {}) {\n    const { viewId } = this.props;\n\n    if (type) {\n      store.dispatch({\n        type,\n        viewId,\n        ...data\n      });\n    }\n  }\n\n  // ToDo: API to provide SLA options from endpoint.\n  /**\n   * Available and selected SLA options.\n   *\n   * @returns {{slaOptionsSelected: Array, slaOptions: object}}\n   */\n  filterSla() {\n    const { graphQuery } = this.props;\n\n    const slaOptions = toolbarTypes.getOptions();\n    const filterSla =\n      typeof graphQuery[rhsmApiTypes.RHSM_API_QUERY_SLA] === 'string' &&\n      slaOptions.options.find(val => val.value === graphQuery[rhsmApiTypes.RHSM_API_QUERY_SLA]);\n\n    const slaOptionsSelected =\n      (filterSla && filterSla.title && [filterSla.title]) || (slaOptions.selected && [slaOptions.selected]) || [];\n\n    return { slaOptions, slaOptionsSelected };\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { slaOptions, slaOptionsSelected } = this.filterSla();\n\n    return (\n      <DataToolbar\n        id=\"curiosity-toolbar\"\n        className=\"pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"xl\"\n        clearAllFilters={this.onClear}\n      >\n        <DataToolbarContent>\n          <DataToolbarGroup variant=\"filter-group\">\n            <DataToolbarFilter\n              chips={slaOptionsSelected}\n              deleteChip={this.onClear}\n              categoryName={t('curiosity-toolbar.slaCategory')}\n            >\n              <Select\n                aria-label={t('curiosity-toolbar.slaCategory')}\n                onSelect={this.onSlaSelect}\n                selectedOptions={slaOptionsSelected}\n                placeholder={t('curiosity-toolbar.slaPlaceholder')}\n                options={slaOptions.options}\n              />\n            </DataToolbarFilter>\n          </DataToolbarGroup>\n        </DataToolbarContent>\n      </DataToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, isDisabled: boolean, graphQuery: object}}\n */\nToolbar.propTypes = {\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_SLA]: PropTypes.string\n  }),\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: Function, isDisabled: boolean, graphQuery: {}}}\n */\nToolbar.defaultProps = {\n  graphQuery: {},\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: helpers.noopTranslate,\n  viewId: 'toolbar'\n};\n\nconst TranslatedToolbar = withTranslation()(Toolbar);\n\nexport { TranslatedToolbar as default, TranslatedToolbar, Toolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { PageLayout, PageHeader, PageSection, PageToolbar } from '../pageLayout/pageLayout';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { connectTranslate, reduxSelectors } from '../../redux';\nimport GraphCard from '../graphCard/graphCard';\nimport C3GraphCard from '../c3GraphCard/c3GraphCard';\nimport { Select } from '../form/select';\nimport Toolbar from '../toolbar/toolbar';\nimport { helpers } from '../../common';\n\n/**\n * An OpenShift encompassing view.\n *\n * @augments React.Component\n * @fires onSelect\n */\nclass OpenshiftView extends React.Component {\n  state = {\n    option: null,\n    filters: []\n  };\n\n  componentDidMount() {\n    const { initialOption } = this.props;\n    this.onSelect({ value: initialOption });\n  }\n\n  /**\n   * Apply a selected filtered value.\n   *\n   * @event onSelect\n   * @param {object} event\n   */\n  onSelect = (event = {}) => {\n    const { option } = this.state;\n    const { initialFilters } = this.props;\n    const { value } = event;\n\n    if (value !== option) {\n      const filters = initialFilters.filter(val => new RegExp(value, 'i').test(val.id));\n      this.setState({\n        option,\n        filters\n      });\n    }\n  };\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  renderSelect() {\n    const { option } = this.state;\n    const { initialOption } = this.props;\n    const options = [\n      { title: 'Cores', value: 'cores' },\n      { title: 'Sockets', value: 'sockets' }\n    ];\n\n    return <Select onSelect={this.onSelect} options={options} selectedOptions={option || initialOption} />;\n  }\n\n  /**\n   * Render an OpenShift view.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { filters } = this.state;\n    const { graphQuery, location, routeDetail, t, viewId } = this.props;\n    const isC3 = location?.parsedSearch?.c3 === '';\n\n    return (\n      <PageLayout>\n        <PageHeader>{t('curiosity-view.openshift', helpers.UI_DISPLAY_CONFIG_NAME)}</PageHeader>\n        <PageToolbar>\n          <Toolbar graphQuery={graphQuery} viewId={viewId} />\n        </PageToolbar>\n        <PageSection>\n          {(isC3 && (\n            <C3GraphCard\n              key={routeDetail.pathParameter}\n              filterGraphData={filters}\n              graphQuery={graphQuery}\n              productId={routeDetail.pathParameter}\n              viewId={viewId}\n              cardTitle={t('curiosity-graph.cardHeading')}\n              productShortLabel={viewId}\n            >\n              {this.renderSelect()}\n            </C3GraphCard>\n          )) || (\n            <GraphCard\n              key={routeDetail.pathParameter}\n              filterGraphData={filters}\n              graphQuery={graphQuery}\n              productId={routeDetail.pathParameter}\n              viewId={viewId}\n              cardTitle={t('curiosity-graph.cardHeading')}\n              productShortLabel={viewId}\n            >\n              {this.renderSelect()}\n            </GraphCard>\n          )}\n        </PageSection>\n      </PageLayout>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{initialFilters: Array, initialOption: string, viewId: string, t: Function, routeDetail: object,\n *     location: object, graphQuery: object}}\n */\nOpenshiftView.propTypes = {\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)])\n  }),\n  initialOption: PropTypes.oneOf(['cores', 'sockets']),\n  initialFilters: PropTypes.array,\n  location: PropTypes.shape({\n    parsedSearch: PropTypes.objectOf(PropTypes.string)\n  }).isRequired,\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    pathId: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    })\n  }).isRequired,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{initialFilters: Array, initialOption: string, viewId: string, t: Function, graphQuery: object}}\n */\nOpenshiftView.defaultProps = {\n  graphQuery: {\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  initialOption: 'cores',\n  initialFilters: [\n    { id: 'cores', fill: chartColorBlueLight.value, stroke: chartColorBlueDark.value, color: chartColorBlueDark.value },\n    {\n      id: 'sockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    { id: 'thresholdSockets' },\n    { id: 'thresholdCores' }\n  ],\n  t: helpers.noopTranslate,\n  viewId: 'OpenShift'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.view.makeView(OpenshiftView.defaultProps);\n\nconst ConnectedOpenshiftView = connectTranslate(makeMapStateToProps)(OpenshiftView);\n\nexport { ConnectedOpenshiftView as default, ConnectedOpenshiftView, OpenshiftView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Brand,\n  Button,\n  Card,\n  CardHead,\n  CardHeadMain,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Flex,\n  FlexItem,\n  FlexBreakpoints,\n  FlexModifiers,\n  Form,\n  ActionGroup,\n  Spinner,\n  Title\n} from '@patternfly/react-core';\nimport { connectTranslate, reduxActions } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { PageLayout } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport graphPng2x from '../../images/graph2x.png';\nimport graphPng4x from '../../images/graph4x.png';\n\n/**\n * An account opt-in view.\n *\n * @augments React.Component\n * @fires onSubmitOptIn\n */\nclass OptinView extends React.Component {\n  /**\n   * Submit and update account opt-in.\n   *\n   * @event onSubmitOptIn\n   */\n  onSubmitOptIn = () => {\n    const { updateAccountOptIn } = this.props;\n    updateAccountOptIn();\n  };\n\n  /**\n   * Render opt-in form states.\n   *\n   * @returns {Node}\n   */\n  renderOptinForm() {\n    const { error, fulfilled, pending, session, t } = this.props;\n    const disableButton = session.status !== 403;\n\n    if (pending) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              <Spinner size=\"sm\" /> {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n        </Form>\n      );\n    }\n\n    if (error) {\n      return (\n        <p>\n          {translate('curiosity-optin.cardIsErrorDescription', { appName: helpers.UI_DISPLAY_NAME }, [\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              target=\"_blank\"\n              href=\"https://access.redhat.com/account-team\"\n            />\n          ])}\n        </p>\n      );\n    }\n\n    if (disableButton || fulfilled) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              {t('curiosity-optin.buttonIsActive', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n          {fulfilled && <p>{t('curiosity-optin.cardIsActiveDescription')}</p>}\n        </Form>\n      );\n    }\n\n    return (\n      <Form>\n        <ActionGroup>\n          <Button variant=\"primary\" onClick={this.onSubmitOptIn}>\n            {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n          </Button>\n        </ActionGroup>\n      </Form>\n    );\n  }\n\n  /**\n   * Render tour copy and button.\n   *\n   * @returns {Node}\n   */\n  renderTour() {\n    const { t } = this.props;\n\n    return (\n      <Card className=\"curiosity-optin-tour\">\n        <CardHead>\n          <CardHeadMain>\n            <Brand\n              srcSet={`${graphPng4x} 1064w, ${graphPng2x} 600w`}\n              src={graphPng4x}\n              alt={t('curiosity-optin.tourTitleImageAlt')}\n              aria-hidden\n              className=\"curiosity-optin-image\"\n            />\n          </CardHeadMain>\n        </CardHead>\n        <CardHeader>\n          <Title headingLevel=\"h3\" size=\"2xl\">\n            {t('curiosity-optin.tourTitle')}\n          </Title>\n        </CardHeader>\n        <CardBody>{t('curiosity-optin.tourDescription')}</CardBody>\n        <CardFooter>\n          <Button variant=\"secondary\" className=\"uxui-curiosity__button-tour\">\n            {t('curiosity-optin.buttonTour')}\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n\n  /**\n   * Render opt-in.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { t } = this.props;\n\n    return (\n      <PageLayout>\n        <Card>\n          <Flex\n            breakpointMods={[\n              { modifier: FlexModifiers.column },\n              { modifier: FlexModifiers.row, breakpoint: FlexBreakpoints.md }\n            ]}\n          >\n            <Flex breakpointMods={[{ modifier: FlexModifiers['flex-2'] }]}>\n              <FlexItem>\n                <CardHeader key=\"heading1Title\">\n                  <Title size=\"2xl\">{t('curiosity-optin.cardTitle', { appName: helpers.UI_DISPLAY_NAME })}</Title>\n                </CardHeader>\n                <CardBody key=\"heading1Desc\">\n                  {t('curiosity-optin.cardDescription', { appName: helpers.UI_DISPLAY_NAME })}\n                </CardBody>\n\n                <CardHeader key=\"heading2Title\">\n                  <Title headingLevel=\"h2\" size=\"xl\">\n                    {t('curiosity-optin.cardSeeTitle')}\n                  </Title>\n                </CardHeader>\n                <CardBody key=\"heading2Desc\">{t('curiosity-optin.cardSeeDescription')}</CardBody>\n\n                <CardHeader key=\"heading3Title\">\n                  <Title headingLevel=\"h2\" size=\"xl\">\n                    {t('curiosity-optin.cardReportTitle')}\n                  </Title>\n                </CardHeader>\n                <CardBody key=\"heading3Desc\">{t('curiosity-optin.cardReportDescription')}</CardBody>\n\n                <CardHeader key=\"heading4Title\">\n                  <Title headingLevel=\"h2\" size=\"xl\">\n                    {t('curiosity-optin.cardFilterTitle')}\n                  </Title>\n                </CardHeader>\n                <CardBody key=\"heading4Desc\">{t('curiosity-optin.cardFilterDescription')}</CardBody>\n\n                <CardFooter>{this.renderOptinForm()}</CardFooter>\n              </FlexItem>\n            </Flex>\n            <Flex\n              breakpointMods={[{ modifier: FlexModifiers['flex-1'] }, { modifier: FlexModifiers['align-self-center'] }]}\n            >\n              <FlexItem>\n                <CardBody>{this.renderTour()}</CardBody>\n              </FlexItem>\n            </Flex>\n          </Flex>\n        </Card>\n      </PageLayout>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{t: Function, session: object, updateAccountOptIn: Function, pending: boolean, fulfilled: boolean,\n *     error: boolean}}\n */\nOptinView.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  pending: PropTypes.bool,\n  session: PropTypes.shape({\n    status: PropTypes.number\n  }),\n  t: PropTypes.func,\n  updateAccountOptIn: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: Function, session: {status: null}, updateAccountOptIn: Function, pending: boolean,\n *     fulfilled: boolean, error: boolean}}\n */\nOptinView.defaultProps = {\n  error: false,\n  fulfilled: false,\n  pending: false,\n  session: {\n    status: null\n  },\n  t: helpers.noopTranslate,\n  updateAccountOptIn: helpers.noop\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  updateAccountOptIn: query => dispatch(reduxActions.user.updateAccountOptIn(query))\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.user\n * @returns {object}\n */\nconst mapStateToProps = ({ user }) => ({ ...user.optin, session: user.session });\n\nconst ConnectedOptinView = connectTranslate(mapStateToProps, mapDispatchToProps)(OptinView);\n\nexport { ConnectedOptinView as default, ConnectedOptinView, OptinView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { PageLayout, PageHeader, PageSection, PageToolbar } from '../pageLayout/pageLayout';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { connectTranslate, reduxSelectors } from '../../redux';\nimport GraphCard from '../graphCard/graphCard';\nimport C3GraphCard from '../c3GraphCard/c3GraphCard';\nimport Toolbar from '../toolbar/toolbar';\nimport { helpers } from '../../common';\n\n/**\n * A Red Hat Enterprise Linux encompassing view, and system architectures.\n *\n * @augments React.Component\n */\nclass RhelView extends React.Component {\n  componentDidMount() {}\n\n  /**\n   * Render a RHEL view.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { graphQuery, initialFilters, location, routeDetail, t, viewId } = this.props;\n    const isC3 = location?.parsedSearch?.c3 === '';\n\n    return (\n      <PageLayout>\n        <PageHeader>{t('curiosity-view.rhel', helpers.UI_DISPLAY_CONFIG_NAME)}</PageHeader>\n        <PageToolbar>\n          <Toolbar graphQuery={graphQuery} viewId={viewId} />\n        </PageToolbar>\n        <PageSection>\n          {(isC3 && (\n            <C3GraphCard\n              key={routeDetail.pathParameter}\n              filterGraphData={initialFilters}\n              graphQuery={graphQuery}\n              productId={routeDetail.pathParameter}\n              viewId={viewId}\n              cardTitle={t('curiosity-graph.socketsHeading')}\n              productShortLabel={viewId}\n            />\n          )) || (\n            <GraphCard\n              key={routeDetail.pathParameter}\n              filterGraphData={initialFilters}\n              graphQuery={graphQuery}\n              productId={routeDetail.pathParameter}\n              viewId={viewId}\n              cardTitle={t('curiosity-graph.socketsHeading')}\n              productShortLabel={viewId}\n            />\n          )}\n        </PageSection>\n      </PageLayout>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{initialFilters: Array, viewId: string, t: Function, routeDetail: object, location: object,\n *     graphQuery: object}}\n */\nRhelView.propTypes = {\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)])\n  }),\n  initialFilters: PropTypes.array,\n  location: PropTypes.shape({\n    parsedSearch: PropTypes.objectOf(PropTypes.string)\n  }).isRequired,\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    pathId: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    })\n  }).isRequired,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{initialFilters: Array, viewId: string, t: Function, graphQuery: object}}\n */\nRhelView.defaultProps = {\n  graphQuery: {\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  initialFilters: [\n    {\n      id: 'physicalSockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'hypervisorSockets',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value\n    },\n    {\n      id: 'cloudSockets',\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value\n    },\n    { id: 'thresholdSockets' }\n  ],\n  t: helpers.noopTranslate,\n  viewId: 'RHEL'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.view.makeView(RhelView.defaultProps);\n\nconst ConnectedRhelView = connectTranslate(makeMapStateToProps)(RhelView);\n\nexport { ConnectedRhelView as default, ConnectedRhelView, RhelView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Title\n} from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport { connectTranslate } from '../../redux';\nimport subscriptionsSvg from '../../images/subscriptions.svg';\n\n/**\n * FixMe: Patternfly EmptyStateIcon can't pass a basic image\n * Requires the use of function based component syntax\n */\n/**\n * FixMe: Patternfly EmptyStateBody and Title appear to throw an error on translate string replacement\n * Wrap with a fragment to pass.\n */\n/**\n * Render a user guided tour view.\n *\n * @param {object} props\n * @param {object} props.session\n * @param {Function} props.t\n * @returns {Node} Node containing tour view.\n */\nconst TourView = ({ session, t }) => (\n  <PageLayout>\n    <PageHeader>{helpers.UI_DISPLAY_CONFIG_NAME}</PageHeader>\n    <PageSection>\n      <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n        <img\n          src={subscriptionsSvg}\n          className=\"curiosity-emptystate-img-icon\"\n          alt={t('curiosity-tour.emptyStateIconAlt', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          aria-hidden\n        />\n        <Title headingLevel=\"h5\" size=\"lg\">\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateTitle', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </Title>\n        <EmptyStateBody>\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateDescription', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n            {session.status !== 418 &&\n              ` ${t('curiosity-tour.emptyStateDescriptionTour', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}`}\n          </React.Fragment>\n        </EmptyStateBody>\n        <EmptyStateBody>\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateDescriptionExtended', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </EmptyStateBody>\n        {(session.status === 418 && (\n          <Button\n            className=\"uxui-curiosity__button-learn\"\n            variant=\"primary\"\n            component=\"a\"\n            target=\"_blank\"\n            href=\"https://access.redhat.com/products/subscription-central\"\n          >\n            {t('curiosity-tour.emptyStateLinkLearnMore')}\n          </Button>\n        )) || (\n          <Button className=\"uxui-curiosity__button-tour\" variant=\"primary\">\n            {t('curiosity-tour.emptyStateButton')}\n          </Button>\n        )}\n        <EmptyStateSecondaryActions>\n          {session.status !== 418 && (\n            <Button\n              component=\"a\"\n              variant=\"link\"\n              target=\"_blank\"\n              href=\"https://access.redhat.com/products/subscription-central\"\n            >\n              {t('curiosity-tour.emptyStateLinkLearnMore')}\n            </Button>\n          )}\n          <Button component=\"a\" variant=\"link\" target=\"_blank\" href=\"https://access.redhat.com/account-team\">\n            {t('curiosity-tour.emptyStateLinkContactUs')}\n          </Button>\n        </EmptyStateSecondaryActions>\n      </EmptyState>\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{t: Function, session: object}}\n */\nTourView.propTypes = {\n  session: PropTypes.shape({\n    status: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: Function, session: {status: null}}}\n */\nTourView.defaultProps = {\n  session: {\n    status: null\n  },\n  t: helpers.noopTranslate\n};\n\nconst mapStateToProps = state => ({ session: state.user.session });\n\nconst ConnectedTourView = connectTranslate(mapStateToProps)(TourView);\n\nexport { ConnectedTourView as default, ConnectedTourView, TourView };\n","import path from 'path';\nimport { helpers } from '../../common/helpers';\nimport OpenshiftView from '../openshiftView/openshiftView';\nimport OptinView from '../optinView/optinView';\nimport RhelView from '../rhelView/rhelView';\nimport TourView from '../tourView/tourView';\nimport { RHSM_API_PATH_ID_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformLandingRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/');\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformModalRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = [\n  {\n    to: '/rhel-sw/all',\n    redirect: true,\n    component: RhelView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'rhel-sw',\n    to: '/rhel-sw/:variant',\n    component: RhelView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'openshift-sw',\n    to: '/openshift-sw',\n    component: OpenshiftView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'soon',\n    to: '/soon',\n    component: TourView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'optin',\n    to: '/optin',\n    component: OptinView,\n    exact: true,\n    render: true,\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED\n  }\n];\n\n/**\n * Return an array of objects that describes navigation against API product IDs.\n *\n * @returns {Array}\n */\nconst navigation = [\n  {\n    id: 'all',\n    path: '/rhel-sw/all',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL,\n    default: true\n  },\n  {\n    id: 'arm',\n    path: '/rhel-sw/arm',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_ARM\n  },\n  {\n    id: 'ibmpower',\n    path: '/rhel-sw/ibmpower',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER\n  },\n  {\n    id: 'ibmz',\n    path: '/rhel-sw/ibmz',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z\n  },\n  {\n    id: 'x86',\n    path: '/rhel-sw/x86',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_X86\n  },\n  {\n    id: 'openshift-sw',\n    path: '/openshift-sw',\n    pathId: 'openshift-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.OPENSHIFT\n  }\n];\n\nconst routerTypes = {\n  appName,\n  navigation,\n  platformLandingRedirect,\n  platformModalRedirect,\n  routes\n};\n\nexport {\n  routerTypes as default,\n  routerTypes,\n  appName,\n  navigation,\n  platformLandingRedirect,\n  platformModalRedirect,\n  routes\n};\n","import { helpers } from '../../common/helpers';\nimport { routes, navigation } from './routerTypes';\n\n/**\n * Return an assumed dynamic route baseName directory\n * based on a predictable platform directory depth of\n * /[OPTIONAL]/[environment]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.pathPrefix\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName, pathPrefix }) => {\n  const path = pathName.split('/');\n  path.shift();\n  const pathSlice = pathPrefix && new RegExp(path[0]).test(pathPrefix) ? 2 : 1;\n\n  return `/${path.slice(0, pathSlice).join('/')}`;\n};\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName =\n  (helpers.TEST_MODE && '/') ||\n  (helpers.DEV_MODE && '/') ||\n  dynamicBaseName({ pathName: window.location.pathname, pathPrefix: helpers.UI_DEPLOY_PATH_PREFIX });\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Return an object matching a specific navigation object.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathname\n * @param {boolean} params.returnDefault\n * @returns {object}\n */\nconst getNavigationDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const defaultItem = returnDefault && navigation.find(item => item.default === true);\n  let navigationItem;\n\n  if (id) {\n    navigationItem = navigation.find(item => item.id === id);\n  }\n\n  if (!navigationItem && pathname) {\n    navigationItem =\n      navigation.find(item => item.path.replace(/\\/$/, '') === pathname.replace(/\\/$/, '')) ||\n      (returnDefault && defaultItem);\n  }\n\n  if (!navigationItem && returnDefault) {\n    navigationItem = defaultItem;\n  }\n\n  if (navigationItem) {\n    const [, routeHref] = window.location.href.split(navigationItem.path);\n    navigationItem.routeHref = `${navigationItem.path}${routeHref || ''}`;\n  }\n\n  return { ...(navigationItem || {}) };\n};\n\n/**\n * Return an object matching a specific, or the first generic route.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathname\n * @returns {object}\n */\nconst getRouteDetail = ({ id = null, pathname = null }) => {\n  let routeItem;\n\n  if (id) {\n    routeItem = routes.find(value => id === value.id);\n  }\n\n  if (!routeItem && pathname) {\n    routeItem = routes.find(value => pathname === value.to);\n    routeItem = routeItem || routes.find(item => pathname.includes(item.to.split(':')[0]));\n  }\n\n  return { ...(routeItem || {}) };\n};\n\n/**\n * Return an object generated from both generic routes and specific navigation objects.\n * ID is not passed to \"getRouteDetail\" to avoid conflicts between routing and\n * navigation.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathname\n * @param {boolean} params.returnDefault\n * @returns {object}\n */\nconst getNavRouteDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const navDetail = getNavigationDetail({ id, pathname, returnDefault });\n  const routeDetail = getRouteDetail({ pathname: navDetail.path || pathname });\n\n  return { ...routeDetail, ...navDetail };\n};\n\nconst routerHelpers = {\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n","import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Route } from 'react-router-dom';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A routing redirect.\n *\n * @param {object} props\n * @param {string} props.baseName\n * @param {object} props.history\n * @param {boolean} props.isRedirect\n * @param {boolean} props.isReplace\n * @param {string} props.url\n * @param {string} props.route\n * @returns {Node}\n */\nconst Redirect = ({ baseName, history, isRedirect, isReplace, url, route }) => {\n  const forceNavigation = urlRoute => {\n    if (!helpers.DEV_MODE && !helpers.TEST_MODE) {\n      if (isReplace) {\n        window.location.replace(urlRoute);\n      } else {\n        window.location.href = urlRoute;\n      }\n    }\n  };\n\n  if (isRedirect === true) {\n    if (route && history) {\n      const routeDetail = routerHelpers.getRouteDetail({ pathname: route });\n      return <Route path=\"*\">{routeDetail && <routeDetail.component />}</Route>;\n    }\n\n    const forcePath = url || (route && path.join(baseName, route));\n    forceNavigation(forcePath);\n\n    return (\n      ((helpers.DEV_MODE || helpers.TEST_MODE) && <React.Fragment>Redirected towards {forcePath}</React.Fragment>) ||\n      null\n    );\n  }\n\n  return null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, isReplace: boolean, history: object, baseName: string, url: string}}\n */\nRedirect.propTypes = {\n  history: PropTypes.object,\n  isRedirect: PropTypes.bool.isRequired,\n  isReplace: PropTypes.bool,\n  url: PropTypes.string,\n  baseName: PropTypes.string,\n  route: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{route: null, isReplace: boolean, history: null, baseName: string, url: null}}\n */\nRedirect.defaultProps = {\n  history: null,\n  isReplace: false,\n  url: null,\n  baseName: routerHelpers.baseName,\n  route: null\n};\n\nconst RoutedRedirect = withRouter(Redirect);\n\nexport { RoutedRedirect as default, RoutedRedirect, Redirect };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport Redirect from './redirect';\nimport { routerHelpers } from './routerHelpers';\nimport { routerTypes } from './routerTypes';\n\n/**\n * Load routes.\n *\n * @augments React.Component\n */\nclass Router extends React.Component {\n  /**\n   * Parse settings array with route options.\n   *\n   * @returns {{redirectRoot: Node, renderRoutes: Array}}\n   */\n  renderRoutes() {\n    const { routes } = this.props;\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    let redirectRoot = null;\n\n    return {\n      renderRoutes: routes.map(item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        if (item.redirect === true) {\n          redirectRoot = <ReactRouterDomRedirect to={item.to} />;\n        }\n\n        if (item.render === true) {\n          return (\n            <Route\n              exact={item.hasParameters || item.exact}\n              key={item.to}\n              path={item.to}\n              strict={item.strict}\n              render={({ location, ...routeProps }) => {\n                const navDetail = routerHelpers.getNavigationDetail({\n                  pathname: location && location.pathname,\n                  returnDefault: false\n                });\n\n                const { URLSearchParams, decodeURIComponent } = window;\n                const parsedSearch = {};\n\n                [\n                  ...new Set(\n                    [...new URLSearchParams(decodeURIComponent(location.search))].map(\n                      ([param, value]) => `${param}~${value}`\n                    )\n                  )\n                ].forEach(v => {\n                  const [param, value] = v.split('~');\n                  parsedSearch[param] = value;\n                });\n\n                const updatedLocation = {\n                  ...location,\n                  parsedSearch\n                };\n\n                return (\n                  <item.component\n                    routeDetail={{\n                      baseName: routerHelpers.baseName,\n                      errorRoute: activateOnErrorRoute,\n                      routes,\n                      routeItem: { ...item },\n                      ...navDetail\n                    }}\n                    location={updatedLocation}\n                    {...routeProps}\n                  />\n                );\n              }}\n            />\n          );\n        }\n\n        return (\n          <Route exact={item.hasParameters || item.exact} key={item.to} path={item.to} component={item.component} />\n        );\n      }),\n      redirectRoot\n    };\n  }\n\n  /**\n   * Render router.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { renderRoutes, redirectRoot } = this.renderRoutes();\n\n    return (\n      <Switch>\n        {renderRoutes}\n        {redirectRoot}\n      </Switch>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.boolean,\n      component: PropTypes.any.isRequired,\n      disabled: PropTypes.boolean,\n      exact: PropTypes.boolean,\n      hasParameters: PropTypes.boolean,\n      redirect: PropTypes.boolean,\n      render: PropTypes.boolean,\n      strict: PropTypes.boolean,\n      to: PropTypes.string.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerTypes.routes\n};\n\nexport { Router as default, Router, Redirect, routerHelpers, routerTypes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState as PfEmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title\n} from '@patternfly/react-core';\nimport { PageLayout, PageHeader } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @param {object} props\n * @param {Node|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {Node}\n */\nconst MessageView = ({ icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PfEmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n      {title && (\n        <Title headingLevel=\"h2\" size=\"lg\">\n          {title}\n        </Title>\n      )}\n      {icon && <EmptyStateIcon icon={icon} />}\n      {message && <EmptyStateBody>{message}</EmptyStateBody>}\n    </PfEmptyState>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, message: string, title: string}}\n */\nMessageView.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, message: null, title: null}}\n */\nMessageView.defaultProps = {\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon, LockIcon } from '@patternfly/react-icons';\nimport { connectRouterTranslate, reduxActions, reduxSelectors } from '../../redux';\nimport { rhsmApiTypes } from '../../types';\nimport { helpers } from '../../common';\nimport { Redirect, routerHelpers, routerTypes } from '../router/router';\nimport MessageView from '../messageView/messageView';\n\n/**\n * An authentication pass-through component.\n *\n * @augments React.Component\n */\nclass Authentication extends Component {\n  appName = routerTypes.appName;\n\n  removeListeners = helpers.noop;\n\n  async componentDidMount() {\n    const { authorizeUser, history, initializeChrome, onNavigation, setAppName, session } = this.props;\n\n    if (!session.authorized) {\n      await authorizeUser();\n    }\n\n    if (helpers.PROD_MODE || helpers.REVIEW_MODE) {\n      initializeChrome();\n      setAppName(this.appName);\n\n      const appNav = onNavigation(event => {\n        const { routeHref } = routerHelpers.getNavRouteDetail({ id: event.navId, returnDefault: true });\n        history.push(routeHref);\n      });\n\n      this.removeListeners = () => {\n        appNav();\n      };\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  /**\n   * Render authenticated children or messaging.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children, session, t } = this.props;\n\n    if (session.authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (session.errorCodes && session.errorCodes.includes(rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES.OPTIN)) ||\n      session.status === 418\n    ) {\n      if (helpers.TEST_MODE) {\n        return <React.Fragment>{session.status} redirect</React.Fragment>;\n      }\n      return <Redirect isRedirect route={routerHelpers.getErrorRoute.to} />;\n    }\n\n    return (\n      <MessageView\n        title={t('curiosity-auth.authorizedTitle', { appName: helpers.UI_DISPLAY_NAME })}\n        message={t('curiosity-auth.authorizedCopy', '...')}\n        icon={LockIcon}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, navigation: Array,\n *     t: Function, children: Node, initializeChrome: Function, session: object, history: object,\n *     setNavigation: Function}}\n */\nAuthentication.propTypes = {\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  initializeChrome: PropTypes.func,\n  onNavigation: PropTypes.func,\n  setAppName: PropTypes.func,\n  session: PropTypes.shape({\n    authorized: PropTypes.bool,\n    error: PropTypes.bool,\n    errorCodes: PropTypes.arrayOf(PropTypes.string),\n    errorMessage: PropTypes.string,\n    pending: PropTypes.bool,\n    status: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, navigation: Array,\n *     t: Function, initializeChrome: Function, session: {authorized: boolean, pending: boolean,\n *     errorMessage: string, error: boolean, status: null}, setNavigation: Function}}\n */\nAuthentication.defaultProps = {\n  authorizeUser: helpers.noop,\n  initializeChrome: helpers.noop,\n  onNavigation: helpers.noop,\n  setAppName: helpers.noop,\n  session: {\n    authorized: false,\n    error: false,\n    errorCodes: [],\n    errorMessage: '',\n    pending: false,\n    status: null\n  },\n  t: helpers.noopTranslate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser()),\n  initializeChrome: () => dispatch(reduxActions.platform.initializeChrome()),\n  onNavigation: callback => dispatch(reduxActions.platform.onNavigation(callback)),\n  setAppName: name => dispatch(reduxActions.platform.setAppName(name))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.user.makeUserSession();\n\nconst ConnectedAuthentication = connectRouterTranslate(makeMapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router/router';\nimport Authentication from './authentication/authentication';\n\n/**\n * Application\n *\n * @augments React.Component\n */\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n    getLocale();\n  }\n\n  /**\n   * Render application.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <NotificationsPortal />\n        <Authentication>\n          <Router />\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{locale: object, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\n/**\n * Default props.\n *\n * @type {{locale: {}, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { baseName } from './components/router/routerHelpers';\nimport { store } from './redux';\nimport App from './components/app';\nimport './styles/index.scss';\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter basename={baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
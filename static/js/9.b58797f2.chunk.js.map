{"version":3,"sources":["components/pagination/paginationHelpers.js","../../../../../../src/components/Table/utils/decorators/wrappable.tsx","components/inventoryList/inventoryListHelpers.js","components/form/select.js","components/minHeight/minHeight.js","components/graphCard/graphCardHelpers.js","components/pagination/pagination.js","components/form/formHelpers.js","components/inventoryTabs/inventoryTab.js","components/guestsList/guestsList.js","components/form/textInput.js","components/chartArea/chartArea.js","components/graphCard/graphCardChartTooltip.js","components/tabs/tabs.js","components/toolbar/toolbarHelpers.js","../../../../../src/components/FormSelect/FormSelect.tsx","../node_modules/@patternfly/react-tokens/dist/esm/c_form_control_textarea_Height.js","../../../../../src/components/TextArea/TextArea.tsx","../../../../../src/components/InputGroup/InputGroup.tsx","components/toolbar/toolbarFieldDisplayName.js","../node_modules/@patternfly/react-icons/dist/esm/icons/eye-slash-icon.js","components/graphCard/graphCardChartLegend.js","components/graphCard/graphCard.js","components/inventoryList/inventoryList.js","components/inventorySubscriptions/inventorySubscriptions.js","components/inventoryTabs/inventoryTabs.js","components/toolbar/toolbarFieldGranularity.js","../../../../../src/components/Toolbar/ToolbarFilter.tsx","../../../../../src/components/Toolbar/ToolbarExpandableContent.tsx","../../../../../src/components/Toolbar/ToolbarContent.tsx","../../../../../src/components/Toolbar/ToolbarToggleGroup.tsx","../node_modules/@patternfly/react-icons/dist/esm/icons/filter-icon.js","components/toolbar/toolbar.js","components/toolbar/toolbarFieldRangedMonthly.js","components/toolbar/toolbarFieldUom.js","components/productView/productViewOpenShiftContainer.js","../node_modules/@patternfly/react-styles/css/components/Tabs/tabs.js","../node_modules/@patternfly/react-styles/css/components/InputGroup/input-group.js","../node_modules/@patternfly/react-styles/css/layouts/Bullseye/bullseye.js","../node_modules/@patternfly/react-styles/css/components/TabContent/tab-content.js","../node_modules/@patternfly/react-icons/dist/js/icons/info-circle-icon.js","../../../../../src/components/Card/CardHeader.tsx","../../../../../src/components/Card/CardFooter.tsx","../../../../../src/components/TextInput/TextInput.tsx","../../../../../src/components/Card/CardTitle.tsx","../../../../../src/components/Card/CardActions.tsx","../../../../../src/layouts/Bullseye/Bullseye.tsx","../../../../../src/components/Card/CardHeaderMain.tsx","../node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","../../../../../src/components/Tabs/Tab.tsx","../../../../../src/components/Tabs/TabTitleText.tsx","../../../../../src/components/Tabs/TabButton.tsx","../../../../../src/components/Tabs/Tabs.tsx","../../../../../src/components/Tabs/TabsContext.ts","../../../../../src/components/Tabs/TabContent.tsx","../node_modules/browser-pack/_prelude.js","../node_modules/bignumber.js/bignumber.js","en-US.js","formatting.js","globalState.js","loading.js","manipulating.js","numbro.js","parsing.js","unformatting.js","validating.js","../node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","../node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js"],"names":["calculateOffsetFromPage","page","perPage","calculatePageFromOffset","offset","isLastPage","itemCount","Math","ceil","paginationHelpers","applySortFilters","filter","onSort","query","id","updatedFilter","hasSort","sortActive","RHSM_API_QUERY_TYPES","SORT","_camelCase","sortDirection","DIRECTION","SORT_DIRECTION_TYPES","DESCENDING","SortByDirection","desc","asc","isSortDefault","sortDefaultInitialDirection","applyWrappableFilters","Array","isArray","transforms","push","wrappable","parseInventoryFilters","filters","map","isSortable","Object","assign","isWrappable","parseRowCellsListData","cellData","session","updatedColumnHeaders","updatedCells","allCells","entries","forEach","key","value","title","translate","context","length","headerUpdated","cellUpdated","cell","cellWidth","header","React","isValidElement","concat","PfCellWidth","obj","columnHeaders","cells","data","inventoryListHelpers","SelectDirection","DropdownDirection","SelectPosition","DropdownPosition","Select","state","isExpanded","options","selected","onSelect","event","titleSelection","props","name","variant","updatedOptions","optionsIndex","findIndex","option","SelectVariant","single","index","updateSelected","opt","setState","mockUpdatedOptions","_cloneDeep","mockTarget","selectedIndex","type","checkbox","checked","mockEvent","target","currentTarget","persist","helpers","noop","onToggle","expanded","this","formatOptions","prevProps","selectedOptions","_isEqual","_isPlainObject","keys","activateOptions","convertedOption","text","textContent","label","isSelected","_findIndex","find","activeOption","values","includes","ariaLabel","className","direction","isDisabled","isToggleText","maxHeight","placeholder","position","toggleIcon","pfSelectOptions","right","aria-label","selections","isOpen","placeholderText","window","btoa","data-value","JSON","stringify","data-title","Component","defaultProps","down","generateId","left","MinHeight","containerRef","createRef","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","clientWidth","current","setMinHeight","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","children","ref","getChartXAxisLabelIncrement","granularity","GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","getTooltipDate","date","momentDate","moment","utc","format","dateHelpers","timestampQuarterFormats","yearShort","add","timestampMonthFormats","yearLong","timestampDayFormats","short","long","xAxisTickFormat","tick","previousDate","formattedDate","isNewYear","Number","parseInt","year","replace","yAxisTickFormatFallback","abs","updatedTick","updatedAbbr","pow","yAxisTickFormat","locale","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","graphCardHelpers","Pagination","dropDirection","isCompact","onPage","onPerPage","onSetPage","limit","onPerPageSelect","createMockEvent","persistEvent","keyCode","doesNotHaveMinimumCharacters","characters","formHelpers","InventoryTab","active","Fragment","GuestsList","currentPage","previousData","onUpdateGuestsData","getHostsInventoryGuests","updatedQuery","LIMIT","OFFSET","apiQueries","parseRhsmQuery","inventoryGuestsQuery","onScroll","numberOfGuests","pending","listData","bottom","scrollHeight","scrollTop","newPage","updatedData","prevState","filterGuestsData","scrollLoader","tableProps","borders","colCount","colWidth","rowCount","TableVariant","compact","updatedRows","updatedHeight","height","renderLoader","rows","error","perPageDefault","renderTable","makeMapStateToProps","reduxSelectors","guestsList","makeGuestsList","ConnectedGuestsList","connect","dispatch","reduxActions","rhsm","TextInput","updatedValue","onKeyUp","onClear","clonedEvent","onMouseUp","onChange","isReadOnly","updatedName","updatedId","ChartArea","chartWidth","dataSetsToggle","tooltipRef","onHide","forceUpdate","onRevert","updatedToggle","getIsToggled","setResizeObserve","containerElement","ResizeObserver","observe","unobserve","xAxisLabelIncrement","dataSets","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","x","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","item","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","y","floored","floor","log10","maxY","chartDomain","chartTooltip","tooltipDataSet","itemsByKey","color","stroke","fill","mockDatum","datum","tooltip","cloneElement","v","VictoryVoronoiCursorContainer","createContainer","parsedTooltipData","getTooltipData","getXCoordinate","width","tooltipWidth","xCoordinate","getYCoordinate","tooltipHeight","yCoordinate","FlyoutComponent","containerBounds","getBoundingClientRect","tooltipBounds","htmlContent","t","applyParsedTooltipData","display","xmlns","labelComponent","flyout","flyoutStyle","renderInPortal","cursorDimension","labels","voronoiPadding","mouseFollowTooltips","chartLegend","legendProps","chart","hide","revert","toggle","isToggled","stacked","charts","chartsStacked","updatedDataSet","isThreshold","dataColorStroke","strokeWidth","strokeDasharray","animate","interpolation","themeColor","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","tooltipComponent","containerComponent","renderTooltip","undefined","chartProps","duration","renderChart","renderLegend","top","GraphCardChartTooltip","productLabel","tempDataFacet","test","thresholdStringValue","hasInfinite","dataFactsValue","hasData","product","summary","colSpan","dataFacet","aria-hidden","backgroundColor","Tabs","updatedActiveTab","updatedTabs","onTab","setTabData","tabs","_isEqualWith","valueA","valueB","toString","activeTab","defaultActiveTab","content","eventKey","hasOverflowScroll","activeKey","mountOnEnter","unmountOnExit","inset","default","md","span","renderTabs","getOptionsType","optionsType","SLA","SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","USAGE","USAGE_TYPES","DEVELOPMENT","DISASTER","PRODUCTION","UNSPECIFIED","toolbarHelpers","getOptions","c_form_control_textarea_Height","TextAreResizeOrientation","ToolbarFieldDisplayName","viewId","currentValue","useSelector","view","inventoryHostsQuery","DISPLAY_NAME","onSubmit","submitValue","store","reduxTypes","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","trim","debounced","_debounce","iconVariant","maxLength","EyeSlashIcon","createIcon","svgPath","yOffset","xOffset","GraphCardChartLegend","onClick","graph","SET_GRAPH_LEGEND","legend","chartId","labelContent","tooltipContent","checkIsToggled","button","Button","onKeyPress","tabIndex","component","icon","visibility","borderTopColor","Tooltip","TooltipPosition","enableFlip","distance","entryDelay","exitDelay","renderLegendItem","ConnectedGraphCardChartLegend","GraphCard","onUpdateGraphData","getGraphReportsCapacity","productId","graphGranularity","getQueryGranularity","startDate","START_DATE","endDate","END_DATE","GRANULARITY","filterGraphData","graphData","chartAreaProps","filtered","tempFiltered","onLoad","chartColorGreenDark","filteredGraphData","cardTitle","settings","actionDisplay","headingLevel","size","UI_DISABLED_GRAPH","graphCard","makeGraphCard","ConnectedGraphCard","InventoryList","onColumnSort","updatedDirection","updatedSortColumn","SORT_TYPES","ASCENDING","DEV_MODE","REVIEW_MODE","console","warn","onUpdateInventoryData","getHostsInventory","filterInventoryData","guestsId","subscriptionManagerId","hasGuests","expandedContent","fulfilled","updatedPerPage","updatedOffset","minHeightContentRefreshKey","isFooter","UI_DISABLED_TABLE_HOSTS","inventoryList","makeInventoryList","ConnectedInventoryList","InventorySubscriptions","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","getSubscriptionsInventory","UI_DISABLED_TABLE_SUBSCRIPTIONS","subscriptionsList","makeSubscriptionsList","ConnectedInventorySubscriptions","InventoryTabs","inventory","SET_INVENTORY_TAB","updatedChildren","Children","toArray","count","UI_DISABLED_TABLE","ConnectedInventoryTabs","toolbarFieldOptions","FIELD_TYPES","ToolbarFieldGranularity","graphTallyQuery","getRangedDateTime","SET_QUERY_RHSM_TYPES","toISOString","ToolbarFilter","FilterIcon","Toolbar","hardFilterReset","dispatchActions","toolbar","SET_ACTIVE_FILTERS","activeFilters","Set","SET_QUERY_CLEAR","clearFilters","SET_FILTER_TYPE","currentFilter","setDispatch","onClearFilter","categoryTitle","categoryValue","updatedActiveFilters","delete","updatedCurrentFilter","onCategorySelect","field","actions","resetPage","updatedActions","SET_QUERY_RESET_INVENTORY_LIST","getCurrentFilter","optionsSelected","filterOptions","setSelectFilter","chips","deleteChip","categoryName","showToolbarItem","categoryOptions","categoryOptionsSelected","collapseListedFiltersBreakpoint","clearAllFilters","clearFiltersButtonText","breakpoint","ToolbarGroup","ToolbarItem","renderSelectFilter","filterType","UI_DISABLED_TOOLBAR","ConnectedToolbar","initialQuery","getRangedMonthDateTime","listDateTimeRanges","dateTime","ToolbarFieldRangedMonthly","ToolbarFieldUom","UOM","CORES","ProductViewOpenShiftContainer","productConfig","routeDetail","uomValue","viewProductLabel","productParameter","includeTour","appName","UI_DISPLAY_NAME","config","updatedUomValue","productContextFilterUom","inventorySubscriptionsQuery","initialGraphFilters","initialGraphSettings","initialGuestsFilters","initialInventoryFilters","initialInventorySettings","initialSubscriptionsInventoryFilters","initialToolbarFilters","uomFilter","initialGraphTallyQuery","initialInventoryHostsQuery","initialInventorySubscriptionsQuery","toolbarQuery","graphFilters","inventoryFilters","subscriptionsInventoryFilters","isOptional","RegExp","graphCardTitle","RHSM_API_PATH_ID_TYPES","OPENSHIFT","OPENSHIFT_METRICS","renderProduct","RHSM_API_QUERY_UOM_TYPES","RHSM_API_QUERY_SORT_TYPES","LAST_SEEN","RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES","UPCOMING_EVENT_DATE","initialOption","chartColorBlueLight","chartColorBlueDark","displayName","inventoryId","authorized","isInline","href","UI_DEPLOY_PATH_PREFIX","lastSeen","updatedDisplayName","upcomingEventDate","displayContent","coreHours","total","numbro","average","mantissa","trimMantissa","lowPrecision","toUpperCase","parseFloat","toFixed","exports","__esModule","require","InfoCircleIconConfig","InfoCircleIcon","TextInputTypes","TableToolbar","_ref","results","_objectWithoutProperties","tableToolbarClasses","classNames","_defineProperty","createElement","_extends","generateCount","propTypes","bool","number","any","string","TabsComponent","isNumeric","hasSymbol","mathceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","i","j","r","s","z","xc","yc","k","l","a","b","n","e","str","len","BigNumber","pow2_53","random53bitInt","decimal","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","P","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","POW_PRECISION","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","intCheck","alphabet","caseChanged","isNum","arrL","arr","carry","klo","khi","temp","xlo","m","xhi","cmp","c0","ne","toExponential","toFixedPoint","method","pows10","out","rd","ni","d","rm","sd","crypto","EXPONENTIAL_AT","RANGE","c","rand","dp","args","sum","convertBase","div","yL","qc","q","base","more","xL","xi","remL","rem","yz","yc0","rem0","prodL","prod","subtract","round","parseNumeric","nIsBig","nIsNeg","isModExp","nIsOdd","half","ye","xe","xLTy","reverse","normalise","xcL","ycL","zc","sqrtBase","ylo","yhi","slice","rep","g1","g2","intPart","fractionPart","isNeg","intDigits","isInteger","n1","d1","exp","n0","d2","d0","module","globalObject","languageTag","delimiters","thousands","abbreviations","thousand","million","billion","trillion","spaceSeparated","ordinal","bytes","binarySuffixes","decimalSuffixes","currency","symbol","code","currencyFormat","thousandSeparated","totalLength","spaceSeparatedCurrency","formats","fourDigits","fullWithTwoDecimals","output","fullWithTwoDecimalsNoCurrency","fullWithNoDecimals","globalState","validating","parsing","powers","defaultOptions","characteristic","forceAverage","optionalMantissa","negative","forceSign","roundingFunction","spaceSeparatedAbbreviation","currentBytes","general","scale","suffixes","marker","binary","_format","instance","providedFormat","parseFormat","validateFormat","postfix","currentCurrency","space","currencyPosition","currencySymbol","formatNumber","_value","formatOrDefault","currentCurrencyDefaultFormat","prefixSymbol","currentPercentageDefaultFormat","_state$currentBytes","localBinarySuffixes","localDecimalSuffixes","baseInfo","getFormatByteUnits","defaults","currentByteDefaultFormat","currentTimeDefaultFormat","hours","minutes","seconds","ordinalFn","currentOrdinal","currentOrdinalDefaultFormat","power","min","max","zeroes","result","precision","_result$split2","split","substr","replaceDelimiters","currentDelimiters","thousandSeparator","thousandsSize","hasNegativeSign","counter","unshift","currentDefaults","hasZeroFormat","getZeroFormat","isFinite","_ref2","_ref2$characteristicP","characteristicPrecision","numberString","exponential","optionalCharacteristic","mantissaPrecision","abbreviation","isNegative","characteristicLength","currentAbbreviations","_data","_result$toString$spli2","currentCharacteristic","currentMantissa","match","hasTrailingZeroes","_result$toString$spli5","missingZeros","defaultFormat","apply","getByteUnit","getBinaryByteUnit","getDecimalByteUnit","enUS","currentLanguageTag","languages","zeroFormat","globalDefaults","chooseLanguage","tag","currentLanguageData","currentLanguage","ordinalFormat","byteFormat","percentageFormat","timeFormat","setDefaults","setZeroFormat","languageData","Error","registerLanguage","useLanguage","validateLanguage","setLanguage","fallbackTag","matchingLanguageTag","each","loadLanguagesInNode","tags","_subtract","other","otherValue","isNumbro","minus","toNumber","plus","multiply","times","divide","dividedBy","difference","clone","validator","loader","unformatter","formatter","manipulate","Numbro","_classCallCheck","input","normalizeInput","unformat","isNaN","NaN","version","object","language","defaultCurrencyFormat","validate","allSuffixes","factor","escapeRegExp","unformatValue","inputString","computeUnformattedValue","stripped","newInput","possibleOrdinalValue","ordinalString","inversedAbbreviations","abbreviationValues","sort","numberOfAbbreviations","_i","segments","bcp47RegExp","validFormat","validValues","restriction","message","mandatory","restrictions","validLanguage","timeDefaults","validateInput","validateSpec","toValidate","spec","skipMandatoryCheck","_typeof","_toConsumableArray","validInput","isFormatValid","minute","second","hour","day","month","formatTime","unit","relativeTimeTable","rightBound","Infinity","description","_exact","toUTCString","dateStringByType","exact","onlyDate","relative","Date","now","invalid","dateByType","tooltipProps","extraTitle","element","arguments","addTooltip","DateFormat","_ref$type","_ref$tooltipProps","dateObj","dateType","PropTypes","oneOfType","instanceOf","oneOf","node"],"mappings":"8LAAA,4PAOA,IAAMA,EAA0B,SAACC,EAAMC,GAAP,OAAmBA,GAAWD,EAAO,IAAM,GASrEE,EAA0B,SAACC,EAAQF,GAAT,OAAqBE,EAASF,EAAU,GAAK,GAUvEG,EAAa,SAACD,EAAQF,EAASI,GAAlB,OACjBH,EAAwBC,EAAQF,KAAaK,KAAKC,KAAKF,EAAYJ,IAE/DO,EAAoB,CACxBT,0BACAG,0BACAE,e,4ZCbW,EAAwB,iBAAO,CAC1C,UAAW,IAAO,UAAU,O,0CCDxBK,EAAmB,SAAC,GAAyC,IAAD,IAAtCC,cAAsC,MAA7B,GAA6B,EAAzBC,EAAyB,EAAzBA,OAAyB,IAAjBC,aAAiB,MAAT,GAAS,EACxDC,EAAOH,EAAPG,GACFC,EAAa,eAAQJ,GACrBK,EAAUD,EAAcH,QAAUA,EAiBxC,IAfKG,EAAcH,QAAUA,IAC3BG,EAAcH,OAASA,GAKvBI,GACoC,mBAA7BD,EAAcE,aADrB,OAEAJ,QAFA,IAEAA,OAFA,EAEAA,EAAQK,IAAqBC,QAC7BC,IAAU,OAACP,QAAD,IAACA,OAAD,EAACA,EAAQK,IAAqBC,SAAWL,IAEnDC,EAAcE,YAAa,GAIzBD,IAAYD,EAAcM,gBAA1B,OAA2CR,QAA3C,IAA2CA,OAA3C,EAA2CA,EAAQK,IAAqBI,YAC1E,cAAQT,QAAR,IAAQA,OAAR,EAAQA,EAAQK,IAAqBI,YACnC,KAAKC,IAAqBC,WACxBT,EAAcM,cAAgBI,IAAgBC,KAC9C,MACF,QACEX,EAAcM,cAAgBI,IAAgBE,IAkBpD,OAZEX,GACCD,EAAcE,aACf,OAACJ,QAAD,IAACA,OAAD,EAACA,EAAQK,IAAqBC,SACE,IAAhCJ,EAAca,gBAEdb,EAAcE,YAAa,EAEvBF,EAAcc,8BAChBd,EAAcM,cAAgBN,EAAcc,8BAIzCd,GAGHe,EAAwB,SAAC,GAAqB,IAAD,IAAlBnB,cAAkB,MAAT,GAAS,EAC3CI,EAAa,eAAQJ,GAQ3B,OANIoB,MAAMC,QAAQjB,EAAckB,YAC9BlB,EAAckB,WAAWC,KAAKC,GAE9BpB,EAAckB,WAAa,CAACE,GAGvBpB,GAYHqB,EAAwB,SAAC,GAAD,QAAGC,eAAH,MAAa,GAAb,EAAiBzB,EAAjB,EAAiBA,OAAjB,IAAyBC,aAAzB,MAAiC,GAAjC,SAC5B,YAAIwB,GAASC,KAAI,SAAA3B,GACf,IAAMI,EAAa,eAAQJ,GAU3B,OARII,EAAcwB,YAChBC,OAAOC,OAAO1B,EAAeL,EAAiB,CAAEC,OAAQI,EAAeH,SAAQC,WAG7EE,EAAc2B,aAChBF,OAAOC,OAAO1B,EAAee,EAAsB,CAAEnB,OAAQI,KAGxDA,MAYL4B,EAAwB,SAAC,GAAmD,IAAD,IAAhDN,eAAgD,MAAtC,GAAsC,MAAlCO,gBAAkC,MAAvB,GAAuB,MAAnBC,eAAmB,MAAT,GAAS,EACzEC,EAAuB,GACvBC,EAAe,GACfC,EAAW,GAkFjB,OA/EAR,OAAOS,QAAQL,GAAUM,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXC,EAAW,KACjDJ,EAASG,GAAO,CACdE,MAAOC,oBAAU,6BAA8B,CAAEC,QAASJ,IAC1DC,SAGFN,EAAqBZ,KAAKc,EAASG,GAAKE,OACxCN,EAAab,KAAKkB,OAIpB,OAAIf,QAAJ,IAAIA,OAAJ,EAAIA,EAASmB,UACXV,EAAqBU,OAAS,EAC9BT,EAAaS,OAAS,EAEtBnB,EAAQa,SAAQ,YAAqF,IAC/FO,EACAC,EAEc,QAJD5C,EAAiF,EAAjFA,GAAI6C,EAA6E,EAA7EA,KAAMC,EAAuE,EAAvEA,UAAWC,EAA4D,EAA5DA,OAAQjD,EAAoD,EAApDA,OAAQK,EAA4C,EAA5CA,WAAYI,EAAgC,EAAhCA,cAAeY,EAAiB,EAAjBA,WAI7Ee,EAASlC,IACX2C,EAAa,oBAAGT,EAASlC,UAAZ,aAAG,EAAcuC,aAAjB,QAA0BvC,EACvC4C,EAAW,oBAAGV,EAASlC,UAAZ,aAAG,EAAcsC,aAAjB,QAA0B,IAC5BtC,IACT2C,EAAgBH,oBAAU,6BAA8B,CAAEC,QAASzC,IACnE4C,EAAc,IAIZG,IACFJ,EAAmC,oBAAXI,GAAyBA,EAAO,eAAKb,KAAgBa,IAIpD,kBAAlBJ,GACkB,kBAAlBA,GACPK,IAAMC,eAAeN,MAErBA,EAAgB,CACdJ,MAAOI,IAIPA,IACFA,EAAcxB,WAAa,GAEvBF,MAAMC,QAAQC,KAChBwB,EAAcxB,WAAawB,EAAcxB,WAAW+B,OAAzB,YAAoC/B,KAGxC,kBAAd2B,GACTH,EAAcxB,WAAWC,KAAK+B,YAAYL,KAIxB,oBAAXhD,IACT6C,EAAa,2BACRA,GADQ,IAEX7C,OAAQ,SAAAsD,GAAG,OAAItD,EAAO,eAAKoC,GAAN,YAAC,eAAsBkB,GAAvB,IAA4BpD,SACjDG,aACAI,mBAKAsC,IACFD,EAA+B,oBAATC,GAAuBA,EAAK,eAAKX,GAAN,eAAuBH,KAAec,IAG9D,kBAAhBD,GAAmD,kBAAhBA,GAA4BI,IAAMC,eAAeL,MAC7FA,EAAc,CACZL,MAAOK,IAIXZ,EAAqBZ,KAAKuB,GAC1BV,EAAab,KAAKwB,OAIf,CACLS,cAAerB,EACfsB,MAAOrB,EACPsB,KAAK,eAAMrB,KAITsB,EAAuB,CAC3B5D,mBACAoB,wBACAM,wBACAO,0B,0YC3LI4B,EAAkBC,IAOlBC,EAAiBC,IASjBC,E,4MACJC,MAAQ,CAAEC,YAAY,EAAOC,QAAS,KAAMC,SAAU,M,EAyBtDC,SAAW,SAACC,EAAOC,GAAoB,IAC7BJ,EAAY,EAAKF,MAAjBE,QAD4B,EAEI,EAAKK,MAArCrE,EAF4B,EAE5BA,GAAIsE,EAFwB,EAExBA,KAAMJ,EAFkB,EAElBA,SAAUK,EAFQ,EAERA,QAEtBC,EAAiBR,EACjBS,EAAeD,EAAeE,WAAU,SAAAC,GAAM,OAAIA,EAAOpC,QAAU6B,KACzEI,EAAeC,GAAcR,SAC3BM,IAAYK,IAAcC,SAAiBL,EAAeC,GAAcR,SAEtEM,IAAYK,IAAcC,QAC5BL,EAAepC,SAAQ,SAACuC,EAAQG,GAC1BL,IAAiBK,IACnBN,EAAeM,GAAOb,UAAW,MAKvC,IAAMc,EACJR,IAAYK,IAAcC,OACtBT,EACAI,EAAe3E,QAAO,SAAAmF,GAAG,OAAqB,IAAjBA,EAAIf,YAAmBzC,KAAI,SAAAwD,GAAG,OAAIA,EAAIzC,SAEzE,EAAK0C,SACH,CACEjB,QAASQ,EACTP,SAAUc,IAEZ,WACE,IAAMG,EAAqBC,IAAWX,GAEhCY,EAAa,CACjBpF,KACAsE,KAAMA,GAAQtE,EACdsC,MAAO4C,EAAmBT,GAAcnC,MACxC2B,SACGM,IAAYK,IAAcC,QAAUK,EAAmBT,IAAkBU,IAAWJ,GACvFM,cAAeZ,EACfa,KAAK,UAAD,OAAaf,IAAYK,IAAcC,OAAU,MAAU,YAC/Db,QAASkB,GAGPX,IAAYK,IAAcW,WAC5BH,EAAWI,QAAUN,EAAmBT,GAAcR,UAGxD,IAAMwB,EAAS,2BACVL,GADU,IAEbM,OAAO,eAAMN,GACbO,cAAc,eAAMP,GACpBQ,QAASC,IAAQC,OAGnB5B,EAAS,eAAKuB,GAAahB,EAAcS,GAErCX,IAAYK,IAAcC,QAC5B,EAAKI,SAAS,CACZlB,YAAY,Q,EAatBgC,SAAW,SAAAC,GACT,EAAKf,SAAS,CACZlB,WAAYiC,K,uDA9FhB,WAGkB,OAFIC,KAAKnC,MAAjBE,SAGNiC,KAAKC,kB,gCAIT,SAAmBC,GAAY,IAAD,EACSF,KAAK5B,MAAlCL,EADoB,EACpBA,QAASoC,EADW,EACXA,gBAEZC,IAASF,EAAUnC,QAASA,IAAaqC,IAASF,EAAUC,gBAAiBA,IAChFH,KAAKC,kB,2BAyFT,WAAiB,IAmDXnB,EAnDU,EACgCkB,KAAK5B,MAA3CL,EADM,EACNA,QAASoC,EADH,EACGA,gBAAiB7B,EADpB,EACoBA,QAC5BC,EAAiB8B,IAAetC,GAClCtC,OAAO6E,KAAKvC,GAASxC,KAAI,SAAAa,GAAG,kCAAU2B,EAAQ3B,IAAlB,IAAwBE,MAAOF,EAAKC,MAAO0B,EAAQ3B,QAC/E8C,IAAWnB,GAETwC,EACHJ,GAA8C,kBAApBA,GAA4D,kBAApBA,EAC/D,CAACA,GACDA,EAEN5B,EAAepC,SAAQ,SAACuC,EAAQG,GAC9B,IAAI2B,EAAkB9B,EAetB,GAb+B,kBAApB8B,IACTA,EAAkB,CAChBlE,MAAOoC,EACPrC,MAAOqC,GAGTH,EAAeM,GAAS2B,GAG1BA,EAAgBC,KAAOD,EAAgBC,MAAQD,EAAgBlE,MAC/DkE,EAAgBE,YAAcF,EAAgBE,aAAeF,EAAgBlE,MAC7EkE,EAAgBG,MAAQH,EAAgBG,OAASH,EAAgBlE,MAE7DiE,EAAiB,CACnB,IAAIK,EAEJ,GAAIP,IAAeG,EAAgBnE,QAGjC,KAFAuE,EAAaC,IAAWN,EAAiBC,EAAgBnE,QAAU,GAMjEuE,IAHmBL,EAAgBO,MAAK,SAAAC,GAAY,OAClDtF,OAAOuF,OAAOR,EAAgBnE,OAAO4E,SAASF,WAKlDH,EAAaL,EAAgBU,SAAST,EAAgBnE,OAGnDuE,IACHA,EAAaL,EAAgBU,SAAST,EAAgBlE,QAGxDiC,EAAeM,GAAOb,SAAW4C,MAOnC9B,EADER,IAAYK,IAAcC,QACVL,EAAeuC,MAAK,SAAA/B,GAAG,OAAqB,IAAjBA,EAAIf,aAAsB,IAAI1B,MAE1DiC,EAAe3E,QAAO,SAAAmF,GAAG,OAAqB,IAAjBA,EAAIf,YAAmBzC,KAAI,SAAAwD,GAAG,OAAIA,EAAIzC,SAGtF0D,KAAKhB,SAAS,CACZjB,QAASQ,EACTP,SAAUc,M,oBASd,WAAU,IAAD,EACmCkB,KAAKnC,MAAvCE,EADD,EACCA,QAASC,EADV,EACUA,SAAUF,EADpB,EACoBA,WADpB,EAaHkC,KAAK5B,MAVP8C,EAHK,EAGLA,UACAC,EAJK,EAILA,UACAC,EALK,EAKLA,UACAC,EANK,EAMLA,WACAC,EAPK,EAOLA,aACAC,EARK,EAQLA,UACAC,EATK,EASLA,YACAC,EAVK,EAULA,SACAC,EAXK,EAWLA,WACApD,EAZK,EAYLA,QAGIqD,EAAkB,CACtBP,YACAG,aAmBF,OAfKxD,GAAYA,EAAQtB,SAAU4E,IACjCM,EAAgBN,YAAa,GAe7B,cAAC,IAAD,yBACEF,UAAS,0BAAuBG,EAAuC,GAAvB,mBAAvC,YACNG,IAAa9D,IAAiBiE,MAAS,mCAAuC,GADxE,YAELT,GACJ7C,QAASA,EACTuD,aAAYX,EACZpB,SAAUE,KAAKF,SACf7B,SAAU+B,KAAK/B,SACf6D,WAAY9D,EACZ+D,OAAQjE,EACR4D,WAAYA,EACZM,gBAAiBR,GACbG,GAZN,aAcI5D,GACAA,EAAQxC,KAAI,SAAAmD,GAAM,OAChB,cAAC,IAAD,CAEE3E,GAAIkI,OAAOC,KAAP,UAAexD,EAAOpC,MAAtB,YAA+BoC,EAAOrC,QAC1CA,MAAOqC,EAAOpC,MACd6F,aAAa9B,IAAe3B,EAAOrC,QAAU+F,KAAKC,UAAU,CAAC3D,EAAOrC,SAAYqC,EAAOrC,MACvFiG,aAAY5D,EAAOpC,OAJd2F,OAAOC,KAAP,UAAexD,EAAOpC,MAAtB,YAA+BoC,EAAOrC,aAO/C,U,GA3OWU,IAAMwF,WAsS3B3E,EAAO4E,aAAe,CACpBtB,UAAW,gBACXC,UAAW,GACXC,UAAW5D,EAAgBiF,KAC3B1I,GAAI6F,IAAQ8C,aACZrB,YAAY,EACZC,cAAc,EACdC,UAAW,KACXlD,KAAM,KACNJ,SAAU2B,IAAQC,KAClB9B,QAAS,GACTyD,YAAa,gBACbC,SAAU/D,EAAeiF,KACzBxC,gBAAiB,KACjBuB,WAAY,KACZpD,QAASK,IAAcC,S,sMC/UnBgE,E,4MACJC,aAAe9F,IAAM+F,Y,EAErBC,kBAAoBhG,IAAM+F,Y,EAE1BE,sBAAwB,E,EAExBC,eAAiBrD,IAAQC,K,EAgCzBqD,kBAAoB,WAAO,IAAD,IAChBF,EADgB,eAChBA,sBACAG,EAAmB,EAAK/E,MAAxB+E,eACFC,GAAc,YAAKP,oBAAL,mBAAmBQ,eAAnB,eAA4BD,cAAe,EAE3DD,GAAkBC,IAAgBJ,IACpC,EAAKA,sBAAwBI,EAC7B,EAAKE,cAAa,K,uDArCtB,WAAqB,IAAD,OACVH,EAAmBnD,KAAK5B,MAAxB+E,eACRlB,OAAOsB,YAAW,WAChB,EAAKD,kBAGHH,GACFnD,KAAKwD,sB,gCAIT,WAAsB,IAAD,OACSxD,KAAK5B,MAAzBqF,iBAGNxB,OAAOsB,YAAW,WAChB,EAAKD,oB,kCAKX,WACEtD,KAAKiD,mB,0BAwBP,WAA6B,IAMrBS,EANKC,EAAe,wDACPC,EAAsB5D,KAAK5B,MAAtCyF,UADkB,EAEW7D,KAAK6C,aAAlCQ,QAASS,OAFS,MAEI,GAFJ,IAGgB9D,KAAK+C,kBAAvCM,QAASU,OAHS,MAGS,GAHT,GAK1B,OAAID,QAAJ,IAAIA,OAAJ,EAAIA,EAAYE,SASVJ,GALFF,EADEC,GAC4B,OAAfI,QAAe,IAAfA,OAAA,EAAAA,EAAiBL,eAAgB,GAEvB,OAAVI,QAAU,IAAVA,OAAA,EAAAA,EAAYJ,eAAgB,KAI3CA,EAAeE,GAGjBE,EAAWE,MAAMH,UAAjB,UAAgCH,EAAhC,S,+BAOJ,WAAqB,IAAD,OAClBzB,OAAOgC,iBAAiB,SAAUjE,KAAKkD,mBACvClD,KAAKiD,eAAiB,kBAAMhB,OAAOiC,oBAAoB,SAAU,EAAKhB,sB,oBAQxE,WAAU,IACAiB,EAAanE,KAAK5B,MAAlB+F,SAER,OACE,qBAAKhD,UAAU,sBAAsBiD,IAAKpE,KAAK6C,aAA/C,SACE,qBAAKuB,IAAKpE,KAAK+C,kBAAf,SAAmCoB,U,GA/FnBpH,IAAMwF,WAsH9BK,EAAUJ,aAAe,CACvBiB,iBAAiB,EACjBN,gBAAgB,EAChBU,UAAW,I,iCCnIb,uYAUMQ,EAA8B,SAAAC,GAClC,OAAQA,GACN,KAAKC,IAAkBC,MACrB,OAAO,EACT,KAAKD,IAAkBE,OACvB,KAAKF,IAAkBG,QACrB,OAAO,EACT,KAAKH,IAAkBI,UACvB,QACE,OAAO,IAYPC,EAAiB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMP,EAAkB,EAAlBA,YACxBQ,EAAaC,IAAOC,IAAIH,GAE9B,OAAQP,GACN,KAAKC,IAAkBI,UACrB,MAAM,GAAN,OAAUG,EAAWG,OAAOC,IAAYC,wBAAwBC,WAAhE,cAAgFN,EAC7EO,IAAI,EAAG,WACPJ,OAAOC,IAAYC,wBAAwBC,YAEhD,KAAKb,IAAkBG,QACrB,OAAOI,EAAWG,OAAOC,IAAYI,sBAAsBC,UAE7D,KAAKhB,IAAkBE,OACrB,MAAM,GAAN,OAAUK,EAAWG,OAAOC,IAAYM,oBAAoBC,OAA5D,cAAwEX,EACrEO,IAAI,EAAG,QACPJ,OAAOC,IAAYM,oBAAoBJ,YAE5C,KAAKb,IAAkBC,MACvB,QACE,OAAOM,EAAWG,OAAOC,IAAYM,oBAAoBE,QAczDC,EAAkB,SAAC,GAA+C,IAA7Cd,EAA4C,EAA5CA,KAAMP,EAAsC,EAAtCA,YAAasB,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,aAClD,GAAKhB,GAASP,EAAd,CAIA,IAGIwB,EAHEhB,EAAaC,IAAOC,IAAIH,GACxBkB,EACK,IAATH,GAAcI,OAAOC,SAASnB,EAAWoB,OAAQ,MAAQF,OAAOC,SAASlB,IAAOC,IAAIa,GAAcK,OAAQ,IAG5G,OAAQ5B,GACN,KAAKC,IAAkBI,UAKrBmB,GAJAA,EAAgBC,EACZjB,EAAWG,OAAOC,IAAYC,wBAAwBC,WACtDN,EAAWG,OAAOC,IAAYC,wBAAwBM,QAE5BU,QAAQ,KAAM,MAC5C,MACF,KAAK5B,IAAkBG,QAKrBoB,GAJAA,EAAgBC,EACZjB,EAAWG,OAAOC,IAAYI,sBAAsBF,WACpDN,EAAWG,OAAOC,IAAYI,sBAAsBG,QAE1BU,QAAQ,KAAM,MAC5C,MACF,KAAK5B,IAAkBE,OACvB,KAAKF,IAAkBC,MACvB,QAKEsB,GAJAA,EAAgBC,EACZjB,EAAWG,OAAOC,IAAYM,oBAAoBJ,WAClDN,EAAWG,OAAOC,IAAYM,oBAAoBC,QAExBU,QAAQ,aAAc,QAIxD,OAAOL,IAiBHM,EAA0B,SAAC,GAAc,IAAZR,EAAW,EAAXA,KAC3BS,EAAM7M,KAAK6M,IAAIT,GACjBU,EAAcV,EACdW,EAAc,GAgBlB,OAdIF,GAAO7M,KAAKgN,IAAI,GAAI,KACtBD,EAAc,IACdD,EAAcV,EAAOpM,KAAKgN,IAAI,GAAI,KACzBH,EAAM7M,KAAKgN,IAAI,GAAI,KAAOH,GAAO7M,KAAKgN,IAAI,GAAI,IACvDD,EAAc,IACdD,EAAcV,EAAOpM,KAAKgN,IAAI,GAAI,IACzBH,EAAM7M,KAAKgN,IAAI,GAAI,IAAMH,GAAO7M,KAAKgN,IAAI,GAAI,IACtDD,EAAc,IACdD,EAAcV,EAAOpM,KAAKgN,IAAI,GAAI,IACzBH,EAAM7M,KAAKgN,IAAI,GAAI,IAAMH,GAAO7M,KAAKgN,IAAI,GAAI,KACtDD,EAAc,IACdD,EAAcV,EAAOpM,KAAKgN,IAAI,GAAI,IAG9B,GAAN,OAAUF,GAAV,OAAwBC,IAYpBE,EAAkB,SAAC,GAAkD,IAAhDb,EAA+C,EAA/CA,KAA+C,IAAzCc,cAAyC,MAAhC9G,IAAQ+G,kBAAwB,EACpEL,EAAW,UAAM,IAAIM,KAAKC,aAAaH,EAAQ,CACjDI,sBAAuB,EACvBC,SAAU,UACVC,eAAgB,UACf/B,OAAOW,IAMV,OAJIU,EAAY7J,OAAS,GAAK6J,EAAY7J,QAAU,UAAGmJ,GAAOnJ,SAC5D6J,EAAcF,EAAwB,CAAER,UAGnCU,GAGHW,EAAmB,CACvB5C,8BACAO,iBACAe,kBACAc,kBACAL,4B,iCCvKF,oIA+BMc,EAAa,SAAbA,EAAc,GAAD,IACjBC,EADiB,EACjBA,cACA9F,EAFiB,EAEjBA,WACA+F,EAHiB,EAGjBA,UACA7N,EAJiB,EAIjBA,UACAF,EALiB,EAKjBA,OACAgO,EANiB,EAMjBA,OACAC,EAPiB,EAOjBA,UACAnO,EARiB,EAQjBA,QACAmF,EATiB,EASjBA,QATiB,OAWjB,cAAC,IAAD,CACE6I,cAAeA,EACfC,UAAWA,EACX/F,WAAYA,IAAe9H,EAC3BA,UAAWA,EACXgO,UAAW,SAACrJ,EAAOhF,EAAMsO,GAAd,OACTH,EAAO,CAAEnJ,QAAO/E,QAASqO,EAAOnO,OAAQK,oBAAkBT,wBAAwBC,EAAMsO,MAE1FC,gBAAiB,SAACvJ,EAAOsJ,GAAR,OAAkBF,EAAU,CAAEpJ,QAAO/E,QAASqO,EAAOnO,OAAQ6N,EAAW1E,aAAanJ,UACtGH,KAAMQ,oBAAkBN,wBAAwBC,GAAU6N,EAAW1E,aAAanJ,OAAQF,GAC1FA,QAASA,EACTmF,QAASA,KA8Bb4I,EAAW1E,aAAe,CACxB2E,cAAe,OACfC,WAAW,EACX/F,YAAY,EACZ9H,UAAW,EACXF,OAAQ,EACRgO,OAAQzH,IAAQC,KAChByH,UAAW1H,IAAQC,KACnB1G,QAAS,GACTmF,QAAS,O,4PCnFLoJ,EAAkB,SAACxJ,GAAiC,IAA1ByJ,EAAyB,yEACoCzJ,GAAnFqB,EAD+C,EAC/CA,QAD+C,IACtCG,qBADsC,MACtB,GADsB,EAClBkI,EADkB,EAClBA,QADkB,IACTjI,eADS,MACCC,IAAQC,KADT,MACeJ,cADf,MACwB,GADxB,EAMvD,OAJIkI,GACFhI,IAGK,CACLJ,UACAG,gBACAkI,UACA7N,GAAI2F,EAAc3F,IAAM2F,EAAcrB,KACtCA,KAAMqB,EAAcrB,KACpBsB,UACAtD,MAAOqD,EAAcrD,MACrBoD,WAWEoI,EAA+B,SAACxL,GAAD,IAAQyL,EAAR,uDAAqB,EAArB,MACjB,kBAAVzL,GAAsBA,EAAMI,OAASqL,GAAgC,kBAAVzL,GAE/D0L,EAAc,CAClBL,kBACAG,iC,iCCvCF,uHAaMG,EAAe,SAAC,GAAD,EAAGC,OAAH,IAAW9D,EAAX,EAAWA,SAAX,EAAqB7H,MAArB,OAAiC,cAAC,IAAM4L,SAAP,UAAiB/D,KAkBvE6D,EAAaxF,aAAe,CAC1ByF,QAAQ,I,2TCRJE,E,4MACJtK,MAAQ,CAAEuK,YAAa,EAAGZ,MAAO,IAAKa,aAAc,I,EAmBpDC,mBAAqB,WAAO,IAAD,EACM,EAAKzK,MAA5BuK,EADiB,EACjBA,YAAaZ,EADI,EACJA,MADI,EAEsB,EAAKpJ,MAA5CmK,EAFiB,EAEjBA,wBAAyBzO,EAFR,EAEQA,MAAOC,EAFf,EAEeA,GAExC,GAAIA,EAAI,CAAC,IAAD,EACAyO,EAAY,2BACb1O,GADa,uBAEfK,IAAqBsO,MAAQjB,GAFd,cAGfrN,IAAqBuO,OAASN,EAAcZ,GAAS,GAHtC,IAOlBe,EAAwBxO,EADS4O,IAAWC,eAAeJ,GAAnDK,wB,EAWZC,SAAW,SAAA5K,GAAU,IACXuB,EAAWvB,EAAXuB,OADU,EAE2B,EAAK5B,MAA1CuK,EAFU,EAEVA,YAAaZ,EAFH,EAEGA,MAAOa,EAFV,EAEUA,aAFV,EAG4B,EAAKjK,MAA3C2K,EAHU,EAGVA,eAAgBC,EAHN,EAGMA,QAASC,EAHf,EAGeA,SAE3BC,EAASzJ,EAAO0J,aAAe1J,EAAO2J,YAAc3J,EAAOiE,aAEjE,GAAIqF,GAAkBX,EAAc,GAAKZ,GAAS0B,IAAWF,EAAS,CACpE,IAAMK,EAAUjB,EAAc,EACxBkB,EAAW,sBAAOjB,GAAP,YAAyBY,GAAY,KAEtD,EAAKjK,SAAS,CACZqJ,aAAciB,EACdlB,YAAaiB,M,uDApDnB,WACErJ,KAAKsI,uB,gCAGP,SAAmBpI,EAAWqJ,GACJvJ,KAAKnC,MAArBuK,cAEYmB,EAAUnB,aAC5BpI,KAAKsI,uB,0BAiDT,WAAgB,IACNF,EAAgBpI,KAAKnC,MAArBuK,YADK,EAEmCpI,KAAK5B,MAA7CoL,EAFK,EAELA,iBAAkBP,EAFb,EAEaA,SAAUD,EAFvB,EAEuBA,QAEpC,GAAIZ,EAAc,GAAKY,EAAS,CAC9B,IAAMS,EACJ,cAAC,SAAD,CACEnL,QAAQ,QACRoL,WAAY,CACVC,SAAS,EACTC,UAA0B,OAAhBJ,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB/M,UAAmB,OAARwM,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAAMxN,OAAO6E,KAAK2I,EAAS,IAAIxM,QAAW,EAC5FoN,UAA2B,OAAhBL,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB/M,SAAU+M,EAAiBjO,KAAI,qBAAGsB,cAA+B,GAC9FiN,SAAU,EACVxL,QAASyL,IAAaC,WAK5B,OAAO,qBAAK7I,UAAU,wCAAf,SAAwDsI,IAGjE,OAAO,O,yBAYT,WAAe,IACLpB,EAAiBrI,KAAKnC,MAAtBwK,aADI,EAEoDrI,KAAK5B,MAA7DoL,EAFI,EAEJA,iBAAkBP,EAFd,EAEcA,SAAUF,EAFxB,EAEwBA,eAAgBjN,EAFxC,EAEwCA,QAChDC,EAAuB,GAErBkO,EAAc,sBAAI5B,GAAJ,YAAsBY,GAAY,KAAK1N,KAAI,YAAsB,IAAhBM,EAAe,sBACjD0B,uBAAqB3B,sBAAsB,CAC1EN,QAASkO,EACT3N,WACAC,YAHMsB,EAD0E,EAC1EA,cAAeC,EAD2D,EAC3DA,MAQvB,OAFAtB,EAAuBqB,EAEhB,CACLC,YAKA6M,EAAuC,IAAtBnB,EAAiB,GAGtC,OAFAmB,EAAiBA,EAAgB,KAAOA,GAAkB,IAGxD,qBAAK/I,UAAU,yBAAyB6C,MAAO,CAAEmG,OAAO,GAAD,OAAKD,EAAL,OAAvD,SACE,sBACE/I,UAAS,qCAAiC+I,EAAgB,IAAO,cAAkB,IACnFpB,SAAU9I,KAAK8I,SAFjB,UAIG9I,KAAKoK,eACJH,EAAYxN,QACZ,cAAC,QAAD,CACEkN,SAAS,EACTrL,QAASyL,IAAaC,QACtB7I,UAAU,wBACV/D,cAAerB,EACfsO,KAAMJ,KAGR,Y,oBAWV,WAAU,IACA7B,EAAgBpI,KAAKnC,MAArBuK,YADD,EAEgFpI,KAAK5B,MAApFkM,EAFD,EAECA,MAAOd,EAFR,EAEQA,iBAAkBP,EAF1B,EAE0BA,SAAUF,EAFpC,EAEoCA,eAAgBC,EAFpD,EAEoDA,QAASuB,EAF7D,EAE6DA,eAEpE,OACE,sBAAKpJ,UAAS,iBAAamJ,EAAS,OAAW,IAA/C,UACGtB,GAA2B,IAAhBZ,GACV,cAAC,SAAD,CACE9J,QAAQ,QACRoL,WAAY,CACVC,SAAS,EACTC,UAA0B,OAAhBJ,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB/M,UAAmB,OAARwM,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAAMxN,OAAO6E,KAAK2I,EAAS,IAAIxM,QAAW,EAC5FoN,UAA2B,OAAhBL,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB/M,SAAU+M,EAAiBjO,KAAI,qBAAGsB,cAA+B,GAC9FiN,SAAUf,EAAiBwB,EAAiBxB,EAAiBwB,EAC7DjM,QAASyL,IAAaC,aAIxBhB,GAA2B,IAAhBZ,GAAsBA,EAAc,IAAMpI,KAAKwK,qB,GAjK7CzN,IAAMwF,WAmN/B4F,EAAW3F,aAAe,CACxB8H,OAAO,EACPd,iBAAkB,GAClBjB,wBAAyB3I,IAAQC,KACjCoJ,SAAU,GACVD,SAAS,EACTuB,eAAgB,EAChBzQ,MAAO,GACPgC,QAAS,IASX,IASM2O,EAAsBC,IAAeC,WAAWC,iBAEhDC,EAAsBC,YAAQL,GAXT,SAAAM,GAAQ,MAAK,CACtCxC,wBAAyB,SAACxO,EAAID,GAAL,OAAeiR,EAASC,IAAaC,KAAK1C,wBAAwBxO,EAAID,QAUrEgR,CAAiD3C,I,8NCxPvE+C,E,4MACJrN,MAAQ,CACNsN,aAAc,M,EAShBC,QAAU,SAAAlN,GAAU,IAAD,EACkB,EAAKE,MAAhCiN,EADS,EACTA,QAASD,EADA,EACAA,QAAS/L,EADT,EACSA,KAClBK,EAA2BxB,EAA3BwB,cAAekI,EAAY1J,EAAZ0J,QACjB0D,EAAW,eAAQpN,GAEzBkN,EAAQ1D,0BAAgBxJ,GAAO,IAEf,KAAZ0J,IACW,WAATvI,GAA6C,KAAxBK,EAAcrD,MACrCgP,EAAQ3D,0BAAgB4D,IAExB,EAAKtM,SAAS,CAAEmM,aAAc,KAAM,WAClCE,EACE3D,0BAAgB,2BAAK4D,GAAgB,CAAE5L,cAAc,2BAAM4L,EAAY5L,eAAnB,IAAkCrD,MAAO,c,EAavGkP,UAAY,SAAArN,GAAU,IAAD,EACkB,EAAKE,MAAlCiN,EADW,EACXA,QAASE,EADE,EACFA,UAAWlM,EADT,EACSA,KACpBK,EAAkBxB,EAAlBwB,cACF4L,EAAW,eAAQpN,GAEzBqN,EAAU7D,0BAAgBxJ,GAAO,IAEpB,WAATmB,GAA6C,KAAxBK,EAAcrD,OAIvCkH,YAAW,WACmB,KAAxB7D,EAAcrD,OAChBgP,EAAQ3D,0BAAgB4D,Q,EAW9BE,SAAW,SAACnP,EAAO6B,GAAW,IACpBsN,EAAa,EAAKpN,MAAlBoN,SACFF,EAAW,eAAQpN,GAEzB,EAAKc,SAAS,CAAEmM,aAAc9O,IAAS,WACrCmP,EAAS9D,0BAAgB4D,Q,4CAS7B,WAAU,IAAD,EACCH,EAAiBnL,KAAKnC,MAAtBsN,aADD,EAeHnL,KAAK5B,MAZP+C,EAHK,EAGLA,UACApH,EAJK,EAILA,GACAsH,EALK,EAKLA,WACAhD,EANK,EAMLA,KAKAoN,GAXK,EAOLD,SAPK,EAQLH,QARK,EASLD,QATK,EAULG,UAVK,EAWLE,YACApM,EAZK,EAYLA,KACAhD,EAbK,EAaLA,MACG+B,EAdE,6HAgBDsN,EAAcrN,GAAQuB,IAAQ8C,aAC9BiJ,EAAY5R,GAAM2R,EAExB,OACE,cAAC,IAAD,aACE3R,GAAI4R,EACJtN,KAAMqN,EACNvK,UAAS,+BAA0BA,GACnCE,WAAYA,IAAc,EAC1BmK,SAAUxL,KAAKwL,SACfJ,QAASpL,KAAKoL,QACdG,UAAWvL,KAAKuL,UAChBE,WAAYA,IAAc,EAC1BpM,KAAMA,EACNhD,MAAK,iBAAE8O,QAAF,IAAEA,IAAgB9O,SAAlB,QAA2B,IAC5B+B,Q,GA1GYrB,IAAMwF,WA4I9B2I,EAAU1I,aAAe,CACvBrB,UAAW,GACXpH,GAAI,KACJsH,YAAY,EACZoK,YAAY,EACZpN,KAAM,KACNmN,SAAU5L,IAAQC,KAClBwL,QAASzL,IAAQC,KACjBuL,QAASxL,IAAQC,KACjB0L,UAAW3L,IAAQC,KACnBR,KAAM,OACNhD,MAAO,K,qSCxIHuP,E,4MACJ/N,MAAQ,CAAEgO,WAAY,G,EAEtBC,eAAiB,G,EAEjB7I,eAAiBrD,IAAQC,K,EAEzBgD,aAAe9F,IAAM+F,Y,EAErBiJ,WAAahP,IAAM+F,Y,EAgBnBkJ,OAAS,SAAAjS,GACP,EAAK+R,eAAL,2BAA2B,EAAKA,gBAAhC,kBAAiD/R,GAAK,IACtD,EAAKkS,e,EAQPC,SAAW,WACT,EAAKJ,eAAiB,GACtB,EAAKG,e,EAUPnM,SAAW,SAAA/F,GACT,IAAMoS,GAAiB,EAAKL,eAAe/R,GAI3C,OAHA,EAAK+R,eAAL,2BAA2B,EAAKA,gBAAhC,kBAAiD/R,EAAKoS,IACtD,EAAKF,cAEEE,G,EAQTjJ,kBAAoB,WAAO,IACjB2I,EAAe,EAAKhO,MAApBgO,WADgB,GAEI,EAAKhJ,aAAaQ,SAAW,IAAjDD,mBAFgB,MAEF,EAFE,EAIpBA,IAAgByI,GAClB,EAAK7M,SAAS,CAAE6M,WAAYzI,K,EAYhCgJ,aAAe,SAAArS,GAAE,OAAI,EAAK+R,eAAe/R,KAAO,G,uDAlEhD,WACEiG,KAAKqM,qB,kCAGP,WACErM,KAAKiD,mB,8BAkEP,WAAoB,IAAD,OACXqJ,EAAmBtM,KAAK6C,aAAaQ,QACnCkJ,EAAmBtK,OAAnBsK,eAER,GAAID,GAAoBC,EAAgB,CACtC,IAAMtJ,EAAiB,IAAIsJ,EAAevM,KAAKkD,mBAC/CD,EAAeuJ,QAAQF,GACvBtM,KAAKiD,eAAiB,kBAAMA,EAAewJ,UAAUH,SAErDtM,KAAKkD,oBACLjB,OAAOgC,iBAAiB,SAAUjE,KAAKkD,mBACvClD,KAAKiD,eAAiB,kBAAMhB,OAAOiC,oBAAoB,SAAU,EAAKhB,sB,2BAS1E,WAAiB,IAAD,EAC8DlD,KAAK5B,MAAzEsO,EADM,EACNA,oBAAqB/G,EADf,EACeA,gBAAiBc,EADhC,EACgCA,gBAAiBkG,EADjD,EACiDA,SACzDC,EAAa,GACbC,EAAa,GACfC,EAAgBH,EAASlQ,QAAUkQ,EAAS,GAAGrP,MAAS,GAgC5D,OA9BAqP,EAASxQ,SAAQ,SAAA4Q,GACXA,EAAQC,uBACVF,EAAeC,EAAQzP,SAI3BsP,EAAWK,gBAAkBH,EAAaI,QACxC,SAACC,EAAK9J,EAASxE,GAAf,OAA0BA,EAAQ6N,IAAwB,EAAIS,EAAIlQ,OAAOoG,EAAQ+J,GAAKD,IACtF,IAGFP,EAAWjH,gBAAkB,SAAA0H,GAAS,OACnCP,EAAaO,IAAcP,EAAaO,GAAWC,YAAeD,GAEtC,oBAApB1H,IACTiH,EAAWjH,gBAAkB,SAAAC,GAC3B,IAAM2H,EAAaX,EAAWK,gBACxBO,EAAYD,EAAWE,QAAQ7H,GAC/B8H,EAAY,eAASZ,EAAaS,EAAWC,EAAY,KAAO,IAChEG,EAAQ,eAASb,EAAaS,EAAWC,EAAY,KAAO,IAC5DI,EAAI,eAASd,EAAalH,IAAS,IAEzC,OAAOD,EAAgB,CAAEC,OAAM8H,eAAcE,OAAMD,eAIxB,oBAApBlH,IACToG,EAAWpG,gBAAkB,SAAAb,GAAI,OAAIa,EAAgB,CAAEb,WAGlD,2BACFgH,GACAC,K,2BASP,WAAiB,IACPgB,EAAyB7N,KAAK5B,MAA9ByP,qBADM,EAGgD7N,KAAK8N,gBAA3Db,EAHM,EAGNA,gBAAiBtH,EAHX,EAGWA,gBAAiBc,EAH5B,EAG4BA,gBACpCsH,EAAoB,CACxBC,gBAAiBH,GAEbI,EAAoB,CACxBC,eAAe,EACfC,UAAU,GAeZ,OAZIlB,IACFc,EAAkBR,WAAaN,GAG7BtH,IACFoI,EAAkBK,WAAazI,GAG7Bc,IACFwH,EAAkBG,WAAa3H,GAG1B,CACL4H,eAAgBpB,EAChBL,WAAYmB,EACZlB,WAAYoB,K,4BAUhB,YAAkC,IAAjBI,EAAgB,EAAhBA,aACPvC,EAAmB9L,KAAnB8L,eADuB,EAEF9L,KAAK5B,MAA1BkQ,EAFuB,EAEvBA,OAAQ3B,EAFe,EAEfA,SAEhB,GAAIlR,OAAO6E,KAAKgO,GAAQ7R,OACtB,OAAO6R,EAGT,IAAMC,EAAkB,GAClBC,EAAqB,GACvBC,EAAc,EACdC,EAAc,EAEE/B,EAAS/S,QAAO,SAAA+U,GAAG,OAAsB,IAAlBA,EAAIC,aAEnCzS,SAAQ,SAAA4Q,GAClB,IAAKjB,EAAeiB,EAAQhT,KAAOgT,EAAQzP,KAAM,CAC/C,IAAIuR,EAAqB,EAEzB9B,EAAQzP,KAAKnB,SAAQ,SAACE,EAAOwC,GAC3BgQ,EAAqBxS,GAASA,EAAMyS,EAAID,EAAqBxS,EAAMyS,EAAID,EAEnEhQ,IAAUkO,EAAQzP,KAAKb,OAAS,IAClCiS,GAAeG,UAMvBlC,EAASxQ,SAAQ,SAAA4Q,IACVjB,EAAeiB,EAAQhT,KAAOgT,EAAQzP,OACzCmR,EAAc1B,EAAQzP,KAAKb,OAASgS,EAAc1B,EAAQzP,KAAKb,OAASgS,EAExE1B,EAAQzP,KAAKnB,SAAQ,SAAAE,GACnBqS,EAAcrS,GAASA,EAAMyS,EAAIJ,EAAcrS,EAAMyS,EAAIJ,SAK1DL,IACHE,EAAgBnB,EAAI,CAAC,EAAGqB,GAAe,KAGzC,IAAMM,EAAUvV,KAAKgN,IAAI,GAAIhN,KAAKwV,MAAMxV,KAAKyV,MAAOP,EAAc,IAAMA,GAAgB,MAOxF,OANAH,EAAgBO,EAAI,CAAC,EAAGtV,KAAKC,MAAMiV,EAAc,GAAKK,GAAWA,GAE7DtT,OAAO6E,KAAKiO,GAAiB9R,SAC/B+R,EAAmBF,OAASC,GAGvB,CACLW,KAAMR,EACNS,YAAY,eAAMX,M,4BAStB,WAAkB,IACR1C,EAAmB9L,KAAnB8L,eADO,EAEoB9L,KAAK5B,MAAhCuO,EAFO,EAEPA,SAAUyC,EAFH,EAEGA,aACdC,EAAiB,GA8BrB,OA5BID,GAAgBzC,GAAYA,EAAS,IAAMA,EAAS,GAAGrP,OACzD+R,EAAiB1C,EAAS,GAAGrP,KAAK/B,KAAI,SAACwR,EAASlO,GAC9C,IAAMyQ,EAAa,GAEnB3C,EAASxQ,SAAQ,SAAAmB,IACVwO,EAAexO,EAAKvD,KAAOuD,EAAKA,MAAQA,EAAKA,KAAKuB,KACrDyQ,EAAWhS,EAAKvD,IAAM,CACpBwV,MAAOjS,EAAKkS,QAAUlS,EAAKmS,MAAQnS,EAAKiS,OAAS,GACjDjS,KAAM4B,IAAW5B,EAAKA,KAAKuB,SAKjC,IAAM6Q,EAAY,CAChBC,MAAO,CAAEvC,EAAGL,EAAQK,EAAG0B,EAAG/B,EAAQ+B,EAAGjQ,QAAOyQ,aAAY3C,SAAUzN,IAAWyN,KAG/E,MAAO,CACLS,EAAGL,EAAQK,EACX0B,EAAG,KACHQ,aACAM,QACG7S,IAAMC,eAAeoS,IAAiBrS,IAAM8S,aAAaT,EAAnB,eAAsCM,KAC7EN,EAAa,eAAKM,SAKnBL,I,2BAQT,WAAiB,IAAD,OACNvD,EAAmB9L,KAAnB8L,eADM,EAEqB9L,KAAK5B,MAAhCgR,EAFM,EAENA,aAAczC,EAFR,EAEQA,SAEtB,IAAKyC,GAAgB3T,OAAOuF,OAAO8K,GAAgBlS,QAAO,SAAAkW,GAAC,OAAU,IAANA,KAAYrT,SAAWkQ,EAASlQ,OAC7F,OAAO,KAGT,IAAMsT,EAAgCC,YAAgB,UAAW,UAC3DC,EAAoBjQ,KAAKkQ,iBAOzBC,EAAiB,SAAC/C,EAAGgD,EAAOC,GAChC,IAAIC,EAAclD,EAAI,GAMtB,OAJIA,EAAIgD,EAAQ,IACdE,EAAclD,EAAI,GAAKiD,EAAe,GAGjCC,GAGHC,EAAiB,SAACzB,EAAG3E,EAAQqG,GACjC,IAAIC,EAAc3B,EAAI,GAMtB,OAJIA,EAAI3E,EAAS,IACfsG,EAAc3B,EAAI,GAAK0B,GAGlBC,GAGHC,EAAkB,SAAAvT,GACtB,IAAM0F,EAAe,EAAKA,aAAaQ,QACjC0I,EAAa,EAAKA,WAAW1I,QAC7BsN,EAAmB9N,GAAgBA,EAAa+N,yBAA4B,CAAER,MAAO,EAAGjG,OAAQ,GAChG0G,EAAiB9E,GAAcA,EAAW6E,yBAA4B,CAAER,MAAO,EAAGjG,OAAQ,GAC1F2G,EA9BuB,SAAC,GAAe,IAAbnB,EAAY,EAAZA,MAC1BoB,EAAId,EAAkBnP,MAAK,SAAAgP,GAAC,OAAIA,EAAE1C,IAAMuC,EAAMvC,MAAM,GAC1D,OAAQ,OAAD2D,QAAC,IAADA,OAAA,EAAAA,EAAGnB,UAAW,GA4BDoB,CAAuB,eAAK7T,IAEhD,OAAI2T,EAEA,4BACE,+BACE1D,EAAG+C,EAAehT,EAAIiQ,EAAGuD,EAAgBP,MAAOS,EAAcT,OAC9DtB,EAAGyB,EAAepT,EAAI2R,EAAG6B,EAAgBxG,OAAQ0G,EAAc1G,QAC/DiG,MAAM,OACNjG,OAAO,OAJT,SAME,qBAAK/F,IAAK,EAAK2H,WAAY/H,MAAO,CAAEiN,QAAS,gBAAkBC,MAAM,+BAArE,SACGJ,QAOJ,uBAGHK,EACJ,cAAC,IAAD,CACEC,OAAQ,cAAC,IAAD,IACRC,YAAa,CAAE5B,KAAM,eACrB0B,eAAgB,cAACT,EAAD,IAChBY,gBAAc,IAIlB,OACE,cAACvB,EAAD,CACEwB,gBAAgB,IAChBC,OAAQ,SAAArU,GAAG,OAAIA,GACfgU,eAAgBA,EAChBM,eAAgB,GAChBC,qBAAmB,M,0BAUzB,WAAgB,IAAD,EACqB1R,KAAK5B,MAA/BuT,EADK,EACLA,YAAahF,EADR,EACQA,SAErB,IAAKgF,EACH,OAAO,KAGT,IAAMC,EAAc,CAClBjC,MAAO,CAAEhD,SAAUzN,IAAWyN,IAC9BkF,MAAO,CACLC,KAAM9R,KAAKgM,OACX+F,OAAQ/R,KAAKkM,SACb8F,OAAQhS,KAAKF,SACbmS,UAAWjS,KAAKoM,eAIpB,OACGrP,IAAMC,eAAe2U,IAAgB5U,IAAM8S,aAAa8B,EAAnB,eAAqCC,KAC3ED,EAAY,eAAKC,M,yBAUrB,YAAkC,IAAD,IAAnBM,eAAmB,SACvBpG,EAAmB9L,KAAnB8L,eACAa,EAAa3M,KAAK5B,MAAlBuO,SACFwF,EAAS,GACTC,EAAgB,GA8EtB,OAZAzF,EAASxQ,SAAQ,SAAC4Q,EAASlO,GACzB,IAAKiN,EAAeiB,EAAQhT,KAAOgT,EAAQzP,MAAQyP,EAAQzP,KAAKb,OAAQ,CACtE,IAAM4V,EAAkBtF,EAAQuF,aAlEb,SAACvF,EAASlO,GAC/B,IAAM0T,EAAkB,CAAEjV,KAAM,IAkBhC,OAhBIyP,EAAQ0C,OACV8C,EAAgBjV,KAAKmS,KAAO1C,EAAQ0C,MAGlC1C,EAAQyC,SACV+C,EAAgBjV,KAAKkS,OAASzC,EAAQyC,QAGpCzC,EAAQyF,cACVD,EAAgBjV,KAAKkV,YAAczF,EAAQyF,aAGzCzF,EAAQ0F,kBACVF,EAAgBjV,KAAKmV,gBAAkB1F,EAAQ0F,iBAI/C,cAAC,IAAD,CACEC,QAAS3F,EAAQ2F,UAAW,EAC5BC,cAAe5F,EAAQ4F,eAAiB,OAExCtU,KAAI,oBAAeQ,EAAf,cACJvB,KAAMyP,EAAQzP,KACd0G,MAAK,2BAAQ+I,EAAQ/I,OAAS,IAAQuO,GAEtCK,WAAY7F,EAAQ6F,WACpBC,aAAc9F,EAAQ8F,cANjBjT,IAAQ8C,cA2CgCoQ,CAAe/F,EAASlO,IAhCzD,SAACkO,EAASlO,GAC1B,IAAM0T,EAAkB,CAAEjV,KAAM,IAchC,OAZIyP,EAAQ0C,OACV8C,EAAgBjV,KAAKmS,KAAO1C,EAAQ0C,MAGlC1C,EAAQyC,SACV+C,EAAgBjV,KAAKkS,OAASzC,EAAQyC,QAGpCzC,EAAQyF,cACVD,EAAgBjV,KAAKkV,YAAczF,EAAQyF,aAI3C,cAAC,IAAD,CACEE,QAAS3F,EAAQ2F,UAAW,EAC5BC,cAAe5F,EAAQ4F,eAAiB,YAExCtU,KAAI,oBAAeQ,EAAf,SACJvB,KAAMyP,EAAQzP,KACd0G,MAAK,2BAAQ+I,EAAQ/I,OAAS,IAAQuO,GAEtCK,WAAY7F,EAAQ6F,WACpBC,aAAc9F,EAAQ8F,cANjBjT,IAAQ8C,cAamEqQ,CAAUhG,EAASlO,GAEjGkO,EAAQ6B,UACVwD,EAAcjX,KAAKkX,GAEnBF,EAAOhX,KAAKkX,OAKVH,GAAWE,GAAkBD,I,oBAQvC,WAAU,IACAtG,EAAe7L,KAAKnC,MAApBgO,WADD,EAEsC7L,KAAK5B,MAA1CuT,EAFD,EAECA,YAAaqB,EAFd,EAEcA,QAASJ,EAFvB,EAEuBA,WAFvB,EAI0C5S,KAAKiT,gBAA9C5E,EAJD,EAICA,aAAczB,EAJf,EAIeA,WAAYC,EAJ3B,EAI2BA,WAJ3B,EAKuB7M,KAAKkT,eAAe,CAAE7E,iBAA5Cc,EALD,EAKCA,YACFgE,EAAmB,CAAEC,mBANpB,EAKclE,MACmC,GAAKlP,KAAKqT,sBAAoBC,GAChFC,EAAU,yBAAKP,WAAY7D,GAAgBgE,GAEjD,OACE,sBACEpZ,GAAG,sBACHoH,UAAU,uDACViD,IAAKpE,KAAK6C,aAHZ,UAKE,eAAC,IAAD,yBAAO6P,QAAS,CAAEc,SAAU,GAAKpD,MAAOvE,EAAY+G,WAAYA,GAAgBW,GAAhF,cACE,cAAC,IAAD,2BAAe3G,GAAf,IAA2B8F,SAAS,KACpC,cAAC,IAAD,2BAAe7F,GAAf,IAA2B6F,SAAS,KACnC1S,KAAKyT,YAAY,IAClB,cAAC,IAAD,UAAazT,KAAKyT,YAAY,CAAEvB,SAAS,UAE1CP,GAAe,qBAAKxQ,UAAU,iDAAf,SAAiEnB,KAAK0T,wB,GApgBtE3W,IAAMwF,WAokB9BqJ,EAAUpJ,aAAe,CACvBmP,YAAa,KACbvC,aAAc,KACdd,OAAQ,GACR3B,SAAU,GACVxC,OAAQ,IACR6I,QAAS,CACP9J,OAAQ,GACRvG,KAAM,GACNf,MAAO,GACP+R,IAAK,IAEPf,WAAY,OACZ/E,sBAAsB,EACtBnB,oBAAqB,EACrB/G,gBAAiB,KACjBc,gBAAiB,O,iCClnBnB,sIAeMmN,EAAwB,SAAC,GAA6C,IAA3CjE,EAA0C,EAA1CA,MAAOrL,EAAmC,EAAnCA,YAAauP,EAAsB,EAAtBA,aAAc9C,EAAQ,EAARA,EAC7DjU,EAAS,KACPQ,EAAO,GAF4D,GAG7CqS,GAAS,IAA7BL,kBAHiE,MAGpD,GAHoD,EAmCzE,OA9BA7T,OAAO6E,KAAKgP,GAAYnT,SAAQ,SAACC,EAAKyC,GAAW,IAAD,EAC7B,EAAH,IAAVA,IACF/B,EAAS8H,yBAAe,CACtBC,KAAI,UAAEyK,EAAWlT,UAAb,aAAE,EAAiBkB,KAAKuH,KAC5BP,iBAIJ,IAAMwP,EAAgB,CACpBvE,MAAK,UAAED,EAAWlT,UAAb,aAAE,EAAiBmT,OAG1B,GAAI,aAAawE,KAAK3X,GAAM,CAAC,IAAD,MACpB4X,GACH,UAAA1E,EAAWlT,UAAX,eAAiBkB,KAAK2W,cAAelD,EAAE,4CAAxC,oBACCzB,EAAWlT,UADZ,aACC,EAAiBkB,KAAKwR,SADvB,QAC4BiC,EAAE,gCAEhC+C,EAAcnT,MAAQoQ,EAAE,kCACxB+C,EAAczX,MAAQ2X,MACjB,CAAC,IAAD,IACCE,GAC+B,KAAlC,UAAA5E,EAAWlT,UAAX,eAAiBkB,KAAK6W,UAAqBpD,EAAE,iCAA9C,UAAiFzB,EAAWlT,UAA5F,aAAiF,EAAiBkB,KAAKwR,IAAK,EAE9GgF,EAAcnT,MAAQoQ,EAAE,mBAAD,OAAoB3U,EAApB,SAAgC,CAAEgY,QAASP,IAClEC,EAAczX,MAAQ6X,EAGxB5W,EAAKnC,KAAK2Y,MAIV,sBAAK3S,UAAU,kBAAf,UACE,wBAAOkT,QAAStD,EAAE,kCAAlB,UACIzT,EAAKb,QAAUK,GACf,gCACE,6BACE,oBAAIwX,QAAS,EAAb,SAAiBxX,SAIrB,KACAQ,EAAKb,QACL,gCACGa,EAAK/B,KAAI,SAAAgZ,GAAS,OACjB,+BACE,+BACE,qBACEC,eAAA,EACArT,UAAU,kCACV6C,MAAO,CACLyQ,gBAAiBF,EAAUhF,OAAS,iBAGvCgF,EAAU5T,SAEb,6BAAK4T,EAAUlY,UAXjB,kBAAoBkY,EAAU5T,cAgBlC,SAEDrD,EAAKb,QAAUsU,EAAE,qCAAwC,SAkClE6C,EAAsBpR,aAAe,CACnCmN,MAAO,GACPkE,aAAc,GACd9C,EAAGxU,c,uPC3FCmY,E,4MACJ7W,MAAQ,CACN8W,iBAAkB,KAClBC,YAAa,M,EAiCfC,MAAQ,YAAgB,IAAbhW,EAAY,EAAZA,MACDgW,EAAU,EAAKzW,MAAfyW,MAER,EAAK7V,SACH,CACE2V,iBAAkB9V,IAEpB,kBAAMgW,EAAM,CAAEhW,c,uDArClB,WAGsB,OAFImB,KAAKnC,MAArB+W,aAGN5U,KAAK8U,e,gCAIT,SAAmB5U,GAAY,IACrB6U,EAAS/U,KAAK5B,MAAd2W,KASHC,IAAa9U,EAAU6U,KAAMA,GARf,SAACE,EAAQC,GAC1B,GAAsB,oBAAXD,GAA2C,oBAAXC,EACzC,OAAOD,EAAOE,aAAeD,EAAOC,eAOtCnV,KAAK8U,e,wBAyBT,WAAc,IAAD,EACmC9U,KAAK5B,MAA3CgX,EADG,EACHA,UAAWC,EADR,EACQA,iBAAkBN,EAD1B,EAC0BA,KACjCJ,EAAmBU,EAEjBT,EAAcG,EAAKxZ,KAAI,WAA6BsD,GAAW,IAArCoJ,EAAoC,EAApCA,OAAQqN,EAA4B,EAA5BA,QAAShZ,EAAmB,EAAnBA,MAG/C,OAFAqY,EAAmB1M,EAASpJ,EAAQ8V,EAGlC,cAAC,IAAD,CAAiBY,SAAU1W,EAAOvC,MAAO,cAAC,IAAD,UAAeA,IAAxD,SACGgZ,GADOhZ,MAMW,kBAAd8Y,IACTT,EAAmBS,GAGrBpV,KAAKhB,SAAS,CACZ2V,mBACAC,kB,wBASJ,WAAc,IAAD,SAC+B5U,KAAKnC,MAAvC8W,EADG,EACHA,iBAAkBC,EADf,EACeA,YADf,EAE8B5U,KAAK5B,MAAtC+C,EAFG,EAEHA,UAAWqU,EAFR,EAEQA,kBAEnB,OACE,cAAC,IAAD,CACErU,UAAS,wBAAqBqU,EAAuC,GAAlB,cAA1C,YAAkErU,GAAa,IACxFsU,UAAWd,EACX1W,SAAU,SAACC,EAAOW,GAAR,OAAkB,EAAKgW,MAAM,CAAE3W,QAAOW,WAChD6W,cAAY,EACZC,eAAa,EACbC,MAAO,CACLC,QAAS,YACTC,GAAI,WARR,SAWGlB,M,oBAUP,WACE,OACE,cAAC,IAAD,CAAMzT,UAAU,2BAAhB,SACE,cAAC,IAAD,CAAU4U,KAAM,GAAhB,SAAqB/V,KAAKgW,qB,GA5GfjZ,IAAMwF,WA6IzBmS,EAAKlS,aAAe,CAClB4S,UAAW,KACXjU,UAAW,GACXkU,iBAAkB,EAClBG,mBAAmB,EACnBX,MAAOjV,IAAQC,KACfkV,KAAM,K,iCC/KR,gKAaMkB,EAAiB,SAAAC,GACrB,OAAQA,GACN,KAAK/b,IAAqBgc,IACxB,MAAO,CACLnY,SAAU,KACVD,QAAS,CACP,CACEzB,MAAOC,oBAAU,gCACjBF,MAAO+Z,IAAUC,SAEnB,CACE/Z,MAAOC,oBAAU,iCACjBF,MAAO+Z,IAAUE,UAEnB,CACEha,MAAOC,oBAAU,oCACjBF,MAAO+Z,IAAUG,MAEnB,CACEja,MAAOC,oBAAU,6BACjBF,MAAO+Z,IAAUI,QAIzB,KAAKrc,IAAqBsc,MACxB,MAAO,CACLzY,SAAU,KACVD,QAAS,CACP,CACEzB,MAAOC,oBAAU,sCACjBF,MAAOqa,IAAYC,aAErB,CACEra,MAAOC,oBAAU,mCACjBF,MAAOqa,IAAYE,UAErB,CACEta,MAAOC,oBAAU,qCACjBF,MAAOqa,IAAYG,YAErB,CACEva,MAAOC,oBAAU,sCACjBF,MAAOqa,IAAYI,eAI3B,QACE,MAAO,CACL9Y,SAAU,KACVD,QAAS,CACP,CACEzB,MAAOC,oBAAU,6BAA8B,CAAEC,QAASrC,IAAqBgc,MAC/E9Z,MAAOlC,IAAqBgc,KAE9B,CACE7Z,MAAOC,oBAAU,6BAA8B,CAAEC,QAASrC,IAAqBsc,QAC/Epa,MAAOlC,IAAqBsc,WAOlCM,EAAiB,CACrBC,WAAYf,I,6PC1CD,EAAb,YAAE,qBAAF,iBAEI,SAAF,EAAY,GAAsB,kCAChC,cAAM,IAsBR,aAAe,SAAC,GACd,EAAK,MAAM,SAAS,EAAM,cAAc,MAAO,IAtB1C,EAAM,IAAO,EAAM,eAEtB,QAAQ,MAAM,kEAEhB,EAAK,MAAQ,CACX,YAAa,YAAiB,EAAW,YAAa,EAAM,YAP9B,EAFlC,uBAAE,IAAJ,SAAI,MA6BF,WACQ,MAAgG,KAAhG,MAAE,EAA+E,EAA/E,SAAU,EAAqE,EAArE,UAAW,EAA0D,EAA1D,MAAO,EAAmD,EAAnD,UAAW,EAAwC,EAAxC,WAAY,EAA4B,EAA5B,WAAY,EAAgB,EAAhB,OAAQ,EAAQ,EAAR,SAAa,EAAK,mBAA3F,4FAEA,EAAiB,WAAe,QAAQ,GAAU,MAAK,SAAC,GAAD,OAAiB,EAAO,MAAM,QAAU,KAC/F,EAAwB,GAAkB,EAAe,MAAM,cACrE,OACE,0CACM,EAAK,CACT,UAAW,cACT,IAAO,YACP,EACA,IAAc,IAAiB,SAAW,IAAO,UAAU,QAC3D,IAAc,IAAiB,SAAW,IAAO,UAAU,QAC3D,GAAyB,IAAO,UAAU,aAC3C,eACa,IAAc,IAAiB,OACzC,YAAa,EAAW,iBAAwB,IAAX,EAAuB,EAAS,KAAK,MAAM,YAAa,GAAS,CAC1G,SAAU,KAAK,aACf,SAAU,EACV,SAAU,EACV,MAAO,IAEN,OAnDT,GAAgC,aACvB,cAAc,aAYd,eAA8C,CACnD,UAAW,GACX,MAAO,GACP,UAAW,UACX,YAAY,EACZ,YAAY,EACZ,OAAQ,aACR,QAAS,aACT,SAAU,aACV,UAAU,GCzDP,ICOK,EDFGgB,EAL+B,CAC5C,KAAQ,wCACR,MAAS,OACT,IAAO,8C,SCIT,SAAY,GACRC,EAAqC,WAAI,aACzCA,EAAmC,SAAI,WACvCA,EAA+B,KAAI,OAHvC,CAAY,MAAwB,KAkCpC,IAAa,EAAb,YAAE,qBAAF,iBAYI,SAAF,EAAY,GAAoB,kCAC9B,cAAM,IAOA,aAAe,SAAC,GAEtB,IAAM,EAAQ,EAAM,cACpB,GAAI,EAAK,MAAM,YAAc,IAAW,CACtC,EAAM,MAAM,YAAY,EAAY,KAAM,WAC1C,IAAM,EAAW,OAAO,iBAAiB,GAEnC,EACJ,SAAS,EAAS,iBAAiB,qBACnC,SAAS,EAAS,iBAAiB,gBACnC,EAAM,aACN,SAAS,EAAS,iBAAiB,mBACnC,SAAS,EAAS,iBAAiB,wBACrC,EAAM,MAAM,YAAY,EAAY,KAApC,UAA6C,EAA7C,OAEE,EAAK,MAAM,UACb,EAAK,MAAM,SAAS,EAAM,MAAO,IAtB9B,EAAM,IAAO,EAAM,eAEtB,QAAQ,MAAM,0EAJc,EAZhC,uBAAE,IAAJ,SAAI,MAwCF,WACQ,MAgBF,KAhBE,MACJ,EAYQ,EAZR,UACA,EAWQ,EAXR,MACA,EAUQ,EAVR,UACA,EASQ,EATR,WACA,EAQQ,EARR,WACA,EAOQ,EAPR,WACA,EAMQ,EANR,kBACA,EAKQ,EALR,SACA,EAIQ,EAJR,SACA,EAGQ,EAHR,SAKG,GAFK,EADR,WACQ,EAAR,SAEQ,mBAfJ,wJAiBA,EAAW,gBAAY,YAAW,IACxC,OACE,0CACE,UAAW,cACT,IAAO,YACP,EACA,IAAsB,EAAyB,MAAQ,IAAO,UAAU,GACxE,IAAc,IAAiB,SAAW,IAAO,UAAU,QAC3D,IAAc,IAAiB,SAAW,IAAO,UAAU,SAE7D,SAAU,KAAK,cACyB,kBAA5B,KAAK,MAAM,cAA6B,CAAE,SAAQ,gBAChD,IAAc,IAAiB,MAC7C,SAAU,EACV,SAAU,GAAc,EACxB,SAAU,GAAc,EACxB,IAAK,GACD,QA3EZ,GAAkC,aACzB,cAAc,WACd,eAA8B,CACjC,SAAQ,cACR,UAAS,GACX,YAAY,EACZ,YAAY,EACZ,UAAW,UACX,kBAAmB,OACnB,aAAc,MAwEX,IAAM,EAAW,cAAiB,SAAC,EAAsB,GAAvB,OACvC,gBAAC,EAAY,iBAAK,EAAK,CAAE,SAAU,QAErC,EAAS,YAAc,W,aC/GV,EAAuD,SAAC,GAI/C,MAFZ,EADR,iBAGoB,MAHR,GAGQ,EAFpB,EAAQ,EAAR,SACG,EAAK,mBAH2D,0BAK7D,EAAY,CAAC,EAAY,EAAU,KAAW,KAAI,YAAI,OAAI,EAAK,eAC/D,EAAS,WAAe,QAAQ,GAAU,MAC9C,SAAC,GAAD,OAAiB,EAAU,SAAS,EAAM,KAAK,cAAgB,EAAM,MAAM,MAE7E,OACE,qCAAK,UAAW,cAAI,IAAO,WAAY,IAAgB,GACpD,EACG,WAAe,IAAI,GAAU,SAAC,GAAD,OAC3B,EAAU,SAAS,EAAM,KAAK,aAC1B,eAAmB,EAAO,CAAE,mBAAoB,EAAO,MAAM,KAC7D,KAEN,IAIV,EAAW,YAAc,a,6DCXnBC,EAA0B,SAAC,GAA0B,IAAxBpG,EAAuB,EAAvBA,EAAG1U,EAAoB,EAApBA,MAAO+a,EAAa,EAAbA,OACrCC,EAAeC,aACnB,uCAAGC,KAAgBC,2BAAnB,iBAAc,EAA2BJ,UAAzC,aAAc,EAAqCjd,IAAqBsd,gBACxEpb,GAUIqb,EAAW,SAAAC,GAAW,OAC1BC,IAAM7M,SAAS,CACb,CACE1L,KAAMwY,IAAW/d,MAAMge,+BACvBV,UAHW,aAMX/X,KAAMwY,IAAW/d,MAAMie,qCAAqC5d,IAAqBsd,cACjFL,UACCjd,IAAqBsd,cAA0B,OAAXE,QAAW,IAAXA,OAAA,EAAAA,EAAaK,SAAU,SA+B5DC,EAAYC,IAAUR,EAAU,KAqBtC,OACE,cAAC,EAAD,UACE,cAAC,YAAD,CACE7V,aAAYkP,EAAE,gCAAiC,CAAEvU,QAAS,gBAC1D2E,UAAU,gCACVgX,YAAY,SACZC,UAAW,IACX/M,QAjDU,WACO,KAAjBgM,GAAwBA,GAI5BO,IAAM7M,SAAS,CACb,CACE1L,KAAMwY,IAAW/d,MAAMge,+BACvBV,UAHW,aAMX/X,KAAMwY,IAAW/d,MAAMie,qCAAqC5d,IAAqBsd,cACjFL,UACCjd,IAAqBsd,aAAe,SAqCrCrM,QArBU,SAAAlN,GACd,OAAQA,EAAM0J,SACZ,KAAK,GACH8P,EAASxZ,EAAM7B,OACf,MACF,KAAK,GACH,MACF,QACE4b,EAAU/Z,EAAM7B,SAchBA,MAAOgb,EACP7V,YAAauP,EAAE,gCAAiC,CAAEvU,QAAS,qBAsBnE2a,EAAwB3U,aAAe,CACrCuO,EAAGxU,YACHF,MAAO,KACP+a,OAAQ,4B,sRC1HGiB,EAAeC,YATM,CAChCja,KAAM,eACN8L,OAAQ,IACRiG,MAAO,IACPmI,QAAS,kuBACTC,QAAS,EACTC,QAAS,I,+BCMLC,E,4MAkBJC,QAAU,SAAA5e,GAAO,IAAD,EACY,EAAKqE,MAAvByT,EADM,EACNA,MAAOuF,EADD,EACCA,OACTjL,EAAgB0F,EAAMG,OAAOjY,GAEnC6d,IAAM7M,SAAS,CACb1L,KAAMwY,IAAWe,MAAMC,iBACvBC,OAAO,yBACD1B,EADA,YACUrd,GAAOoS,M,uDAxB3B,WAAqB,IAAD,EACuBnM,KAAK5B,MAAtCyT,EADU,EACVA,MAAOlC,EADG,EACHA,MAAOmJ,EADJ,EACIA,OAAQ1B,EADZ,EACYA,OAC9BzH,EAAMhD,SAASxQ,SAAQ,YAAa,IAAVpC,EAAS,EAATA,IACD+e,EAAO,GAAD,OAAI1B,EAAJ,YAAcrd,KAAS8X,EAAMI,UAAUlY,KAGlE8X,EAAMC,KAAK/X,Q,8BAmCjB,YAA6F,IAAD,OAAzEgf,EAAyE,EAAzEA,QAASxJ,EAAgE,EAAhEA,MAAOlO,EAAyD,EAAzDA,WAAYiR,EAA6C,EAA7CA,YAAa0G,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,eAAkB,EACxDjZ,KAAK5B,MAA/ByT,EADkF,EAClFA,MAAOiH,EAD2E,EAC3EA,OAAQ1B,EADmE,EACnEA,OACjB8B,EAAiBJ,EAAO,GAAD,OAAI1B,EAAJ,YAAc2B,KAAclH,EAAMI,UAAU8G,GAEnEI,EACJ,cAACC,EAAA,EAAD,CACET,QAAS,kBAAM,EAAKA,QAAQI,IAC5BM,WAAY,kBAAM,EAAKV,QAAQI,IAC/B5X,UAAU,sBACVmY,SAAU,EAEVhb,QAAQ,OACRib,UAAU,IACVlY,WAAYA,EACZmY,MACInY,GAAc6X,IAAmB,cAACb,EAAD,KAClC/F,GACC,oBACEkC,eAAA,EACArT,UAAU,wBACV6C,MAAO,CACLyV,WAAapY,GAA4B6X,EAAd,SAA6C,UACxEQ,eAAgBnK,MAIpB,qBACEiF,eAAA,EACArT,UAAU,cACV6C,MAAO,CACLyV,WAAapY,GAA4B6X,EAAd,SAA6C,UACxEzE,gBAAiBlF,KA1B3B,SAgCGyJ,GAhCH,2BAK2BD,IA4C7B,OAAIE,EAEA,cAACU,EAAA,EAAD,CAEErE,QAAS,4BAAI2D,IACbxX,SAAUmY,IAAgBjG,IAC1BkG,YAAY,EACZC,SAAU,EACVC,WAAY,IACZC,UAAW,EAPb,SASGb,GATH,4BAC4BJ,IAazBI,I,oBAQT,WAAU,IAAD,SAC4BnZ,KAAK5B,MAAhCuR,EADD,EACCA,MAAOkE,EADR,EACQA,aAAc9C,EADtB,EACsBA,EAE7B,OACE,cAAC,IAAM7I,SAAP,UACGyH,EAAMhD,SAASpR,KAAI,YAA6C,IAA1CxB,EAAyC,EAAzCA,GAAIuY,EAAqC,EAArCA,YAAa9C,EAAwB,EAAxBA,OAAwB,IAAhBlS,KACxC+D,SADwD,MAAT,GAAS,GAEtDP,MAAK,gBAAGgO,EAAH,EAAGA,EAAGqF,EAAN,EAAMA,QAAN,OAAqBrF,GAAK,IAAiB,IAAZqF,GAAsBrF,GAAK,IAAqB,IAAhBwD,OAA0B,EAEhG0G,EACH1G,GACCvB,EAAE,CAAC,mBAAD,OAAoBhX,EAApB,2CAAkE,CAClEqa,QAASP,EACTrX,QAASqX,KAEb9C,EAAE,CAAC,mBAAD,OAAoBhX,EAApB,oCAA2D,CAC3Dqa,QAASP,EACTrX,QAASqX,IAGPoF,EACH3G,GACCvB,EAAE,CAAC,mBAAD,OAAoBhX,EAApB,2DAAkF,CAClFqa,QAASP,EACTrX,QAASqX,KAEb9C,EAAE,mBAAD,OAAoBhX,EAApB,iBAAuC,CAAEqa,QAASP,EAAcrX,QAASqX,IAE5E,OAAO,EAAKoG,iBAAiB,CAC3BlB,QAAShf,EACTwV,MAAOC,EACPwJ,eACA3X,aACAiR,cACA2G,4B,GA1JuBlc,IAAMwF,WAkMzCmW,EAAqBlW,aAAe,CAClCqP,MAAO,CACLC,KAAMlS,IAAQC,KACdmS,OAAQpS,IAAQC,KAChBoS,UAAWrS,IAAQC,MAErB8P,MAAO,CACLhD,SAAU,IAEZmM,OAAQ,GACRjF,aAAc,GACd9C,EAAGxU,YACH6a,OAAQ,mBAGV,IAEM8C,EAAgCpP,aAFd,SAAC,GAAD,MAAgB,CAAEgO,OAAlB,EAAGF,MAA6BE,UAElBhO,CAAyB4N,I,oZC3MzDyB,E,4MAkBJC,kBAAoB,WAAO,IAAD,EAC0C,EAAKhc,MAA/Dic,EADgB,EAChBA,wBAAyBhZ,EADT,EACSA,WAAYiZ,EADrB,EACqBA,UAAWxgB,EADhC,EACgCA,MAClDygB,EAAmB,EAAKC,sBACaC,EAAwD3gB,EAA1FK,IAAqBugB,YAAyDC,EAAY7gB,EAA5CK,IAAqBygB,WAEvEvZ,GAAckZ,GAAoBE,GAAaE,GAAWL,GAC7DD,EAAwBC,EAAWxgB,I,uDAvBvC,WACEkG,KAAKoa,sB,gCAGP,SAAmBla,GAAY,IAAD,EACCF,KAAK5B,MAA1Bkc,EADoB,EACpBA,UAAWxgB,EADS,EACTA,MAEfwgB,IAAcpa,EAAUoa,WAAcla,IAAStG,EAAOoG,EAAUpG,QAClEkG,KAAKoa,sB,iCAmBT,WAAuB,IACbtgB,EAAUkG,KAAK5B,MAAftE,MACR,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAQK,IAAqB0gB,e,yBAatC,WAAe,IAAD,EACwD7a,KAAK5B,MAAjE0c,EADI,EACJA,gBAAiBC,EADb,EACaA,UAAWlH,EADxB,EACwBA,aAAc/Z,EADtC,EACsCA,MAAOsd,EAD7C,EAC6CA,OACnDmD,EAAmBva,KAAKwa,sBAUxBQ,EAAiB,CACrBnN,sBAAsB,EACtBnB,oBAAqBzF,mBAAiB5C,4BAA4BkW,GAClE5U,gBAXsB,SAAC,GAAD,IAAGiI,EAAH,EAAGA,KAAMF,EAAT,EAASA,aAAc9H,EAAvB,EAAuBA,KAAvB,OACtBqB,mBAAiBtB,gBAAgB,CAC/BC,OACAf,KAAM+I,EAAK/I,KACXgB,aAAc6H,EAAa7I,KAC3BP,YAAaiW,KAOf9T,gBAAiBQ,mBAAiBR,iBAqCpC,OACE,cAAC,YAAD,2BAEMuU,GAFN,IAGErO,SAtCsB,SAAArP,GACxB,IAAM2d,EAAW,SAAA7e,GACf,IAAM8e,EAAe,CACnB5d,KAAMA,EAAKlB,GACXrC,GAAIqC,EACJsW,QAAS,CACPc,SAAU,IACV2H,OAAQ,CAAE3H,SAAU,MAEtBhB,YAAa,EACb5D,WAAY,aAAamF,KAAK3X,GAC9BkW,YAAa,aAAayB,KAAK3X,IAajC,MAVI,aAAa2X,KAAK3X,KACpB8e,EAAaxI,QAAU,CACrBc,SAAU,IACV2H,OAAQ,CAAE3H,SAAU,MAEtB0H,EAAa1L,OAAS4L,IAAoB/e,MAC1C6e,EAAazI,gBAAkB,MAC/ByI,EAAa1I,YAAc,GAGtB0I,GAGT,OAAIJ,EAAgBre,OACXqe,EAAgBvf,KAAI,SAAAc,GAAK,OAAIZ,OAAOC,OAAOuf,EAAS5e,EAAMtC,IAAKsC,MAGjEZ,OAAO6E,KAAKhD,GAAM/B,KAAI,SAAAa,GAAG,OAAI6e,EAAS7e,MAOjCif,CAAkBN,GAC5BpJ,YAAa,gBAAGE,EAAH,EAAGA,MAAOlC,EAAV,EAAUA,MAAV,OACX,cAAC,UAAD,CAAsBkC,MAAOA,EAAOlC,MAAOA,EAAOkE,aAAcA,EAAcuD,OAAQA,KAExFhI,aAAc,gBAAGO,EAAH,EAAGA,MAAH,OACZ,cAAC,UAAD,CAAuBA,MAAOA,EAAOrL,YAAaiW,EAAkB1G,aAAcA,OARtF,gBACgBzR,KAAKC,UAAUvI,O,oBAuBnC,WAAU,IAAD,EAC0EkG,KAAK5B,MAA9Ekd,EADD,EACCA,UAAWnX,EADZ,EACYA,SAAUmG,EADtB,EACsBA,MAAOyQ,EAD7B,EAC6BA,UAAW1Z,EADxC,EACwCA,WAAY2H,EADpD,EACoDA,QAASuS,EAD7D,EAC6DA,SAEpE,GAAIla,EACF,OAAO,KAGT,IAAIma,EAAgB,KAOpB,MAJuC,oBAAnC,OAAOD,QAAP,IAAOA,OAAP,EAAOA,EAAUC,iBACnBA,EAAgBD,EAASC,cAAT,eAA4BT,KAI5C,eAAC,IAAD,CAAM5Z,UAAU,wBAAhB,UACE,cAAC,YAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOsa,aAAa,KAAKC,KAAK,KAA9B,SACGJ,MAGL,eAAC,IAAD,CAAana,UAAYmJ,EAAS,OAAW,GAA7C,UACE,cAAC,IAAMpC,SAAP,UAAqCsT,GAAjB,iBACnBrX,SATQ,mBAaf,cAAC,YAAD,UACE,cAAC,IAAD,UACE,sBAAKhD,WAAYmJ,EAAS,OAAYtB,GAAW,WAAa,GAA9D,UACGA,GAAW,cAAC,SAAD,CAAQ1K,QAAQ,WAC1B0K,GAAWhJ,KAAKyT,oBAJT,wB,GAtJC1W,IAAMwF,WA8M9B4X,EAAU3X,aAAe,CACvB8Y,UAAW,KACXnX,SAAU,KACVmG,OAAO,EACPwQ,gBAAiB,GACjBT,wBAAyBza,IAAQC,KACjCkb,UAAW,GACX1Z,WAAYzB,IAAQ+b,kBACpB3S,SAAS,EACT6K,aAAc,GACd0H,SAAU,GACVxK,EAAGxU,YACH6a,OAAQ,aASV,IASM3M,EAAsBC,IAAekR,UAAUC,gBAE/CC,EAAqBhR,YAAQL,GAXR,SAAAM,GAAQ,MAAK,CACtCsP,wBAAyB,SAACtgB,EAAID,GAAL,OAAeiR,EAASC,IAAaC,KAAKoP,wBAAwBtgB,EAAID,QAUtEgR,CAAiDqP,I,keCpOtE4B,E,4MAsBJC,aAAe,SAAC1e,EAAD,GAA8B,IAGvC2e,EAHkB7a,EAAoB,EAApBA,UAAWrH,EAAS,EAATA,GACzBugB,EAAc,EAAKlc,MAAnBkc,UACF4B,EAAoBzgB,OAAOuF,OAAOmb,KAAYrb,MAAK,SAAAzE,GAAK,OAAIhC,IAAWgC,KAAWtC,KAGxF,GAAKmiB,EAAL,CAOA,OAAQ9a,GACN,KAAK1G,IAAgBC,KACnBshB,EAAmBzhB,IAAqBC,WACxC,MACF,QACEwhB,EAAmBzhB,IAAqB4hB,UAI5CxE,IAAM7M,SAAS,CAAC,aAEZ1L,KAAMwY,IAAW/d,MAAMie,qCAAqC5d,IAAqBI,WACjF6c,OAAQkD,GACPngB,IAAqBI,UAAY0hB,GAJvB,aAOX5c,KAAMwY,IAAW/d,MAAMie,qCAAqC5d,IAAqBC,MACjFgd,OAAQkD,GACPngB,IAAqBC,KAAO8hB,UAxB3Btc,IAAQyc,UAAYzc,IAAQ0c,cAC9BC,QAAQC,KAAR,wEAA8EziB,EAA9E,kB,EAoCNsN,OAAS,YAA0B,IAAvBhO,EAAsB,EAAtBA,OAAQF,EAAc,EAAdA,QACVmhB,EAAc,EAAKlc,MAAnBkc,UAER1C,IAAM7M,SAAS,CAAC,aAEZ1L,KAAMwY,IAAW/d,MAAMie,qCAAqC5d,IAAqBuO,QACjF0O,OAAQkD,GACPngB,IAAqBuO,OAASrP,GAJpB,aAOXgG,KAAMwY,IAAW/d,MAAMie,qCAAqC5d,IAAqBsO,OACjF2O,OAAQkD,GACPngB,IAAqBsO,MAAQtP,M,EAUpCsjB,sBAAwB,WAAO,IAAD,EACgC,EAAKre,MAAzDse,EADoB,EACpBA,kBAAmBrb,EADC,EACDA,WAAYiZ,EADX,EACWA,UAAWxgB,EADtB,EACsBA,OAE7CuH,GAAciZ,GACjBoC,EAAkBpC,EAAWxgB,I,uDA1FjC,WACEkG,KAAKyc,0B,gCAGP,SAAmBvc,GAAY,IAAD,EACCF,KAAK5B,MAA1Bkc,EADoB,EACpBA,UAAWxgB,EADS,EACTA,MAEfwgB,IAAcpa,EAAUoa,WAAcla,IAAStG,EAAOoG,EAAUpG,QAClEkG,KAAKyc,0B,yBA2FT,WAAe,IAAD,SAC0Ezc,KAAK5B,MAAnFoL,EADI,EACJA,iBAAkBmT,EADd,EACcA,oBAAqB1T,EADnC,EACmCA,SAAUnP,EAD7C,EAC6CA,MAAOgC,EADpD,EACoDA,QAASyf,EAD7D,EAC6DA,SACrExf,EAAuB,GAErBkO,EAAchB,EAAS1N,KAAI,YAAsB,IAAhBM,EAAe,sBACnB0B,uBAAqB3B,sBAAsB,CAC1EN,QAASiC,uBAAqBlC,sBAAsB,CAClDC,QAASqhB,EACT9iB,OAAQ,EAAKmiB,aACbliB,UAEF+B,WACAC,YAPMsB,EAD4C,EAC5CA,cAAeC,EAD6B,EAC7BA,MAUvBtB,EAAuBqB,EAEvB,IAAMwf,EAAQ,OAAG/gB,QAAH,IAAGA,OAAH,EAAGA,EAAUghB,sBACvBC,GAAoB,OAARjhB,QAAQ,IAARA,OAAA,EAAAA,EAAUkN,gBAAiB,GAAK6T,EAOhD,MAJmC,oBAA/B,OAAOrB,QAAP,IAAOA,OAAP,EAAOA,EAAUuB,aACnBA,EAAYvB,EAASuB,UAAT,eAAwBjhB,GAAxB,eAAyCC,KAGhD,CACLuB,QACA0f,gBACGD,GACC,cAAC,UAAD,CAEEtT,iBAAkBA,EAClBT,eAAc,OAAElN,QAAF,IAAEA,OAAF,EAAEA,EAAUkN,eAC1BhP,GAAI6iB,EACJ9iB,MAAOA,GAJF8iB,SAOTtJ,MAIN,OACE,cAAC,UAAD,CACE3J,SAAO,EACPrL,QAASyL,IAAaC,QACtB7I,UAAU,2BACV/D,cAAerB,EACfsO,KAAMJ,M,oBAUZ,WAAU,IAAD,EAaHjK,KAAK5B,MAXPkM,EAFK,EAELA,MACAqS,EAHK,EAGLA,oBACAK,EAJK,EAILA,UACA3b,EALK,EAKLA,WACA9H,EANK,EAMLA,UACA0P,EAPK,EAOLA,SACAD,EARK,EAQLA,QACAuB,EATK,EASLA,eACAzQ,EAVK,EAULA,MACAiX,EAXK,EAWLA,EACAqG,EAZK,EAYLA,OAGF,GAAI/V,EACF,OACE,cAAC,IAAD,CAAMF,UAAU,qCAAhB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UAAW4P,EAAE,0BAA2B,CAAEvU,QAAS,mBAM3D,IAAMygB,EAAiBnjB,EAAMK,IAAqBsO,QAAU8B,EACtD2S,EAAgBpjB,EAAMK,IAAqBuO,QAC3CpP,EAAaI,oBAAkBJ,WAAW4jB,EAAeD,EAAgB1jB,GAGzE4jB,GACW,IAAdH,GAAsBzjB,EAAY0jB,GAAlC,wBAAqEA,EAArE,aACc,IAAdD,GAAsB1jB,GAAtB,wBAAqD2jB,EAArD,aACU,IAAV3S,GAAA,wBAAmC2S,EAAnC,YAFD,wBAGiBA,GAEnB,OACE,eAAC,IAAD,CAAM9b,UAAU,2BAAhB,UACE,cAAC,YAAD,CAAiCsC,iBAAe,EAAhD,SACE,eAAC,IAAD,CAAYtC,UAAYmJ,EAAS,SAAa,GAAIkK,cAAalK,IAAS,EAAxE,UACE,cAAC,IAAD,UACE,cAAC,0BAAD,CAAyB8M,OAAQA,MAEnC,cAAC,IAAD,CAAajW,UAAa5H,EAA+B,GAAlB,cAAsBib,eAAcjb,IAAa,EAAxF,SACE,cAAC,UAAD,CACE6N,WAAS,EACT/F,WAAY2H,GAAWsB,EACvB/Q,UAAWA,EACXF,OAAQ6jB,EACR7V,OAAQrH,KAAKqH,OACbC,UAAWtH,KAAKqH,OAChBlO,QAAS8jB,UAbF,mBAkBf,cAAC,YAAD,CAA4CxZ,iBAAe,EAA3D,SACE,cAAC,IAAD,UACE,sBAAKtC,WAAYmJ,EAAS,OAAYtB,GAAW,WAAa,GAA9D,UACGA,GACC,cAAC,SAAD,CACE1K,QAAQ,QACRoL,WAAY,CACVvI,UAAW,2BACXyI,UAA6B,OAAnB+S,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBlgB,UAAmB,OAARwM,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAAMxN,OAAO6E,KAAK2I,EAAS,IAAIxM,QAAW,EAC/FoN,UACsB,OAAnB8S,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBlgB,SAAUkgB,EAAoBphB,KAAI,qBAAGsB,cAA+B,GAC5FiN,UAAkB,OAARb,QAAQ,IAARA,OAAA,EAAAA,EAAUxM,SAAUwgB,EAC9B3e,QAASyL,IAAaC,YAI1BhB,GAAWhJ,KAAKwK,oBAhBR2S,GAoBhB,cAAC,YAAD,CAAiC1Z,iBAAe,EAAhD,SACE,cAAC,IAAD,CACEtC,WAAYmJ,EAAS,UAAe/Q,GAAa,gBAAkB,GACnEib,cAAalK,IAAU/Q,IAAa,EAFtC,SAIE,cAAC,IAAD,CAAc6jB,UAAQ,EAAtB,SACE,cAAC,UAAD,CACEjW,cAAc,KACd9F,WAAY2H,GAAWsB,EACvB/Q,UAAWA,EACXF,OAAQ6jB,EACR7V,OAAQrH,KAAKqH,OACbC,UAAWtH,KAAKqH,OAChBlO,QAAS8jB,SAbF,0B,GAzOKlgB,IAAMwF,WAsTlCwZ,EAAcvZ,aAAe,CAC3B8H,OAAO,EACP0S,WAAW,EACXxT,iBAAkB,GAClBmT,oBAAqB,GACrBD,kBAAmB9c,IAAQC,KAC3BwB,WAAYzB,IAAQyd,wBACpB9jB,UAAW,EACX0P,SAAU,GACVD,SAAS,EACTuB,eAAgB,GAChBzO,QAAS,GACTyf,SAAU,GACVxK,EAAGxU,YACH6a,OAAQ,iBASV,IASM3M,EAAsBC,IAAe4S,cAAcC,oBAEnDC,EAAyB1S,YAAQL,GAXZ,SAAAM,GAAQ,MAAK,CACtC2R,kBAAmB,SAAC3iB,EAAID,GAAL,OAAeiR,EAASC,IAAaC,KAAKyR,kBAAkB3iB,EAAID,QAUtDgR,CAAiDiR,I,kdC1V1E0B,E,4MAsBJzB,aAAe,SAAC1e,EAAD,GAA8B,IAGvC2e,EAHkB7a,EAAoB,EAApBA,UAAWrH,EAAS,EAATA,GACzBugB,EAAc,EAAKlc,MAAnBkc,UACF4B,EAAoBzgB,OAAOuF,OAAOmb,KAAYrb,MAAK,SAAAzE,GAAK,OAAIhC,IAAWgC,KAAWtC,KAGxF,GAAKmiB,EAAL,CAOA,OAAQ9a,GACN,KAAK1G,IAAgBC,KACnBshB,EAAmBzhB,IAAqBC,WACxC,MACF,QACEwhB,EAAmBzhB,IAAqB4hB,UAI5CxE,IAAM7M,SAAS,CAAC,aAEZ1L,KAAMwY,IAAW/d,MAAM4jB,6CAA6CvjB,IAAqBI,WACzF6c,OAAQkD,GACPngB,IAAqBI,UAAY0hB,GAJvB,aAOX5c,KAAMwY,IAAW/d,MAAM4jB,6CAA6CvjB,IAAqBC,MACzFgd,OAAQkD,GACPngB,IAAqBC,KAAO8hB,UAxB3Btc,IAAQyc,UAAYzc,IAAQ0c,cAC9BC,QAAQC,KAAR,wEAA8EziB,EAA9E,kB,EAoCNsN,OAAS,YAA0B,IAAvBhO,EAAsB,EAAtBA,OAAQF,EAAc,EAAdA,QACVmhB,EAAc,EAAKlc,MAAnBkc,UAER1C,IAAM7M,SAAS,CAAC,aAEZ1L,KAAMwY,IAAW/d,MAAM4jB,6CAA6CvjB,IAAqBuO,QACzF0O,OAAQkD,GACPngB,IAAqBuO,OAASrP,GAJpB,aAOXgG,KAAMwY,IAAW/d,MAAM4jB,6CAA6CvjB,IAAqBsO,OACzF2O,OAAQkD,GACPngB,IAAqBsO,MAAQtP,M,EAUpCsjB,sBAAwB,WAAO,IAAD,EACwC,EAAKre,MAAjEuf,EADoB,EACpBA,0BAA2Btc,EADP,EACOA,WAAYiZ,EADnB,EACmBA,UAAWxgB,EAD9B,EAC8BA,OAErDuH,GAAciZ,GACjBqD,EAA0BrD,EAAWxgB,I,uDA1FzC,WACEkG,KAAKyc,0B,gCAGP,SAAmBvc,GAAY,IAAD,EACCF,KAAK5B,MAA1Bkc,EADoB,EACpBA,UAAWxgB,EADS,EACTA,MAEfwgB,IAAcpa,EAAUoa,WAAcla,IAAStG,EAAOoG,EAAUpG,QAClEkG,KAAKyc,0B,yBA2FT,WAAe,IAAD,SAC8Czc,KAAK5B,MAAvDue,EADI,EACJA,oBAAqB1T,EADjB,EACiBA,SAAUnP,EAD3B,EAC2BA,MAAOgC,EADlC,EACkCA,QAC1CC,EAAuB,GAErBkO,EAAchB,EAAS1N,KAAI,YAAsB,IAAhBM,EAAe,sBACnB0B,uBAAqB3B,sBAAsB,CAC1EN,QAASiC,uBAAqBlC,sBAAsB,CAClDC,QAASqhB,EACT9iB,OAAQ,EAAKmiB,aACbliB,UAEF+B,WACAC,YAPMsB,EAD4C,EAC5CA,cAAeC,EAD6B,EAC7BA,MAYvB,OAFAtB,EAAuBqB,EAEhB,CACLC,YAIJ,OACE,cAAC,UAAD,CACEsM,SAAO,EACPrL,QAASyL,IAAaC,QACtB7I,UAAU,2BACV/D,cAAerB,EACfsO,KAAMJ,M,oBAUZ,WAAU,IAAD,EAYHjK,KAAK5B,MAVPkM,EAFK,EAELA,MACAqS,EAHK,EAGLA,oBACAK,EAJK,EAILA,UACA3b,EALK,EAKLA,WACA9H,EANK,EAMLA,UACA0P,EAPK,EAOLA,SACAD,EARK,EAQLA,QACAuB,EATK,EASLA,eACAzQ,EAVK,EAULA,MACAiX,EAXK,EAWLA,EAGF,GAAI1P,EACF,OACE,cAAC,IAAD,CAAMF,UAAU,qCAAhB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UAAW4P,EAAE,0BAA2B,CAAEvU,QAAS,mBAM3D,IAAMygB,EAAiBnjB,EAAMK,IAAqBsO,QAAU8B,EACtD2S,EAAgBpjB,EAAMK,IAAqBuO,QAC3CpP,EAAaI,oBAAkBJ,WAAW4jB,EAAeD,EAAgB1jB,GAGzE4jB,GACW,IAAdH,GAAsBzjB,EAAY0jB,GAAlC,wBAAqEA,EAArE,aACc,IAAdD,GAAsB1jB,GAAtB,wBAAqD2jB,EAArD,aACU,IAAV3S,GAAA,wBAAmC2S,EAAnC,YAFD,wBAGiBA,GAEnB,OACE,eAAC,IAAD,CAAM9b,UAAU,2BAAhB,UACE,cAAC,YAAD,CAAiCsC,iBAAe,EAAhD,SACE,cAAC,IAAD,CAAYtC,UAAYmJ,EAAS,SAAa,GAAIkK,cAAalK,IAAS,EAAxE,SACE,cAAC,IAAD,CAAanJ,UAAa5H,EAA+B,GAAlB,cAAsBib,eAAcjb,IAAa,EAAxF,SACE,cAAC,UAAD,CACE6N,WAAS,EACT/F,WAAY2H,GAAWsB,EACvB/Q,UAAWA,EACXF,OAAQ6jB,EACR7V,OAAQrH,KAAKqH,OACbC,UAAWtH,KAAKqH,OAChBlO,QAAS8jB,SAVF,mBAef,cAAC,YAAD,CAA4CxZ,iBAAe,EAA3D,SACE,cAAC,IAAD,UACE,sBAAKtC,WAAYmJ,EAAS,OAAYtB,GAAW,WAAa,GAA9D,UACGA,GACC,cAAC,SAAD,CACE1K,QAAQ,QACRoL,WAAY,CACVvI,UAAW,2BACXyI,UAA6B,OAAnB+S,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBlgB,UAAmB,OAARwM,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAAMxN,OAAO6E,KAAK2I,EAAS,IAAIxM,QAAW,EAC/FoN,UACsB,OAAnB8S,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBlgB,SAAUkgB,EAAoBphB,KAAI,qBAAGsB,cAA+B,GAC5FiN,UAAkB,OAARb,QAAQ,IAARA,OAAA,EAAAA,EAAUxM,SAAUwgB,EAC9B3e,QAASyL,IAAaC,YAI1BhB,GAAWhJ,KAAKwK,oBAhBR2S,GAoBhB,cAAC,YAAD,CAAiC1Z,iBAAe,EAAhD,SACE,cAAC,IAAD,CACEtC,WAAYmJ,EAAS,UAAe/Q,GAAa,gBAAkB,GACnEib,cAAalK,IAAU/Q,IAAa,EAFtC,SAIE,cAAC,IAAD,CAAc6jB,UAAQ,EAAtB,SACE,cAAC,UAAD,CACEjW,cAAc,KACd9F,WAAY2H,GAAWsB,EACvB/Q,UAAWA,EACXF,OAAQ6jB,EACR7V,OAAQrH,KAAKqH,OACbC,UAAWtH,KAAKqH,OAChBlO,QAAS8jB,SAbF,0B,GAlNclgB,IAAMwF,WAyR3Ckb,EAAuBjb,aAAe,CACpC8H,OAAO,EACP0S,WAAW,EACXL,oBAAqB,GACrBgB,0BAA2B/d,IAAQC,KACnCwB,WAAYzB,IAAQge,gCACpBrkB,UAAW,EACX0P,SAAU,GACVD,SAAS,EACTuB,eAAgB,GAChBzO,QAAS,GACTiV,EAAGxU,aASL,IASMkO,EAAsBC,IAAemT,kBAAkBC,wBAEvDC,EAAkCjT,YAAQL,GAXrB,SAAAM,GAAQ,MAAK,CACtC4S,0BAA2B,SAAC5jB,EAAID,GAAL,OAAeiR,EAASC,IAAaC,KAAK0S,0BAA0B5jB,EAAID,QAU7DgR,CAAiD2S,I,wWCvUnFO,E,4MAQJnJ,MAAQ,YAAgB,IAAbhW,EAAY,EAAZA,MACDyb,EAAc,EAAKlc,MAAnBkc,UAER1C,IAAM7M,SAAS,CACb1L,KAAMwY,IAAWoG,UAAUC,kBAC3BnJ,KAAK,eACFuF,EAAYzb,M,4CAWnB,WAAU,IAAD,EAC0DmB,KAAK5B,MAA9DgX,EADD,EACCA,UAAWjR,EADZ,EACYA,SAAUkR,EADtB,EACsBA,iBAAkBhU,EADxC,EACwCA,WAAY0P,EADpD,EACoDA,EAE3D,GAAI1P,EACF,OAAO,KAGT,IAAM8c,EAAkBphB,IAAMqhB,SAASC,QAAQla,GAAU5I,KAAI,oBAAG6C,aAAH,MAAW,GAAX,QAAqB,CAChF6J,OAAQ7J,EAAM6J,SAAU,EACxBqN,QAASlX,EAAM+F,SACf7H,MAAO8B,EAAM9B,UAGf,OACE,eAAC,IAAM4L,SAAP,WACE,cAAC,IAAD,CAAOuT,aAAa,KAAKta,UAAU,UAAnC,SACG4P,EAAE,iCAAkC,CAAEuN,MAAOH,EAAgB1hB,WAEhE,cAAC,OAAD,CAAM2Y,UAAWA,EAAWC,iBAAkBA,EAAkBR,MAAO7U,KAAK6U,MAAOE,KAAMoJ,W,GA3CrEphB,IAAMwF,WAqElCyb,EAAcxb,aAAe,CAC3B4S,UAAW,EACXC,iBAAkB,EAClBhU,WAAYzB,IAAQ2e,kBACpBxN,EAAGxU,aAQL,IAEMiiB,EAAyB1T,aAFP,SAAC,EAAD,SAAGmT,EAAH,EAAGA,UAAe3D,EAAlB,EAAkBA,UAAlB,MAAmC,CAAElF,UAAS,UAAE6I,EAAUlJ,YAAZ,aAAE,EAAiBuF,MAE1DxP,CAAyBkT,I,oQCrFlDS,EAAsBhjB,OAAOuF,OAAO0d,KAAanjB,KAAI,SAAA8D,GAAI,MAAK,CAClE/C,MAAOC,oBAAU,gCAAiC,CAAEC,QAAS6C,IAC7DhD,MAAOgD,EACPrB,UAAU,MAcN2gB,EAA0B,SAAC,GAAmC,IAAjC5gB,EAAgC,EAAhCA,QAASgT,EAAuB,EAAvBA,EAAG1U,EAAoB,EAApBA,MAAO+a,EAAa,EAAbA,OAC9CjM,EAAemM,aACnB,uCAAGC,KAAgBqH,uBAAnB,iBAAc,EAAuBxH,UAArC,aAAc,EAAiCjd,IAAqB0gB,eACpExe,GAGIkC,EAAiBR,EAAQxC,KAAI,SAAAmD,GAAM,kCAAUA,GAAV,IAAkBV,SAAUU,EAAOrC,QAAU8O,OAkCtF,OACE,cAAC,SAAD,CACEtJ,aAAYkP,EAAE,gCAAiC,CAAEvU,QAAS,gBAC1DyB,SA5Ba,SAAAC,GAAU,IAAD,EACOgH,IAAY2Z,kBAAkB3gB,EAAM7B,OAA3Doe,EADgB,EAChBA,UAAWE,EADK,EACLA,QACnB/C,IAAM7M,SAAS,CACb,CACE1L,KAAMwY,IAAW/d,MAAMge,+BACvBV,UAHW,aAMX/X,KAAMwY,IAAW/d,MAAMglB,qBAAqB3kB,IAAqB0gB,aACjEzD,UACCjd,IAAqB0gB,YAAc3c,EAAM7B,OAR/B,aAWXgD,KAAMwY,IAAW/d,MAAMglB,qBAAqB3kB,IAAqBugB,YACjEtD,UACCjd,IAAqBugB,WAAaD,EAAUsE,eAblC,aAgBX1f,KAAMwY,IAAW/d,MAAMglB,qBAAqB3kB,IAAqBygB,UACjExD,UACCjd,IAAqBygB,SAAWD,EAAQoE,kBAS3ChhB,QAASQ,EACT4B,gBAAiBgL,EACjB3J,YAAauP,EAAE,gCAAiC,CAAEvU,QAAS,mBA4BjEmiB,EAAwBnc,aAAe,CACrCzE,QAAS0gB,EACT1N,EAAGxU,YACHF,MAAOqiB,IAAYla,MACnB4S,OAAQ,4B,8RCpEG,EAAb,wBAAA4H,EAAA,qBAAAA,GAQE,WAAY,GAAyB,kCACnC,cAAM,IACD,MAAQ,CACX,WAAW,GAHsB,EARvC,mBAAAA,EAAA,gCAeE,WAAiB,MACiB,KAAK,MAA7B,EADO,EACP,aAAc,EADP,EACO,MACtB,KAAK,QAAQ,oBAA4C,kBAAjB,EAA4B,EAAe,EAAa,KAAM,EAAM,QAC5G,KAAK,SAAS,CAAE,WAAW,MAlB/B,gCAqBE,WAAkB,MACgB,KAAK,MAA7B,EADQ,EACR,aAAc,EADN,EACM,MACtB,KAAK,QAAQ,oBAA4C,kBAAjB,EAA4B,EAAe,EAAa,KAAM,EAAM,UAvBhH,oBA0BE,WACQ,MAA4F,KAA5F,MAAE,EAA2E,EAA3E,SAAU,EAAiE,EAAjE,MAAO,EAA0D,EAA1D,gBAAiB,EAAyC,EAAzC,WAAY,EAA6B,EAA7B,aAAc,EAAe,EAAf,gBAAoB,EAAK,mBAAvF,sFADF,EAEwC,KAAK,QAAzC,EAFJ,EAEI,WAAY,EAFhB,EAEgB,oBACd,EACoB,kBAAjB,GAA6B,EAAa,eAAe,OAC5D,EAAa,IACb,EAAa,WAEb,EAAY,EAAM,OACtB,gBAAC,IAAW,CAAC,QAAQ,cACnB,gBAAC,IAAS,CACR,IAAK,EACL,aAAsC,kBAAjB,EAA4B,EAAe,EAAa,KAC7E,gBAAgC,IAApB,EACZ,QAAS,kBAAM,EAAgB,KAE9B,EAAM,KAAI,YAAI,MACG,kBAAT,EACL,gBAAC,IAAI,CAAC,IAAK,EAAM,QAAS,kBAAM,EAAW,EAAa,KACrD,GAGH,gBAAC,IAAI,CAAC,IAAK,EAAK,IAAK,QAAS,kBAAM,EAAW,EAAa,KACzD,EAAK,WAMd,KAEJ,OAAK,GAAc,KAAK,MAAM,UAE1B,gBAAC,WAAc,KACZ,GAAmB,gBAAC,IAAW,iBAAK,GAAQ,GAC5C,eAAsB,EAAW,EAAoB,QAAQ,oBAMlE,gBAAC,IAAsB,SAAQ,MAC5B,gBAAG,EAAH,EAAG,iBAAH,OACC,gBAAC,WAAc,KACZ,GAAmB,gBAAC,IAAW,iBAAK,GAAQ,GAC5C,EAAiB,SAAW,eAAsB,EAAW,EAAiB,iBAvE3FA,EAAA,CAAmC,aAC1B,cAAc,gBACd,cAAmB,IACnB,eAAiD,CACtD,MAAO,GACP,iBAAiB,G,+DCjBR,EAAb,YAAE,qBAAF,iBAAE,SAAF,IAAI,2BAAJ,wBAAE,uBAAE,IAAJ,SAAI,MAQF,WACQ,MAUF,KAVE,MACJ,EAOsB,EAPtB,UACA,EAMsB,EANtB,qBACA,EAKsB,EALtB,iBAGA,GAEsB,EAHtB,WAGsB,EAFtB,iBACA,EACsB,EADtB,uBACA,EAAsB,EAAtB,uBACG,EAAK,mBATJ,0IAWE,EAAoB,KAAK,QAAzB,gBAMR,OACE,qCAAK,UAAW,cAAI,IAAO,yBAA0B,GAAY,IAAK,GAA0B,GAC9F,gBAAC,IAAY,MACZ,EAAkB,GACjB,gBAAC,IAAY,CAAC,UAAW,IAAO,UAAU,eACxC,gBAAC,IAAY,CAAC,IAAK,IAClB,GACC,gBAAC,IAAW,KACV,gBAAC,IAAM,CAAC,QAAQ,OAAO,QAZX,WACtB,KAW2D,UAAQ,GACtD,UAnCnB,GAA8C,aACrC,cAAc,2BACd,cAAmB,IACnB,eAA4D,CACjE,YAAY,EACZ,uBAAwB,qBCe5B,IAAa,EAAb,iG,2BAEU,qBAAuB,cACvB,mBAAmB,cAH7B,4CAWE,WAAM,WACE,EAYF,KAZE,MACJ,EASsB,EATtB,UACA,EAQsB,EARtB,SACA,EAOsB,EAPtB,WACA,EAMsB,EANtB,UACA,EAKsB,EALtB,WACA,EAIsB,EAJtB,UACA,EAGsB,EAHtB,UACA,EAEsB,EAFtB,gBACA,EACsB,EADtB,uBACA,EAAsB,EAAtB,uBACG,EAAK,mBAXJ,4JAsBN,YARkB,IAAd,GAEF,QAAQ,KACN,oHAMF,qCACE,UAAW,cACT,IAAO,eACP,YAAqB,GAAc,EAAW,KAC9C,YAAqB,EAAW,KAChC,IAEE,GAEJ,gBAAC,IAAe,SAAQ,MACrB,YAKI,IAJc,EAId,EAJH,gBACwB,EAGrB,EAHH,uBACwB,EAErB,EAFH,uBACW,EACR,EADH,UAEM,EAAmB,UAAM,GAC7B,EADuB,+BACgB,EAAe,aACxD,OACE,gBAAC,IAAsB,SAAQ,CAC7B,MAAO,CACL,qBAAsB,EAAK,qBAC3B,sBACA,iBAAkB,EAAK,mBAGzB,uBAAK,UAAW,cAAI,IAAO,wBAAyB,GACpD,gBAAC,EAAwB,CACvB,GAAI,EACJ,WAAY,EACZ,qBAAsB,EAAK,qBAC3B,iBAAkB,EAAK,iBACvB,gBAAiB,GAAmB,EACpC,uBAAwB,GAA0B,EAClD,uBAAwB,GAA0B,aArEpE,GAAoC,aAC3B,cAAc,iBAGN,YAAY,EAEpB,eAAoC,CACzC,YAAY,EACZ,wBAAwB,G,aCCf,EAAb,iG,2BAEE,eAAiB,WAGf,OAFqB,IAAY,OAAO,WAAa,MAC3B,SAAS,IAAmB,QAJ1D,4CAQE,WAAM,WACE,EAYF,KAZE,MACJ,EASQ,EATR,WACA,EAQQ,EARR,QACA,EAOQ,EAPR,WACA,EAMQ,EANR,UACA,EAKQ,EALR,WACA,EAIQ,EAJR,UACA,EAGQ,EAHR,OACA,EAEQ,EAFR,WACA,EACQ,EADR,UACA,EAAQ,EAAR,SACG,EAAK,mBAXJ,yHA2BN,OAbK,GAAe,GAElB,QAAQ,MAAM,mFAGE,IAAd,GAEF,QAAQ,KACN,wHAMF,gBAAC,IAAe,SAAQ,MACrB,gBAAG,EAAH,EAAG,WAAY,EAAf,EAAe,iBAAf,OACC,gBAAC,IAAsB,SAAQ,MAC5B,YAAkD,IAA/C,EAA+C,EAA/C,qBAAsB,EAAyB,EAAzB,oBASxB,OARI,EAAqB,SAAW,EAAqB,QAAQ,YAC3D,EACF,EAAqB,QAAQ,UAAU,IAAI,IAAO,UAAU,UAE5D,EAAqB,QAAQ,UAAU,OAAO,IAAO,UAAU,WAKjE,qCACE,UAAW,cACT,IAAO,aACP,IAAO,UAAU,YACjB,GAAW,IAAO,UAAU,YAAQ,IACpC,GACE,IAAO,UAAP,gBACW,YAAW,EAAW,QAAQ,MAAO,WAMlD,YAAqB,GAAc,EAAW,KAC9C,YAAqB,EAAW,KAChC,YAAqB,EAAQ,KAC7B,YAAqB,EAAY,KACjC,IAEE,GAEJ,uBAAK,UAAW,cAAI,IAAO,gBACzB,gBAAC,IAAM,eACL,QAAQ,QACR,QAAS,EAAgB,aACd,gBACN,GAAc,CAAE,iBAAiB,GAAO,iBAC9B,GAAc,EAAK,iBAAgB,gBACnC,IAEd,IAGJ,EACG,eAAsB,EAAU,EAAqB,QAAQ,mBAC7D,aArFtB,GAAwC,aAC/B,cAAc,qB,YC/CVC,EAAa3G,YATM,CAC9Bja,KAAM,aACN8L,OAAQ,IACRiG,MAAO,IACPmI,QAAS,gNACTC,QAAS,EACTC,QAAS,I,wDCmBLyG,E,4MAMJ7T,QAAU,WAAO,IAAD,EACN8T,EAAoB,EAAK/gB,MAAzB+gB,gBACFC,EAAkB,CACtB,CAAE/f,KAAMwY,IAAWwH,QAAQC,mBAAoBhiB,KAAM,CAAEiiB,cAAe,IAAIC,MAC1E,CACEngB,KAAMwY,IAAW/d,MAAM2lB,gBACvBniB,KAAM,CACJoiB,cAAY,mBACTvlB,IAAqBgc,IAAM,MADlB,cAEThc,IAAqBsc,MAAQ,MAFpB,MAQd0I,GACFC,EAAgBjkB,KAAK,CAAEkE,KAAMwY,IAAWwH,QAAQM,gBAAiBriB,KAAM,CAAEsiB,cAAe,QAG1F,EAAKC,YAAYT,GAAiB,I,EASpCU,cAAgB,SAAAC,GAAkB,IAAD,EAC2B,EAAK3hB,MAAvDmhB,EADuB,EACvBA,cAAeK,EADQ,EACRA,cAAeT,EADP,EACOA,gBAGvBa,GADSjJ,iBAAeC,aACUjZ,QAAQ+C,MAAK,qBAAGxE,QAAsByjB,MAAkB,IAAjG1jB,MAER,GAAK2jB,EAAL,CAIA,IAAMC,EAAuB,IAAIT,IAAID,GACrCU,EAAqBC,OAAOF,GAE5B,IAAMZ,EAAkB,CACtB,CAAE/f,KAAMwY,IAAWwH,QAAQC,mBAAoBhiB,KAAM,CAAEiiB,cAAeU,IACtE,CACE5gB,KAAMwY,IAAW/d,MAAM2lB,gBACvBniB,KAAM,CACJoiB,aAAa,eACVM,EAAgB,SAMzB,GAAIb,EAAiB,CACnB,IAAMgB,EAAwBF,EAAqBvE,KAAO,GAAKkE,GAAkB,KACjFR,EAAgBjkB,KAAK,CAAEkE,KAAMwY,IAAWwH,QAAQM,gBAAiBriB,KAAM,CAAEsiB,cAAeO,KAG1F,EAAKN,YAAYT,GAAiB,K,EASpCgB,iBAAmB,SAAAliB,GAAU,IACnB7B,EAAU6B,EAAV7B,MACR,EAAKwjB,YAAY,CAAExgB,KAAMwY,IAAWwH,QAAQM,gBAAiBriB,KAAM,CAAEsiB,cAAevjB,M,EAUtF4B,SAAW,YAAuB,IAApBC,EAAmB,EAAnBA,MAAOmiB,EAAY,EAAZA,MACXd,EAAkB,EAAKnhB,MAAvBmhB,cACAljB,EAAU6B,EAAV7B,MACF4jB,EAAuB,IAAIT,IAAID,GAAela,IAAIgb,GAExD,EAAKR,YACH,CACE,CACExgB,KAAMwY,IAAWwH,QAAQC,mBACzBhiB,KAAM,CAAEiiB,cAAeU,IAEzB,CACE5gB,KAAMwY,IAAW/d,MAAMglB,qBAAqBuB,GAC5C/iB,KAAK,eAAI+iB,EAAQhkB,MAGrB,I,iDAUJ,SAAYikB,GAA6B,IAApBC,EAAmB,wDAC9BnJ,EAAWpX,KAAK5B,MAAhBgZ,OACFoJ,GAAmBxlB,MAAMC,QAAQqlB,IAAYA,GAAY,CAACA,IAAU/kB,KAAI,gBAAG8D,EAAH,EAAGA,KAAM/B,EAAT,EAASA,KAAT,oBAC5E+B,OACA+X,UACG9Z,MAGDijB,GACFC,EAAerlB,KAAK,CAClBkE,KAAMwY,IAAW/d,MAAM2mB,+BACvBrJ,WAIJQ,IAAM7M,SAASyV,K,6BASjB,SAAgBH,GAAQ,IAAD,EAIjBzmB,EAHIE,EAAUkG,KAAK5B,MAAftE,MACFiE,EAAUgZ,iBAAeC,WAAWqJ,GACpCT,EAAgB5f,KAAK0gB,mBAW3B,OAPE9mB,EADEymB,EACiC,kBAA1B,OAAOvmB,QAAP,IAAOA,OAAP,EAAOA,EAAQumB,KAAuBtiB,EAAQA,QAAQ+C,MAAK,qBAAGzE,SAAiB,OAAKvC,QAAL,IAAKA,OAAL,EAAKA,EAAQumB,OAE5FtiB,EAAQA,QAAQ+C,MAAK,qBAAGzE,QAAsBujB,KAKlD,CAAE7hB,UAAS4iB,iBAFa,QAAN,EAAA/mB,SAAA,eAAQ0C,QAAS,CAAC1C,EAAO0C,SAAmB,OAAPyB,QAAO,IAAPA,OAAA,EAAAA,EAASC,WAAY,CAACD,EAAQC,WAAc,M,8BAU5G,WAAoB,IAAD,MACwBgC,KAAK5B,MAAtCwhB,EADS,EACTA,cAAegB,EADN,EACMA,cAEvB,OACEhB,IAAa,UACbgB,EAAc9f,MAAK,mBAA+B,IAA/B,EAAG9C,mBADT,aACb,EAAyDjE,KAC/B,IAAzB6mB,EAAcnkB,SAAd,UAA8BmkB,EAAc,UAA5C,aAA8B,EAAkB7mB,M,gCAWrD,YAAmC,IAAD,OAATsmB,EAAS,EAAbtmB,GACXgX,EAAM/Q,KAAK5B,MAAX2S,EADwB,EAEK/Q,KAAK6gB,gBAAgBR,GAAlDtiB,EAFwB,EAExBA,QAAS4iB,EAFe,EAEfA,gBACXf,EAAgB5f,KAAK0gB,mBAE3B,OACE,cAAC,EAAD,CAEEI,MAAOH,EACPI,WAAY/gB,KAAK8f,cACjBkB,aAAcjQ,EAAE,6BAA8B,CAAEvU,QAAS6jB,IACzDY,gBAAiBrB,IAAkBS,EALrC,SAOE,cAAC,SAAD,CACExe,aAAYkP,EAAE,6BAA8B,CAAEvU,QAAS6jB,IACvDpiB,SAAU,SAAAC,GAAK,OAAI,EAAKD,SAAS,CAAEC,QAAOmiB,WAC1ClgB,gBAAiBwgB,EACjBnf,YAAauP,EAAE,gCAAiC,CAAEvU,QAAS6jB,IAC3DtiB,QAASA,EAAQA,WAXdsiB,K,oBAsBX,WAAU,IAAD,SACkCrgB,KAAK5B,MAAtCwiB,EADD,EACCA,cAAevf,EADhB,EACgBA,WAAY0P,EAD5B,EAC4BA,EAEnC,GAAI1P,EACF,OAAO,KAJF,MAOwErB,KAAK6gB,kBAAnEK,EAPV,EAOCnjB,QAA2CojB,EAP5C,EAO2BR,gBAElC,OACE,cAAC,IAAD,CACE5mB,GAAG,oBACHoH,UAAU,sEACVigB,gCAAgC,KAChCC,gBAAiBrhB,KAAKqL,QACtBiW,uBAAwBvQ,EAAE,kCAL5B,SAOE,cAAC,EAAD,UACE,cAAC,EAAD,CAAoBrP,WAAY,cAACud,EAAD,IAAgBsC,WAAW,KAA3D,SACE,eAACC,EAAA,EAAD,CAAcljB,QAAQ,eAAtB,UAC4B,IAAzBsiB,EAAcnkB,QACb,cAACglB,EAAA,EAAD,UACE,cAAC,SAAD,CACE5f,aAAYkP,EAAE,8BACd9S,SAAU+B,KAAKogB,iBACfjgB,gBAAiBghB,EACjB3f,YAAauP,EAAE,iCACfhT,QAASmjB,EAAgBnjB,QACzB2D,WAAY,cAACud,EAAD,QAIjB2B,EAAcrlB,KAAI,gBAAGxB,EAAH,EAAGA,GAAIiE,EAAP,EAAOA,SAAP,OAAsB,EAAK0jB,mBAAmB,CAAE3nB,KAAIiE,6B,GA3O/DjB,IAAMwF,WAoR5B2c,EAAQ1c,aAAe,CACrB1I,MAAO,GACPylB,cAAe,IAAIC,IACnBI,cAAe,KACfgB,cAAe,CACb,CACE7mB,GAAII,IAAqBgc,IACzBwL,WAAY,UAEd,CACE5nB,GAAII,IAAqBsc,MACzBkL,WAAY,SACZ3jB,UAAU,IAGdmhB,iBAAiB,EACjB9d,WAAYzB,IAAQgiB,oBACpB7Q,EAAGxU,YACH6a,OAAQ,WAcV,IAKMyK,EAAmB/W,aALD,SAAC,EAAD,WAAGuU,EAAH,EAAGA,QAAS9H,EAAZ,EAAYA,KAAiBuK,EAA7B,EAAsBhoB,MAAqBsd,EAA3C,EAA2CA,OAA3C,mBAAC,eAAD,QAAC,EACpBiI,EAAQ/jB,eADW,aACnB,EAAkB8b,IADC,IAEtBtd,OAAO,UAAAyd,EAAKzd,aAAL,eAAasd,KAAW0K,MAGRhX,CAAyBoU,I,sQCvU5CT,EAAsBvZ,IAAY6c,yBAAyBC,mBAAmBzmB,KAAI,SAAA0mB,GAAQ,kCAC3FA,GAD2F,IAE9FjkB,UAAU,OAcNkkB,EAA4B,SAAC,GAAmC,IAAjCnkB,EAAgC,EAAhCA,QAASgT,EAAuB,EAAvBA,EAAG1U,EAAoB,EAApBA,MAAO+a,EAAa,EAAbA,OAChDjM,EAAemM,aAAY,uCAAGC,KAAgBzd,aAAnB,iBAAc,EAAasd,UAA3B,aAAc,EAAuBjd,IAAqBugB,cAAare,GAElGkC,EAAiBR,EAAQxC,KAAI,SAAAmD,GAAM,kCACpCA,GADoC,IAEvCV,SAAUU,EAAOpC,QAAU6O,GAAgBzM,EAAOrC,MAAMoe,UAAUsE,gBAAkB5T,OAmCtF,OACE,cAAC,SAAD,CACEtJ,aAAYkP,EAAE,gCAAiC,CAAEvU,QAAS,gBAC1DyB,SA5Ba,SAAAC,GAAU,IAAD,EACOA,EAAM7B,MAA7Boe,EADgB,EAChBA,UAAWE,EADK,EACLA,QACnB/C,IAAM7M,SAAS,CACb,CACE1L,KAAMwY,IAAW/d,MAAMge,+BACvBV,UAHW,aAMX/X,KAAMwY,IAAW/d,MAAMglB,qBAAqB3kB,IAAqB0gB,aACjEzD,UACCjd,IAAqB0gB,YAAc6D,IAAYla,OARrC,aAWXnF,KAAMwY,IAAW/d,MAAMglB,qBAAqB3kB,IAAqBugB,YACjEtD,UACCjd,IAAqBugB,WAAaD,EAAUsE,eAblC,aAgBX1f,KAAMwY,IAAW/d,MAAMglB,qBAAqB3kB,IAAqBygB,UACjExD,UACCjd,IAAqBygB,SAAWD,EAAQoE,kBAS3ChhB,QAASQ,EACTiD,YAAauP,EAAE,gCAAiC,CAAEvU,QAAS,gBAC3DiF,SAAU/D,iBAAekE,MACzBL,UAAW,OA4BjB2gB,EAA0B1f,aAAe,CACvCzE,QAAS0gB,EACT1N,EAAGxU,YACHF,MAAOE,oBAAU,qCAAsC,CAAEC,QAAS,YAClE4a,OAAQ,iC,oPChGJqH,EAAsBhjB,OAAOuF,OAAO0d,KAAanjB,KAAI,SAAA8D,GAAI,MAAK,CAClE/C,MAAOC,oBAAU,wBAAyB,CAAEC,QAAS6C,IACrDhD,MAAOgD,EACPrB,UAAU,MAcNmkB,EAAkB,SAAC,GAAmC,IAAjCpkB,EAAgC,EAAhCA,QAASgT,EAAuB,EAAvBA,EAAG1U,EAAoB,EAApBA,MAAO+a,EAAa,EAAbA,OACtCjM,EAAemM,aAAY,uCAAGC,KAAgBzd,aAAnB,iBAAc,EAAasd,UAA3B,aAAc,EAAuBjd,IAAqBioB,OAAM/lB,GAE3FkC,EAAiBR,EAAQxC,KAAI,SAAAmD,GAAM,kCAAUA,GAAV,IAAkBV,SAAUU,EAAOrC,QAAU8O,OAsBtF,OACE,cAAC,SAAD,CACEtJ,aAAYkP,EAAE,gCAAiC,CAAEvU,QAAS,QAC1DyB,SAhBa,SAAAC,GAAK,OACpB0Z,IAAM7M,SAAS,CACb,CACE1L,KAAMwY,IAAW/d,MAAM2mB,+BACvBrJ,UAHW,aAMX/X,KAAMwY,IAAW/d,MAAMglB,qBAAqB3kB,IAAqBioB,KACjEhL,UACCjd,IAAqBioB,IAAMlkB,EAAM7B,UAQpC0B,QAASQ,EACT4B,gBAAiBgL,EACjB3J,YAAauP,EAAE,gCAAiC,CAAEvU,QAAS,WA4BjE2lB,EAAgB3f,aAAe,CAC7BzE,QAAS0gB,EACT1N,EAAGxU,YACHF,MAAOqiB,IAAY2D,MACnBjL,OAAQ,oB,kZClDJkL,EAAgC,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,YAAazR,EAAQ,EAARA,EAC7D0R,EAAWnL,aAAY,uCAAGC,KAAgBzd,aAAnB,iBAAc,EAAayoB,EAAc,GAAGnL,eAA5C,aAAc,EAAwCjd,IAAqBioB,OAAM,MACpFM,EAAqBF,EAAvCG,iBAqIR,OACE,eAAC,aAAD,WACE,cAAC,aAAD,CAAY9O,aAAc6O,EAAkBE,aAAW,EAAvD,SACG7R,EAAE,uBAAwB,CAAE8R,QAASjjB,IAAQkjB,gBAAiBtmB,QAASkmB,MAE1E,cAAC,cAAD,UAAcH,EAAchnB,KAAI,SAAAwnB,GAAM,OAxIpB,SAACA,EAAQC,GAAqB,IAEhDC,EAeEF,EAfFE,wBAF+C,EAiB7CF,EAdFjpB,aAH+C,MAGvC,GAHuC,IAiB7CipB,EAbFnE,uBAJ+C,MAI7B,GAJ6B,IAiB7CmE,EAZFvL,2BAL+C,MAKzB,GALyB,IAiB7CuL,EAXFG,mCAN+C,MAMjB,GANiB,IAiB7CH,EAVFI,2BAP+C,MAOzB,GAPyB,IAiB7CJ,EATFK,4BAR+C,MAQxB,GARwB,IAiB7CL,EARFM,4BAT+C,MASxB,GATwB,IAiB7CN,EAPFO,+BAV+C,MAUrB,GAVqB,IAiB7CP,EANFQ,gCAX+C,MAWpB,GAXoB,EAY/CC,EAKET,EALFS,qCACAC,EAIEV,EAJFU,sBACA5P,EAGEkP,EAHFlP,aACAyG,EAEEyI,EAFFzI,UACAlD,EACE2L,EADF3L,OAGF,IAAKkD,IAAclD,EACjB,OAAO,KApBwC,IAiC7CsM,EAjC6C,EA4B7C/a,IAAWC,eAAe9O,EAAO,CAAE8kB,kBAAiBpH,sBAAqB0L,gCAJ1DS,EAxB8B,EAwB/C/E,gBACqBgF,EAzB0B,EAyB/CpM,oBAC6BqM,EA1BkB,EA0B/CX,4BACAY,EA3B+C,EA2B/CA,aAGEC,EAAeZ,EACfa,EAAmBV,EACnBW,EAAgCT,EAGpC,GAAIP,EAAyB,CAC3BS,EAAYV,GAAmBlpB,EAAMK,IAAqBioB,KAE1D,IAAMxoB,EAAS,SAAC,GAAwB,IAAtBG,EAAqB,EAArBA,GAChB,OADqC,EAAjBmqB,YAIb,IAAIC,OAAOT,EAAW,KAAK3P,KAAKha,IAGzCgqB,EAAeZ,EAAoBvpB,OAAOA,GAC1CoqB,EAAmBV,EAAwB1pB,OAAOA,GAClDqqB,EAAgCT,EAAqC5pB,OAAOA,GAG9E,IAAMwqB,EACJ,eAAC,IAAMlc,SAAP,WACG6I,EAAE,8BAA+B,CAAEvU,QAAS8d,IAC7C,cAAC,IAAD,CACEhF,QAAS,4BAAIvE,EAAE,yCAA0C,CAAEvU,QAAS8d,MACpE7Y,SAAUmY,IAAgBjG,IAC1BkG,YAAY,EACZC,SAAU,EACVC,WAAY,IACZC,UAAW,EANb,SAQE,qBAAK7Y,UAAU,uBAAf,SACE,cAAC,IAAD,WAMR,OACE,eAAC,IAAM+G,SAAP,WACGub,GACC,cAAC,cAAD,UACE,cAAC,UAAD,CAAS7C,cAAe6C,EAAuBnJ,UAAWA,EAAWxgB,MAAOgqB,EAAc1M,OAAQA,MAGtG,cAAC,cAAD,UACE,eAAC,UAAD,CAEE0D,gBAAiBiJ,EACjBxI,SAAU6H,EACVtpB,MAAO6pB,EACPrJ,UAAWA,EACXlD,OAAQA,EACRkE,UAAW8I,EACXvQ,aAAcA,EARhB,UAUGyG,IAAc+J,IAAuBC,WAAaZ,GACjD,cAAC,kBAAD,CAAiBrnB,MAAOqnB,EAAWtM,OAAQA,IAE5CkD,IAAc+J,IAAuBC,WACpC,cAAC,0BAAD,CAAyBjoB,MAAOuiB,EAAgBzkB,IAAqB0gB,aAAczD,OAAQA,IAE5FkD,IAAc+J,IAAuBE,mBAAqB,cAAC,4BAAD,CAA2BnN,OAAQA,MAhBhG,gBACgBkD,MAkBlB,cAAC,cAAD,UACE,eAAC,UAAD,CAA8CA,UAAWA,EAAzD,UACE,cAAC,eAAD,CAEEhe,MAAOyU,EAAE,0BAA2B,CAAEvU,QAAS,UAFjD,SAIE,cAAC,UAAD,CAEEgN,iBAAkB6Z,EAClB1G,oBAAqBqH,EACrB1J,UAAWA,EACXiB,SAAUgI,EACVzpB,MAAO8pB,EACPxM,OAAQA,GAPV,cACckD,KALhB,0BAC0BA,KAaxB1a,IAAQge,iCAAmC4F,GAC3C,cAAC,eAAD,CAEElnB,MAAOyU,EAAE,0BAA2B,CAAEvU,QAAS,kBAFjD,SAIE,cAAC,UAAD,CAEEmgB,oBAAqBsH,EACrB3J,UAAWA,EACXxgB,MAAO+pB,EACPzM,OAAQA,GALV,eACekD,KALjB,yBACyBA,MAjB7B,oBAAiCA,QA3BrC,kBAAgCA,EAAhC,YAA6CoJ,IAmEHc,CAAczB,EAAQN,YA4DtEH,EAA8B9f,aAAe,CAC3C+f,cAAe,CACb,CACEU,yBAAyB,EACzBnpB,OAAK,mBACFK,IAAqBioB,IAAMqC,IAAyBpC,OADlD,cAEFloB,IAAqBugB,WAAaxV,IAChC2Z,kBAAkBta,IAAkBC,OACpCiW,UAAUsE,eAJV,cAKF5kB,IAAqBygB,SAAW1V,IAAY2Z,kBAAkBta,IAAkBC,OAAOmW,QAAQoE,eAL7F,GAOLH,gBAAgB,eACbzkB,IAAqB0gB,YAActW,IAAkBC,OAExDgT,qBAAmB,mBAChBrd,IAAqBC,KAAOsqB,IAA0BC,WADtC,cAEhBxqB,IAAqBI,UAAYC,IAAqBC,YAFtC,cAGhBN,IAAqBsO,MAAQ,KAHb,cAIhBtO,IAAqBuO,OAAS,GAJd,GAMnBwa,6BAA2B,mBACxB/oB,IAAqBC,KAAOwqB,IAAwCC,qBAD5C,cAExB1qB,IAAqBI,UAAYC,IAAqBC,YAF9B,cAGxBN,IAAqBsO,MAAQ,KAHL,cAIxBtO,IAAqBuO,OAAS,GAJN,GAM3Boc,cAAeL,IAAyBpC,MACxCc,oBAAqB,CACnB,CACEppB,GAAI,QACJmqB,YAAY,EACZzU,KAAMsV,IAAoB1oB,MAC1BmT,OAAQwV,IAAmB3oB,MAC3BkT,MAAOyV,IAAmB3oB,OAE5B,CACEtC,GAAI,UACJmqB,YAAY,EACZzU,KAAMsV,IAAoB1oB,MAC1BmT,OAAQwV,IAAmB3oB,MAC3BkT,MAAOyV,IAAmB3oB,OAE5B,CAAEtC,GAAI,mBAAoBmqB,YAAY,GACtC,CAAEnqB,GAAI,iBAAkBmqB,YAAY,IAEtCd,qBAAsB,GACtBC,qBAAsB,CACpB,CACEtpB,GAAI,cACJ+C,OAAQP,oBAAU,6BAA8B,CAAEC,QAAS,sBAC3DI,KAAM,SAACU,EAAMxB,GAAa,IAChBmpB,EAA6B3nB,EAA7B2nB,YAAaC,EAAgB5nB,EAAhB4nB,YACFC,IAAsB,OAAPrpB,QAAO,IAAPA,OAAA,EAAAA,EAASqpB,aAAc,IAAjDlH,UAER,OAAI,OAACiH,QAAD,IAACA,OAAD,EAACA,EAAa7oB,OAIb8oB,EAKH,cAAC,IAAD,CACEC,UAAQ,EACR7L,UAAU,IACVjb,QAAQ,OACR+mB,KAAI,UAAKzlB,IAAQ0lB,sBAAb,+BAAyDJ,EAAY7oB,MAArE,KAJN,SAMG4oB,EAAY5oB,OAAS6oB,EAAY7oB,SAVlB,OAAX4oB,QAAW,IAAXA,OAAA,EAAAA,EAAa5oB,SAAb,OAAsB6oB,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAa7oB,OAJ1C,OAAO4oB,QAAP,IAAOA,OAAP,EAAOA,EAAa5oB,QAmB1B,CACEtC,GAAI,cACJ8C,UAAW,IAEb,CACE9C,GAAI,WACJ6C,KAAM,SAAAU,GAAI,eAAS,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMioB,gBAAN,eAAgBlpB,QAAS,cAAC,IAAD,CAAYwI,KAAI,OAAEvH,QAAF,IAAEA,GAAF,UAAEA,EAAMioB,gBAAR,aAAE,EAAgBlpB,SAAc,IACxFQ,UAAW,KAGfymB,wBAAyB,CACvB,CACEvpB,GAAI,cACJ6C,KAAM,SAACU,EAAMxB,GAAa,IAAD,EAC6CwB,EAA5D2nB,mBADe,MACD,GADC,IAC6C3nB,EAA1C4nB,mBADH,MACiB,GADjB,IAC6C5nB,EAAxByL,sBADrB,MACsC,GADtC,EAEJoc,IAAsB,OAAPrpB,QAAO,IAAPA,OAAA,EAAAA,EAASqpB,aAAc,IAAjDlH,UAER,IAAKiH,EAAY7oB,MACf,OAAO4oB,EAAY5oB,MAGrB,IAAImpB,EAAqBP,EAAY5oB,OAAS6oB,EAAY7oB,MAe1D,OAbI8oB,IACFK,EACE,cAAC,IAAD,CACEJ,UAAQ,EACR7L,UAAU,IACVjb,QAAQ,OACR+mB,KAAI,UAAKzlB,IAAQ0lB,sBAAb,+BAAyDJ,EAAY7oB,MAArE,KAJN,SAMG4oB,EAAY5oB,OAAS6oB,EAAY7oB,SAMtC,eAAC,IAAM6L,SAAP,WACGsd,EAAoB,IACnBzc,EAAe1M,OACfE,oBAAU,4BAA6B,CAAEC,QAAS,iBAAkB8hB,MAAOvV,EAAe1M,OAAS,CACjG,cAAC,IAAD,CAASkT,MAAM,YAEjB,OAIR/T,YAAY,GAEd,CACEzB,GAAI,UACJ+C,OAAQP,oBAAU,6BAA8B,CAAEC,QAAS,yCAC3D0nB,YAAY,EACZ1oB,YAAY,EACZG,aAAa,EACbkB,UAAW,IAEb,CACE9C,GAAI,QACJ+C,OAAQP,oBAAU,6BAA8B,CAAEC,QAAS,uCAC3D0nB,YAAY,EACZ1oB,YAAY,EACZG,aAAa,EACbkB,UAAW,IAEb,CACE9C,GAAI,WACJ6C,KAAM,SAAAU,GAAI,eAAS,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMioB,gBAAN,eAAgBlpB,QAAS,cAAC,IAAD,CAAYwI,KAAI,OAAEvH,QAAF,IAAEA,GAAF,UAAEA,EAAMioB,gBAAR,aAAE,EAAgBlpB,SAAc,IACxFb,YAAY,EACZG,aAAa,EACbkB,UAAW,KAGf0mB,yBAA0B,GAC1BC,qCAAsC,CACpC,CACEzpB,GAAI,cACJyB,YAAY,GAEd,CACEzB,GAAI,eACJyB,YAAY,EACZG,aAAa,EACbkB,UAAW,IAEb,CACE9C,GAAI,oBACJ6C,KAAM,SAAAU,GAAI,eACH,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMmoB,yBAAN,eAAyBppB,QAAS0I,IAAOC,IAAP,OAAW1H,QAAX,IAAWA,GAAX,UAAWA,EAAMmoB,yBAAjB,aAAW,EAAyBppB,OAAO4I,OAAO,eAAkB,IACzGzJ,YAAY,EACZG,aAAa,EACbkB,UAAW,KAGf4mB,sBAAuB,CACrB,CACE1pB,GAAII,IAAqBgc,MAG7BtC,aAAc,YACdyG,UAAW+J,IAAuBC,UAClClN,OAAQ,iBAEV,CACEtd,OAAK,mBACFK,IAAqBugB,WAAaxV,IAAY6c,uBAAuB,WAAW1lB,MAAMoe,UAAUsE,eAD9F,cAEF5kB,IAAqBygB,SAAW1V,IAAY6c,uBAAuB,WAAW1lB,MAAMse,QAAQoE,eAF1F,GAILH,gBAAgB,eACbzkB,IAAqB0gB,YAActW,IAAkBC,OAExDgT,qBAAmB,mBAChBrd,IAAqBC,KAAOsqB,IAA0BC,WADtC,cAEhBxqB,IAAqBI,UAAYC,IAAqBC,YAFtC,cAGhBN,IAAqBsO,MAAQ,KAHb,cAIhBtO,IAAqBuO,OAAS,GAJd,GAMnBya,oBAAqB,CACnB,CACEppB,GAAI,YACJ0V,KAAMsV,IAAoB1oB,MAC1BmT,OAAQwV,IAAmB3oB,MAC3BkT,MAAOyV,IAAmB3oB,QAG9B+mB,qBAAsB,CACpB5H,cAAe,SAAAle,GAAS,IAElBooB,EADIC,EAAcroB,EAAdqoB,UAGR,GAAIA,EAAW,CACb,IAAIC,EAAQ,EAEZD,EAAUxpB,SAAQ,YAAY,IAAT2S,EAAQ,EAARA,EACnB8W,GAAK,OAAI9W,QAAJ,IAAIA,IAAK,KAGhB4W,EAAiBnpB,oBAAU,oCAAqC,CAC9DC,QAAS,YACTopB,MAAOC,IAAOD,GACX3gB,OAAO,CAAE6gB,SAAS,EAAMC,SAAU,EAAGC,cAAc,EAAMC,cAAc,IACvEC,gBAIP,OAAO,qBAAK/kB,UAAU,+BAAf,SAA+CukB,GAAkB,SAG5EpC,wBAAyB,CACvB,CACEvpB,GAAI,cACJ6C,KAAM,SAAAU,GAAS,IAAD,EACwDA,EAA5D2nB,mBADI,MACU,GADV,IACwD3nB,EAA1C4nB,mBADd,MAC4B,GAD5B,IACwD5nB,EAAxByL,sBADhC,MACiD,GADjD,EAGZ,IAAKmc,EAAY7oB,MACf,OAAO4oB,EAAY5oB,MAGrB,IAAMmpB,EAAqBP,EAAY5oB,OAAS6oB,EAAY7oB,MAE5D,OACE,eAAC,IAAM6L,SAAP,WACGsd,EAAoB,IACnBzc,EAAe1M,OACfE,oBAAU,4BAA6B,CAAEC,QAAS,iBAAkB8hB,MAAOvV,EAAe1M,OAAS,CACjG,cAAC,IAAD,CAASkT,MAAM,YAEjB,OAIR/T,YAAY,GAEd,CACEzB,GAAI,YACJ6C,KAAM,SAAAU,GAAI,cAC2B,kBAAlC,OAAOA,QAAP,IAAOA,GAAP,UAAOA,EAAMqoB,iBAAb,aAAO,EAAiBtpB,QAAsB2J,OAAOmgB,WAAP,OAAkB7oB,QAAlB,IAAkBA,GAAlB,UAAkBA,EAAMqoB,iBAAxB,aAAkB,EAAiBtpB,OAAO+pB,QAAQ,IAAjG,QAEF5qB,YAAY,EACZG,aAAa,EACbkB,UAAW,IAEb,CACE9C,GAAI,WACJ6C,KAAM,SAAAU,GAAI,eAAS,OAAJA,QAAI,IAAJA,GAAA,UAAAA,EAAMioB,gBAAN,eAAgBlpB,QAAS,cAAC,IAAD,CAAYwI,KAAI,OAAEvH,QAAF,IAAEA,GAAF,UAAEA,EAAMioB,gBAAR,aAAE,EAAgBlpB,SAAc,IACxFb,YAAY,EACZG,aAAa,EACbkB,UAAW,KAGf4mB,2BAAuBnQ,EACvBO,aAAc,mBACdyG,UAAW+J,IAAuBE,kBAClCnN,OAAQ,wBAGZrG,EAAGxU,c,iCC/fL8pB,EAAQC,YAAa,EACrBC,EAAQ,KACRF,EAAQxQ,QAAU,CAChB,UAAa,CACX,KAAQ,YACR,WAAc,kBACd,UAAa,iBACb,eAAkB,wBAClB,IAAO,WACP,SAAY,gBACZ,QAAW,eACX,qBAAwB,+BACxB,WAAc,kBACd,cAAiB,sBACjB,eAAkB,wBAClB,kBAAqB,4BACrB,eAAkB,wBAClB,kBAAqB,4BACrB,eAAkB,wBAClB,kBAAqB,4BACrB,eAAkB,wBAClB,kBAAqB,4BACrB,iBAAoB,yBACpB,oBAAuB,6BACvB,SAAY,gBACZ,WAAc,mBACd,UAAa,kBACb,QAAW,gBACX,QAAW,gBACX,QAAW,gBACX,QAAW,gBACX,UAAa,iBACb,cAAiB,wBACjB,YAAe,sBACf,YAAe,sBACf,YAAe,sBACf,YAAe,sBACf,cAAiB,uBACjB,cAAiB,wBACjB,YAAe,sBACf,YAAe,sBACf,YAAe,sBACf,YAAe,sBACf,cAAiB,uBACjB,cAAiB,wBACjB,YAAe,sBACf,YAAe,sBACf,YAAe,sBACf,YAAe,sBACf,cAAiB,uBACjB,cAAiB,wBACjB,YAAe,sBACf,YAAe,sBACf,YAAe,sBACf,YAAe,sBACf,cAAiB,uBACjB,gBAAmB,yBACnB,cAAiB,uBACjB,cAAiB,uBACjB,cAAiB,uBACjB,cAAiB,uBACjB,gBAAmB,yBAErB,KAAQ,YACR,SAAY,kBACZ,aAAgB,uBAChB,aAAgB,uBAChB,SAAY,kBACZ,SAAY,kBACZ,iBAAoB,2BACpB,WAAc,oBACd,iBAAoB,2BACpB,eAAkB,2B,iCCxEpBwQ,EAAQC,YAAa,EACrBC,EAAQ,KACRF,EAAQxQ,QAAU,CAChB,YAAe,oBACf,WAAc,mBACd,eAAkB,yBAClB,UAAa,CACX,MAAS,gB,uDCPbwQ,EAAQC,YAAa,EACrBC,EAAQ,KACRF,EAAQxQ,QAAU,CAChB,SAAY,kB,mGCHdwQ,EAAQC,YAAa,EACrBC,EAAQ,KACRF,EAAQxQ,QAAU,CAChB,UAAa,CACX,UAAa,iBACb,QAAW,gBAEb,WAAc,mBACd,eAAkB,2B,uDCRpBwQ,EAAQC,YAAa,EACrBD,EAAQG,qBAAuB,CAC7BnoB,KAAM,iBACN8L,OAAQ,IACRiG,MAAO,IACPmI,QAAS,kZACTC,QAAS,EACTC,QAAS,GAEX4N,EAAQI,eAAiBF,EAAQ,KAAiBjO,WAAW+N,EAAQG,sBACrEH,EAAO,QAAcA,EAAQI,gB,uICWhB,EAAuD,SAAC,GAQ/C,MAFA,EALpB,gBAOoB,MAPT,KAOS,IAFA,EAJpB,iBAMoB,MANR,GAMQ,EALpB,EAGoB,EAHpB,GACA,EAEoB,EAFpB,SACA,EACoB,EADpB,kBACA,EAAoB,EAApB,qBACG,EAAK,mBAP2D,qFAQ9C,OACrB,gBAAC,IAAY,SAAQ,MAClB,YAAe,IAAZ,EAAY,EAAZ,OACI,EACJ,uBAAK,UAAW,cAAI,IAAO,mBACzB,gBAAC,IAAM,eACL,QAAQ,QACR,KAAK,SACL,QAAS,YACP,EAAS,EAAK,KAEZ,GAEJ,wBAAM,UAAW,cAAI,IAAO,uBAC1B,gBAAC,IAAc,eAAa,YAMpC,OACE,qCACE,UAAW,cAAI,IAAO,WAAY,GAAwB,IAAO,UAAU,YAAa,GACxF,GAAI,GACA,GAEH,IAAa,GAAwB,EACrC,EACA,GAAY,GAAwB,OAM/C,EAAW,YAAc,c,6GCnDZ,EAAuD,SAAC,GAK/C,MAFH,EAFjB,gBAIoB,MAJT,KAIS,IAFH,EADjB,iBAGoB,MAHR,GAGQ,IAFH,EAAjB,iBAEoB,MAFR,MAEQ,EADjB,EAAK,mBAJ2D,sCAM7D,EAAY,EAClB,OACE,gBAAC,EAAS,eAAC,UAAW,cAAI,IAAO,WAAY,IAAgB,GAC1D,IAIP,EAAW,YAAc,c,uECpBb,E,wFAAZ,SAAY,GACV,cACEC,EAAF,YACEA,EAAF,+BACEA,EAAF,cACEA,EAAF,cACEA,EAAF,gBACEA,EAAF,oBACEA,EAAF,gBACEA,EAAF,UACEA,EAAF,YACEA,EAAF,UAXF,CAAY,MAAc,KAgE1B,IAAa,EAAb,YAAE,qBAAF,iBAeI,SAAF,EAAY,GAAqB,kCAC3B,EAAJ,YAAM,IAHR,SAAW,cAUX,eAAe,SAAC,GACV,EAAK,MAAM,UACb,EAAK,MAAM,SAAS,EAAM,cAAc,MAAO,IAqBnD,eAAe,WACb,IAAM,EAAW,EAAK,MAAM,UAAY,EAAK,SACzC,GAAY,EAAS,SACvB,YAAS,EAAS,QAAS,OAAO,EAAK,MAAM,SAIjD,cAAc,WACZ,IAAM,EAAW,EAAK,MAAM,UAAY,EAAK,SAE5C,EAAS,QAA6B,MAAQ,OAAO,EAAK,MAAM,OAEjE,EAAS,QAAQ,WAAa,EAAS,QAAQ,aAGjD,UAAU,SAAC,GAAe,MACa,EAAK,MAAlC,EADgB,EAChB,gBAAiB,EADD,EACC,QACrB,GACF,EAAK,cAEP,GAAW,EAAQ,IAGrB,SAAS,SAAC,GAAe,MACa,EAAK,MAAjC,EADe,EACf,gBAAiB,EADF,EACE,OACrB,GACF,EAAK,eAEP,GAAU,EAAO,IAzDZ,EAAM,IAAO,EAAM,eAAkB,EAAM,oBAE9C,QAAQ,MAAM,cAAe,kEAJA,EAfjC,uBAAE,IAAJ,oBAAI,MA6BF,WACM,KAAK,MAAM,kBACb,KAAK,eACD,KACF,OAAO,iBAAiB,SAAU,YAAS,KAAK,aAAc,SAjCtE,CAAI,IAAJ,uBAAI,MAsCF,WACM,KAAK,MAAM,iBACT,KACF,OAAO,oBAAoB,SAAU,YAAS,KAAK,aAAc,QAzCzE,CAAI,IAAJ,SAAI,MA6EF,WACQ,MAmBF,KAnBE,MACJ,EAgBoB,EAhBpB,SACA,EAeoB,EAfpB,UACA,EAcoB,EAdpB,KACA,EAaoB,EAbpB,MACA,EAYoB,EAZpB,UAOA,GAKoB,EAVpB,SAUoB,EATpB,QASoB,EARpB,OAQoB,EAPpB,gBAOoB,EALpB,YACA,EAIoB,EAJpB,WACA,EAGoB,EAHpB,WACA,EAEoB,EAFpB,YACA,EACoB,EADpB,cACA,EAAoB,EAApB,qBACG,EAAK,mBAlBJ,iMAqBA,EAAkB,GAQxB,OAPI,IACF,EAAgB,gBAAhB,eAA0C,EAA1C,OAEE,IACF,EAAgB,eAAiB,GAIjC,yCACM,EAAK,CACT,QAAS,KAAK,QACd,OAAQ,KAAK,OACb,UAAW,cACT,IAAO,YACP,IAAc,IAAiB,SAAW,IAAO,UAAU,QAC3D,IAAc,IAAiB,SAAW,IAAO,UAAU,SACzD,GAA+B,WAAhB,GAA6B,IAAkB,IAAO,UAAU,KACjF,GAAe,IAAO,UAAU,GAChC,GAEF,SAAU,KAAK,aACf,KAAM,EACN,MAAO,EAAK,eACE,IAAc,IAAiB,MAC7C,SAAU,EACV,SAAU,EACV,SAAU,EACV,IAAK,GAAY,KAAK,WAChB,GAAiB,IAAyB,CAAE,MAAO,SAhIjE,GAAmC,aAC1B,cAAc,gBACd,eAA+B,CAClC,aAAY,KACZ,UAAS,GACX,YAAY,EACZ,UAAW,UACT,YAAU,EACV,YAAU,EACV,KAAI,EAAe,KACnB,iBAAe,EACf,SAAQ,cA2HP,IAAM,EAAY,cAAiB,SAAC,EAAuB,GAAxB,OACxC,gBAAC,EAAa,iBAAK,EAAK,CAAE,SAAU,QAEtC,EAAU,YAAc,a,6GClMX,EAAqD,SAAC,GAK9C,MAFF,EAFjB,gBAImB,MAJR,KAIQ,IAFF,EADjB,iBAGmB,MAHP,GAGO,IAFF,EAAjB,iBAEmB,MAFP,MAEO,EADhB,EAAK,mBAJyD,sCAM3D,EAAY,EAClB,OACE,gBAAC,EAAS,eAAC,UAAW,cAAI,IAAO,UAAW,IAAgB,GACzD,IAIP,EAAU,YAAc,a,6GCfX,EAAyD,SAAC,GAIhD,MAFP,EADd,gBAGqB,MAHV,KAGU,IAFP,EAAd,iBAEqB,MAFT,GAES,EADlB,EAAK,mBAH6D,0BAI/C,OACtB,qCAAK,UAAW,cAAI,IAAO,YAAa,IAAgB,GACrD,IAGL,EAAY,YAAc,e,8GCPb,EAAmD,SAAC,GAK7C,MAFD,EAFjB,gBAIkB,MAJP,KAIO,IAFD,EADjB,iBAGkB,MAHN,GAGM,IAFD,EAAjB,iBAEkB,MAFN,MAEM,EADf,EAAK,mBAJuD,sCAMzD,EAAY,EAClB,OACE,gBAAC,EAAS,eAAC,UAAW,cAAI,IAAO,SAAU,IAAgB,GACxD,IAIP,EAAS,YAAc,Y,qFCjBV,EAA+D,SAAC,GAInD,MAFV,EADd,gBAGwB,MAHb,KAGa,IAFV,EAAd,iBAEwB,MAFZ,GAEY,EADrB,EAAK,mBAHmE,0BAIlD,OACzB,qCAAK,UAAW,GAAe,GAC5B,IAGL,EAAe,YAAc,kB,iCClB7B,wHAiBA,IAAIC,EAAe,SAAsBC,GACvC,IAAIxJ,EAAWwJ,EAAKxJ,SAChByJ,EAAUD,EAAKC,QACf1lB,EAAYylB,EAAKzlB,UACjBnD,EAAW4oB,EAAK5oB,SAChBmG,EAAWyiB,EAAKziB,SAChB/F,EAAQ0oB,IAAyBF,EAAM,CAAC,WAAY,UAAW,YAAa,WAAY,aAExFG,EAAsBC,IAAW,uBAAwBC,IAAgB,GAAI,eAAgB7J,GAAWjc,GAC5G,OAAoBpE,IAAMmqB,cAAchf,WAAU,KAAmBnL,IAAMmqB,cAAchI,IAASiI,IAAS,CACzGhmB,UAAW4lB,GACV3oB,GAAQ,IAAK+F,IAAY0iB,GAAW,GAAK7oB,GAAY,IAAmBjB,IAAMmqB,cAAc,MAAO,CACpG/lB,UAAW,gCACV0lB,GAAW,GAAkB9pB,IAAMmqB,cAAc,OAAQ,CAC1D/lB,UAAW,sCACV,IAvBL,SAAuB0lB,GACrB,MACS,GAAG5pB,OAAO4pB,EADfA,EAAU,GAAKA,EAAU,EACD,WAEA,WAmBpBO,CAAcP,GAAU,KAAM7oB,GAAY,GAAkBjB,IAAMmqB,cAAc,OAAQ,CAC9F/lB,UAAW,yCACV,IAAKnD,EAAU,iBAGL2oB,MACfA,EAAaU,UAAY,CACvBjK,SAAUiK,IAAUC,KACpBT,QAASQ,IAAUE,OACnBpjB,SAAUkjB,IAAUG,IACpBrmB,UAAWkmB,IAAUI,OACrBzpB,SAAUqpB,IAAUE,QAEtBZ,EAAankB,aAAe,CAC1B4a,UAAU,I,iCCxBZ,kCACO,IAAM,EAAyC,SAAC,GAAD,OAAsB,MAC5E,EAAI,YAAc,O,8GCbL,EAA2D,SAAC,GAIjD,IAHtB,EACc,EADd,SAGsB,EAFR,EAAd,iBAEsB,MAFV,GAEU,EADnB,EAAK,mBAH+D,0BAIhD,OACvB,sCAAM,UAAW,cAAI,IAAO,aAAc,IAAgB,GACvD,IAGL,EAAa,YAAc,gB,kMCNd,EAAqD,SAArD,EAAsD,GAO9C,IANnB,EAIQ,EAJR,SAGA,GACQ,EAFR,cAEQ,EADR,QACA,EAAQ,EAAR,SACG,EAAK,mBANyD,kDAQ3D,EAAa,EAAM,KAAO,IAAM,SACtC,OACE,gBAAC,EAAS,iBAAK,YAAa,EAAU,YAAa,EAAQ,GAAe,GACvE,IAIP,EAAU,YAAc,Y,ICfZ,E,kBCRN,EAAc,gBAAsC,CACxD,QAAS,YAGE,EAAsB,EAAY,SAClC,EAAsB,EAAY,SCczC,EAAe,CACnB,QAAS,GACT,SAAU,IAAO,UAAU,WAGvB,EAA4C,SAAC,GAY7B,IAEd,EAbN,EASQ,EATR,GACA,EAQQ,EARR,UACc,EAON,EAPR,cACA,EAMQ,EANR,MACA,EAKQ,EALR,SACA,EAIQ,EAJR,UACA,EAGQ,EAHR,SACA,EAEQ,EAFR,SACA,EACQ,EADR,OACA,EAAQ,EAAR,SACG,EAAK,mBAXyC,0GAajD,OAAI,GAAY,GAGZ,EADE,EACW,KAEA,EAAQ,iBAAa,EAAb,YAAyB,GAAzB,iBAA0C,EAAM,MAAM,SAAtD,YAAkE,GAIvF,gBAAC,EAAmB,MACjB,gBAAG,EAAH,EAAG,QAAH,OACC,yCACE,IAAK,EACL,OAAQ,EAAW,KAAO,EAAM,MAAM,WAAa,EACnD,UACE,EACI,cAAI,mBAAoB,EAAW,EAAa,IAChD,cAAI,mBAAoB,EAAM,MAAM,UAAW,EAAa,IAElE,GAAI,EAAW,EAAH,yBAA0B,EAAM,MAAM,SAAtC,YAAkD,GAAI,aACtD,EAAS,kBACJ,EACjB,KAAK,WACL,SAAU,GACN,YAAa,aAAc,EAAQ,GACnC,GAEH,GAAY,EAAM,MAAM,cAM5B,MAGI,EAAa,cAAiB,SAAC,EAAwB,GAAzB,OACzC,gBAAC,EAAc,iBAAK,EAAK,CAAE,SAAU,SFlEvC,SAAY,GACRsK,EAAF,UACA,YAFF,CAAY,MAAa,KAiDzB,IAAM,EAAe,CACjB,QAAO,GACP,SAAQ,IAAO,UAAU,sBAWhB,EAAb,YAAE,qBAAF,iBAGI,SAAF,EAAY,GAAgB,kCACtB,EAAJ,YAAM,IAFR,QAAU,cAsDV,sBAAsB,WACpB,IAAM,EAAY,EAAK,QAAQ,QAC/B,GAAI,IAAc,EAAK,MAAM,WAAY,CAEvC,IAAM,GAAkB,YAAgB,EAAW,EAAU,YAA2B,GAGlF,GAAmB,YAAgB,EAAW,EAAU,WAA0B,GAElF,EAAoB,GAAkB,EAEtC,GAA2B,EAC3B,GAA4B,EAE1B,EAAH,SAAS,CACF,kBAAV,EACU,wBAAV,EACU,yBAAV,MAKF,EAAJ,WAAa,WAEL,GAAF,EAAK,QAAQ,QAAS,CACxB,IAEI,EACA,EACA,EAJE,EAAY,EAAK,QAAQ,QACzB,EAAc,MAAM,KAAK,EAAU,UAIzC,IAAK,EAAI,EAAG,EAAI,EAAY,SAAW,EAAoB,IACrD,YAAgB,EAAW,EAAY,IAAmB,KAC5D,EAAqB,EAAY,GACjC,EAAuB,EAAY,EAAI,IAGvC,IACF,EAAU,YAAc,EAAqB,eAKnD,cAAc,WAEZ,GAAI,EAAK,QAAQ,QAAS,CAKxB,IAJA,IAEI,EACA,EAHE,EAAY,EAAK,QAAQ,QACzB,EAAc,MAAM,KAAK,EAAU,UAGhC,EAAI,EAAY,OAAS,EAAG,GAAK,IAAM,EAAmB,IAC7D,YAAgB,EAAW,EAAY,IAAmB,KAC5D,EAAoB,EAAY,GAChC,EAAwB,EAAY,EAAI,IAGxC,IACF,EAAU,YAAc,EAAsB,eA3G9C,EAAC,MAAQ,CACL,mBAAa,EACb,yBAAmB,EACnB,0BAAoB,EAC1B,UAAW,CAAC,EAAK,MAAM,WACvB,YAAa,YAAiB,EAAK,cAPX,EAH5B,uBAAE,IAAJ,iBAAI,MA8BF,SACE,EACA,EACA,EACA,GAAqB,IAEb,EAAc,KAAK,MAAnB,UACF,KAAD,MAAM,SAAS,EAAO,GAEvB,IACF,WAAe,QAAQ,KAAK,MAAM,UAC/B,KAAI,YAAK,OAAI,KACb,QAAO,YAAK,OAAI,EAAM,OAAS,EAAM,MAAM,eAAiB,EAAM,MAAM,cAAc,WACtF,SAAQ,YAAK,OAAK,EAAM,MAAM,cAAc,QAAQ,QAAS,KAE5D,EAAc,UAChB,EAAc,QAAQ,QAAS,IAG/B,GACF,KAAK,SAAS,CACZ,UAAW,EAAU,OAAO,OAnDpC,CAAI,IAAJ,oBAAI,MAqHF,WACO,KAAK,MAAM,aACV,KACF,OAAO,iBAAiB,SAAU,KAAK,qBAAqB,GAG9D,KAAK,yBA3HX,CAAI,IAAJ,uBAAI,MA+HF,WACO,KAAK,MAAM,YACV,KACF,OAAO,oBAAoB,SAAU,KAAK,qBAAqB,KAlIvE,CAAI,IAAJ,qBAAI,MAuIF,SAAmB,GAAoB,MACD,KAAK,MAAjC,EAD6B,EAC7B,UAAW,EADkB,EAClB,aACX,EAAc,KAAK,MAAnB,UACJ,EAAU,YAAc,GAAa,GAAgB,EAAU,QAAQ,GAAa,GACtF,KAAK,SAAS,CACZ,UAAW,EAAU,OAAO,OA5IpC,CAAI,IAAJ,SAAI,MAiJF,WAAM,WACE,EAoBF,KApBE,MACJ,EAiBO,EAjBP,UACA,EAgBO,EAhBP,SACA,EAeO,EAfP,UACA,EAcO,EAdP,GACA,EAaO,EAbP,SACA,EAYO,EAZP,YACA,EAWO,EAXP,WACA,EAUO,EAVP,MACA,EASO,EATP,oBACA,EAQO,EARP,qBACc,EAOP,EAPP,cACA,EAMO,EANP,UACA,EAKO,EALP,OACA,EAIO,EAJP,SACA,EAGO,EAHP,aACA,EAEO,EAFP,cACA,EACO,EADP,MACA,EAAO,EAAP,QACG,EAAK,mBAnBJ,oOADF,EAsBwF,KAAK,MAAzF,EAtBJ,EAsBI,kBAAmB,EAtBvB,EAsBuB,wBAAyB,EAtBhD,EAsBgD,yBAA0B,EAtB1E,EAsB0E,UACxE,EAAoB,WAAe,QAAQ,GAC9C,OAAO,SACP,QAAO,YAAK,OAAK,EAAM,MAAM,YAE1B,EAAW,GAAM,cACjB,EAAiB,IAAc,EAAc,IAAM,MAAQ,MAEjE,OACE,gBAAC,EAAmB,CAAC,MAAO,CAAE,YAC5B,gBAAC,EAAS,4BACI,EACZ,UAAW,cACT,IAAO,KACP,GAAY,IAAO,UAAU,KAC7B,GAAe,IAAO,UAAU,UAChC,GAAc,IAAO,UAAU,SAC/B,GAAS,IAAO,UAAU,IAC1B,IAAsB,GAAc,IAAO,UAAU,WACrD,YAAqB,EAAO,KAC5B,EAAa,GACb,IAEE,YAAa,EAAK,iBAAwB,IAAX,EAAuB,EAAS,KAAK,MAAM,YAAa,GAAS,CACpG,GAAI,GAAM,GACN,GAEJ,0BACE,UAAW,cAAI,IAAO,iBAAkB,GAAe,IAAa,UAAU,WAAU,aAC5E,EACZ,QAAS,KAAK,WACd,SAAU,EAAuB,cACpB,GAEb,gBAAC,IAAa,OAEhB,sBAAI,UAAW,cAAI,IAAO,UAAW,IAAK,KAAK,QAAS,SAAU,KAAK,qBACpE,EAAiB,KAAI,SAAC,EAAO,GACtB,MAWF,EAXE,MACJ,EAQQ,EARR,MACA,EAOQ,EAPR,SACA,EAMQ,EANR,cACI,EAKI,EALR,GACA,EAIQ,EAJR,aALI,EASI,EAHR,UAAW,OANP,MAMwB,GANxB,EAOI,EAEA,EAFR,OAGG,GADK,EAAR,SACO,mBAVH,2FAYF,EAAe,EAAY,UAAM,GAAN,yBAAyC,EAAzC,YAAqD,GAAW,GAI/F,OAHK,GAAgB,IAAkB,IAAa,IAClD,OAAe,GAGf,sBACE,IAAK,EACL,UAAW,cAAI,IAAO,SAAU,IAAa,GAAa,IAAO,UAAU,QAAS,IAEpF,gBAAC,EAAS,eACR,UAAW,cAAI,IAAO,UACtB,QAAS,SAAC,GAAD,OAAgB,EAAK,eAAe,EAAO,EAAU,EAAe,IAC7E,GAAE,iBAAY,EAAZ,YAAwB,GAAW,GAAU,gBAChC,EACf,cAAe,EACf,OAAQ,GACJ,GAEH,QAMX,0BACE,UAAW,cAAI,IAAO,iBAAkB,GAAe,IAAa,UAAU,WAAU,aAC5E,EACZ,QAAS,KAAK,YACd,SAAU,EAAwB,cACrB,GAEb,gBAAC,IAAc,QAGlB,EACE,QACC,YAAK,OACH,EAAM,MAAM,YACV,GAAiB,EAAM,MAAM,WAAa,MAC1C,IAA6D,IAA7C,EAAU,QAAQ,EAAM,MAAM,cAEnD,KAAI,SAAC,EAAO,GAAR,OACH,gBAAC,EAAU,CACT,IAAK,EACL,UAAW,EACX,MAAO,EACP,GAAI,EAAM,MAAM,IAAM,EACtB,OAAQ,EAAM,MAAM,iBAxQlC,GAA0B,aACjB,cAAc,OAad,eAAwC,CAC3C,UAAS,EACT,SAAQ,aACR,UAAQ,EACR,aAAW,EACX,YAAU,EACV,OAAK,EACL,oBAAmB,cACnB,qBAAoB,eACpB,UAAS,EAAc,IACvB,cAAY,EACZ,eAAa,EACb,UAAQ,EACR,QAAO,Y,oBGvGb,sXCCA,aAkDA,MACAC,+CACAC,8DAEAC,YACAC,aAEAC,uBACAC,6DAEAC,OACAC,KACAC,mBAEAC,6DACAC,MAKAC,MAwoFA,cACA,UACA,wBAKA,cAMA,IALA,QACAC,IACAC,WACAC,UAEA,MAGA,IAFAC,YACAC,aACA,aACAF,KAIA,wCAEA,yBAKA,gBACA,QACAG,MACAC,MACAN,MACAC,MACAM,MACAC,MAGA,sBAMA,GAJAC,WACAC,WAGA,uBAGA,iBAMA,GAJAD,MACAC,QAGA,2BAGA,wBAKA,IAHAT,gCAGA,kDAGA,yBAOA,oBACA,sBACA,YACAT,sCACAmB,+CACA,wCAMA,cACA,mBACA,gCAIA,gBACA,iDACAC,gBAIA,kBACA,QAGA,QAGA,sBACAC,WAOA,QAHAC,YAGA,CACA,uBACAD,UACAD,MACAC,+BAIA,UAOAE,EA9vFA,cACA,UA0kBAC,EAMAC,EAkJAC,EAshBAC,EACAC,EACAC,EACAC,EACAC,EA3vCAC,yDACAC,WAUAC,KAaAC,IAMAC,KAIAC,KAMAC,OAKAC,MAGAC,KAkBAC,IAIAC,IAGAC,GACAC,UACAC,YACAC,qBACAC,mBACAC,qBACAC,oBACAC,8BACAC,WAMAC,yCAgBA,gBACA,oBACA/d,OAGA,uCAEA,YAEA,0BAYA,OAXAA,cAEA0C,WACA1C,aACA0C,MACA1C,aAEAA,QACAA,kBAMA,mCAMA,GAHAA,sBAGA,SACA,6BASA,YAPAkd,IACAld,cAEAA,MACAA,UAMAgc,gBACA,CAEA,wCAEAhc,6CAIA,4CAGA,sBAGA+b,WACAA,iBACAC,oBACAD,MAGAA,gBAGA,CAOA,GAJAiC,uBAIA,MAEA,SADAhe,WACA,WAKA,GAFAgc,YAEA,sBAGA,4BAKA,GAHAhc,8BAGA,6CACA,YACA4a,UAGA5a,6CAQA,IALAie,eACAlC,MAIA,mBACA,+BACA,WAGA,QACAA,IACA,eAEA,QAGAC,yCACAA,0CACAkC,KACA/C,KACAY,IACA,SAIA,0BAKAoC,MAIA,MAHAnC,iBAGA,kCACAD,WAIA,kCAGA,wCAEA,qBAIA,GAHAE,KAGA,YACA,sBACA,YACArB,SAIA,eAGA5a,kBAGA,OAGAA,gBACA,CAWA,GAVAA,MACAA,OAMAmb,UACAY,YAEA,KAGA,IAFAZ,2BAEA,UACAnb,2BAGAmb,+BAEAA,KAGA,iBACAnb,mBAKAA,YAicA,oBAOA,IANA,MAEAoe,EADAC,MAEAlD,IACAc,WAEA,MACA,4BAIA,IAFAoC,+BAEA,mBAEAA,WACA,yBACAA,iBACAA,SAKA,mBA4HA,kBACA,YACAC,IACAnD,WACAoD,MACAC,QAEA,qBAKAF,IADAG,KAHAC,WAEAC,OADAC,YACAD,GACAF,OACAH,iBACAte,SAKA,OAFAse,qBAEA,EAGA,oBACA,QAEA,QACAO,gBAGA,kBAEA,eACAA,iBACA,MAKA,SAGA,oBAIA,IAHA,QAGA,KACAjD,QACAT,gBACAS,mBAIA,uCAsNA,oBACA,cAKA,GAHA,YACAoC,UAEA,wBAKA,GAHAc,SACAC,MAEA,QACA/C,SACAA,2BACAgD,OACAC,gBAeA,GAVAlD,GAHAD,mBAGAC,EAGAE,GADAD,UACAC,OAOA,0BAGA,qBACAD,cAQA,GAJAb,KACAa,aAGA,OACA,sCAGA,MADAb,QAGA,IADAY,iBACA,YAMA,wBAKA,gBAKA,IAJA,MACAZ,IACAwD,cAEA,gBAIA,KAHA7C,eAGA,GACA6C,IACA,MACAO,cACAP,KAIA,SAQA,kBAKA,IAJA,QACAvD,YAGA,gBAGA,4BAkBA,OAfAW,aAGAD,aAGAC,IAGAD,aAEAA,MACAA,OAGA,EA0DA,oBACA,kBACAN,MACA2D,IAGA,MAQAC,GAGA,gCAIA,IAHAjE,OAGA,EACAA,KACAC,IAIAiE,GAHAvD,UAGAuD,mBAIA,IAFAC,eAEA,UAEA,MASA,QANA,4BACAxD,MAGAV,GADAD,MACAC,GAFAmE,SAMA,CAIA,IAHAzD,SAGA,qBAUAuD,GAHAjE,GAJAD,MAIAC,KAGAiE,oBAmBA,GAfAhE,UAKA,iCAEAA,OACAgE,8BACA,4BAGA,iCACAG,gBAEA,WAiBA,OAhBAhE,WAEAH,GAGAoE,SAGAjE,kBACAxb,WAIAwb,WAGA,EAkBA,GAdA,MACAA,WACAE,IACA4D,MAEA9D,aACAE,SAIAF,+BAIA,EAEA,QAGA,SAGA,gCAEA,IADAJ,UACA,qBAGAD,OACAnb,MACAwb,mBAGA,MAGA,GADAA,QACA,cACAA,SACAE,IAMA,oCAIA1b,MACAA,aAGAA,QACAA,aAIA,SAIA,eACA,MACA+b,MAEA,8BAEAC,SAEAA,aACAgD,OACAC,WAEAnD,eAiqCA,OAv0EAI,UAEAA,aACAA,eACAA,eACAA,gBACAA,kBACAA,oBACAA,oBACAA,oBACAA,qBACAA,WAqCAA,2BACA,QAEA,YAEA,sBA2HA,YACAvB,yBAtFA,GAlCA5qB,uCAEAiuB,EADAtb,OACAsb,OACAnB,KAKA9sB,sCAEAiuB,EADAtb,OACAsb,OACAlB,KAOA/sB,wCACA2S,SACAA,OACAsb,eACAA,cACAjB,OACAC,SAEAgB,YACAjB,kBAOA,4BAEA,IADAra,SACA,MACAsb,gBACAA,cACAf,OACAC,WACA,CAEA,GADAc,aACA,EAGA,YACArD,2BAHgBsC,IAAhBA,YAWA,iCAEA,IADAva,YACA,EAcA,YACAiY,8BAdA,MACA,yCACA+E,4CAIA,MADAvC,KACA,MACAxC,wBAJkBwC,EAAlBA,OAOAA,IA0BA,GAhBAptB,oCAEAiuB,EADAtb,OACAsb,OACAZ,KAKArtB,sCAEAiuB,EADAtb,OACAsb,OACAX,KAKA,8BAEA,oBADA3a,QAEA,YACAiY,0BAFA,IAOA,mCAKA,oBAJAjY,SAIA,8BAGA,YACAiY,oBAHAoD,KAeA,OACAlB,iBACAC,gBACA6C,qBACAC,YACAzC,SACAC,cACAC,gBACAC,SACAS,aAcA7B,0BACA,oCACA,qBAEA,QACA2D,MACA9D,MACAT,MAEA8D,4CAEA,2CAGA,aACA,gCACA,QASA,IALAjE,WACA,UAIA,wBAEA,uBAEA,IADAW,QACA,0BAIA,yBAKA,iDACA,SAGA,YACAnB,4BASAuB,2BACA,0BASAA,2BACA,0BAcAA,UACAC,mBAMAC,0BACA,sCACA,wDACA,0BAEA,YACA,cACAjB,IACA0E,KACAC,WAOA,GALA,YACA9B,SAEAtC,SAEA,EAGA,2BAIA,IAFAE,gDAEA,KAcA,OANAlZ,8BAOAmZ,6CACAD,UACAA,cAKAiE,eACA1E,MAGAA,UAGA,wBA2BA,MADAgC,KACA,MACAxC,wBAvBA,IAFAiB,2BAEA,KAUA,OAJAlZ,iDACA,mCACAkZ,gCAGA8D,iCAIAG,eACA1E,MAGAA,MASA,MAEA,WACAzY,OACA,sBAcA,IAVAgZ,SACAqE,KAGArE,OACAhZ,SACAmd,eAIA,sBAGA,OACAA,YACA,CAGA,sCAGA,gCAGA1E,cAKA,OAFA2E,MACAA,MACA,IAUA5D,iBAIA,IAHA,QACA8D,YACAC,cACA,6BACA,UASA5D,eADA6D,EAoCA,oBACA,oBACA/E,iBACA4E,IACAP,IA+BA,IA5BA,OACA9D,IAGA2B,IACArB,oBAEAhc,GADA0B,YACA1B,gBACAqd,IAKA3b,wBACA,QACAA,gBAUAqa,KALAP,aACAyC,QACAA,SAGAlC,OAGA,mBAGA,4BAqCA,GAlCAZ,MACAY,GAEA/b,MACAA,MAGAA,MAEAwb,GADAxb,gBACAwb,EACAH,MACAU,OASAZ,IAHAoE,SAOA7D,MACAL,uBAEAA,2CACAK,qCACA8D,gBAKA,WAGAxD,kDACA,CAMA,GAHAR,WAGA,EAGA,oBACAA,OAEA+D,MACAxD,EACAP,iBAMA,yBAGA,uCAGAQ,qBAIA,UAMAmE,EA0DA,oBACA,kCACAC,IACA9E,gBACAE,MACAC,MAGA,uBAEA,aAGAzb,+BAGAwb,uBAHAxb,KAoBA,IAZAqgB,GADAC,YACAD,KAEA/E,KADAS,WACAT,EAEAiF,IACAA,IACAxE,oBACAT,SAKA,yBAIA,GAFAG,oBAEA,IACA4E,UACAG,SACA,CAwBA,IAvBAC,WACAL,WAEA9E,KAQA,GAJAQ,SALAX,KAKAW,OAKAL,WACAD,WACA4E,WACAK,YAGAC,IAEAC,GADAC,gBACAD,OAGA,cACAE,YACAA,gBACAC,OACArF,eAIA,GAOA,GANAK,KAGA+C,cAGA,GAqBA,GAjBAkC,OACAX,wBAgBA,GAbAtE,UA2BA,IAXAyE,cAIAS,GADAC,YACAD,OACAL,WAMA,eACA7E,IAGAoF,iBACAF,WACAnC,SAQA,OAGAA,OAKAmC,GADAC,aACAD,OAUA,GAPAA,uBAGAE,WACAP,YAGA,KAMA,mBACA7E,IAGAoF,iBACAP,gBAGA,QACA7E,IACA8E,OAIAP,SAGAO,KACAA,gBAEAA,SACAD,YAEAD,yBAEAF,aAGAH,oBAGA,SAGA,gCAEAc,gCAIAb,MACAA,OAGA,UAkIAhE,gCACAC,gBACAC,gBACAC,uBACAC,+BALA0E,EAOA,kBACA,MACA9F,sBAGA,aACAtb,+BACA,CACA,QAGAsb,+BAEA,OADAiF,yCACA,eAGA1E,IACA0E,IAGAjF,uCAGAU,wBAKA,WACA,YACArB,2CAIA3a,SAGAA,cA6LA2c,iCACA,kBAEA,OADA3c,eACA,GAWA2c,2BACA,2BAiBAA,mCACA,UAGA,WAKA,OAJAqB,SACA,YACAA,SAEA,QAPAprB,MAOA,EAPAA,KAOA,OAGA,OAVAA,KAUA,eAIA,GAHAkpB,iCAGA,+BAGA,OAFAA,WAEA,GAwBAa,gCACA,+BAQAA,0CACA,+BAmBAA,sCACA,oBACA3c,OAKA,IAHA8b,YAGA,kBACA,YACAnB,qCASA,GANA,sBAGA0G,UAGA,4DAKA,OADA3f,0CACA,aAKA,GAFA4f,QAEA,GAGA,uCAEAC,sCAEAvhB,gBAIA,mCAEA,0BAEAA,oCASA,OANA0b,oBAGA,eAGA,eAEA2B,IAKA3B,YAeA,IATA8F,EAHAH,GACAI,YACAH,WACAE,OAEArG,oBACA,EAGAzZ,aAGA,CAEA,MAEA,KADAA,cACA,QAEAga,EACAha,6BACA6f,IACA7f,YAIA,MAEA,QADAyZ,UACA,MACAqG,WAKA,GAFAL,EADArF,aACAqF,SAEA,OACAK,WACA,CAEA,OADArG,UACA,MACAqG,MAIAxhB,aAEA0b,EACA1b,kCACAuhB,IACAvhB,YAIA,YACAshB,gBAEA3C,iCAYAhC,2BACA,kBAGA,OAFA,YACAqB,SACA,cAQArB,+BACA,+BAOAA,sBACA,gBAQAA,mCACA,6BAQAA,6CACA,0CAQAA,uBACA,6CAQAA,gCACA,6BAQAA,0CACA,0CAOAA,mBACA,eAOAA,wBACA,iBAOAA,wBACA,iBAOAA,oBACA,8BAwBAA,sBACA,YACA3c,OACA4b,MAMA,GAHAC,GADAna,cACAma,GAGA,wBAGA,QAEA,OADAna,OACA,UAGA,YACAggB,QACAlG,MACAC,MAEA,WAGA,6CAGA,gBAGA,oCAGA,WASA,GALAkG,OACAD,OACAlG,YAGA,OAaA,KATA7X,GAFAie,QACAhG,KACAjY,IAEA+d,IACAjG,IAGAoG,UAGA,mBACAle,iBAMA,IAFAyX,oCAEA,cAEA,eACAwG,YACA,MAYA,GANAA,0BAMA,GAJA/F,6BAIA,mBAIA,IAHAA,MAGA,MAEA,gBACA,6BACAL,KACAA,QAGAA,WAIA,gCAGA,YAWAsG,UAPApgB,cACAA,YACAA,IA8BAib,6BACA,QACA3c,OAKA,OAHA0B,cAGA,wBACA,YAGAA,kBACA,UAGA,MAIA4Z,MACA5Z,MACA4e,aACA5e,MACA4e,QAEAA,cAGA5e,uBAGAme,sBAEAne,IAwBAib,qCACA,8BACA4D,IACAvgB,OACAwb,MACAC,mBAGA,uBAmBA,OAhBAzb,sCACA0B,kBAEAA,SAGA8Z,MAKA9Z,QACAA,OALAA,cASA,EAYA,IATAqa,oBACAra,UACAqgB,aACAC,cAGAC,yBAGA,0BAKA,IAHA1B,IACA2B,IAEA,aAKA,IAJArC,IACAsC,SACAC,WAEA,eAKAvC,IADAnB,KAHAA,aAEAC,OADAC,YACAD,GACAD,YACAmB,iBACAoC,WAGAA,OASA,OANApC,IACA9D,EAEAkG,cAGA,UAQAtF,qBACA,kBAEA,OADA3c,eACA,GAwBA2c,qBACA,MACA3c,OACA4b,MAMA,GAHAC,GADAna,cACAma,GAGA,wBAGA,QAEA,OADAna,OACA,WAGA,YACAggB,QACAlG,MACAC,MAEA,WAGA,4BAIA,gDAQA,GALAkG,OACAD,OACAlG,YAGA,OAUA,KAPA7X,EAFA,KACA+d,IACA/d,IAEAiY,KACAJ,IAGAqG,UACA,eACAle,YAUA,KAPAiY,aACAC,YAGA,qBAGA,OACAD,2BACAJ,uBAUA,OAPAI,IACAJ,kBACAkG,GAKA,UAmBA/E,+BACA,UAGA,oBAKA,OAJAqB,SACA,YACAA,SAEA,QAPAprB,MAOA,KAGA,OAVAA,KAUA,eAIA,GAFAkpB,GADApZ,cACAoZ,IAEA,QAGA,wBAGA,6BAKA,OAFA2D,GAvBA7sB,KAuBA6sB,UAvBA7sB,KAuBA6sB,KAEA,GAYA9C,wBAEA,OADAqB,UACA,oBAeArB,+BACA,cACA3c,OACA6f,MACAvE,MACAS,MACAgE,MACA0B,eAGA,oBACA,8CA8BA,IATApG,EAbA,IAJAC,sBAIA,UACAQ,QACAzsB,yBACAisB,gBACAS,wBASAV,MANAS,EADAR,OACAQ,QAEAA,qBACAuG,8BAKA,aAOA,KAMA,KAJA/G,GADAS,OACAT,GACA,WAOA,GAHA3X,IACA0X,8BAEA,2CAWA,GANAA,WAMA,SALAS,sBAKA,cAgBA,EAIAA,qCAGAqF,eACAxC,qBAGA,MAvBA,QACAwC,eAEAxd,mBACkB0X,EAAIA,EACJ,MAIlB0E,KACAzE,KACAgH,IAkBA,yBAaA3F,8BAKA,OAJA,UACAqB,SACA+B,KAEA,eAgBApD,wBAKA,OAJA,UACAqB,SACA+B,cAEA,aA6BApD,2BACA,MAGA,WACA,gCACA9kB,IACA2nB,QACAO,uBACAloB,IACAkoB,UAEAloB,SAEA,sBACA,YACA8iB,gCAKA,GAFAqB,EAjBAppB,KAiBAopB,aAjBAppB,KAmBA,GACA,MACAyrB,eACAkE,eACAC,wBACA9E,uBACA+E,OACAC,OACAC,EA3BA/vB,KA2BA+vB,IACAC,iBACA3G,WAIA,GAFAuG,oBAEA,UAGA,IAFArH,SACAsH,gBACA,4BACA,uBACAE,aAGA3G,IACAyG,qDACAC,0CACA,qCACAA,GACAD,EAGA,uCAeA9F,yBACA,4BACA3c,OACAwb,MAEA,eACAM,YAGA+G,sCACA,YACAlI,eACAmB,0DAIA,sBAoBA,IAlBAyD,WACAuD,aACAC,aACAzH,OAIAS,qBACAwD,0BACA7W,kCAEAsa,IACA9F,MACApB,WAGAmH,SAGA3C,aAEA,IADA4C,sBACA,eACAC,IACAJ,IACAD,uBACAG,IACA1D,wBACAzD,IAeA,OAZAoH,sBACAD,qBACAE,qBACAF,YAIA5H,QAHAU,KAGAV,6BACA8E,yCAEAjD,IAEA,GAOAP,sBACA,iBAeAA,4BAEA,OADA,kBACA,eAeAA,uBACA,MACAb,OACAR,MACAS,MA0BA,OAvBA,SACAT,GACAU,aACAV,gBAEAU,SAIAA,EADA,QACAA,WACAgD,YACAC,gBACA,OAEAA,KADAnD,uBACAmD,aAEAjB,uBACAkC,8BAGA5E,wBAGA,GAQAqB,8BACA,iBAIAA,kBAEAnC,IACAmC,kCAGAA,uDAGA,kBAEA,EAxnFA,IA+vFA,+BAOA,aACAyG,aAKAC,EADAA,IACAA,6CAGAnH,YD51FA,CC81FAtpB,2CCx0FAwwB,EAAOnK,QAAU,CACbqK,YAAa,QACbC,WAAY,CACRC,UAAW,IACXnH,QAAS,KAEboH,cAAe,CACXC,SAAU,IACVC,QAAS,IACTC,QAAS,IACTC,SAAU,KAEdC,kBACAC,QAAS,SAAS5J,GACd,IAAI0B,EAAI1B,EAAS,GACjB,OAAkC,MAAvBA,EAAS,IAAM,IAAa,KAAc,GAAN0B,EAAW,KAAc,GAANA,EAAW,KAAc,GAANA,EAAW,KAAO,MAE3GmI,MAAO,CACHC,eAAgB,CAAC,IAAK,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACvEC,gBAAiB,CAAC,IAAK,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAErEC,SAAU,CACNC,OAAQ,IACR/vB,SAAU,SACVgwB,KAAM,OAEVC,eAAgB,CACZC,qBACAC,YAAa,EACbV,kBACAW,2BAEJC,QAAS,CACLC,WAAY,CACRH,YAAa,EACbV,mBAEJc,oBAAqB,CACjBC,OAAQ,WACRN,qBACA5L,SAAU,GAEdmM,8BAA+B,CAC3BP,qBACA5L,SAAU,GAEdoM,mBAAoB,CAChBF,OAAQ,WACRN,qBACA5L,SAAU,whBCjDtB,IAAMqM,EAAc7L,EAAQ,iBACtB8L,EAAa9L,EAAQ,gBACrB+L,EAAU/L,EAAQ,aAElBgM,EAAS,CACXtB,SAAUz3B,KAAKgN,IAAI,GAAI,IACvBwqB,QAASx3B,KAAKgN,IAAI,GAAI,GACtBuqB,QAASv3B,KAAKgN,IAAI,GAAI,GACtBsqB,SAAUt3B,KAAKgN,IAAI,GAAI,IAGrBgsB,EAAiB,CACnBZ,YAAa,EACba,eAAgB,EAChBC,gBACA5M,WACAC,UAAW,EACX4M,oBACAhB,qBACAT,kBACA0B,SAAU,OACVC,aACAC,iBAAkBt5B,KAAK+0B,MACvBwE,+BAA4B,EAGYX,EAAYY,eAAhD3B,mBAAgBC,oBAElBF,EAAQ,CACV6B,QAAS,CAAEC,MAAO,KAAMC,SAAU7B,EAAiB8B,OAAQ,MAC3DC,OAAQ,CAAEH,MAAO,KAAMC,SAAU9B,EAAgB+B,OAAQ,KACzD3J,QAAS,CAAEyJ,MAAO,IAAMC,SAAU7B,EAAiB8B,OAAQ,MAY/D,SAASE,EAAOC,GAAuC,IAA7BC,EAA6B,uDAAZ,GAAI3N,EAAQ,uCAOnD,GAN8B,iBAAnB2N,IACPA,EAAiBlB,EAAQmB,YAAYD,KAG7BnB,EAAWqB,eAAeF,GAGlC,MAAO,wBAGX,IAAI7I,EAAS6I,EAAe7I,QAAU,GAClCgJ,EAAUH,EAAeG,SAAW,GAEpC1B,EAcR,SAAsBsB,EAAUC,EAAgB3N,GAC5C,OAAQ2N,EAAevB,QACnB,IAAK,WAED,OA0MZ,SAAwBsB,EAAUC,EAAgB31B,GAC9C,IAAM+1B,EAAkB/1B,EAAM+1B,kBAC1B71B,EAAUtC,OAAOC,OAAO,GAAI82B,EAAgBgB,GAC5CzI,SACA8I,EAAQ,GACR/N,IAAY/nB,EAAQ6zB,eAAiB7zB,EAAQ20B,cAAgB30B,EAAQ+nB,QACrErkB,EAAW+xB,EAAeM,kBAAoBF,EAAgBnyB,SAC9D+vB,EAASgC,EAAeO,gBAAkBH,EAAgBpC,OACxDK,WAAyB9zB,EAAQ8zB,uBACjC9zB,EAAQ8zB,uBAAyB9zB,EAAQmzB,wBAE3CsC,EAAevN,eACfuN,EAAevN,iBAGf4L,IACAgC,EAAQ,KAGK,UAAbpyB,IACAspB,EAAmB8I,EAAQrC,EAASqC,GAGxC,IAAI5B,EAAS+B,EAAa,CACtBT,WACAC,iBACA31B,QACAktB,qBAkBJ,MAfiB,WAAbtpB,IAEIwwB,EADAsB,EAASU,OAAS,GAA0B,SAArBl2B,EAAQ60B,SACzB,WAAOiB,GAAP,OAAerC,GAAf,OAAwBS,EAAOxC,MAAM,IAClB,EAAlB8D,EAASU,QAAcl2B,EAAQ80B,UAChC,WAAOgB,GAAP,OAAerC,GAAf,OAAwBS,EAAOxC,MAAM,IAElC+B,EAASqC,EAAQ5B,GAI7BxwB,GAAyB,YAAbA,IAEbwwB,EAASA,GADT4B,GAAS91B,EAAQg1B,4BAA8BjN,EAAU,GAAK+N,GACpCrC,GAGvBS,EA7CX,CA1MkCsB,EADtBC,EAAiBU,EAAgBV,EAAgBpB,EAAY+B,gCACb/B,GAEpD,IAAK,UAED,OA4KZ,SAA0BmB,EAAUC,EAAgB31B,EAAOgoB,GACvD,IAAIuO,EAAeZ,EAAeY,aAE9BnC,EAAS+B,EAAa,CACtBT,SAAU1N,EAAyB,IAAlB0N,EAASU,QAC1BT,iBACA31B,UAEAE,EAAUtC,OAAOC,OAAO,GAAI82B,EAAgBgB,GAEhD,OAAIY,EACO,IAAP,OAAWr2B,EAAQmzB,eAAiB,IAAM,IAA1C,OAA+Ce,GAGnD,UAAUA,GAAV,OAAmBl0B,EAAQmzB,eAAiB,IAAM,GAAlD,KAdJ,CA5KoCqC,EADxBC,EAAiBU,EAAgBV,EAAgBpB,EAAYiC,kCACXjC,EAAavM,GAEnE,IAAK,OAED,OAiGZ,SAAoB0N,EAAUC,EAAgB31B,EAAOgoB,GACjD,IAAI8H,EAAO6F,EAAe7F,MAAQ,SAC9B5vB,EAAUtC,OAAOC,OAAO,GAAI82B,EAAgBgB,GAFSc,EAI8Bz2B,EAAMm1B,eAArEuB,EAJiCD,EAIjDjD,eAAsDmD,EAJLF,EAIZhD,gBAOzCmD,EALe,CACfxB,QAAS,CAAEC,MAAO,KAAMC,SAAUqB,GAAwBlD,EAAiB8B,OAAQ,MACnFC,OAAQ,CAAEH,MAAO,KAAMC,SAAUoB,GAAuBlD,EAAgB+B,OAAQ,KAChF3J,QAAS,CAAEyJ,MAAO,IAAMC,SAAUqB,GAAwBlD,EAAiB8B,OAAQ,MAE7DzF,GAX+B2G,EAajCI,EAAmBnB,EAASU,OAAQQ,EAAStB,SAAUsB,EAASvB,OAAlF72B,EAbmDi4B,EAanDj4B,MAAO6uB,EAb4CoJ,EAa5CpJ,OAET+G,EAAS+B,EAAa,CACtBT,SAAU1N,EAAOxpB,GACjBm3B,iBACA31B,QACA82B,SAAU92B,EAAM+2B,6BAGpB,gBAAU3C,GAAV,OAAmBl0B,EAAQmzB,eAAiB,IAAM,IAAlD,OAAuDhG,GAtB3D,CAjG8BqI,EADlBC,EAAiBU,EAAgBV,EAAgBpB,EAAYwC,4BACjBxC,EAAavM,GAC7D,IAAK,OAED,OADA2N,EAAiBU,EAAgBV,EAAgBpB,EAAYyC,4BAqJzE,SAAoBtB,GAChB,IAAIuB,EAAQt7B,KAAKwV,MAAMukB,EAASU,OAAS,GAAK,IAC1Cc,EAAUv7B,KAAKwV,OAAOukB,EAASU,OAAkB,GAARa,EAAa,IAAO,IAC7DE,EAAUx7B,KAAK+0B,MAAMgF,EAASU,OAAkB,GAARa,EAAa,GAAiB,GAAVC,GAChE,gBAAUD,EAAV,YAAoBC,EAAU,GAAM,IAAM,IAA1C,OAA+CA,EAA/C,YAA2DC,EAAU,GAAM,IAAM,IAAjF,OAAsFA,GAJ1F,CApJ8BzB,GACtB,IAAK,UAED,OA6HZ,SAAuBA,EAAUC,EAAgB31B,GAC7C,IAAIo3B,EAAYp3B,EAAMq3B,iBAClBn3B,EAAUtC,OAAOC,OAAO,GAAI82B,EAAgBgB,GAE5CvB,EAAS+B,EAAa,CACtBT,WACAC,iBACA31B,UAEAszB,EAAU8D,EAAU1B,EAASU,QAEjC,gBAAUhC,GAAV,OAAmBl0B,EAAQmzB,eAAiB,IAAM,IAAlD,OAAuDC,GAX3D,CA7HiCoC,EADrBC,EAAiBU,EAAgBV,EAAgBpB,EAAY+C,+BACd/C,GACnD,IAAK,SACL,QACI,OAAO4B,EAAa,CAChBT,WACAC,iBACA3N,YAxBhB,CAd8B0N,EAAUC,EAAgB3N,GAGpD,OAFAoM,EAA8BtH,EAARsH,GACS0B,EAsFnC,SAASe,EAAmBr4B,EAAO82B,EAAUD,GACzC,IAAIhI,EAASiI,EAAS,GAClB9sB,EAAM7M,KAAK6M,IAAIhK,GAEnB,GAAW62B,GAAP7sB,EAAc,CACd,IAAK,IAAI+uB,EAAQ,EAAGA,EAAQjC,EAAS12B,SAAU24B,EAAO,CAClD,IAAIC,EAAM77B,KAAKgN,IAAI0sB,EAAOkC,GACtBE,EAAM97B,KAAKgN,IAAI0sB,EAAOkC,EAAQ,GAElC,GAAWC,GAAPhvB,GAAcA,EAAMivB,EAAK,CACzBpK,EAASiI,EAASiC,GAClB/4B,GAAgBg5B,EAChB,OAKJnK,IAAWiI,EAAS,KACpB92B,GAAgB7C,KAAKgN,IAAI0sB,EAAOC,EAAS12B,OAAS,GAClDyuB,EAASiI,EAASA,EAAS12B,OAAS,IAI5C,MAAO,CAAEJ,QAAO6uB,UAgQpB,SAASqK,EAAOhO,GAEZ,IADA,IAAIiO,EAAS,GACJjN,EAAI,EAAGA,EAAIhB,EAAQgB,IACxBiN,GAAU,IAGd,OAAOA,EAmDX,SAASpP,EAAQ/pB,EAAOo5B,EAAxB,GAAkE,IAA/B3C,EAA+B,6BAAlE,IAAsDt5B,KAAK+0B,MACvD,OAAuC,IAAnClyB,EAAM8Y,WAAW1H,QAAQ,KAzCjC,SAAsBpR,EAAOo5B,GACzB,IAAID,EAASn5B,EAAM8Y,WADiBugB,IAGlBF,EAAOG,MAAM,KAHKD,GAG/B/H,EAH+B+H,KAGzBtF,EAHyBsF,SAKE/H,EAAKgI,MAAM,KALbD,GAK/BjD,EAL+BiD,YAKf3P,WALe2P,EAKJ,GALIA,EAOpC,GAAW,GAANtF,EACDoF,EAAS/C,EAAiB1M,EAAWwP,EAAOnF,EAAMrK,EAAStpB,YACxD,CACH,IAAIkuB,EAAS,IAGTA,GADC8H,EAAiB,EACZ,YAAQ9H,GAER,WAAOA,GAGjB,IAAIO,GAAUqK,GAAQnF,EAAM,GAAK52B,KAAK6M,IAAIosB,GAAkB1M,GAAU6P,OAAO,EAAGH,GAC5EvK,EAAOzuB,OAASg5B,IAChBvK,GAAUqK,EAAOE,EAAYvK,EAAOzuB,SAExC+4B,EAAS7K,EAASO,EAOtB,OAJW,GAANkF,GAAuB,EAAZqF,IACZD,GAAM,WAAQD,EAAOE,KAGlBD,EA7BX,CA0C4Bn5B,EAAOo5B,IAGvB3C,GAAiB,UAAIz2B,EAAJ,aAAco5B,IAAgBj8B,KAAKgN,IAAI,GAAIivB,IAAarP,QAAQqP,GA6G7F,SAASI,EAAkB5D,EAAQ51B,EAAOs1B,EAAmB9zB,EAAOktB,GAChE,IAAI4F,EAAa9yB,EAAMi4B,oBACnBC,EAAoBpF,EAAWC,UACnC7F,EAAmBA,GAAoB4F,EAAWlH,QAClD,IAAIuM,EAAgBrF,EAAWqF,eAAiB,EAE5CR,EAASvD,EAAO9c,WAChBsd,EAAiB+C,EAAOG,MAAM,KAAK,GACnC5P,EAAWyP,EAAOG,MAAM,KAAK,GAC3BM,EAAkB55B,EAAQ,GAAqC,IAAhCo2B,EAAehlB,QAAQ,KAwB5D,OAtBIkkB,IACIsE,IAEAxD,EAAiBA,EAAehD,MAAM,IAvClD,SAA8BmC,EAAahH,GAGvC,IAFA,IAAI4K,EAAS,GACTU,EAAU,EACL3N,EAAIqJ,EAAiB,EAAJrJ,EAAOA,IACzB2N,IAAYtL,IACZ4K,EAAOW,QAAQ5N,GACf2N,EAAU,GAEdA,IAGJ,OAAOV,EAXX,CA0CqE/C,EAAeh2B,OAAQu5B,GAClD75B,SAAQ,SAACsF,EAAU5C,GACjD4zB,EAAiBA,EAAehD,MAAM,EAAGhuB,EAAW5C,GAASk3B,EAAoBtD,EAAehD,MAAMhuB,EAAW5C,MAGjHo3B,IAEAxD,EAAc,WAAOA,KAIxB1M,EAGQ0M,EAAiB1H,EAAmBhF,EAFpC0M,EAiFjB,SAASuB,EAAT,GAA+H,IAAvGT,EAAuG,EAAvGA,SAAUC,EAA6F,EAA7FA,eAA6F,IAA7E31B,iBAA6E,EAArEu0B,EAAqE,EAAxDrH,EAAwD,EAAxDA,iBAAwD,IAAtC4J,oBAAsC,EAA3B92B,EAAMu4B,kBAAqB,EACvH/5B,EAAQk3B,EAASU,OAErB,GAAc,IAAV53B,GAAewB,EAAMw4B,gBACrB,OAAOx4B,EAAMy4B,gBAGjB,IAAKC,SAASl6B,GACV,OAAOA,EAAM8Y,WAGjB,IAnUJqhB,EAA8Bn6B,EAAsCo6B,EAA/BC,EAA+BD,EAC3DE,EAAcC,EACfrP,EAiUAxpB,EAAUtC,OAAOC,OAAO,GAAI82B,EAAgBmC,EAAUnB,GAEtD5B,EAAc7zB,EAAQ6zB,YACtB8E,EAA0B9E,EAAc,EAAI7zB,EAAQ00B,eACpDoE,EAAyB94B,EAAQ84B,uBACjCnE,EAAe30B,EAAQ20B,aACvBzM,EAAeloB,EAAQkoB,aACvBH,IAAY8L,KAAiBc,GAAgB30B,EAAQ+nB,QAGrDgR,EAAoBlF,GAAe,EAAK9L,YAAW0N,EAAezN,SAAyB,EAAIhoB,EAAQgoB,SACvG4M,GAAmBf,aAAuB4B,EAAeb,kBAAwD,IAAvBmE,EAA2B/4B,EAAQ40B,kBAC7H3M,EAAejoB,EAAQioB,aACvB2L,EAAoB5zB,EAAQ4zB,kBAC5BT,EAAiBnzB,EAAQmzB,eACzB0B,EAAW70B,EAAQ60B,SACnBC,EAAY90B,EAAQ80B,UACpB+D,EAAc74B,EAAQ64B,YACtB9D,EAAmB/0B,EAAQ+0B,iBAE3BiE,EAAe,GACnB,GAAIjR,EAAS,CACT,IAAIxoB,EAhZZ,YAA6J,IAAnIjB,EAAmI,EAAnIA,MAAOq2B,EAA4H,EAA5HA,aAA4H,IAA9GzM,wBAA8G,KAAzF4K,EAAyF,EAAzFA,cAAyF,IAA1EK,0BAA0E,SAAlDU,uBAAkD,EAApC,EAAoC,MAAjCkB,4BAAiC,EAAdt5B,KAAK+0B,MAAS,EACrJwI,EAAe,GACf1wB,EAAM7M,KAAK6M,IAAIhK,GACfy6B,GAAqB,EA+BzB,GA7BIpE,GAAgB7B,EAAc6B,IAAiBH,EAAOG,IACtDqE,EAAelG,EAAc6B,GAC7Br2B,GAAgBk2B,EAAOG,IAEnBrsB,GAAOksB,EAAOtB,UAAahL,GAA4D,IAA5C6M,EAAiBzsB,EAAMksB,EAAOtB,WAEzE8F,EAAelG,EAAcI,SAC7B50B,GAAgBk2B,EAAOtB,UAChB5qB,EAAMksB,EAAOtB,UAAY5qB,GAAOksB,EAAOvB,SAAY/K,GAA2D,IAA3C6M,EAAiBzsB,EAAMksB,EAAOvB,UAExG+F,EAAelG,EAAcG,QAC7B30B,GAAgBk2B,EAAOvB,SAChB3qB,EAAMksB,EAAOvB,SAAW3qB,GAAOksB,EAAOxB,SAAY9K,GAA2D,IAA3C6M,EAAiBzsB,EAAMksB,EAAOxB,UAEvGgG,EAAelG,EAAcE,QAC7B10B,GAAgBk2B,EAAOxB,UAChB1qB,EAAMksB,EAAOxB,SAAW1qB,GAAOksB,EAAOzB,UAAa7K,GAA4D,IAA5C6M,EAAiBzsB,EAAMksB,EAAOzB,aAExGiG,EAAelG,EAAcC,SAC7Bz0B,GAAgBk2B,EAAOzB,UAO3BiG,EADAA,IAFgB7F,EAAiB,IAAM,IAGR6F,EAG/BnF,EAAa,CACb,IAAIoF,EAAa36B,EAAQ,EACrBo2B,EAAiBp2B,EAAM8Y,WAAWwgB,MAAM,KAAK,GAE7CsB,EAAuBD,EACrBvE,EAAeh2B,OAAS,EACxBg2B,EAAeh2B,OAErBq6B,EAAoBt9B,KAAK87B,IAAI1D,EAAcqF,EAAsB,GAGrE,MAAO,CAAE56B,QAAO06B,eAAcD,qBA7ClC,CAgZkC,CACtBz6B,QACAq2B,eACAzM,eACA4K,cAAehzB,EAAMq5B,uBACrBhG,iBACA4B,mBACAlB,gBAGJv1B,EAAQiB,EAAKjB,MACb06B,GAAgBz5B,EAAKy5B,aAEjBnF,IACAkF,EAAoBx5B,EAAKw5B,mBAIjC,GAAIF,EAAa,CACb,IAAIO,GA5WkB96B,GAA9Bm6B,EA4WsC,CAC1Bn6B,QACAq6B,4BA9WkBr6B,MAAOq6B,YAA+BD,IAA/BC,yBAA0B,EAAKD,EAC3DE,GAD2DF,IAC9Bp6B,EAAM+vB,gBAAgBuJ,MAAM,KADEc,OAC7CG,EAD6CH,KAE5DlP,GAAUoP,EAETD,GAOsB,EAEAA,IACvBnP,GAAkB/tB,KAAKgN,IAAI,GAAIkwB,EAHR,GAKvBE,EAA6B,IAD7BA,GAA8BF,EAJP,GAKT,WAAuBE,GAAgBA,GAGlD,CACHv6B,MAAOkrB,EACPwP,aAAY,WAAMH,KA4VlBv6B,EAAQ86B,EAAK96B,MACb06B,EAAeI,EAAKJ,aAAeA,EAGvC,IAnHgB9E,EAAQ51B,EAAOu2B,EAmH3BX,EA3QR,SAA8BA,EAAQ51B,EAAOs2B,EAAkB8C,EAAWzd,EAAM8a,GAC5E,IAAmB,IAAf2C,EACA,OAAOxD,EAGX,IAAIuD,EAASpP,EAAQ/pB,EAAOo5B,EAAW3C,GALuDsE,IAM1C5B,EAAOrgB,WAAWwgB,MAAM,KANkByB,GAMzFC,EANyFD,YAMlEE,WANkEF,EAMhD,GANgDA,EAQ9F,GAAIE,EAAgBC,MAAM,UAAY5E,GAAoB3a,GACtD,OAAOqf,EAGX,IAAIG,EAAoBF,EAAgBC,MAAM,OAC9C,OAAIvf,GAAQwf,EACR,UAAUH,EAAV,YAAmCC,EAAgBniB,WAAWsa,MAAM,EAAG+H,EAAkB34B,QAGtF22B,EAAOrgB,WAjBlB,CA2QsC9Y,EAAM8Y,WAAY9Y,EAAOs2B,EAAkBmE,EAAmB9Q,EAAc8M,GAY9G,OAVAb,EAAS4D,EADT5D,EA/OJ,SAAoCA,EAAQ51B,EAAOw6B,EAAwBpB,GACvE,IAAID,EAASvD,EADqEwF,IAEnCjC,EAAOrgB,WAAWwgB,MAAM,KAFW8B,GAE7EJ,EAF6EI,KAEtDH,EAFsDG,KAIlF,GAAIJ,EAAsBE,MAAM,UAAYV,EACxC,OAAKS,EAIL,UAAUD,EAAsBlxB,QAAQ,IAAK,IAA7C,YAAoDmxB,GAHzCD,EAAsBlxB,QAAQ,IAAK,IAMlD,IAAM8vB,EAAkB55B,EAAQ,GAA4C,IAAvCg7B,EAAsB5pB,QAAQ,KAOnE,GANIwoB,IAEIoB,EAAwBA,EAAsB5H,MAAM,GACpD+F,EAASA,EAAO/F,MAAM,IAG1B4H,EAAsB56B,OAASg5B,EAE/B,IADA,IAAIiC,EAAejC,EAAY4B,EAAsB56B,OAC5C8rB,EAAI,EAAGA,EAAImP,EAAcnP,IAC9BiN,EAAM,WAAOA,GAQrB,OAJIS,IAEAT,EAAM,WAAOA,IAEVA,EAAOrgB,WA9BlB,CA+OwC8c,EAAQ51B,EAAOw6B,EAAwBH,GACxCr6B,EAAOs1B,EAAmB9zB,EAAOktB,IAEhEjF,GAAW8Q,KACX3E,GAAoC8E,IAGpClE,GAAax2B,EAAQ,KA3HT41B,EA4HQA,EA5HOW,EA4HQA,EAAnCX,EA3HU,KADU51B,EA4HQA,GA1HrB41B,EAGK,IAAXA,EACMA,EAAO9rB,QAAQ,IAAK,IAGnB,EAAR9J,EACA,WAAW41B,GAGE,SAAbW,EACOX,EAGX,WAAWA,EAAO9rB,QAAQ,IAAK,IAA/B,MA8GO8rB,EAUX,SAASiC,EAAgBV,EAAgBmE,GACrC,IAAKnE,EACD,OAAOmE,EAGX,IAAIr3B,EAAO7E,OAAO6E,KAAKkzB,GACvB,OAAoB,IAAhBlzB,EAAK7D,QAA4B,WAAZ6D,EAAK,GACnBq3B,EAGJnE,EAGXhD,EAAOnK,QAAU,SAACR,GAAD,MAAa,CAC1B5gB,OAAQ,sCAAImoB,EAAJ,yBAAIA,EAAJ,uBAAakG,EAAMsE,aAAIxK,EAAVkG,QAAgBzN,MACrCgS,YAAa,sCAAIzK,EAAJ,yBAAIA,EAAJ,uBAhqBjB,SAAqBmG,GACjB,IAAIj2B,EAAO8zB,EAAM6B,QACjB,OAAOyB,EAAmBnB,EAASU,OAAQ32B,EAAK61B,SAAU71B,EAAK41B,OAAOhI,QA8pBjC0M,aAAIxK,EAAf,QAAqBvH,MAC/CiS,kBAAmB,sCAAI1K,EAAJ,yBAAIA,EAAJ,uBA7qBvB,SAA2BmG,GACvB,IAAIj2B,EAAO8zB,EAAMiC,OACjB,OAAOqB,EAAmBnB,EAASU,OAAQ32B,EAAK61B,SAAU71B,EAAK41B,OAAOhI,QA2qBrB0M,aAAIxK,EAArB,QAA2BvH,MAC3DkS,mBAAoB,sCAAI3K,EAAJ,yBAAIA,EAAJ,uBA1rBxB,SAA4BmG,GACxB,IAAIj2B,EAAO8zB,EAAM3H,QACjB,OAAOiL,EAAmBnB,EAASU,OAAQ32B,EAAK61B,SAAU71B,EAAK41B,OAAOhI,QAwrBnB0M,aAAIxK,EAAtB,QAA4BvH,MAC7DqO,0GCtyBJ,IAAM8D,EAAOzR,EAAQ,WACf8L,EAAa9L,EAAQ,gBACrB+L,EAAU/L,EAAQ,aAEpB1oB,EAAQ,GAERo6B,SACAC,EAAY,GAEZC,EAAa,KAEbC,EAAiB,GAErB,SAASC,EAAeC,GAAOL,EAAqBK,EAEpD,SAASC,IAAwB,OAAOL,EAAUD,GAOlDp6B,EAAMq6B,UAAY,kBAAMz8B,OAAOC,OAAO,GAAIw8B,IAW1Cr6B,EAAM26B,gBAAkB,kBAAMP,GAO9Bp6B,EAAMm1B,aAAe,kBAAMuF,IAAsBnH,OAAS,IAO1DvzB,EAAM+1B,gBAAkB,kBAAM2E,IAAsBhH,UAOpD1zB,EAAMq5B,qBAAuB,kBAAMqB,IAAsB1H,eAOzDhzB,EAAMi4B,kBAAoB,kBAAMyC,IAAsB5H,YAOtD9yB,EAAMq3B,eAAiB,kBAAMqD,IAAsBpH,SAYnDtzB,EAAMu4B,gBAAkB,kBAAM36B,OAAOC,OAAO,GAAI68B,IAAsB5D,SAAUyD,IAQhFv6B,EAAMs3B,4BAA8B,kBAAM15B,OAAOC,OAAO,GAAImC,EAAMu4B,kBAAmBmC,IAAsBE,gBAQ3G56B,EAAM+2B,yBAA2B,kBAAMn5B,OAAOC,OAAO,GAAImC,EAAMu4B,kBAAmBmC,IAAsBG,aAQxG76B,EAAMw2B,+BAAiC,kBAAM54B,OAAOC,OAAO,GAAImC,EAAMu4B,kBAAmBmC,IAAsBI,mBAQ9G96B,EAAMs2B,6BAA+B,kBAAM14B,OAAOC,OAAO,GAAImC,EAAMu4B,kBAAmBmC,IAAsB7G,iBAQ5G7zB,EAAMg3B,yBAA2B,kBAAMp5B,OAAOC,OAAO,GAAImC,EAAMu4B,kBAAmBmC,IAAsBK,aAOxG/6B,EAAMg7B,YAAc,SAAC5zB,GACjBA,EAASqtB,EAAQmB,YAAYxuB,GACzBotB,EAAWqB,eAAezuB,KAC1BmzB,EAAiBnzB,IAazBpH,EAAMy4B,cAAgB,kBAAM6B,GAO5Bt6B,EAAMi7B,cAAgB,SAACrR,GAAD,OAAY0Q,EAAgC,iBAAZ1Q,EAAuBA,EAAS,MAOtF5pB,EAAMw4B,cAAgB,kBAAqB,OAAf8B,GAe5Bt6B,EAAMk7B,aAAe,SAACT,GAClB,GAAIA,EAAK,CACL,GAAIJ,EAAUI,GACV,OAAOJ,EAAUI,GAErB,MAAM,IAAIU,MAAJ,uBAA0BV,EAA1B,MAGV,OAAOC,KAYX16B,EAAMo7B,iBAAmB,SAAC37B,GAA8B,IAAxB47B,EAAwB,wDACpD,IAAK7G,EAAW8G,iBAAiB77B,GAC7B,MAAM,IAAI07B,MAAM,yBAGpBd,EAAU56B,EAAKozB,aAAepzB,EAE1B47B,GACAb,EAAe/6B,EAAKozB,cAc5B7yB,EAAMu7B,YAAc,SAACd,GAAwC,IAAnCe,EAAmC,uDAArBrB,EAAKtH,YACzC,IAAKwH,EAAUI,GAAM,CACjB,IAAIpN,EAASoN,EAAI3C,MAAM,KAAK,GAExB2D,EAAsB79B,OAAO6E,KAAK43B,GAAWp3B,MAAK,SAAAqoB,GAClD,OAAOoQ,EAAK5D,MAAM,KAAK,KAAOzK,KAGlC,OAAKgN,EAAUoB,QAKfjB,EAAeiB,QAJXjB,EAAegB,GAQvBhB,EAAeC,IAGnBz6B,EAAMo7B,iBAAiBjB,GACvBC,EAAqBD,EAAKtH,YAE1BF,EAAOnK,QAAUxoB,kFCvNjB2yB,EAAOnK,QAAU,SAACR,GAAD,MAAa,CAC1B2T,oBAAqB,SAACC,GAAD,OAhBU5T,EAgB0BA,OAAN4T,EAf9Ct9B,SAAQ,SAACm8B,GACV,IAAIh7B,SACJ,IACIA,EAAOipB,EAAO,uBAAiB+R,IACjC,MAAOnP,GACL5M,QAAQjS,MAARiS,0BAAiC+b,EAAjC/b,wCAGAjf,GACAuoB,EAAOoT,iBAAiB37B,MAVpC,IAAmCuoB,0CCPnC,IAAMyD,EAAY/C,EAAQ,gBAgC1B,SAASmT,EAASxQ,EAAGyQ,EAAO9T,GACxB,IAAIxpB,EAAQ,IAAIitB,EAAUJ,EAAE+K,QACxB2F,EAAaD,EASjB,OAPI9T,EAAOgU,SAASF,KAChBC,EAAaD,EAAM1F,QAGvB2F,EAAa,IAAItQ,EAAUsQ,GAE3B1Q,EAAE+K,OAAS53B,EAAMy9B,MAAMF,GAAYG,WAC5B7Q,EAiFXsH,EAAOnK,QAAU,YAAM,MAAK,CACxBhhB,IAAK,SAAC6jB,EAAGyQ,GAAJ,OAnHOA,EAmHcA,EAnHP9T,EAmHcA,EAlH7BxpB,EAAQ,IAAIitB,GADPJ,EAmHcA,GAlHK+K,QACxB2F,EAAaD,EAEb9T,EAAOgU,SAASF,KAChBC,EAAaD,EAAM1F,QAGvB2F,EAAa,IAAItQ,EAAUsQ,GAE3B1Q,EAAE+K,OAAS53B,EAAM29B,KAAKJ,GAAYG,WAC3B7Q,EAXX,IAAaA,EAAGyQ,EAAO9T,EACfxpB,EACAu9B,GAkHJtL,SAAU,SAACpF,EAAGyQ,GAAJ,OAAcD,EAASxQ,EAAGyQ,EAAO9T,IAC3CoU,SAAU,SAAC/Q,EAAGyQ,GAAJ,OAzEOA,EAyEmBA,EAzEZ9T,EAyEmBA,EAxEvCxpB,EAAQ,IAAIitB,GADFJ,EAyEmBA,GAxEL+K,QACxB2F,EAAaD,EAEb9T,EAAOgU,SAASF,KAChBC,EAAaD,EAAM1F,QAGvB2F,EAAa,IAAItQ,EAAUsQ,GAE3B1Q,EAAE+K,OAAS53B,EAAM69B,MAAMN,GAAYG,WAC5B7Q,EAXX,IAAkBA,EAAGyQ,EAAO9T,EACpBxpB,EACAu9B,GAwEJO,OAAQ,SAACjR,EAAGyQ,GAAJ,OApDOA,EAoDiBA,EApDV9T,EAoDiBA,EAnDnCxpB,EAAQ,IAAIitB,GADJJ,EAoDiBA,GAnDD+K,QACxB2F,EAAaD,EAEb9T,EAAOgU,SAASF,KAChBC,EAAaD,EAAM1F,QAGvB2F,EAAa,IAAItQ,EAAUsQ,GAE3B1Q,EAAE+K,OAAS53B,EAAM+9B,UAAUR,GAAYG,WAChC7Q,EAXX,IAAgBA,EAAGyQ,EAAO9T,EAClBxpB,EACAu9B,GAmDJjrB,IAAK,SAACua,EAAGyQ,GAAJ,OA/BKzQ,EA+BaA,EA9BnB7sB,EADSs9B,EA+BaA,EAAO9T,EA5BtBgU,SAASF,KAChBt9B,EAAQs9B,EAAM1F,QAGlB/K,EAAE+K,OAAS53B,EACJ6sB,EARX,IAAcA,EAAGyQ,EACTt9B,GA+BJg+B,WAAY,SAACnR,EAAGyQ,GAAJ,OAbOA,EAaqBA,EAXxCD,EADIY,GADsBzU,EAaqBA,GAAVqD,EAZhB+K,QACL0F,EAAO9T,GAEhBrsB,KAAK6M,IAAIi0B,EAAMrG,QAJ1B,IAAuB0F,EAAO9T,EACtByU,GAaJhR,UAAWA,+NCnIf,IAEM8I,EAAc7L,EAAQ,iBACtBgU,EAAYhU,EAAQ,gBACpBiU,EAASjU,eAAqBV,GAC9B4U,EAAclU,EAAQ,kBACxBmU,EAAYnU,kBAAwBV,GACpC8U,EAAapU,oBAA0BV,GACrCyM,EAAU/L,EAAQ,aAElBqU,aACF,WAAYrT,iGAAQsT,QAChB76B,KAAKi0B,OAAS1M,yDAGR,OAAO1B,EAAO7lB,KAAKi0B,0CAET,IAAbX,EAAa,iCAAJ,GAAM,OAAOoH,EAAUz1B,OAAOjF,KAAMszB,0CAErCruB,GAMX,MALsB,iBAAXA,IACPA,EAASqtB,EAAQmB,YAAYxuB,KAEjCA,EAASy1B,EAAUxG,gBAAgBjvB,EAAQmtB,EAAY+B,iCAChDlC,OAAS,WACTyI,EAAUz1B,OAAOjF,KAAMiF,yCAGV,IAAbA,EAAa,iCAAJ,GAEhB,OADAA,EAAOgtB,OAAS,OACTyI,EAAUz1B,OAAOjF,KAAMiF,6CAGd,OAAOy1B,EAAU5C,kBAAkB93B,iDAElC,OAAO06B,EAAU3C,mBAAmB/3B,0CAE3C,OAAO06B,EAAU7C,YAAY73B,yCAEhC25B,GAAS,OAAOgB,EAAWN,WAAWr6B,KAAM25B,+BAEnDA,GAAS,OAAOgB,EAAWt1B,IAAIrF,KAAM25B,oCAEhCA,GAAS,OAAOgB,EAAWrM,SAAStuB,KAAM25B,oCAE1CA,GAAS,OAAOgB,EAAWV,SAASj6B,KAAM25B,kCAE5CA,GAAS,OAAOgB,EAAWR,OAAOn6B,KAAM25B,+BAE3CmB,GAAS,OAAOH,EAAWhsB,IAAI3O,KAAM+6B,EAAeD,oCAE9C,OAAO96B,KAAKi0B,yCAEV,OAAOj0B,KAAKi0B,yCA3CtB2G,GAoDN,SAASG,EAAeD,GACpB,IAAItF,EAASsF,EASb,OARIjV,EAAOgU,SAASiB,GAChBtF,EAASsF,EAAM7G,OACS,iBAAV6G,EACdtF,EAAS3P,EAAOmV,SAASF,GAClBG,MAAMH,KACbtF,EAAS0F,KAGN1F,EAGX,SAAS3P,EAAOiV,GACZ,OAAO,IAAIF,EAAOG,EAAeD,IAGrCjV,EAAOsV,QA/ES,QAiFhBtV,EAAOgU,SAAW,SAASuB,GACvB,OAAOA,aAAkBR,GAO7B/U,EAAOwV,SAAWjJ,EAAYoG,gBAC9B3S,EAAOoT,iBAAmB7G,EAAY6G,iBACtCpT,EAAOuT,YAAchH,EAAYgH,YACjCvT,EAAOqS,UAAY9F,EAAY8F,UAC/BrS,EAAOkT,aAAe3G,EAAY2G,aAClClT,EAAOsS,WAAa/F,EAAY0G,cAChCjT,EAAO8R,cAAgBvF,EAAYgE,gBACnCvQ,EAAOgT,YAAczG,EAAYyG,YACjChT,EAAOyV,sBAAwBlJ,EAAY+B,6BAC3CtO,EAAO0V,SAAWhB,EAAUgB,SAC5B1V,EAAO2T,oBAAsBgB,EAAOhB,oBACpC3T,EAAOmV,SAAWP,EAAYO,SAC9BnV,EAAOyD,UAAYqR,EAAWrR,UAE9BkH,EAAOnK,QAAUR,6JC8LjB2K,EAAOnK,QAAU,CACboN,YAzBJ,SAAqBhM,GAAqB,IAtQrBA,EAAQ+N,EACrB+B,EAgBc9P,EAAQ+N,EACtB+B,EA+F0B/B,EAC1B+B,EAc6B/B,EAE7B+B,EA2CsB/B,EAaH/N,EAAQ+N,EAmBJ/N,EAAQ+N,EA9CJA,EACzBzP,EA9E8ByP,EAaHA,EA2Id/N,EAAQ+N,EAeCA,EAaHA,EAAa,uDAAJ,GAClC,MAAsB,iBAAX/N,EACAA,GAxQc+N,EA2QIA,EA1PHA,EA2PIA,EA1OlC,SAAqB/N,EAAQ+N,GACzB,IAA6B,IAAzB/N,EAAOha,QAAQ,KAAnB,CAKA,IAA6B,IAAzBga,EAAOha,QAAQ,KAKnB,OAA8B,IAA1Bga,EAAOha,QAAQ,OACf+nB,EAAOvD,OAAS,OAChBuD,EAAO7H,KAAO,YAIW,IAAzBlG,EAAOha,QAAQ,MACf+nB,EAAOvD,OAAS,OAChBuD,EAAO7H,KAAO,WAKW,IAAzBlG,EAAOha,QAAQ,MACf+nB,EAAOvD,OAAS,OAChBuD,EAAO7H,KAAO,YAKW,IAAzBlG,EAAOha,QAAQ,MAKU,IAAzBga,EAAOha,QAAQ,OACf+nB,EAAOvD,OAAS,WALhBuD,EAAOvD,OAAS,OAzBhBuD,EAAOvD,OAAS,eALhBuD,EAAOvD,OAAS,WAFxB,CA0OIxK,GA1PI8P,GADc9P,EA0PlBA,GA1QI8P,GADa9P,EA2QIA,GA1QF8P,MAAM,gBAErB/B,EAAO7K,OAAS4M,EAAM,GACf9P,EAAOgI,MAAM8H,EAAM,GAAG96B,SAG1BgrB,GAWY8P,MAAM,gBAErB/B,EAAO7B,QAAU4D,EAAM,GAEhB9P,EAAOgI,MAAM,GAAI8H,EAAM,GAAG96B,SAG9BgrB,EAoPa+N,GA5JUA,EA6JLA,GA5JrB+B,EA4Ja9P,EA5JE8P,MAAM,mBAGrB/B,EAAO5D,aAAe2F,EAAM,IAWC/B,EA+ILA,GA7IxB+B,EA6IgB9P,EA9IQkO,MAAM,KAAK,GACZ4B,MAAM,SAE7B/B,EAAO/C,eAAiB8E,EAAM,GAAG96B,QAwFzC,SAAqCgrB,EAAQ+N,GACzC,IAA6B,IAAzB/N,EAAOha,QAAQ,KAAa,CAC5B,IAAIglB,EAAiBhL,EAAOkO,MAAM,KAAK,GACvCH,EAAOqB,wBAA0D,IAAjCpE,EAAehlB,QAAQ,MAH/D,CAoDgCga,EAAQ+N,GAnGVA,EAoGLA,GAnGQ,IAmGhB/N,EAnGFha,QAAQ,OACf+nB,EAAO1P,YAWoB0P,EAwFLA,GAvFG,KADN/N,EAwFLA,GAvFPha,QAAQ,KACf+nB,EAAO9C,aAAe,YACU,IAAzBjL,EAAOha,QAAQ,KACtB+nB,EAAO9C,aAAe,WACU,IAAzBjL,EAAOha,QAAQ,KACtB+nB,EAAO9C,aAAe,WACU,IAAzBjL,EAAOha,QAAQ,OACtB+nB,EAAO9C,aAAe,YAnD9B,SAAuBjL,EAAQ+N,GAC3B,IAAIzP,EAAW0B,EAAOkO,MAAM,KAAK,GACjC,GAAI5P,EAAU,CACV,IAAIwR,EAAQxR,EAASwR,MAAM,MACvBA,IACA/B,EAAOzP,SAAWwR,EAAM,GAAG96B,SALvC,CAoIkBgrB,EAAQ+N,GAtEaA,EAuELA,GAvEH/N,EAuELA,GAtEX8P,MAAM,SACb/B,EAAO7C,oBACAlL,EAAO8P,MAAM,QACpB/B,EAAO7C,qBAlDoB6C,EAsHLA,GArHpBzP,EAqHY0B,EArHMkO,MAAM,KAAK,MAE/BH,EAAOxP,cAA0C,IAA3BD,EAAStY,QAAQ,MAhFP+nB,EAoMLA,GAnMF,IAmMN/N,EAnMZha,QAAQ,OACf+nB,EAAO7D,sBAWsB6D,EAwLLA,GAvLC,IAuLT/N,EAvLTha,QAAQ,OACf+nB,EAAOtE,kBACPsE,EAAO3D,2BAEH2D,EAAO1P,SAAW0P,EAAO9C,gBACzB8C,EAAOzC,gCAqIYyC,EA8CLA,GA9CH/N,EA8CLA,GA7CH8P,MAAM,oBACb/B,EAAO5C,SAAW,eAElBnL,EAAO8P,MAAM,WACb/B,EAAO5C,SAAW,QAUM4C,EAgCLA,EAAR/N,EA/BJ8P,MAAM,SACb/B,EAAO3C,cAgCJ2C,0CClSX,IAAMgG,EAAc,CAChB,CAACp/B,IAAK,MAAOq/B,OAAQjiC,KAAKgN,IAAI,KAAM,IACpC,CAACpK,IAAK,KAAMq/B,OAAQjiC,KAAKgN,IAAI,IAAM,IACnC,CAACpK,IAAK,MAAOq/B,OAAQjiC,KAAKgN,IAAI,KAAM,IACpC,CAACpK,IAAK,KAAMq/B,OAAQjiC,KAAKgN,IAAI,IAAM,IACnC,CAACpK,IAAK,MAAOq/B,OAAQjiC,KAAKgN,IAAI,KAAM,IACpC,CAACpK,IAAK,KAAMq/B,OAAQjiC,KAAKgN,IAAI,IAAM,IACnC,CAACpK,IAAK,MAAOq/B,OAAQjiC,KAAKgN,IAAI,KAAM,IACpC,CAACpK,IAAK,KAAMq/B,OAAQjiC,KAAKgN,IAAI,IAAM,IACnC,CAACpK,IAAK,MAAOq/B,OAAQjiC,KAAKgN,IAAI,KAAM,IACpC,CAACpK,IAAK,KAAMq/B,OAAQjiC,KAAKgN,IAAI,IAAM,IACnC,CAACpK,IAAK,MAAOq/B,OAAQjiC,KAAKgN,IAAI,KAAM,IACpC,CAACpK,IAAK,KAAMq/B,OAAQjiC,KAAKgN,IAAI,IAAM,IACnC,CAACpK,IAAK,MAAOq/B,OAAQjiC,KAAKgN,IAAI,KAAM,IACpC,CAACpK,IAAK,KAAMq/B,OAAQjiC,KAAKgN,IAAI,IAAM,IACnC,CAACpK,IAAK,MAAOq/B,OAAQjiC,KAAKgN,IAAI,KAAM,IACpC,CAACpK,IAAK,KAAMq/B,OAAQjiC,KAAKgN,IAAI,IAAM,IACnC,CAACpK,IAAK,IAAKq/B,OAAQ,IASvB,SAASC,EAAahT,GAClB,OAAOA,EAAEviB,QAAQ,wBAAyB,QA2I9C,SAASw1B,EAAcC,EAAajL,EAApC,WAAiH,IAAjEoD,EAAiE,6BAAjH,IAAiE,GAAI5C,EAA4C,mBAAjH,SAA8EgH,EAAmC,mBAAjH,SAA0FtH,EAAuB,mBAAjH,SAAyG5rB,EAAQ,mBAAjH,SACI,GAAoB,KAAhB22B,EAMJ,OAAIA,IAAgBzD,EACT,EApIf,SAAS0D,EAAwBD,EAAajL,EAA9C,WAA2H,IAAjEoD,EAAiE,6BAA3H,IAA2E,GAAI5C,EAA4C,mBAA3H,SAAwFgH,EAAmC,mBAA3H,SAAoGtH,EAAuB,mBAA3H,SAAmH5rB,EAAQ,mBAA3H,SACI,IAAKg2B,OAAOW,GACR,OAAQA,EAGZ,IAAIE,EAAW,GAGXC,EAAWH,EAAYz1B,QAAQ,2BAA4B,UAE/D,GAAI41B,IAAaH,EACb,OAAQ,EAAIC,EAAwBE,EAAUpL,EAAYoD,EAAgB5C,EAASgH,EAAYtH,EAAe5rB,GAKlH,IAAK,IAAIsjB,EAAI,EAAGA,EAAIiT,EAAY/+B,OAAQ8rB,IAAK,CACzC,IAAI2C,EAASsQ,EAAYjT,GAGzB,IAFAuT,EAAWF,EAAYz1B,QAAQ+kB,EAAO9uB,IAAK,OAE1Bw/B,EACb,OAAOC,EAAwBC,EAAUnL,EAAYoD,EAAgB5C,EAASgH,EAAYtH,EAAe5rB,GAAUimB,EAAOuQ,OAQlI,IAFAK,EAAWF,EAAYz1B,QAAQ,IAAK,OAEnBy1B,EACb,OAAOC,EAAwBC,EAAUnL,EAAYoD,EAAgB5C,EAASgH,EAAYtH,EAAe5rB,GAAU,IAKvH,IAAI+2B,EAAuB7V,WAAWyV,GAEtC,IAAIX,MAAMe,GAAV,CAIA,IAAIC,EAAgB9K,EAAQ6K,GAC5B,GAAIC,GAAmC,MAAlBA,IACjBH,EAAWF,EAAYz1B,QAAQ,IAAIge,OAAJ,UAAcuX,EAAaO,GAA3B,MAA+C,OAE7DL,EACb,OAAOC,EAAwBC,EAAUnL,EAAYoD,EAAgB5C,EAASgH,EAAYtH,EAAe5rB,GAMjH,IAAIi3B,EAAwB,GAC5BzgC,OAAO6E,KAAKuwB,GAAe10B,SAAQ,SAACC,GAChC8/B,EAAsBrL,EAAcz0B,IAAQA,KAMhD,IAHA,IAAI+/B,EAAqB1gC,OAAO6E,KAAK47B,GAAuBE,OAAOnN,UAC/DoN,EAAwBF,EAAmB1/B,OAEtC6/B,EAAI,EAAGA,EAAID,EAAuBC,IAAK,CAC5C,IAAIjgC,EAAQ8/B,EAAmBG,GAC3BlgC,EAAM8/B,EAAsB7/B,GAGhC,IADAy/B,EAAWF,EAAYz1B,QAAQ9J,EAAO,OACrBu/B,EAAa,CAC1B,IAAIH,SACJ,OAAQr/B,GACJ,IAAK,WACDq/B,EAASjiC,KAAKgN,IAAI,GAAI,GACtB,MACJ,IAAK,UACDi1B,EAASjiC,KAAKgN,IAAI,GAAI,GACtB,MACJ,IAAK,UACDi1B,EAASjiC,KAAKgN,IAAI,GAAI,GACtB,MACJ,IAAK,WACDi1B,EAASjiC,KAAKgN,IAAI,GAAI,IAG9B,OAAOq1B,EAAwBC,EAAUnL,EAAYoD,EAAgB5C,EAASgH,EAAYtH,EAAe5rB,GAAUw2B,KAjF/H,CAgGA,SAAiCG,EAAajL,EAA9C,GAA+E,IAArBoD,EAAqB,6BAA/E,IAA2E,GAGnE+H,EAAWF,EAAYz1B,QAAQ4tB,EAAgB,IAUnD,OANA+H,EAAWA,EAAS31B,QAAQ,IAAIge,OAAJ,iBAAqBuX,EAAa/K,EAAWC,WAA7C,WAAkE,KAAM,SAIhFzqB,QAAQwqB,EAAWlH,QAAS,KAXpD,CAuCwCmS,EAAajL,EAAYoD,GACvBpD,EAAYoD,EAAgB5C,EAASgH,EAAYtH,EAAe5rB,GAmF1GurB,EAAOnK,QAAU,CACb2U,SAhCJ,SAAkBY,EAAa32B,GAE3B,IAlBIs3B,EAEAzH,EACAC,EAeE3C,EAAc7L,EAAQ,iBAExBoK,EAAayB,EAAY0D,oBACzB/B,EAAiB3B,EAAYwB,kBAAkBpC,OAC/CL,EAAUiB,EAAY8C,iBACtBiD,EAAa/F,EAAYkE,gBACzBzF,EAAgBuB,EAAY8E,uBAE5B76B,SAEJ,GAA2B,iBAAhBu/B,EAIHv/B,EA1DZ,SAAqBu/B,EAAajL,GAG9B,GAFiBiL,EAAYnuB,QAAQ,MAAiC,MAAzBkjB,EAAWC,UAExD,CAIA,IAAI2L,EAAWX,EAAYjG,MAAM,KACjC,GAAwB,IAApB4G,EAAS9/B,OAAb,CAIA,IAAIq4B,GAASyH,EAAS,GAClBxH,GAAWwH,EAAS,GACpBvH,GAAWuH,EAAS,GAExB,OAAQtB,MAAMnG,KAAWmG,MAAMlG,KAAakG,MAAMjG,KAhBtD,CAuDwB4G,EAAajL,IA3B7BmE,IAFAyH,EA8ByBX,EA9BFjG,MAAM,MAEX,GAClBZ,GAAWwH,EAAS,IACTA,EAAS,GAEP,GAAKxH,EAAU,KAAOD,GA0BvB6G,EAAcC,EAAajL,EAAYoD,EAAgB5C,EAASgH,EAAYtH,EAAe5rB,OAEpG,IAA2B,iBAAhB22B,EAGd,OAFAv/B,EAAQu/B,EAKZ,YAAIv/B,EAIJ,OAAOA,qnBClQX,IAAIo+B,EAAclU,EAAQ,kBAGpBiW,EAAc,qDAoEdC,EAAc,CAChBxK,OAAQ,CACJ5yB,KAAM,SACNq9B,YArEkB,CACtB,WACA,UACA,OACA,OACA,UACA,WAiEA/O,KAAM,CACFtuB,KAAM,SACNq9B,YAbgB,CACpB,UACA,SACA,WAWIC,YAAa,SAACpV,EAAQtiB,GAAT,MAAsC,SAAlBA,EAAOgtB,QACxC2K,QAAS,yDACTC,UAAW,SAAC53B,GAAD,MAA8B,SAAlBA,EAAOgtB,SAElCQ,eAAgB,CACZpzB,KAAM,SACNs9B,YAAa,SAACpV,GAAD,OAAsB,GAAVA,GACzBqV,QAAS,0BAEbjS,OAAQ,SACRgJ,QAAS,SACTjB,aAAc,CACVrzB,KAAM,SACNq9B,YA9EwB,CAC5B,WACA,UACA,UACA,aA4EA5W,QAAS,UACTG,aAAc,CACV5mB,KAAM,UACNs9B,YAAa,SAACpV,EAAQtiB,GAAT,WAAoBA,EAAO6gB,SACxC8W,QAAS,yEAEb9I,iBAAkB,CACdz0B,KAAM,SACNq9B,YAjFsB,CAC1B,SACA,QACA,YAgFA3I,eAAgB,SAChBnC,YAAa,CACTvyB,KAAM,SACNy9B,aAAc,CACV,CACIH,YAAa,SAACpV,GAAD,OAAsB,GAAVA,GACzBqV,QAAS,0BAEb,CACID,YAAa,SAACpV,EAAQtiB,GAAT,OAAqBA,EAAO2xB,aACzCgG,QAAS,sDAIrB7W,SAAU,CACN1mB,KAAM,SACNs9B,YAAa,SAACpV,GAAD,OAAsB,GAAVA,GACzBqV,QAAS,0BAEbjK,iBAAkB,UAClB3M,aAAc,UACd8M,iBAAkB,WAClB+D,uBAAwB,UACxBlF,kBAAmB,UACnBT,eAAgB,UAChBW,uBAAwB,UACxBkB,2BAA4B,UAC5BlC,cA5EuB,CACvBxxB,KAAM,SACN8E,SAAU,CACN2sB,SAAU,SACVC,QAAS,SACTC,QAAS,SACTC,SAAU,WAuEd2B,SAAU,CACNvzB,KAAM,SACNq9B,YA3GoB,CACxB,OACA,gBA2GA7J,UAAW,UACX+D,YAAa,CACTv3B,KAAM,WAEV+0B,aAAc,CACV/0B,KAAM,UACNs9B,YAAa,SAACpV,EAAQtiB,GAAT,MAAsC,YAAlBA,EAAOgtB,QACxC2K,QAAS,qEAIXG,EAAgB,CAClBrM,YAAa,CACTrxB,KAAM,SACNw9B,aACAF,YAAa,SAACrE,GACV,OAAOA,EAAIf,MAAMiF,IAErBI,QAAS,iGAEbjM,WAAY,CACRtxB,KAAM,SACN8E,SAAU,CACNysB,UAAW,SACXnH,QAAS,SACTuM,cAAe,UAEnB6G,cAEJhM,cArIgC,CAChCxxB,KAAM,SACN8E,SAAU,CACN2sB,SAAU,CACNzxB,KAAM,SACNw9B,cAEJ9L,QAAS,CACL1xB,KAAM,SACNw9B,cAEJ7L,QAAS,CACL3xB,KAAM,SACNw9B,cAEJ5L,SAAU,CACN5xB,KAAM,SACNw9B,eAGRA,cAkHA3L,eAAgB,UAChBW,uBAAwB,UACxBV,QAAS,CACL9xB,KAAM,WACNw9B,cAEJzL,MAAO,CACH/xB,KAAM,SACN8E,SAAU,CACNktB,eAAgB,SAChBC,gBAAiB,WAGzBC,SAAU,CACNlyB,KAAM,SACN8E,SAAU,CACNqtB,OAAQ,SACR/vB,SAAU,SACVgwB,KAAM,UAEVoL,cAEJlI,SAAU,SACV8D,cAAe,SACfC,WAAY,SACZC,iBAAkB,SAClBjH,eAAgB,SAChBsL,aAAc,SACdlL,QAAS,CACLzyB,KAAM,SACN8E,SAAU,CACN4tB,WAAY,CACR1yB,KAAM,SACNw9B,cAEJ7K,oBAAqB,CACjB3yB,KAAM,SACNw9B,cAEJ3K,8BAA+B,CAC3B7yB,KAAM,SACNw9B,cAEJ1K,mBAAoB,CAChB9yB,KAAM,SACNw9B,iBA2BhB,SAASI,EAAcnC,GAGnB,gBAFYL,EAAYO,SAASF,GAcrC,SAASoC,EAAaC,EAAYC,EAAMzS,EAAxC,GAA4E,IAA5B0S,EAA4B,6BAA5E,KACQxW,EAAUprB,OAAO6E,KAAK68B,GAAY5hC,KAAI,SAACa,GACvC,IAAKghC,EAAKhhC,GAEN,OADAmgB,QAAQjS,MAARiS,UAAiBoO,EAAjBpO,yBAAwCngB,OAI5C,IAAIC,EAAQ8gC,EAAW/gC,GACnBkB,EAAO8/B,EAAKhhC,GAMhB,GAJoB,iBAATkB,IACPA,EAAO,CAAC+B,KAAM/B,IAGA,WAAdA,EAAK+B,MAGL,IAFY69B,EAAa7gC,EAAOogC,EAAR,oBAAkCrgC,EAAlC,SAGpB,OAAO,OAER,GAAIkhC,EAAOjhC,KAAUiB,EAAK+B,KAE7B,OADAkd,QAAQjS,MAARiS,UAAiBoO,EAAjBpO,YAA2BngB,EAA3BmgB,8BAAoDjf,EAAK+B,KAAzDkd,0BAAoFlgB,GAApFkgB,kBAIJ,GAAIjf,EAAKw/B,cAAgBx/B,EAAKw/B,aAAargC,OAEvC,IADA,IAAIA,EAASa,EAAKw/B,aAAargC,OACtB8rB,EAAI,EAAGA,EAAI9rB,EAAQ8rB,IAAK,OACAjrB,EAAKw/B,aAAavU,GAA1CoU,EADwB,EACxBA,YAAaC,EADW,EACXA,QAClB,IAAKD,EAAYtgC,EAAO8gC,GAEpB,OADA5gB,QAAQjS,MAARiS,UAAiBoO,EAAjBpO,YAA2BngB,EAA3BmgB,2BAAiDqgB,OAM7D,OAAIt/B,EAAKq/B,cAAgBr/B,EAAKq/B,YAAYtgC,EAAO8gC,IAC7C5gB,QAAQjS,MAARiS,UAAiBoO,EAAjBpO,YAA2BngB,EAA3BmgB,2BAAiDjf,EAAKs/B,cAItDt/B,EAAKo/B,cAAoD,IAArCp/B,EAAKo/B,YAAYjvB,QAAQpR,IAC7CkgB,QAAQjS,MAARiS,UAAiBoO,EAAjBpO,YAA2BngB,EAA3BmgB,yCAA+Dna,KAAKC,UAAU/E,EAAKo/B,aAAnFngB,cAAqGlgB,EAArGkgB,qBAIAjf,EAAK6G,WACO+4B,EAAa7gC,EAAOiB,EAAK6G,SAAb,oBAAoC/H,EAApC,UAiChC,OAvBKihC,GACDxW,EAAQ1rB,KAAR0rB,QAAO0W,EAAS9hC,OAAO6E,KAAK88B,GAAM7hC,KAAI,SAACa,GACnC,IAAIkB,EAAO8/B,EAAKhhC,GAKhB,GAJoB,iBAATkB,IACPA,EAAO,CAAC+B,KAAM/B,IAGdA,EAAKu/B,UAAW,CAChB,IAAIA,EAAYv/B,EAAKu/B,UAKrB,GAJyB,mBAAdA,IACPA,EAAYA,EAAUM,IAGtBN,YAAaM,EAAW/gC,GAExB,OADAmgB,QAAQjS,MAARiS,UAAiBoO,EAAjBpO,mCAAkDngB,EAAlDmgB,SAKR,cAIDsK,EAAQ3Z,QAAO,SAACC,EAAK9J,GACxB,OAAO8J,GAAO9J,QAUtB,SAASqwB,EAAezuB,GACpB,OAAOi4B,EAAaj4B,EAAQw3B,EAAa,qBAa7CjM,EAAOnK,QAAU,CACbkV,SAtIJ,SAAkBT,EAAO71B,GACrB,IAAIu4B,EAAaP,EAAcnC,GAC3B2C,EAAgB/J,EAAezuB,GAEnC,OAAOu4B,GAAcC,GAmIrB/J,iBACAuJ,gBACA9D,iBARJ,SAA0BkC,GACtB,OAAO6B,EAAa7B,EAAU0B,EAAe,qDVzXjD,Q,gIWIIW,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EACNE,EAAc,GAAND,EAER33B,EAAa,IAAN23B,EAEPE,EAAa,SAAoBxW,EAAQyW,GAC3C,MAAO,GAAG/gC,OAAOsqB,EAAQ,KAAKtqB,OAAOsqB,EAAS,EAAI,GAAGtqB,OAAO+gC,EAAM,KAAOA,EAAM,SAG7EC,EAAoB,CAAC,CACvBC,WAAYC,IACZC,YAAa,SAAqBv5B,GAChC,OAAOk5B,EAAWvkC,KAAK+0B,MAAM1pB,EAAOqB,GAAO,UAE5C,CACDg4B,WAAYh4B,EACZk4B,YAAa,SAAqBv5B,GAChC,OAAOk5B,EAAWvkC,KAAK+0B,MAAM1pB,EAAOi5B,GAAQ,WAE7C,CACDI,WAAYJ,EACZM,YAAa,SAAqBv5B,GAChC,OAAOk5B,EAAWvkC,KAAK+0B,MAAM1pB,EAAOg5B,GAAM,SAE3C,CACDK,WAAYL,EACZO,YAAa,SAAqBv5B,GAChC,OAAOk5B,EAAWvkC,KAAK+0B,MAAM1pB,EAAO+4B,GAAO,UAE5C,CACDM,WAAYN,EACZQ,YAAa,SAAqBv5B,GAChC,OAAOk5B,EAAWvkC,KAAK+0B,MAAM1pB,EAAO64B,GAAS,YAE9C,CACDQ,WAAYR,EACZU,YAAa,WACX,MAAO,cAIPC,EAAS,SAAehiC,GAC1B,OAAOA,EAAMiiC,cAAc3I,MAAM,KAAK,GAAGlG,MAAM,GAAI,GAAGzX,QAS7CumB,EAAmB,SAA0Bl/B,GACtD,MAAO,CACLm/B,MAAO,SAAe35B,GACpB,OAAOw5B,EAAOx5B,GAAQ,QAExB45B,SAAU,SAAkB55B,GAC1B,OAAOw5B,EAAOx5B,GAAM4qB,MAAM,GAAI,IAEhCiP,SAAU,SAAkB75B,GAC1B,OAAOo5B,EAAkB/wB,QAAO,SAAUC,EAAKob,GAC7C,OAAOA,EAAE2V,WAAaS,KAAKC,MAAQ/5B,EAAO0jB,EAAE6V,YAAYO,KAAKC,MAAQ/5B,GAAQsI,IAC5EkxB,EAAOx5B,KAEZg6B,QAAS,WACP,MAAO,iBAETx/B,IAEOy/B,EAAa,SAAoBz/B,EAAM0/B,EAAcC,GAC9D,MAAO,CACLR,MAAO,SAAe35B,GACpB,OAAO05B,EAAiBl/B,EAAjBk/B,CAAuB15B,IAEhC45B,SAAU,SAAkB55B,GAC1B,OAAO05B,EAAiBl/B,EAAjBk/B,CAAuB15B,IAEhC65B,SAAU,SAAkB75B,GAC1B,OAjCkB,SAAoBA,EAAMo6B,EAASF,GACzD,IAAIC,EAAaE,UAAUziC,OAAS,QAAsB6W,IAAjB4rB,UAAU,GAAmBA,UAAU,GAAK,GACrF,OAAoBniC,IAAMmqB,cAAcvN,IAASwN,IAAS,GAAI4X,EAAc,CAC1EzpB,QAAsBvY,IAAMmqB,cAAc,MAAO,KAAM8X,EAAYn6B,KACjEo6B,GA6BOE,CAAWZ,EAAiB,QAAjBA,CAA0B15B,GAAoB9H,IAAMmqB,cAAc,OAAQ,KAAMqX,EAAiBl/B,EAAjBk/B,CAAuB15B,IAAQk6B,EAAcC,IAEjJH,QAAS,WACP,MAAO,iBAETx/B,ICjFW,SAAS+/B,EAAWxY,GACjC,IAAI/hB,EAAO+hB,EAAK/hB,KACZw6B,EAAYzY,EAAKvnB,KACjBA,OAAqB,IAAdggC,EAAuB,WAAaA,EAC3CL,EAAapY,EAAKoY,WAClBM,EAAoB1Y,EAAKmY,aACzBA,OAAqC,IAAtBO,EAA+B,GAAKA,EACnDC,EAAU16B,aAAgB85B,KAAO95B,EAAO,IAAI85B,KAAK95B,GAGjD26B,OADmBlsB,IAATzO,GAA+B,OAATA,GAAwC,iBAAvB06B,EAAQpqB,WACpC,UAAY9V,EACrC,OAAoBtC,IAAMmqB,cAAcnqB,IAAMmL,SAAU,KAAM42B,EAAWU,EAAUT,EAAcC,EAAnCF,CAA+CS,IAE/GH,EAAW/X,UAAY,CACrBxiB,KAAM46B,IAAUC,UAAU,CAACD,IAAUE,WAAWhB,MAAOc,IAAUhY,OAAQgY,IAAUlY,SAKnFloB,KAAMogC,IAAUG,MAAM,CAAC,QAAS,WAAY,aAK5CZ,WAAYS,IAAUI,KAKtBd,aAAcU,IAAUrE","file":"static/js/9.b58797f2.chunk.js","sourcesContent":["/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n","import styles from '@patternfly/react-styles/css/components/Table/table';\nexport const breakWord = () => ({\n    className: styles.modifiers.breakWord\n});\nexport const fitContent = () => ({\n    className: styles.modifiers.fitContent\n});\nexport const nowrap = () => ({\n    className: styles.modifiers.nowrap\n});\nexport const truncate = () => ({\n    className: styles.modifiers.truncate\n});\nexport const wrappable = () => ({\n    className: styles.modifiers.wrap\n});\n//# sourceMappingURL=wrappable.js.map","import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Apply sort filter to filters.\n *\n * @param {object} params\n * @param {{ onSort: Function, sortActive: boolean, sortDirection: string, isSortDefault: boolean,\n *     sortDefaultInitialDirection: string }} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {object}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} }) => {\n  const { id } = filter;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === id\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  if (\n    hasSort &&\n    !updatedFilter.sortActive &&\n    !query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    updatedFilter.isSortDefault === true\n  ) {\n    updatedFilter.sortActive = true;\n\n    if (updatedFilter.sortDefaultInitialDirection) {\n      updatedFilter.sortDirection = updatedFilter.sortDefaultInitialDirection;\n    }\n  }\n\n  return updatedFilter;\n};\n\nconst applyWrappableFilters = ({ filter = {} }) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Apply additional properties to filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {Array}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} }) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.cellData\n * @param {object} params.session\n * @returns {{columnHeaders: Array, cells: Array, data: object}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, session = {} }) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value]) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value);\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    filters.forEach(({ id, cell, cellWidth, header, onSort, sortActive, sortDirection, transforms }) => {\n      let headerUpdated;\n      let cellUpdated;\n\n      if (allCells[id]) {\n        headerUpdated = allCells[id]?.title ?? id;\n        cellUpdated = allCells[id]?.value ?? '';\n      } else if (id) {\n        headerUpdated = translate('curiosity-inventory.header', { context: id });\n        cellUpdated = '';\n      }\n\n      // set table header cell filter params\n      if (header) {\n        headerUpdated = (typeof header === 'function' && header({ ...allCells })) || header;\n      }\n\n      if (\n        typeof headerUpdated === 'string' ||\n        typeof headerUpdated === 'number' ||\n        React.isValidElement(headerUpdated)\n      ) {\n        headerUpdated = {\n          title: headerUpdated\n        };\n      }\n\n      if (headerUpdated) {\n        headerUpdated.transforms = [];\n\n        if (Array.isArray(transforms)) {\n          headerUpdated.transforms = headerUpdated.transforms.concat([...transforms]);\n        }\n\n        if (typeof cellWidth === 'number') {\n          headerUpdated.transforms.push(PfCellWidth(cellWidth));\n        }\n      }\n\n      if (typeof onSort === 'function') {\n        headerUpdated = {\n          ...headerUpdated,\n          onSort: obj => onSort({ ...allCells }, { ...obj, id }),\n          sortActive,\n          sortDirection\n        };\n      }\n\n      // set table row cell filter params\n      if (cell) {\n        cellUpdated = (typeof cell === 'function' && cell({ ...allCells }, { ...session })) || cell;\n      }\n\n      if (typeof cellUpdated === 'string' || typeof cellUpdated === 'number' || React.isValidElement(cellUpdated)) {\n        cellUpdated = {\n          title: cellUpdated\n        };\n      }\n\n      updatedColumnHeaders.push(headerUpdated);\n      updatedCells.push(cellUpdated);\n    });\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryListHelpers = {\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryListHelpers as default,\n  inventoryListHelpers,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DropdownDirection,\n  DropdownPosition,\n  Select as PfSelect,\n  SelectOption as PfSelectOption,\n  SelectVariant\n} from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _findIndex from 'lodash/findIndex';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Pass direction as select component variant option.\n *\n * @type {DropdownDirection}\n */\nconst SelectDirection = DropdownDirection;\n\n/**\n * Pass position as select component variant option.\n *\n * @type {DropdownPosition}\n */\nconst SelectPosition = DropdownPosition;\n\n/**\n * A wrapper for Patternfly Select. Provides restructured event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @fires onToggle\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @event onToggle\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        let isSelected;\n\n        if (_isPlainObject(convertedOption.value)) {\n          isSelected = _findIndex(activateOptions, convertedOption.value) > -1;\n\n          if (!isSelected) {\n            const tempSearch = activateOptions.find(activeOption =>\n              Object.values(convertedOption.value).includes(activeOption)\n            );\n            isSelected = !!tempSearch;\n          }\n        } else {\n          isSelected = activateOptions.includes(convertedOption.value);\n        }\n\n        if (!isSelected) {\n          isSelected = activateOptions.includes(convertedOption.title);\n        }\n\n        updatedOptions[index].selected = isSelected;\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const {\n      ariaLabel,\n      className,\n      direction,\n      isDisabled,\n      isToggleText,\n      maxHeight,\n      placeholder,\n      position,\n      toggleIcon,\n      variant\n    } = this.props;\n\n    const pfSelectOptions = {\n      direction,\n      maxHeight\n    };\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    /**\n     * Note: PFReact missing select border on compile\n     * Related https://github.com/patternfly/patternfly-react/issues/5650 and\n     * https://github.com/cssnano/cssnano/issues/1051\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select${(!isToggleText && '__no-toggle-text') || ''} ${\n          (position === DropdownPosition.right && 'curiosity-select__position-right') || ''\n        } ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isOpen={isExpanded}\n        toggleIcon={toggleIcon}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(`${option.title}-${option.value}`)}\n              id={window.btoa(`${option.title}-${option.value}`)}\n              value={option.title}\n              data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{toggleIcon: (Node|Function), className: string, ariaLabel: string, onSelect: Function,\n *     isToggleText: boolean, maxHeight: number, name: string, options: (Array|object),\n *     selectedOptions: (number|string|Array), variant: string, id: string, isDisabled: boolean,\n *     placeholder: string, position: string, direction: string}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  direction: PropTypes.oneOf(Object.values(SelectDirection)),\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  maxHeight: PropTypes.number,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.string,\n  position: PropTypes.oneOf(Object.values(SelectPosition)),\n  selectedOptions: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]))\n  ]),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{toggleIcon: (Node|Function), className: string, ariaLabel: string, onSelect: Function, isToggleText: boolean,\n *     maxHeight: number, name: string, options: (Array|object), selectedOptions: (number|string|Array),\n *     variant: SelectVariant.single, id: string, isDisabled: boolean, placeholder: string,\n *     position: DropdownPosition.left, direction: DropdownDirection.down}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  direction: SelectDirection.down,\n  id: helpers.generateId(),\n  isDisabled: false,\n  isToggleText: true,\n  maxHeight: null,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  position: SelectPosition.left,\n  selectedOptions: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select, SelectDirection, SelectPosition };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","import { helpers } from '../../common/helpers';\n\n/**\n * Create a consistent mock event object.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget, name, id: *, persist: Function, value, target}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * A tab pass-through component for passing props to InventoryTabs.\n *\n * @param {object} props\n * @param {boolean} props.active\n * @param {Node} props.children\n * @param {string} props.title\n * @returns {Node}\n */\n// eslint-disable-next-line no-unused-vars\nconst InventoryTab = ({ active, children, title }) => <React.Fragment>{children}</React.Fragment>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nInventoryTab.propTypes = {\n  children: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  title: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nInventoryTab.defaultProps = {\n  active: false\n};\n\nexport { InventoryTab as default, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { helpers } from '../../common';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { Loader } from '../loader/loader';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { Table } from '../table/table';\n\n/**\n * ToDo: Consider removing the query prop entirely.\n * The current API doesn't allow setting more than \"offset\" and \"limit\"\n */\n/**\n * ToDo: Review moving the \"onScroll\" layout into a standalone component.\n */\n/**\n * A system inventory guests component.\n *\n * @augments React.Component\n * @fires onUpdateGuestsData\n * @fires onScroll\n */\nclass GuestsList extends React.Component {\n  state = { currentPage: 0, limit: 100, previousData: [] };\n\n  componentDidMount() {\n    this.onUpdateGuestsData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentPage } = this.state;\n\n    if (currentPage !== prevState.currentPage) {\n      this.onUpdateGuestsData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGuestsData\n   */\n  onUpdateGuestsData = () => {\n    const { currentPage, limit } = this.state;\n    const { getHostsInventoryGuests, query, id } = this.props;\n\n    if (id) {\n      const updatedQuery = {\n        ...query,\n        [RHSM_API_QUERY_TYPES.LIMIT]: limit,\n        [RHSM_API_QUERY_TYPES.OFFSET]: currentPage * limit || 0\n      };\n\n      const { inventoryGuestsQuery } = apiQueries.parseRhsmQuery(updatedQuery);\n      getHostsInventoryGuests(id, inventoryGuestsQuery);\n    }\n  };\n\n  /**\n   * Update page state.\n   *\n   * @event onScroll\n   * @param {object} event\n   */\n  onScroll = event => {\n    const { target } = event;\n    const { currentPage, limit, previousData } = this.state;\n    const { numberOfGuests, pending, listData } = this.props;\n\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > (currentPage + 1) * limit && bottom && !pending) {\n      const newPage = currentPage + 1;\n      const updatedData = [...previousData, ...(listData || [])];\n\n      this.setState({\n        previousData: updatedData,\n        currentPage: newPage\n      });\n    }\n  };\n\n  renderLoader() {\n    const { currentPage } = this.state;\n    const { filterGuestsData, listData, pending } = this.props;\n\n    if (currentPage > 0 && pending) {\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n            rowCount: 0,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  }\n\n  /**\n   * ToDo: Consider moving the \"meaning of life\" into the default props on iteration.\n   * For everyone else... move the 42 into default props, possibly the 275.\n   */\n  /**\n   * Render a guests table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { previousData } = this.state;\n    const { filterGuestsData, listData, numberOfGuests, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = [...previousData, ...(listData || [])].map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: filterGuestsData,\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    // Include the table header\n    let updatedHeight = (numberOfGuests + 1) * 42;\n    updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n    return (\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={this.onScroll}\n        >\n          {this.renderLoader()}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render a guest list table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { currentPage } = this.state;\n    const { error, filterGuestsData, listData, numberOfGuests, pending, perPageDefault } = this.props;\n\n    return (\n      <div className={`fadein ${(error && 'blur') || ''}`}>\n        {pending && currentPage === 0 && (\n          <Loader\n            variant=\"table\"\n            tableProps={{\n              borders: false,\n              colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n              colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n              rowCount: numberOfGuests < perPageDefault ? numberOfGuests : perPageDefault,\n              variant: TableVariant.compact\n            }}\n          />\n        )}\n        {((!pending && currentPage === 0) || currentPage > 0) && this.renderTable()}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: object,\n *     pending: boolean, query: object, numberOfGuests: number, perPageDefault: number, id: string,\n *     error: boolean}}\n */\nGuestsList.propTypes = {\n  error: PropTypes.bool,\n  filterGuestsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventoryGuests: PropTypes.func,\n  listData: PropTypes.array,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  pending: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object,\n  session: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: Array,\n *     pending: boolean, query: object, perPageDefault: number, error: boolean}}\n */\nGuestsList.defaultProps = {\n  error: false,\n  filterGuestsData: [],\n  getHostsInventoryGuests: helpers.noop,\n  listData: [],\n  pending: false,\n  perPageDefault: 5,\n  query: {},\n  session: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventoryGuests: (id, query) => dispatch(reduxActions.rhsm.getHostsInventoryGuests(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.guestsList.makeGuestsList();\n\nconst ConnectedGuestsList = connect(makeMapStateToProps, mapDispatchToProps)(GuestsList);\n\nexport { ConnectedGuestsList as default, ConnectedGuestsList, GuestsList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput as PfTextInput } from '@patternfly/react-core';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly TextInput. Provides restructured event data,\n * and an onClear event for the search type.\n *\n * @augments React.Component\n * @fires onKeyUp\n * @fires onMouseUp\n * @fires onChange\n */\nclass TextInput extends React.Component {\n  state = {\n    updatedValue: null\n  };\n\n  /**\n   * onKeyUp event, provide additional functionality for onClear event.\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  onKeyUp = event => {\n    const { onClear, onKeyUp, type } = this.props;\n    const { currentTarget, keyCode } = event;\n    const clonedEvent = { ...event };\n\n    onKeyUp(createMockEvent(event, true));\n\n    if (keyCode === 27) {\n      if (type === 'search' && currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      } else {\n        this.setState({ updatedValue: '' }, () => {\n          onClear(\n            createMockEvent({ ...clonedEvent, ...{ currentTarget: { ...clonedEvent.currentTarget, value: '' } } })\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * onMouseUp event, provide additional functionality for onClear event.\n   *\n   * @event onMouseUp\n   * @param {object} event\n   */\n  onMouseUp = event => {\n    const { onClear, onMouseUp, type } = this.props;\n    const { currentTarget } = event;\n    const clonedEvent = { ...event };\n\n    onMouseUp(createMockEvent(event, true));\n\n    if (type !== 'search' || currentTarget.value === '') {\n      return;\n    }\n\n    setTimeout(() => {\n      if (currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      }\n    });\n  };\n\n  /**\n   * onChange event, provide restructured event.\n   *\n   * @param {string} value\n   * @param {object} event\n   */\n  onChange = (value, event) => {\n    const { onChange } = this.props;\n    const clonedEvent = { ...event };\n\n    this.setState({ updatedValue: value }, () => {\n      onChange(createMockEvent(clonedEvent));\n    });\n  };\n\n  /**\n   * Render a text input.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedValue } = this.state;\n    const {\n      className,\n      id,\n      isDisabled,\n      name,\n      onChange,\n      onClear,\n      onKeyUp,\n      onMouseUp,\n      isReadOnly,\n      type,\n      value,\n      ...props\n    } = this.props;\n    const updatedName = name || helpers.generateId();\n    const updatedId = id || updatedName;\n\n    return (\n      <PfTextInput\n        id={updatedId}\n        name={updatedName}\n        className={`curiosity-text-input ${className}`}\n        isDisabled={isDisabled || false}\n        onChange={this.onChange}\n        onKeyUp={this.onKeyUp}\n        onMouseUp={this.onMouseUp}\n        isReadOnly={isReadOnly || false}\n        type={type}\n        value={updatedValue ?? value ?? ''}\n        {...props}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.defaultProps = {\n  className: '',\n  id: null,\n  isDisabled: false,\n  isReadOnly: false,\n  name: null,\n  onChange: helpers.noop,\n  onClear: helpers.noop,\n  onKeyUp: helpers.noop,\n  onMouseUp: helpers.noop,\n  type: 'text',\n  value: ''\n};\n\nexport { TextInput as default, TextInput };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer } from 'victory-create-container';\nimport {\n  Chart,\n  ChartAxis,\n  ChartStack,\n  ChartThreshold,\n  ChartThemeColor,\n  ChartArea as PfChartArea,\n  ChartCursorFlyout,\n  ChartCursorTooltip\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: chart redraw flash related to custom tooltips use\n * Removing custom tooltips corrects redraw issues. As a temporary patch, caching at the selector alleviates\n * the symptoms.\n */\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  dataSetsToggle = {};\n\n  resizeObserver = helpers.noop;\n\n  containerRef = React.createRef();\n\n  tooltipRef = React.createRef();\n\n  componentDidMount() {\n    this.setResizeObserve();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * Consumer exposed, hides chart layer.\n   *\n   * @event onHide\n   * @param {string} id\n   */\n  onHide = id => {\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: true };\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns all chart layers back on.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    this.dataSetsToggle = {};\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns chart layer on/off.\n   *\n   * @event onToggle\n   * @param {string} id\n   * @returns {boolean}\n   */\n  onToggle = id => {\n    const updatedToggle = !this.dataSetsToggle[id];\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: updatedToggle };\n    this.forceUpdate();\n\n    return updatedToggle;\n  };\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { chartWidth } = this.state;\n    const { clientWidth = 0 } = this.containerRef.current || {};\n\n    if (clientWidth !== chartWidth) {\n      this.setState({ chartWidth: clientWidth });\n    }\n  };\n\n  /**\n   * Consumer exposed, determine if chart layer on/off.\n   * Note: Using \"setState\" as related to this exposed check gives the appearance of a race condition.\n   * Using a class property with forceUpdate to bypass.\n   *\n   * @param {string} id\n   * @returns {boolean}\n   */\n  getIsToggled = id => this.dataSetsToggle[id] || false;\n\n  /**\n   * Set ResizeObserver for scenarios where the window.resize event doesn't fire.\n   */\n  setResizeObserve() {\n    const containerElement = this.containerRef.current;\n    const { ResizeObserver } = window;\n\n    if (containerElement && ResizeObserver) {\n      const resizeObserver = new ResizeObserver(this.onResizeContainer);\n      resizeObserver.observe(containerElement);\n      this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n    } else {\n      this.onResizeContainer();\n      window.addEventListener('resize', this.onResizeContainer);\n      this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n    }\n  }\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { dataSetsToggle } = this;\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply data set to custom tooltips.\n   *\n   * @returns {Array}\n   */\n  getTooltipData() {\n    const { dataSetsToggle } = this;\n    const { dataSets, chartTooltip } = this.props;\n    let tooltipDataSet = [];\n\n    if (chartTooltip && dataSets && dataSets[0] && dataSets[0].data) {\n      tooltipDataSet = dataSets[0].data.map((dataSet, index) => {\n        const itemsByKey = {};\n\n        dataSets.forEach(data => {\n          if (!dataSetsToggle[data.id] && data.data && data.data[index]) {\n            itemsByKey[data.id] = {\n              color: data.stroke || data.fill || data.color || '',\n              data: _cloneDeep(data.data[index])\n            };\n          }\n        });\n\n        const mockDatum = {\n          datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey, dataSets: _cloneDeep(dataSets) }\n        };\n\n        return {\n          x: dataSet.x,\n          y: null,\n          itemsByKey,\n          tooltip:\n            (React.isValidElement(chartTooltip) && React.cloneElement(chartTooltip, { ...mockDatum })) ||\n            chartTooltip({ ...mockDatum })\n        };\n      });\n    }\n\n    return tooltipDataSet;\n  }\n\n  /**\n   * Return a chart/graph tooltip Victory container component to allow custom HTML tooltips.\n   *\n   * @returns {Node}\n   */\n  renderTooltip() {\n    const { dataSetsToggle } = this;\n    const { chartTooltip, dataSets } = this.props;\n\n    if (!chartTooltip || Object.values(dataSetsToggle).filter(v => v === true).length === dataSets.length) {\n      return null;\n    }\n\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const parsedTooltipData = this.getTooltipData();\n\n    const applyParsedTooltipData = ({ datum }) => {\n      const t = parsedTooltipData.find(v => v.x === datum.x) || {};\n      return t?.tooltip || '';\n    };\n\n    const getXCoordinate = (x, width, tooltipWidth) => {\n      let xCoordinate = x + 10;\n\n      if (x > width / 2) {\n        xCoordinate = x - 10 - tooltipWidth / 2;\n      }\n\n      return xCoordinate;\n    };\n\n    const getYCoordinate = (y, height, tooltipHeight) => {\n      let yCoordinate = y + 10;\n\n      if (y > height / 2) {\n        yCoordinate = y - 10 - tooltipHeight;\n      }\n\n      return yCoordinate;\n    };\n\n    const FlyoutComponent = obj => {\n      const containerRef = this.containerRef.current;\n      const tooltipRef = this.tooltipRef.current;\n      const containerBounds = (containerRef && containerRef.getBoundingClientRect()) || { width: 0, height: 0 };\n      const tooltipBounds = (tooltipRef && tooltipRef.getBoundingClientRect()) || { width: 0, height: 0 };\n      const htmlContent = applyParsedTooltipData({ ...obj });\n\n      if (htmlContent) {\n        return (\n          <g>\n            <foreignObject\n              x={getXCoordinate(obj.x, containerBounds.width, tooltipBounds.width)}\n              y={getYCoordinate(obj.y, containerBounds.height, tooltipBounds.height)}\n              width=\"100%\"\n              height=\"100%\"\n            >\n              <div ref={this.tooltipRef} style={{ display: 'inline-block' }} xmlns=\"http://www.w3.org/1999/xhtml\">\n                {htmlContent}\n              </div>\n            </foreignObject>\n          </g>\n        );\n      }\n\n      return <g />;\n    };\n\n    const labelComponent = (\n      <ChartCursorTooltip\n        flyout={<ChartCursorFlyout />}\n        flyoutStyle={{ fill: 'transparent' }}\n        labelComponent={<FlyoutComponent />}\n        renderInPortal\n      />\n    );\n\n    return (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={labelComponent}\n        voronoiPadding={50}\n        mouseFollowTooltips\n      />\n    );\n  }\n\n  /**\n   * Return a custom chart/graph legend component.\n   *\n   * @returns {Node}\n   */\n  renderLegend() {\n    const { chartLegend, dataSets } = this.props;\n\n    if (!chartLegend) {\n      return null;\n    }\n\n    const legendProps = {\n      datum: { dataSets: _cloneDeep(dataSets) },\n      chart: {\n        hide: this.onHide,\n        revert: this.onRevert,\n        toggle: this.onToggle,\n        isToggled: this.getIsToggled\n      }\n    };\n\n    return (\n      (React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n      chartLegend({ ...legendProps })\n    );\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const { dataSetsToggle } = this;\n    const { dataSets } = this.props;\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { chartLegend, padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const tooltipComponent = { containerComponent: (maxY >= 0 && this.renderTooltip()) || undefined };\n    const chartProps = { padding, ...chartDomain, ...tooltipComponent };\n\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n        {chartLegend && <div className=\"curiosity-chartarea-description victory-legend\">{this.renderLegend()}</div>}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartLegend: Node|Function, chartTooltip: Node|Function, padding, xAxisTickFormat: Function,\n *     themeColor: string, yAxisTickFormat: Function, domain: object|Array, dataSets: object,\n *     xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartLegend: null, chartTooltip: null, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: null, themeColor: string, yAxisTickFormat: null, domain: object,\n *     dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, productLabel, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      header = getTooltipDate({\n        date: itemsByKey[key]?.data.date,\n        granularity\n      });\n    }\n\n    const tempDataFacet = {\n      color: itemsByKey[key]?.color\n    };\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key]?.data.hasInfinite && t('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel'));\n\n      tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n      tempDataFacet.value = thresholdStringValue;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n      tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product: productLabel });\n      tempDataFacet.value = dataFactsValue;\n    }\n\n    data.push(tempDataFacet);\n  });\n\n  return (\n    <div className=\"victory-tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  <div\n                    aria-hidden\n                    className=\"legend-icon victory-legend-icon\"\n                    style={{\n                      backgroundColor: dataFacet.color || 'transparent'\n                    }}\n                  />\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, productLabel: string, t: translate}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  productLabel: '',\n  t: translate\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs as PfTabs, Tab, TabTitleText, Grid, GridItem } from '@patternfly/react-core';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: PF tabs misinterprets \"isElementInView\" when tab title nodes are loaded dynamically\n * It appears the use of isElementInView within PF tabs is trying to be predicative in using\n * \"getBoundingClientRect\" but produces questionable results in scenarios where content is\n * async created. isElementInView assumes some form of the content will always be there\n * instead of scenarios where someone tries to dynamically apply components. It may be good to\n * review using a window.setTimeout(() => handleScrollButtons()) in componentDidMount.\n *\n * Our temporary solution is to simply hide the buttons with a manual set flag affecting the\n * CSS class. This will most likely cause long-term issues.\n */\n/**\n * ToDo: Insights frontend components uses a custom tabs layout, investigate related CSS classes\n * Originally we applied the CSS classes, but they appeared to provide nothing. Since Insights\n * rolled its own tabs we're hesitant to apply said classes without understanding what they provide.\n */\n/**\n * A set of tabs.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass Tabs extends React.Component {\n  state = {\n    updatedActiveTab: null,\n    updatedTabs: null\n  };\n\n  componentDidMount() {\n    const { updatedTabs } = this.state;\n\n    if (updatedTabs === null) {\n      this.setTabData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tabs } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (!_isEqualWith(prevProps.tabs, tabs, customizer)) {\n      this.setTabData();\n    }\n  }\n\n  /**\n   * On tab selected\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {number} params.index\n   */\n  onTab = ({ index }) => {\n    const { onTab } = this.props;\n\n    this.setState(\n      {\n        updatedActiveTab: index\n      },\n      () => onTab({ index })\n    );\n  };\n\n  /**\n   * Convert tab objects into the required PF Tab format.\n   */\n  setTabData() {\n    const { activeTab, defaultActiveTab, tabs } = this.props;\n    let updatedActiveTab = defaultActiveTab;\n\n    const updatedTabs = tabs.map(({ active, content, title }, index) => {\n      updatedActiveTab = active ? index : updatedActiveTab;\n\n      return (\n        <Tab key={title} eventKey={index} title={<TabTitleText>{title}</TabTitleText>}>\n          {content}\n        </Tab>\n      );\n    });\n\n    if (typeof activeTab === 'number') {\n      updatedActiveTab = activeTab;\n    }\n\n    this.setState({\n      updatedActiveTab,\n      updatedTabs\n    });\n  }\n\n  /**\n   * Apply props to tabs.\n   *\n   * @returns {Node}\n   */\n  renderTabs() {\n    const { updatedActiveTab, updatedTabs } = this.state;\n    const { className, hasOverflowScroll } = this.props;\n\n    return (\n      <PfTabs\n        className={`curiosity-tabs${(!hasOverflowScroll && '__no-scroll') || ''} ${className || ''}`}\n        activeKey={updatedActiveTab}\n        onSelect={(event, index) => this.onTab({ event, index })}\n        mountOnEnter\n        unmountOnExit\n        inset={{\n          default: 'insetNone',\n          md: 'insetLg'\n        }}\n      >\n        {updatedTabs}\n      </PfTabs>\n    );\n  }\n\n  /**\n   * Render tabs.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"curiosity-tabs-container\">\n        <GridItem span={12}>{this.renderTabs()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.propTypes = {\n  activeTab: PropTypes.number,\n  className: PropTypes.string,\n  defaultActiveTab: PropTypes.number,\n  hasOverflowScroll: PropTypes.bool,\n  onTab: PropTypes.func,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      content: PropTypes.node.isRequired,\n      title: PropTypes.node.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.defaultProps = {\n  activeTab: null,\n  className: '',\n  defaultActiveTab: 0,\n  hasOverflowScroll: false,\n  onTab: helpers.noop,\n  tabs: []\n};\n\nexport { Tabs as default, Tabs };\n","import { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SLA_TYPES as SLA_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES as USAGE_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = optionsType => {\n  switch (optionsType) {\n    case RHSM_API_QUERY_TYPES.SLA:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.slaPremium'),\n            value: SLA_TYPES.PREMIUM\n          },\n          {\n            title: translate('curiosity-toolbar.slaStandard'),\n            value: SLA_TYPES.STANDARD\n          },\n          {\n            title: translate('curiosity-toolbar.slaSelfSupport'),\n            value: SLA_TYPES.SELF\n          },\n          {\n            title: translate('curiosity-toolbar.slaNone'),\n            value: SLA_TYPES.NONE\n          }\n        ]\n      };\n    case RHSM_API_QUERY_TYPES.USAGE:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.usageDevelopment'),\n            value: USAGE_TYPES.DEVELOPMENT\n          },\n          {\n            title: translate('curiosity-toolbar.usageDisaster'),\n            value: USAGE_TYPES.DISASTER\n          },\n          {\n            title: translate('curiosity-toolbar.usageProduction'),\n            value: USAGE_TYPES.PRODUCTION\n          },\n          {\n            title: translate('curiosity-toolbar.usageUnspecified'),\n            value: USAGE_TYPES.UNSPECIFIED\n          }\n        ]\n      };\n    default:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.SLA }),\n            value: RHSM_API_QUERY_TYPES.SLA\n          },\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.USAGE }),\n            value: RHSM_API_QUERY_TYPES.USAGE\n          }\n        ]\n      };\n  }\n};\n\nconst toolbarHelpers = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarHelpers as default, toolbarHelpers, getOptionsType };\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { getOUIAProps, getDefaultOUIAId } from '../../helpers';\nexport class FormSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            this.props.onChange(event.currentTarget.value, event);\n        };\n        if (!props.id && !props['aria-label']) {\n            // eslint-disable-next-line no-console\n            console.error('FormSelect requires either an id or aria-label to be specified');\n        }\n        this.state = {\n            ouiaStateId: getDefaultOUIAId(FormSelect.displayName, props.validated)\n        };\n    }\n    render() {\n        const _a = this.props, { children, className, value, validated, isDisabled, isRequired, ouiaId, ouiaSafe } = _a, props = __rest(_a, [\"children\", \"className\", \"value\", \"validated\", \"isDisabled\", \"isRequired\", \"ouiaId\", \"ouiaSafe\"]);\n        /* find selected option and get placeholder flag */\n        const selectedOption = React.Children.toArray(children).find((option) => option.props.value === value);\n        const isSelectedPlaceholder = selectedOption && selectedOption.props.isPlaceholder;\n        return (React.createElement(\"select\", Object.assign({}, props, { className: css(styles.formControl, className, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, isSelectedPlaceholder && styles.modifiers.placeholder), \"aria-invalid\": validated === ValidatedOptions.error }, getOUIAProps(FormSelect.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), { onChange: this.handleChange, disabled: isDisabled, required: isRequired, value: value }), children));\n    }\n}\nFormSelect.displayName = 'FormSelect';\nFormSelect.defaultProps = {\n    className: '',\n    value: '',\n    validated: 'default',\n    isDisabled: false,\n    isRequired: false,\n    onBlur: () => undefined,\n    onFocus: () => undefined,\n    onChange: () => undefined,\n    ouiaSafe: true\n};\n//# sourceMappingURL=FormSelect.js.map","export const c_form_control_textarea_Height = {\n  \"name\": \"--pf-c-form-control--textarea--Height\",\n  \"value\": \"auto\",\n  \"var\": \"var(--pf-c-form-control--textarea--Height)\"\n};\nexport default c_form_control_textarea_Height;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport heightToken from \"@patternfly/react-tokens/dist/esm/c_form_control_textarea_Height\";\nimport { css } from '@patternfly/react-styles';\nimport { capitalize, ValidatedOptions, canUseDOM } from '../../helpers';\nexport var TextAreResizeOrientation;\n(function (TextAreResizeOrientation) {\n    TextAreResizeOrientation[\"horizontal\"] = \"horizontal\";\n    TextAreResizeOrientation[\"vertical\"] = \"vertical\";\n    TextAreResizeOrientation[\"both\"] = \"both\";\n})(TextAreResizeOrientation || (TextAreResizeOrientation = {}));\nexport class TextAreaBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (event) => {\n            // https://gomakethings.com/automatically-expand-a-textarea-as-the-user-types-using-vanilla-javascript/\n            const field = event.currentTarget;\n            if (this.props.autoResize && canUseDOM) {\n                field.style.setProperty(heightToken.name, 'inherit');\n                const computed = window.getComputedStyle(field);\n                // Calculate the height\n                const height = parseInt(computed.getPropertyValue('border-top-width')) +\n                    parseInt(computed.getPropertyValue('padding-top')) +\n                    field.scrollHeight +\n                    parseInt(computed.getPropertyValue('padding-bottom')) +\n                    parseInt(computed.getPropertyValue('border-bottom-width'));\n                field.style.setProperty(heightToken.name, `${height}px`);\n            }\n            if (this.props.onChange) {\n                this.props.onChange(field.value, event);\n            }\n        };\n        if (!props.id && !props['aria-label']) {\n            // eslint-disable-next-line no-console\n            console.error('TextArea: TextArea requires either an id or aria-label to be specified');\n        }\n    }\n    render() {\n        const _a = this.props, { className, value, validated, isRequired, isDisabled, isReadOnly, resizeOrientation, innerRef, readOnly, disabled, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        autoResize, onChange } = _a, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        props = __rest(_a, [\"className\", \"value\", \"validated\", \"isRequired\", \"isDisabled\", \"isReadOnly\", \"resizeOrientation\", \"innerRef\", \"readOnly\", \"disabled\", \"autoResize\", \"onChange\"]);\n        const orientation = `resize${capitalize(resizeOrientation)}`;\n        return (React.createElement(\"textarea\", Object.assign({ className: css(styles.formControl, className, resizeOrientation !== TextAreResizeOrientation.both && styles.modifiers[orientation], validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning), onChange: this.handleChange }, (typeof this.props.defaultValue !== 'string' && { value }), { \"aria-invalid\": validated === ValidatedOptions.error, required: isRequired, disabled: isDisabled || disabled, readOnly: isReadOnly || readOnly, ref: innerRef }, props)));\n    }\n}\nTextAreaBase.displayName = 'TextArea';\nTextAreaBase.defaultProps = {\n    innerRef: React.createRef(),\n    className: '',\n    isRequired: false,\n    isDisabled: false,\n    validated: 'default',\n    resizeOrientation: 'both',\n    'aria-label': null\n};\nexport const TextArea = React.forwardRef((props, ref) => (React.createElement(TextAreaBase, Object.assign({}, props, { innerRef: ref }))));\nTextArea.displayName = 'TextArea';\n//# sourceMappingURL=TextArea.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/InputGroup/input-group';\nimport { css } from '@patternfly/react-styles';\nimport { FormSelect } from '../FormSelect';\nimport { TextArea } from '../TextArea';\nimport { TextInput } from '../TextInput';\nexport const InputGroup = (_a) => {\n    var { className = '', children } = _a, props = __rest(_a, [\"className\", \"children\"]);\n    const formCtrls = [FormSelect, TextArea, TextInput].map(comp => comp.displayName);\n    const idItem = React.Children.toArray(children).find((child) => !formCtrls.includes(child.type.displayName) && child.props.id);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.inputGroup, className) }, props), idItem\n        ? React.Children.map(children, (child) => formCtrls.includes(child.type.displayName)\n            ? React.cloneElement(child, { 'aria-describedby': idItem.props.id })\n            : child)\n        : children));\n};\nInputGroup.displayName = 'InputGroup';\n//# sourceMappingURL=InputGroup.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup } from '@patternfly/react-core';\nimport _debounce from 'lodash/debounce';\nimport { reduxTypes, store, useSelector } from '../../redux';\nimport { TextInput } from '../form/textInput';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: evaluate the debounce milliseconds, currently based off platforms default 800 ms\n */\n/**\n * Display a display name input field for search.\n *\n * @fires onSubmit\n * @fires onClear\n * @fires onKeyUp\n * @param {object} props\n * @param {Function} props.t\n * @param {string} props.value\n * @param {string} props.viewId\n * @returns {Node}\n */\nconst ToolbarFieldDisplayName = ({ t, value, viewId }) => {\n  const currentValue = useSelector(\n    ({ view }) => view.inventoryHostsQuery?.[viewId]?.[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n    value\n  );\n\n  /**\n   * On submit, dispatch type.\n   *\n   * @event onSubmit\n   * @param {string} submitValue\n   * @returns {void}\n   */\n  const onSubmit = submitValue =>\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: submitValue?.trim() || null\n      }\n    ]);\n\n  /**\n   * On clear, dispatch type.\n   *\n   * @event onClear\n   * @returns {void}\n   */\n  const onClear = () => {\n    if (currentValue === '' || !currentValue) {\n      return;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: null\n      }\n    ]);\n  };\n\n  /**\n   * Set up submit debounce event to allow for bypass.\n   */\n  const debounced = _debounce(onSubmit, 700);\n\n  /**\n   * On enter submit value, on type submit value, and on esc ignore (clear value at component level).\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 13:\n        onSubmit(event.value);\n        break;\n      case 27:\n        break;\n      default:\n        debounced(event.value);\n        break;\n    }\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        aria-label={t('curiosity-toolbar.placeholder', { context: 'displayName' })}\n        className=\"curiosity-input__display-name\"\n        iconVariant=\"search\"\n        maxLength={255}\n        onClear={onClear}\n        onKeyUp={onKeyUp}\n        value={currentValue}\n        placeholder={t('curiosity-toolbar.placeholder', { context: 'displayName' })}\n      />\n    </InputGroup>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{viewId: string, t: Function, value: string}}\n */\nToolbarFieldDisplayName.propTypes = {\n  t: PropTypes.func,\n  value: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, value: string}}\n */\nToolbarFieldDisplayName.defaultProps = {\n  t: translate,\n  value: null,\n  viewId: 'toolbarFieldDisplayName'\n};\n\nexport { ToolbarFieldDisplayName as default, ToolbarFieldDisplayName };\n","import { createIcon } from '../createIcon';\n\nexport const EyeSlashIconConfig = {\n  name: 'EyeSlashIcon',\n  height: 512,\n  width: 640,\n  svgPath: 'M320 400c-75.85 0-137.25-58.71-142.9-133.11L72.2 185.82c-13.79 17.3-26.48 35.59-36.72 55.59a32.35 32.35 0 0 0 0 29.19C89.71 376.41 197.07 448 320 448c26.91 0 52.87-4 77.89-10.46L346 397.39a144.13 144.13 0 0 1-26 2.61zm313.82 58.1l-110.55-85.44a331.25 331.25 0 0 0 81.25-102.07 32.35 32.35 0 0 0 0-29.19C550.29 135.59 442.93 64 320 64a308.15 308.15 0 0 0-147.32 37.7L45.46 3.37A16 16 0 0 0 23 6.18L3.37 31.45A16 16 0 0 0 6.18 53.9l588.36 454.73a16 16 0 0 0 22.46-2.81l19.64-25.27a16 16 0 0 0-2.82-22.45zm-183.72-142l-39.3-30.38A94.75 94.75 0 0 0 416 256a94.76 94.76 0 0 0-121.31-92.21A47.65 47.65 0 0 1 304 192a46.64 46.64 0 0 1-1.54 10l-73.61-56.89A142.31 142.31 0 0 1 320 112a143.92 143.92 0 0 1 144 144c0 21.63-5.29 41.79-13.9 60.11z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const EyeSlashIcon = createIcon(EyeSlashIconConfig);\n\nexport default EyeSlashIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { connect, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @param {string} options.chartId\n   * @param {string} options.color\n   * @param {boolean} options.isDisabled\n   * @param {boolean} options.isThreshold\n   * @param {string} options.labelContent\n   * @param {string} options.tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"victory-legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: color\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: color\n              }}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *  - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, productLabel, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}Label`, `curiosity-graph.thresholdLabel`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t([`curiosity-graph.${id}Label`, `curiosity-graph.noLabel`], {\n              product: productLabel,\n              context: productLabel\n            });\n\n          const tooltipContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}LegendTooltip`, `curiosity-graph.thresholdLegendTooltip`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t(`curiosity-graph.${id}LegendTooltip`, { product: productLabel, context: productLabel });\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold,\n            tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, legend: object, chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {dataSets: Array}, productLabel: string, viewId: string, t: translate, legend: object,\n *     chart: {hide: Function, toggle: Function, isToggled: Function}}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connect(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport _isEqual from 'lodash/isEqual';\nimport { connect, reduxActions, reduxSelectors } from '../../redux';\nimport { helpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { ChartArea } from '../chartArea/chartArea';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n    const { [RHSM_API_QUERY_TYPES.START_DATE]: startDate, [RHSM_API_QUERY_TYPES.END_DATE]: endDate } = query;\n\n    if (!isDisabled && graphGranularity && startDate && endDate && productId) {\n      getGraphReportsCapacity(productId, query);\n    }\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, productLabel, query, viewId } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: graphGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(graphGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          strokeWidth: 2,\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 3;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <ChartArea\n        key={`chart_${JSON.stringify(query)}`}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend chart={chart} datum={datum} productLabel={productLabel} viewId={viewId} />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={graphGranularity} productLabel={productLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * ToDo: Evaluate applying a minHeight attr to the MinHeight component graphCard setup\n   * Appears there may be a minor page shift when compared to the prior hard-set min-height\n   * of 410px\n   */\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, graphData, isDisabled, pending, settings } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    let actionDisplay = null;\n\n    // Apply actionDisplay callback, return node\n    if (typeof settings?.actionDisplay === 'function') {\n      actionDisplay = settings.actionDisplay({ ...graphData });\n    }\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <MinHeight key=\"headerMinHeight\">\n          <CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                {cardTitle}\n              </Title>\n            </CardTitle>\n            <CardActions className={(error && 'blur') || ''}>\n              <React.Fragment key=\"actionDisplay\">{actionDisplay}</React.Fragment>\n              {children}\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key=\"bodyMinHeight\">\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && <Loader variant=\"graph\" />}\n              {!pending && this.renderChart()}\n            </div>\n          </CardBody>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productLabel: string, settings: object, productId: string, query: object, pending: boolean,\n *     error: boolean, cardTitle: Node, filterGraphData: Array, getGraphReportsCapacity: Function,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.node,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired,\n    [RHSM_API_QUERY_TYPES.START_DATE]: PropTypes.string.isRequired,\n    [RHSM_API_QUERY_TYPES.END_DATE]: PropTypes.string.isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  settings: PropTypes.shape({\n    actionDisplay: PropTypes.func\n  }),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productLabel: string, settings: object, viewId: string,\n *     t: translate, children: Node, pending: boolean, graphData: object, isDisabled: boolean,\n *     error: boolean, cardTitle: Node, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  productLabel: '',\n  settings: {},\n  t: translate,\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader, CardHeaderMain } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport GuestsList from '../guestsList/guestsList';\nimport { inventoryListHelpers } from './inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { ToolbarFieldDisplayName } from '../toolbar/toolbarFieldDisplayName';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A hosts system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventoryList extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getHostsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getHostsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterGuestsData, filterInventoryData, listData, query, session, settings } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      const guestsId = cellData?.subscriptionManagerId;\n      let hasGuests = cellData?.numberOfGuests > 0 && guestsId;\n\n      // Apply hasGuests callback, return boolean\n      if (typeof settings?.hasGuests === 'function') {\n        hasGuests = settings.hasGuests({ ...cellData }, { ...session });\n      }\n\n      return {\n        cells,\n        expandedContent:\n          (hasGuests && (\n            <GuestsList\n              key={guestsId}\n              filterGuestsData={filterGuestsData}\n              numberOfGuests={cellData?.numberOfGuests}\n              id={guestsId}\n              query={query}\n            />\n          )) ||\n          undefined\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t,\n      viewId\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n            <CardHeaderMain>\n              <ToolbarFieldDisplayName viewId={viewId} />\n            </CardHeaderMain>\n            <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter\n            className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n            aria-hidden={error || !itemCount || false}\n          >\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{settings:object, productId: string, listData: Array, session: object, pending: boolean,\n *     query: object, fulfilled: boolean, getHostsInventory: Function, error: boolean,\n *     itemCount: number, viewId: string, t: Function, filterInventoryData: Array, filterGuestsData: Array,\n *     perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterGuestsData: PropTypes.array,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  settings: PropTypes.shape({\n    hasGuests: PropTypes.func\n  }),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{settings: object, listData: Array, session: object, pending: boolean, fulfilled: boolean,\n *     getHostsInventory: Function, error: boolean, itemCount: number, viewId: string, t: translate,\n *     filterInventoryData: Array, filterGuestsData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterGuestsData: [],\n  filterInventoryData: [],\n  getHostsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_HOSTS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  settings: {},\n  t: translate,\n  viewId: 'inventoryList'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventory: (id, query) => dispatch(reduxActions.rhsm.getHostsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.inventoryList.makeInventoryList();\n\nconst ConnectedInventoryList = connect(makeMapStateToProps, mapDispatchToProps)(InventoryList);\n\nexport { ConnectedInventoryList as default, ConnectedInventoryList, InventoryList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A subscriptions system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventorySubscriptions extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getSubscriptionsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getSubscriptionsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterInventoryData, listData, query, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n            <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter\n            className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n            aria-hidden={error || !itemCount || false}\n          >\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, listData: Array, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, error: boolean, getSubscriptionsInventory: Function, itemCount: number,\n *     t: Function, filterInventoryData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventorySubscriptions.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getSubscriptionsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, filterInventoryData: Array, listData: Array, session: object, pending: boolean,\n *     fulfilled: boolean, perPageDefault: number, isDisabled: boolean, error: boolean,\n *     getSubscriptionsInventory: Function, itemCount: number}}\n */\nInventorySubscriptions.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterInventoryData: [],\n  getSubscriptionsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getSubscriptionsInventory: (id, query) => dispatch(reduxActions.rhsm.getSubscriptionsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.subscriptionsList.makeSubscriptionsList();\n\nconst ConnectedInventorySubscriptions = connect(makeMapStateToProps, mapDispatchToProps)(InventorySubscriptions);\n\nexport { ConnectedInventorySubscriptions as default, ConnectedInventorySubscriptions, InventorySubscriptions };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { Tabs } from '../tabs/tabs';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { InventoryTab } from './inventoryTab';\n\n/**\n * A system inventory tabs component.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass InventoryTabs extends React.Component {\n  /**\n   * On tab update state.\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {string} params.index tab index\n   */\n  onTab = ({ index }) => {\n    const { productId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.inventory.SET_INVENTORY_TAB,\n      tabs: {\n        [productId]: index\n      }\n    });\n  };\n\n  /**\n   * Render inventory tabs using Inventory tab passed props only. A parallel outcome can be\n   * achieved by passing an array of objects through a prop.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { activeTab, children, defaultActiveTab, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const updatedChildren = React.Children.toArray(children).map(({ props = {} }) => ({\n      active: props.active || false,\n      content: props.children,\n      title: props.title\n    }));\n\n    return (\n      <React.Fragment>\n        <Title headingLevel=\"h2\" className=\"sr-only\">\n          {t('curiosity-inventory.tabHeading', { count: updatedChildren.length })}\n        </Title>\n        <Tabs activeTab={activeTab} defaultActiveTab={defaultActiveTab} onTab={this.onTab} tabs={updatedChildren} />\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, t: Function, children: Node, defaultActiveTab: number, isDisabled: boolean,\n *     activeTab: number}}\n */\nInventoryTabs.propTypes = {\n  activeTab: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  defaultActiveTab: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.defaultProps = {\n  activeTab: 0,\n  defaultActiveTab: 0,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  t: translate\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst mapStateToProps = ({ inventory }, { productId }) => ({ activeTab: inventory.tabs?.[productId] });\n\nconst ConnectedInventoryTabs = connect(mapStateToProps)(InventoryTabs);\n\nexport { ConnectedInventoryTabs as default, ConnectedInventoryTabs, InventoryTabs, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { reduxTypes, store, useSelector } from '../../redux';\nimport { Select } from '../form/select';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as FIELD_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Select field options.\n *\n * @type {{title: (string|Node), value: string, selected: boolean}[]}\n */\nconst toolbarFieldOptions = Object.values(FIELD_TYPES).map(type => ({\n  title: translate('curiosity-toolbar.granularity', { context: type }),\n  value: type,\n  selected: false\n}));\n\n/**\n * Display a granularity field with options.\n *\n * @fires onSelect\n * @param {object} props\n * @param {Array} props.options\n * @param {Function} props.t\n * @param {string} props.value\n * @param {string} props.viewId\n * @returns {Node}\n */\nconst ToolbarFieldGranularity = ({ options, t, value, viewId }) => {\n  const updatedValue = useSelector(\n    ({ view }) => view.graphTallyQuery?.[viewId]?.[RHSM_API_QUERY_TYPES.GRANULARITY],\n    value\n  );\n\n  const updatedOptions = options.map(option => ({ ...option, selected: option.value === updatedValue }));\n\n  /**\n   * On select, dispatch type.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @returns {void}\n   */\n  const onSelect = event => {\n    const { startDate, endDate } = dateHelpers.getRangedDateTime(event.value);\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n        viewId,\n        [RHSM_API_QUERY_TYPES.GRANULARITY]: event.value\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE],\n        viewId,\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString()\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE],\n        viewId,\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString()\n      }\n    ]);\n  };\n\n  return (\n    <Select\n      aria-label={t('curiosity-toolbar.placeholder', { context: 'granularity' })}\n      onSelect={onSelect}\n      options={updatedOptions}\n      selectedOptions={updatedValue}\n      placeholder={t('curiosity-toolbar.placeholder', { context: 'granularity' })}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{viewId: string, t: Function, options: Array, value: string}}\n */\nToolbarFieldGranularity.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      value: PropTypes.any,\n      selected: PropTypes.bool\n    })\n  ),\n  t: PropTypes.func,\n  value: PropTypes.oneOf([...Object.values(FIELD_TYPES)]),\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, options: Array, value: string}}\n */\nToolbarFieldGranularity.defaultProps = {\n  options: toolbarFieldOptions,\n  t: translate,\n  value: FIELD_TYPES.DAILY,\n  viewId: 'toolbarFieldGranularity'\n};\n\nexport { ToolbarFieldGranularity as default, ToolbarFieldGranularity, toolbarFieldOptions };\n","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ToolbarItem } from './ToolbarItem';\nimport { ChipGroup, Chip } from '../ChipGroup';\nimport { ToolbarContentContext, ToolbarContext } from './ToolbarUtils';\nexport class ToolbarFilter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isMounted: false\n        };\n    }\n    componentDidMount() {\n        const { categoryName, chips } = this.props;\n        this.context.updateNumberFilters(typeof categoryName === 'string' ? categoryName : categoryName.name, chips.length);\n        this.setState({ isMounted: true });\n    }\n    componentDidUpdate() {\n        const { categoryName, chips } = this.props;\n        this.context.updateNumberFilters(typeof categoryName === 'string' ? categoryName : categoryName.name, chips.length);\n    }\n    render() {\n        const _a = this.props, { children, chips, deleteChipGroup, deleteChip, categoryName, showToolbarItem } = _a, props = __rest(_a, [\"children\", \"chips\", \"deleteChipGroup\", \"deleteChip\", \"categoryName\", \"showToolbarItem\"]);\n        const { isExpanded, chipGroupContentRef } = this.context;\n        const categoryKey = typeof categoryName !== 'string' && categoryName.hasOwnProperty('key')\n            ? categoryName.key\n            : categoryName.toString();\n        const chipGroup = chips.length ? (React.createElement(ToolbarItem, { variant: \"chip-group\" },\n            React.createElement(ChipGroup, { key: categoryKey, categoryName: typeof categoryName === 'string' ? categoryName : categoryName.name, isClosable: deleteChipGroup !== undefined, onClick: () => deleteChipGroup(categoryName) }, chips.map(chip => typeof chip === 'string' ? (React.createElement(Chip, { key: chip, onClick: () => deleteChip(categoryKey, chip) }, chip)) : (React.createElement(Chip, { key: chip.key, onClick: () => deleteChip(categoryKey, chip) }, chip.node)))))) : null;\n        if (!isExpanded && this.state.isMounted) {\n            return (React.createElement(React.Fragment, null,\n                showToolbarItem && React.createElement(ToolbarItem, Object.assign({}, props), children),\n                ReactDOM.createPortal(chipGroup, chipGroupContentRef.current.firstElementChild)));\n        }\n        return (React.createElement(ToolbarContentContext.Consumer, null, ({ chipContainerRef }) => (React.createElement(React.Fragment, null,\n            showToolbarItem && React.createElement(ToolbarItem, Object.assign({}, props), children),\n            chipContainerRef.current && ReactDOM.createPortal(chipGroup, chipContainerRef.current)))));\n    }\n}\nToolbarFilter.displayName = 'ToolbarFilter';\nToolbarFilter.contextType = ToolbarContext;\nToolbarFilter.defaultProps = {\n    chips: [],\n    showToolbarItem: true\n};\n//# sourceMappingURL=ToolbarFilter.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { ToolbarGroup } from './ToolbarGroup';\nimport { ToolbarItem } from './ToolbarItem';\nimport { Button } from '../Button';\nimport { ToolbarContext } from './ToolbarUtils';\nexport class ToolbarExpandableContent extends React.Component {\n    render() {\n        const _a = this.props, { className, expandableContentRef, chipContainerRef, \n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        isExpanded, clearAllFilters, clearFiltersButtonText, showClearFiltersButton } = _a, props = __rest(_a, [\"className\", \"expandableContentRef\", \"chipContainerRef\", \"isExpanded\", \"clearAllFilters\", \"clearFiltersButtonText\", \"showClearFiltersButton\"]);\n        const { numberOfFilters } = this.context;\n        const clearChipGroups = () => {\n            clearAllFilters();\n        };\n        return (React.createElement(\"div\", Object.assign({ className: css(styles.toolbarExpandableContent, className), ref: expandableContentRef }, props),\n            React.createElement(ToolbarGroup, null),\n            numberOfFilters > 0 && (React.createElement(ToolbarGroup, { className: styles.modifiers.chipContainer },\n                React.createElement(ToolbarGroup, { ref: chipContainerRef }),\n                showClearFiltersButton && (React.createElement(ToolbarItem, null,\n                    React.createElement(Button, { variant: \"link\", onClick: clearChipGroups, isInline: true }, clearFiltersButtonText)))))));\n    }\n}\nToolbarExpandableContent.displayName = 'ToolbarExpandableContent';\nToolbarExpandableContent.contextType = ToolbarContext;\nToolbarExpandableContent.defaultProps = {\n    isExpanded: false,\n    clearFiltersButtonText: 'Clear all filters'\n};\n//# sourceMappingURL=ToolbarExpandableContent.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { ToolbarContentContext, ToolbarContext } from './ToolbarUtils';\nimport { formatBreakpointMods } from '../../helpers/util';\nimport { ToolbarExpandableContent } from './ToolbarExpandableContent';\nexport class ToolbarContent extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.expandableContentRef = React.createRef();\n        this.chipContainerRef = React.createRef();\n    }\n    render() {\n        const _a = this.props, { className, children, isExpanded, toolbarId, visibility, visiblity, alignment, clearAllFilters, showClearFiltersButton, clearFiltersButtonText } = _a, props = __rest(_a, [\"className\", \"children\", \"isExpanded\", \"toolbarId\", \"visibility\", \"visiblity\", \"alignment\", \"clearAllFilters\", \"showClearFiltersButton\", \"clearFiltersButtonText\"]);\n        if (visiblity !== undefined) {\n            // eslint-disable-next-line no-console\n            console.warn('The ToolbarContent visiblity prop has been deprecated. ' +\n                'Please use the correctly spelled visibility prop instead.');\n        }\n        return (React.createElement(\"div\", Object.assign({ className: css(styles.toolbarContent, formatBreakpointMods(visibility || visiblity, styles), formatBreakpointMods(alignment, styles), className) }, props),\n            React.createElement(ToolbarContext.Consumer, null, ({ clearAllFilters: clearAllFiltersContext, clearFiltersButtonText: clearFiltersButtonContext, showClearFiltersButton: showClearFiltersButtonContext, toolbarId: toolbarIdContext }) => {\n                const expandableContentId = `${toolbarId ||\n                    toolbarIdContext}-expandable-content-${ToolbarContent.currentId++}`;\n                return (React.createElement(ToolbarContentContext.Provider, { value: {\n                        expandableContentRef: this.expandableContentRef,\n                        expandableContentId,\n                        chipContainerRef: this.chipContainerRef\n                    } },\n                    React.createElement(\"div\", { className: css(styles.toolbarContentSection) }, children),\n                    React.createElement(ToolbarExpandableContent, { id: expandableContentId, isExpanded: isExpanded, expandableContentRef: this.expandableContentRef, chipContainerRef: this.chipContainerRef, clearAllFilters: clearAllFilters || clearAllFiltersContext, showClearFiltersButton: showClearFiltersButton || showClearFiltersButtonContext, clearFiltersButtonText: clearFiltersButtonText || clearFiltersButtonContext })));\n            })));\n    }\n}\nToolbarContent.displayName = 'ToolbarContent';\nToolbarContent.currentId = 0;\nToolbarContent.defaultProps = {\n    isExpanded: false,\n    showClearFiltersButton: false\n};\n//# sourceMappingURL=ToolbarContent.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styles from '@patternfly/react-styles/css/components/Toolbar/toolbar';\nimport { css } from '@patternfly/react-styles';\nimport { ToolbarContext, ToolbarContentContext } from './ToolbarUtils';\nimport { Button } from '../Button';\nimport globalBreakpointLg from \"@patternfly/react-tokens/dist/esm/global_breakpoint_lg\";\nimport { formatBreakpointMods, toCamel, capitalize, canUseDOM } from '../../helpers/util';\nexport class ToolbarToggleGroup extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.isContentPopup = () => {\n            const viewportSize = canUseDOM ? window.innerWidth : 1200;\n            const lgBreakpointValue = parseInt(globalBreakpointLg.value);\n            return viewportSize < lgBreakpointValue;\n        };\n    }\n    render() {\n        const _a = this.props, { toggleIcon, variant, visibility, visiblity, breakpoint, alignment, spacer, spaceItems, className, children } = _a, props = __rest(_a, [\"toggleIcon\", \"variant\", \"visibility\", \"visiblity\", \"breakpoint\", \"alignment\", \"spacer\", \"spaceItems\", \"className\", \"children\"]);\n        if (!breakpoint && !toggleIcon) {\n            // eslint-disable-next-line no-console\n            console.error('ToolbarToggleGroup will not be visible without a breakpoint or toggleIcon.');\n        }\n        if (visiblity !== undefined) {\n            // eslint-disable-next-line no-console\n            console.warn('The ToolbarToggleGroup visiblity prop has been deprecated. ' +\n                'Please use the correctly spelled visibility prop instead.');\n        }\n        return (React.createElement(ToolbarContext.Consumer, null, ({ isExpanded, toggleIsExpanded }) => (React.createElement(ToolbarContentContext.Consumer, null, ({ expandableContentRef, expandableContentId }) => {\n            if (expandableContentRef.current && expandableContentRef.current.classList) {\n                if (isExpanded) {\n                    expandableContentRef.current.classList.add(styles.modifiers.expanded);\n                }\n                else {\n                    expandableContentRef.current.classList.remove(styles.modifiers.expanded);\n                }\n            }\n            return (React.createElement(\"div\", Object.assign({ className: css(styles.toolbarGroup, styles.modifiers.toggleGroup, variant && styles.modifiers[toCamel(variant)], breakpoint &&\n                    styles.modifiers[`showOn${capitalize(breakpoint.replace('2xl', '_2xl'))}`], formatBreakpointMods(visibility || visiblity, styles), formatBreakpointMods(alignment, styles), formatBreakpointMods(spacer, styles), formatBreakpointMods(spaceItems, styles), className) }, props),\n                React.createElement(\"div\", { className: css(styles.toolbarToggle) },\n                    React.createElement(Button, Object.assign({ variant: \"plain\", onClick: toggleIsExpanded, \"aria-label\": \"Show Filters\" }, (isExpanded && { 'aria-expanded': true }), { \"aria-haspopup\": isExpanded && this.isContentPopup(), \"aria-controls\": expandableContentId }), toggleIcon)),\n                isExpanded\n                    ? ReactDOM.createPortal(children, expandableContentRef.current.firstElementChild)\n                    : children));\n        }))));\n    }\n}\nToolbarToggleGroup.displayName = 'ToolbarToggleGroup';\n//# sourceMappingURL=ToolbarToggleGroup.js.map","import { createIcon } from '../createIcon';\n\nexport const FilterIconConfig = {\n  name: 'FilterIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const FilterIcon = createIcon(FilterIconConfig);\n\nexport default FilterIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar as PfToolbar,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup\n} from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons';\nimport { Select } from '../form/select';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { toolbarHelpers } from './toolbarHelpers';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onClearFilter\n * @fires onCategorySelect\n * @fires onSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear all filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    const { hardFilterReset } = this.props;\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: new Set() } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [RHSM_API_QUERY_TYPES.SLA]: null,\n            [RHSM_API_QUERY_TYPES.USAGE]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: null } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Clear individual filter state.\n   *\n   * @event onClearFilter\n   * @param {string} categoryTitle\n   */\n  onClearFilter = categoryTitle => {\n    const { activeFilters, currentFilter, hardFilterReset } = this.props;\n\n    const categoryOptions = toolbarHelpers.getOptions();\n    const { value: categoryValue } = categoryOptions.options.find(({ title }) => title === categoryTitle) || {};\n\n    if (!categoryValue) {\n      return;\n    }\n\n    const updatedActiveFilters = new Set(activeFilters);\n    updatedActiveFilters.delete(categoryValue);\n\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: updatedActiveFilters } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [categoryValue]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      const updatedCurrentFilter = (updatedActiveFilters.size > 0 && currentFilter) || null;\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: updatedCurrentFilter } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Set Category selection.\n   *\n   * @event onCategorySelect\n   * @param {object} event\n   */\n  onCategorySelect = event => {\n    const { value } = event;\n    this.setDispatch({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: value } });\n  };\n\n  /**\n   * Set select filter selection for dispatch.\n   *\n   * @param {object} params\n   * @param {object} params.event\n   * @param {string} params.field\n   */\n  onSelect = ({ event, field }) => {\n    const { activeFilters } = this.props;\n    const { value } = event;\n    const updatedActiveFilters = new Set(activeFilters).add(field);\n\n    this.setDispatch(\n      [\n        {\n          type: reduxTypes.toolbar.SET_ACTIVE_FILTERS,\n          data: { activeFilters: updatedActiveFilters }\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_TYPES[field],\n          data: { [field]: value }\n        }\n      ],\n      true\n    );\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {Array|object} actions\n   * @param {boolean} resetPage\n   */\n  setDispatch(actions, resetPage = false) {\n    const { viewId } = this.props;\n    const updatedActions = ((Array.isArray(actions) && actions) || [actions]).map(({ type, data }) => ({\n      type,\n      viewId,\n      ...data\n    }));\n\n    if (resetPage) {\n      updatedActions.push({\n        type: reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST,\n        viewId\n      });\n    }\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Available, and selected select filter options.\n   *\n   * @param {string} field\n   * @returns {{optionsSelected: Array, options: Array }}\n   */\n  setSelectFilter(field) {\n    const { query } = this.props;\n    const options = toolbarHelpers.getOptions(field);\n    const currentFilter = this.getCurrentFilter();\n    let filter;\n\n    if (field) {\n      filter = typeof query?.[field] === 'string' && options.options.find(({ value }) => value === query?.[field]);\n    } else {\n      filter = options.options.find(({ value }) => value === currentFilter);\n    }\n\n    const optionsSelected = (filter?.title && [filter.title]) || (options?.selected && [options.selected]) || [];\n\n    return { options, optionsSelected };\n  }\n\n  /**\n   * Return the currentFilter, fallback to selected\n   *\n   * @returns {string|undefined}\n   */\n  getCurrentFilter() {\n    const { currentFilter, filterOptions } = this.props;\n\n    return (\n      currentFilter ||\n      filterOptions.find(({ selected }) => selected === true)?.id ||\n      (filterOptions.length === 1 && filterOptions[0]?.id)\n    );\n  }\n\n  /**\n   * A select filter node.\n   *\n   * @param {object} params\n   * @param {string} params.id\n   * @returns {object}\n   */\n  renderSelectFilter({ id: field }) {\n    const { t } = this.props;\n    const { options, optionsSelected } = this.setSelectFilter(field);\n    const currentFilter = this.getCurrentFilter();\n\n    return (\n      <ToolbarFilter\n        key={field}\n        chips={optionsSelected}\n        deleteChip={this.onClearFilter}\n        categoryName={t('curiosity-toolbar.category', { context: field })}\n        showToolbarItem={currentFilter === field}\n      >\n        <Select\n          aria-label={t('curiosity-toolbar.category', { context: field })}\n          onSelect={event => this.onSelect({ event, field })}\n          selectedOptions={optionsSelected}\n          placeholder={t('curiosity-toolbar.placeholder', { context: field })}\n          options={options.options}\n        />\n      </ToolbarFilter>\n    );\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { filterOptions, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options: categoryOptions, optionsSelected: categoryOptionsSelected } = this.setSelectFilter();\n\n    return (\n      <PfToolbar\n        id=\"curiosity-toolbar\"\n        className=\"curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"sm\"\n        clearAllFilters={this.onClear}\n        clearFiltersButtonText={t('curiosity-toolbar.clearFilters')}\n      >\n        <ToolbarContent>\n          <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"md\">\n            <ToolbarGroup variant=\"filter-group\">\n              {filterOptions.length !== 1 && (\n                <ToolbarItem>\n                  <Select\n                    aria-label={t('curiosity-toolbar.category')}\n                    onSelect={this.onCategorySelect}\n                    selectedOptions={categoryOptionsSelected}\n                    placeholder={t('curiosity-toolbar.placeholder')}\n                    options={categoryOptions.options}\n                    toggleIcon={<FilterIcon />}\n                  />\n                </ToolbarItem>\n              )}\n              {filterOptions.map(({ id, selected }) => this.renderSelectFilter({ id, selected }))}\n            </ToolbarGroup>\n          </ToolbarToggleGroup>\n        </ToolbarContent>\n      </PfToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, filterOptions: Array}}\n */\nToolbar.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.SLA]: PropTypes.string,\n    [RHSM_API_QUERY_TYPES.USAGE]: PropTypes.string\n  }),\n  activeFilters: PropTypes.instanceOf(Set),\n  currentFilter: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n  filterOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      filterType: PropTypes.oneOf(['select']),\n      id: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n      selected: PropTypes.bool\n    })\n  ),\n  hardFilterReset: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, filterOptions: Array}}\n */\nToolbar.defaultProps = {\n  query: {},\n  activeFilters: new Set(),\n  currentFilter: null,\n  filterOptions: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA,\n      filterType: 'select'\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      filterType: 'select',\n      selected: true\n    }\n  ],\n  hardFilterReset: false,\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: translate,\n  viewId: 'toolbar'\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.toolbar\n * @param {object} state.view\n * @param {object} props\n * @param {string} props.query\n * @param {string} props.viewId\n * @returns {object}\n */\nconst mapStateToProps = ({ toolbar, view }, { query: initialQuery, viewId }) => ({\n  ...toolbar.filters?.[viewId],\n  query: view.query?.[viewId] || initialQuery\n});\n\nconst ConnectedToolbar = connect(mapStateToProps)(Toolbar);\n\nexport { ConnectedToolbar as default, ConnectedToolbar, Toolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { reduxTypes, store, useSelector } from '../../redux';\nimport { Select, SelectPosition } from '../form/select';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as FIELD_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Select field options.\n *\n * @type {{title: (string|Node), value: string, selected: boolean}[]}\n */\nconst toolbarFieldOptions = dateHelpers.getRangedMonthDateTime().listDateTimeRanges.map(dateTime => ({\n  ...dateTime,\n  selected: false\n}));\n\n/**\n * Display a granularity field with options.\n *\n * @fires onSelect\n * @param {object} props\n * @param {Array} props.options\n * @param {Function} props.t\n * @param {string} props.value\n * @param {string} props.viewId\n * @returns {Node}\n */\nconst ToolbarFieldRangedMonthly = ({ options, t, value, viewId }) => {\n  const updatedValue = useSelector(({ view }) => view.query?.[viewId]?.[RHSM_API_QUERY_TYPES.START_DATE], value);\n\n  const updatedOptions = options.map(option => ({\n    ...option,\n    selected: option.title === updatedValue || option.value.startDate.toISOString() === updatedValue\n  }));\n\n  /**\n   * On select, dispatch type.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @returns {void}\n   */\n  const onSelect = event => {\n    const { startDate, endDate } = event.value;\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n        viewId,\n        [RHSM_API_QUERY_TYPES.GRANULARITY]: FIELD_TYPES.DAILY\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE],\n        viewId,\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString()\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE],\n        viewId,\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString()\n      }\n    ]);\n  };\n\n  return (\n    <Select\n      aria-label={t('curiosity-toolbar.placeholder', { context: 'granularity' })}\n      onSelect={onSelect}\n      options={updatedOptions}\n      placeholder={t('curiosity-toolbar.placeholder', { context: 'granularity' })}\n      position={SelectPosition.right}\n      maxHeight={250}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{viewId: string, t: Function, options: Array, value: string}}\n */\nToolbarFieldRangedMonthly.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      value: PropTypes.any,\n      selected: PropTypes.bool\n    })\n  ),\n  t: PropTypes.func,\n  value: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, options: Array, value: string}}\n */\nToolbarFieldRangedMonthly.defaultProps = {\n  options: toolbarFieldOptions,\n  t: translate,\n  value: translate('curiosity-toolbar.granularityRange', { context: 'current' }),\n  viewId: 'toolbarFieldRangeGranularity'\n};\n\nexport { ToolbarFieldRangedMonthly as default, ToolbarFieldRangedMonthly, toolbarFieldOptions };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { reduxTypes, store, useSelector } from '../../redux';\nimport { Select } from '../form/select';\nimport { RHSM_API_QUERY_UOM_TYPES as FIELD_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Select field options.\n *\n * @type {{title: (string|Node), value: string, selected: boolean}[]}\n */\nconst toolbarFieldOptions = Object.values(FIELD_TYPES).map(type => ({\n  title: translate('curiosity-toolbar.uom', { context: type }),\n  value: type,\n  selected: false\n}));\n\n/**\n * Display a unit of measure (uom) field with options.\n *\n * @fires onSelect\n * @param {object} props\n * @param {Array} props.options\n * @param {Function} props.t\n * @param {string} props.value\n * @param {string} props.viewId\n * @returns {Node}\n */\nconst ToolbarFieldUom = ({ options, t, value, viewId }) => {\n  const updatedValue = useSelector(({ view }) => view.query?.[viewId]?.[RHSM_API_QUERY_TYPES.UOM], value);\n\n  const updatedOptions = options.map(option => ({ ...option, selected: option.value === updatedValue }));\n\n  /**\n   * On select, dispatch type.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @returns {void}\n   */\n  const onSelect = event =>\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM],\n        viewId,\n        [RHSM_API_QUERY_TYPES.UOM]: event.value\n      }\n    ]);\n\n  return (\n    <Select\n      aria-label={t('curiosity-toolbar.placeholder', { context: 'uom' })}\n      onSelect={onSelect}\n      options={updatedOptions}\n      selectedOptions={updatedValue}\n      placeholder={t('curiosity-toolbar.placeholder', { context: 'uom' })}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{viewId: string, t: Function, options: Array, value: string}}\n */\nToolbarFieldUom.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      value: PropTypes.any,\n      selected: PropTypes.bool\n    })\n  ),\n  t: PropTypes.func,\n  value: PropTypes.oneOf([...Object.values(FIELD_TYPES)]),\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, options: Array, value: string}}\n */\nToolbarFieldUom.defaultProps = {\n  options: toolbarFieldOptions,\n  t: translate,\n  value: FIELD_TYPES.CORES,\n  viewId: 'toolbarFieldUom'\n};\n\nexport { ToolbarFieldUom as default, ToolbarFieldUom, toolbarFieldOptions };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport InfoCircleIcon from '@patternfly/react-icons/dist/js/icons/info-circle-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport numbro from 'numbro';\nimport { PageLayout, PageColumns, PageHeader, PageSection, PageToolbar } from '../pageLayout/pageLayout';\nimport {\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES\n} from '../../types/rhsmApiTypes';\nimport { apiQueries, useSelector } from '../../redux';\nimport GraphCard from '../graphCard/graphCard';\nimport { ToolbarFieldUom } from '../toolbar/toolbarFieldUom';\nimport { ToolbarFieldGranularity } from '../toolbar/toolbarFieldGranularity';\nimport { ToolbarFieldRangedMonthly } from '../toolbar/toolbarFieldRangedMonthly';\nimport Toolbar from '../toolbar/toolbar';\nimport InventoryList from '../inventoryList/inventoryList';\nimport InventorySubscriptions from '../inventorySubscriptions/inventorySubscriptions';\nimport InventoryTabs, { InventoryTab } from '../inventoryTabs/inventoryTabs';\nimport { helpers, dateHelpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * An OpenShift Container Platform encompassing view.\n *\n * @param {object} props\n * @param {Array} props.productConfig\n * @param {object} props.routeDetail\n * @param {Function} props.t\n * @returns {Node}\n */\nconst ProductViewOpenShiftContainer = ({ productConfig, routeDetail, t }) => {\n  const uomValue = useSelector(({ view }) => view.query?.[productConfig[0].viewId]?.[RHSM_API_QUERY_TYPES.UOM], null);\n  const { productParameter: viewProductLabel } = routeDetail;\n\n  const renderProduct = (config, updatedUomValue) => {\n    const {\n      productContextFilterUom,\n      query = {},\n      graphTallyQuery = {},\n      inventoryHostsQuery = {},\n      inventorySubscriptionsQuery = {},\n      initialGraphFilters = [],\n      initialGraphSettings = {},\n      initialGuestsFilters = [],\n      initialInventoryFilters = [],\n      initialInventorySettings = {},\n      initialSubscriptionsInventoryFilters,\n      initialToolbarFilters,\n      productLabel,\n      productId,\n      viewId\n    } = config;\n\n    if (!productId || !viewId) {\n      return null;\n    }\n\n    const {\n      graphTallyQuery: initialGraphTallyQuery,\n      inventoryHostsQuery: initialInventoryHostsQuery,\n      inventorySubscriptionsQuery: initialInventorySubscriptionsQuery,\n      toolbarQuery\n    } = apiQueries.parseRhsmQuery(query, { graphTallyQuery, inventoryHostsQuery, inventorySubscriptionsQuery });\n\n    let graphFilters = initialGraphFilters;\n    let inventoryFilters = initialInventoryFilters;\n    let subscriptionsInventoryFilters = initialSubscriptionsInventoryFilters;\n    let uomFilter;\n\n    if (productContextFilterUom) {\n      uomFilter = updatedUomValue || query[RHSM_API_QUERY_TYPES.UOM];\n\n      const filter = ({ id, isOptional }) => {\n        if (!isOptional) {\n          return true;\n        }\n        return new RegExp(uomFilter, 'i').test(id);\n      };\n\n      graphFilters = initialGraphFilters.filter(filter);\n      inventoryFilters = initialInventoryFilters.filter(filter);\n      subscriptionsInventoryFilters = initialSubscriptionsInventoryFilters.filter(filter);\n    }\n\n    const graphCardTitle = (\n      <React.Fragment>\n        {t('curiosity-graph.cardHeading', { context: productId })}\n        <Tooltip\n          content={<p>{t('curiosity-graph.cardHeadingDescription', { context: productId })}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          <sup className=\"curiosity-icon__info\">\n            <InfoCircleIcon />\n          </sup>\n        </Tooltip>\n      </React.Fragment>\n    );\n\n    return (\n      <React.Fragment key={`product_${productId}_${uomFilter}`}>\n        {initialToolbarFilters && (\n          <PageToolbar>\n            <Toolbar filterOptions={initialToolbarFilters} productId={productId} query={toolbarQuery} viewId={viewId} />\n          </PageToolbar>\n        )}\n        <PageSection>\n          <GraphCard\n            key={`graph_${productId}`}\n            filterGraphData={graphFilters}\n            settings={initialGraphSettings}\n            query={initialGraphTallyQuery}\n            productId={productId}\n            viewId={viewId}\n            cardTitle={graphCardTitle}\n            productLabel={productLabel}\n          >\n            {productId === RHSM_API_PATH_ID_TYPES.OPENSHIFT && uomFilter && (\n              <ToolbarFieldUom value={uomFilter} viewId={viewId} />\n            )}\n            {productId === RHSM_API_PATH_ID_TYPES.OPENSHIFT && (\n              <ToolbarFieldGranularity value={graphTallyQuery[RHSM_API_QUERY_TYPES.GRANULARITY]} viewId={viewId} />\n            )}\n            {productId === RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS && <ToolbarFieldRangedMonthly viewId={viewId} />}\n          </GraphCard>\n        </PageSection>\n        <PageSection>\n          <InventoryTabs key={`inventory_${productId}`} productId={productId}>\n            <InventoryTab\n              key={`inventory_hosts_${productId}`}\n              title={t('curiosity-inventory.tab', { context: 'hosts' })}\n            >\n              <InventoryList\n                key={`inv_${productId}`}\n                filterGuestsData={initialGuestsFilters}\n                filterInventoryData={inventoryFilters}\n                productId={productId}\n                settings={initialInventorySettings}\n                query={initialInventoryHostsQuery}\n                viewId={viewId}\n              />\n            </InventoryTab>\n            {!helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS && initialSubscriptionsInventoryFilters && (\n              <InventoryTab\n                key={`inventory_subs_${productId}`}\n                title={t('curiosity-inventory.tab', { context: 'subscriptions' })}\n              >\n                <InventorySubscriptions\n                  key={`subs_${productId}`}\n                  filterInventoryData={subscriptionsInventoryFilters}\n                  productId={productId}\n                  query={initialInventorySubscriptionsQuery}\n                  viewId={viewId}\n                />\n              </InventoryTab>\n            )}\n          </InventoryTabs>\n        </PageSection>\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <PageLayout>\n      <PageHeader productLabel={viewProductLabel} includeTour>\n        {t(`curiosity-view.title`, { appName: helpers.UI_DISPLAY_NAME, context: viewProductLabel })}\n      </PageHeader>\n      <PageColumns>{productConfig.map(config => renderProduct(config, uomValue))}</PageColumns>\n    </PageLayout>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{t: Function, routeDetail: object, productConfig: Array}}\n */\nProductViewOpenShiftContainer.propTypes = {\n  productConfig: PropTypes.arrayOf(\n    PropTypes.shape({\n      productContextFilterUom: PropTypes.bool,\n      query: PropTypes.shape({\n        [RHSM_API_QUERY_TYPES.START_DATE]: PropTypes.string,\n        [RHSM_API_QUERY_TYPES.END_DATE]: PropTypes.string\n      }),\n      graphTallyQuery: PropTypes.shape({\n        [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)])\n      }),\n      inventoryHostsQuery: PropTypes.shape({\n        [RHSM_API_QUERY_TYPES.LIMIT]: PropTypes.number,\n        [RHSM_API_QUERY_TYPES.OFFSET]: PropTypes.number,\n        [RHSM_API_QUERY_TYPES.SORT]: PropTypes.oneOf([...Object.values(RHSM_API_QUERY_SORT_TYPES)]),\n        [RHSM_API_QUERY_TYPES.DIRECTION]: PropTypes.oneOf([...Object.values(SORT_DIRECTION_TYPES)])\n      }),\n      inventorySubscriptionsQuery: PropTypes.shape({\n        [RHSM_API_QUERY_TYPES.LIMIT]: PropTypes.number,\n        [RHSM_API_QUERY_TYPES.OFFSET]: PropTypes.number,\n        [RHSM_API_QUERY_TYPES.SORT]: PropTypes.oneOf([...Object.values(RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES)]),\n        [RHSM_API_QUERY_TYPES.DIRECTION]: PropTypes.oneOf([...Object.values(SORT_DIRECTION_TYPES)])\n      }),\n      initialOption: PropTypes.oneOf(Object.values(RHSM_API_QUERY_UOM_TYPES)),\n      initialGraphFilters: PropTypes.array,\n      initialGuestsFilters: PropTypes.array,\n      initialInventoryFilters: PropTypes.array,\n      initialInventorySettings: PropTypes.shape({\n        hasGuests: PropTypes.func\n      }),\n      initialSubscriptionsInventoryFilters: PropTypes.array,\n      initialToolbarFilters: PropTypes.array,\n      productLabel: PropTypes.string,\n      productId: PropTypes.string,\n      viewId: PropTypes.string\n    })\n  ),\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string,\n    productParameter: PropTypes.string,\n    viewParameter: PropTypes.string\n  }).isRequired,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: Function, productConfig: Array}}\n */\nProductViewOpenShiftContainer.defaultProps = {\n  productConfig: [\n    {\n      productContextFilterUom: true,\n      query: {\n        [RHSM_API_QUERY_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.CORES,\n        [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers\n          .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n          .startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n      },\n      graphTallyQuery: {\n        [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n      },\n      inventoryHostsQuery: {\n        [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n        [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n        [RHSM_API_QUERY_TYPES.OFFSET]: 0\n      },\n      inventorySubscriptionsQuery: {\n        [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.UPCOMING_EVENT_DATE,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n        [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n        [RHSM_API_QUERY_TYPES.OFFSET]: 0\n      },\n      initialOption: RHSM_API_QUERY_UOM_TYPES.CORES,\n      initialGraphFilters: [\n        {\n          id: 'cores',\n          isOptional: true,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value\n        },\n        {\n          id: 'sockets',\n          isOptional: true,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value\n        },\n        { id: 'thresholdSockets', isOptional: true },\n        { id: 'thresholdCores', isOptional: true }\n      ],\n      initialGraphSettings: {},\n      initialGuestsFilters: [\n        {\n          id: 'displayName',\n          header: translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n          cell: (data, session) => {\n            const { displayName, inventoryId } = data;\n            const { inventory: authorized } = session?.authorized || {};\n\n            if (!inventoryId?.value) {\n              return displayName?.value;\n            }\n\n            if (!authorized) {\n              return displayName?.value || inventoryId?.value;\n            }\n\n            return (\n              <Button\n                isInline\n                component=\"a\"\n                variant=\"link\"\n                href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n              >\n                {displayName.value || inventoryId.value}\n              </Button>\n            );\n          }\n        },\n        {\n          id: 'inventoryId',\n          cellWidth: 40\n        },\n        {\n          id: 'lastSeen',\n          cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n          cellWidth: 15\n        }\n      ],\n      initialInventoryFilters: [\n        {\n          id: 'displayName',\n          cell: (data, session) => {\n            const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n            const { inventory: authorized } = session?.authorized || {};\n\n            if (!inventoryId.value) {\n              return displayName.value;\n            }\n\n            let updatedDisplayName = displayName.value || inventoryId.value;\n\n            if (authorized) {\n              updatedDisplayName = (\n                <Button\n                  isInline\n                  component=\"a\"\n                  variant=\"link\"\n                  href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n                >\n                  {displayName.value || inventoryId.value}\n                </Button>\n              );\n            }\n\n            return (\n              <React.Fragment>\n                {updatedDisplayName}{' '}\n                {(numberOfGuests.value &&\n                  translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                    <PfLabel color=\"blue\" />\n                  ])) ||\n                  ''}\n              </React.Fragment>\n            );\n          },\n          isSortable: true\n        },\n        {\n          id: 'sockets',\n          header: translate('curiosity-inventory.header', { context: 'sockets_OpenShift Container Platform' }),\n          isOptional: true,\n          isSortable: true,\n          isWrappable: true,\n          cellWidth: 15\n        },\n        {\n          id: 'cores',\n          header: translate('curiosity-inventory.header', { context: 'cores_OpenShift Container Platform' }),\n          isOptional: true,\n          isSortable: true,\n          isWrappable: true,\n          cellWidth: 15\n        },\n        {\n          id: 'lastSeen',\n          cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n          isSortable: true,\n          isWrappable: true,\n          cellWidth: 25\n        }\n      ],\n      initialInventorySettings: {},\n      initialSubscriptionsInventoryFilters: [\n        {\n          id: 'productName',\n          isSortable: true\n        },\n        {\n          id: 'serviceLevel',\n          isSortable: true,\n          isWrappable: true,\n          cellWidth: 15\n        },\n        {\n          id: 'upcomingEventDate',\n          cell: data =>\n            (data?.upcomingEventDate?.value && moment.utc(data?.upcomingEventDate?.value).format('YYYY-DD-MM')) || '',\n          isSortable: true,\n          isWrappable: true,\n          cellWidth: 15\n        }\n      ],\n      initialToolbarFilters: [\n        {\n          id: RHSM_API_QUERY_TYPES.SLA\n        }\n      ],\n      productLabel: 'OpenShift',\n      productId: RHSM_API_PATH_ID_TYPES.OPENSHIFT,\n      viewId: 'viewOpenShift'\n    },\n    {\n      query: {\n        [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n      },\n      graphTallyQuery: {\n        [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n      },\n      inventoryHostsQuery: {\n        [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n        [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n        [RHSM_API_QUERY_TYPES.OFFSET]: 0\n      },\n      initialGraphFilters: [\n        {\n          id: 'coreHours',\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value\n        }\n      ],\n      initialGraphSettings: {\n        actionDisplay: data => {\n          const { coreHours } = data;\n          let displayContent;\n\n          if (coreHours) {\n            let total = 0;\n\n            coreHours.forEach(({ y }) => {\n              total += y ?? 0;\n            });\n\n            displayContent = translate('curiosity-graph.card-action-total', {\n              context: 'coreHours',\n              total: numbro(total)\n                .format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n                .toUpperCase()\n            });\n          }\n\n          return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n        }\n      },\n      initialInventoryFilters: [\n        {\n          id: 'displayName',\n          cell: data => {\n            const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n\n            if (!inventoryId.value) {\n              return displayName.value;\n            }\n\n            const updatedDisplayName = displayName.value || inventoryId.value;\n\n            return (\n              <React.Fragment>\n                {updatedDisplayName}{' '}\n                {(numberOfGuests.value &&\n                  translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                    <PfLabel color=\"blue\" />\n                  ])) ||\n                  ''}\n              </React.Fragment>\n            );\n          },\n          isSortable: true\n        },\n        {\n          id: 'coreHours',\n          cell: data =>\n            (typeof data?.coreHours?.value === 'number' && Number.parseFloat(data?.coreHours?.value).toFixed(2)) ||\n            `0.00`,\n          isSortable: true,\n          isWrappable: true,\n          cellWidth: 20\n        },\n        {\n          id: 'lastSeen',\n          cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n          isSortable: true,\n          isWrappable: true,\n          cellWidth: 25\n        }\n      ],\n      initialToolbarFilters: undefined,\n      productLabel: 'OpenShift Metric',\n      productId: RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS,\n      viewId: 'viewOpenShiftMetric'\n    }\n  ],\n  t: translate\n};\n\nexport { ProductViewOpenShiftContainer as default, ProductViewOpenShiftContainer };\n","\"use strict\";\nexports.__esModule = true;\nrequire('./tabs.css');\nexports.default = {\n  \"modifiers\": {\n    \"fill\": \"pf-m-fill\",\n    \"scrollable\": \"pf-m-scrollable\",\n    \"secondary\": \"pf-m-secondary\",\n    \"noBorderBottom\": \"pf-m-no-border-bottom\",\n    \"box\": \"pf-m-box\",\n    \"vertical\": \"pf-m-vertical\",\n    \"current\": \"pf-m-current\",\n    \"colorSchemeLight_300\": \"pf-m-color-scheme--light-300\",\n    \"expandable\": \"pf-m-expandable\",\n    \"nonExpandable\": \"pf-m-non-expandable\",\n    \"expandableOnSm\": \"pf-m-expandable-on-sm\",\n    \"nonExpandableOnSm\": \"pf-m-non-expandable-on-sm\",\n    \"expandableOnMd\": \"pf-m-expandable-on-md\",\n    \"nonExpandableOnMd\": \"pf-m-non-expandable-on-md\",\n    \"expandableOnLg\": \"pf-m-expandable-on-lg\",\n    \"nonExpandableOnLg\": \"pf-m-non-expandable-on-lg\",\n    \"expandableOnXl\": \"pf-m-expandable-on-xl\",\n    \"nonExpandableOnXl\": \"pf-m-non-expandable-on-xl\",\n    \"expandableOn_2xl\": \"pf-m-expandable-on-2xl\",\n    \"nonExpandableOn_2xl\": \"pf-m-non-expandable-on-2xl\",\n    \"expanded\": \"pf-m-expanded\",\n    \"pageInsets\": \"pf-m-page-insets\",\n    \"insetNone\": \"pf-m-inset-none\",\n    \"insetSm\": \"pf-m-inset-sm\",\n    \"insetMd\": \"pf-m-inset-md\",\n    \"insetLg\": \"pf-m-inset-lg\",\n    \"insetXl\": \"pf-m-inset-xl\",\n    \"inset_2xl\": \"pf-m-inset-2xl\",\n    \"insetNoneOnSm\": \"pf-m-inset-none-on-sm\",\n    \"insetSmOnSm\": \"pf-m-inset-sm-on-sm\",\n    \"insetMdOnSm\": \"pf-m-inset-md-on-sm\",\n    \"insetLgOnSm\": \"pf-m-inset-lg-on-sm\",\n    \"insetXlOnSm\": \"pf-m-inset-xl-on-sm\",\n    \"inset_2xlOnSm\": \"pf-m-inset-2xl-on-sm\",\n    \"insetNoneOnMd\": \"pf-m-inset-none-on-md\",\n    \"insetSmOnMd\": \"pf-m-inset-sm-on-md\",\n    \"insetMdOnMd\": \"pf-m-inset-md-on-md\",\n    \"insetLgOnMd\": \"pf-m-inset-lg-on-md\",\n    \"insetXlOnMd\": \"pf-m-inset-xl-on-md\",\n    \"inset_2xlOnMd\": \"pf-m-inset-2xl-on-md\",\n    \"insetNoneOnLg\": \"pf-m-inset-none-on-lg\",\n    \"insetSmOnLg\": \"pf-m-inset-sm-on-lg\",\n    \"insetMdOnLg\": \"pf-m-inset-md-on-lg\",\n    \"insetLgOnLg\": \"pf-m-inset-lg-on-lg\",\n    \"insetXlOnLg\": \"pf-m-inset-xl-on-lg\",\n    \"inset_2xlOnLg\": \"pf-m-inset-2xl-on-lg\",\n    \"insetNoneOnXl\": \"pf-m-inset-none-on-xl\",\n    \"insetSmOnXl\": \"pf-m-inset-sm-on-xl\",\n    \"insetMdOnXl\": \"pf-m-inset-md-on-xl\",\n    \"insetLgOnXl\": \"pf-m-inset-lg-on-xl\",\n    \"insetXlOnXl\": \"pf-m-inset-xl-on-xl\",\n    \"inset_2xlOnXl\": \"pf-m-inset-2xl-on-xl\",\n    \"insetNoneOn_2xl\": \"pf-m-inset-none-on-2xl\",\n    \"insetSmOn_2xl\": \"pf-m-inset-sm-on-2xl\",\n    \"insetMdOn_2xl\": \"pf-m-inset-md-on-2xl\",\n    \"insetLgOn_2xl\": \"pf-m-inset-lg-on-2xl\",\n    \"insetXlOn_2xl\": \"pf-m-inset-xl-on-2xl\",\n    \"inset_2xlOn_2xl\": \"pf-m-inset-2xl-on-2xl\"\n  },\n  \"tabs\": \"pf-c-tabs\",\n  \"tabsItem\": \"pf-c-tabs__item\",\n  \"tabsItemIcon\": \"pf-c-tabs__item-icon\",\n  \"tabsItemText\": \"pf-c-tabs__item-text\",\n  \"tabsLink\": \"pf-c-tabs__link\",\n  \"tabsList\": \"pf-c-tabs__list\",\n  \"tabsScrollButton\": \"pf-c-tabs__scroll-button\",\n  \"tabsToggle\": \"pf-c-tabs__toggle\",\n  \"tabsToggleButton\": \"pf-c-tabs__toggle-button\",\n  \"tabsToggleIcon\": \"pf-c-tabs__toggle-icon\"\n};","\"use strict\";\nexports.__esModule = true;\nrequire('./input-group.css');\nexports.default = {\n  \"formControl\": \"pf-c-form-control\",\n  \"inputGroup\": \"pf-c-input-group\",\n  \"inputGroupText\": \"pf-c-input-group__text\",\n  \"modifiers\": {\n    \"plain\": \"pf-m-plain\"\n  }\n};","\"use strict\";\nexports.__esModule = true;\nrequire('./bullseye.css');\nexports.default = {\n  \"bullseye\": \"pf-l-bullseye\"\n};","\"use strict\";\nexports.__esModule = true;\nrequire('./tab-content.css');\nexports.default = {\n  \"modifiers\": {\n    \"light_300\": \"pf-m-light-300\",\n    \"padding\": \"pf-m-padding\"\n  },\n  \"tabContent\": \"pf-c-tab-content\",\n  \"tabContentBody\": \"pf-c-tab-content__body\"\n};","\"use strict\"\nexports.__esModule = true;\nexports.InfoCircleIconConfig = {\n  name: 'InfoCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.InfoCircleIcon = require('../createIcon').createIcon(exports.InfoCircleIconConfig);\nexports[\"default\"] = exports.InfoCircleIcon;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { CardContext } from './Card';\nimport { Button } from '../Button';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nexport const CardHeader = (_a) => {\n    var { children = null, className = '', id, onExpand, toggleButtonProps, isToggleRightAligned } = _a, props = __rest(_a, [\"children\", \"className\", \"id\", \"onExpand\", \"toggleButtonProps\", \"isToggleRightAligned\"]);\n    return (React.createElement(CardContext.Consumer, null, ({ cardId }) => {\n        const cardHeaderToggle = (React.createElement(\"div\", { className: css(styles.cardHeaderToggle) },\n            React.createElement(Button, Object.assign({ variant: \"plain\", type: \"button\", onClick: evt => {\n                    onExpand(evt, cardId);\n                } }, toggleButtonProps),\n                React.createElement(\"span\", { className: css(styles.cardHeaderToggleIcon) },\n                    React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" })))));\n        return (React.createElement(\"div\", Object.assign({ className: css(styles.cardHeader, isToggleRightAligned && styles.modifiers.toggleRight, className), id: id }, props),\n            onExpand && !isToggleRightAligned && cardHeaderToggle,\n            children,\n            onExpand && isToggleRightAligned && cardHeaderToggle));\n    }));\n};\nCardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nexport const CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardFooter, className) }, props), children));\n};\nCardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/FormControl/form-control';\nimport { css } from '@patternfly/react-styles';\nimport { ValidatedOptions } from '../../helpers/constants';\nimport { debounce, trimLeft, canUseDOM } from '../../helpers/util';\nexport var TextInputTypes;\n(function (TextInputTypes) {\n    TextInputTypes[\"text\"] = \"text\";\n    TextInputTypes[\"date\"] = \"date\";\n    TextInputTypes[\"datetimeLocal\"] = \"datetime-local\";\n    TextInputTypes[\"email\"] = \"email\";\n    TextInputTypes[\"month\"] = \"month\";\n    TextInputTypes[\"number\"] = \"number\";\n    TextInputTypes[\"password\"] = \"password\";\n    TextInputTypes[\"search\"] = \"search\";\n    TextInputTypes[\"tel\"] = \"tel\";\n    TextInputTypes[\"time\"] = \"time\";\n    TextInputTypes[\"url\"] = \"url\";\n})(TextInputTypes || (TextInputTypes = {}));\nexport class TextInputBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.inputRef = React.createRef();\n        this.handleChange = (event) => {\n            if (this.props.onChange) {\n                this.props.onChange(event.currentTarget.value, event);\n            }\n        };\n        this.handleResize = () => {\n            const inputRef = this.props.innerRef || this.inputRef;\n            if (inputRef && inputRef.current) {\n                trimLeft(inputRef.current, String(this.props.value));\n            }\n        };\n        this.restoreText = () => {\n            const inputRef = this.props.innerRef || this.inputRef;\n            // restore the value\n            inputRef.current.value = String(this.props.value);\n            // make sure we still see the rightmost value to preserve cursor click position\n            inputRef.current.scrollLeft = inputRef.current.scrollWidth;\n        };\n        this.onFocus = (event) => {\n            const { isLeftTruncated, onFocus } = this.props;\n            if (isLeftTruncated) {\n                this.restoreText();\n            }\n            onFocus && onFocus(event);\n        };\n        this.onBlur = (event) => {\n            const { isLeftTruncated, onBlur } = this.props;\n            if (isLeftTruncated) {\n                this.handleResize();\n            }\n            onBlur && onBlur(event);\n        };\n        if (!props.id && !props['aria-label'] && !props['aria-labelledby']) {\n            // eslint-disable-next-line no-console\n            console.error('Text input:', 'Text input requires either an id or aria-label to be specified');\n        }\n    }\n    componentDidMount() {\n        if (this.props.isLeftTruncated) {\n            this.handleResize();\n            if (canUseDOM) {\n                window.addEventListener('resize', debounce(this.handleResize, 250));\n            }\n        }\n    }\n    componentWillUnmount() {\n        if (this.props.isLeftTruncated) {\n            if (canUseDOM) {\n                window.removeEventListener('resize', debounce(this.handleResize, 250));\n            }\n        }\n    }\n    render() {\n        const _a = this.props, { innerRef, className, type, value, validated, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        onChange, onFocus, onBlur, isLeftTruncated, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        isReadOnly, isRequired, isDisabled, iconVariant, customIconUrl, customIconDimensions } = _a, props = __rest(_a, [\"innerRef\", \"className\", \"type\", \"value\", \"validated\", \"onChange\", \"onFocus\", \"onBlur\", \"isLeftTruncated\", \"isReadOnly\", \"isRequired\", \"isDisabled\", \"iconVariant\", \"customIconUrl\", \"customIconDimensions\"]);\n        const customIconStyle = {};\n        if (customIconUrl) {\n            customIconStyle.backgroundImage = `url('${customIconUrl}')`;\n        }\n        if (customIconDimensions) {\n            customIconStyle.backgroundSize = customIconDimensions;\n        }\n        return (React.createElement(\"input\", Object.assign({}, props, { onFocus: this.onFocus, onBlur: this.onBlur, className: css(styles.formControl, validated === ValidatedOptions.success && styles.modifiers.success, validated === ValidatedOptions.warning && styles.modifiers.warning, ((iconVariant && iconVariant !== 'search') || customIconUrl) && styles.modifiers.icon, iconVariant && styles.modifiers[iconVariant], className), onChange: this.handleChange, type: type, value: value, \"aria-invalid\": validated === ValidatedOptions.error, required: isRequired, disabled: isDisabled, readOnly: isReadOnly, ref: innerRef || this.inputRef }, ((customIconUrl || customIconDimensions) && { style: customIconStyle }))));\n    }\n}\nTextInputBase.displayName = 'TextInputBase';\nTextInputBase.defaultProps = {\n    'aria-label': null,\n    className: '',\n    isRequired: false,\n    validated: 'default',\n    isDisabled: false,\n    isReadOnly: false,\n    type: TextInputTypes.text,\n    isLeftTruncated: false,\n    onChange: () => undefined\n};\nexport const TextInput = React.forwardRef((props, ref) => (React.createElement(TextInputBase, Object.assign({}, props, { innerRef: ref }))));\nTextInput.displayName = 'TextInput';\n//# sourceMappingURL=TextInput.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nexport const CardTitle = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardTitle, className) }, props), children));\n};\nCardTitle.displayName = 'CardTitle';\n//# sourceMappingURL=CardTitle.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nexport const CardActions = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.cardActions, className) }, props), children));\n};\nCardActions.displayName = 'CardActions';\n//# sourceMappingURL=CardActions.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/layouts/Bullseye/bullseye';\nexport const Bullseye = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.bullseye, className) }, props), children));\n};\nBullseye.displayName = 'Bullseye';\n//# sourceMappingURL=Bullseye.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nexport const CardHeaderMain = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: className }, props), children));\n};\nCardHeaderMain.displayName = 'CardHeaderMain';\n//# sourceMappingURL=CardHeaderMain.js.map","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport { Toolbar } from \"@patternfly/react-core/dist/esm/components/Toolbar/Toolbar.js\";\nimport classNames from 'classnames';\nimport \"../../TableToolbar/./TableToolbar.css\";\n\nfunction generateCount(results) {\n  if (results > 1 || results < 1) {\n    return \"\".concat(results, \" Results\");\n  } else {\n    return \"\".concat(results, \" Result\");\n  }\n}\n\nvar TableToolbar = function TableToolbar(_ref) {\n  var isFooter = _ref.isFooter,\n      results = _ref.results,\n      className = _ref.className,\n      selected = _ref.selected,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\"]);\n\n  var tableToolbarClasses = classNames('ins-c-table__toolbar', _defineProperty({}, \"ins-m-footer\", isFooter), className);\n  return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(Toolbar, _extends({\n    className: tableToolbarClasses\n  }, props), \" \", children), (results >= 0 || selected >= 0) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ins-c-table__toolbar-results\"\n  }, results >= 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ins-c-table__toolbar-results-count\"\n  }, \" \", generateCount(results), \" \"), selected >= 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ins-c-table__toolbar-results-selected\"\n  }, \" \", selected, \" Selected \")));\n};\n\nexport default TableToolbar;\nTableToolbar.propTypes = {\n  isFooter: propTypes.bool,\n  results: propTypes.number,\n  children: propTypes.any,\n  className: propTypes.string,\n  selected: propTypes.number\n};\nTableToolbar.defaultProps = {\n  isFooter: false\n};","/** The parent <Tabs> component accecesses this component's propeties directly in order to present each Tab */\nexport const Tab = (_props) => null;\nTab.displayName = 'Tab';\n//# sourceMappingURL=Tab.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nexport const TabTitleText = (_a) => {\n    var { children, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"span\", Object.assign({ className: css(styles.tabsItemText, className) }, props), children));\n};\nTabTitleText.displayName = 'TabTitleText';\n//# sourceMappingURL=TabTitleText.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { getOUIAProps } from '../../helpers';\nexport const TabButton = (_a) => {\n    var { children, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    tabContentRef, ouiaId, ouiaSafe } = _a, props = __rest(_a, [\"children\", \"tabContentRef\", \"ouiaId\", \"ouiaSafe\"]);\n    const Component = (props.href ? 'a' : 'button');\n    return (React.createElement(Component, Object.assign({}, getOUIAProps(TabButton.displayName, ouiaId, ouiaSafe), props), children));\n};\nTabButton.displayName = 'TabButton';\n//# sourceMappingURL=TabButton.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Tabs/tabs';\nimport buttonStyles from '@patternfly/react-styles/css/components/Button/button';\nimport { css } from '@patternfly/react-styles';\nimport AngleLeftIcon from \"@patternfly/react-icons/dist/esm/icons/angle-left-icon\";\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nimport { getUniqueId, isElementInView, formatBreakpointMods } from '../../helpers/util';\nimport { TabButton } from './TabButton';\nimport { TabContent } from './TabContent';\nimport { TabsContextProvider } from './TabsContext';\nimport { getOUIAProps, getDefaultOUIAId, canUseDOM } from '../../helpers';\nexport var TabsComponent;\n(function (TabsComponent) {\n    TabsComponent[\"div\"] = \"div\";\n    TabsComponent[\"nav\"] = \"nav\";\n})(TabsComponent || (TabsComponent = {}));\nconst variantStyle = {\n    default: '',\n    light300: styles.modifiers.colorSchemeLight_300\n};\nexport class Tabs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.tabList = React.createRef();\n        this.handleScrollButtons = () => {\n            const container = this.tabList.current;\n            if (container && !this.props.isVertical) {\n                // get first element and check if it is in view\n                const overflowOnLeft = !isElementInView(container, container.firstChild, false);\n                // get last element and check if it is in view\n                const overflowOnRight = !isElementInView(container, container.lastChild, false);\n                const showScrollButtons = overflowOnLeft || overflowOnRight;\n                const disableLeftScrollButton = !overflowOnLeft;\n                const disableRightScrollButton = !overflowOnRight;\n                this.setState({\n                    showScrollButtons,\n                    disableLeftScrollButton,\n                    disableRightScrollButton\n                });\n            }\n        };\n        this.scrollLeft = () => {\n            // find first Element that is fully in view on the left, then scroll to the element before it\n            if (this.tabList.current) {\n                const container = this.tabList.current;\n                const childrenArr = Array.from(container.children);\n                let firstElementInView;\n                let lastElementOutOfView;\n                let i;\n                for (i = 0; i < childrenArr.length && !firstElementInView; i++) {\n                    if (isElementInView(container, childrenArr[i], false)) {\n                        firstElementInView = childrenArr[i];\n                        lastElementOutOfView = childrenArr[i - 1];\n                    }\n                }\n                if (lastElementOutOfView) {\n                    container.scrollLeft -= lastElementOutOfView.scrollWidth;\n                }\n            }\n        };\n        this.scrollRight = () => {\n            // find last Element that is fully in view on the right, then scroll to the element after it\n            if (this.tabList.current) {\n                const container = this.tabList.current;\n                const childrenArr = Array.from(container.children);\n                let lastElementInView;\n                let firstElementOutOfView;\n                for (let i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n                    if (isElementInView(container, childrenArr[i], false)) {\n                        lastElementInView = childrenArr[i];\n                        firstElementOutOfView = childrenArr[i + 1];\n                    }\n                }\n                if (firstElementOutOfView) {\n                    container.scrollLeft += firstElementOutOfView.scrollWidth;\n                }\n            }\n        };\n        this.state = {\n            showScrollButtons: false,\n            disableLeftScrollButton: false,\n            disableRightScrollButton: false,\n            shownKeys: [this.props.activeKey],\n            ouiaStateId: getDefaultOUIAId(Tabs.displayName)\n        };\n    }\n    handleTabClick(event, eventKey, tabContentRef, mountOnEnter) {\n        const { shownKeys } = this.state;\n        this.props.onSelect(event, eventKey);\n        // process any tab content sections outside of the component\n        if (tabContentRef) {\n            React.Children.toArray(this.props.children)\n                .map(child => child)\n                .filter(child => child.props && child.props.tabContentRef && child.props.tabContentRef.current)\n                .forEach(child => (child.props.tabContentRef.current.hidden = true));\n            // most recently selected tabContent\n            if (tabContentRef.current) {\n                tabContentRef.current.hidden = false;\n            }\n        }\n        if (mountOnEnter) {\n            this.setState({\n                shownKeys: shownKeys.concat(eventKey)\n            });\n        }\n    }\n    componentDidMount() {\n        if (!this.props.isVertical) {\n            if (canUseDOM) {\n                window.addEventListener('resize', this.handleScrollButtons, false);\n            }\n            // call the handle resize function to check if scroll buttons should be shown\n            this.handleScrollButtons();\n        }\n    }\n    componentWillUnmount() {\n        if (!this.props.isVertical) {\n            if (canUseDOM) {\n                window.removeEventListener('resize', this.handleScrollButtons, false);\n            }\n        }\n    }\n    componentDidUpdate(prevProps) {\n        const { activeKey, mountOnEnter } = this.props;\n        const { shownKeys } = this.state;\n        if (prevProps.activeKey !== activeKey && mountOnEnter && shownKeys.indexOf(activeKey) < 0) {\n            this.setState({\n                shownKeys: shownKeys.concat(activeKey)\n            });\n        }\n    }\n    render() {\n        const _a = this.props, { className, children, activeKey, id, isFilled, isSecondary, isVertical, isBox, leftScrollAriaLabel, rightScrollAriaLabel, 'aria-label': ariaLabel, component, ouiaId, ouiaSafe, mountOnEnter, unmountOnExit, inset, variant } = _a, props = __rest(_a, [\"className\", \"children\", \"activeKey\", \"id\", \"isFilled\", \"isSecondary\", \"isVertical\", \"isBox\", \"leftScrollAriaLabel\", \"rightScrollAriaLabel\", 'aria-label', \"component\", \"ouiaId\", \"ouiaSafe\", \"mountOnEnter\", \"unmountOnExit\", \"inset\", \"variant\"]);\n        const { showScrollButtons, disableLeftScrollButton, disableRightScrollButton, shownKeys } = this.state;\n        const filteredChildren = React.Children.toArray(children)\n            .filter(Boolean)\n            .filter(child => !child.props.isHidden);\n        const uniqueId = id || getUniqueId();\n        const Component = component === TabsComponent.nav ? 'nav' : 'div';\n        return (React.createElement(TabsContextProvider, { value: { variant } },\n            React.createElement(Component, Object.assign({ \"aria-label\": ariaLabel, className: css(styles.tabs, isFilled && styles.modifiers.fill, isSecondary && styles.modifiers.secondary, isVertical && styles.modifiers.vertical, isBox && styles.modifiers.box, showScrollButtons && !isVertical && styles.modifiers.scrollable, formatBreakpointMods(inset, styles), variantStyle[variant], className) }, getOUIAProps(Tabs.displayName, ouiaId !== undefined ? ouiaId : this.state.ouiaStateId, ouiaSafe), { id: id && id }, props),\n                React.createElement(\"button\", { className: css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary), \"aria-label\": leftScrollAriaLabel, onClick: this.scrollLeft, disabled: disableLeftScrollButton, \"aria-hidden\": disableLeftScrollButton },\n                    React.createElement(AngleLeftIcon, null)),\n                React.createElement(\"ul\", { className: css(styles.tabsList), ref: this.tabList, onScroll: this.handleScrollButtons }, filteredChildren.map((child, index) => {\n                    const _a = child.props, { title, eventKey, tabContentRef, id: childId, tabContentId, className: childClassName = '', ouiaId: childOuiaId, \n                    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                    isHidden } = _a, rest = __rest(_a, [\"title\", \"eventKey\", \"tabContentRef\", \"id\", \"tabContentId\", \"className\", \"ouiaId\", \"isHidden\"]);\n                    let ariaControls = tabContentId ? `${tabContentId}` : `pf-tab-section-${eventKey}-${childId || uniqueId}`;\n                    if ((mountOnEnter || unmountOnExit) && eventKey !== activeKey) {\n                        ariaControls = undefined;\n                    }\n                    return (React.createElement(\"li\", { key: index, className: css(styles.tabsItem, eventKey === activeKey && styles.modifiers.current, childClassName) },\n                        React.createElement(TabButton, Object.assign({ className: css(styles.tabsLink), onClick: (event) => this.handleTabClick(event, eventKey, tabContentRef, mountOnEnter), id: `pf-tab-${eventKey}-${childId || uniqueId}`, \"aria-controls\": ariaControls, tabContentRef: tabContentRef, ouiaId: childOuiaId }, rest), title)));\n                })),\n                React.createElement(\"button\", { className: css(styles.tabsScrollButton, isSecondary && buttonStyles.modifiers.secondary), \"aria-label\": rightScrollAriaLabel, onClick: this.scrollRight, disabled: disableRightScrollButton, \"aria-hidden\": disableRightScrollButton },\n                    React.createElement(AngleRightIcon, null))),\n            filteredChildren\n                .filter(child => child.props.children &&\n                !(unmountOnExit && child.props.eventKey !== activeKey) &&\n                !(mountOnEnter && shownKeys.indexOf(child.props.eventKey) === -1))\n                .map((child, index) => (React.createElement(TabContent, { key: index, activeKey: activeKey, child: child, id: child.props.id || uniqueId, ouiaId: child.props.ouiaId })))));\n    }\n}\nTabs.displayName = 'Tabs';\nTabs.defaultProps = {\n    activeKey: 0,\n    onSelect: () => undefined,\n    isFilled: false,\n    isSecondary: false,\n    isVertical: false,\n    isBox: false,\n    leftScrollAriaLabel: 'Scroll left',\n    rightScrollAriaLabel: 'Scroll right',\n    component: TabsComponent.div,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    ouiaSafe: true,\n    variant: 'default'\n};\n//# sourceMappingURL=Tabs.js.map","import * as React from 'react';\nconst TabsContext = React.createContext({\n    variant: 'default'\n});\nexport const TabsContextProvider = TabsContext.Provider;\nexport const TabsContextConsumer = TabsContext.Consumer;\n//# sourceMappingURL=TabsContext.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/TabContent/tab-content';\nimport { css } from '@patternfly/react-styles';\nimport { getOUIAProps } from '../../helpers';\nimport { TabsContextConsumer } from './TabsContext';\nconst variantStyle = {\n    default: '',\n    light300: styles.modifiers.light_300\n};\nconst TabContentBase = (_a) => {\n    var { id, activeKey, 'aria-label': ariaLabel, child, children, className, eventKey, innerRef, ouiaId, ouiaSafe } = _a, props = __rest(_a, [\"id\", \"activeKey\", 'aria-label', \"child\", \"children\", \"className\", \"eventKey\", \"innerRef\", \"ouiaId\", \"ouiaSafe\"]);\n    if (children || child) {\n        let labelledBy;\n        if (ariaLabel) {\n            labelledBy = null;\n        }\n        else {\n            labelledBy = children ? `pf-tab-${eventKey}-${id}` : `pf-tab-${child.props.eventKey}-${id}`;\n        }\n        return (React.createElement(TabsContextConsumer, null, ({ variant }) => (React.createElement(\"section\", Object.assign({ ref: innerRef, hidden: children ? null : child.props.eventKey !== activeKey, className: children\n                ? css('pf-c-tab-content', className, variantStyle[variant])\n                : css('pf-c-tab-content', child.props.className, variantStyle[variant]), id: children ? id : `pf-tab-section-${child.props.eventKey}-${id}`, \"aria-label\": ariaLabel, \"aria-labelledby\": labelledBy, role: \"tabpanel\", tabIndex: 0 }, getOUIAProps('TabContent', ouiaId, ouiaSafe), props), children || child.props.children))));\n    }\n    return null;\n};\nexport const TabContent = React.forwardRef((props, ref) => (React.createElement(TabContentBase, Object.assign({}, props, { innerRef: ref }))));\n//# sourceMappingURL=TabContent.js.map","(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v8.1.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2019 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    hasSymbol = typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol',\r\n\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if only one character,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.$|[+-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '1e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (hasSymbol) {\r\n      P[Symbol.toStringTag] = 'BigNumber';\r\n\r\n      // Node.js v10.12.0+\r\n      P[Symbol.for('nodejs.util.inspect.custom')] = P.valueOf;\r\n    }\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nmodule.exports = {\n    languageTag: \"en-US\",\n    delimiters: {\n        thousands: \",\",\n        decimal: \".\"\n    },\n    abbreviations: {\n        thousand: \"k\",\n        million: \"m\",\n        billion: \"b\",\n        trillion: \"t\"\n    },\n    spaceSeparated: false,\n    ordinal: function(number) {\n        let b = number % 10;\n        return (~~(number % 100 / 10) === 1) ? \"th\" : (b === 1) ? \"st\" : (b === 2) ? \"nd\" : (b === 3) ? \"rd\" : \"th\";\n    },\n    bytes: {\n        binarySuffixes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"],\n        decimalSuffixes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\n    },\n    currency: {\n        symbol: \"$\",\n        position: \"prefix\",\n        code: \"USD\"\n    },\n    currencyFormat: {\n        thousandSeparated: true,\n        totalLength: 4,\n        spaceSeparated: true,\n        spaceSeparatedCurrency: true\n    },\n    formats: {\n        fourDigits: {\n            totalLength: 4,\n            spaceSeparated: true\n        },\n        fullWithTwoDecimals: {\n            output: \"currency\",\n            thousandSeparated: true,\n            mantissa: 2\n        },\n        fullWithTwoDecimalsNoCurrency: {\n            thousandSeparated: true,\n            mantissa: 2\n        },\n        fullWithNoDecimals: {\n            output: \"currency\",\n            thousandSeparated: true,\n            mantissa: 0\n        }\n    }\n};\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst globalState = require(\"./globalState\");\nconst validating = require(\"./validating\");\nconst parsing = require(\"./parsing\");\n\nconst powers = {\n    trillion: Math.pow(10, 12),\n    billion: Math.pow(10, 9),\n    million: Math.pow(10, 6),\n    thousand: Math.pow(10, 3)\n};\n\nconst defaultOptions = {\n    totalLength: 0,\n    characteristic: 0,\n    forceAverage: false,\n    average: false,\n    mantissa: -1,\n    optionalMantissa: true,\n    thousandSeparated: false,\n    spaceSeparated: false,\n    negative: \"sign\",\n    forceSign: false,\n    roundingFunction: Math.round,\n    spaceSeparatedAbbreviation: false\n};\n\nconst { binarySuffixes, decimalSuffixes } = globalState.currentBytes();\n\nconst bytes = {\n    general: { scale: 1024, suffixes: decimalSuffixes, marker: \"bd\" },\n    binary: { scale: 1024, suffixes: binarySuffixes, marker: \"b\" },\n    decimal: { scale: 1000, suffixes: decimalSuffixes, marker: \"d\" }\n};\n\n/**\n * Entry point. Format the provided INSTANCE according to the PROVIDEDFORMAT.\n * This method ensure the prefix and postfix are added as the last step.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {NumbroFormat|string} [providedFormat] - specification for formatting\n * @param numbro - the numbro singleton\n * @return {string}\n */\nfunction format(instance, providedFormat = {}, numbro) {\n    if (typeof providedFormat === \"string\") {\n        providedFormat = parsing.parseFormat(providedFormat);\n    }\n\n    let valid = validating.validateFormat(providedFormat);\n\n    if (!valid) {\n        return \"ERROR: invalid format\";\n    }\n\n    let prefix = providedFormat.prefix || \"\";\n    let postfix = providedFormat.postfix || \"\";\n\n    let output = formatNumbro(instance, providedFormat, numbro);\n    output = insertPrefix(output, prefix);\n    output = insertPostfix(output, postfix);\n    return output;\n}\n\n/**\n * Format the provided INSTANCE according to the PROVIDEDFORMAT.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param numbro - the numbro singleton\n * @return {string}\n */\nfunction formatNumbro(instance, providedFormat, numbro) {\n    switch (providedFormat.output) {\n        case \"currency\": {\n            providedFormat = formatOrDefault(providedFormat, globalState.currentCurrencyDefaultFormat());\n            return formatCurrency(instance, providedFormat, globalState, numbro);\n        }\n        case \"percent\": {\n            providedFormat = formatOrDefault(providedFormat, globalState.currentPercentageDefaultFormat());\n            return formatPercentage(instance, providedFormat, globalState, numbro);\n        }\n        case \"byte\":\n            providedFormat = formatOrDefault(providedFormat, globalState.currentByteDefaultFormat());\n            return formatByte(instance, providedFormat, globalState, numbro);\n        case \"time\":\n            providedFormat = formatOrDefault(providedFormat, globalState.currentTimeDefaultFormat());\n            return formatTime(instance, providedFormat, globalState, numbro);\n        case \"ordinal\":\n            providedFormat = formatOrDefault(providedFormat, globalState.currentOrdinalDefaultFormat());\n            return formatOrdinal(instance, providedFormat, globalState, numbro);\n        case \"number\":\n        default:\n            return formatNumber({\n                instance,\n                providedFormat,\n                numbro\n            });\n    }\n}\n\n/**\n * Get the decimal byte unit (MB) for the provided numbro INSTANCE.\n * We go from one unit to another using the decimal system (1000).\n *\n * @param {Numbro} instance - numbro instance to compute\n * @return {String}\n */\nfunction getDecimalByteUnit(instance) {\n    let data = bytes.decimal;\n    return getFormatByteUnits(instance._value, data.suffixes, data.scale).suffix;\n}\n\n/**\n * Get the binary byte unit (MiB) for the provided numbro INSTANCE.\n * We go from one unit to another using the decimal system (1024).\n *\n * @param {Numbro} instance - numbro instance to compute\n * @return {String}\n */\nfunction getBinaryByteUnit(instance) {\n    let data = bytes.binary;\n    return getFormatByteUnits(instance._value, data.suffixes, data.scale).suffix;\n}\n\n/**\n * Get the decimal byte unit (MB) for the provided numbro INSTANCE.\n * We go from one unit to another using the decimal system (1024).\n *\n * @param {Numbro} instance - numbro instance to compute\n * @return {String}\n */\nfunction getByteUnit(instance) {\n    let data = bytes.general;\n    return getFormatByteUnits(instance._value, data.suffixes, data.scale).suffix;\n}\n\n/**\n * Return the value and the suffix computed in byte.\n * It uses the SUFFIXES and the SCALE provided.\n *\n * @param {number} value - Number to format\n * @param {[String]} suffixes - List of suffixes\n * @param {number} scale - Number in-between two units\n * @return {{value: Number, suffix: String}}\n */\nfunction getFormatByteUnits(value, suffixes, scale) {\n    let suffix = suffixes[0];\n    let abs = Math.abs(value);\n\n    if (abs >= scale) {\n        for (let power = 1; power < suffixes.length; ++power) {\n            let min = Math.pow(scale, power);\n            let max = Math.pow(scale, power + 1);\n\n            if (abs >= min && abs < max) {\n                suffix = suffixes[power];\n                value = value / min;\n                break;\n            }\n        }\n\n        // values greater than or equal to [scale] YB never set the suffix\n        if (suffix === suffixes[0]) {\n            value = value / Math.pow(scale, suffixes.length - 1);\n            suffix = suffixes[suffixes.length - 1];\n        }\n    }\n\n    return { value, suffix };\n}\n\n/**\n * Format the provided INSTANCE as bytes using the PROVIDEDFORMAT, and STATE.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param {globalState} state - shared state of the library\n * @param numbro - the numbro singleton\n * @return {string}\n */\nfunction formatByte(instance, providedFormat, state, numbro) {\n    let base = providedFormat.base || \"binary\";\n    let options = Object.assign({}, defaultOptions, providedFormat);\n\n    const { binarySuffixes: localBinarySuffixes, decimalSuffixes: localDecimalSuffixes } = state.currentBytes();\n\n    const localBytes = {\n        general: { scale: 1024, suffixes: localDecimalSuffixes || decimalSuffixes, marker: \"bd\" },\n        binary: { scale: 1024, suffixes: localBinarySuffixes || binarySuffixes, marker: \"b\" },\n        decimal: { scale: 1000, suffixes: localDecimalSuffixes || decimalSuffixes, marker: \"d\" }\n    };\n    let baseInfo = localBytes[base];\n\n    let { value, suffix } = getFormatByteUnits(instance._value, baseInfo.suffixes, baseInfo.scale);\n\n    let output = formatNumber({\n        instance: numbro(value),\n        providedFormat,\n        state,\n        defaults: state.currentByteDefaultFormat()\n    });\n\n    return `${output}${options.spaceSeparated ? \" \" : \"\"}${suffix}`;\n}\n\n/**\n * Format the provided INSTANCE as an ordinal using the PROVIDEDFORMAT,\n * and the STATE.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param {globalState} state - shared state of the library\n * @return {string}\n */\nfunction formatOrdinal(instance, providedFormat, state) {\n    let ordinalFn = state.currentOrdinal();\n    let options = Object.assign({}, defaultOptions, providedFormat);\n\n    let output = formatNumber({\n        instance,\n        providedFormat,\n        state\n    });\n    let ordinal = ordinalFn(instance._value);\n\n    return `${output}${options.spaceSeparated ? \" \" : \"\"}${ordinal}`;\n}\n\n/**\n * Format the provided INSTANCE as a time HH:MM:SS.\n *\n * @param {Numbro} instance - numbro instance to format\n * @return {string}\n */\nfunction formatTime(instance) {\n    let hours = Math.floor(instance._value / 60 / 60);\n    let minutes = Math.floor((instance._value - (hours * 60 * 60)) / 60);\n    let seconds = Math.round(instance._value - (hours * 60 * 60) - (minutes * 60));\n    return `${hours}:${(minutes < 10) ? \"0\" : \"\"}${minutes}:${(seconds < 10) ? \"0\" : \"\"}${seconds}`;\n}\n\n/**\n * Format the provided INSTANCE as a percentage using the PROVIDEDFORMAT,\n * and the STATE.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param {globalState} state - shared state of the library\n * @param numbro - the numbro singleton\n * @return {string}\n */\nfunction formatPercentage(instance, providedFormat, state, numbro) {\n    let prefixSymbol = providedFormat.prefixSymbol;\n\n    let output = formatNumber({\n        instance: numbro(instance._value * 100),\n        providedFormat,\n        state\n    });\n    let options = Object.assign({}, defaultOptions, providedFormat);\n\n    if (prefixSymbol) {\n        return `%${options.spaceSeparated ? \" \" : \"\"}${output}`;\n    }\n\n    return `${output}${options.spaceSeparated ? \" \" : \"\"}%`;\n}\n\n/**\n * Format the provided INSTANCE as a percentage using the PROVIDEDFORMAT,\n * and the STATE.\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} providedFormat - specification for formatting\n * @param {globalState} state - shared state of the library\n * @return {string}\n */\nfunction formatCurrency(instance, providedFormat, state) {\n    const currentCurrency = state.currentCurrency();\n    let options = Object.assign({}, defaultOptions, providedFormat);\n    let decimalSeparator = undefined;\n    let space = \"\";\n    let average = !!options.totalLength || !!options.forceAverage || options.average;\n    let position = providedFormat.currencyPosition || currentCurrency.position;\n    let symbol = providedFormat.currencySymbol || currentCurrency.symbol;\n    const spaceSeparatedCurrency = options.spaceSeparatedCurrency !== void 0\n        ? options.spaceSeparatedCurrency : options.spaceSeparated;\n\n    if (providedFormat.lowPrecision === undefined) {\n        providedFormat.lowPrecision = false;\n    }\n\n    if (spaceSeparatedCurrency) {\n        space = \" \";\n    }\n\n    if (position === \"infix\") {\n        decimalSeparator = space + symbol + space;\n    }\n\n    let output = formatNumber({\n        instance,\n        providedFormat,\n        state,\n        decimalSeparator\n    });\n\n    if (position === \"prefix\") {\n        if (instance._value < 0 && options.negative === \"sign\") {\n            output = `-${space}${symbol}${output.slice(1)}`;\n        } else if (instance._value > 0 && options.forceSign) {\n            output = `+${space}${symbol}${output.slice(1)}`;\n        } else {\n            output = symbol + space + output;\n        }\n    }\n\n    if (!position || position === \"postfix\") {\n        space = !options.spaceSeparatedAbbreviation && average ? \"\" : space;\n        output = output + space + symbol;\n    }\n\n    return output;\n}\n\n/**\n * Compute the average value out of VALUE.\n * The other parameters are computation options.\n *\n * @param {number} value - value to compute\n * @param {string} [forceAverage] - forced unit used to compute\n * @param {boolean} [lowPrecision=true] - reduce average precision\n * @param {{}} abbreviations - part of the language specification\n * @param {boolean} spaceSeparated - `true` if a space must be inserted between the value and the abbreviation\n * @param {number} [totalLength] - total length of the output including the characteristic and the mantissa\n * @param {function} roundingFunction - function used to round numbers\n * @return {{value: number, abbreviation: string, mantissaPrecision: number}}\n */\nfunction computeAverage({ value, forceAverage, lowPrecision = true, abbreviations, spaceSeparated = false, totalLength = 0, roundingFunction = Math.round }) {\n    let abbreviation = \"\";\n    let abs = Math.abs(value);\n    let mantissaPrecision = -1;\n\n    if (forceAverage && abbreviations[forceAverage] && powers[forceAverage]) {\n        abbreviation = abbreviations[forceAverage];\n        value = value / powers[forceAverage];\n    } else {\n        if (abs >= powers.trillion || (lowPrecision && roundingFunction(abs / powers.trillion) === 1)) {\n            // trillion\n            abbreviation = abbreviations.trillion;\n            value = value / powers.trillion;\n        } else if (abs < powers.trillion && abs >= powers.billion || (lowPrecision && roundingFunction(abs / powers.billion) === 1)) {\n            // billion\n            abbreviation = abbreviations.billion;\n            value = value / powers.billion;\n        } else if (abs < powers.billion && abs >= powers.million || (lowPrecision && roundingFunction(abs / powers.million) === 1)) {\n            // million\n            abbreviation = abbreviations.million;\n            value = value / powers.million;\n        } else if (abs < powers.million && abs >= powers.thousand || (lowPrecision && roundingFunction(abs / powers.thousand) === 1)) {\n            // thousand\n            abbreviation = abbreviations.thousand;\n            value = value / powers.thousand;\n        }\n    }\n\n    let optionalSpace = spaceSeparated ? \" \" : \"\";\n\n    if (abbreviation) {\n        abbreviation = optionalSpace + abbreviation;\n    }\n\n    if (totalLength) {\n        let isNegative = value < 0;\n        let characteristic = value.toString().split(\".\")[0];\n\n        let characteristicLength = isNegative\n            ? characteristic.length - 1\n            : characteristic.length;\n\n        mantissaPrecision = Math.max(totalLength - characteristicLength, 0);\n    }\n\n    return { value, abbreviation, mantissaPrecision };\n}\n\n/**\n * Compute an exponential form for VALUE, taking into account CHARACTERISTIC\n * if provided.\n * @param {number} value - value to compute\n * @param {number} [characteristicPrecision] - optional characteristic length\n * @return {{value: number, abbreviation: string}}\n */\nfunction computeExponential({ value, characteristicPrecision = 0 }) {\n    let [numberString, exponential] = value.toExponential().split(\"e\");\n    let number = +numberString;\n\n    if (!characteristicPrecision) {\n        return {\n            value: number,\n            abbreviation: `e${exponential}`\n        };\n    }\n\n    let characteristicLength = 1; // see `toExponential`\n\n    if (characteristicLength < characteristicPrecision) {\n        number = number * Math.pow(10, characteristicPrecision - characteristicLength);\n        exponential = +exponential - (characteristicPrecision - characteristicLength);\n        exponential = exponential >= 0 ? `+${exponential}` : exponential;\n    }\n\n    return {\n        value: number,\n        abbreviation: `e${exponential}`\n    };\n}\n\n/**\n * Return a string of NUMBER zero.\n *\n * @param {number} number - Length of the output\n * @return {string}\n */\nfunction zeroes(number) {\n    let result = \"\";\n    for (let i = 0; i < number; i++) {\n        result += \"0\";\n    }\n\n    return result;\n}\n\n/**\n * Return a string representing VALUE with a PRECISION-long mantissa.\n * This method is for large/small numbers only (a.k.a. including a \"e\").\n *\n * @param {number} value - number to precise\n * @param {number} precision - desired length for the mantissa\n * @return {string}\n */\nfunction toFixedLarge(value, precision) {\n    let result = value.toString();\n\n    let [base, exp] = result.split(\"e\");\n\n    let [characteristic, mantissa = \"\"] = base.split(\".\");\n\n    if (+exp > 0) {\n        result = characteristic + mantissa + zeroes(exp - mantissa.length);\n    } else {\n        let prefix = \".\";\n\n        if (+characteristic < 0) {\n            prefix = `-0${prefix}`;\n        } else {\n            prefix = `0${prefix}`;\n        }\n\n        let suffix = (zeroes(-exp - 1) + Math.abs(characteristic) + mantissa).substr(0, precision);\n        if (suffix.length < precision) {\n            suffix += zeroes(precision - suffix.length);\n        }\n        result = prefix + suffix;\n    }\n\n    if (+exp > 0 && precision > 0) {\n        result += `.${zeroes(precision)}`;\n    }\n\n    return result;\n}\n\n/**\n * Return a string representing VALUE with a PRECISION-long mantissa.\n *\n * @param {number} value - number to precise\n * @param {number} precision - desired length for the mantissa\n * @param {function} roundingFunction - rounding function to be used\n * @return {string}\n */\nfunction toFixed(value, precision, roundingFunction = Math.round) {\n    if (value.toString().indexOf(\"e\") !== -1) {\n        return toFixedLarge(value, precision);\n    }\n\n    return (roundingFunction(+`${value}e+${precision}`) / (Math.pow(10, precision))).toFixed(precision);\n}\n\n/**\n * Return the current OUTPUT with a mantissa precision of PRECISION.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {number} value - number being currently formatted\n * @param {boolean} optionalMantissa - if `true`, the mantissa is omitted when it's only zeroes\n * @param {number} precision - desired precision of the mantissa\n * @param {boolean} trim - if `true`, trailing zeroes are removed from the mantissa\n * @return {string}\n */\nfunction setMantissaPrecision(output, value, optionalMantissa, precision, trim, roundingFunction) {\n    if (precision === -1) {\n        return output;\n    }\n\n    let result = toFixed(value, precision, roundingFunction);\n    let [currentCharacteristic, currentMantissa = \"\"] = result.toString().split(\".\");\n\n    if (currentMantissa.match(/^0+$/) && (optionalMantissa || trim)) {\n        return currentCharacteristic;\n    }\n\n    let hasTrailingZeroes = currentMantissa.match(/0+$/);\n    if (trim && hasTrailingZeroes) {\n        return `${currentCharacteristic}.${currentMantissa.toString().slice(0, hasTrailingZeroes.index)}`;\n    }\n\n    return result.toString();\n}\n\n/**\n * Return the current OUTPUT with a characteristic precision of PRECISION.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {number} value - number being currently formatted\n * @param {boolean} optionalCharacteristic - `true` if the characteristic is omitted when it's only zeroes\n * @param {number} precision - desired precision of the characteristic\n * @return {string}\n */\nfunction setCharacteristicPrecision(output, value, optionalCharacteristic, precision) {\n    let result = output;\n    let [currentCharacteristic, currentMantissa] = result.toString().split(\".\");\n\n    if (currentCharacteristic.match(/^-?0$/) && optionalCharacteristic) {\n        if (!currentMantissa) {\n            return currentCharacteristic.replace(\"0\", \"\");\n        }\n\n        return `${currentCharacteristic.replace(\"0\", \"\")}.${currentMantissa}`;\n    }\n\n    const hasNegativeSign = value < 0 && currentCharacteristic.indexOf(\"-\") === 0;\n    if (hasNegativeSign) {\n            // Remove the negative sign\n            currentCharacteristic = currentCharacteristic.slice(1);\n            result = result.slice(1);\n    }\n\n    if (currentCharacteristic.length < precision) {\n        let missingZeros = precision - currentCharacteristic.length;\n        for (let i = 0; i < missingZeros; i++) {\n            result = `0${result}`;\n        }\n    }\n\n    if (hasNegativeSign) {\n        // Add back the minus sign\n        result = `-${result}`;\n    }\n    return result.toString();\n}\n\n/**\n * Return the indexes where are the group separations after splitting\n * `totalLength` in group of `groupSize` size.\n * Important: we start grouping from the right hand side.\n *\n * @param {number} totalLength - total length of the characteristic to split\n * @param {number} groupSize - length of each group\n * @return {[number]}\n */\nfunction indexesOfGroupSpaces(totalLength, groupSize) {\n    let result = [];\n    let counter = 0;\n    for (let i = totalLength; i > 0; i--) {\n        if (counter === groupSize) {\n            result.unshift(i);\n            counter = 0;\n        }\n        counter++;\n    }\n\n    return result;\n}\n\n/**\n * Replace the decimal separator with DECIMALSEPARATOR and insert thousand\n * separators.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {number} value - number being currently formatted\n * @param {boolean} thousandSeparated - `true` if the characteristic must be separated\n * @param {globalState} state - shared state of the library\n * @param {string} decimalSeparator - string to use as decimal separator\n * @return {string}\n */\nfunction replaceDelimiters(output, value, thousandSeparated, state, decimalSeparator) {\n    let delimiters = state.currentDelimiters();\n    let thousandSeparator = delimiters.thousands;\n    decimalSeparator = decimalSeparator || delimiters.decimal;\n    let thousandsSize = delimiters.thousandsSize || 3;\n\n    let result = output.toString();\n    let characteristic = result.split(\".\")[0];\n    let mantissa = result.split(\".\")[1];\n    const hasNegativeSign = value < 0 && characteristic.indexOf(\"-\") === 0;\n\n    if (thousandSeparated) {\n        if (hasNegativeSign) {\n            // Remove the negative sign\n            characteristic = characteristic.slice(1);\n        }\n\n        let indexesToInsertThousandDelimiters = indexesOfGroupSpaces(characteristic.length, thousandsSize);\n        indexesToInsertThousandDelimiters.forEach((position, index) => {\n            characteristic = characteristic.slice(0, position + index) + thousandSeparator + characteristic.slice(position + index);\n        });\n\n        if (hasNegativeSign) {\n            // Add back the negative sign\n            characteristic = `-${characteristic}`;\n        }\n    }\n\n    if (!mantissa) {\n        result = characteristic;\n    } else {\n        result = characteristic + decimalSeparator + mantissa;\n    }\n    return result;\n}\n\n/**\n * Insert the provided ABBREVIATION at the end of OUTPUT.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {string} abbreviation - abbreviation to append\n * @return {*}\n */\nfunction insertAbbreviation(output, abbreviation) {\n    return output + abbreviation;\n}\n\n/**\n * Insert the positive/negative sign according to the NEGATIVE flag.\n * If the value is negative but still output as 0, the negative sign is removed.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {number} value - number being currently formatted\n * @param {string} negative - flag for the negative form (\"sign\" or \"parenthesis\")\n * @return {*}\n */\nfunction insertSign(output, value, negative) {\n    if (value === 0) {\n        return output;\n    }\n\n    if (+output === 0) {\n        return output.replace(\"-\", \"\");\n    }\n\n    if (value > 0) {\n        return `+${output}`;\n    }\n\n    if (negative === \"sign\") {\n        return output;\n    }\n\n    return `(${output.replace(\"-\", \"\")})`;\n}\n\n/**\n * Insert the provided PREFIX at the start of OUTPUT.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {string} prefix - abbreviation to prepend\n * @return {*}\n */\nfunction insertPrefix(output, prefix) {\n    return prefix + output;\n}\n\n/**\n * Insert the provided POSTFIX at the end of OUTPUT.\n *\n * @param {string} output - output being build in the process of formatting\n * @param {string} postfix - abbreviation to append\n * @return {*}\n */\nfunction insertPostfix(output, postfix) {\n    return output + postfix;\n}\n\n/**\n * Format the provided INSTANCE as a number using the PROVIDEDFORMAT,\n * and the STATE.\n * This is the key method of the framework!\n *\n * @param {Numbro} instance - numbro instance to format\n * @param {{}} [providedFormat] - specification for formatting\n * @param {globalState} state - shared state of the library\n * @param {string} decimalSeparator - string to use as decimal separator\n * @param {{}} defaults - Set of default values used for formatting\n * @return {string}\n */\nfunction formatNumber({ instance, providedFormat, state = globalState, decimalSeparator, defaults = state.currentDefaults() }) {\n    let value = instance._value;\n\n    if (value === 0 && state.hasZeroFormat()) {\n        return state.getZeroFormat();\n    }\n\n    if (!isFinite(value)) {\n        return value.toString();\n    }\n\n    let options = Object.assign({}, defaultOptions, defaults, providedFormat);\n\n    let totalLength = options.totalLength;\n    let characteristicPrecision = totalLength ? 0 : options.characteristic;\n    let optionalCharacteristic = options.optionalCharacteristic;\n    let forceAverage = options.forceAverage;\n    let lowPrecision = options.lowPrecision;\n    let average = !!totalLength || !!forceAverage || options.average;\n\n    // default when averaging is to chop off decimals\n    let mantissaPrecision = totalLength ? -1 : (average && providedFormat.mantissa === undefined ? 0 : options.mantissa);\n    let optionalMantissa = totalLength ? false : (providedFormat.optionalMantissa === undefined ? mantissaPrecision === -1 : options.optionalMantissa);\n    let trimMantissa = options.trimMantissa;\n    let thousandSeparated = options.thousandSeparated;\n    let spaceSeparated = options.spaceSeparated;\n    let negative = options.negative;\n    let forceSign = options.forceSign;\n    let exponential = options.exponential;\n    let roundingFunction = options.roundingFunction;\n\n    let abbreviation = \"\";\n    if (average) {\n        let data = computeAverage({\n            value,\n            forceAverage,\n            lowPrecision,\n            abbreviations: state.currentAbbreviations(),\n            spaceSeparated,\n            roundingFunction,\n            totalLength\n        });\n\n        value = data.value;\n        abbreviation += data.abbreviation;\n\n        if (totalLength) {\n            mantissaPrecision = data.mantissaPrecision;\n        }\n    }\n\n    if (exponential) {\n        let data = computeExponential({\n            value,\n            characteristicPrecision\n        });\n\n        value = data.value;\n        abbreviation = data.abbreviation + abbreviation;\n    }\n\n    let output = setMantissaPrecision(value.toString(), value, optionalMantissa, mantissaPrecision, trimMantissa, roundingFunction);\n    output = setCharacteristicPrecision(output, value, optionalCharacteristic, characteristicPrecision);\n    output = replaceDelimiters(output, value, thousandSeparated, state, decimalSeparator);\n\n    if (average || exponential) {\n        output = insertAbbreviation(output, abbreviation);\n    }\n\n    if (forceSign || value < 0) {\n        output = insertSign(output, value, negative);\n    }\n\n    return output;\n}\n\n/**\n * If FORMAT is non-null and not just an output, return FORMAT.\n * Return DEFAULTFORMAT otherwise.\n *\n * @param providedFormat\n * @param defaultFormat\n */\nfunction formatOrDefault(providedFormat, defaultFormat) {\n    if (!providedFormat) {\n        return defaultFormat;\n    }\n\n    let keys = Object.keys(providedFormat);\n    if (keys.length === 1 && keys[0] === \"output\") {\n        return defaultFormat;\n    }\n\n    return providedFormat;\n}\n\nmodule.exports = (numbro) => ({\n    format: (...args) => format(...args, numbro),\n    getByteUnit: (...args) => getByteUnit(...args, numbro),\n    getBinaryByteUnit: (...args) => getBinaryByteUnit(...args, numbro),\n    getDecimalByteUnit: (...args) => getDecimalByteUnit(...args, numbro),\n    formatOrDefault\n});\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst enUS = require(\"./en-US\");\nconst validating = require(\"./validating\");\nconst parsing = require(\"./parsing\");\n\nlet state = {};\n\nlet currentLanguageTag = undefined;\nlet languages = {};\n\nlet zeroFormat = null;\n\nlet globalDefaults = {};\n\nfunction chooseLanguage(tag) { currentLanguageTag = tag; }\n\nfunction currentLanguageData() { return languages[currentLanguageTag]; }\n\n/**\n * Return all the register languages\n *\n * @return {{}}\n */\nstate.languages = () => Object.assign({}, languages);\n\n//\n// Current language accessors\n//\n\n/**\n * Return the current language tag\n *\n * @return {string}\n */\nstate.currentLanguage = () => currentLanguageTag;\n\n/**\n * Return the current language bytes data\n *\n * @return {{}}\n */\nstate.currentBytes = () => currentLanguageData().bytes || {};\n\n/**\n * Return the current language currency data\n *\n * @return {{}}\n */\nstate.currentCurrency = () => currentLanguageData().currency;\n\n/**\n * Return the current language abbreviations data\n *\n * @return {{}}\n */\nstate.currentAbbreviations = () => currentLanguageData().abbreviations;\n\n/**\n * Return the current language delimiters data\n *\n * @return {{}}\n */\nstate.currentDelimiters = () => currentLanguageData().delimiters;\n\n/**\n * Return the current language ordinal function\n *\n * @return {function}\n */\nstate.currentOrdinal = () => currentLanguageData().ordinal;\n\n//\n// Defaults\n//\n\n/**\n * Return the current formatting defaults.\n * First use the current language default, then fallback to the globally defined defaults.\n *\n * @return {{}}\n */\nstate.currentDefaults = () => Object.assign({}, currentLanguageData().defaults, globalDefaults);\n\n/**\n * Return the ordinal default-format.\n * First use the current language ordinal default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentOrdinalDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().ordinalFormat);\n\n/**\n * Return the byte default-format.\n * First use the current language byte default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentByteDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().byteFormat);\n\n/**\n * Return the percentage default-format.\n * First use the current language percentage default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentPercentageDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().percentageFormat);\n\n/**\n * Return the currency default-format.\n * First use the current language currency default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentCurrencyDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().currencyFormat);\n\n/**\n * Return the time default-format.\n * First use the current language currency default, then fallback to the regular defaults.\n *\n * @return {{}}\n */\nstate.currentTimeDefaultFormat = () => Object.assign({}, state.currentDefaults(), currentLanguageData().timeFormat);\n\n/**\n * Set the global formatting defaults.\n *\n * @param {{}|string} format - formatting options to use as defaults\n */\nstate.setDefaults = (format) => {\n    format = parsing.parseFormat(format);\n    if (validating.validateFormat(format)) {\n        globalDefaults = format;\n    }\n};\n\n//\n// Zero format\n//\n\n/**\n * Return the format string for 0.\n *\n * @return {string}\n */\nstate.getZeroFormat = () => zeroFormat;\n\n/**\n * Set a STRING to output when the value is 0.\n *\n * @param {{}|string} string - string to set\n */\nstate.setZeroFormat = (string) => zeroFormat = typeof(string) === \"string\" ? string : null;\n\n/**\n * Return true if a format for 0 has been set already.\n *\n * @return {boolean}\n */\nstate.hasZeroFormat = () => zeroFormat !== null;\n\n//\n// Getters/Setters\n//\n\n/**\n * Return the language data for the provided TAG.\n * Return the current language data if no tag is provided.\n *\n * Throw an error if the tag doesn't match any registered language.\n *\n * @param {string} [tag] - language tag of a registered language\n * @return {{}}\n */\nstate.languageData = (tag) => {\n    if (tag) {\n        if (languages[tag]) {\n            return languages[tag];\n        }\n        throw new Error(`Unknown tag \"${tag}\"`);\n    }\n\n    return currentLanguageData();\n};\n\n/**\n * Register the provided DATA as a language if and only if the data is valid.\n * If the data is not valid, an error is thrown.\n *\n * When USELANGUAGE is true, the registered language is then used.\n *\n * @param {{}} data - language data to register\n * @param {boolean} [useLanguage] - `true` if the provided data should become the current language\n */\nstate.registerLanguage = (data, useLanguage = false) => {\n    if (!validating.validateLanguage(data)) {\n        throw new Error(\"Invalid language data\");\n    }\n\n    languages[data.languageTag] = data;\n\n    if (useLanguage) {\n        chooseLanguage(data.languageTag);\n    }\n};\n\n/**\n * Set the current language according to TAG.\n * If TAG doesn't match a registered language, another language matching\n * the \"language\" part of the tag (according to BCP47: https://tools.ietf.org/rfc/bcp/bcp47.txt).\n * If none, the FALLBACKTAG is used. If the FALLBACKTAG doesn't match a register language,\n * `en-US` is finally used.\n *\n * @param tag\n * @param fallbackTag\n */\nstate.setLanguage = (tag, fallbackTag = enUS.languageTag) => {\n    if (!languages[tag]) {\n        let suffix = tag.split(\"-\")[0];\n\n        let matchingLanguageTag = Object.keys(languages).find(each => {\n            return each.split(\"-\")[0] === suffix;\n        });\n\n        if (!languages[matchingLanguageTag]) {\n            chooseLanguage(fallbackTag);\n            return;\n        }\n\n        chooseLanguage(matchingLanguageTag);\n        return;\n    }\n\n    chooseLanguage(tag);\n};\n\nstate.registerLanguage(enUS);\ncurrentLanguageTag = enUS.languageTag;\n\nmodule.exports = state;\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Load languages matching TAGS. Silently pass over the failing load.\n *\n * We assume here that we are in a node environment, so we don't check for it.\n * @param {[String]} tags - list of tags to load\n * @param {Numbro} numbro - the numbro singleton\n */\nfunction loadLanguagesInNode(tags, numbro) {\n    tags.forEach((tag) => {\n        let data = undefined;\n        try {\n            data = require(`../languages/${tag}`);\n        } catch (e) {\n            console.error(`Unable to load \"${tag}\". No matching language file found.`); // eslint-disable-line no-console\n        }\n\n        if (data) {\n            numbro.registerLanguage(data);\n        }\n    });\n}\n\nmodule.exports = (numbro) => ({\n    loadLanguagesInNode: (tags) => loadLanguagesInNode(tags, numbro)\n});\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst BigNumber = require(\"bignumber.js\");\n\n/**\n * Add a number or a numbro to N.\n *\n * @param {Numbro} n - augend\n * @param {number|Numbro} other - addend\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction add(n, other, numbro) {\n    let value = new BigNumber(n._value);\n    let otherValue = other;\n\n    if (numbro.isNumbro(other)) {\n        otherValue = other._value;\n    }\n\n    otherValue = new BigNumber(otherValue);\n\n    n._value = value.plus(otherValue).toNumber();\n    return n;\n}\n\n/**\n * Subtract a number or a numbro from N.\n *\n * @param {Numbro} n - minuend\n * @param {number|Numbro} other - subtrahend\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction subtract(n, other, numbro) {\n    let value = new BigNumber(n._value);\n    let otherValue = other;\n\n    if (numbro.isNumbro(other)) {\n        otherValue = other._value;\n    }\n\n    otherValue = new BigNumber(otherValue);\n\n    n._value = value.minus(otherValue).toNumber();\n    return n;\n}\n\n/**\n * Multiply N by a number or a numbro.\n *\n * @param {Numbro} n - multiplicand\n * @param {number|Numbro} other - multiplier\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction multiply(n, other, numbro) {\n    let value = new BigNumber(n._value);\n    let otherValue = other;\n\n    if (numbro.isNumbro(other)) {\n        otherValue = other._value;\n    }\n\n    otherValue = new BigNumber(otherValue);\n\n    n._value = value.times(otherValue).toNumber();\n    return n;\n}\n\n/**\n * Divide N by a number or a numbro.\n *\n * @param {Numbro} n - dividend\n * @param {number|Numbro} other - divisor\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction divide(n, other, numbro) {\n    let value = new BigNumber(n._value);\n    let otherValue = other;\n\n    if (numbro.isNumbro(other)) {\n        otherValue = other._value;\n    }\n\n    otherValue = new BigNumber(otherValue);\n\n    n._value = value.dividedBy(otherValue).toNumber();\n    return n;\n}\n\n/**\n * Set N to the OTHER (or the value of OTHER when it's a numbro instance).\n *\n * @param {Numbro} n - numbro instance to mutate\n * @param {number|Numbro} other - new value to assign to N\n * @param {numbro} numbro - numbro singleton\n * @return {Numbro} n\n */\nfunction set (n, other, numbro) {\n    let value = other;\n\n    if (numbro.isNumbro(other)) {\n        value = other._value;\n    }\n\n    n._value = value;\n    return n;\n}\n\n/**\n * Return the distance between N and OTHER.\n *\n * @param {Numbro} n\n * @param {number|Numbro} other\n * @param {numbro} numbro - numbro singleton\n * @return {number}\n */\nfunction difference(n, other, numbro) {\n    let clone = numbro(n._value);\n    subtract(clone, other, numbro);\n\n    return Math.abs(clone._value);\n}\n\nmodule.exports = numbro => ({\n    add: (n, other) => add(n, other, numbro),\n    subtract: (n, other) => subtract(n, other, numbro),\n    multiply: (n, other) => multiply(n, other, numbro),\n    divide: (n, other) => divide(n, other, numbro),\n    set: (n, other) => set(n, other, numbro),\n    difference: (n, other) => difference(n, other, numbro),\n    BigNumber: BigNumber\n});\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst VERSION = \"2.3.2\";\n\nconst globalState = require(\"./globalState\");\nconst validator = require(\"./validating\");\nconst loader = require(\"./loading\")(numbro);\nconst unformatter = require(\"./unformatting\");\nlet formatter = require(\"./formatting\")(numbro);\nlet manipulate = require(\"./manipulating\")(numbro);\nconst parsing = require(\"./parsing\");\n\nclass Numbro {\n    constructor(number) {\n        this._value = number;\n    }\n\n    clone() { return numbro(this._value); }\n\n    format(format = {}) { return formatter.format(this, format); }\n\n    formatCurrency(format) {\n        if (typeof format === \"string\") {\n            format = parsing.parseFormat(format);\n        }\n        format = formatter.formatOrDefault(format, globalState.currentCurrencyDefaultFormat());\n        format.output = \"currency\";\n        return formatter.format(this, format);\n    }\n\n    formatTime(format = {}) {\n        format.output = \"time\";\n        return formatter.format(this, format);\n    }\n\n    binaryByteUnits() { return formatter.getBinaryByteUnit(this);}\n\n    decimalByteUnits() { return formatter.getDecimalByteUnit(this);}\n\n    byteUnits() { return formatter.getByteUnit(this);}\n\n    difference(other) { return manipulate.difference(this, other); }\n\n    add(other) { return manipulate.add(this, other); }\n\n    subtract(other) { return manipulate.subtract(this, other); }\n\n    multiply(other) { return manipulate.multiply(this, other); }\n\n    divide(other) { return manipulate.divide(this, other); }\n\n    set(input) { return manipulate.set(this, normalizeInput(input)); }\n\n    value() { return this._value; }\n\n    valueOf() { return this._value; }\n}\n\n/**\n * Make its best to convert input into a number.\n *\n * @param {numbro|string|number} input - Input to convert\n * @return {number}\n */\nfunction normalizeInput(input) {\n    let result = input;\n    if (numbro.isNumbro(input)) {\n        result = input._value;\n    } else if (typeof input === \"string\") {\n        result = numbro.unformat(input);\n    } else if (isNaN(input)) {\n        result = NaN;\n    }\n\n    return result;\n}\n\nfunction numbro(input) {\n    return new Numbro(normalizeInput(input));\n}\n\nnumbro.version = VERSION;\n\nnumbro.isNumbro = function(object) {\n    return object instanceof Numbro;\n};\n\n//\n// `numbro` static methods\n//\n\nnumbro.language = globalState.currentLanguage;\nnumbro.registerLanguage = globalState.registerLanguage;\nnumbro.setLanguage = globalState.setLanguage;\nnumbro.languages = globalState.languages;\nnumbro.languageData = globalState.languageData;\nnumbro.zeroFormat = globalState.setZeroFormat;\nnumbro.defaultFormat = globalState.currentDefaults;\nnumbro.setDefaults = globalState.setDefaults;\nnumbro.defaultCurrencyFormat = globalState.currentCurrencyDefaultFormat;\nnumbro.validate = validator.validate;\nnumbro.loadLanguagesInNode = loader.loadLanguagesInNode;\nnumbro.unformat = unformatter.unformat;\nnumbro.BigNumber = manipulate.BigNumber;\n\nmodule.exports = numbro;\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n/**\n * Parse the format STRING looking for a prefix. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parsePrefix(string, result) {\n    let match = string.match(/^{([^}]*)}/);\n    if (match) {\n        result.prefix = match[1];\n        return string.slice(match[0].length);\n    }\n\n    return string;\n}\n\n/**\n * Parse the format STRING looking for a postfix. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parsePostfix(string, result) {\n    let match = string.match(/{([^}]*)}$/);\n    if (match) {\n        result.postfix = match[1];\n\n        return string.slice(0, -match[0].length);\n    }\n\n    return string;\n}\n\n/**\n * Parse the format STRING looking for the output value. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n */\nfunction parseOutput(string, result) {\n    if (string.indexOf(\"$\") !== -1) {\n        result.output = \"currency\";\n        return;\n    }\n\n    if (string.indexOf(\"%\") !== -1) {\n        result.output = \"percent\";\n        return;\n    }\n\n    if (string.indexOf(\"bd\") !== -1) {\n        result.output = \"byte\";\n        result.base = \"general\";\n        return;\n    }\n\n    if (string.indexOf(\"b\") !== -1) {\n        result.output = \"byte\";\n        result.base = \"binary\";\n        return;\n\n    }\n\n    if (string.indexOf(\"d\") !== -1) {\n        result.output = \"byte\";\n        result.base = \"decimal\";\n        return;\n\n    }\n\n    if (string.indexOf(\":\") !== -1) {\n        result.output = \"time\";\n        return;\n    }\n\n    if (string.indexOf(\"o\") !== -1) {\n        result.output = \"ordinal\";\n    }\n}\n\n/**\n * Parse the format STRING looking for the thousand separated value. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseThousandSeparated(string, result) {\n    if (string.indexOf(\",\") !== -1) {\n        result.thousandSeparated = true;\n    }\n}\n\n/**\n * Parse the format STRING looking for the space separated value. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseSpaceSeparated(string, result) {\n    if (string.indexOf(\" \") !== -1) {\n        result.spaceSeparated = true;\n        result.spaceSeparatedCurrency = true;\n\n        if (result.average || result.forceAverage) {\n            result.spaceSeparatedAbbreviation = true;\n        }\n    }\n}\n\n/**\n * Parse the format STRING looking for the total length. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseTotalLength(string, result) {\n    let match = string.match(/[1-9]+[0-9]*/);\n\n    if (match) {\n        result.totalLength = +match[0];\n    }\n}\n\n/**\n * Parse the format STRING looking for the characteristic length. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseCharacteristic(string, result) {\n    let characteristic = string.split(\".\")[0];\n    let match = characteristic.match(/0+/);\n    if (match) {\n        result.characteristic = match[0].length;\n    }\n}\n\n/**\n * Parse the format STRING looking for the mantissa length. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseMantissa(string, result) {\n    let mantissa = string.split(\".\")[1];\n    if (mantissa) {\n        let match = mantissa.match(/0+/);\n        if (match) {\n            result.mantissa = match[0].length;\n        }\n    }\n}\n\n/**\n * Parse the format STRING looking for a trimmed mantissa. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n */\nfunction parseTrimMantissa(string, result) {\n    const mantissa = string.split(\".\")[1];\n    if (mantissa) {\n        result.trimMantissa = mantissa.indexOf(\"[\") !== -1;\n    }\n}\n\n/**\n * Parse the format STRING looking for the average value. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseAverage(string, result) {\n    if (string.indexOf(\"a\") !== -1) {\n        result.average = true;\n    }\n}\n\n/**\n * Parse the format STRING looking for a forced average precision. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseForceAverage(string, result) {\n    if (string.indexOf(\"K\") !== -1) {\n        result.forceAverage = \"thousand\";\n    } else if (string.indexOf(\"M\") !== -1) {\n        result.forceAverage = \"million\";\n    } else if (string.indexOf(\"B\") !== -1) {\n        result.forceAverage = \"billion\";\n    } else if (string.indexOf(\"T\") !== -1) {\n        result.forceAverage = \"trillion\";\n    }\n}\n\n/**\n * Parse the format STRING finding if the mantissa is optional. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseOptionalMantissa(string, result) {\n    if (string.match(/\\[\\.]/)) {\n        result.optionalMantissa = true;\n    } else if (string.match(/\\./)) {\n        result.optionalMantissa = false;\n    }\n}\n\n/**\n * Parse the format STRING finding if the characteristic is optional. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseOptionalCharacteristic(string, result) {\n    if (string.indexOf(\".\") !== -1) {\n        let characteristic = string.split(\".\")[0];\n        result.optionalCharacteristic = characteristic.indexOf(\"0\") === -1;\n    }\n}\n\n/**\n * Parse the format STRING looking for the negative format. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {string} - format\n */\nfunction parseNegative(string, result) {\n    if (string.match(/^\\+?\\([^)]*\\)$/)) {\n        result.negative = \"parenthesis\";\n    }\n    if (string.match(/^\\+?-/)) {\n        result.negative = \"sign\";\n    }\n}\n\n/**\n * Parse the format STRING finding if the sign is mandatory. Append it to RESULT when found.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n */\nfunction parseForceSign(string, result) {\n    if (string.match(/^\\+/)) {\n        result.forceSign = true;\n    }\n}\n\n/**\n * Parse the format STRING and accumulating the values ie RESULT.\n *\n * @param {string} string - format\n * @param {NumbroFormat} result - Result accumulator\n * @return {NumbroFormat} - format\n */\nfunction parseFormat(string, result = {}) {\n    if (typeof string !== \"string\") {\n        return string;\n    }\n\n    string = parsePrefix(string, result);\n    string = parsePostfix(string, result);\n    parseOutput(string, result);\n    parseTotalLength(string, result);\n    parseCharacteristic(string, result);\n    parseOptionalCharacteristic(string, result);\n    parseAverage(string, result);\n    parseForceAverage(string, result);\n    parseMantissa(string, result);\n    parseOptionalMantissa(string, result);\n    parseTrimMantissa(string, result);\n    parseThousandSeparated(string, result);\n    parseSpaceSeparated(string, result);\n    parseNegative(string, result);\n    parseForceSign(string, result);\n\n    return result;\n}\n\nmodule.exports = {\n    parseFormat\n};\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nconst allSuffixes = [\n    {key: \"ZiB\", factor: Math.pow(1024, 7)},\n    {key: \"ZB\", factor: Math.pow(1000, 7)},\n    {key: \"YiB\", factor: Math.pow(1024, 8)},\n    {key: \"YB\", factor: Math.pow(1000, 8)},\n    {key: \"TiB\", factor: Math.pow(1024, 4)},\n    {key: \"TB\", factor: Math.pow(1000, 4)},\n    {key: \"PiB\", factor: Math.pow(1024, 5)},\n    {key: \"PB\", factor: Math.pow(1000, 5)},\n    {key: \"MiB\", factor: Math.pow(1024, 2)},\n    {key: \"MB\", factor: Math.pow(1000, 2)},\n    {key: \"KiB\", factor: Math.pow(1024, 1)},\n    {key: \"KB\", factor: Math.pow(1000, 1)},\n    {key: \"GiB\", factor: Math.pow(1024, 3)},\n    {key: \"GB\", factor: Math.pow(1000, 3)},\n    {key: \"EiB\", factor: Math.pow(1024, 6)},\n    {key: \"EB\", factor: Math.pow(1000, 6)},\n    {key: \"B\", factor: 1}\n];\n\n/**\n * Generate a RegExp where S get all RegExp specific characters escaped.\n *\n * @param {string} s - string representing a RegExp\n * @return {string}\n */\nfunction escapeRegExp(s) {\n    return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, \"\\\\$&\");\n}\n\n/**\n * Recursively compute the unformatted value.\n *\n * @param {string} inputString - string to unformat\n * @param {*} delimiters - Delimiters used to generate the inputString\n * @param {string} [currencySymbol] - symbol used for currency while generating the inputString\n * @param {function} ordinal - function used to generate an ordinal out of a number\n * @param {string} zeroFormat - string representing zero\n * @param {*} abbreviations - abbreviations used while generating the inputString\n * @param {NumbroFormat} format - format used while generating the inputString\n * @return {number|undefined}\n */\nfunction computeUnformattedValue(inputString, delimiters, currencySymbol = \"\", ordinal, zeroFormat, abbreviations, format) {\n    if (!isNaN(+inputString)) {\n        return +inputString;\n    }\n\n    let stripped = \"\";\n    // Negative\n\n    let newInput = inputString.replace(/(^[^(]*)\\((.*)\\)([^)]*$)/, \"$1$2$3\");\n\n    if (newInput !== inputString) {\n        return -1 * computeUnformattedValue(newInput, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format);\n    }\n\n    // Byte\n\n    for (let i = 0; i < allSuffixes.length; i++) {\n        let suffix = allSuffixes[i];\n        stripped = inputString.replace(suffix.key, \"\");\n\n        if (stripped !== inputString) {\n            return computeUnformattedValue(stripped, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format) * suffix.factor;\n        }\n    }\n\n    // Percent\n\n    stripped = inputString.replace(\"%\", \"\");\n\n    if (stripped !== inputString) {\n        return computeUnformattedValue(stripped, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format) / 100;\n    }\n\n    // Ordinal\n\n    let possibleOrdinalValue = parseFloat(inputString);\n\n    if (isNaN(possibleOrdinalValue)) {\n        return undefined;\n    }\n\n    let ordinalString = ordinal(possibleOrdinalValue);\n    if (ordinalString && ordinalString !== \".\") { // if ordinal is \".\" it will be caught next round in the +inputString\n        stripped = inputString.replace(new RegExp(`${escapeRegExp(ordinalString)}$`), \"\");\n\n        if (stripped !== inputString) {\n            return computeUnformattedValue(stripped, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format);\n        }\n    }\n\n    // Average\n\n    let inversedAbbreviations = {};\n    Object.keys(abbreviations).forEach((key) => {\n        inversedAbbreviations[abbreviations[key]] = key;\n    });\n\n    let abbreviationValues = Object.keys(inversedAbbreviations).sort().reverse();\n    let numberOfAbbreviations = abbreviationValues.length;\n\n    for (let i = 0; i < numberOfAbbreviations; i++) {\n        let value = abbreviationValues[i];\n        let key = inversedAbbreviations[value];\n\n        stripped = inputString.replace(value, \"\");\n        if (stripped !== inputString) {\n            let factor = undefined;\n            switch (key) { // eslint-disable-line default-case\n                case \"thousand\":\n                    factor = Math.pow(10, 3);\n                    break;\n                case \"million\":\n                    factor = Math.pow(10, 6);\n                    break;\n                case \"billion\":\n                    factor = Math.pow(10, 9);\n                    break;\n                case \"trillion\":\n                    factor = Math.pow(10, 12);\n                    break;\n            }\n            return computeUnformattedValue(stripped, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format) * factor;\n        }\n    }\n\n    return undefined;\n}\n\n/**\n * Removes in one pass all formatting symbols.\n *\n * @param {string} inputString - string to unformat\n * @param {*} delimiters - Delimiters used to generate the inputString\n * @param {string} [currencySymbol] - symbol used for currency while generating the inputString\n * @return {string}\n */\nfunction removeFormattingSymbols(inputString, delimiters, currencySymbol = \"\") {\n    // Currency\n\n    let stripped = inputString.replace(currencySymbol, \"\");\n\n    // Thousand separators\n\n    stripped = stripped.replace(new RegExp(`([0-9])${escapeRegExp(delimiters.thousands)}([0-9])`, \"g\"), \"$1$2\");\n\n    // Decimal\n\n    stripped = stripped.replace(delimiters.decimal, \".\");\n\n    return stripped;\n}\n\n/**\n * Unformat a numbro-generated string to retrieve the original value.\n *\n * @param {string} inputString - string to unformat\n * @param {*} delimiters - Delimiters used to generate the inputString\n * @param {string} [currencySymbol] - symbol used for currency while generating the inputString\n * @param {function} ordinal - function used to generate an ordinal out of a number\n * @param {string} zeroFormat - string representing zero\n * @param {*} abbreviations - abbreviations used while generating the inputString\n * @param {NumbroFormat} format - format used while generating the inputString\n * @return {number|undefined}\n */\nfunction unformatValue(inputString, delimiters, currencySymbol = \"\", ordinal, zeroFormat, abbreviations, format) {\n    if (inputString === \"\") {\n        return undefined;\n    }\n\n    // Zero Format\n\n    if (inputString === zeroFormat) {\n        return 0;\n    }\n\n    let value = removeFormattingSymbols(inputString, delimiters, currencySymbol);\n    return computeUnformattedValue(value, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format);\n}\n\n/**\n * Check if the INPUTSTRING represents a time.\n *\n * @param {string} inputString - string to check\n * @param {*} delimiters - Delimiters used while generating the inputString\n * @return {boolean}\n */\nfunction matchesTime(inputString, delimiters) {\n    let separators = inputString.indexOf(\":\") && delimiters.thousands !== \":\";\n\n    if (!separators) {\n        return false;\n    }\n\n    let segments = inputString.split(\":\");\n    if (segments.length !== 3) {\n        return false;\n    }\n\n    let hours = +segments[0];\n    let minutes = +segments[1];\n    let seconds = +segments[2];\n\n    return !isNaN(hours) && !isNaN(minutes) && !isNaN(seconds);\n}\n\n/**\n * Unformat a numbro-generated string representing a time to retrieve the original value.\n *\n * @param {string} inputString - string to unformat\n * @return {number}\n */\nfunction unformatTime(inputString) {\n    let segments = inputString.split(\":\");\n\n    let hours = +segments[0];\n    let minutes = +segments[1];\n    let seconds = +segments[2];\n\n    return seconds + 60 * minutes + 3600 * hours;\n}\n\n/**\n * Unformat a numbro-generated string to retrieve the original value.\n *\n * @param {string} inputString - string to unformat\n * @param {NumbroFormat} format - format used  while generating the inputString\n * @return {number}\n */\nfunction unformat(inputString, format) {\n    // Avoid circular references\n    const globalState = require(\"./globalState\");\n\n    let delimiters = globalState.currentDelimiters();\n    let currencySymbol = globalState.currentCurrency().symbol;\n    let ordinal = globalState.currentOrdinal();\n    let zeroFormat = globalState.getZeroFormat();\n    let abbreviations = globalState.currentAbbreviations();\n\n    let value = undefined;\n\n    if (typeof inputString === \"string\") {\n        if (matchesTime(inputString, delimiters)) {\n            value = unformatTime(inputString);\n        } else {\n            value = unformatValue(inputString, delimiters, currencySymbol, ordinal, zeroFormat, abbreviations, format);\n        }\n    } else if (typeof inputString === \"number\") {\n        value = inputString;\n    } else {\n        return undefined;\n    }\n\n    if (value === undefined) {\n        return undefined;\n    }\n\n    return value;\n}\n\nmodule.exports = {\n    unformat\n};\n","/*!\n * Copyright (c) 2017 Benjamin Van Ryseghem<benjamin@vanryseghem.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nlet unformatter = require(\"./unformatting\");\n\n// Simplified regexp supporting only `language`, `script`, and `region`\nconst bcp47RegExp = /^[a-z]{2,3}(-[a-zA-Z]{4})?(-([A-Z]{2}|[0-9]{3}))?$/;\n\nconst validOutputValues = [\n    \"currency\",\n    \"percent\",\n    \"byte\",\n    \"time\",\n    \"ordinal\",\n    \"number\"\n];\n\nconst validForceAverageValues = [\n    \"trillion\",\n    \"billion\",\n    \"million\",\n    \"thousand\"\n];\n\nconst validCurrencyPosition = [\n    \"prefix\",\n    \"infix\",\n    \"postfix\"\n];\n\nconst validNegativeValues = [\n    \"sign\",\n    \"parenthesis\"\n];\n\nconst validMandatoryAbbreviations = {\n    type: \"object\",\n    children: {\n        thousand: {\n            type: \"string\",\n            mandatory: true\n        },\n        million: {\n            type: \"string\",\n            mandatory: true\n        },\n        billion: {\n            type: \"string\",\n            mandatory: true\n        },\n        trillion: {\n            type: \"string\",\n            mandatory: true\n        }\n    },\n    mandatory: true\n};\n\nconst validAbbreviations = {\n    type: \"object\",\n    children: {\n        thousand: \"string\",\n        million: \"string\",\n        billion: \"string\",\n        trillion: \"string\"\n    }\n};\n\nconst validBaseValues = [\n    \"decimal\",\n    \"binary\",\n    \"general\"\n];\n\nconst validFormat = {\n    output: {\n        type: \"string\",\n        validValues: validOutputValues\n    },\n    base: {\n        type: \"string\",\n        validValues: validBaseValues,\n        restriction: (number, format) => format.output === \"byte\",\n        message: \"`base` must be provided only when the output is `byte`\",\n        mandatory: (format) => format.output === \"byte\"\n    },\n    characteristic: {\n        type: \"number\",\n        restriction: (number) => number >= 0,\n        message: \"value must be positive\"\n    },\n    prefix: \"string\",\n    postfix: \"string\",\n    forceAverage: {\n        type: \"string\",\n        validValues: validForceAverageValues\n    },\n    average: \"boolean\",\n    lowPrecision: {\n        type: \"boolean\",\n        restriction: (number, format) => format.average === true,\n        message: \"`lowPrecision` must be provided only when the option `average` is set\"\n    },\n    currencyPosition: {\n        type: \"string\",\n        validValues: validCurrencyPosition\n    },\n    currencySymbol: \"string\",\n    totalLength: {\n        type: \"number\",\n        restrictions: [\n            {\n                restriction: (number) => number >= 0,\n                message: \"value must be positive\"\n            },\n            {\n                restriction: (number, format) => !format.exponential,\n                message: \"`totalLength` is incompatible with `exponential`\"\n            }\n        ]\n    },\n    mantissa: {\n        type: \"number\",\n        restriction: (number) => number >= 0,\n        message: \"value must be positive\"\n    },\n    optionalMantissa: \"boolean\",\n    trimMantissa: \"boolean\",\n    roundingFunction: \"function\",\n    optionalCharacteristic: \"boolean\",\n    thousandSeparated: \"boolean\",\n    spaceSeparated: \"boolean\",\n    spaceSeparatedCurrency: \"boolean\",\n    spaceSeparatedAbbreviation: \"boolean\",\n    abbreviations: validAbbreviations,\n    negative: {\n        type: \"string\",\n        validValues: validNegativeValues\n    },\n    forceSign: \"boolean\",\n    exponential: {\n        type: \"boolean\"\n    },\n    prefixSymbol: {\n        type: \"boolean\",\n        restriction: (number, format) => format.output === \"percent\",\n        message: \"`prefixSymbol` can be provided only when the output is `percent`\"\n    }\n};\n\nconst validLanguage = {\n    languageTag: {\n        type: \"string\",\n        mandatory: true,\n        restriction: (tag) => {\n            return tag.match(bcp47RegExp);\n        },\n        message: \"the language tag must follow the BCP 47 specification (see https://tools.ieft.org/html/bcp47)\"\n    },\n    delimiters: {\n        type: \"object\",\n        children: {\n            thousands: \"string\",\n            decimal: \"string\",\n            thousandsSize: \"number\"\n        },\n        mandatory: true\n    },\n    abbreviations: validMandatoryAbbreviations,\n    spaceSeparated: \"boolean\",\n    spaceSeparatedCurrency: \"boolean\",\n    ordinal: {\n        type: \"function\",\n        mandatory: true\n    },\n    bytes: {\n        type: \"object\",\n        children: {\n            binarySuffixes: \"object\",\n            decimalSuffixes: \"object\"\n        }\n    },\n    currency: {\n        type: \"object\",\n        children: {\n            symbol: \"string\",\n            position: \"string\",\n            code: \"string\"\n        },\n        mandatory: true\n    },\n    defaults: \"format\",\n    ordinalFormat: \"format\",\n    byteFormat: \"format\",\n    percentageFormat: \"format\",\n    currencyFormat: \"format\",\n    timeDefaults: \"format\",\n    formats: {\n        type: \"object\",\n        children: {\n            fourDigits: {\n                type: \"format\",\n                mandatory: true\n            },\n            fullWithTwoDecimals: {\n                type: \"format\",\n                mandatory: true\n            },\n            fullWithTwoDecimalsNoCurrency: {\n                type: \"format\",\n                mandatory: true\n            },\n            fullWithNoDecimals: {\n                type: \"format\",\n                mandatory: true\n            }\n        }\n    }\n};\n\n/**\n * Check the validity of the provided input and format.\n * The check is NOT lazy.\n *\n * @param {string|number|Numbro} input - input to check\n * @param {NumbroFormat} format - format to check\n * @return {boolean} True when everything is correct\n */\nfunction validate(input, format) {\n    let validInput = validateInput(input);\n    let isFormatValid = validateFormat(format);\n\n    return validInput && isFormatValid;\n}\n\n/**\n * Check the validity of the numbro input.\n *\n * @param {string|number|Numbro} input - input to check\n * @return {boolean} True when everything is correct\n */\nfunction validateInput(input) {\n    let value = unformatter.unformat(input);\n\n    return value !== undefined;\n}\n\n/**\n * Check the validity of the provided format TOVALIDATE against SPEC.\n *\n * @param {NumbroFormat} toValidate - format to check\n * @param {*} spec - specification against which to check\n * @param {string} prefix - prefix use for error messages\n * @param {boolean} skipMandatoryCheck - `true` when the check for mandatory key must be skipped\n * @return {boolean} True when everything is correct\n */\nfunction validateSpec(toValidate, spec, prefix, skipMandatoryCheck = false) {\n    let results = Object.keys(toValidate).map((key) => {\n        if (!spec[key]) {\n            console.error(`${prefix} Invalid key: ${key}`); // eslint-disable-line no-console\n            return false;\n        }\n\n        let value = toValidate[key];\n        let data = spec[key];\n\n        if (typeof data === \"string\") {\n            data = {type: data};\n        }\n\n        if (data.type === \"format\") { // all formats are partial (a.k.a will be merged with some default values) thus no need to check mandatory values\n            let valid = validateSpec(value, validFormat, `[Validate ${key}]`, true);\n\n            if (!valid) {\n                return false;\n            }\n        } else if (typeof value !== data.type) {\n            console.error(`${prefix} ${key} type mismatched: \"${data.type}\" expected, \"${typeof value}\" provided`); // eslint-disable-line no-console\n            return false;\n        }\n\n        if (data.restrictions && data.restrictions.length) {\n            let length = data.restrictions.length;\n            for (let i = 0; i < length; i++) {\n                let {restriction, message} = data.restrictions[i];\n                if (!restriction(value, toValidate)) {\n                    console.error(`${prefix} ${key} invalid value: ${message}`); // eslint-disable-line no-console\n                    return false;\n                }\n            }\n        }\n\n        if (data.restriction && !data.restriction(value, toValidate)) {\n            console.error(`${prefix} ${key} invalid value: ${data.message}`); // eslint-disable-line no-console\n            return false;\n        }\n\n        if (data.validValues && data.validValues.indexOf(value) === -1) {\n            console.error(`${prefix} ${key} invalid value: must be among ${JSON.stringify(data.validValues)}, \"${value}\" provided`); // eslint-disable-line no-console\n            return false;\n        }\n\n        if (data.children) {\n            let valid = validateSpec(value, data.children, `[Validate ${key}]`);\n\n            if (!valid) {\n                return false;\n            }\n        }\n\n        return true;\n    });\n\n    if (!skipMandatoryCheck) {\n        results.push(...Object.keys(spec).map((key) => {\n            let data = spec[key];\n            if (typeof data === \"string\") {\n                data = {type: data};\n            }\n\n            if (data.mandatory) {\n                let mandatory = data.mandatory;\n                if (typeof mandatory === \"function\") {\n                    mandatory = mandatory(toValidate);\n                }\n\n                if (mandatory && toValidate[key] === undefined) {\n                    console.error(`${prefix} Missing mandatory key \"${key}\"`); // eslint-disable-line no-console\n                    return false;\n                }\n            }\n\n            return true;\n        }));\n    }\n\n    return results.reduce((acc, current) => {\n        return acc && current;\n    }, true);\n}\n\n/**\n * Check the provided FORMAT.\n *\n * @param {NumbroFormat} format - format to check\n * @return {boolean}\n */\nfunction validateFormat(format) {\n    return validateSpec(format, validFormat, \"[Validate format]\");\n}\n\n/**\n * Check the provided LANGUAGE.\n *\n * @param {NumbroLanguage} language - language to check\n * @return {boolean}\n */\nfunction validateLanguage(language) {\n    return validateSpec(language, validLanguage, \"[Validate language]\");\n}\n\nmodule.exports = {\n    validate,\n    validateFormat,\n    validateInput,\n    validateLanguage\n};\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { Tooltip } from \"@patternfly/react-core/dist/esm/components/Tooltip/Tooltip.js\";\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30; // let's count that every month has 30 days\n\nvar year = day * 365;\n\nvar formatTime = function formatTime(number, unit) {\n  return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\");\n};\n\nvar relativeTimeTable = [{\n  rightBound: Infinity,\n  description: function description(date) {\n    return formatTime(Math.round(date / year), 'year');\n  }\n}, {\n  rightBound: year,\n  description: function description(date) {\n    return formatTime(Math.round(date / month), 'month');\n  }\n}, {\n  rightBound: month,\n  description: function description(date) {\n    return formatTime(Math.round(date / day), 'day');\n  }\n}, {\n  rightBound: day,\n  description: function description(date) {\n    return formatTime(Math.round(date / hour), 'hour');\n  }\n}, {\n  rightBound: hour,\n  description: function description(date) {\n    return formatTime(Math.round(date / minute), 'minute');\n  }\n}, {\n  rightBound: minute,\n  description: function description() {\n    return 'Just now';\n  }\n}];\n\nvar _exact = function exact(value) {\n  return value.toUTCString().split(',')[1].slice(0, -7).trim();\n};\n\nexport var addTooltip = function addTooltip(date, element, tooltipProps) {\n  var extraTitle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({}, tooltipProps, {\n    content: /*#__PURE__*/React.createElement(\"div\", null, extraTitle, date)\n  }), element);\n};\nexport var dateStringByType = function dateStringByType(type) {\n  return {\n    exact: function exact(date) {\n      return _exact(date) + ' UTC';\n    },\n    onlyDate: function onlyDate(date) {\n      return _exact(date).slice(0, -6);\n    },\n    relative: function relative(date) {\n      return relativeTimeTable.reduce(function (acc, i) {\n        return i.rightBound > Date.now() - date ? i.description(Date.now() - date) : acc;\n      }, _exact(date));\n    },\n    invalid: function invalid() {\n      return 'Invalid date';\n    }\n  }[type];\n};\nexport var dateByType = function dateByType(type, tooltipProps, extraTitle) {\n  return {\n    exact: function exact(date) {\n      return dateStringByType(type)(date);\n    },\n    onlyDate: function onlyDate(date) {\n      return dateStringByType(type)(date);\n    },\n    relative: function relative(date) {\n      return addTooltip(dateStringByType('exact')(date), /*#__PURE__*/React.createElement(\"span\", null, dateStringByType(type)(date)), tooltipProps, extraTitle);\n    },\n    invalid: function invalid() {\n      return 'Invalid date';\n    }\n  }[type];\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { dateByType } from './helper';\n/**\n * A component that formats date to a unified CRC format.\n * Relative date format adds a tooltip with a full date string.\n */\n\nexport default function DateFormat(_ref) {\n  var date = _ref.date,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'relative' : _ref$type,\n      extraTitle = _ref.extraTitle,\n      _ref$tooltipProps = _ref.tooltipProps,\n      tooltipProps = _ref$tooltipProps === void 0 ? {} : _ref$tooltipProps;\n  var dateObj = date instanceof Date ? date : new Date(date); // Prevent treating null as valid. (new Date(null) == new Date(0) returns 1970 Jan 1)\n\n  var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n  var dateType = invalid ? 'invalid' : type;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dateByType(dateType, tooltipProps, extraTitle)(dateObj));\n}\nDateFormat.propTypes = {\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string, PropTypes.number]),\n\n  /**\n   * Output format of the date\n   */\n  type: PropTypes.oneOf(['exact', 'onlyDate', 'relative']),\n\n  /**\n   * Additional text in the tooltip\n   */\n  extraTitle: PropTypes.node,\n\n  /**\n   * <a target=\"_blank\" href=\"https://www.patternfly.org/v4/components/tooltip/#props\">PF Tooltip props object</a>\n   */\n  tooltipProps: PropTypes.object\n};"],"sourceRoot":""}
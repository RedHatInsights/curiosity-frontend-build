{"version":3,"sources":["common/helpers.js","redux/common/reduxHelpers.js","redux/middleware/index.js","redux/types/rhelTypes.js","redux/types/userTypes.js","redux/types/index.js","types/rhelApiTypes.js","common/dateHelpers.js","redux/reducers/rhelGraphReducer.js","redux/reducers/rhelViewReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store.js","services/config.js","services/rhelServices.js","redux/actions/rhelActions.js","services/userServices.js","redux/actions/userActions.js","redux/actions/index.js","redux/selectors/graphCardSelectors.js","redux/selectors/index.js","redux/index.js","components/select/select.js","components/i18n/i18n.js","common/graphHelpers.js","components/rhelGraphCard/rhelGraphCardTypes.js","components/chartArea/chartArea.js","components/rhelGraphCard/rhelGraphCard.js","components/rhelView/rhelView.js","components/router/routerTypes.js","components/router/router.js","components/pageLayout/pageLayout.js","components/authentication/authentication.js","components/app.js","index.js"],"names":["helpers","generateId","prefix","Math","ceil","random","noop","Function","prototype","noopPromise","Promise","resolve","noopTranslate","key","value","DEV_MODE","process","PROD_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISPLAY_NAME","UI_LOGGER_ID","UI_NAME","UI_PATH","UI_VERSION","window","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","getMessageFromResults","results","filterField","status","_get","statusResponse","statusText","messageResponse","message","detailResponse","detail","serverStatus","undefined","getMessages","messageObject","filterKey","obj","_map","next","Array","isArray","_join","getStatusFromResults","setStateProp","prop","data","options","state","initialState","reset","reduxHelpers","types","action","type","expandedTypes","forEach","val","subVal","push","ref","filter","RegExp","test","whichType","baseState","error","errorMessage","fulfilled","metaData","meta","metaId","id","metaQuery","query","pending","update","setId","payload","errorStatus","date","headers","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","promiseMiddleware","notificationsMiddleware","GET_GRAPH_CAPACITY_RHEL","GET_GRAPH_REPORT_RHEL","SET_GRAPH_RHEL_GRANULARITY","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","rhel","rhelTypes","user","userTypes","rhelApiTypes","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","DATE","PHYSICAL_SOCKETS","HYPERVISOR_SOCKETS","INFINITE","RHSM_API_RESPONSE_CAPACITY_META","RHSM_API_RESPONSE_CAPACITY_META_TYPES","COUNT","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","CORES","INSTANCES","SOCKETS","RHSM_API_RESPONSE_PRODUCTS_META","RHSM_API_RESPONSE_PRODUCTS_META_TYPES","RHSM_API_QUERY_GRANULARITY","RHSM_API_QUERY_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_QUERY_LIMIT","RHSM_API_QUERY_OFFSET","RHSM_API_QUERY_START_DATE","RHSM_API_QUERY_END_DATE","getCurrentDate","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","subtract","measurement","startDate","moment","utc","startOf","toDate","endDate","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","GRANULARITY_TYPES","dateHelpers","getRangedDateTime","granularity","capacity","component","report","rhelGraphReducer","graphGranularity","view","rhelViewReducer","session","authorized","locale","userReducer","username","reducers","notifications","rhelGraph","rhelView","reduxReducers","combineReducers","store","createStore","applyMiddleware","serviceConfig","passedConfig","timeout","rhelServices","params","axios","url","getGraphReportsRhel","dispatch","rejected","variant","title","description","getGraphCapacityRhel","getLocaleFromCookie","Cookies","get","replace","LocaleCode","getLanguageName","userServices","returnMethod","insights","chrome","auth","getUser","e","console","warn","defaultLocale","authorizeUser","userService","getLocale","reduxActions","rhelActions","userActions","rhelGraphCardCache","rhelGraphCardSelector","createSelector","reportGranularity","capacityGranularity","cachedGranularity","initialLoad","updatedData","graphData","usage","reduxSelectors","rhelGraphCard","makeRhelGraphCard","connectTranslate","mapStateToProps","mapDispatchToProps","connect","withTranslation","connectRouter","withRouter","Select","isExpanded","selected","onSelect","event","titleSelection","props","name","updatedOptions","optionsIndex","findIndex","option","SelectVariant","single","index","updateSelected","opt","map","setState","mockUpdatedOptions","_cloneDeep","mockTarget","selectedIndex","mockEvent","target","currentTarget","persist","onToggle","expanded","this","formatOptions","prevProps","_isEqual","selectedOptions","_isPlainObject","Object","keys","activateOptions","convertedOption","text","textContent","label","includes","find","ariaLabel","className","isDisabled","placeholder","pfSelectOptions","length","aria-label","selections","placeholderText","btoa","data-value","data-title","React","Component","defaultProps","translate","str","i18next","t","I18n","i18nInit","fallbackLng","loadPath","use","XHR","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","children","Fragment","getChartXAxisLabelIncrement","getGraphLabels","labels","tooltipLabel","previousLabel","getGranularityDateType","getLabel","previousData","formattedDate","previousCount","updatedLabel","getThresholdLabel","yValue","tooltipThresholdLabel","fillFormatChartData","tooltipLabelNoData","granularityType","granularityTick","endDateStartDateDiff","diff","chartData","chartDataThresholds","isThreshold","previousYear","i","momentDate","add","stringDate","toISOString","year","parseInt","checkTick","isNewYear","formattedDateTooltip","format","yAxis","yAxisThreshold","dataThreshold","labelData","chartDataThresholdsItem","x","y","tooltip","chartDataItem","xAxisLabel","graphHelpers","tick","numbro","average","mantissa","optionalMantissa","dataFacet","dataThresholdFacet","formattedData","Number","dataThresholdItem","stringThresholdDate","isSame","checkThresholdDate","chartXAxisLabelIncrement","rhelGraphCardTypes","ChartArea","chartWidth","containerRef","createRef","onResizeContainer","containerElement","current","clientWidth","addEventListener","removeEventListener","xAxisLabelIncrement","yAxisLabelIncrement","xAxisTickFormat","yAxisTickFormat","dataSets","xAxisProps","yAxisProps","xAxisDataSet","yAxisDataSet","dataSet","xAxisLabelUseDataSet","yAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","tickValue","yAxisLabel","yAxisTickValues","xAxisFixLabelOverlap","yAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickValues","tickFormat","isXAxisTicks","isYAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","threshold","floored","pow","floor","log10","maxY","chartDomain","legendData","dataLegendLabel","legendDataSettings","symbol","dataColor","fill","thresholdLegendLabel","legendThresholdSettings","thresholdColor","legendOrientation","legendPosition","legendComponent","ChartLegend","borderPadding","top","padding","getChartTicks","getChartDomain","chartProps","getChartLegend","VictoryVoronoiCursorContainer","createContainer","labelComponent","ChartTooltip","pointerLength","centerOffset","flyoutWidth","containerComponent","constrainToVisibleArea","cursorDimension","voronoiDimension","voronoiPadding","mouseFollowTooltips","datum","Chart","animate","duration","width","ChartAxis","ChartThreshold","thresholdAnimate","interpolation","thresholdInterpolation","themeColor","style","thresholdStyle","ChartStack","dataAnimate","dataInterpolation","dataStyle","height","bottom","left","right","RhelGraphCard","onUpdateGraphData","submit","onLoad","ChartThemeColor","green","getDateMenuOptions","Card","CardHead","CardActions","CardBody","size","SkeletonSize","xs","sm","md","lg","renderChart","ConnectedRhelGraphCard","getRhelGraphCard","RhelView","PageSection","ConnectedRhelView","baseName","pathName","pathPrefix","path","split","shift","pathSlice","slice","join","dynamicBaseName","location","pathname","routes","to","redirect","exact","disabled","Router","routesType","redirectRoot","renderRoutes","item","hasParameters","PageLayout","Page","noPadding","Authentication","appNav","buildNav","buildNavigation","currentPath","active","appName","history","identifyApp","navigation","on","navId","listen","EmptyState","EmptyStateVariant","full","EmptyStateIcon","icon","BinocularsIcon","EmptyStateBody","BanIcon","appRoutes","ConnectedAuthentication","App","ConnectedApp","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.73027939.chunk.js","sourcesContent":["const generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\nconst noop = Function.prototype;\n\nconst noopPromise = Promise.resolve({});\n\nconst noopTranslate = (key, value) => value || `t('${key}')`;\n\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\nconst helpers = {\n  generateId,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISPLAY_NAME,\n  UI_LOGGER_ID,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION\n};\n\nwindow[UI_LOGGER_ID] = { ...helpers };\n\nexport { helpers as default, helpers };\n","import _get from 'lodash/get';\nimport _join from 'lodash/join';\nimport _map from 'lodash/map';\n\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\nconst getMessageFromResults = (results, filterField = null) => {\n  const status = _get(results, 'response.status', results.status);\n  const statusResponse = _get(results, 'response.statusText', results.statusText);\n  const messageResponse = _get(results, 'response.data', results.message);\n  const detailResponse = _get(results, 'response.data', results.detail);\n\n  let serverStatus = '';\n\n  if (!messageResponse && !detailResponse) {\n    if (status < 400) {\n      return statusResponse;\n    }\n\n    if (status >= 500 || status === undefined) {\n      return `${status || ''} Server is currently unable to handle this request.`;\n    }\n  }\n\n  if (status >= 500 || status === undefined) {\n    serverStatus = status ? `${status} ` : '';\n  }\n\n  if (typeof messageResponse === 'string') {\n    return `${serverStatus}${messageResponse}`;\n  }\n\n  if (typeof detailResponse === 'string') {\n    return `${serverStatus}${detailResponse}`;\n  }\n\n  const getMessages = (messageObject, filterKey) => {\n    const obj = filterKey ? messageObject[filterKey] : messageObject;\n\n    return _map(\n      obj,\n      next => {\n        if (Array.isArray(next)) {\n          return getMessages(next);\n        }\n\n        return next;\n      },\n      null\n    );\n  };\n\n  return `${serverStatus}${_join(getMessages(messageResponse || detailResponse, filterField), '\\n')}`;\n};\n\nconst getStatusFromResults = results => {\n  let status = _get(results, 'response.status', results.status);\n\n  if (status === undefined) {\n    status = 0;\n  }\n\n  return status;\n};\n\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (process.env.REACT_APP_ENV === 'development' && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (process.env.REACT_APP_ENV === 'development' && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    metaData: action.meta && action.meta.data,\n    metaId: action.meta && action.meta.id,\n    metaQuery: action.meta && action.meta.query,\n    pending: false,\n    update: false\n  };\n\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          error: true,\n          errorMessage: getMessageFromResults(action.payload),\n          errorStatus: getStatusFromResults(action.payload)\n        }),\n        {\n          state\n        }\n      );\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: action.payload.headers && action.payload.headers.date,\n          data: (action.payload && action.payload.data) || {},\n          fulfilled: true\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  generatedPromiseActionReducer,\n  getMessageFromResults,\n  getStatusFromResults,\n  setStateProp\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\nconst notificationsOptions = {\n  dispatchDefaultFailure: true, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 5000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\nconst reduxMiddleware = [thunkMiddleware, promiseMiddleware, notificationsMiddleware(notificationsOptions)];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  thunkMiddleware\n};\n","const GET_GRAPH_CAPACITY_RHEL = 'GET_GRAPH_CAPACITY_RHEL';\nconst GET_GRAPH_REPORT_RHEL = 'GET_GRAPH_REPORT_RHEL';\nconst SET_GRAPH_RHEL_GRANULARITY = 'SET_GRAPH_RHEL_GRANULARITY';\n\nexport { GET_GRAPH_CAPACITY_RHEL, GET_GRAPH_REPORT_RHEL, SET_GRAPH_RHEL_GRANULARITY };\n","const USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\nexport { USER_AUTH, USER_LOCALE, USER_LOGOUT };\n","import * as rhelTypes from './rhelTypes';\nimport * as userTypes from './userTypes';\n\nconst reduxTypes = {\n  rhel: rhelTypes,\n  user: userTypes\n};\n\nexport { reduxTypes as default, reduxTypes, rhelTypes, userTypes };\n","const RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  DATE: 'date',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  INFINITE: 'has_infinite_quantity'\n};\nconst RHSM_API_RESPONSE_CAPACITY_META = 'meta';\nconst RHSM_API_RESPONSE_CAPACITY_META_TYPES = {\n  COUNT: 'count'\n};\n\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CORES: 'cores',\n  DATE: 'date',\n  INSTANCES: 'instance_count',\n  SOCKETS: 'sockets'\n};\nconst RHSM_API_RESPONSE_PRODUCTS_META = 'meta';\nconst RHSM_API_RESPONSE_PRODUCTS_META_TYPES = {\n  COUNT: 'count'\n};\n\nconst RHSM_API_QUERY_GRANULARITY = 'granularity';\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\nconst RHSM_API_QUERY_LIMIT = 'limit';\nconst RHSM_API_QUERY_OFFSET = 'offset';\nconst RHSM_API_QUERY_START_DATE = 'beginning';\nconst RHSM_API_QUERY_END_DATE = 'ending';\n\nconst rhelApiTypes = {\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n\nexport {\n  rhelApiTypes as default,\n  rhelApiTypes,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { rhelApiTypes } from '../types/rhelApiTypes';\n\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\nconst setRangedDateTime = ({ date, subtract, measurement }) => ({\n  startDate: moment\n    .utc(date)\n    .startOf(measurement)\n    .subtract(subtract, measurement)\n    .toDate(),\n  endDate: moment\n    .utc(date)\n    .startOf(measurement)\n    .toDate()\n});\n\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\n\n/**\n * Return a range of time based on granularity.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst GRANULARITY_TYPES = rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES;\n\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime\n};\n","import { reduxTypes, rhelTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { dateHelpers } from '../../common/dateHelpers';\n\nconst initialState = {\n  capacity: {},\n  component: {},\n  report: {}\n};\n\nconst rhelGraphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.rhel.SET_GRAPH_RHEL_GRANULARITY:\n      return reduxHelpers.setStateProp(\n        'component',\n        {\n          graphGranularity: action.graphGranularity,\n          ...dateHelpers.getRangedDateTime(action.graphGranularity)\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'capacity', type: rhelTypes.GET_GRAPH_CAPACITY_RHEL },\n          { ref: 'report', type: rhelTypes.GET_GRAPH_REPORT_RHEL }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nrhelGraphReducer.initialState = initialState;\n\nexport { rhelGraphReducer as default, initialState, rhelGraphReducer };\n","const initialState = {\n  view: {\n    data: [],\n    error: false,\n    errorStatus: null,\n    errorMessage: null,\n    pending: false,\n    fulfilled: false\n  }\n};\n\nconst rhelViewReducer = (state = initialState) => state;\n\nrhelViewReducer.initialState = initialState;\n\nexport { rhelViewReducer as default, initialState, rhelViewReducer };\n","import { userTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\nconst initialState = {\n  session: {\n    error: false,\n    errorMessage: null,\n    errorStatus: null,\n    pending: false,\n    fulfilled: false,\n    authorized: false,\n    locale: null\n  }\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.REJECTED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          error: action.error,\n          errorMessage: reduxHelpers.getMessageFromResults(action.payload),\n          errorStatus: reduxHelpers.getStatusFromResults(action.payload),\n          locale: state.session.locale\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.PENDING_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: state.session.locale,\n          pending: true\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          authorized: true,\n          fulfilled: true,\n          locale: state.session.locale,\n          username: action.username\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport rhelGraphReducer from './rhelGraphReducer';\nimport rhelViewReducer from './rhelViewReducer';\nimport userReducer from './userReducer';\n\nconst reducers = {\n  notifications,\n  rhelGraph: rhelGraphReducer,\n  rhelView: rhelViewReducer,\n  user: userReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport { reduxReducers as default, reduxReducers, rhelGraphReducer, rhelViewReducer, userReducer };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","const serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\nexport { serviceConfig as default, serviceConfig };\n","import axios from 'axios';\nimport serviceConfig from './config';\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {ForceStatus} 200\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {Enum} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {Enum} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {Object} links\n * @apiSuccess {Object} meta\n * @apiSuccess {Enum} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {Enum} meta.product\n * - RHEL\n * @apiSuccess {Number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"instance_count\": 10,\n *           \"cores\": 20,\n *           \"sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"instance_count\": 12,\n *           \"cores\": 24,\n *           \"sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"instance_count\": 14,\n *           \"cores\": 28,\n *           \"sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"instance_count\": 18,\n *           \"cores\": 36,\n *           \"sockets\": 36\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"instance_count\": 20,\n *           \"cores\": 40,\n *           \"sockets\": 40\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"instance_count\": 22,\n *           \"cores\": 44,\n *           \"sockets\": 44\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"sockets\": 48\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"instance_count\": 26,\n *           \"cores\": 52,\n *           \"sockets\": 52\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"instance_count\": 28,\n *           \"cores\": 56,\n *           \"sockets\": 56\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"instance_count\": 30,\n *           \"cores\": 60,\n *           \"sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-31T00:00:00Z\",\n *           \"instance_count\": 32,\n *           \"cores\": 64,\n *           \"sockets\": 64\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-05-26T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-02T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-09T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-16T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-23T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-30T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"sockets\": 12\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-01-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-02-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-03-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-04-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-05-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"sockets\": 48\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} QUARTERLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-01-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"sockets\": 48\n *         },\n *         {\n *           \"date\": \"2018-04-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2018-07-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2018-10-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"sockets\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 4,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"quarterly\"\n *       }\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getGraphReportsRhel = (params = {}) =>\n  axios(\n    serviceConfig({\n      url: process.env.REACT_APP_SERVICES_RHSM_REPORT_RHEL,\n      params\n    })\n  );\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 10,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 5,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 10,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 5,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 10,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 5,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 10,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 5,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 10,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 5,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 10,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 5,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 10,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 5,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 10,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 5,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getGraphCapacityRhel = (params = {}) =>\n  axios(\n    serviceConfig({\n      url: process.env.REACT_APP_SERVICES_RHSM_CAPACITY_RHEL,\n      params\n    })\n  );\n\nconst rhelServices = { getGraphCapacityRhel, getGraphReportsRhel };\n\nexport { rhelServices as default, rhelServices, getGraphCapacityRhel, getGraphReportsRhel };\n","import { rhelTypes } from '../types';\nimport rhelServices from '../../services/rhelServices';\n\nconst getGraphReportsRhel = (query = {}) => dispatch =>\n  dispatch({\n    type: rhelTypes.GET_GRAPH_REPORT_RHEL,\n    payload: rhelServices.getGraphReportsRhel(query),\n    meta: {\n      query,\n      notifications: {\n        rejected: {\n          variant: 'info',\n          title: 'Reporting connection has failed',\n          description: 'Product ID: Red Hat Enterprise Linux'\n        }\n      }\n    }\n  });\n\nconst getGraphCapacityRhel = (query = {}) => dispatch =>\n  dispatch({\n    type: rhelTypes.GET_GRAPH_CAPACITY_RHEL,\n    payload: rhelServices.getGraphCapacityRhel(query),\n    meta: {\n      query,\n      notifications: {\n        rejected: {\n          variant: 'info',\n          title: 'Capacity connection has failed',\n          description: 'Product ID: Red Hat Enterprise Linux'\n        }\n      }\n    }\n  });\n\nexport { getGraphCapacityRhel, getGraphReportsRhel };\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport axios from 'axios';\nimport serviceConfig from './config';\nimport { helpers } from '../common/helpers';\n\nconst authorizeUser = () => {\n  let returnMethod = helpers.noopPromise;\n\n  try {\n    if (!helpers.DEV_MODE) {\n      returnMethod = window.insights.chrome.auth.getUser;\n    }\n  } catch (e) {\n    if (!helpers.TEST_MODE) {\n      console.warn(`{ getUser } = insights.chrome.auth: ${e.message}`);\n    }\n  }\n\n  return returnMethod;\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *       \"version\": \"0.0.0\",\n *       \"gitDescription\": \"lorem ipsum\",\n *       \"artifact\": \"dolor sit\",\n *       \"name\": \"lorem\",\n *       \"group\": \"ipsum\",\n *       \"gitHash\": \"0000000000000000\"\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\nconst getApiVersion = () =>\n  axios(\n    serviceConfig({\n      url: process.env.REACT_APP_SERVICES_RHSM_VERSION\n    })\n  );\n\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\nconst getLocale = () => {\n  const defaultLocale = {\n    value: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n    key: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC\n  };\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\nconst userServices = { authorizeUser, getApiVersion, getLocale, logoutUser };\n\nexport { userServices as default, userServices, authorizeUser, getApiVersion, getLocale, logoutUser };\n","import { userTypes } from '../types';\nimport userService from '../../services/userServices';\n\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userService.authorizeUser()\n  });\n\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userService.getLocale()\n});\n\nexport { authorizeUser, getLocale };\n","import * as rhelActions from './rhelActions';\nimport * as userActions from './userActions';\n\nconst actions = {\n  rhel: rhelActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, rhelActions, userActions };\n","import { createSelector } from 'reselect';\nimport _get from 'lodash/get';\nimport { rhelApiTypes } from '../../types/rhelApiTypes';\n\nconst rhelGraphCardCache = {};\n\nconst rhelGraph = state => state.rhelGraph;\n\nconst rhelGraphCardSelector = createSelector(\n  [rhelGraph],\n  rhelGraphReducer => {\n    const { capacity = {}, report = {} } = rhelGraphReducer || {};\n    const reportGranularity = _get(report, ['metaQuery', rhelApiTypes.RHSM_API_QUERY_GRANULARITY]);\n    const capacityGranularity = _get(capacity, ['metaQuery', rhelApiTypes.RHSM_API_QUERY_GRANULARITY]);\n    const granularity = reportGranularity || capacityGranularity || null;\n    const cachedGranularity = (granularity && rhelGraphCardCache[granularity]) || {};\n    const initialLoad = typeof cachedGranularity.initialLoad === 'boolean' ? cachedGranularity.initialLoad : true;\n\n    const updatedData = {\n      error: false,\n      fulfilled: false,\n      pending: false,\n      initialLoad,\n      graphData: {\n        usage: [],\n        capacity: []\n      },\n      ...cachedGranularity\n    };\n\n    if (granularity === null) {\n      updatedData.error = true;\n      return updatedData;\n    }\n\n    if (initialLoad) {\n      updatedData.error = report.error || capacity.error || false;\n      updatedData.pending = report.pending || capacity.pending || false;\n    }\n\n    if (capacity.fulfilled && report.fulfilled && granularity) {\n      updatedData.graphData.usage = _get(report, ['data', rhelApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA], []);\n      updatedData.graphData.capacity = _get(capacity, ['data', rhelApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA], []);\n      updatedData.initialLoad = false;\n      updatedData.fulfilled = true;\n\n      if (reportGranularity === capacityGranularity) {\n        rhelGraphCardCache[granularity] = { ...updatedData };\n      }\n    }\n\n    return updatedData;\n  }\n);\n\nconst makeRhelGraphCardSelector = () => rhelGraphCardSelector;\n\nconst graphCardSelectors = {\n  rhelGraphCard: rhelGraphCardSelector,\n  makeRhelGraphCard: makeRhelGraphCardSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, rhelGraphCardSelector, makeRhelGraphCardSelector };\n","import graphCardSelectors from './graphCardSelectors';\n\nconst reduxSelectors = {\n  graphCard: graphCardSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\nimport { helpers } from '../common/helpers';\n\nconst connectTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )((!helpers.TEST_MODE && withTranslation()(component)) || component);\n\nconst connectRouterTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connectTranslate(mapStateToProps, mapDispatchToProps)(component));\n\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(\n    connect(\n      mapStateToProps,\n      mapDispatchToProps\n    )(component)\n  );\n\nexport {\n  connect,\n  connectRouter,\n  connectRouterTranslate,\n  connectTranslate,\n  reduxActions,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  store\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options } = this.props;\n\n    if (!_isEqual(prevProps.options, options)) {\n      this.formatOptions();\n    }\n  }\n\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected = activateOptions.includes(convertedOption.value);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, placeholder, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isExpanded={isExpanded}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(option.title)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  placeholder: PropTypes.string,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  selectedOptions: null,\n  placeholder: 'Select option',\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\nconst translate = (str, placeholder = null) =>\n  (!helpers.TEST_MODE && i18next.t(str, placeholder)) || helpers.noopTranslate(str, placeholder);\n\n/**\n * ToDo: reevaluate the \"I18nextProvider\" on package update.\n * Appears to have timing issues, and subsequent firings of the\n * ajax/xhr setup. Reverting it to just a function call that populates behind\n * the scenes appears more predictable.\n */\nclass I18n extends React.Component {\n  componentDidMount() {\n    this.i18nInit();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { locale } = this.props;\n\n    if (locale !== prevProps.locale) {\n      this.i18nInit();\n    }\n  }\n\n  i18nInit() {\n    const { fallbackLng, loadPath, locale } = this.props;\n\n    i18next\n      .use(XHR)\n      .use(initReactI18next)\n      .init({\n        backend: {\n          loadPath\n        },\n        fallbackLng,\n        lng: locale,\n        debug: !helpers.PROD_MODE,\n        ns: ['default'],\n        defaultNS: 'default',\n        react: {\n          useSuspense: false\n        }\n      });\n  }\n\n  render() {\n    const { children } = this.props;\n\n    return <React.Fragment>{children}</React.Fragment>;\n  }\n}\n\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, translate };\n","import moment from 'moment';\nimport numbro from 'numbro';\nimport { rhelApiTypes } from '../types/rhelApiTypes';\nimport { translate } from '../components/i18n/i18n';\n\nconst GRANULARITY_TYPES = rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES;\n\n/**\n * Chart Date Format (used in axis and tooltips)\n */\nconst chartDateDayFormatLong = 'MMMM D';\nconst chartDateDayFormatYearLong = 'MMMM D YYYY';\nconst chartDateDayFormatShort = 'MMM D';\nconst chartDateDayFormatYearShort = 'MMM D YYYY';\n\nconst chartDateMonthFormatLong = 'MMMM';\nconst chartDateMonthFormatYearLong = 'MMMM YYYY';\nconst chartDateMonthFormatShort = 'MMM';\nconst chartDateMonthFormatYearShort = 'MMM YYYY';\n\nconst chartDateQuarterFormatLong = 'MMMM';\nconst chartDateQuarterFormatYearLong = 'MMMM YYYY';\nconst chartDateQuarterFormatShort = 'MMM';\nconst chartDateQuarterFormatYearShort = 'MMM YYYY';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return translated labels based on granularity.\n *\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {string} tooltipLabel\n * @returns {Object}\n */\nconst getGraphLabels = ({ granularity, tooltipLabel }) => {\n  const labels = {\n    label: tooltipLabel\n  };\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      labels.previousLabel = translate('curiosity-graph.tooltipPreviousLabelWeekly');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      labels.previousLabel = translate('curiosity-graph.tooltipPreviousLabelMonthly');\n      break;\n    case GRANULARITY_TYPES.QUARTERLY:\n      labels.previousLabel = translate('curiosity-graph.tooltipPreviousLabelQuarterly');\n      break;\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      labels.previousLabel = translate('curiosity-graph.tooltipPreviousLabelDaily');\n      break;\n  }\n\n  return labels;\n};\n\n/**\n * Return a time allotment based on granularity\n *\n * @param {string} granularity enum based on rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getGranularityDateType = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return 'weeks';\n    case GRANULARITY_TYPES.MONTHLY:\n      return 'months';\n    case GRANULARITY_TYPES.QUARTERLY:\n      return 'quarters';\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return 'days';\n  }\n};\n\n/**\n * Apply label formatting\n *\n * @param {number} data\n * @param {number} previousData\n * @param {string} formattedDate\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {string} tooltipLabel\n * @returns {string}\n */\nconst getLabel = ({ data, previousData, formattedDate, granularity, tooltipLabel }) => {\n  const { label, previousLabel } = getGraphLabels({ granularity, tooltipLabel });\n  const previousCount = data - previousData;\n  const updatedLabel = `${data} ${label} ${formattedDate}`;\n\n  if (!previousData || previousCount === 0) {\n    return updatedLabel;\n  }\n\n  return `${updatedLabel}\\n ${previousCount > -1 ? '+' : ''}${previousCount} ${previousLabel}`;\n};\n\n/**\n * Apply Threshold Label formatting\n * @param {number} yValue the yaxis value\n * @param {string} tooltipThresholdLabel the threshold label\n */\nconst getThresholdLabel = ({ yValue, tooltipThresholdLabel }) => {\n  return `${tooltipThresholdLabel}: ${yValue}`;\n};\n\n// ToDo: when the API returns filler date values \"fillFormatChartData\" should be updated\n/**\n * Fill missing dates, and format graph data\n *\n * @param {Array} data\n * @param {Date} endDate\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {Date} startDate\n * @param {string} tooltipLabel\n * @param {string} tooltipLabelNoData\n * @param {string} tooltipThresholdLabel\n * @returns {Object}\n */\nconst fillFormatChartData = ({\n  data,\n  endDate,\n  granularity,\n  startDate,\n  tooltipLabel,\n  tooltipLabelNoData,\n  tooltipThresholdLabel\n}) => {\n  const granularityType = getGranularityDateType(granularity);\n  const granularityTick = getChartXAxisLabelIncrement(granularity);\n  const endDateStartDateDiff = moment(endDate).diff(startDate, granularityType);\n  const chartData = [];\n  const chartDataThresholds = [];\n\n  let isThreshold = false;\n  let previousData = null;\n  let previousYear = null;\n\n  for (let i = 0; i <= endDateStartDateDiff; i++) {\n    const momentDate = moment\n      .utc(startDate)\n      .add(i, granularityType)\n      .startOf(granularityType);\n    const stringDate = momentDate.toISOString();\n    const year = parseInt(momentDate.year(), 10);\n\n    const checkTick = i % granularityTick === 0;\n    const isNewYear = i !== 0 && checkTick && year !== previousYear;\n    let formattedDate;\n    let formattedDateTooltip;\n\n    if (granularityType === 'quarters') {\n      formattedDate = isNewYear\n        ? momentDate.format(chartDateQuarterFormatYearShort)\n        : momentDate.format(chartDateQuarterFormatShort);\n\n      formattedDateTooltip = isNewYear\n        ? momentDate.format(chartDateQuarterFormatYearLong)\n        : momentDate.format(chartDateQuarterFormatLong);\n    } else if (granularityType === 'months') {\n      formattedDate = isNewYear\n        ? momentDate.format(chartDateMonthFormatYearShort)\n        : momentDate.format(chartDateMonthFormatShort);\n\n      formattedDateTooltip = isNewYear\n        ? momentDate.format(chartDateMonthFormatYearLong)\n        : momentDate.format(chartDateMonthFormatLong);\n    } else {\n      formattedDate = isNewYear\n        ? momentDate.format(chartDateDayFormatYearShort)\n        : momentDate.format(chartDateDayFormatShort);\n\n      formattedDateTooltip = isNewYear\n        ? momentDate.format(chartDateDayFormatYearLong)\n        : momentDate.format(chartDateDayFormatLong);\n    }\n\n    const yAxis = (data[stringDate] && data[stringDate].data) || 0;\n    const yAxisThreshold = (data[stringDate] && data[stringDate].dataThreshold) || 0;\n\n    isThreshold = isThreshold || yAxisThreshold > 0;\n\n    const labelData = {\n      data: yAxis,\n      previousData,\n      formattedDate: formattedDateTooltip,\n      granularity,\n      tooltipLabel\n    };\n\n    const chartDataThresholdsItem = {\n      x: chartData.length,\n      y: yAxisThreshold\n    };\n\n    if (yAxisThreshold) {\n      chartDataThresholdsItem.tooltip = getThresholdLabel({ yValue: yAxisThreshold, tooltipThresholdLabel });\n    }\n\n    chartDataThresholds.push(chartDataThresholdsItem);\n\n    const chartDataItem = {\n      x: chartData.length,\n      y: yAxis,\n      xAxisLabel:\n        granularityType === 'months' || granularityType === 'quarters'\n          ? formattedDate.replace(/\\s/, '\\n')\n          : formattedDate\n    };\n\n    chartDataItem.tooltip = yAxis ? getLabel(labelData) : tooltipLabelNoData;\n\n    if ((!yAxis && yAxisThreshold) || !chartDataItem.tooltip) {\n      delete chartDataItem.tooltip;\n    }\n\n    chartData.push(chartDataItem);\n\n    previousData = yAxis;\n\n    if (checkTick && year !== previousYear) {\n      previousYear = year;\n    }\n  }\n\n  return { chartData, chartDataThresholds: (isThreshold && chartDataThresholds) || [] };\n};\n\n/**\n * ToDo: the y axis should be a total of all y axis values, an aspect of threshold\n * When multiple data facets are being displayed \"convertChartData\" should be cleaned up.\n */\n/**\n * Convert graph data to consumable format\n *\n * @param {Array} data list of available report data\n * @param {string} dataFacet the response property used for the y axis\n * @param {Array} dataThreshold list of available capacity data\n * @param {string} dataThresholdFacet the response property for the threshold line indicator\n * @param {string} tooltipLabel the tooltip label\n * @param {string} tooltipLabelNoData\n * @param {string} tooltipThresholdLabel the tooltip threshold label\n * @param {date} startDate\n * @param {date} endDate\n * @param {string} granularity, see enum of rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {Object} Object array result converted { chartData: {...} chartDomain {...} }\n */\nconst convertChartData = ({\n  data,\n  dataFacet,\n  dataThreshold,\n  dataThresholdFacet,\n  tooltipLabel,\n  tooltipLabelNoData,\n  tooltipThresholdLabel,\n  startDate,\n  endDate,\n  granularity\n}) => {\n  const formattedData = {};\n\n  (data || []).forEach((value, index) => {\n    if (value) {\n      const stringDate = moment\n        .utc(value[rhelApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE])\n        .startOf('day')\n        .toISOString();\n\n      /**\n       * FixMe: per API the list indexes should match on capacity and reporting.Once resonable\n       * Once reasonable testing has occurred consider removing this check.\n       */\n      const checkThresholdDate = dataThresholdItem => {\n        if (!dataThresholdItem) {\n          return false;\n        }\n\n        const stringThresholdDate = moment\n          .utc(dataThresholdItem[rhelApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.DATE])\n          .startOf('day')\n          .toISOString();\n\n        return moment(stringDate).isSame(stringThresholdDate);\n      };\n\n      formattedData[stringDate] = {\n        data: Number.parseInt(value[dataFacet], 10),\n        dataThreshold: Number.parseInt(\n          (checkThresholdDate(dataThreshold && dataThreshold[index]) && dataThreshold[index][dataThresholdFacet]) || 0,\n          10\n        )\n      };\n    }\n  });\n\n  const { chartData, chartDataThresholds } = fillFormatChartData({\n    data: formattedData,\n    endDate,\n    granularity,\n    startDate,\n    tooltipLabel,\n    tooltipLabelNoData,\n    tooltipThresholdLabel\n  });\n\n  return {\n    chartData,\n    chartDataThresholds,\n    chartXAxisLabelIncrement: getChartXAxisLabelIncrement(granularity)\n  };\n};\n\nconst yAxisTickFormat = tick => numbro(tick).format({ average: true, mantissa: 1, optionalMantissa: true });\n\nconst graphHelpers = {\n  yAxisTickFormat,\n  fillFormatChartData,\n  convertChartData,\n  getGranularityDateType,\n  getGraphLabels,\n  getChartXAxisLabelIncrement,\n  getLabel\n};\n\nexport {\n  graphHelpers as default,\n  graphHelpers,\n  yAxisTickFormat,\n  fillFormatChartData,\n  convertChartData,\n  getGranularityDateType,\n  getGraphLabels,\n  getChartXAxisLabelIncrement,\n  getLabel\n};\n","import { translate } from '../i18n/i18n';\nimport { rhelApiTypes } from '../../types/rhelApiTypes';\n\nconst GRANULARITY_TYPES = rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES;\n\nconst getDateMenuOptionsType = () => [\n  { title: translate('curiosity-graph.dropdownDaily', 'Daily'), value: GRANULARITY_TYPES.DAILY },\n  { title: translate('curiosity-graph.dropdownWeekly', 'Weekly'), value: GRANULARITY_TYPES.WEEKLY },\n  { title: translate('curiosity-graph.dropdownMonthly', 'Monthly'), value: GRANULARITY_TYPES.MONTHLY },\n  { title: translate('curiosity-graph.dropdownQuarterly', 'Quarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n];\n\nconst rhelGraphCardTypes = {\n  getDateMenuOptions: getDateMenuOptionsType\n};\n\nexport { rhelGraphCardTypes as default, rhelGraphCardTypes, getDateMenuOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer, VictoryPortal } from 'victory';\nimport {\n  Chart,\n  ChartAxis,\n  ChartLegend,\n  ChartStack,\n  ChartThreshold,\n  ChartTooltip,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  containerRef = React.createRef();\n\n  componentDidMount() {\n    this.onResizeContainer();\n    window.addEventListener('resize', this.onResizeContainer);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  onResizeContainer = () => {\n    const containerElement = this.containerRef.current;\n\n    if (containerElement && containerElement.clientWidth) {\n      this.setState({ chartWidth: containerElement.clientWidth });\n    }\n  };\n\n  setChartTicks() {\n    const { xAxisLabelIncrement, yAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n    let yAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n\n      if (dataSet.yAxisLabelUseDataSet) {\n        yAxisDataSet = dataSet.data;\n      }\n    });\n\n    if (xAxisDataSet.find(value => value.xAxisLabel && value.xAxisLabel)) {\n      xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n        (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n        []\n      );\n      xAxisProps.xAxisTickFormat = tickValue =>\n        (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n    }\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tickValue => xAxisTickFormat({ dataSet: _cloneDeep(xAxisDataSet), tick: tickValue });\n    }\n\n    if (yAxisDataSet.find(value => value.yAxisLabel && value.yAxisLabel)) {\n      yAxisProps.yAxisTickValues = yAxisDataSet.reduce(\n        (acc, current, index) => (index % yAxisLabelIncrement === 0 ? acc.concat(current.y) : acc),\n        []\n      );\n      yAxisProps.yAxisTickFormat = tickValue =>\n        (yAxisDataSet[tickValue] && yAxisDataSet[tickValue].yAxisLabel) || tickValue;\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tickValue => yAxisTickFormat({ dataSet: _cloneDeep(yAxisDataSet), tick: tickValue });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  getChartTicks() {\n    const { xAxisFixLabelOverlap, yAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickValues, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true,\n      fixLabelOverlap: yAxisFixLabelOverlap\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickValues) {\n      updatedYAxisProps.tickValues = yAxisTickValues;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      isYAxisTicks: !!yAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  // ToDo: the domain range needs to be update when additional datasets are added\n  getChartDomain({ isXAxisTicks, isYAxisTicks }) {\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    dataSets.forEach(dataSet => {\n      dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n      dataSet.data.forEach(value => {\n        dataSetMaxY = value.y > dataSetMaxY ? value.y : dataSetMaxY;\n      });\n\n      if (dataSet.threshold) {\n        dataSet.threshold.forEach(value => {\n          dataSetMaxY = value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    if (!isYAxisTicks) {\n      const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n      generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n    }\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  getChartLegend() {\n    const { dataSets } = this.props;\n    const legendData = [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.dataLegendLabel) {\n        const legendDataSettings = { symbol: {}, name: dataSet.dataLegendLabel };\n\n        if (dataSet.dataColor) {\n          legendDataSettings.symbol.fill = dataSet.dataColor;\n        }\n\n        legendData.push(legendDataSettings);\n      }\n\n      if (dataSet.thresholdLegendLabel) {\n        const legendThresholdSettings = { symbol: { type: 'threshold' }, name: dataSet.thresholdLegendLabel };\n\n        if (dataSet.thresholdColor) {\n          legendThresholdSettings.symbol.fill = dataSet.thresholdColor;\n        }\n\n        legendData.push(legendThresholdSettings);\n      }\n    });\n\n    return {\n      legendData,\n      legendOrientation: 'horizontal',\n      legendPosition: 'bottom-left',\n      legendComponent: <ChartLegend borderPadding={{ top: 20 }} />\n    };\n  }\n\n  render() {\n    const { chartWidth } = this.state;\n    const { dataSets, padding } = this.props;\n\n    const { isXAxisTicks, isYAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks, isYAxisTicks });\n    const chartLegendProps = this.getChartLegend();\n    const chartProps = { padding, ...chartLegendProps, ...chartDomain };\n\n    if (maxY > 0) {\n      const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n      const labelComponent = (\n        <VictoryPortal>\n          <ChartTooltip pointerLength={0} centerOffset={{ x: tooltip => tooltip.flyoutWidth / 2 + 5, y: 0 }} />\n        </VictoryPortal>\n      );\n\n      chartProps.containerComponent = (\n        <VictoryVoronoiCursorContainer\n          constrainToVisibleArea\n          cursorDimension=\"x\"\n          voronoiDimension=\"x\"\n          voronoiPadding={50}\n          mouseFollowTooltips\n          labels={({ datum }) => datum.tooltip}\n          labelComponent={labelComponent}\n        />\n      );\n    }\n\n    return (\n      <div ref={this.containerRef}>\n        <Chart animate={{ duration: 0 }} width={chartWidth} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {(dataSets &&\n            dataSets.length &&\n            dataSets.map(\n              dataSet =>\n                (dataSet.threshold && dataSet.threshold.length && (\n                  <ChartThreshold\n                    animate={dataSet.thresholdAnimate || false}\n                    interpolation={dataSet.thresholdInterpolation || 'step'}\n                    key={helpers.generateId()}\n                    data={dataSet.threshold}\n                    // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple annoyance checks and implementations.\n                    themeColor={dataSet.thresholdColor}\n                    style={dataSet.thresholdStyle || {}}\n                  />\n                )) ||\n                null\n            )) ||\n            null}\n          <ChartStack>\n            {(dataSets &&\n              dataSets.length &&\n              dataSets.map(\n                dataSet =>\n                  (dataSet.data && dataSet.data.length && (\n                    <PfChartArea\n                      animate={dataSet.dataAnimate || false}\n                      interpolation={dataSet.dataInterpolation || 'catmullRom'}\n                      key={helpers.generateId()}\n                      data={dataSet.data}\n                      // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n                      style={{ data: { fill: dataSet.dataColor }, ...dataSet.dataStyle }}\n                    />\n                  )) ||\n                  null\n              )) ||\n              null}\n          </ChartStack>\n        </Chart>\n      </div>\n    );\n  }\n}\n\nChartArea.propTypes = {\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number,\n          y: PropTypes.number,\n          tooltip: PropTypes.string,\n          xAxisLabel: PropTypes.string,\n          yAxisLabel: PropTypes.string\n        })\n      ),\n      dataAnimate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      dataColor: PropTypes.string,\n      dataInterpolation: PropTypes.string,\n      dataLegendLabel: PropTypes.string,\n      dataStyle: PropTypes.object,\n      threshold: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number,\n          y: PropTypes.number\n        })\n      ),\n      thresholdAnimate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      thresholdColor: PropTypes.string,\n      thresholdInterpolation: PropTypes.string,\n      thresholdLegendLabel: PropTypes.string,\n      thresholdStyle: PropTypes.object,\n      xAxisLabelUseDataSet: PropTypes.bool,\n      yAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisFixLabelOverlap: PropTypes.bool,\n  yAxisLabelIncrement: PropTypes.number,\n  yAxisTickFormat: PropTypes.func\n};\n\nChartArea.defaultProps = {\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisFixLabelOverlap: false,\n  yAxisLabelIncrement: 1,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHead, CardActions, CardBody } from '@patternfly/react-core';\nimport { ChartThemeColor } from '@patternfly/react-charts';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components';\nimport { Select } from '../select/select';\nimport { connectTranslate, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers, graphHelpers } from '../../common';\nimport { rhelApiTypes } from '../../types/rhelApiTypes';\nimport { rhelGraphCardTypes } from './rhelGraphCardTypes';\nimport ChartArea from '../chartArea/chartArea';\n\nconst GRANULARITY_TYPES = rhelApiTypes.RHSM_API_QUERY_GRANULARITY_TYPES;\n\nclass RhelGraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphGranularity } = this.props;\n\n    if (graphGranularity !== prevProps.graphGranularity) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  onUpdateGraphData = () => {\n    const { getGraphCapacityRhel, getGraphReportsRhel, graphGranularity, startDate, endDate } = this.props;\n    const submit = {\n      [rhelApiTypes.RHSM_API_QUERY_GRANULARITY]: graphGranularity,\n      [rhelApiTypes.RHSM_API_QUERY_START_DATE]: startDate.toISOString(),\n      [rhelApiTypes.RHSM_API_QUERY_END_DATE]: endDate.toISOString()\n    };\n\n    getGraphCapacityRhel(submit);\n    getGraphReportsRhel(submit);\n  };\n\n  onSelect = event => {\n    const { graphGranularity } = this.props;\n    const { value } = event;\n\n    if (graphGranularity !== value) {\n      store.dispatch({\n        type: reduxTypes.rhel.SET_GRAPH_RHEL_GRANULARITY,\n        graphGranularity: value\n      });\n    }\n  };\n\n  // ToDo: evaluate show error toast on chart error\n  renderChart() {\n    const { graphData, graphGranularity, startDate, endDate, t } = this.props;\n    const { chartXAxisLabelIncrement, chartData, chartDataThresholds } = graphHelpers.convertChartData({\n      data: graphData.usage,\n      dataFacet: rhelApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.SOCKETS,\n      dataThreshold: graphData.capacity,\n      dataThresholdFacet: rhelApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.PHYSICAL_SOCKETS,\n      tooltipLabel: t('curiosity-graph.tooltipSockets'),\n      tooltipLabelNoData: t('curiosity-graph.tooltipSocketsNoData'),\n      tooltipThresholdLabel: t('curiosity-graph.tooltipSocketsThreshold'),\n      startDate,\n      endDate,\n      granularity: graphGranularity\n    });\n\n    return (\n      <ChartArea\n        xAxisFixLabelOverlap\n        xAxisLabelIncrement={chartXAxisLabelIncrement}\n        yAxisTickFormat={({ tick }) => graphHelpers.yAxisTickFormat(tick)}\n        dataSets={[\n          {\n            data: chartData,\n            dataAnimate: {\n              duration: 250,\n              onLoad: { duration: 250 }\n            },\n            dataLegendLabel: t('curiosity-graph.legendSocketsLabel'),\n            threshold: chartDataThresholds,\n            thresholdAnimate: {\n              duration: 100,\n              onLoad: { duration: 100 }\n            },\n            thresholdColor: ChartThemeColor.green,\n            thresholdLegendLabel: t('curiosity-graph.legendSocketsThresholdLabel')\n          }\n        ]}\n      />\n    );\n  }\n\n  // ToDo: combine \"curiosity-skeleton-container\" into a single class w/ --loading and BEM style\n  render() {\n    const { graphGranularity, pending, t } = this.props;\n    const getDateMenuOptions = rhelGraphCardTypes.getDateMenuOptions();\n\n    return (\n      <Card className=\"curiosity-usage-graph fadein\">\n        <CardHead>\n          <h2>{t('curiosity-graph.heading', 'CPU socket usage')}</h2>\n          <CardActions>\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder', 'Select date range')}\n              onSelect={this.onSelect}\n              options={getDateMenuOptions}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder', 'Select date range')}\n            />\n          </CardActions>\n        </CardHead>\n        <CardBody>\n          <div className=\"curiosity-skeleton-container\">\n            {pending && (\n              <React.Fragment>\n                <Skeleton size={SkeletonSize.xs} />\n                <Skeleton size={SkeletonSize.sm} />\n                <Skeleton size={SkeletonSize.md} />\n                <Skeleton size={SkeletonSize.lg} />\n              </React.Fragment>\n            )}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\nRhelGraphCard.propTypes = {\n  getGraphCapacityRhel: PropTypes.func,\n  getGraphReportsRhel: PropTypes.func,\n  graphData: PropTypes.shape({\n    capacity: PropTypes.array,\n    usage: PropTypes.array\n  }),\n  graphGranularity: PropTypes.oneOf([\n    GRANULARITY_TYPES.DAILY,\n    GRANULARITY_TYPES.WEEKLY,\n    GRANULARITY_TYPES.MONTHLY,\n    GRANULARITY_TYPES.QUARTERLY\n  ]),\n  pending: PropTypes.bool,\n  t: PropTypes.func,\n  startDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date)\n};\n\nRhelGraphCard.defaultProps = {\n  getGraphCapacityRhel: helpers.noop,\n  getGraphReportsRhel: helpers.noop,\n  graphData: {\n    capacity: [],\n    usage: []\n  },\n  graphGranularity: GRANULARITY_TYPES.DAILY,\n  pending: false,\n  t: helpers.noopTranslate,\n  startDate: dateHelpers.defaultDateTime.startDate,\n  endDate: dateHelpers.defaultDateTime.endDate\n};\n\nconst makeMapStateToProps = () => {\n  const getRhelGraphCard = reduxSelectors.graphCard.makeRhelGraphCard();\n\n  return (state, props) => ({\n    ...state.rhelGraph.component,\n    ...getRhelGraphCard(state, props)\n  });\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getGraphCapacityRhel: query => dispatch(reduxActions.rhel.getGraphCapacityRhel(query)),\n  getGraphReportsRhel: query => dispatch(reduxActions.rhel.getGraphReportsRhel(query))\n});\n\nconst ConnectedRhelGraphCard = connectTranslate(makeMapStateToProps, mapDispatchToProps)(RhelGraphCard);\n\nexport { ConnectedRhelGraphCard as default, ConnectedRhelGraphCard, RhelGraphCard };\n","import React from 'react';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { PageSection } from '@patternfly/react-core';\nimport { connectRouter } from '../../redux';\nimport RhelGraphCard from '../rhelGraphCard/rhelGraphCard';\n\nclass RhelView extends React.Component {\n  componentDidMount() {}\n\n  render() {\n    return (\n      <React.Fragment>\n        <PageHeader>\n          <PageHeaderTitle title=\"Red Hat Enterprise Linux\" />\n        </PageHeader>\n        <PageSection>\n          <RhelGraphCard />\n        </PageSection>\n      </React.Fragment>\n    );\n  }\n}\n\nRhelView.propTypes = {};\n\nRhelView.defaultProps = {};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = () => ({});\n\nconst ConnectedRhelView = connectRouter(mapStateToProps, mapDispatchToProps)(RhelView);\n\nexport { ConnectedRhelView as default, ConnectedRhelView, RhelView };\n","import { helpers } from '../../common/helpers';\nimport RhelView from '../rhelView/rhelView';\n\n/**\n * Return an assumed dynamic route baseName directory\n * based on a predictable platform directory depth of\n * /[OPTIONAL]/[environment]/[APP NAME]\n *\n * @param pathName {string}\n * @param pathPrefix {string}\n * @return {string}\n */\nconst dynamicBaseName = ({ pathName, pathPrefix }) => {\n  const path = pathName.split('/');\n\n  path.shift();\n\n  const pathSlice = pathPrefix && new RegExp(path[0]).test(pathPrefix) ? 3 : 2;\n\n  return `/${path.slice(0, pathSlice).join('/')}`;\n};\n\nconst baseName =\n  (helpers.TEST_MODE && '/') ||\n  (helpers.DEV_MODE && '/') ||\n  dynamicBaseName({ pathName: window.location.pathname, pathPrefix: helpers.UI_DEPLOY_PATH_PREFIX });\n\n/**\n * Return array of objects that describe navigation\n * @return {array}\n */\nconst routes = [\n  {\n    title: 'Red Hat Enterprise Linux',\n    id: 'rhel',\n    to: '/rhel',\n    redirect: true,\n    component: RhelView,\n    exact: true,\n    disabled: helpers.UI_DISABLED\n  }\n];\n\nexport { routes as default, baseName, dynamicBaseName, routes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { baseName, routes } from './routerTypes';\n\nclass Router extends React.Component {\n  renderRoutes() {\n    const { routesType } = this.props;\n\n    let redirectRoot = null;\n\n    return {\n      renderRoutes: routesType.map(item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        if (item.redirect === true) {\n          redirectRoot = <Redirect to={item.to} />;\n        }\n\n        return (\n          <Route exact={item.hasParameters || item.exact} key={item.to} path={item.to} component={item.component} />\n        );\n      }),\n      redirectRoot\n    };\n  }\n\n  render() {\n    const { renderRoutes, redirectRoot } = this.renderRoutes();\n\n    return (\n      <div className=\"curiosity-content\">\n        <Switch>\n          {renderRoutes}\n          {redirectRoot}\n        </Switch>\n      </div>\n    );\n  }\n}\n\nRouter.propTypes = {\n  routesType: PropTypes.array\n};\n\nRouter.defaultProps = {\n  routesType: routes\n};\n\nexport { Router as default, Router, baseName, routes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Page, PageSection } from '@patternfly/react-core';\n\nconst PageLayout = ({ children }) => (\n  <Page className=\"layout-pf curiosity\">\n    <PageSection noPadding>{children}</PageSection>\n  </Page>\n);\n\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\nPageLayout.defaultProps = {};\n\nexport { PageLayout as default, PageLayout };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant } from '@patternfly/react-core';\nimport { BanIcon, BinocularsIcon } from '@patternfly/react-icons';\nimport { connectRouter, reduxActions } from '../../redux';\nimport { helpers } from '../../common/helpers';\nimport { routes as appRoutes } from '../router/router';\nimport PageLayout from '../pageLayout/pageLayout';\n\nclass Authentication extends Component {\n  appNav = helpers.noop;\n\n  buildNav = helpers.noop;\n\n  componentDidMount() {\n    const { appName, authorizeUser, history, insights, routes, session } = this.props;\n\n    try {\n      if (helpers.PROD_MODE || helpers.REVIEW_MODE) {\n        insights.chrome.init();\n      }\n\n      if (helpers.PROD_MODE) {\n        insights.chrome.identifyApp(appName);\n        insights.chrome.navigation(routes);\n\n        this.appNav = insights.chrome.on('APP_NAVIGATION', event => history.push(`/${event.navId}`));\n        this.buildNav = history.listen(() => insights.chrome.navigation(this.buildNavigation()));\n      }\n\n      if (!session.authorized) {\n        authorizeUser();\n      }\n    } catch (e) {\n      if (!helpers.TEST_MODE) {\n        console.warn(`{ init, identifyApp, navigation } = insights.chrome: ${e.message}`);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.appNav();\n    this.buildNav();\n  }\n\n  buildNavigation = () => {\n    const { routes } = this.props;\n    const currentPath = window.location.pathname.split('/').slice(-1)[0];\n\n    return routes.map(item => ({\n      ...item,\n      active: item.id === currentPath\n    }));\n  };\n\n  render() {\n    const { children, session } = this.props;\n\n    if (session.authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return (\n        <PageLayout>\n          <PageHeader>\n            <PageHeaderTitle title=\"&nbsp;\" />\n          </PageHeader>\n          <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n            <EmptyStateIcon icon={BinocularsIcon} />\n            <EmptyStateBody>Authenticating...</EmptyStateBody>\n          </EmptyState>\n        </PageLayout>\n      );\n    }\n\n    return (\n      <PageLayout>\n        <PageHeader>\n          <PageHeaderTitle title=\"Unauthorized\" />\n        </PageHeader>\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          <EmptyStateIcon icon={BanIcon} />\n          <EmptyStateBody>You do not have permission to access reporting. Contact your administrator.</EmptyStateBody>\n        </EmptyState>\n      </PageLayout>\n    );\n  }\n}\n\nAuthentication.propTypes = {\n  appName: PropTypes.string,\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  insights: PropTypes.shape({\n    chrome: PropTypes.shape({\n      init: PropTypes.func,\n      identifyApp: PropTypes.func,\n      navigation: PropTypes.func,\n      on: PropTypes.func\n    })\n  }),\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string\n    })\n  ),\n  session: PropTypes.shape({\n    authorized: PropTypes.bool,\n    error: PropTypes.bool,\n    errorMessage: PropTypes.string,\n    pending: PropTypes.bool\n  })\n};\n\nAuthentication.defaultProps = {\n  appName: helpers.UI_NAME,\n  authorizeUser: helpers.noop,\n  insights: window.insights,\n  routes: appRoutes,\n  session: {\n    authorized: false,\n    error: false,\n    errorMessage: '',\n    pending: false\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser())\n});\n\nconst mapStateToProps = state => ({ session: state.user.session });\n\nconst ConnectedAuthentication = connectRouter(mapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router/router';\nimport Authentication from './authentication/authentication';\nimport PageLayout from './pageLayout/pageLayout';\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n\n    getLocale();\n  }\n\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <Authentication>\n          <PageLayout>\n            <Router />\n          </PageLayout>\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { baseName } from './components/router/routerTypes';\nimport { store } from './redux';\nimport App from './components/app';\nimport './styles/index.scss';\n\nrender(\n  <Provider store={store}>\n    <NotificationsPortal />\n    <BrowserRouter basename={baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"version":3,"sources":["components/router/redirect.js","components/router/router.js","common/dateHelpers.js","common/downloadHelpers.js","components/table/tableSkeleton.js","components/loader/loader.js","common/helpers.js","components/table/tableEmpty.js","components/table/table.js","types/rhsmApiTypes.js","types/platformApiTypes.js","components/i18n/i18n.js","components/messageView/messageView.js","components/authentication/authentication.js","components/app.js","index.js","redux/common/reduxHelpers.js","redux/middleware/actionRecordMiddleware.js","redux/middleware/index.js","redux/middleware/statusMiddleware.js","redux/middleware/multiActionMiddleware.js","redux/types/appTypes.js","redux/types/graphTypes.js","redux/types/inventoryTypes.js","redux/types/platformTypes.js","redux/types/queryTypes.js","redux/types/rhsmTypes.js","redux/types/userTypes.js","redux/types/index.js","redux/types/toolbarTypes.js","redux/reducers/graphReducer.js","redux/reducers/inventoryReducer.js","redux/reducers/messagesReducer.js","redux/reducers/toolbarReducer.js","redux/reducers/userReducer.js","redux/reducers/viewReducer.js","redux/reducers/index.js","redux/store.js","services/platformServices.js","redux/actions/platformActions.js","services/config.js","services/rhsmServices.js","redux/actions/rhsmActions.js","services/userServices.js","redux/actions/index.js","redux/actions/userActions.js","redux/common/apiQueries.js","redux/selectors/appMessagesSelectors.js","redux/selectors/userSelectors.js","redux/selectors/guestsListSelectors.js","redux/selectors/graphCardSelectors.js","redux/selectors/inventoryListSelectors.js","redux/selectors/subscriptionsListSelectors.js","redux/selectors/index.js","redux/index.js","components/router/routerHelpers.js","config/routes.js","types/index.js","components/pageLayout/pageHeader.js","components/pageLayout/pageColumns.js","components/pageLayout/pageMessages.js","components/pageLayout/pageSection.js","components/pageLayout/pageToolbar.js","components/pageLayout/pageLayout.js"],"names":["Redirect","urlRoute","baseName","history","isRedirect","isReplace","url","route","routeDetail","routerHelpers","getRouteConfigByPath","pathName","firstMatch","Suspense","fallback","variant","path","component","forcePath","join","helpers","DEV_MODE","TEST_MODE","window","location","replace","href","Fragment","defaultProps","RoutedRedirect","withRouter","Router","routes","activateOnErrorRoute","find","activateOnError","redirectRoot","disabled","redirect","map","item","exact","strict","render","routeProps","routeConfig","id","getRouteConfig","URLSearchParams","decodeURIComponent","parsedSearch","Set","search","param","value","forEach","v","split","updatedLocation","errorRoute","routeItem","to","getCurrentDate","process","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","date","subtract","measurement","endOfMeasurement","startDate","moment","utc","startOf","toDate","endDate","endOf","currentDateTime","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","rangedYearDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedMonthDateTime","month","currentYear","Number","parseInt","year","keyDateTimeRanges","listDateTimeRanges","startDateUpdated","endDateUpdated","format","dateTime","titleYear","title","titleIndex","isNextYear","_title","toLowerCase","add","translate","context","push","reverse","current","undefined","getRangedDateTime","granularity","GRANULARITY_TYPES","WEEKLY","MONTHLY","QUARTERLY","DAILY","timestampDayFormats","downloadData","options","data","fileName","fileType","Promise","resolve","reject","document","navigator","URL","blob","Blob","type","msSaveBlob","anchorTag","createElement","createObjectURL","style","display","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","error","debugLog","a","sessionStorage","UI_LOGGER_FILE","JSON","stringify","parse","getItem","UI_LOGGER_ID","Error","message","browserExpose","limit","TableSkeleton","className","borders","colCount","colWidth","isHeader","rowCount","t","updatedColumnHeaders","Array","index","updatedHeader","Skeleton","size","SkeletonSize","md","transforms","cellWidth","updatedRowCount","updatedRows","cells","ariaLabel","columnHeaders","rows","Loader","skeletonProps","tableProps","lg","xs","sm","Spinner","noop","Function","prototype","noopPromise","PROD_MODE","UI_WINDOW_ID","obj","generateId","prefix","Math","ceil","random","isDate","Object","toString","call","isPromise","test","noopTranslate","key","components","REVIEW_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_TABLE","UI_DISABLED_TABLE_HOSTS","UI_DISABLED_TABLE_SUBSCRIPTIONS","UI_DISABLED_TOOLBAR","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_LEARN_MORE","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_NAME","UI_PATH","UI_VERSION","TableEmpty","icon","tableHeading","EmptyState","EmptyStateIcon","Title","headingLevel","EmptyStateBody","EmptyStateVariant","small","Table","state","isCollapsible","isSortable","sortBy","onCollapse","isOpen","fullWidth","expandedContent","setState","onSort","direction","updatedIndex","i","label","column","header","this","setRowData","prevProps","props","customizer","valueA","valueB","_isEqualWith","updatedSort","isExpanded","rowObj","parent","length","cell","settings","React","isValidElement","columnHeader","sortActive","sortDirection","tempColumnHeader","sortable","SortByDirection","asc","filter","children","summary","pfTableProps","emptyTable","SearchIcon","event","aria-label","appName","Grid","GridItem","span","renderTable","Component","RHSM_API_PATH_ID_TYPES","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","OPENSHIFT","OPENSHIFT_METRICS","OPENSHIFT_DEDICATED_METRICS","SATELLITE","SATELLITE_CAPSULE","SATELLITE_SERVER","RHSM_API_QUERY_GRANULARITY_TYPES","RHSM_API_QUERY_SORT_TYPES","CORES","CORE_HOURS","HARDWARE","LAST_SEEN","MEASUREMENT","NAME","SOCKETS","RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES","SKU","PRODUCT_NAME","SERVICE_LEVEL","USAGE","UPCOMING_EVENT_DATE","PHYSICAL_CAPACITY","VIRTUAL_CAPACITY","TOTAL_CAPACITY","UOM","RHSM_API_QUERY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","RHSM_API_QUERY_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_QUERY_UOM_TYPES","RHSM_API_QUERY_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_SET_OPTIN_TYPES","CONDUIT_SYNC","TALLY_REPORT","TALLY_SYNC","RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES","END_DATE","GRANULARITY","SLA","START_DATE","RHSM_API_QUERY_SET_INVENTORY_TYPES","DIRECTION","DISPLAY_NAME","LIMIT","OFFSET","SORT","RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES","RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES","RHSM_API_QUERY_TYPES","rhsmApiTypesplatformApiTypes","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","translateKey","values","i18next","store","i18nKey","I18n","fallbackLng","loadPath","locale","useState","initialized","setInitialized","useMount","use","XHR","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","useEffect","changeLanguage","e","MessageView","pageTitle","full","Authentication","removeListeners","authorizeUser","hideGlobalFilter","initializeChrome","onNavigation","session","setAppName","authorized","subscriptions","appNav","routeHref","navId","Maintenance","description","pending","BinocularsIcon","errorCodes","includes","status","getErrorRoute","NotAuthorized","serviceName","makeMapStateToProps","reduxSelectors","user","makeUserSession","ConnectedAuthentication","connectRouter","dispatch","reduxActions","isHidden","platform","callback","name","App","getLocale","ConnectedApp","basename","getElementById","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","schemas","initialValue","schema","generated","isArray","getSingleResponseFromResultArray","results","updatedResults","payload","response","updatedResultsMessage","firstErrorResponse","_get","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","_isPlainObject","getDateFromResults","getStatusFromResults","setStateProp","prop","initialState","reset","console","warn","singlePromiseDataResponseFromArray","reduxHelpers","parsedResponses","responses","customResponseValue","keyPrefix","updatedData","generatedSchema","parsedResponse","dataObj","customValue","update","updatedDataObj","entries","dataObjKey","dataObjValue","casedDataObjKey","_camelCase","val","isInteger","parseFloat","generateReflectedData","generatedData","types","action","expandedTypes","subVal","ref","RegExp","whichType","expandMetaTypes","meta","updatedMeta","query","metaData","metaId","metaQuery","baseState","errorMessage","fulfilled","setId","errorResponse","cancelled","recordAction","config","items","parsedItems","actions","slice","getActions","priorItem","updatedAction","removeUserIdentity","updatedPayload","sanitizeData","headers","sanitizeActionHeaders","actionObj","diff","timestamp","now","setItem","browser","userAgent","toLocaleString","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","next","httpStatus","payloadConfig","range","floor","statusMiddleware","promiseMiddleware","actionRecordMiddleware","app","version","notificationsMiddleware","appTypes","STATUS_4XX","STATUS_5XX","graphTypes","SET_GRAPH_LEGEND","inventoryTypes","SET_INVENTORY_TAB","platformTypes","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_GLOBAL_FILTER_HIDE","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","SET_QUERY_RHSM_TYPES","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","rhsmTypes","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","GET_MESSAGE_REPORTS_RHSM","GET_SUBSCRIPTIONS_INVENTORY_RHSM","userTypes","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","graph","inventory","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_RESET_INVENTORY_LIST","rhsm","toolbar","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","legend","reportCapacity","graphReducer","hostsInventory","hostsGuests","subscriptionsInventory","tabs","inventoryReducer","report","messagesReducer","filters","toolbarReducer","viewId","activeFilters","currentFilter","optin","userReducer","actionStatus","graphTallyQuery","inventoryGuestsQuery","inventoryHostsQuery","inventorySubscriptionsQuery","viewReducer","updateResetQueries","queryIds","productGroups","updatedQuery","queryId","productQuery","updateClearQueries","clearFilters","reducers","notifications","messages","view","reduxReducers","combineReducers","createStore","applyMiddleware","getUser","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","auth","getUserPermissions","USER_PERMISSION_TYPES","REACT_APP_DEBUG_PERMISSION_APP_ONE","REACT_APP_DEBUG_PERMISSION_APP_TWO","platformServices","on","identifyApp","setNavigation","navigation","active","pathname","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","serviceConfig","passedConfig","timeout","cancelTokens","responseCache","LruCache","maxAge","max","updateAgeOnGet","serviceCall","updatedConfig","axiosInstance","axios","create","cancel","cancelTokensId","cancelId","CancelToken","source","cancelToken","token","cache","sortedParams","params","sort","b","localeCompare","cacheId","cachedResponse","get","adapter","adapterConfig","interceptors","set","rhsmServices","getApiVersion","getGraphCapacity","getGraphReports","getHostsInventory","getHostsInventoryGuests","getSubscriptionsInventory","rhsmActions","getGraphReportsCapacity","all","getMessageReports","getLocaleFromCookie","Cookies","LocaleCode","getLanguageName","userServices","updatedPermissions","keys","permissions","userData","allPermissions","userPermissions","flat","emulatedErrorResponse","defaultLocale","logoutUser","deleteAccountOptIn","method","getAccountOptIn","updateAccountOptIn","rejected","dismissable","apiQueries","parseRhsmQuery","queries","updatedGraphTallyQuery","updatedInventoryGuestsQuery","updatedInventoryHostsQuery","updatedInventorySubscriptionsQuery","toolbarQuery","selectorCache","selector","createSelector","productId","appMessages","cloudigradeMismatch","assign","reportData","appMessagesSelectors","makeAppMessages","createSelectorCreator","defaultMemoize","_isEqual","createDeepEqualSelector","rest","updatedSession","admin","entitled","responsePermissions","APP_TYPES","permission","definitions","resource","operation","resources","RESOURCE_TYPES","OPERATION_TYPES","resourcePermissions","res","op","userSessionSelectors","userSession","responseData","updatedResponseData","listData","updatedListData","guestsListSelectors","guestsList","makeGuestsList","stale","graphData","responseMetaQuery","capacity","capacityData","graphDataKey","tallySchema","capacitySchema","customReportValue","presetData","hasData","hasCloudigradeData","hasCloudigradeMismatch","customCapacityValue","x","y","hasInfinite","generateGraphData","graphDataObj","graphDataObjKey","generatedY","casedGraphDataObjKey","toFixed","updatedItem","graphCardSelectors","graphCard","makeGraphCard","itemCount","listMeta","customInventoryValue","updatedListMeta","inventoryListSelectors","inventoryList","makeInventoryList","subscriptionsList","makeSubscriptionsList","userSelectors","mapStateToProps","mapDispatchToProps","connect","useSelector","UseSelector","equality","platformLandingRedirect","platformModalRedirect","dynamicBaseName","applicationName","dynamicBasePath","basePath","generateProductGroups","routesConfig","pathParameter","productParameter","generateRoutes","basePathDirs","str","configs","allConfigs","configsById","allConfigsById","findConfig","dir","configPath","aliases","configItem","updatedConfigItem","decodedDir","decodeURI","navRouteItem","returnDefault","default","hash","viewParameter","isSearchable","lazy","PageHeader","includeTour","productLabel","Flex","justifyContent","FlexItem","PageHeaderTitle","Button","isInline","color","iconPosition","target","PageColumns","alignItems","spaceItems","Children","toArray","child","grow","PageMessages","Section","PageSection","PageToolbar","PageLayout","padding"],"mappings":"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","file":"static/js/main.95cefe0b.chunk.js","sourcesContent":["import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Route } from 'react-router-dom';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\nimport { Loader } from '../loader/loader';\n\n/**\n * A routing redirect.\n *\n * @param {object} props\n * @param {string} props.baseName\n * @param {object} props.history\n * @param {boolean} props.isRedirect\n * @param {boolean} props.isReplace\n * @param {string} props.url\n * @param {string} props.route\n * @returns {Node}\n */\nconst Redirect = ({ baseName, history, isRedirect, isReplace, url, route }) => {\n  const forceNavigation = urlRoute => {\n    if (!helpers.DEV_MODE && !helpers.TEST_MODE) {\n      if (isReplace) {\n        window.location.replace(urlRoute);\n      } else {\n        window.location.href = urlRoute;\n      }\n    }\n  };\n\n  if (isRedirect === true) {\n    if (route && history) {\n      const routeDetail = routerHelpers.getRouteConfigByPath({ pathName: route }).firstMatch;\n\n      return (\n        <React.Suspense fallback={<Loader variant=\"title\" />}>\n          <Route path=\"*\">{routeDetail && <routeDetail.component />}</Route>\n        </React.Suspense>\n      );\n    }\n\n    const forcePath = url || (route && path.join(baseName, route));\n    forceNavigation(forcePath);\n\n    return (\n      ((helpers.DEV_MODE || helpers.TEST_MODE) && <React.Fragment>Redirected towards {forcePath}</React.Fragment>) ||\n      null\n    );\n  }\n\n  return null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, isReplace: boolean, history: object, baseName: string, url: string}}\n */\nRedirect.propTypes = {\n  history: PropTypes.object,\n  isRedirect: PropTypes.bool.isRequired,\n  isReplace: PropTypes.bool,\n  url: PropTypes.string,\n  baseName: PropTypes.string,\n  route: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{route: null, isReplace: boolean, history: null, baseName: string, url: null}}\n */\nRedirect.defaultProps = {\n  history: null,\n  isReplace: false,\n  url: null,\n  baseName: routerHelpers.baseName,\n  route: null\n};\n\nconst RoutedRedirect = withRouter(Redirect);\n\nexport { RoutedRedirect as default, RoutedRedirect, Redirect };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport Redirect from './redirect';\nimport { routerHelpers } from './routerHelpers';\nimport { Loader } from '../loader/loader';\n\n/**\n * Load routes.\n *\n * @param {object} props\n * @param {Array} props.routes\n * @returns {Node}\n */\nconst Router = ({ routes } = {}) => {\n  const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n  const redirectRoot = routes.find(({ disabled, redirect }) => !disabled && redirect) ?? null;\n\n  return (\n    <React.Suspense fallback={<Loader variant=\"title\" />}>\n      <Switch>\n        {routes.map(item => {\n          if (item.disabled) {\n            return null;\n          }\n\n          return (\n            <Route\n              exact={item.exact}\n              key={item.path}\n              path={item.path}\n              strict={item.strict}\n              render={({ location, ...routeProps }) => {\n                const routeConfig = item.id && routerHelpers.getRouteConfig({ id: item.id });\n                const { URLSearchParams, decodeURIComponent } = window;\n                const parsedSearch = {};\n\n                [\n                  ...new Set(\n                    [...new URLSearchParams(decodeURIComponent(location.search))].map(\n                      ([param, value]) => `${param}~${value}`\n                    )\n                  )\n                ].forEach(v => {\n                  const [param, value] = v.split('~');\n                  parsedSearch[param] = value;\n                });\n\n                const updatedLocation = {\n                  ...location,\n                  parsedSearch\n                };\n\n                return (\n                  <item.component\n                    routeDetail={{\n                      baseName: routerHelpers.baseName,\n                      errorRoute: activateOnErrorRoute,\n                      routes,\n                      routeItem: { ...item },\n                      ...routeConfig\n                    }}\n                    location={updatedLocation}\n                    {...routeProps}\n                  />\n                );\n              }}\n            />\n          );\n        })}\n        {redirectRoot && <ReactRouterDomRedirect to={redirectRoot.redirect} />}\n      </Switch>\n    </React.Suspense>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.boolean,\n      component: PropTypes.any.isRequired,\n      disabled: PropTypes.boolean,\n      exact: PropTypes.boolean,\n      id: PropTypes.string,\n      path: PropTypes.string.isRequired,\n      redirect: PropTypes.string,\n      render: PropTypes.boolean,\n      strict: PropTypes.boolean\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerHelpers.routes\n};\n\nexport { Router as default, Router, Redirect, routerHelpers };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @param {string} params.endOfMeasurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement, endOfMeasurement = 'days' }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf(endOfMeasurement).toDate()\n});\n\nconst currentDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 1, measurement: 'days' });\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\nconst rangedYearDateTime = setRangedDateTime({\n  date: getCurrentDate(),\n  subtract: 11,\n  measurement: 'months',\n  endOfMeasurement: 'months'\n});\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case 'CURRENT':\n      return { ...currentDateTime };\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Generate a list of months for use in a select list.\n *\n * @param {string} month\n * @returns {{keyDateTimeRanges: {}, listDateTimeRanges: *[]}|*}\n */\nconst getRangedMonthDateTime = month => {\n  const currentYear = Number.parseInt(moment.utc(getCurrentDate()).year(), 10);\n  const { startDate, endDate } = { ...rangedYearDateTime };\n  const keyDateTimeRanges = {};\n  let listDateTimeRanges = [];\n\n  const startDateUpdated = moment.utc(startDate);\n  const endDateUpdated = moment.utc(endDate);\n\n  while (endDateUpdated > startDateUpdated || startDateUpdated.format('M') === endDateUpdated.format('M')) {\n    const dateTime = {\n      value: {\n        startDate: startDateUpdated.toDate()\n      }\n    };\n\n    const titleYear = startDateUpdated.format('MMMM YYYY');\n    const title = startDateUpdated.format('MMMM');\n    const titleIndex = startDateUpdated.format('M');\n    const isNextYear = currentYear !== Number.parseInt(startDateUpdated.year(), 10);\n\n    dateTime.title = (isNextYear && titleYear) || title;\n    dateTime._title = title.toLowerCase();\n    dateTime.value.endDate = moment.utc(startDateUpdated).endOf('month').toDate();\n\n    startDateUpdated.add(1, 'month');\n\n    dateTime.title = translate('curiosity-toolbar.granularityRange', { context: dateTime.title });\n    keyDateTimeRanges[title.toLowerCase()] = { ...dateTime };\n    keyDateTimeRanges[titleIndex] = { ...dateTime };\n    listDateTimeRanges.push(dateTime);\n  }\n\n  listDateTimeRanges = listDateTimeRanges.reverse();\n  listDateTimeRanges[0] = {\n    ...listDateTimeRanges[0],\n    _title: 'current',\n    title: translate('curiosity-toolbar.granularityRange', { context: 'current' })\n  };\n\n  keyDateTimeRanges.current = { ...listDateTimeRanges[0] };\n\n  if (month) {\n    return keyDateTimeRanges?.[month] || undefined;\n  }\n\n  return { keyDateTimeRanges, listDateTimeRanges };\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { dateHelpers } from './dateHelpers';\n\n/**\n * Download data to a file\n *\n * @param {object} options\n * @param {string} options.data\n * @param {string} options.fileName\n * @param {string} options.fileType\n * @returns {Promise}\n */\nconst downloadData = options => {\n  const { data = '', fileName = 'download.txt', fileType = 'text/plain' } = options || {};\n  return new Promise((resolve, reject) => {\n    try {\n      const { document, navigator, URL } = window;\n      const blob = new Blob([data], { type: fileType });\n\n      if (navigator?.msSaveBlob) {\n        navigator.msSaveBlob(blob, fileName);\n        resolve({ fileName, data });\n      } else {\n        const anchorTag = document.createElement('a');\n\n        anchorTag.href = URL.createObjectURL(blob);\n        anchorTag.style.display = 'none';\n        anchorTag.download = fileName;\n\n        document.body.appendChild(anchorTag);\n\n        anchorTag.click();\n\n        setTimeout(() => {\n          document.body.removeChild(anchorTag);\n          URL.revokeObjectURL(blob);\n          resolve({ fileName, data });\n        }, 250);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\n/**\n * Download the debug log file.\n */\nconst debugLog = async () => {\n  try {\n    const { sessionStorage } = window;\n    const fileName = `${helpers.UI_LOGGER_FILE}`.replace(\n      '{0}',\n      moment(dateHelpers.getCurrentDate()).format('YYYYMMDD_HHmmss')\n    );\n    const data = JSON.stringify(JSON.parse(sessionStorage.getItem(`${helpers.UI_LOGGER_ID}`)), null, 2);\n\n    await downloadData({ data, fileName, fileType: 'application/json' });\n  } catch (e) {\n    throw new Error(`debuglog error, ${e.message}`);\n  }\n};\n\nconst downloadHelpers = {\n  downloadData,\n  debugLog\n};\n\nhelpers.browserExpose({ debugLog }, { limit: false });\n\nexport { downloadHelpers as default, downloadHelpers, downloadData, debugLog };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cellWidth, TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {Array} props.colWidth\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableSkeleton = ({ className, borders, colCount, colWidth, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map((value, index) => {\n    const updatedHeader = { title: <Skeleton size={SkeletonSize.md} /> };\n\n    if (typeof colWidth[index] === 'number') {\n      updatedHeader.transforms = [cellWidth(colWidth[index])];\n    }\n\n    return updatedHeader;\n  });\n\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />)\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: string,\n *     className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.arrayOf(PropTypes.number),\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: null,\n *     className: null, rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  colWidth: [],\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    colWidth: PropTypes.array,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader };\n","/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string} key\n * @param {string|object} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) =>\n  `t(${key}${(value && `, ${(typeof value === 'string' && value) || (value && JSON.stringify(value))}`) || ''}${\n    (components && `, ${components}`) || ''\n  })`;\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the current hosts inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_HOSTS = process.env.REACT_APP_UI_DISABLED_TABLE_HOSTS === 'true';\n\n/**\n * Disable the current subscriptions inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_SUBSCRIPTIONS = process.env.REACT_APP_UI_DISABLED_TABLE_SUBSCRIPTIONS === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * A url, or uri, for \"recommend actions\"\n *\n * @type {string}\n */\nconst UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS = process.env.REACT_APP_UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI state logging file name.\n *\n * @type {string}\n */\nconst UI_LOGGER_FILE = process.env.REACT_APP_UI_LOGGER_FILE || 'debug_log_{0}.json';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  browserExpose,\n  generateId,\n  isDate,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TABLE_HOSTS,\n  UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_LOGGER_FILE,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {Node|Function} props.icon\n * @param {Node} props.message\n * @param {string} props.tableHeading\n * @param {Node} props.title\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, variant: string, message: Node, title: Node, tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  Table as PfTable,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * FixMe: PF tables uses sequentially ordered lists/arrays to denote expandable sections\n * Ideal solution is to nest expandable sections within their respective parents. There\n * are scenarios where manipulating a sequentially ordered list/array can, and will,\n * lead to unintended results. And forces an equal, if not greater, amount of effort on\n * state tracking in the consuming GUI/app. Compounding the issue, the index is used/returned\n * during events for a particular row being \"expanded\". This ends up making after-the-fact\n * application of the expandable list/array items problematic since said index is\n * constantly updating/shifting as rows are dynamically added. Add in a \"not every row\n * needs to be expandable\" scenario, you can start to see the issues. All of that\n * effort means that in some cases it may actually be quicker to simply use PF styles and\n * a HTML table directly, bypassing PF-React entirely.\n *\n * Applying a React node as content in the sequentially ordered list/array appears to\n * automatically \"mount\" said node. How this handles in child components where subsequent\n * AJAX/XHR calls are called means you are potentially hitting an API with dozens of calls,\n * row dependent, even when a user may not expand the nested row/child. This could easily\n * be resolved by nesting and applying the expandable contents after-the-fact.\n */\n/**\n * FixMe: PF tables misalignment of the column headers list/array and row cells breaks the component\n * The related PF error for this is cryptic. An immediate solution would be to simply fix the error\n * messaging, or do a length check before consuming the lists/arrays. This happens when a consumer\n * places more or less column header cells than row cells.\n */\n/**\n * FixMe: PF tables break when an empty list/array is used for the column headers\n * This appears related to the mismatched column header and row cells. The solution is to simply not\n * render the header row instead of throwing an error. This is similar to how the empty rows\n * list/array is handled.\n */\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n * @fires onSort\n */\nclass Table extends React.Component {\n  state = {\n    isCollapsible: false,\n    isSortable: false,\n    sortBy: {},\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (\n      !_isEqualWith(prevProps.rows, rows, customizer) ||\n      !_isEqualWith(prevProps.columnHeaders, columnHeaders, customizer)\n    ) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * FixMe: PF table sort callback doesn't use a zero based index when expandable?\n   * Educated guess there's a cell count happening instead of \"[you have this many data/entry cells]\"\n   * This is really confusing to implement in a consuming application, especially on first\n   * implementation. Special \"collapsible index\" logic had to be implemented to compensate for this\n   * odd behavior.\n   */\n  /**\n   * On column sort\n   *\n   * @event onSort\n   * @param {object} params\n   * @param {number} params.index\n   * @param {string} params.direction\n   * @param {object} params.data\n   */\n  onSort = ({ index, direction, data = {} }) => {\n    const { isCollapsible, updatedColumnHeaders, updatedRows } = this.state;\n    const updatedIndex = isCollapsible ? index - 1 : index;\n\n    updatedRows.forEach(async ({ isOpen }, i) => {\n      if (isOpen === true) {\n        await this.onCollapse({ index: i, isOpen: false });\n      }\n    });\n\n    this.setState(\n      {\n        sortBy: {\n          index,\n          direction\n        }\n      },\n      () =>\n        updatedColumnHeaders[updatedIndex].onSort({\n          direction,\n          index: updatedIndex,\n          label: data?.column?.header?.label\n        })\n    );\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n    const updatedSort = {};\n    let isCollapsible = false;\n    let isSortable = false;\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        isCollapsible = true;\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell?.title !== undefined) {\n          const { title, ...settings } = cell;\n          rowObj.cells.push({ title, ...settings });\n        } else {\n          rowObj.cells.push({\n            title: (React.isValidElement(cell) && cell) || (typeof cell === 'object' && `${cell}`) || cell\n          });\n        }\n      });\n    });\n\n    columnHeaders.forEach((columnHeader, index) => {\n      if (columnHeader?.title !== undefined) {\n        const { onSort, sortActive, sortDirection, title, ...settings } = columnHeader;\n        const tempColumnHeader = {\n          title,\n          ...settings\n        };\n\n        if (onSort) {\n          isSortable = true;\n          tempColumnHeader.transforms = [...(tempColumnHeader?.transforms || []), sortable];\n          tempColumnHeader.onSort = onSort;\n\n          if (sortActive) {\n            updatedSort.sortBy = { index: isCollapsible ? index + 1 : index };\n            updatedSort.sortBy.direction = SortByDirection.asc;\n          }\n\n          if (sortDirection) {\n            updatedSort.sortBy = { ...updatedSort.sortBy, direction: sortDirection };\n          }\n        } else if (tempColumnHeader.transforms) {\n          tempColumnHeader.transforms = tempColumnHeader.transforms.filter(v => v !== sortable);\n        }\n\n        updatedColumnHeaders.push(tempColumnHeader);\n      } else {\n        updatedColumnHeaders.push({\n          title:\n            (React.isValidElement(columnHeader) && columnHeader) ||\n            (typeof columnHeader === 'object' && `${columnHeader}`) ||\n            columnHeader\n        });\n      }\n    });\n\n    this.setState({\n      isCollapsible,\n      isSortable,\n      updatedColumnHeaders,\n      updatedRows,\n      ...updatedSort\n    });\n  }\n\n  /**\n   * FixMe: PF Tables automatically applies an expandable className when using the \"onCollapse\" prop?\n   * Not every row may need to be expandable. In certain scenarios a table may have no expandable\n   * sections, however it appears the \"onCollapse\" styling, and additionally added \"table cells\" are still\n   * applied.\n   */\n  /**\n   * Apply props to table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { isCollapsible, isSortable, sortBy, updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    const pfTableProps = {};\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    if (isCollapsible) {\n      pfTableProps.onCollapse = (event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data });\n    }\n\n    if (isSortable) {\n      pfTableProps.sortBy = sortBy;\n      pfTableProps.onSort = (event, index, direction, data) => this.onSort({ event, index, direction, data });\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n          {...pfTableProps}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: Node,\n *     isHeader: boolean, variant: string, className: string, rows: Array, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        onSort: PropTypes.func,\n        sortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)]),\n        title: PropTypes.node.isRequired\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.instanceOf(Date),\n          PropTypes.shape({\n            title: PropTypes.oneOfType([PropTypes.node, PropTypes.instanceOf(Date)]).isRequired\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","/**\n * RHSM response Error DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA = 'errors';\n\n/**\n * RHSM response Error DATA types.\n * Schema/map of expected Error data response properties.\n *\n * @type {{CODE: string, DETAIL: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_TYPES = {\n  CODE: 'code',\n  DETAIL: 'detail'\n};\n\n/**\n * RHSM response Error DATA CODE types.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response links type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS = 'links';\n\n/**\n * RHSM response LINKS type.\n * Schema/map of expected inventory LINKS response properties.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS_TYPES = {\n  FIRST: 'first',\n  LAST: 'last',\n  PREVIOUS: 'previous',\n  NEXT: 'next'\n};\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response META types.\n * Schema/map of expected META response properties.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count'\n};\n\n/**\n * RHSM response Capacity DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\n\n/**\n * RHSM response Capacity DATA types.\n * Schema/map of expected Capacity data response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string,\n *     HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response inventory DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA = 'data';\n\n/**\n * RHSM response inventory DATA types.\n * Schema/map of expected inventory DATA response properties.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, SUBSCRIPTION_ID: string,\n *     INVENTORY_ID: string, MEASUREMENT: string, ID: string, GUESTS: string, CLOUD_PROVIDER: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA_TYPES = {\n  CLOUD_PROVIDER: 'cloud_provider',\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  GUESTS: 'number_of_guests',\n  HARDWARE: 'hardware_type',\n  ID: 'insights_id',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets',\n  SUBSCRIPTION_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response inventory guests DATA types.\n * Schema/map of expected inventory guests DATA response properties.\n *\n * @type {{SUBSCRIPTION_ID: string, ID: string, NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES = {\n  ID: 'insights_id',\n  NAME: 'display_name',\n  SUBSCRIPTION_ID: 'subscription_manager_id',\n  LAST_SEEN: 'last_seen'\n};\n\n/**\n * RHSM response subscriptions inventory DATA types.\n *\n * @type {{UOM: string, PHYSICAL_CAPACITY: string, USAGE: string, UPCOMING_EVENT_TYPE: string,\n *     UPCOMING_EVENT_DATE: string, SUBSCRIPTION_NUMBERS: string, VIRTUAL_CAPACITY: string,\n *     TOTAL_CAPACITY: string, SKU: string, SERVICE_LEVEL: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES = {\n  SKU: 'sku',\n  PRODUCT_NAME: 'product_name',\n  SERVICE_LEVEL: 'service_level',\n  USAGE: 'usage',\n  SUBSCRIPTION_NUMBERS: 'subscription_numbers',\n  UPCOMING_EVENT_DATE: 'upcoming_event_date',\n  UPCOMING_EVENT_TYPE: 'upcoming_event_type',\n  PHYSICAL_CAPACITY: 'physical_capacity',\n  VIRTUAL_CAPACITY: 'virtual_capacity',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Reporting/Tally DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\n\n/**\n * RHSM response Reporting/Tally DATA types.\n * Schema/map of expected Reporting/Tally DATA response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, SOCKETS: string, CLOUD_CORES: string, HAS_DATA: string,\n *     PHYSICAL_SOCKETS: string, PHYSICAL_CORES: string, CLOUD_INSTANCES: string, DATE: string, CORE_HOURS: string,\n *     CLOUD_SOCKETS: string, HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string, HYPERVISOR_CORES: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORE_HOURS: 'core_hours',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM product id type values.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string,\n *     OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string}}\n */\nconst RHSM_API_PATH_ID_TYPES = {\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  OPENSHIFT: 'OpenShift Container Platform',\n  OPENSHIFT_METRICS: 'OpenShift-metrics',\n  OPENSHIFT_DEDICATED_METRICS: 'OpenShift-dedicated-metrics',\n  SATELLITE: 'Satellite',\n  SATELLITE_CAPSULE: 'Satellite Capsule',\n  SATELLITE_SERVER: 'Satellite Server'\n};\n\n/**\n * RHSM API query/search parameter of GRANULARITY type values.\n * Schema/map of expected query/search parameter granularity types.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, MEASUREMENT: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_SORT_TYPES = {\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  HARDWARE: 'hardware_type',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{UOM: string, PHYSICAL_CAPACITY: string, USAGE: string, UPCOMING_EVENT_DATE: string,\n *     VIRTUAL_CAPACITY: string, TOTAL_CAPACITY: string, SKU: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES = {\n  SKU: 'sku',\n  PRODUCT_NAME: 'product_name',\n  SERVICE_LEVEL: 'service_level',\n  USAGE: 'usage',\n  UPCOMING_EVENT_DATE: 'upcoming_event_date',\n  PHYSICAL_CAPACITY: 'physical_capacity',\n  VIRTUAL_CAPACITY: 'virtual_capacity',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\n/**\n * RHSM API query/search parameter SLA type values.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_QUERY_SLA_TYPES = {\n  PREMIUM: 'premium',\n  STANDARD: 'standard',\n  SELF: 'self-support',\n  NONE: ''\n};\n\n/**\n * RHSM API query/search parameter UOM type values.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_QUERY_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter USAGE type values.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_QUERY_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\n/**\n * RHSM API query/search parameter OPTIN type values.\n *\n * @type {{TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_SET_OPTIN_TYPES = {\n  CONDUIT_SYNC: 'enable_conduit_sync',\n  TALLY_REPORT: 'enable_tally_reporting',\n  TALLY_SYNC: 'enable_tally_sync'\n};\n\n/**\n * RHSM API query/search parameter CAPACITY type values.\n *\n * @type {{GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string}}\n */\nconst RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES = {\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  DIRECTION: 'dir',\n  DISPLAY_NAME: 'display_name_contains',\n  END_DATE: 'ending',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  START_DATE: 'beginning',\n  UOM: 'uom',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM API query/search parameter GUESTS INVENTORY type values.\n *\n * @type {{OFFSET: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES = {\n  LIMIT: 'limit',\n  OFFSET: 'offset'\n};\n\n/**\n * RHSM API query/search parameter SUBSCRIPTIONS INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string, SLA: string,\n *     LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES = {\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES\n};\n\n/**\n * RHSM API query/search parameter values.\n *\n * @type {{GRANULARITY: string, TALLY_SYNC: string, DIRECTION: string, END_DATE: string,\n *     SLA: string, START_DATE: string, LIMIT: string, UOM: string, TALLY_REPORT: string,\n *     USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_TYPES = {\n  ...RHSM_API_QUERY_SET_OPTIN_TYPES,\n  ...RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\n/**\n * RHSM API types.\n *\n * @type {{RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string,\n *     OFFSET: string, SLA: string, LIMIT: string}, RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES: {UOM: string,\n *     PHYSICAL_CAPACITY: string, USAGE: string, UPCOMING_EVENT_TYPE: string, UPCOMING_EVENT_DATE: string,\n *     SUBSCRIPTION_NUMBERS: string, VIRTUAL_CAPACITY: string, TOTAL_CAPACITY: string, SKU: string, SERVICE_LEVEL: string},\n *     RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES: {GENERIC: string, OPTIN: string}, RHSM_API_RESPONSE_INVENTORY_DATA: string,\n *     RHSM_API_RESPONSE_CAPACITY_DATA: string, RHSM_API_RESPONSE_ERROR_DATA_TYPES: {CODE: string, DETAIL: string},\n *     RHSM_API_RESPONSE_CAPACITY_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string},\n *     RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES: {UOM: string, PHYSICAL_CAPACITY: string, USAGE: string,\n *     UPCOMING_EVENT_DATE: string, VIRTUAL_CAPACITY: string, TOTAL_CAPACITY: string, SKU: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string}, RHSM_API_RESPONSE_META_TYPES: string, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string,\n *     QUARTERLY: string, DAILY: string, MONTHLY: string}, RHSM_API_QUERY_SORT_DIRECTION_TYPES: {ASCENDING: string,\n *     DESCENDING: string}, RHSM_API_RESPONSE_PRODUCTS_DATA: string, RHSM_API_QUERY_TYPES: {GRANULARITY: string,\n *     TALLY_SYNC: string, DIRECTION: string, END_DATE: string, SLA: string, START_DATE: string, LIMIT: string, UOM: string,\n *     TALLY_REPORT: string, USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string},\n *     RHSM_API_RESPONSE_LINKS: string, RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES: {OFFSET: string, LIMIT: string},\n *     RHSM_API_PATH_ID_TYPES: {RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string,\n *     OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string, RHEL_SERVER: string,\n *     RHEL_IBM_Z: string, RHEL_IBM_POWER: string}, RHSM_API_QUERY_SET_OPTIN_TYPES: {TALLY_SYNC: string, TALLY_REPORT: string,\n *     CONDUIT_SYNC: string}, RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string,\n *     PRODUCTION: string}, RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_SET_INVENTORY_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}, RHSM_API_QUERY_SORT_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string,\n *     SOCKETS: string, MEASUREMENT: string, LAST_SEEN: string, NAME: string},\n *     RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, SOCKETS: string,\n *     CLOUD_CORES: string, HAS_DATA: string, PHYSICAL_SOCKETS: string, PHYSICAL_CORES: string, CLOUD_INSTANCES: string,\n *     DATE: string, CORE_HOURS: string, CLOUD_SOCKETS: string, HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string,\n *     HYPERVISOR_CORES: string}, RHSM_API_QUERY_UOM_TYPES: {CORES: string, SOCKETS: string},\n *     RHSM_API_RESPONSE_LINKS_TYPES: string, RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES: {SUBSCRIPTION_ID: string, ID: string,\n *     NAME: string, LAST_SEEN: string}, RHSM_API_RESPONSE_ERROR_DATA: string, RHSM_API_RESPONSE_META: string,\n *     RHSM_API_RESPONSE_INVENTORY_DATA_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string,\n *     SUBSCRIPTION_ID: string, INVENTORY_ID: string, MEASUREMENT: string, ID: string, GUESTS: string, CLOUD_PROVIDER: string,\n *     LAST_SEEN: string, NAME: string}, RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string,\n *     END_DATE: string, SLA: string, START_DATE: string}}}\n */\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n","/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string, RESOURCE_DEFS: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\n/**\n * Platform API types.\n *\n * @type {{PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES: {USER: string},\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS: string, PLATFORM_API_RESPONSE_USER_IDENTITY: string,\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES: {ENTITLED: string},\n *     PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES: {ORG_ADMIN: string}}}\n */\nconst platformApiTypes = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformApiTypes as default,\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, Trans } from 'react-i18next';\nimport { useMount } from 'react-use';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string} translateKey\n * @param {string|Array} values A default string if the key can't be found. An array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @returns {string|Node}\n */\nconst translate = (translateKey, values = null, components) => {\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(translateKey, values, components);\n  }\n\n  if (components) {\n    return (\n      (i18next.store && <Trans i18nKey={translateKey} values={values} components={components} />) || (\n        <React.Fragment>t({translateKey})</React.Fragment>\n      )\n    );\n  }\n\n  return (i18next.store && i18next.t(translateKey, values)) || `t(${translateKey})`;\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {Node} Component\n * @returns {Node}\n */\nconst translateComponent = Component => {\n  const withTranslation = ({ ...props }) => (\n    <Component\n      {...props}\n      t={(i18next.store && translate) || helpers.noopTranslate}\n      i18n={(i18next.store && i18next) || helpers.noop}\n    />\n  );\n\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\n/**\n * Load I18n.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.fallbackLng\n * @param {string} props.loadPath\n * @param {string} props.locale\n * @returns {Node}\n */\nconst I18n = ({ children, fallbackLng, loadPath, locale }) => {\n  const [initialized, setInitialized] = useState(false);\n\n  /**\n   * Initialize i18next\n   */\n  useMount(async () => {\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: undefined,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      //\n    }\n\n    setInitialized(true);\n  });\n\n  /**\n   * Update locale.\n   */\n  useEffect(() => {\n    if (initialized) {\n      try {\n        i18next.changeLanguage(locale);\n      } catch (e) {\n        //\n      }\n    }\n  }, [initialized, locale]);\n\n  return (initialized && <React.Fragment>{children}</React.Fragment>) || <React.Fragment />;\n};\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: Node, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {Node|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {Node}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, icon: Node|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { connectRouter, reduxActions, reduxSelectors } from '../../redux';\nimport { rhsmApiTypes } from '../../types';\nimport { helpers } from '../../common';\nimport { Redirect, routerHelpers } from '../router/router';\nimport MessageView from '../messageView/messageView';\nimport { translate } from '../i18n/i18n';\n\n/**\n * An authentication pass-through component.\n *\n * @augments React.Component\n */\nclass Authentication extends Component {\n  appName = routerHelpers.appName;\n\n  removeListeners = helpers.noop;\n\n  async componentDidMount() {\n    const {\n      authorizeUser,\n      hideGlobalFilter,\n      history,\n      initializeChrome,\n      onNavigation,\n      session,\n      setAppName\n    } = this.props;\n    const { subscriptions: authorized } = session.authorized || {};\n\n    if (!authorized) {\n      await authorizeUser();\n    }\n\n    if (!helpers.DEV_MODE) {\n      initializeChrome();\n      setAppName(this.appName);\n      hideGlobalFilter();\n\n      const appNav = onNavigation(event => {\n        const { routeHref } = routerHelpers.getRouteConfig({ id: event.navId });\n        history.push(routeHref);\n      });\n\n      this.removeListeners = () => {\n        appNav();\n      };\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  /**\n   * Render authenticated children or messaging.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children, session, t } = this.props;\n    const { subscriptions: authorized } = session.authorized || {};\n\n    if (helpers.UI_DISABLED) {\n      return (\n        <MessageView>\n          <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n        </MessageView>\n      );\n    }\n\n    if (authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (session.errorCodes && session.errorCodes.includes(rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES.OPTIN)) ||\n      session.status === 418\n    ) {\n      if (helpers.TEST_MODE) {\n        return <React.Fragment>{session.status} redirect</React.Fragment>;\n      }\n      return <Redirect isRedirect route={routerHelpers.getErrorRoute.path} />;\n    }\n\n    return (\n      <MessageView>\n        <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n      </MessageView>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, t: Function,\n *     children: Node, initializeChrome: Function, session: object, history: object,\n *     hideGlobalFilter: Function}}\n */\nAuthentication.propTypes = {\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  hideGlobalFilter: PropTypes.func,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  initializeChrome: PropTypes.func,\n  onNavigation: PropTypes.func,\n  setAppName: PropTypes.func,\n  session: PropTypes.shape({\n    authorized: PropTypes.shape({\n      [routerHelpers.appName]: PropTypes.bool\n    }),\n    errorCodes: PropTypes.arrayOf(PropTypes.string),\n    pending: PropTypes.bool,\n    status: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, t: translate,\n *     initializeChrome: Function, session: {authorized: object, errorCodes: Array, pending: boolean,\n *     status: number}, hideGlobalFilter: Function}}\n */\nAuthentication.defaultProps = {\n  authorizeUser: helpers.noop,\n  hideGlobalFilter: helpers.noop,\n  initializeChrome: helpers.noop,\n  onNavigation: helpers.noop,\n  setAppName: helpers.noop,\n  session: {\n    authorized: {},\n    errorCodes: [],\n    pending: false,\n    status: null\n  },\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser()),\n  hideGlobalFilter: isHidden => dispatch(reduxActions.platform.hideGlobalFilter(isHidden)),\n  initializeChrome: () => dispatch(reduxActions.platform.initializeChrome()),\n  onNavigation: callback => dispatch(reduxActions.platform.onNavigation(callback)),\n  setAppName: name => dispatch(reduxActions.platform.setAppName(name))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.user.makeUserSession();\n\nconst ConnectedAuthentication = connectRouter(makeMapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router/router';\nimport Authentication from './authentication/authentication';\n\n/**\n * Application\n *\n * @augments React.Component\n */\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n    getLocale();\n  }\n\n  /**\n   * Render application.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <NotificationsPortal />\n        <Authentication>\n          <Router />\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{locale: object, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\n/**\n * Default props.\n *\n * @type {{locale: {}, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { baseName } from './components/router/routerHelpers';\nimport { store } from './redux';\nimport App from './components/app';\nimport './styles/index.scss';\nimport '@patternfly/react-styles/css/components/Select/select.css';\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter basename={baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(({ schema = {}, data, customResponseValue, keyPrefix: prefix }) => {\n    const isArray = Array.isArray(data);\n    const updatedData = (isArray && data) || (data && [data]) || [];\n    const [generatedSchema = {}] = setResponseSchemas([schema]);\n    const parsedResponse = [];\n\n    updatedData.forEach((value, index) => {\n      const generateReflectedData = ({ dataObj, keyPrefix = '', customValue = null, update = helpers.noop }) => {\n        const updatedDataObj = {};\n\n        Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n          const casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n          let val = dataObjValue;\n\n          if (typeof val === 'number') {\n            val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n          }\n\n          if (typeof customValue === 'function') {\n            updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n          } else {\n            updatedDataObj[casedDataObjKey] = val;\n          }\n        });\n\n        update(updatedDataObj);\n      };\n\n      generateReflectedData({\n        keyPrefix: prefix,\n        dataObj: { ...generatedSchema, ...value },\n        customValue: customResponseValue,\n        update: generatedData => parsedResponse.push(generatedData)\n      });\n    });\n\n    parsedResponses.push(parsedResponse);\n  });\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 400 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    delete updatedMeta.data;\n    delete updatedMeta.id;\n    delete updatedMeta.query;\n\n    return {\n      meta: { ...updatedMeta },\n      metaData: meta.data,\n      metaId: meta.id,\n      metaQuery: meta.query\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { platformApiTypes } from '../../types';\n\n/**\n * Modify actions' payload for privacy.\n *\n * @param {object} action\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeActionHeaders = ({ payload, ...action }) => {\n  if (payload) {\n    let updatedPayload = { ...payload, headers: {} };\n\n    if (Array.isArray(payload)) {\n      updatedPayload = payload.map(({ headers, ...obj }) => ({ ...obj, headers: {} }));\n    }\n\n    return { payload: updatedPayload, ...action };\n  }\n\n  return { ...action };\n};\n\n/**\n * Modify actions' payload data for privacy.\n *\n * @param {object} action\n * @param {string} action.type\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeData = ({ type, payload, ...action }) => {\n  const removeUserIdentity = obj => {\n    if (obj?.data?.user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]) {\n      return {\n        ...obj,\n        data: {\n          ...obj.data,\n          user: {\n            ...obj.data.user,\n            [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]: {\n              ...obj.data.user[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY],\n              [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]: {}\n            }\n          }\n        }\n      };\n    }\n\n    return undefined;\n  };\n\n  const updatedPayload = removeUserIdentity(payload) || payload;\n  const updatedAction = removeUserIdentity(action) || action;\n\n  if (updatedPayload) {\n    return { type, payload: updatedPayload, ...updatedAction };\n  }\n\n  return { type, ...updatedAction };\n};\n\n/**\n * Return existing sessionStorage log.\n *\n * @param {string} id\n * @param {number} limit\n * @returns {Array}\n */\nconst getActions = (id, limit) => {\n  const { sessionStorage } = window;\n  const item = sessionStorage.getItem(id);\n  let parsedItems = (item && (JSON.parse(item) || {})?.actions) || [];\n\n  if (parsedItems?.length && limit > 0) {\n    parsedItems = parsedItems.slice(limit * -1);\n  }\n\n  return parsedItems;\n};\n\n/**\n * Store actions against an id in sessionStorage.\n *\n * @param {object} action\n * @param {object} config\n * @param {number} config.id\n * @param {number} config.limit\n */\nconst recordAction = (action, { id, limit, ...config }) => {\n  const { navigator, sessionStorage } = window;\n  const items = getActions(id, limit) || [];\n  const priorItem = items[items.length - 1];\n  const updatedAction = sanitizeData(sanitizeActionHeaders(action));\n  const actionObj = {\n    diff: 0,\n    timestamp: Date.now(),\n    action: updatedAction\n  };\n\n  if (priorItem && priorItem.timestamp) {\n    actionObj.diff = actionObj.timestamp - priorItem.timestamp;\n  }\n\n  items.push(actionObj);\n  sessionStorage.setItem(\n    id,\n    JSON.stringify({\n      browser: navigator.userAgent,\n      timestamp: new Date().toLocaleString(),\n      ...config,\n      actions: items\n    })\n  );\n};\n\n/**\n * Expose settings and record middleware.\n *\n * @param {object} config\n * @returns {Function}\n */\nconst actionRecordMiddleware = (config = {}) => () => next => action => {\n  recordAction(action, {\n    id: 'actionRecordMiddleware/v1',\n    limit: 100,\n    ...config\n  });\n\n  return next(action);\n};\n\nexport { actionRecordMiddleware as default, actionRecordMiddleware };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { actionRecordMiddleware } from './actionRecordMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  actionRecordMiddleware({\n    id: process.env.REACT_APP_UI_LOGGER_ID,\n    app: { version: process.env.REACT_APP_UI_VERSION }\n  }),\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","const SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","const SET_INVENTORY_TAB = 'SET_INVENTORY_TAB';\n\n/**\n * Inventory action, reducer types.\n *\n * @type {{SET_INVENTORY_TAB: string}}\n */\nconst inventoryTypes = {\n  SET_INVENTORY_TAB\n};\n\nexport { inventoryTypes as default, inventoryTypes, SET_INVENTORY_TAB };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_GLOBAL_FILTER_HIDE = 'PLATFORM_GLOBAL_FILTER_HIDE';\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_GLOBAL_FILTER_HIDE: string, PLATFORM_INIT: string,\n *     PLATFORM_SET_NAV: string, PLATFORM_CLEAR_NOTIFICATIONS: string, PLATFORM_ADD_NOTIFICATION: string,\n *     PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n","import { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\nconst SET_QUERY_RESET_INVENTORY_LIST = 'SET_QUERY_RESET_INVENTORY_LIST';\n\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.END_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.END_DATE}`,\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.START_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.START_DATE}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\nconst SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DISPLAY_NAME}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\nconst SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES: object, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string,\n *     SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES: object, SET_QUERY_RESET_INVENTORY_LIST: string}}\n */\nconst queryTypes = {\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n","const GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\nconst GET_MESSAGE_REPORTS_RHSM = 'GET_MESSAGE_REPORTS_RHSM';\nconst GET_SUBSCRIPTIONS_INVENTORY_RHSM = 'GET_SUBSCRIPTIONS_INVENTORY_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_MESSAGE_REPORTS_RHSM: string,\n * GET_HOSTS_INVENTORY_GUESTS_RHSM: string, GET_SUBSCRIPTIONS_INVENTORY_RHSM: string,\n * GET_HOSTS_INVENTORY_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_AUTH: string, USER_LOCALE: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_AUTH,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { inventoryTypes } from './inventoryTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  inventory: inventoryTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  inventoryTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","const SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}}}\n */\nconst initialState = {\n  legend: {},\n  reportCapacity: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          ...action.legend\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [{ ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM }],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { inventoryTypes } from '../types';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{subscriptionsInventory: {}, tabs: {}, hostsInventory: {}, hostsGuests: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {},\n  subscriptionsInventory: {},\n  tabs: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system and subscriptions inventory to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inventoryTypes.SET_INVENTORY_TAB:\n      return reduxHelpers.setStateProp(\n        'tabs',\n        {\n          ...action.tabs\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n          { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM },\n          { ref: 'subscriptionsInventory', type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{report: {}}}\n */\nconst initialState = {\n  report: {}\n};\n\n/**\n * Generated daily observer/reducer for report to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst messagesReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [{ ref: 'report', type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM }],\n    state,\n    action\n  );\n\nmessagesReducer.initialState = initialState;\n\nexport { messagesReducer as default, initialState, messagesReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, userTypes } from '../types';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{session: {errorCodes: Array, locale: string}, optin: {}}}\n */\nconst initialState = {\n  optin: {},\n  session: {\n    errorCodes: [],\n    locale: null\n  }\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(\n          reduxHelpers.getDataFromResults(action),\n          [rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA],\n          []\n        );\n\n        return reduxHelpers.setStateProp(\n          'session',\n          {\n            error: true,\n            errorCodes: errorCodes.map(value => value[rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE]),\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            locale: state.session.locale,\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'session', type: userTypes.USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { routerHelpers } from '../../components/router/routerHelpers';\nimport { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphTallyQuery: {}, inventoryHostsQuery: {}, inventorySubscriptionsQuery: {}, query: {},\n *     inventoryGuestsQuery: {}}}\n */\nconst initialState = {\n  query: {},\n  graphTallyQuery: {},\n  inventoryGuestsQuery: {},\n  inventoryHostsQuery: {},\n  inventorySubscriptionsQuery: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST:\n      const updateResetQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n\n          delete productQuery[RHSM_API_QUERY_TYPES.DIRECTION];\n          delete productQuery[RHSM_API_QUERY_TYPES.SORT];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateResetQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateResetQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updateClearQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateClearQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateClearQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'graphTallyQuery',\n        {\n          [action.viewId]: {\n            ...state.graphTallyQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.START_DATE]: action[RHSM_API_QUERY_TYPES.START_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.END_DATE]: action[RHSM_API_QUERY_TYPES.END_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: action[RHSM_API_QUERY_TYPES.DISPLAY_NAME]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport messagesReducer from './messagesReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  messages: messagesReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  messagesReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","import _set from 'lodash/set';\nimport { helpers } from '../common';\nimport {\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES\n} from '../types/platformApiTypes';\n\n/**\n * Basic user authentication.\n *\n * @returns {Promise<void>}\n */\nconst getUser = async () => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE &&\n        _set(\n          {},\n          [\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n          ],\n          process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n        )) ||\n      (await insights.chrome.auth.getUser())\n    );\n  } catch (e) {\n    throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n  }\n};\n\n/**\n * FixMe: revert this back towards async/await\n * Removed because there appears to be some quirky behavior where permissions will not come through\n * unless the function, and/or await are specifically returned, i.e. \"return await insights.chrome...\".\n */\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @returns {Promise<void>}\n */\nconst getUserPermissions = appName => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE && [\n        {\n          [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_ONE\n        },\n        {\n          [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_TWO\n        }\n      ]) ||\n      insights.chrome.getUserPermissions(appName)\n    );\n  } catch (e) {\n    throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Disables the Platform's global filter display.\n *\n * @param {boolean} isHidden\n * @returns {Promise<*>}\n */\nconst hideGlobalFilter = async (isHidden = true) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.hideGlobalFilter(isHidden);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<void>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n// FixMe: Revert catch to throwing an error. Relaxed for development\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<void>}\n */\nconst setAppName = async (name = null) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.identifyApp(name);\n  } catch (e) {\n    const error = `{ identifyApp } = insights.chrome, ${e.message}`;\n    await Promise.reject(error);\n  }\n};\n\n// ToDo: Clean up, consider removing setNavigation, currently no longer used.\n/**\n * Set platform left hand navigation active item.\n *\n * @param {Array} data\n * @returns {*}\n */\nconst setNavigation = (data = []) => {\n  const { insights, location } = window;\n  try {\n    return insights.chrome.navigation(\n      data.map(item => ({\n        ...item,\n        active: item.id === location.pathname.split('/').slice(-1)[0]\n      }))\n    );\n  } catch (e) {\n    throw new Error(`{ navigation } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = {\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Hide platform global filter.\n *\n * @param {boolean} isHidden\n * @returns {{Function}}\n */\nconst hideGlobalFilter = isHidden => ({\n  type: platformTypes.PLATFORM_GLOBAL_FILTER_HIDE,\n  payload: platformServices.hideGlobalFilter(isHidden)\n});\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for handling the left-nav navigation active item.\n *\n * @param {object} data\n * @returns {Function}\n */\nconst setNavigation = data => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_SET_NAV\n  });\n  return platformServices.setNavigation(data);\n};\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import axios, { CancelToken } from 'axios';\nimport LruCache from 'lru-cache';\nimport { platformServices } from './platformServices';\n\n/**\n * Apply consistent service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {object}\n */\nconst cancelTokens = {};\n\n/**\n * Cache Axios service call responses.\n *\n * @type {object}\n */\nconst responseCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_AJAX_CACHE, 10),\n  max: 100,\n  updateAgeOnGet: true\n});\n\n/**\n * Call platform \"getUser\" auth method, and apply service config. Service configuration\n * includes the ability to cancel all and specific calls, and cache specific calls with\n * their success response only. The cache will refresh its timeout on continuous calls.\n * To reset it a user will either need to refresh the page or wait the \"maxAge\".\n *\n * @param {object} config\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n\n  const updatedConfig = { ...config };\n  const axiosInstance = axios.create();\n\n  if (updatedConfig.cancel === true) {\n    const cancelTokensId = `${updatedConfig.cancelId || ''}-${updatedConfig.url}`;\n\n    if (cancelTokens[cancelTokensId]) {\n      cancelTokens[cancelTokensId].cancel('cancelled request');\n    }\n\n    cancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = cancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  if (updatedConfig.cache === true) {\n    const sortedParams = Object.entries(updatedConfig.params).sort(([a], [b]) => a.localeCompare(b));\n    const cacheId = `${updatedConfig.url}-${JSON.stringify(sortedParams)}`;\n    const cachedResponse = responseCache.get(cacheId);\n\n    if (cachedResponse) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          ...cachedResponse,\n          status: 304,\n          statusText: 'Not Modified',\n          config: adapterConfig\n        });\n    }\n\n    axiosInstance.interceptors.response.use(response => {\n      responseCache.set(cacheId, response);\n      return response;\n    });\n\n    delete updatedConfig.cache;\n  }\n\n  return axiosInstance(serviceConfig(updatedConfig));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getApiVersion = (options = {}) => {\n  const { cache = false, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {string} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {string} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {object} links\n * @apiSuccess {object} meta\n * @apiSuccess {string} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {string} meta.product\n * - RHEL\n * @apiSuccess {number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 10\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000.057890\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"has_cloudigrade_data\": true,\n *           \"has_cloudigrade_mismatch\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.20\n *         },\n *         {\n *           \"date\": \"2020-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.15\n *         },\n *         {\n *           \"date\": \"2020-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.11\n *         },\n *         {\n *           \"date\": \"2020-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.32\n *         },\n *         {\n *           \"date\": \"2020-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.42\n *         },\n *         {\n *           \"date\": \"2020-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 999.06\n *         },\n *         {\n *           \"date\": \"2020-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200\n *         },\n *         {\n *           \"date\": \"2019-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200\n *         },\n *         {\n *           \"date\": \"2019-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 400\n *         },\n *         {\n *           \"date\": \"2019-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\"\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 500\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-123456789012\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.05,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 70,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6N\",\n *           \"cloud_provider\": \"AZURE\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.00,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"CLOUD\",\n *           \"measurement_type\": \"CLOUD\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6M\",\n *           \"cores\": 4,\n *           \"core_hours\": 1000.20,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 10,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"display_name\": \"dolor.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6L\",\n *           \"cores\": 4,\n *           \"core_hours\": 1001.60,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 1,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"display_name\": \"lorem.test.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YX\",\n *           \"cores\": 4,\n *           \"core_hours\": 999.60,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"display_name\": \"lorem.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YZ\",\n *           \"cores\": 0,\n *           \"core_hours\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"display_name\": \"lorem.another.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YA\",\n *           \"cores\": 0,\n *           \"core_hours\": 0.01,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-21T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YB\",\n *           \"cores\": 0,\n *           \"core_hours\": 999.61,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-22T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YC\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-23T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YD\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-24T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YEE\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-26T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YF\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-29T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 11\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = false, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', id),\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/subscriptions/products/:product_id Get RHSM subscriptions table/inventory data\n * @apiDescription Retrieve subscriptions table/inventory data.\n *\n * Reference [RHSM for subscriptions table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"sku\": \"RH00011\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscription_numbers\": [\"1234567890\", \"1234567890\", \"1234567890\"],\n *           \"upcoming_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"upcoming_event_type\": \"Subscription Begin\",\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\"\n *         },\n *         {\n *           \"sku\": \"RH00010\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server\",\n *           \"service_level\": \"Self-Support\",\n *           \"usage\": \"Production\",\n *           \"subscription_numbers\": [\"1234567890\", \"1234567890\", \"1234567890\"],\n *           \"upcoming_event_date\": \"2020-04-02T00:00:00Z\",\n *           \"upcoming_event_type\": \"Subscription Begin\",\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\"\n *         },\n *         {\n *           \"sku\": \"RH00009\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscription_numbers\": [\"1234567890\", \"1234567890\", \"1234567890\"],\n *           \"upcoming_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"upcoming_event_type\": \"Subscription End\",\n *           \"physical_capacity\": 2,\n *           \"virtual_capacity\": 2,\n *           \"total_capacity\": 4,\n *           \"uom\": \"Cores\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API subscriptions data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getSubscriptionsInventory = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_SUBSCRIPTIONS}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\nconst rhsmServices = {\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getSubscriptionsInventory\n};\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getSubscriptionsInventory\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsmServices';\n\n/**\n * Get a combined RHSM response from reporting and capacity.\n *\n * @param {string} id\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphReportsCapacity = (id = null, query = {}, options = {}) => dispatch => {\n  const { cancelId = 'graphReportsCapacity' } = options;\n\n  return dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n    payload: Promise.all([\n      rhsmServices.getGraphReports(id, query, { cancelId }),\n      rhsmServices.getGraphCapacity(id, query, { cancelId })\n    ]),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n};\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n    payload: rhsmServices.getHostsInventory(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n    payload: rhsmServices.getHostsInventoryGuests(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a RHSM response from message reporting.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getMessageReports = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM,\n    payload: rhsmServices.getGraphReports(id, query, { cancelId: 'messageReport' }),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a subscriptions response from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getSubscriptionsInventory = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM,\n    payload: rhsmServices.getSubscriptionsInventory(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActions = {\n  getGraphReportsCapacity,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n\nexport {\n  rhsmActions as default,\n  rhsmActions,\n  getGraphReportsCapacity,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { rbacConfig as permissions } from '../config';\nimport { getUser, getUserPermissions } from './platformServices';\nimport { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * Apply an emulated API response to the platforms getUser method.\n *\n * @returns {Promise<{data: {permissions: (void|*[]), user: void}, message: string, status: number}>}\n */\nconst authorizeUser = async () => {\n  const updatedPermissions = Object.keys(permissions);\n  let message = '{ auth.getUser, getUserPermissions } = insights.chrome';\n  let userData;\n  let userPermissions;\n\n  try {\n    userData = await getUser();\n\n    if (updatedPermissions.length) {\n      const allPermissions = await Promise.all(updatedPermissions.map(app => getUserPermissions(app)));\n\n      if (Array.isArray(allPermissions)) {\n        userPermissions = [...allPermissions.flat()];\n      }\n    } else {\n      userPermissions = await getUserPermissions();\n    }\n  } catch (e) {\n    message = e.message;\n  }\n\n  if (_isPlainObject(userData) && Object.keys(userData).length) {\n    return Promise.resolve({ data: { user: userData, permissions: userPermissions || [] }, message, status: 200 });\n  }\n\n  const emulatedErrorResponse = {\n    ...new Error(message),\n    message,\n    status: 418\n  };\n\n  return Promise.reject(emulatedErrorResponse);\n};\n\n/**\n * Return a platform locale value from a cookie.\n *\n * @private\n * @returns {{value: string, key: string | null}|null}\n */\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\n/**\n * Return platform locale.\n *\n * @returns {Promise<{data: void}>}\n */\nconst getLocale = () => {\n  const defaultLocale = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = (options = {}) => {\n  const { cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport {\n  userServices as default,\n  userServices,\n  authorizeUser,\n  getLocale,\n  logoutUser,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get an emulated API response from the platforms \"getUser\" method.\n *\n * @returns {Function}\n */\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userServices.authorizeUser()\n  });\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userServices.getLocale()\n});\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn = (query = {}) => dispatch =>\n  dispatch({\n    type: userTypes.UPDATE_USER_OPTIN,\n    payload: userServices.updateAccountOptIn(query),\n    meta: {\n      query,\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsErrorDescription'),\n          dismissable: true\n        },\n        fulfilled: {\n          variant: 'success',\n          title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsSuccessDescription'),\n          dismissable: true,\n          autoDismiss: false\n        }\n      }\n    }\n  });\n\nconst userActions = { authorizeUser, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport {\n  userActions as default,\n  userActions,\n  authorizeUser,\n  getLocale,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from './reduxHelpers';\n\n/**\n * Parse a query object against a schema for specific RHSM endpoints.\n *\n * @param {object} query\n * @param {object} queries\n * @returns {{graphTallyQuery: object, inventoryHostsQuery: object, inventorySubscriptionsQuery: object,\n *     query: object, inventoryGuestsQuery: object, toolbarQuery: object}}\n */\nconst parseRhsmQuery = (query = {}, queries = {}) => {\n  const { graphTallyQuery, inventoryGuestsQuery, inventoryHostsQuery, inventorySubscriptionsQuery } = queries;\n\n  const updatedGraphTallyQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES);\n  const updatedInventoryGuestsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES\n  );\n  const updatedInventoryHostsQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES);\n  const updatedInventorySubscriptionsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES\n  );\n\n  return {\n    query,\n    graphTallyQuery: { ...updatedGraphTallyQuery, ...graphTallyQuery },\n    inventoryGuestsQuery: { ...updatedInventoryGuestsQuery, ...inventoryGuestsQuery },\n    inventoryHostsQuery: { ...updatedInventoryHostsQuery, ...inventoryHostsQuery },\n    inventorySubscriptionsQuery: { ...updatedInventorySubscriptionsQuery, ...inventorySubscriptionsQuery },\n    toolbarQuery: query\n  };\n};\n\nconst apiQueries = {\n  parseRhsmQuery\n};\n\nexport { apiQueries as default, apiQueries };\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{data: {object}}}\n */\nconst selectorCache = { data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  report: state.messages?.report?.[props.productId],\n  viewId: props.viewId,\n  productId: props.productId\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => ({\n  ...props.query,\n  ...state.view?.query?.[props.productId],\n  ...state.view?.query?.[props.viewId]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{appMessages: {cloudigradeMismatch: boolean}}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (data, query = {}) => {\n  const { viewId = null, productId = null, report = {} } = data || {};\n  const appMessages = {\n    cloudigradeMismatch: false\n  };\n\n  const cache = (viewId && productId && selectorCache.data[`${viewId}_${productId}`]) || undefined;\n\n  Object.assign(appMessages, { ...cache });\n\n  // Scan Tally response for Cloud Meter flags\n  if (report.fulfilled && appMessages.cloudigradeMismatch !== true) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA]: reportData = [] } = report.data || {};\n\n    const cloudigradeMismatch = reportData\n      .reverse()\n      .find(\n        ({ [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]: mismatch }) =>\n          mismatch === true\n      );\n\n    appMessages.cloudigradeMismatch = cloudigradeMismatch !== undefined;\n\n    selectorCache.data[`${viewId}_${productId}`] = {\n      ...appMessages\n    };\n  }\n\n  return { appMessages, query };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{appMessages: {cloudigradeMismatch: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst appMessagesSelectors = {\n  appMessages: selector,\n  makeAppMessages: makeSelector\n};\n\nexport { appMessagesSelectors as default, appMessagesSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\nimport { rbacConfig as permissions } from '../../config';\nimport {\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES as APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES\n} from '../../types/platformApiTypes';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @returns {object}\n */\nconst statePropsFilter = state => ({\n  ...state.user?.session\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{session: {entitled: boolean, permissions: object, authorized: object, admin: boolean,\n *     error: boolean}}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter], response => {\n  const { error = false, fulfilled = false, data = {}, ...rest } = response || {};\n  const updatedSession = {\n    ...rest,\n    admin: false,\n    entitled: false,\n    error,\n    authorized: {},\n    permissions: {}\n  };\n\n  if (!error && fulfilled) {\n    const { user = {}, permissions: responsePermissions = [] } = data;\n\n    updatedSession.admin =\n      user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]?.[\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER\n      ]?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN] || false;\n\n    updatedSession.entitled =\n      user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]?.[APP_TYPES.SUBSCRIPTIONS]?.[\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED\n      ] || false;\n\n    // All permissions breakdown\n    responsePermissions.forEach(\n      ({\n        [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n        [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n      }) => {\n        const [app = '', resource, operation] = permission?.split(':') || [];\n\n        if (!updatedSession.permissions[app]) {\n          updatedSession.permissions[app] = {\n            all: false,\n            resources: {}\n          };\n        }\n\n        if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n          updatedSession.permissions[app].all = true;\n        }\n\n        if (!updatedSession.permissions[app].resources[resource]) {\n          updatedSession.permissions[app].resources[resource] = {};\n        }\n\n        updatedSession.permissions[app].resources[resource][operation] = definitions;\n      }\n    );\n\n    // Alias specific app permissions checks\n    Object.entries(permissions).forEach(([key, { permissions: resourcePermissions }]) => {\n      updatedSession.authorized[key] = updatedSession.permissions[key]?.all || false;\n\n      resourcePermissions.forEach(({ resource: res, operation: op }) => {\n        if (updatedSession.permissions[key]?.resources?.[res]?.[op]) {\n          updatedSession.authorized[key] = true;\n        }\n      });\n    });\n  }\n\n  return { session: updatedSession };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{session: {entitled: boolean, permissions: Array, authorized: boolean, admin: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst userSessionSelectors = {\n  userSession: selector,\n  makeUserSession: makeSelector\n};\n\nexport { userSessionSelectors as default, userSessionSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsGuests?.[props.id]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter], response => {\n  const { metaId, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    status: responseData.status\n  };\n\n  if (responseData.fulfilled) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [] } = responseData.data || {};\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n      data: listData,\n      customResponseValue: customInventoryValue\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    updatedResponseData.listData = updatedListData;\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst guestsListSelectors = {\n  guestsList: selector,\n  makeGuestsList: makeSelector\n};\n\nexport { guestsListSelectors as default, guestsListSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport LruCache from 'lru-cache';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.graph?.reportCapacity?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { graphTallyQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      graphTallyQuery: { ...state.view?.graphTallyQuery?.[props.viewId] }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    graphData: {},\n    query,\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, responseMetaQuery)) {\n    const [report, capacity] = responseData.data;\n    const reportData = report?.[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA] || [];\n    const capacityData = capacity?.[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA] || [];\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Reporting graph entries\n    const customReportValue = (data, key, presetData) => ({\n      ...presetData,\n      hasData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_DATA],\n      hasCloudigradeData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_DATA],\n      hasCloudigradeMismatch: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]\n    });\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y,\n      hasInfinite: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE]\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment.utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE]).startOf('day').toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY =\n                (Number.isInteger(graphDataObj[graphDataObjKey]) &&\n                  Number.parseInt(graphDataObj[graphDataObjKey], 10)) ||\n                Number.parseFloat(Number.parseFloat(graphDataObj[graphDataObjKey]).toFixed(2));\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value }, customValue: customReportValue });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst graphCardSelectors = {\n  graphCard: selector,\n  makeGraphCard: makeSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport LruCache from 'lru-cache';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventoryHostsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventoryHostsQuery: {\n        ...state.view?.inventoryHostsQuery?.[props.productId],\n        ...state.view?.inventoryHostsQuery?.[props.viewId]\n      }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Note: We use an in-memory cache to provide the user a pleasant UX experience. To\n * aid in that UX we need \"pending\" to fire in scenarios that are not loaded in-memory. Because\n * we load the cache first there are scenarios where the previous XHR call is still in state\n * when a subsequent fulfilled XHR call comes through. Without the _isEqual(query, metaQuery) check\n * the overlap of the prior fulfilled call interferes with the pending of the subsequent call.\n */\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, metaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.CLOUD_PROVIDER:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.HARDWARE:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.MEASUREMENT:\n          return value?.toLowerCase() || null;\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst inventoryListSelectors = {\n  inventoryList: selector,\n  makeInventoryList: makeSelector\n};\n\nexport { inventoryListSelectors as default, inventoryListSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport LruCache from 'lru-cache';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * ToDo: Consider consolidating inventory selectors, and/or create API specific selectors, i.e. RHSM, etc\n * Breaking out the inventory selectors is a temporary solution until the API is finalized. Aspects\n * of the caching and applying the API schemas is now consistent enough to allow for grouping/refinement.\n */\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.subscriptionsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventorySubscriptionsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventorySubscriptionsQuery: {\n        ...state.view?.inventorySubscriptionsQuery?.[props.productId],\n        ...state.view?.inventorySubscriptionsQuery?.[props.viewId]\n      }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, metaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES.UPCOMING_EVENT_DATE:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst subscriptionsListSelectors = {\n  subscriptionsList: selector,\n  makeSubscriptionsList: makeSelector\n};\n\nexport { subscriptionsListSelectors as default, subscriptionsListSelectors, selector, makeSelector };\n","import appMessagesSelectors from './appMessagesSelectors';\nimport guestsListSelectors from './guestsListSelectors';\nimport graphCardSelectors from './graphCardSelectors';\nimport inventoryListSelectors from './inventoryListSelectors';\nimport subscriptionsListSelectors from './subscriptionsListSelectors';\nimport userSelectors from './userSelectors';\n\nconst reduxSelectors = {\n  appMessages: appMessagesSelectors,\n  guestsList: guestsListSelectors,\n  graphCard: graphCardSelectors,\n  inventoryList: inventoryListSelectors,\n  subscriptionsList: subscriptionsListSelectors,\n  user: userSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect, useDispatch, useSelector as UseSelector, shallowEqual } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxHelpers, apiQueries } from './common';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\nimport { helpers } from '../common';\n\n/**\n * Wrapper for applying Router Dom withRouter and Redux connect.\n *\n * @param {Function} mapStateToProps\n * @param {Function} mapDispatchToProps\n * @returns {Function}\n */\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connect(mapStateToProps, mapDispatchToProps)(component));\n\n/**\n * Wrapper for Redux hook, useSelector. Applies test mode and a fallback value.\n *\n * @param {Function} selector\n * @param {*} value\n * @param {object} options\n * @returns {*}\n */\nconst useSelector = (selector, value = null, options = {}) => {\n  if (helpers.TEST_MODE) {\n    return value;\n  }\n\n  return UseSelector(selector, options.equality) ?? value;\n};\n\nexport {\n  apiQueries,\n  connect,\n  connectRouter,\n  reduxActions,\n  reduxHelpers,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  shallowEqual,\n  store,\n  useDispatch,\n  useSelector\n};\n","import path from 'path';\nimport { helpers } from '../../common/helpers';\nimport { routesConfig } from '../../config';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformLandingRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/');\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformModalRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return an assumed route baseName directory based on existing app name.\n * App name is defined in dotenv and package.json/insights.appname\n * [environment]/[OPTIONAL]/[OPTIONAL]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  `${pathName.split(applicationName)[0]}${applicationName}`;\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName = (helpers.TEST_MODE && '/') || (helpers.DEV_MODE && '/') || dynamicBaseName();\n\n/**\n * Return a base path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBasePath = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  pathName.split(applicationName)[0];\n\n/**\n * App basePath.\n *\n * @type {string}\n */\nconst basePath = (helpers.TEST_MODE && '/') || (helpers.DEV_MODE && '/') || dynamicBasePath();\n\n/**\n * Generate product groups for applying query filter resets.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateProductGroups = (config = routesConfig) => {\n  const productGroups = {};\n\n  config.forEach(({ pathParameter, productParameter }) => {\n    const viewIds = ((Array.isArray(productParameter) && productParameter) || [productParameter]).map(\n      id => (id && `view${id}`) || id\n    );\n\n    viewIds.forEach((id, index) => {\n      if (id) {\n        if (!productGroups[id]) {\n          productGroups[id] = [];\n        }\n\n        if (pathParameter) {\n          productGroups[id].push((Array.isArray(pathParameter) && pathParameter?.[index]) || pathParameter);\n        }\n      }\n    });\n  });\n\n  return productGroups;\n};\n\n/**\n * Reference for products grouped by view.\n */\nconst productGroups = generateProductGroups();\n\n/**\n * Generate routes to be consumed by router.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateRoutes = (config = routesConfig) =>\n  config.map(({ activateOnError, component, disabled, id, path: routePath, redirect }) => ({\n    activateOnError,\n    component,\n    disabled,\n    exact: true,\n    id,\n    path: routePath,\n    redirect\n  }));\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = generateRoutes();\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Match route config entries by path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {Array} params.config\n * @returns {{configs: Array, configFirstMatch: object, configsById: object}}\n */\nconst getRouteConfigByPath = ({ pathName = dynamicBasePath(), config = routesConfig } = {}) => {\n  const basePathDirs = pathName.split('/').filter(str => str.length > 0);\n  const configs = [];\n  const allConfigs = [];\n  const configsById = {};\n  const allConfigsById = {};\n\n  const findConfig = dir => {\n    config.forEach(({ id, path: configPath, pathParameter, productParameter, aliases, ...configItem }) => {\n      const updatedConfigItem = {\n        aliases,\n        id,\n        path: configPath,\n        pathParameter,\n        productParameter,\n        ...configItem\n      };\n\n      if (\n        dir &&\n        (new RegExp(dir, 'i').test(configPath) ||\n          new RegExp(dir, 'i').test(productParameter?.toString()) ||\n          new RegExp(dir, 'i').test(pathParameter?.toString()) ||\n          new RegExp(dir, 'i').test(aliases?.toString()))\n      ) {\n        if (!configsById[id]) {\n          configsById[id] = { ...updatedConfigItem };\n          configs.push({ ...updatedConfigItem });\n        }\n      }\n\n      if (!allConfigsById[id]) {\n        allConfigsById[id] = { ...updatedConfigItem };\n        allConfigs.push({ ...updatedConfigItem });\n      }\n    });\n  };\n\n  if (basePathDirs.length) {\n    basePathDirs.forEach(dir => {\n      if (dir) {\n        const decodedDir = window.decodeURI(dir);\n        findConfig(decodedDir);\n      }\n    });\n  } else {\n    findConfig();\n  }\n\n  return { allConfigs, allConfigsById, configs, configsById, firstMatch: configs?.[0] };\n};\n\n/**\n * Return a route config object.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathName\n * @param {boolean} params.returnDefault\n * @param {Array} params.config\n * @returns {object}\n */\nconst getRouteConfig = ({ id = null, pathName, returnDefault = false, config = routesConfig } = {}) => {\n  let navRouteItem;\n\n  if (id) {\n    navRouteItem = config.find(item => item.id === id);\n  }\n\n  if ((!navRouteItem && pathName) || (!navRouteItem && !pathName && !returnDefault)) {\n    navRouteItem = getRouteConfigByPath({ pathName, config }).firstMatch;\n  }\n\n  if (!navRouteItem && returnDefault) {\n    navRouteItem = config.find(item => item.default === true);\n  }\n\n  if (navRouteItem) {\n    const { search = '', hash = '' } = window.location;\n    navRouteItem.routeHref = `${navRouteItem.path}${search}${hash}`;\n\n    const { pathParameter, productParameter } = navRouteItem;\n    navRouteItem.pathParameter = (Array.isArray(pathParameter) && pathParameter[0]) || pathParameter;\n    navRouteItem.productParameter = (Array.isArray(productParameter) && productParameter[0]) || productParameter;\n    navRouteItem.viewParameter =\n      (productParameter && `view${(Array.isArray(productParameter) && productParameter[0]) || productParameter}`) ||\n      productParameter;\n  }\n\n  return { ...(navRouteItem || {}) };\n};\n\nconst routerHelpers = {\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n","import React from 'react';\nimport { RHSM_API_PATH_ID_TYPES } from '../types/rhsmApiTypes';\nimport { helpers } from '../common';\n\nconst routes = [\n  {\n    id: 'rhel',\n    path: '/rhel',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    productParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['insights'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: React.lazy(() => import('../components/productView/productViewRhel'))\n  },\n  {\n    id: 'rhel-arm',\n    path: '/rhel-arm',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_ARM],\n    productParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: React.lazy(() => import('../components/productView/productViewRhel'))\n  },\n  {\n    id: 'rhel-ibmpower',\n    path: '/rhel-ibmpower',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER],\n    productParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: React.lazy(() => import('../components/productView/productViewRhel'))\n  },\n  {\n    id: 'rhel-ibmz',\n    path: '/rhel-ibmz',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z],\n    productParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: React.lazy(() => import('../components/productView/productViewRhel'))\n  },\n  {\n    id: 'rhel-x86',\n    path: '/rhel-x86',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_X86],\n    productParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: React.lazy(() => import('../components/productView/productViewRhel'))\n  },\n  {\n    id: 'openshift-container',\n    path: '/openshift-container',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.OPENSHIFT, RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS],\n    productParameter: [RHSM_API_PATH_ID_TYPES.OPENSHIFT, RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: React.lazy(() => import('../components/productView/productViewOpenShiftContainer'))\n  },\n  {\n    id: 'openshift-dedicated',\n    path: '/openshift-dedicated',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS],\n    productParameter: [RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: React.lazy(() => import('../components/productView/productViewOpenShiftDedicated'))\n  },\n  {\n    id: 'satellite',\n    path: '/satellite',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE],\n    productParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: React.lazy(() => import('../components/productView/productViewSatellite'))\n  },\n  {\n    id: 'satellite-capsule',\n    path: '/satellite-capsule',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE_CAPSULE],\n    productParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: React.lazy(() => import('../components/productView/productViewSatellite'))\n  },\n  {\n    id: 'satellite-server',\n    path: '/satellite-server',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE_SERVER],\n    productParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: React.lazy(() => import('../components/productView/productViewSatellite'))\n  },\n  {\n    id: 'optin',\n    path: '/optin',\n    pathParameter: null,\n    productParameter: null,\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: React.lazy(() => import('../components/optinView/optinView'))\n  },\n  {\n    id: 'missing',\n    path: '/',\n    pathParameter: null,\n    productParameter: null,\n    redirect: '/',\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: true,\n    component: React.lazy(() => import('../components/productView/productViewMissing'))\n  }\n];\n\nexport { routes as default, routes };\n","import { platformApiTypes } from './platformApiTypes';\nimport { rhsmApiTypes } from './rhsmApiTypes';\n\nconst apiTypes = {\n  platformApi: platformApiTypes,\n  rhsmApi: rhsmApiTypes\n};\n\nexport { apiTypes as default, apiTypes, platformApiTypes, rhsmApiTypes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader as RcsPageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Flex, FlexItem, Label as PfLabel } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {boolean} props.includeTour\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst PageHeader = ({ children, includeTour, productLabel, t }) => (\n  <RcsPageHeader>\n    <Flex justifyContent={{ sm: 'justifyContentSpaceBetween' }}>\n      <FlexItem>\n        <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n      </FlexItem>\n      <FlexItem>\n        {includeTour && (\n          <Button variant=\"link\" className=\"uxui-curiosity__button-tour\" isInline>\n            <PfLabel color=\"blue\">{t('curiosity-optin.buttonTour')}</PfLabel>\n          </Button>\n        )}\n      </FlexItem>\n    </Flex>\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, includeTour: boolean, productLabel: string, t: Function}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  includeTour: PropTypes.bool,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{includeTour: boolean, productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  includeTour: false,\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { helpers } from '../../common';\n\n/**\n * Render page columns based on children.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageColumns = ({ children, className }) => (\n  <Flex\n    alignItems={{ sm: 'alignItemsStretch' }}\n    spaceItems={{ sm: 'spaceItemsNone' }}\n    className={`curiosity-page-columns ${className}`}\n  >\n    {React.Children.toArray(children)\n      .filter(child => React.isValidElement(child))\n      .map(child => (\n        <FlexItem\n          key={(child.key && `page-column-${child.key}`) || helpers.generateId()}\n          grow={{ sm: 'grow' }}\n          className=\"curiosity-page-columns-column\"\n        >\n          {child}\n        </FlexItem>\n      ))}\n  </Flex>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageColumns.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageColumns.defaultProps = {\n  className: ''\n};\n\nexport { PageColumns as default, PageColumns };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageMessages = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-messages ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageMessages.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageMessages.defaultProps = {\n  className: ''\n};\n\nexport { PageMessages as default, PageMessages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageSection = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-section ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageSection.defaultProps = {\n  className: ''\n};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageToolbar = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-toolbar ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageToolbar.defaultProps = {\n  className: ''\n};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageColumns } from './pageColumns';\nimport { PageMessages } from './pageMessages';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageLayout = ({ children, className }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageMessages)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className={`curiosity ${className}`}>\n      {React.Children.toArray(children).filter(\n        child => child.type !== PageHeader && child.type !== PageMessages && child.type !== PageToolbar\n      )}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageLayout.defaultProps = {\n  className: ''\n};\n\nexport { PageLayout as default, PageLayout, PageColumns, PageHeader, PageMessages, PageSection, PageToolbar };\n"],"sourceRoot":""}
{"version":3,"sources":["components/pagination/paginationHelpers.js","../../../../../../src/components/Table/utils/decorators/wrappable.tsx","components/inventoryList/inventoryListHelpers.js","components/minHeight/minHeight.js","components/pagination/pagination.js","components/inventorySubscriptions/inventorySubscriptions.js","../node_modules/@patternfly/react-styles/css/layouts/Bullseye/bullseye.js","../../../../../src/components/Card/CardHeader.tsx","../../../../../src/components/Card/CardFooter.tsx","../../../../../src/components/Card/CardActions.tsx","../../../../../src/layouts/Bullseye/Bullseye.tsx","../node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","../../../../../src/helpers/GenerateId/GenerateId.ts"],"names":["calculateOffsetFromPage","page","perPage","calculatePageFromOffset","offset","isLastPage","itemCount","Math","ceil","paginationHelpers","applySortFilters","filter","onSort","query","id","updatedFilter","hasSort","sortActive","RHSM_API_QUERY_TYPES","SORT","_camelCase","sortDirection","DIRECTION","SORT_DIRECTION_TYPES","DESCENDING","SortByDirection","desc","asc","isSortDefault","sortDefaultInitialDirection","applyWrappableFilters","Array","isArray","transforms","push","wrappable","parseInventoryFilters","filters","map","isSortable","Object","assign","isWrappable","parseRowCellsListData","cellData","session","updatedColumnHeaders","updatedCells","allCells","entries","forEach","key","value","title","translate","context","length","headerUpdated","cellUpdated","cell","cellWidth","header","React","isValidElement","concat","PfCellWidth","obj","columnHeaders","cells","data","inventoryListHelpers","MinHeight","containerRef","createRef","innerContainerRef","updatedContainerWidth","resizeObserver","helpers","noop","onResizeContainer","updateOnResize","props","clientWidth","current","setMinHeight","this","window","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","children","className","ref","Component","defaultProps","Pagination","dropDirection","isDisabled","isCompact","onPage","onPerPage","variant","onSetPage","event","limit","onPerPageSelect","InventorySubscriptions","onColumnSort","updatedDirection","direction","productId","updatedSortColumn","values","SORT_TYPES","find","ASCENDING","store","dispatch","type","reduxTypes","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","viewId","DEV_MODE","REVIEW_MODE","console","warn","OFFSET","LIMIT","onUpdateInventoryData","getSubscriptionsInventory","prevProps","_isEqual","filterInventoryData","listData","updatedRows","borders","TableVariant","compact","rows","error","fulfilled","pending","perPageDefault","t","updatedPerPage","updatedOffset","minHeightContentRefreshKey","aria-hidden","tableProps","colCount","keys","colWidth","rowCount","renderTable","isFooter","UI_DISABLED_TABLE_SUBSCRIPTIONS","makeMapStateToProps","reduxSelectors","subscriptionsList","makeSubscriptionsList","ConnectedInventorySubscriptions","connect","reduxActions","rhsm","exports","__esModule","require","default","TableToolbar","_ref","results","selected","_objectWithoutProperties","tableToolbarClasses","classNames","_defineProperty","createElement","Fragment","Toolbar","_extends","generateCount","propTypes","bool","number","any","string","GenerateId"],"mappings":"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","file":"static/js/17.31455b4f.chunk.js","sourcesContent":["/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n","import styles from '@patternfly/react-styles/css/components/Table/table';\nexport const breakWord = () => ({\n    className: styles.modifiers.breakWord\n});\nexport const fitContent = () => ({\n    className: styles.modifiers.fitContent\n});\nexport const nowrap = () => ({\n    className: styles.modifiers.nowrap\n});\nexport const truncate = () => ({\n    className: styles.modifiers.truncate\n});\nexport const wrappable = () => ({\n    className: styles.modifiers.wrap\n});\n//# sourceMappingURL=wrappable.js.map","import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Apply sort filter to filters.\n *\n * @param {object} params\n * @param {{ onSort: Function, sortActive: boolean, sortDirection: string, isSortDefault: boolean,\n *     sortDefaultInitialDirection: string }} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {object}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} }) => {\n  const { id } = filter;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === id\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  if (\n    hasSort &&\n    !updatedFilter.sortActive &&\n    !query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    updatedFilter.isSortDefault === true\n  ) {\n    updatedFilter.sortActive = true;\n\n    if (updatedFilter.sortDefaultInitialDirection) {\n      updatedFilter.sortDirection = updatedFilter.sortDefaultInitialDirection;\n    }\n  }\n\n  return updatedFilter;\n};\n\nconst applyWrappableFilters = ({ filter = {} }) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Apply additional properties to filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {Array}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} }) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.cellData\n * @param {object} params.session\n * @returns {{columnHeaders: Array, cells: Array, data: object}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, session = {} }) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value]) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value);\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    filters.forEach(({ id, cell, cellWidth, header, onSort, sortActive, sortDirection, transforms }) => {\n      let headerUpdated;\n      let cellUpdated;\n\n      if (allCells[id]) {\n        headerUpdated = allCells[id]?.title ?? id;\n        cellUpdated = allCells[id]?.value ?? '';\n      } else if (id) {\n        headerUpdated = translate('curiosity-inventory.header', { context: id });\n        cellUpdated = '';\n      }\n\n      // set table header cell filter params\n      if (header) {\n        headerUpdated = (typeof header === 'function' && header({ ...allCells })) || header;\n      }\n\n      if (\n        typeof headerUpdated === 'string' ||\n        typeof headerUpdated === 'number' ||\n        React.isValidElement(headerUpdated)\n      ) {\n        headerUpdated = {\n          title: headerUpdated\n        };\n      }\n\n      if (headerUpdated) {\n        headerUpdated.transforms = [];\n\n        if (Array.isArray(transforms)) {\n          headerUpdated.transforms = headerUpdated.transforms.concat([...transforms]);\n        }\n\n        if (typeof cellWidth === 'number') {\n          headerUpdated.transforms.push(PfCellWidth(cellWidth));\n        }\n      }\n\n      if (typeof onSort === 'function') {\n        headerUpdated = {\n          ...headerUpdated,\n          onSort: obj => onSort({ ...allCells }, { ...obj, id }),\n          sortActive,\n          sortDirection\n        };\n      }\n\n      // set table row cell filter params\n      if (cell) {\n        cellUpdated = (typeof cell === 'function' && cell({ ...allCells }, { ...session })) || cell;\n      }\n\n      if (typeof cellUpdated === 'string' || typeof cellUpdated === 'number' || React.isValidElement(cellUpdated)) {\n        cellUpdated = {\n          title: cellUpdated\n        };\n      }\n\n      updatedColumnHeaders.push(headerUpdated);\n      updatedCells.push(cellUpdated);\n    });\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryListHelpers = {\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryListHelpers as default,\n  inventoryListHelpers,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A subscriptions system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventorySubscriptions extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getSubscriptionsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getSubscriptionsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterInventoryData, listData, query, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n            <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter\n            className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n            aria-hidden={error || !itemCount || false}\n          >\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, listData: Array, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, error: boolean, getSubscriptionsInventory: Function, itemCount: number,\n *     t: Function, filterInventoryData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventorySubscriptions.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getSubscriptionsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, filterInventoryData: Array, listData: Array, session: object, pending: boolean,\n *     fulfilled: boolean, perPageDefault: number, isDisabled: boolean, error: boolean,\n *     getSubscriptionsInventory: Function, itemCount: number}}\n */\nInventorySubscriptions.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterInventoryData: [],\n  getSubscriptionsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getSubscriptionsInventory: (id, query) => dispatch(reduxActions.rhsm.getSubscriptionsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.subscriptionsList.makeSubscriptionsList();\n\nconst ConnectedInventorySubscriptions = connect(makeMapStateToProps, mapDispatchToProps)(InventorySubscriptions);\n\nexport { ConnectedInventorySubscriptions as default, ConnectedInventorySubscriptions, InventorySubscriptions };\n","\"use strict\";\nexports.__esModule = true;\nrequire('./bullseye.css');\nexports.default = {\n  \"bullseye\": \"pf-l-bullseye\"\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { CardContext } from './Card';\nimport { Button } from '../Button';\nimport AngleRightIcon from \"@patternfly/react-icons/dist/esm/icons/angle-right-icon\";\nexport const CardHeader = (_a) => {\n    var { children = null, className = '', id, onExpand, toggleButtonProps, isToggleRightAligned } = _a, props = __rest(_a, [\"children\", \"className\", \"id\", \"onExpand\", \"toggleButtonProps\", \"isToggleRightAligned\"]);\n    return (React.createElement(CardContext.Consumer, null, ({ cardId }) => {\n        const cardHeaderToggle = (React.createElement(\"div\", { className: css(styles.cardHeaderToggle) },\n            React.createElement(Button, Object.assign({ variant: \"plain\", type: \"button\", onClick: evt => {\n                    onExpand(evt, cardId);\n                } }, toggleButtonProps),\n                React.createElement(\"span\", { className: css(styles.cardHeaderToggleIcon) },\n                    React.createElement(AngleRightIcon, { \"aria-hidden\": \"true\" })))));\n        return (React.createElement(\"div\", Object.assign({ className: css(styles.cardHeader, isToggleRightAligned && styles.modifiers.toggleRight, className), id: id }, props),\n            onExpand && !isToggleRightAligned && cardHeaderToggle,\n            children,\n            onExpand && isToggleRightAligned && cardHeaderToggle));\n    }));\n};\nCardHeader.displayName = 'CardHeader';\n//# sourceMappingURL=CardHeader.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nimport { css } from '@patternfly/react-styles';\nexport const CardFooter = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.cardFooter, className) }, props), children));\n};\nCardFooter.displayName = 'CardFooter';\n//# sourceMappingURL=CardFooter.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Card/card';\nexport const CardActions = (_a) => {\n    var { children = null, className = '' } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.cardActions, className) }, props), children));\n};\nCardActions.displayName = 'CardActions';\n//# sourceMappingURL=CardActions.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/layouts/Bullseye/bullseye';\nexport const Bullseye = (_a) => {\n    var { children = null, className = '', component = 'div' } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.bullseye, className) }, props), children));\n};\nBullseye.displayName = 'Bullseye';\n//# sourceMappingURL=Bullseye.js.map","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport { Toolbar } from \"@patternfly/react-core/dist/esm/components/Toolbar/Toolbar.js\";\nimport classNames from 'classnames';\nimport \"../../TableToolbar/./TableToolbar.css\";\n\nfunction generateCount(results) {\n  if (results > 1 || results < 1) {\n    return \"\".concat(results, \" Results\");\n  } else {\n    return \"\".concat(results, \" Result\");\n  }\n}\n\nvar TableToolbar = function TableToolbar(_ref) {\n  var isFooter = _ref.isFooter,\n      results = _ref.results,\n      className = _ref.className,\n      selected = _ref.selected,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\"]);\n\n  var tableToolbarClasses = classNames('ins-c-table__toolbar', _defineProperty({}, \"ins-m-footer\", isFooter), className);\n  return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(Toolbar, _extends({\n    className: tableToolbarClasses\n  }, props), \" \", children), (results >= 0 || selected >= 0) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ins-c-table__toolbar-results\"\n  }, results >= 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ins-c-table__toolbar-results-count\"\n  }, \" \", generateCount(results), \" \"), selected >= 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ins-c-table__toolbar-results-selected\"\n  }, \" \", selected, \" Selected \")));\n};\n\nexport default TableToolbar;\nTableToolbar.propTypes = {\n  isFooter: propTypes.bool,\n  results: propTypes.number,\n  children: propTypes.any,\n  className: propTypes.string,\n  selected: propTypes.number\n};\nTableToolbar.defaultProps = {\n  isFooter: false\n};","/** This Component can be used to wrap a functional component in order to generate a random ID\n * Example of how to use this component\n *\n * const Component = ({id}: {id: string}) => (\n *  <GenerateId>{randomId => (\n *     <div id={id || randomId}>\n *       div with random ID\n *     </div>\n *   )}\n *  </GenerateId>\n *  );\n */\nimport * as React from 'react';\nlet currentId = 0;\nexport class GenerateId extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.id = `${this.props.prefix}${currentId++}`;\n    }\n    render() {\n        return this.props.children(this.id);\n    }\n}\nGenerateId.displayName = 'GenerateId';\nGenerateId.defaultProps = {\n    prefix: 'pf-random-id-'\n};\n//# sourceMappingURL=GenerateId.js.map"],"sourceRoot":""}
{"version":3,"sources":["types/index.js","components/table/tableSkeleton.js","components/loader/loader.js","common/dateHelpers.js","types/platformApiTypes.js","common/helpers.js","components/table/tableEmpty.js","components/table/table.js","types/rhsmApiTypes.js","components/i18n/i18n.js","redux/common/reduxHelpers.js","redux/middleware/index.js","redux/middleware/statusMiddleware.js","redux/middleware/multiActionMiddleware.js","redux/types/appTypes.js","redux/types/graphTypes.js","redux/types/inventoryTypes.js","redux/types/platformTypes.js","redux/types/queryTypes.js","redux/types/rhsmTypes.js","redux/types/userTypes.js","redux/types/index.js","redux/types/toolbarTypes.js","redux/reducers/graphReducer.js","redux/reducers/inventoryReducer.js","redux/reducers/messagesReducer.js","redux/reducers/toolbarReducer.js","redux/reducers/userReducer.js","redux/reducers/viewReducer.js","redux/reducers/index.js","redux/store.js","services/platformServices.js","redux/actions/platformActions.js","services/config.js","services/rhsmServices.js","redux/actions/rhsmActions.js","services/userServices.js","redux/actions/index.js","redux/actions/userActions.js","redux/common/apiQueries.js","redux/selectors/appMessagesSelectors.js","redux/selectors/userSelectors.js","redux/selectors/guestsListSelectors.js","redux/selectors/graphCardSelectors.js","redux/selectors/inventoryListSelectors.js","redux/selectors/subscriptionsListSelectors.js","redux/selectors/viewSelectors.js","redux/selectors/index.js","redux/index.js","components/router/routerConfig.js","components/router/routerHelpers.js","components/router/redirect.js","components/router/router.js","components/messageView/messageView.js","components/authentication/authentication.js","components/app.js","index.js","components/pageLayout/pageHeader.js","components/pageLayout/pageMessages.js","components/pageLayout/pageSection.js","components/pageLayout/pageToolbar.js","components/pageLayout/pageLayout.js"],"names":["platformApiTypes","rhsmApiTypes","TableSkeleton","className","borders","colCount","colWidth","isHeader","rowCount","t","variant","updatedColumnHeaders","Array","map","value","index","updatedHeader","title","Skeleton","size","SkeletonSize","md","transforms","cellWidth","updatedRowCount","updatedRows","cells","ariaLabel","columnHeaders","rows","defaultProps","translate","Loader","skeletonProps","tableProps","lg","xs","sm","Spinner","getCurrentDate","helpers","TEST_MODE","DEV_MODE","process","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","date","subtract","measurement","startDate","moment","utc","startOf","toDate","endDate","endOf","currentDateTime","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedDateTime","granularity","GRANULARITY_TYPES","WEEKLY","MONTHLY","QUARTERLY","DAILY","timestampDayFormats","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES","SUBSCRIPTIONS","INVENTORY","PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES","ALL","HOSTS","PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES","READ","WRITE","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","noop","Function","prototype","noopPromise","Promise","resolve","browserExpose","obj","options","limit","id","window","generateId","prefix","Math","ceil","random","isDate","Object","toString","call","isPromise","test","noopTranslate","key","components","JSON","stringify","PROD_MODE","REVIEW_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_TABLE","UI_DISABLED_TABLE_HOSTS","UI_DISABLED_TABLE_SUBSCRIPTIONS","UI_DISABLED_TOOLBAR","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_LEARN_MORE","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_NAME","UI_PATH","UI_VERSION","UI_WINDOW_ID","TableEmpty","icon","message","tableHeading","EmptyState","EmptyStateIcon","Title","headingLevel","EmptyStateBody","EmptyStateVariant","small","Table","state","isCollapsible","isSortable","sortBy","onCollapse","isOpen","fullWidth","expandedContent","setState","onSort","direction","data","updatedIndex","forEach","i","a","label","column","header","this","setRowData","prevProps","props","customizer","valueA","valueB","_isEqualWith","updatedSort","isExpanded","rowObj","push","parent","length","cell","undefined","settings","React","isValidElement","columnHeader","sortActive","sortDirection","tempColumnHeader","sortable","SortByDirection","asc","filter","v","children","summary","pfTableProps","emptyTable","SearchIcon","event","Fragment","aria-label","appName","Grid","GridItem","span","renderTable","Component","RHSM_API_PATH_ID_TYPES","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","OPENSHIFT","SATELLITE","SATELLITE_CAPSULE","RHSM_API_QUERY_GRANULARITY_TYPES","RHSM_API_QUERY_SORT_TYPES","CORES","HARDWARE","LAST_SEEN","MEASUREMENT","NAME","SOCKETS","RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES","SKU","PRODUCT_NAME","SERVICE_LEVEL","USAGE","UPCOMING_EVENT_DATE","PHYSICAL_CAPACITY","VIRTUAL_CAPACITY","TOTAL_CAPACITY","UOM","RHSM_API_QUERY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","RHSM_API_QUERY_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_QUERY_UOM_TYPES","RHSM_API_QUERY_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_SET_OPTIN_TYPES","CONDUIT_SYNC","TALLY_REPORT","TALLY_SYNC","RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES","END_DATE","GRANULARITY","SLA","START_DATE","RHSM_API_QUERY_SET_INVENTORY_TYPES","DIRECTION","LIMIT","OFFSET","SORT","RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES","RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES","RHSM_API_QUERY_TYPES","RHSM_API_RESPONSE_ERROR_DATA","RHSM_API_RESPONSE_ERROR_DATA_TYPES","CODE","DETAIL","RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES","GENERIC","OPTIN","RHSM_API_RESPONSE_LINKS","RHSM_API_RESPONSE_LINKS_TYPES","FIRST","LAST","PREVIOUS","NEXT","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_META_TYPES","COUNT","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","CLOUD_CORES","CLOUD_INSTANCES","CLOUD_SOCKETS","DATE","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_INVENTORY_DATA","RHSM_API_RESPONSE_INVENTORY_DATA_TYPES","CLOUD_PROVIDER","GUESTS","ID","INVENTORY_ID","SUBSCRIPTION_ID","RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES","RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES","SUBSCRIPTION_NUMBERS","UPCOMING_EVENT_TYPE","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","HAS_CLOUDIGRADE_DATA","HAS_CLOUDIGRADE_MISMATCH","HAS_DATA","translateKey","values","i18nKey","i18next","I18n","isLoaded","i18nInit","fallbackLng","loadPath","locale","use","XHR","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","schemas","initialValue","schema","generated","isArray","getSingleResponseFromResultArray","results","updatedResults","payload","response","updatedResultsMessage","firstErrorResponse","find","_get","status","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","_isPlainObject","getDateFromResults","getStatusFromResults","setStateProp","prop","initialState","reset","console","error","warn","singlePromiseDataResponseFromArray","reduxHelpers","parsedResponses","responses","customResponseValue","keyPrefix","updatedData","generatedSchema","parsedResponse","dataObj","customValue","update","updatedDataObj","entries","dataObjKey","dataObjValue","casedDataObjKey","_camelCase","val","Number","isInteger","parseInt","parseFloat","generateReflectedData","generatedData","types","action","type","expandedTypes","subVal","ref","RegExp","whichType","expandMetaTypes","meta","updatedMeta","query","metaData","metaId","metaQuery","baseState","errorMessage","fulfilled","pending","setId","errorResponse","cancelled","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","config","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","store","dispatch","next","httpStatus","payloadConfig","range","floor","statusMiddleware","promiseMiddleware","notificationsMiddleware","appTypes","STATUS_4XX","STATUS_5XX","graphTypes","SET_GRAPH_LEGEND","inventoryTypes","SET_INVENTORY_TAB","platformTypes","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_GLOBAL_FILTER_HIDE","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","SET_QUERY_RHSM_TYPES","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","rhsmTypes","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","GET_MESSAGE_REPORTS_RHSM","GET_SUBSCRIPTIONS_INVENTORY_RHSM","userTypes","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","app","graph","inventory","platform","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","rhsm","toolbar","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","user","legend","reportCapacity","graphReducer","hostsInventory","hostsGuests","subscriptionsInventory","tabs","inventoryReducer","report","messagesReducer","filters","toolbarReducer","viewId","activeFilters","currentFilter","optin","session","errorCodes","userReducer","actionStatus","graphTallyQuery","inventoryGuestsQuery","inventoryHostsQuery","inventorySubscriptionsQuery","viewReducer","updateQueries","tempQuery","updatedInventoryHostsQuery","updatedInventorySubscriptionsQuery","clearFilters","reducers","notifications","messages","view","reduxReducers","combineReducers","createStore","applyMiddleware","getUser","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","auth","Error","getUserPermissions","USER_PERMISSION_TYPES","APP_TYPES","REACT_APP_DEBUG_SUBSCRIPTIONS_PERMISSION_RESOURCE","REACT_APP_DEBUG_SUBSCRIPTIONS_PERMISSION_OPERATION","REACT_APP_DEBUG_INVENTORY_PERMISSION_RESOURCE","REACT_APP_DEBUG_INVENTORY_PERMISSION_OPERATION","e","platformServices","hideGlobalFilter","isHidden","initializeChrome","onNavigation","callback","on","setAppName","name","identifyApp","reject","setNavigation","location","navigation","item","active","pathname","split","slice","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","serviceConfig","passedConfig","headers","timeout","cancelTokens","responseCache","LruCache","maxAge","max","updateAgeOnGet","serviceCall","updatedConfig","axiosInstance","axios","create","cancel","cancelTokensId","cancelId","url","CancelToken","source","cancelToken","token","cache","sortedParams","params","sort","b","localeCompare","cacheId","cachedResponse","get","adapter","adapterConfig","interceptors","set","rhsmServices","getApiVersion","getGraphCapacity","getGraphReports","getHostsInventory","getHostsInventoryGuests","replace","getSubscriptionsInventory","rhsmActions","getGraphReportsCapacity","all","getMessageReports","getLocaleFromCookie","Cookies","LocaleCode","getLanguageName","userServices","authorizeUser","userData","userPermissions","keys","permissions","emulatedErrorResponse","getLocale","defaultLocale","logoutUser","deleteAccountOptIn","method","getAccountOptIn","updateAccountOptIn","actions","rejected","description","dismissable","reduxActions","apiQueries","parseRhsmQuery","queries","updatedGraphTallyQuery","updatedInventoryGuestsQuery","toolbarQuery","selectorCache","selector","createSelector","productId","appMessages","cloudigradeMismatch","assign","reportData","reverse","appMessagesSelectors","makeAppMessages","createSelectorCreator","defaultMemoize","_isEqual","createDeepEqualSelector","rest","updatedSession","admin","entitled","authorized","responsePermissions","permission","definitions","resource","operation","resources","RESOURCE_TYPES","OPERATION_TYPES","userSessionSelectors","userSession","makeUserSession","responseData","updatedResponseData","listData","updatedListData","guestsListSelectors","guestsList","makeGuestsList","dataId","graphData","responseMetaQuery","cachedGranularity","capacity","capacityData","graphDataKey","tallySchema","capacitySchema","customReportValue","presetData","hasData","hasCloudigradeData","hasCloudigradeMismatch","customCapacityValue","x","y","hasInfinite","generateGraphData","graphDataObj","graphDataObjKey","generatedY","casedGraphDataObjKey","updatedItem","graphCardSelectors","graphCard","makeGraphCard","itemCount","listMeta","customInventoryValue","toLowerCase","updatedListMeta","inventoryListSelectors","inventoryList","makeInventoryList","subscriptionsListSelectors","subscriptionsList","makeSubscriptionsList","reduxSelectors","userSelectors","makeView","connectRouter","mapStateToProps","mapDispatchToProps","component","withRouter","connect","useSelector","UseSelector","equality","platformLandingRedirect","path","join","platformModalRedirect","routes","to","redirect","lazy","exact","render","disabled","activateOnError","pathId","pathParameter","productParameter","viewParameter","default","routerConfig","dynamicBaseName","pathName","pathPrefix","shift","pathSlice","baseName","getErrorRoute","route","getNavigationDetail","navigationItem","returnDefault","defaultItem","href","routeHref","getRouteDetail","routeItem","includes","routerHelpers","getNavRouteDetail","navDetail","routeDetail","Redirect","urlRoute","history","isRedirect","isReplace","Suspense","fallback","forcePath","RoutedRedirect","Router","activateOnErrorRoute","redirectRoot","renderRoutes","strict","routeProps","URLSearchParams","decodeURIComponent","parsedSearch","Set","search","param","updatedLocation","errorRoute","MessageView","pageTitle","full","Authentication","removeListeners","subscriptions","appNav","navId","Maintenance","BinocularsIcon","NotAuthorized","serviceName","makeMapStateToProps","ConnectedAuthentication","App","ConnectedApp","basename","document","getElementById","PageHeader","includeTour","productLabel","Flex","justifyContent","FlexItem","Button","isInline","color","context","iconPosition","target","PageMessages","Section","PageSection","PageToolbar","PageLayout","Children","toArray","child","padding"],"mappings":"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","file":"static/js/main.c09d0530.chunk.js","sourcesContent":["import { platformApiTypes } from './platformApiTypes';\nimport { rhsmApiTypes } from './rhsmApiTypes';\n\nconst apiTypes = {\n  platformApi: platformApiTypes,\n  rhsmApi: rhsmApiTypes\n};\n\nexport { apiTypes as default, apiTypes, platformApiTypes, rhsmApiTypes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cellWidth, TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/cjs/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {Array} props.colWidth\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableSkeleton = ({ className, borders, colCount, colWidth, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map((value, index) => {\n    const updatedHeader = { title: <Skeleton size={SkeletonSize.md} /> };\n\n    if (typeof colWidth[index] === 'number') {\n      updatedHeader.transforms = [cellWidth(colWidth[index])];\n    }\n\n    return updatedHeader;\n  });\n\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />)\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: string,\n *     className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.arrayOf(PropTypes.number),\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: null,\n *     className: null, rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  colWidth: [],\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/cjs/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/components/cjs/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    colWidth: PropTypes.array,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf('days').toDate()\n});\n\nconst currentDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 1, measurement: 'days' });\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case 'CURRENT':\n      return { ...currentDateTime };\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n","/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME,\n  INVENTORY: 'inventory'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*',\n  HOSTS: 'hosts'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\n/**\n * Platform API types.\n *\n * @type {{PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES: {USER: string},\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS: string, PLATFORM_API_RESPONSE_USER_IDENTITY: string,\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES: {ENTITLED: string},\n *     PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES: {ORG_ADMIN: string}}}\n */\nconst platformApiTypes = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformApiTypes as default,\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string} key\n * @param {string|object} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) =>\n  `t(${key}${(value && `, ${(typeof value === 'string' && value) || (value && JSON.stringify(value))}`) || ''}${\n    (components && `, ${components}`) || ''\n  })`;\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the current hosts inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_HOSTS = process.env.REACT_APP_UI_DISABLED_TABLE_HOSTS === 'true';\n\n/**\n * Disable the current subscriptions inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_SUBSCRIPTIONS = process.env.REACT_APP_UI_DISABLED_TABLE_SUBSCRIPTIONS === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * A url, or uri, for \"recommend actions\"\n *\n * @type {string}\n */\nconst UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS = process.env.REACT_APP_UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  browserExpose,\n  generateId,\n  isDate,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TABLE_HOSTS,\n  UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/components/cjs/EmptyTable';\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {Node|Function} props.icon\n * @param {Node} props.message\n * @param {string} props.tableHeading\n * @param {Node} props.title\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, variant: string, message: Node, title: Node, tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  Table as PfTable,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * FixMe: PF tables uses sequentially ordered lists/arrays to denote expandable sections\n * Ideal solution is to nest expandable sections within their respective parents. There\n * are scenarios where manipulating a sequentially ordered list/array can, and will,\n * lead to unintended results. And forces an equal, if not greater, amount of effort on\n * state tracking in the consuming GUI/app. Compounding the issue, the index is used/returned\n * during events for a particular row being \"expanded\". This ends up making after-the-fact\n * application of the expandable list/array items problematic since said index is\n * constantly updating/shifting as rows are dynamically added. Add in a \"not every row\n * needs to be expandable\" scenario, you can start to see the issues. All of that\n * effort means that in some cases it may actually be quicker to simply use PF styles and\n * a HTML table directly, bypassing PF-React entirely.\n *\n * Applying a React node as content in the sequentially ordered list/array appears to\n * automatically \"mount\" said node. How this handles in child components where subsequent\n * AJAX/XHR calls are called means you are potentially hitting an API with dozens of calls,\n * row dependent, even when a user may not expand the nested row/child. This could easily\n * be resolved by nesting and applying the expandable contents after-the-fact.\n */\n/**\n * FixMe: PF tables misalignment of the column headers list/array and row cells breaks the component\n * The related PF error for this is cryptic. An immediate solution would be to simply fix the error\n * messaging, or do a length check before consuming the lists/arrays. This happens when a consumer\n * places more or less column header cells than row cells.\n */\n/**\n * FixMe: PF tables break when an empty list/array is used for the column headers\n * This appears related to the mismatched column header and row cells. The solution is to simply not\n * render the header row instead of throwing an error. This is similar to how the empty rows\n * list/array is handled.\n */\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n * @fires onSort\n */\nclass Table extends React.Component {\n  state = {\n    isCollapsible: false,\n    isSortable: false,\n    sortBy: {},\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (\n      !_isEqualWith(prevProps.rows, rows, customizer) ||\n      !_isEqualWith(prevProps.columnHeaders, columnHeaders, customizer)\n    ) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * FixMe: PF table sort callback doesn't use a zero based index when expandable?\n   * Educated guess there's a cell count happening instead of \"[you have this many data/entry cells]\"\n   * This is really confusing to implement in a consuming application, especially on first\n   * implementation. Special \"collapsible index\" logic had to be implemented to compensate for this\n   * odd behavior.\n   */\n  /**\n   * On column sort\n   *\n   * @event onSort\n   * @param {object} params\n   * @param {number} params.index\n   * @param {string} params.direction\n   * @param {object} params.data\n   */\n  onSort = ({ index, direction, data = {} }) => {\n    const { isCollapsible, updatedColumnHeaders, updatedRows } = this.state;\n    const updatedIndex = isCollapsible ? index - 1 : index;\n\n    updatedRows.forEach(async ({ isOpen }, i) => {\n      if (isOpen === true) {\n        await this.onCollapse({ index: i, isOpen: false });\n      }\n    });\n\n    this.setState(\n      {\n        sortBy: {\n          index,\n          direction\n        }\n      },\n      () =>\n        updatedColumnHeaders[updatedIndex].onSort({\n          direction,\n          index: updatedIndex,\n          label: data?.column?.header?.label\n        })\n    );\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n    const updatedSort = {};\n    let isCollapsible = false;\n    let isSortable = false;\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        isCollapsible = true;\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell.title !== undefined) {\n          const { title, ...settings } = cell;\n          rowObj.cells.push({ title, ...settings });\n        } else {\n          rowObj.cells.push({\n            title: (React.isValidElement(cell) && cell) || (typeof cell === 'object' && `${cell}`) || cell\n          });\n        }\n      });\n    });\n\n    columnHeaders.forEach((columnHeader, index) => {\n      if (columnHeader.title !== undefined) {\n        const { onSort, sortActive, sortDirection, title, ...settings } = columnHeader;\n        const tempColumnHeader = {\n          title,\n          ...settings\n        };\n\n        if (onSort) {\n          isSortable = true;\n          tempColumnHeader.transforms = [...(tempColumnHeader?.transforms || []), sortable];\n          tempColumnHeader.onSort = onSort;\n\n          if (sortActive) {\n            updatedSort.sortBy = { index: isCollapsible ? index + 1 : index };\n            updatedSort.sortBy.direction = SortByDirection.asc;\n          }\n\n          if (sortDirection) {\n            updatedSort.sortBy = { ...updatedSort.sortBy, direction: sortDirection };\n          }\n        } else if (tempColumnHeader.transforms) {\n          tempColumnHeader.transforms = tempColumnHeader.transforms.filter(v => v !== sortable);\n        }\n\n        updatedColumnHeaders.push(tempColumnHeader);\n      } else {\n        updatedColumnHeaders.push({\n          title:\n            (React.isValidElement(columnHeader) && columnHeader) ||\n            (typeof columnHeader === 'object' && `${columnHeader}`) ||\n            columnHeader\n        });\n      }\n    });\n\n    this.setState({\n      isCollapsible,\n      isSortable,\n      updatedColumnHeaders,\n      updatedRows,\n      ...updatedSort\n    });\n  }\n\n  /**\n   * FixMe: PF Tables automatically applies an expandable className when using the \"onCollapse\" prop?\n   * Not every row may need to be expandable. In certain scenarios a table may have no expandable\n   * sections, however it appears the \"onCollapse\" styling, and additionally added \"table cells\" are still\n   * applied.\n   */\n  /**\n   * Apply props to table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { isCollapsible, isSortable, sortBy, updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    const pfTableProps = {};\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    if (isCollapsible) {\n      pfTableProps.onCollapse = (event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data });\n    }\n\n    if (isSortable) {\n      pfTableProps.sortBy = sortBy;\n      pfTableProps.onSort = (event, index, direction, data) => this.onSort({ event, index, direction, data });\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n          {...pfTableProps}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: Node,\n *     isHeader: boolean, variant: string, className: string, rows: Array, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        onSort: PropTypes.func,\n        sortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)]),\n        title: PropTypes.node.isRequired\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.shape({\n            title: PropTypes.node.isRequired\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","/**\n * RHSM response Error DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA = 'errors';\n\n/**\n * RHSM response Error DATA types.\n * Schema/map of expected Error data response properties.\n *\n * @type {{CODE: string, DETAIL: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_TYPES = {\n  CODE: 'code',\n  DETAIL: 'detail'\n};\n\n/**\n * RHSM response Error DATA CODE types.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response links type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS = 'links';\n\n/**\n * RHSM response LINKS type.\n * Schema/map of expected inventory LINKS response properties.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS_TYPES = {\n  FIRST: 'first',\n  LAST: 'last',\n  PREVIOUS: 'previous',\n  NEXT: 'next'\n};\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response META types.\n * Schema/map of expected META response properties.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count'\n};\n\n/**\n * RHSM response Capacity DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\n\n/**\n * RHSM response Capacity DATA types.\n * Schema/map of expected Capacity data response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string,\n *     HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response inventory DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA = 'data';\n\n/**\n * RHSM response inventory DATA types.\n * Schema/map of expected inventory DATA response properties.\n *\n * @type {{CORES: string, HARDWARE: string, SOCKETS: string, SUBSCRIPTION_ID: string, INVENTORY_ID: string,\n *     MEASUREMENT: string, ID: string, GUESTS: string, CLOUD_PROVIDER: string, LAST_SEEN: string,\n *     NAME: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA_TYPES = {\n  CLOUD_PROVIDER: 'cloud_provider',\n  CORES: 'cores',\n  GUESTS: 'number_of_guests',\n  HARDWARE: 'hardware_type',\n  ID: 'insights_id',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets',\n  SUBSCRIPTION_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response inventory guests DATA types.\n * Schema/map of expected inventory guests DATA response properties.\n *\n * @type {{SUBSCRIPTION_ID: string, ID: string, NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES = {\n  ID: 'insights_id',\n  NAME: 'display_name',\n  SUBSCRIPTION_ID: 'subscription_manager_id',\n  LAST_SEEN: 'last_seen'\n};\n\n/**\n * RHSM response subscriptions inventory DATA types.\n *\n * @type {{UOM: string, PHYSICAL_CAPACITY: string, USAGE: string, UPCOMING_EVENT_TYPE: string,\n *     UPCOMING_EVENT_DATE: string, SUBSCRIPTION_NUMBERS: string, VIRTUAL_CAPACITY: string,\n *     TOTAL_CAPACITY: string, SKU: string, SERVICE_LEVEL: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES = {\n  SKU: 'sku',\n  PRODUCT_NAME: 'product_name',\n  SERVICE_LEVEL: 'service_level',\n  USAGE: 'usage',\n  SUBSCRIPTION_NUMBERS: 'subscription_numbers',\n  UPCOMING_EVENT_DATE: 'upcoming_event_date',\n  UPCOMING_EVENT_TYPE: 'upcoming_event_type',\n  PHYSICAL_CAPACITY: 'physical_capacity',\n  VIRTUAL_CAPACITY: 'virtual_capacity',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Reporting/Tally DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\n\n/**\n * RHSM response Reporting/Tally DATA types.\n * Schema/map of expected Reporting/Tally DATA response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, SOCKETS: string, CLOUD_CORES: string, HAS_DATA: string,\n * PHYSICAL_SOCKETS: string, PHYSICAL_CORES: string, CLOUD_INSTANCES: string, DATE: string, CLOUD_SOCKETS: string,\n * HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string, HYPERVISOR_CORES: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM product id type values.\n *\n * @type {{RHEL_ARM: string, SATELLITE: string, RHEL_WORKSTATION: string, RHEL_DESKTOP: string, RHEL: string,\n *     SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_COMPUTE_NODE: string,\n *     RHEL_IBM_POWER: string, RHEL_X86: string, OPENSHIFT: string}}\n */\nconst RHSM_API_PATH_ID_TYPES = {\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  OPENSHIFT: 'OpenShift Container Platform',\n  SATELLITE: 'Satellite 6',\n  SATELLITE_CAPSULE: 'Satellite 6 Capsule'\n};\n\n/**\n * RHSM API query/search parameter of GRANULARITY type values.\n * Schema/map of expected query/search parameter granularity types.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, HARDWARE: string, SOCKETS: string, MEASUREMENT: string, LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_SORT_TYPES = {\n  CORES: 'cores',\n  HARDWARE: 'hardware_type',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{UOM: string, PHYSICAL_CAPACITY: string, USAGE: string, UPCOMING_EVENT_DATE: string,\n *     VIRTUAL_CAPACITY: string, TOTAL_CAPACITY: string, SKU: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES = {\n  SKU: 'sku',\n  PRODUCT_NAME: 'product_name',\n  SERVICE_LEVEL: 'service_level',\n  USAGE: 'usage',\n  UPCOMING_EVENT_DATE: 'upcoming_event_date',\n  PHYSICAL_CAPACITY: 'physical_capacity',\n  VIRTUAL_CAPACITY: 'virtual_capacity',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\n/**\n * RHSM API query/search parameter SLA type values.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_QUERY_SLA_TYPES = {\n  PREMIUM: 'premium',\n  STANDARD: 'standard',\n  SELF: 'self-support',\n  NONE: ''\n};\n\n/**\n * RHSM API query/search parameter UOM type values.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_QUERY_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter USAGE type values.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_QUERY_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\n/**\n * RHSM API query/search parameter OPTIN type values.\n *\n * @type {{TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_SET_OPTIN_TYPES = {\n  CONDUIT_SYNC: 'enable_conduit_sync',\n  TALLY_REPORT: 'enable_tally_reporting',\n  TALLY_SYNC: 'enable_tally_sync'\n};\n\n/**\n * RHSM API query/search parameter CAPACITY type values.\n *\n * @type {{GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string}}\n */\nconst RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES = {\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  DIRECTION: 'dir',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  UOM: 'uom',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM API query/search parameter GUESTS INVENTORY type values.\n *\n * @type {{OFFSET: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES = {\n  LIMIT: 'limit',\n  OFFSET: 'offset'\n};\n\n/**\n * RHSM API query/search parameter SUBSCRIPTIONS INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string, SLA: string,\n *     LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES = {\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES\n};\n\n/**\n * RHSM API query/search parameter values.\n *\n * @type {{GRANULARITY: string, TALLY_SYNC: string, DIRECTION: string, END_DATE: string,\n *     SLA: string, START_DATE: string, LIMIT: string, UOM: string, TALLY_REPORT: string,\n *     USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_TYPES = {\n  ...RHSM_API_QUERY_SET_OPTIN_TYPES,\n  ...RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\n/**\n * RHSM API types.\n *\n * @type {{RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string,\n *     OFFSET: string, SLA: string, LIMIT: string}, RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES: {UOM: string,\n *     PHYSICAL_CAPACITY: string, USAGE: string, UPCOMING_EVENT_TYPE: string, UPCOMING_EVENT_DATE: string,\n *     SUBSCRIPTION_NUMBERS: string, VIRTUAL_CAPACITY: string, TOTAL_CAPACITY: string, SKU: string,\n *     SERVICE_LEVEL: string}, RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES: {GENERIC: string, OPTIN: string},\n *     RHSM_API_RESPONSE_INVENTORY_DATA: string, RHSM_API_RESPONSE_CAPACITY_DATA: string,\n *     RHSM_API_RESPONSE_ERROR_DATA_TYPES: {CODE: string, DETAIL: string},\n *     RHSM_API_RESPONSE_CAPACITY_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string},\n *     RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES: {UOM: string, PHYSICAL_CAPACITY: string, USAGE: string,\n *     UPCOMING_EVENT_DATE: string, VIRTUAL_CAPACITY: string, TOTAL_CAPACITY: string, SKU: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string}, RHSM_API_RESPONSE_META_TYPES: string, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string,\n *     QUARTERLY: string, DAILY: string, MONTHLY: string}, RHSM_API_QUERY_SORT_DIRECTION_TYPES: {ASCENDING: string,\n *     DESCENDING: string}, RHSM_API_RESPONSE_PRODUCTS_DATA: string, RHSM_API_QUERY_TYPES: {GRANULARITY: string,\n *     TALLY_SYNC: string, DIRECTION: string, END_DATE: string, SLA: string, START_DATE: string, LIMIT: string,\n *     UOM: string, TALLY_REPORT: string, USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string},\n *     RHSM_API_RESPONSE_LINKS: string, RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES: {OFFSET: string, LIMIT: string},\n *     RHSM_API_PATH_ID_TYPES: {RHEL_ARM: string, SATELLITE: string, RHEL_WORKSTATION: string, RHEL_DESKTOP: string,\n *     RHEL: string, SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_COMPUTE_NODE: string,\n *     RHEL_IBM_POWER: string, RHEL_X86: string, OPENSHIFT: string},\n *     RHSM_API_QUERY_SET_OPTIN_TYPES: {TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string},\n *     RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_SET_INVENTORY_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string,\n *     OFFSET: string, SLA: string, LIMIT: string}, RHSM_API_QUERY_SORT_TYPES: {CORES: string, HARDWARE: string,\n *     SOCKETS: string, MEASUREMENT: string, LAST_SEEN: string, NAME: string},\n *     RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, SOCKETS: string,\n *     CLOUD_CORES: string, HAS_DATA: string, PHYSICAL_SOCKETS: string, PHYSICAL_CORES: string,\n *     CLOUD_INSTANCES: string, DATE: string, CLOUD_SOCKETS: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HYPERVISOR_CORES: string}, RHSM_API_QUERY_UOM_TYPES: {CORES: string,\n *     SOCKETS: string}, RHSM_API_RESPONSE_LINKS_TYPES: string,\n *     RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES: {SUBSCRIPTION_ID: string, ID: string, NAME: string,\n *     LAST_SEEN: string}, RHSM_API_RESPONSE_ERROR_DATA: string, RHSM_API_RESPONSE_META: string,\n *     RHSM_API_RESPONSE_INVENTORY_DATA_TYPES: {CORES: string, HARDWARE: string, SOCKETS: string,\n *     SUBSCRIPTION_ID: string, INVENTORY_ID: string, MEASUREMENT: string, ID: string, GUESTS: string,\n *     CLOUD_PROVIDER: string, LAST_SEEN: string, NAME: string},\n *     RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string,\n *     START_DATE: string}}}\n */\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, Trans } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string} translateKey\n * @param {string|Array} values A default string if the key can't be found. An array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @returns {string|Node}\n */\nconst translate = (translateKey, values = null, components) => {\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(translateKey, values, components);\n  }\n\n  if (components) {\n    return <Trans i18nKey={translateKey} values={values} components={components} />;\n  }\n\n  return i18next.t(translateKey, values);\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {Node} Component\n * @returns {Node}\n */\nconst translateComponent = Component => {\n  const withTranslation = ({ ...props }) => <Component {...props} t={translate} i18n={i18next} />;\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\n/**\n * ToDo: reevaluate the \"I18nextProvider\" on package update.\n * Appears to have timing issues, and subsequent firings of the\n * ajax/xhr setup. Reverting it to just a function call that populates behind\n * the scenes appears more predictable.\n */\n/**\n * Load I18n.\n *\n * @augments React.Component\n */\nclass I18n extends React.Component {\n  state = { isLoaded: false };\n\n  componentDidMount() {\n    this.i18nInit();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { locale } = this.props;\n\n    if (locale !== prevProps.locale) {\n      this.i18nInit();\n    }\n  }\n\n  /**\n   * Load i18next.\n   *\n   * @returns {Promise<void>}\n   */\n  i18nInit = async () => {\n    const { fallbackLng, loadPath, locale } = this.props;\n\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: locale,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      // ToDo: eval the need for an isError state ref\n    }\n\n    this.setState({ isLoaded: true });\n  };\n\n  /**\n   * Render children after i18next loads.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { isLoaded } = this.state;\n    const { children } = this.props;\n\n    return (isLoaded && <React.Fragment>{children}</React.Fragment>) || <React.Fragment />;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: Node, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(({ schema = {}, data, customResponseValue, keyPrefix: prefix }) => {\n    const isArray = Array.isArray(data);\n    const updatedData = (isArray && data) || (data && [data]) || [];\n    const [generatedSchema = {}] = setResponseSchemas([schema]);\n    const parsedResponse = [];\n\n    updatedData.forEach((value, index) => {\n      const generateReflectedData = ({ dataObj, keyPrefix = '', customValue = null, update = helpers.noop }) => {\n        const updatedDataObj = {};\n\n        Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n          const casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n          let val = dataObjValue;\n\n          if (typeof val === 'number') {\n            val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n          }\n\n          if (typeof customValue === 'function') {\n            updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n          } else {\n            updatedDataObj[casedDataObjKey] = val;\n          }\n        });\n\n        update(updatedDataObj);\n      };\n\n      generateReflectedData({\n        keyPrefix: prefix,\n        dataObj: { ...generatedSchema, ...value },\n        customValue: customResponseValue,\n        update: generatedData => parsedResponse.push(generatedData)\n      });\n    });\n\n    parsedResponses.push(parsedResponse);\n  });\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 300 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    delete updatedMeta.data;\n    delete updatedMeta.id;\n    delete updatedMeta.query;\n\n    return {\n      meta: { ...updatedMeta },\n      metaData: meta.data,\n      metaId: meta.id,\n      metaQuery: meta.query\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/cjs';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","const SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","const SET_INVENTORY_TAB = 'SET_INVENTORY_TAB';\n\n/**\n * Inventory action, reducer types.\n *\n * @type {{SET_INVENTORY_TAB: string}}\n */\nconst inventoryTypes = {\n  SET_INVENTORY_TAB\n};\n\nexport { inventoryTypes as default, inventoryTypes, SET_INVENTORY_TAB };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications/cjs';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_GLOBAL_FILTER_HIDE = 'PLATFORM_GLOBAL_FILTER_HIDE';\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_GLOBAL_FILTER_HIDE: string, PLATFORM_INIT: string,\n *     PLATFORM_SET_NAV: string, PLATFORM_CLEAR_NOTIFICATIONS: string, PLATFORM_ADD_NOTIFICATION: string,\n *     PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n","import { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\n\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\nconst SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\nconst SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES: object, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string,\n *     SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES: object}}\n */\nconst queryTypes = {\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n","const GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\nconst GET_MESSAGE_REPORTS_RHSM = 'GET_MESSAGE_REPORTS_RHSM';\nconst GET_SUBSCRIPTIONS_INVENTORY_RHSM = 'GET_SUBSCRIPTIONS_INVENTORY_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_MESSAGE_REPORTS_RHSM: string,\n * GET_HOSTS_INVENTORY_GUESTS_RHSM: string, GET_SUBSCRIPTIONS_INVENTORY_RHSM: string,\n * GET_HOSTS_INVENTORY_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_AUTH: string, USER_LOCALE: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_AUTH,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { inventoryTypes } from './inventoryTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  inventory: inventoryTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  inventoryTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","const SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}}}\n */\nconst initialState = {\n  legend: {},\n  reportCapacity: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          ...action.legend\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [{ ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM }],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { inventoryTypes } from '../types';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{subscriptionsInventory: {}, tabs: {}, hostsInventory: {}, hostsGuests: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {},\n  subscriptionsInventory: {},\n  tabs: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system and subscriptions inventory to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inventoryTypes.SET_INVENTORY_TAB:\n      return reduxHelpers.setStateProp(\n        'tabs',\n        {\n          ...action.tabs\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n          { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM },\n          { ref: 'subscriptionsInventory', type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{report: {}}}\n */\nconst initialState = {\n  report: {}\n};\n\n/**\n * Generated daily observer/reducer for report to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst messagesReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [{ ref: 'report', type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM }],\n    state,\n    action\n  );\n\nmessagesReducer.initialState = initialState;\n\nexport { messagesReducer as default, initialState, messagesReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, userTypes } from '../types';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{session: {errorCodes: Array, locale: string}, optin: {}}}\n */\nconst initialState = {\n  optin: {},\n  session: {\n    errorCodes: [],\n    locale: null\n  }\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(\n          reduxHelpers.getDataFromResults(action),\n          [rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA],\n          []\n        );\n\n        return reduxHelpers.setStateProp(\n          'session',\n          {\n            error: true,\n            errorCodes: errorCodes.map(value => value[rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE]),\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            locale: state.session.locale,\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'session', type: userTypes.USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphTallyQuery: {}, inventoryHostsQuery: {}, inventorySubscriptionsQuery: {}, query: {},\n *     inventoryGuestsQuery: {}}}\n */\nconst initialState = {\n  query: {},\n  graphTallyQuery: {},\n  inventoryGuestsQuery: {},\n  inventoryHostsQuery: {},\n  inventorySubscriptionsQuery: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updateQueries = query => {\n        const tempQuery = {};\n\n        Object.entries(query).forEach(([key, value]) => {\n          tempQuery[key] = { ...value };\n\n          if (typeof value[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            tempQuery[key][RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n\n          delete tempQuery[key][RHSM_API_QUERY_TYPES.DIRECTION];\n          delete tempQuery[key][RHSM_API_QUERY_TYPES.SORT];\n        });\n\n        return tempQuery;\n      };\n\n      const updatedInventoryHostsQuery = updateQueries(state.inventoryHostsQuery);\n      const updatedInventorySubscriptionsQuery = updateQueries(state.inventorySubscriptionsQuery);\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updatedInventoryHostsQuery,\n          inventorySubscriptionsQuery: updatedInventorySubscriptionsQuery\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'graphTallyQuery',\n        {\n          [action.viewId]: {\n            ...state.graphTallyQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications/cjs';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport messagesReducer from './messagesReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  messages: messagesReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  messagesReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","import _set from 'lodash/set';\nimport { helpers } from '../common';\nimport {\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES as APP_TYPES\n} from '../types/platformApiTypes';\n\n/**\n * Basic user authentication.\n *\n * @returns {Promise<void>}\n */\nconst getUser = async () => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE &&\n        _set(\n          {},\n          [\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n          ],\n          process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n        )) ||\n      (await insights.chrome.auth.getUser())\n    );\n  } catch (e) {\n    throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n  }\n};\n\n/**\n * FixMe: revert this back towards async/await\n * Removed because there appears to be some quirky behavior where permissions will not come through\n * unless the function, and/or await are specifically returned, i.e. \"return await insights.chrome...\".\n */\n/**\n * Basic user permissions.\n *\n * @returns {Promise<void>}\n */\nconst getUserPermissions = () => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE && [\n        {\n          [USER_PERMISSION_TYPES.PERMISSION]: `${APP_TYPES.SUBSCRIPTIONS}:${process.env.REACT_APP_DEBUG_SUBSCRIPTIONS_PERMISSION_RESOURCE}:${process.env.REACT_APP_DEBUG_SUBSCRIPTIONS_PERMISSION_OPERATION}`\n        },\n        {\n          [USER_PERMISSION_TYPES.PERMISSION]: `${APP_TYPES.INVENTORY}:${process.env.REACT_APP_DEBUG_INVENTORY_PERMISSION_RESOURCE}:${process.env.REACT_APP_DEBUG_INVENTORY_PERMISSION_OPERATION}`\n        }\n      ]) ||\n      insights.chrome.getUserPermissions()\n    );\n  } catch (e) {\n    throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Disables the Platform's global filter display.\n *\n * @param {boolean} isHidden\n * @returns {Promise<*>}\n */\nconst hideGlobalFilter = async (isHidden = true) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.hideGlobalFilter(isHidden);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<void>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n// FixMe: Revert catch to throwing an error. Relaxed for development\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<void>}\n */\nconst setAppName = async (name = null) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.identifyApp(name);\n  } catch (e) {\n    const error = `{ identifyApp } = insights.chrome, ${e.message}`;\n    await Promise.reject(error);\n  }\n};\n\n// ToDo: Clean up, consider removing setNavigation, currently no longer used.\n/**\n * Set platform left hand navigation active item.\n *\n * @param {Array} data\n * @returns {*}\n */\nconst setNavigation = (data = []) => {\n  const { insights, location } = window;\n  try {\n    return insights.chrome.navigation(\n      data.map(item => ({\n        ...item,\n        active: item.id === location.pathname.split('/').slice(-1)[0]\n      }))\n    );\n  } catch (e) {\n    throw new Error(`{ navigation } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = {\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications/cjs';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Hide platform global filter.\n *\n * @param {boolean} isHidden\n * @returns {{Function}}\n */\nconst hideGlobalFilter = isHidden => ({\n  type: platformTypes.PLATFORM_GLOBAL_FILTER_HIDE,\n  payload: platformServices.hideGlobalFilter(isHidden)\n});\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for handling the left-nav navigation active item.\n *\n * @param {object} data\n * @returns {Function}\n */\nconst setNavigation = data => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_SET_NAV\n  });\n  return platformServices.setNavigation(data);\n};\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import axios, { CancelToken } from 'axios';\nimport LruCache from 'lru-cache';\nimport { platformServices } from './platformServices';\n\n/**\n * Apply consistent service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {object}\n */\nconst cancelTokens = {};\n\n/**\n * Cache Axios service call responses.\n *\n * @type {object}\n */\nconst responseCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_AJAX_CACHE, 10),\n  max: 100,\n  updateAgeOnGet: true\n});\n\n/**\n * Call platform \"getUser\" auth method, and apply service config. Service configuration\n * includes the ability to cancel all and specific calls, and cache specific calls with\n * their success response only. The cache will refresh its timeout on continuous calls.\n * To reset it a user will either need to refresh the page or wait the \"maxAge\".\n *\n * @param {object} config\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n\n  const updatedConfig = { ...config };\n  const axiosInstance = axios.create();\n\n  if (updatedConfig.cancel === true) {\n    const cancelTokensId = `${updatedConfig.cancelId || ''}-${updatedConfig.url}`;\n\n    if (cancelTokens[cancelTokensId]) {\n      cancelTokens[cancelTokensId].cancel('cancelled request');\n    }\n\n    cancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = cancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  if (updatedConfig.cache === true) {\n    const sortedParams = Object.entries(updatedConfig.params).sort(([a], [b]) => a.localeCompare(b));\n    const cacheId = `${updatedConfig.url}-${JSON.stringify(sortedParams)}`;\n    const cachedResponse = responseCache.get(cacheId);\n\n    if (cachedResponse) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          ...cachedResponse,\n          status: 304,\n          statusText: 'Not Modified',\n          config: adapterConfig\n        });\n    }\n\n    axiosInstance.interceptors.response.use(response => {\n      responseCache.set(cacheId, response);\n      return response;\n    });\n\n    delete updatedConfig.cache;\n  }\n\n  return axiosInstance(serviceConfig(updatedConfig));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getApiVersion = (options = {}) => {\n  const { cache = false, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {string} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {string} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {object} links\n * @apiSuccess {object} meta\n * @apiSuccess {string} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {string} meta.product\n * - RHEL\n * @apiSuccess {number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"has_cloudigrade_data\": true,\n *           \"has_cloudigrade_mismatch\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2020-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2019-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2019-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25\n *         },\n *         {\n *           \"date\": \"2019-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2020-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\"\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-123456789012\",\n *           \"cores\": 4,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 70,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6N\",\n *           \"cloud_provider\": \"AZURE\",\n *           \"cores\": 4,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"CLOUD\",\n *           \"measurement_type\": \"CLOUD\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6M\",\n *           \"cores\": 4,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 10,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"display_name\": \"dolor.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6L\",\n *           \"cores\": 4,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 1,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"display_name\": \"lorem.test.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YX\",\n *           \"cores\": 4,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"display_name\": \"lorem.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YZ\",\n *           \"cores\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"display_name\": \"lorem.another.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YA\",\n *           \"cores\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-21T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YB\",\n *           \"cores\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-22T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YC\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-23T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YD\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-24T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YEE\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-26T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YF\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-29T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 11\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = false, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', id),\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @api {get} /api/rhsm-subscriptions/v1/subscriptions/products/:product_id Get RHSM subscriptions table/inventory data\n * @apiDescription Retrieve subscriptions table/inventory data.\n *\n * Reference [RHSM for subscriptions table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"sku\": \"RH00011\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscription_numbers\": [\"1234567890\", \"1234567890\", \"1234567890\"],\n *           \"upcoming_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"upcoming_event_type\": \"Subscription Begin\",\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\"\n *         },\n *         {\n *           \"sku\": \"RH00010\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server\",\n *           \"service_level\": \"Self-Support\",\n *           \"usage\": \"Production\",\n *           \"subscription_numbers\": [\"1234567890\", \"1234567890\", \"1234567890\"],\n *           \"upcoming_event_date\": \"2020-04-02T00:00:00Z\",\n *           \"upcoming_event_type\": \"Subscription Begin\",\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\"\n *         },\n *         {\n *           \"sku\": \"RH00009\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscription_numbers\": [\"1234567890\", \"1234567890\", \"1234567890\"],\n *           \"upcoming_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"upcoming_event_type\": \"Subscription End\",\n *           \"physical_capacity\": 2,\n *           \"virtual_capacity\": 2,\n *           \"total_capacity\": 4,\n *           \"uom\": \"Cores\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API subscriptions data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getSubscriptionsInventory = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_SUBSCRIPTIONS}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\nconst rhsmServices = {\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getSubscriptionsInventory\n};\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getSubscriptionsInventory\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsmServices';\n\n/**\n * Get a combined RHSM response from reporting and capacity.\n *\n * @param {string} id\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphReportsCapacity = (id = null, query = {}, options = {}) => dispatch => {\n  const { cancelId = 'graphReportsCapacity' } = options;\n\n  return dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n    payload: Promise.all([\n      rhsmServices.getGraphReports(id, query, { cancelId }),\n      rhsmServices.getGraphCapacity(id, query, { cancelId })\n    ]),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n};\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n    payload: rhsmServices.getHostsInventory(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n    payload: rhsmServices.getHostsInventoryGuests(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a RHSM response from message reporting.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getMessageReports = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM,\n    payload: rhsmServices.getGraphReports(id, query, { cancelId: 'messageReport' }),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a subscriptions response from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getSubscriptionsInventory = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM,\n    payload: rhsmServices.getSubscriptionsInventory(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActions = {\n  getGraphReportsCapacity,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n\nexport {\n  rhsmActions as default,\n  rhsmActions,\n  getGraphReportsCapacity,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { getUser, getUserPermissions } from './platformServices';\nimport { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * Apply an emulated API response to the platforms getUser method.\n *\n * @returns {Promise<{data: {permissions: (void|*[]), user: void}, message: string, status: number}>}\n */\nconst authorizeUser = async () => {\n  let message = '{ auth.getUser, getUserPermissions } = insights.chrome';\n  let userData;\n  let userPermissions;\n\n  try {\n    userData = await getUser();\n    userPermissions = await getUserPermissions();\n  } catch (e) {\n    message = e.message;\n  }\n\n  if (_isPlainObject(userData) && Object.keys(userData).length) {\n    return Promise.resolve({ data: { user: userData, permissions: userPermissions || [] }, message, status: 200 });\n  }\n\n  const emulatedErrorResponse = {\n    ...new Error(message),\n    message,\n    status: 418\n  };\n\n  return Promise.reject(emulatedErrorResponse);\n};\n\n/**\n * Return a platform locale value from a cookie.\n *\n * @private\n * @returns {{value: string, key: string | null}|null}\n */\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\n/**\n * Return platform locale.\n *\n * @returns {Promise<{data: void}>}\n */\nconst getLocale = () => {\n  const defaultLocale = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = (options = {}) => {\n  const { cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport {\n  userServices as default,\n  userServices,\n  authorizeUser,\n  getLocale,\n  logoutUser,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get an emulated API response from the platforms \"getUser\" method.\n *\n * @returns {Function}\n */\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userServices.authorizeUser()\n  });\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userServices.getLocale()\n});\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn = (query = {}) => dispatch =>\n  dispatch({\n    type: userTypes.UPDATE_USER_OPTIN,\n    payload: userServices.updateAccountOptIn(query),\n    meta: {\n      query,\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsErrorDescription'),\n          dismissable: true\n        },\n        fulfilled: {\n          variant: 'success',\n          title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsSuccessDescription'),\n          dismissable: true,\n          autoDismiss: false\n        }\n      }\n    }\n  });\n\nconst userActions = { authorizeUser, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport {\n  userActions as default,\n  userActions,\n  authorizeUser,\n  getLocale,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from './reduxHelpers';\n\n/**\n * Parse a query object against a schema for specific RHSM endpoints.\n *\n * @param {object} query\n * @param {object} queries\n * @returns {{graphTallyQuery: object, inventoryHostsQuery: object, inventorySubscriptionsQuery: object,\n *     query: object, inventoryGuestsQuery: object, toolbarQuery: object}}\n */\nconst parseRhsmQuery = (query = {}, queries = {}) => {\n  const { graphTallyQuery, inventoryGuestsQuery, inventoryHostsQuery, inventorySubscriptionsQuery } = queries;\n\n  const updatedGraphTallyQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES);\n  const updatedInventoryGuestsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES\n  );\n  const updatedInventoryHostsQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES);\n  const updatedInventorySubscriptionsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES\n  );\n\n  return {\n    query,\n    graphTallyQuery: { ...updatedGraphTallyQuery, ...graphTallyQuery },\n    inventoryGuestsQuery: { ...updatedInventoryGuestsQuery, ...inventoryGuestsQuery },\n    inventoryHostsQuery: { ...updatedInventoryHostsQuery, ...inventoryHostsQuery },\n    inventorySubscriptionsQuery: { ...updatedInventorySubscriptionsQuery, ...inventorySubscriptionsQuery },\n    toolbarQuery: query\n  };\n};\n\nconst apiQueries = {\n  parseRhsmQuery\n};\n\nexport { apiQueries as default, apiQueries };\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{data: {object}}}\n */\nconst selectorCache = { data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  report: state.messages?.report?.[props.productId],\n  viewId: props.viewId,\n  productId: props.productId\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => ({\n  ...props.query,\n  ...state.view?.query?.[props.productId],\n  ...state.view?.query?.[props.viewId]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{appMessages: {cloudigradeMismatch: boolean}}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (data, query = {}) => {\n  const { viewId = null, productId = null, report = {} } = data || {};\n  const appMessages = {\n    cloudigradeMismatch: false,\n    query\n  };\n\n  const cache = (viewId && productId && selectorCache.data[`${viewId}_${productId}`]) || undefined;\n\n  Object.assign(appMessages, { ...cache });\n\n  // Scan Tally response for Cloud Meter flags\n  if (report.fulfilled && appMessages.cloudigradeMismatch !== true) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA]: reportData = [] } = report.data || {};\n\n    const cloudigradeMismatch = reportData\n      .reverse()\n      .find(\n        ({ [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]: mismatch }) =>\n          mismatch === true\n      );\n\n    appMessages.cloudigradeMismatch = cloudigradeMismatch !== undefined;\n\n    selectorCache.data[`${viewId}_${productId}`] = {\n      ...appMessages\n    };\n  }\n\n  return { appMessages };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{appMessages: {cloudigradeMismatch: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst appMessagesSelectors = {\n  appMessages: selector,\n  makeAppMessages: makeSelector\n};\n\nexport { appMessagesSelectors as default, appMessagesSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\nimport {\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES as APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES\n} from '../../types/platformApiTypes';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @returns {object}\n */\nconst statePropsFilter = state => ({\n  ...state.user?.session\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{session: {entitled: boolean, permissions: object, authorized: object, admin: boolean,\n *     error: boolean}}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter], response => {\n  const { error = false, fulfilled = false, data = {}, ...rest } = response || {};\n  const updatedSession = {\n    ...rest,\n    admin: false,\n    entitled: false,\n    error,\n    authorized: {\n      [helpers.UI_NAME]: false,\n      inventory: false\n    },\n    permissions: {}\n  };\n\n  if (!error && fulfilled) {\n    const { user = {}, permissions: responsePermissions = [] } = data;\n\n    updatedSession.admin =\n      user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]?.[\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER\n      ]?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN] || false;\n\n    updatedSession.entitled =\n      user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]?.[APP_TYPES.SUBSCRIPTIONS]?.[\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED\n      ] || false;\n\n    // All permissions breakdown\n    responsePermissions.forEach(\n      ({\n        [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n        [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n      }) => {\n        const [app = '', resource, operation] = permission?.split(':') || [];\n\n        if (!updatedSession.permissions[app]) {\n          updatedSession.permissions[app] = {\n            all: false,\n            resources: {}\n          };\n        }\n\n        if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n          updatedSession.permissions[app].all = true;\n        }\n\n        if (!updatedSession.permissions[app].resources[resource]) {\n          updatedSession.permissions[app].resources[resource] = {};\n        }\n\n        updatedSession.permissions[app].resources[resource][operation] = definitions;\n      }\n    );\n\n    // Alias specific app permissions checks\n    updatedSession.authorized[helpers.UI_NAME] = updatedSession.permissions[APP_TYPES.SUBSCRIPTIONS]?.all || false;\n\n    updatedSession.authorized.inventory =\n      updatedSession.permissions[APP_TYPES.INVENTORY]?.all ||\n      Array.isArray(\n        updatedSession.permissions[APP_TYPES.INVENTORY]?.resources?.[RESOURCE_TYPES.HOSTS]?.[OPERATION_TYPES.ALL]\n      ) ||\n      Array.isArray(\n        updatedSession.permissions[APP_TYPES.INVENTORY]?.resources?.[RESOURCE_TYPES.HOSTS]?.[OPERATION_TYPES.READ]\n      ) ||\n      Array.isArray(\n        updatedSession.permissions[APP_TYPES.INVENTORY]?.resources?.[RESOURCE_TYPES.HOSTS]?.[OPERATION_TYPES.WRITE]\n      ) ||\n      false;\n  }\n\n  return { session: updatedSession };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{session: {entitled: boolean, permissions: Array, authorized: boolean, admin: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst userSessionSelectors = {\n  userSession: selector,\n  makeUserSession: makeSelector\n};\n\nexport { userSessionSelectors as default, userSessionSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsGuests?.[props.id]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter], response => {\n  const { metaId, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    status: responseData.status\n  };\n\n  if (responseData.fulfilled) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [] } = responseData.data || {};\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n      data: listData,\n      customResponseValue: customInventoryValue\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    updatedResponseData.listData = updatedListData;\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst guestsListSelectors = {\n  guestsList: selector,\n  makeGuestsList: makeSelector\n};\n\nexport { guestsListSelectors as default, guestsListSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{dataId: {string}, data: {object}}}\n */\nconst selectorCache = { dataId: null, data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.graph?.reportCapacity?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { graphTallyQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      graphTallyQuery: { ...state.view?.graphTallyQuery?.[props.viewId] }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    graphData: {},\n    query,\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n  delete responseMetaQuery[RHSM_API_QUERY_TYPES.START_DATE];\n  delete responseMetaQuery[RHSM_API_QUERY_TYPES.END_DATE];\n\n  const cachedGranularity =\n    (viewId && productId && selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`]) || undefined;\n\n  Object.assign(updatedResponseData, { ...cachedGranularity });\n\n  if (viewId && selectorCache.dataId !== viewId) {\n    selectorCache.dataId = viewId;\n    selectorCache.data = {};\n  }\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, responseMetaQuery)) {\n    const [report, capacity] = responseData.data;\n    const reportData = report?.[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA] || [];\n    const capacityData = capacity?.[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA] || [];\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Reporting graph entries\n    const customReportValue = (data, key, presetData) => ({\n      ...presetData,\n      hasData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_DATA],\n      hasCloudigradeData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_DATA],\n      hasCloudigradeMismatch: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]\n    });\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y,\n      hasInfinite: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE]\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment.utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE]).startOf('day').toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY = Number.parseInt(graphDataObj[graphDataObjKey], 10);\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value }, customValue: customReportValue });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`] = {\n      ...updatedResponseData\n    };\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst graphCardSelectors = {\n  graphCard: selector,\n  makeGraphCard: makeSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{dataId: {string}, data: {object}}}\n */\nconst selectorCache = { dataId: null, data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventoryHostsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventoryHostsQuery: { ...state.view?.inventoryHostsQuery?.[props.productId] }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Note: We use an in-memory cache to provide the user a pleasant UX experience. To\n * aid in that UX we need \"pending\" to fire in scenarios that are not loaded in-memory. Because\n * we load the cache first there are scenarios where the previous XHR call is still in state\n * when a subsequent fulfilled XHR call comes through. Without the _isEqual(query, metaQuery) check\n * the overlap of the prior fulfilled call interferes with the pending of the subsequent call.\n */\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const cache =\n    (viewId && productId && selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`]) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  // Reset cache on viewId update\n  if (viewId && selectorCache.dataId !== viewId) {\n    selectorCache.dataId = viewId;\n    selectorCache.data = {};\n  }\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, metaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.CLOUD_PROVIDER:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.HARDWARE:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.MEASUREMENT:\n          return value?.toLowerCase() || null;\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`] = {\n      ...updatedResponseData\n    };\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst inventoryListSelectors = {\n  inventoryList: selector,\n  makeInventoryList: makeSelector\n};\n\nexport { inventoryListSelectors as default, inventoryListSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * ToDo: Consider consolidating inventory selectors, and/or create API specific selectors, i.e. RHSM, etc\n * Breaking out the inventory selectors is a temporary solution until the API is finalized. Aspects\n * of the caching and applying the API schemas is now consistent enough to allow for grouping/refinement.\n */\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{dataId: {string}, data: {object}}}\n */\nconst selectorCache = { dataId: null, data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.subscriptionsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventorySubscriptionsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventorySubscriptionsQuery: { ...state.view?.inventorySubscriptionsQuery?.[props.productId] }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const cache =\n    (viewId && productId && selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`]) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  // Reset cache on viewId update\n  if (viewId && selectorCache.dataId !== viewId) {\n    selectorCache.dataId = viewId;\n    selectorCache.data = {};\n  }\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, metaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES.UPCOMING_EVENT_DATE:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.data[`${viewId}_${productId}_${JSON.stringify(query)}`] = {\n      ...updatedResponseData\n    };\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst subscriptionsListSelectors = {\n  subscriptionsList: selector,\n  makeSubscriptionsList: makeSelector\n};\n\nexport { subscriptionsListSelectors as default, subscriptionsListSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * ToDo: as part of future potential upgrades consider moving reduxHelpers.setApiQuery into statePropsFilter\n * The side effect is multiple queries being dumped into the views, meaning more \"configuration to handle\".\n * Leaving it as a single query passed from this selector and handling the \"setApiQuery\" in \"redux/common/apiQueries\"\n * is a first step.\n * i.e.\n * queries: {\n *    query: ...,\n *    graph: reduxHelpers.setApiQuery(..., RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES),\n *    inventory: reduxHelpers.setApiQuery(..., RHSM_API_QUERY_SET_INVENTORY_TYPES)\n * }\n */\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @param {object} defaultProps\n * @returns {object}\n */\nconst statePropsFilter = (state = {}, props, defaultProps = {}) => ({\n  query: {\n    ...defaultProps.query,\n    ...state.view?.query?.[defaultProps.viewId]\n  },\n  graphTallyQuery: {\n    ...defaultProps.graphTallyQuery,\n    ...state.view?.graphTallyQuery?.[defaultProps.viewId]\n  },\n  inventoryGuestsQuery: {\n    ...defaultProps.inventoryGuestsQuery,\n    ...state.view?.inventoryGuestsQuery?.[defaultProps.viewId]\n  },\n  inventoryHostsQuery: {\n    ...defaultProps.inventoryHostsQuery,\n    ...state.view?.inventoryHostsQuery?.[defaultProps.viewId]\n  },\n  inventorySubscriptionsQuery: {\n    ...defaultProps.inventorySubscriptionsQuery,\n    ...state.view?.inventorySubscriptionsQuery?.[defaultProps.viewId]\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable API param/query object.\n *\n * @type {{query: object, graphTallyQuery: object, inventoryGuestsQuery: object, inventoryHostsQuery: object\n *     inventorySubscriptionsQuery: object}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter], view => ({\n  query: { ...view.query },\n  graphTallyQuery: { ...view.graphTallyQuery },\n  inventoryGuestsQuery: { ...view.inventoryGuestsQuery },\n  inventoryHostsQuery: { ...view.inventoryHostsQuery },\n  inventorySubscriptionsQuery: { ...view.inventorySubscriptionsQuery }\n}));\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{query: object, graphTallyQuery: object, inventoryGuestsQuery: object, inventoryHostsQuery: object\n *     inventorySubscriptionsQuery: object}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst viewSelectors = {\n  view: selector,\n  makeView: makeSelector\n};\n\nexport { viewSelectors as default, viewSelectors, selector, makeSelector };\n","import appMessagesSelectors from './appMessagesSelectors';\nimport guestsListSelectors from './guestsListSelectors';\nimport graphCardSelectors from './graphCardSelectors';\nimport inventoryListSelectors from './inventoryListSelectors';\nimport subscriptionsListSelectors from './subscriptionsListSelectors';\nimport userSelectors from './userSelectors';\nimport viewSelectors from './viewSelectors';\n\nconst reduxSelectors = {\n  appMessages: appMessagesSelectors,\n  guestsList: guestsListSelectors,\n  graphCard: graphCardSelectors,\n  inventoryList: inventoryListSelectors,\n  subscriptionsList: subscriptionsListSelectors,\n  user: userSelectors,\n  view: viewSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect, useDispatch, useSelector as UseSelector, shallowEqual } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxHelpers, apiQueries } from './common';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\nimport { helpers } from '../common';\n\n/**\n * Wrapper for applying Router Dom withRouter and Redux connect.\n *\n * @param {Function} mapStateToProps\n * @param {Function} mapDispatchToProps\n * @returns {Function}\n */\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connect(mapStateToProps, mapDispatchToProps)(component));\n\n/**\n * Wrapper for Redux hook, useSelector. Applies test mode and a fallback value.\n *\n * @param {Function} selector\n * @param {*} value\n * @param {object} options\n * @returns {*}\n */\nconst useSelector = (selector, value = null, options = {}) => {\n  if (helpers.TEST_MODE) {\n    return value;\n  }\n\n  return UseSelector(selector, options.equality) ?? value;\n};\n\nexport {\n  apiQueries,\n  connect,\n  connectRouter,\n  reduxActions,\n  reduxHelpers,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  shallowEqual,\n  store,\n  useDispatch,\n  useSelector\n};\n","import React from 'react';\nimport path from 'path';\nimport { helpers } from '../../common/helpers';\nimport { RHSM_API_PATH_ID_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformLandingRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/');\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformModalRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = [\n  {\n    id: 'rhel-sw',\n    to: '/rhel-sw/:variant(all|arm|ibmpower|ibmz|x86)',\n    redirect: '/rhel-sw/all',\n    component: React.lazy(() => import('../rhelView/rhelView')),\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'openshift-sw',\n    to: '/openshift-sw',\n    component: React.lazy(() => import('../openshiftView/openshiftView')),\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'satellite-sw',\n    to: '/satellite-sw/:variant(all|capsule)',\n    component: React.lazy(() => import('../productView/productViewSatellite')),\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'optin',\n    to: '/optin',\n    component: React.lazy(() => import('../optinView/optinView')),\n    exact: true,\n    render: true,\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED\n  }\n];\n\n/**\n * Return an array of objects that describes navigation against API product IDs.\n *\n * @returns {Array}\n */\nconst navigation = [\n  {\n    id: 'all',\n    path: '/rhel-sw/all',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL,\n    productParameter: RHSM_API_PATH_ID_TYPES.RHEL,\n    viewParameter: `view${RHSM_API_PATH_ID_TYPES.RHEL}`,\n    default: true\n  },\n  {\n    id: 'arm',\n    path: '/rhel-sw/arm',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_ARM,\n    productParameter: RHSM_API_PATH_ID_TYPES.RHEL,\n    viewParameter: `view${RHSM_API_PATH_ID_TYPES.RHEL}`\n  },\n  {\n    id: 'ibmpower',\n    path: '/rhel-sw/ibmpower',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER,\n    productParameter: RHSM_API_PATH_ID_TYPES.RHEL,\n    viewParameter: `view${RHSM_API_PATH_ID_TYPES.RHEL}`\n  },\n  {\n    id: 'ibmz',\n    path: '/rhel-sw/ibmz',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z,\n    productParameter: RHSM_API_PATH_ID_TYPES.RHEL,\n    viewParameter: `view${RHSM_API_PATH_ID_TYPES.RHEL}`\n  },\n  {\n    id: 'x86',\n    path: '/rhel-sw/x86',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_X86,\n    productParameter: RHSM_API_PATH_ID_TYPES.RHEL,\n    viewParameter: `view${RHSM_API_PATH_ID_TYPES.RHEL}`\n  },\n  {\n    id: 'openshift-sw',\n    path: '/openshift-sw',\n    pathId: 'openshift-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.OPENSHIFT,\n    productParameter: RHSM_API_PATH_ID_TYPES.OPENSHIFT,\n    viewParameter: `view${RHSM_API_PATH_ID_TYPES.OPENSHIFT}`\n  },\n  {\n    id: 'satellite-sw',\n    path: '/satellite-sw/all',\n    pathId: 'satellite-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.SATELLITE,\n    productParameter: RHSM_API_PATH_ID_TYPES.SATELLITE,\n    viewParameter: `view${RHSM_API_PATH_ID_TYPES.SATELLITE}`\n  },\n  {\n    id: 'capsule',\n    path: '/satellite-sw/capsule',\n    pathId: 'satellite-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.SATELLITE_CAPSULE,\n    productParameter: RHSM_API_PATH_ID_TYPES.SATELLITE,\n    viewParameter: `view${RHSM_API_PATH_ID_TYPES.SATELLITE}`\n  }\n];\n\nconst routerConfig = {\n  appName,\n  navigation,\n  platformLandingRedirect,\n  platformModalRedirect,\n  routes\n};\n\nexport {\n  routerConfig as default,\n  routerConfig,\n  appName,\n  navigation,\n  platformLandingRedirect,\n  platformModalRedirect,\n  routes\n};\n","import { helpers } from '../../common/helpers';\nimport { routes, navigation } from './routerConfig';\n\n/**\n * Return an assumed dynamic route baseName directory\n * based on a predictable platform directory depth of\n * /[OPTIONAL]/[environment]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.pathPrefix\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName, pathPrefix }) => {\n  const path = pathName.split('/');\n  path.shift();\n  const pathSlice = pathPrefix && new RegExp(path[0]).test(pathPrefix) ? 2 : 1;\n\n  return `/${path.slice(0, pathSlice).join('/')}`;\n};\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName =\n  (helpers.TEST_MODE && '/') ||\n  (helpers.DEV_MODE && '/') ||\n  dynamicBaseName({ pathName: window.location.pathname, pathPrefix: helpers.UI_DEPLOY_PATH_PREFIX });\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Return an object matching a specific navigation object.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathname\n * @param {boolean} params.returnDefault\n * @returns {object}\n */\nconst getNavigationDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const defaultItem = returnDefault && navigation.find(item => item.default === true);\n  let navigationItem;\n\n  if (id) {\n    navigationItem = navigation.find(item => item.id === id);\n  }\n\n  if (!navigationItem && pathname) {\n    navigationItem =\n      navigation.find(item => item.path.replace(/\\/$/, '') === pathname.replace(/\\/$/, '')) ||\n      (returnDefault && defaultItem);\n  }\n\n  if (!navigationItem && returnDefault) {\n    navigationItem = defaultItem;\n  }\n\n  if (navigationItem) {\n    const [, routeHref] = window.location.href.split(navigationItem.path);\n    navigationItem.routeHref = `${navigationItem.path}${routeHref || ''}`;\n  }\n\n  return { ...(navigationItem || {}) };\n};\n\n/**\n * Return an object matching a specific, or the first generic route.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathname\n * @returns {object}\n */\nconst getRouteDetail = ({ id = null, pathname = null }) => {\n  let routeItem;\n\n  if (id) {\n    routeItem = routes.find(value => id === value.id);\n  }\n\n  if (!routeItem && pathname) {\n    routeItem = routes.find(value => pathname === value.to);\n    routeItem = routeItem || routes.find(item => pathname.includes(item?.to?.split(':')[0]));\n  }\n\n  return { ...(routeItem || {}) };\n};\n\n/**\n * Return an object generated from both generic routes and specific navigation objects.\n * ID is not passed to \"getRouteDetail\" to avoid conflicts between routing and\n * navigation.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathname\n * @param {boolean} params.returnDefault\n * @returns {object}\n */\nconst getNavRouteDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const navDetail = getNavigationDetail({ id, pathname, returnDefault });\n  const routeDetail = getRouteDetail({ pathname: navDetail.path || pathname });\n\n  return { ...routeDetail, ...navDetail };\n};\n\nconst routerHelpers = {\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n","import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Route } from 'react-router-dom';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\nimport { Loader } from '../loader/loader';\n\n/**\n * A routing redirect.\n *\n * @param {object} props\n * @param {string} props.baseName\n * @param {object} props.history\n * @param {boolean} props.isRedirect\n * @param {boolean} props.isReplace\n * @param {string} props.url\n * @param {string} props.route\n * @returns {Node}\n */\nconst Redirect = ({ baseName, history, isRedirect, isReplace, url, route }) => {\n  const forceNavigation = urlRoute => {\n    if (!helpers.DEV_MODE && !helpers.TEST_MODE) {\n      if (isReplace) {\n        window.location.replace(urlRoute);\n      } else {\n        window.location.href = urlRoute;\n      }\n    }\n  };\n\n  if (isRedirect === true) {\n    if (route && history) {\n      const routeDetail = routerHelpers.getRouteDetail({ pathname: route });\n\n      return (\n        <React.Suspense fallback={<Loader variant=\"title\" />}>\n          <Route path=\"*\">{routeDetail && <routeDetail.component />}</Route>\n        </React.Suspense>\n      );\n    }\n\n    const forcePath = url || (route && path.join(baseName, route));\n    forceNavigation(forcePath);\n\n    return (\n      ((helpers.DEV_MODE || helpers.TEST_MODE) && <React.Fragment>Redirected towards {forcePath}</React.Fragment>) ||\n      null\n    );\n  }\n\n  return null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, isReplace: boolean, history: object, baseName: string, url: string}}\n */\nRedirect.propTypes = {\n  history: PropTypes.object,\n  isRedirect: PropTypes.bool.isRequired,\n  isReplace: PropTypes.bool,\n  url: PropTypes.string,\n  baseName: PropTypes.string,\n  route: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{route: null, isReplace: boolean, history: null, baseName: string, url: null}}\n */\nRedirect.defaultProps = {\n  history: null,\n  isReplace: false,\n  url: null,\n  baseName: routerHelpers.baseName,\n  route: null\n};\n\nconst RoutedRedirect = withRouter(Redirect);\n\nexport { RoutedRedirect as default, RoutedRedirect, Redirect };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport Redirect from './redirect';\nimport { routerHelpers } from './routerHelpers';\nimport { routerConfig } from './routerConfig';\nimport { Loader } from '../loader/loader';\n\n/**\n * Load routes.\n *\n * @augments React.Component\n */\nclass Router extends React.Component {\n  /**\n   * Parse settings array with route options.\n   *\n   * @returns {{redirectRoot: Node, renderRoutes: Array}}\n   */\n  renderRoutes() {\n    const { routes } = this.props;\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n    let redirectRoot = null;\n\n    return {\n      renderRoutes: routes.map(item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        if (item.redirect) {\n          redirectRoot = <ReactRouterDomRedirect to={item.redirect} />;\n        }\n\n        if (item.render === true) {\n          return (\n            <Route\n              exact={item.exact}\n              key={item.to}\n              path={item.to}\n              strict={item.strict}\n              render={({ location, ...routeProps }) => {\n                const navDetail = routerHelpers.getNavigationDetail({\n                  pathname: location && location.pathname,\n                  returnDefault: false\n                });\n\n                const { URLSearchParams, decodeURIComponent } = window;\n                const parsedSearch = {};\n\n                [\n                  ...new Set(\n                    [...new URLSearchParams(decodeURIComponent(location.search))].map(\n                      ([param, value]) => `${param}~${value}`\n                    )\n                  )\n                ].forEach(v => {\n                  const [param, value] = v.split('~');\n                  parsedSearch[param] = value;\n                });\n\n                const updatedLocation = {\n                  ...location,\n                  parsedSearch\n                };\n\n                return (\n                  <item.component\n                    routeDetail={{\n                      baseName: routerHelpers.baseName,\n                      errorRoute: activateOnErrorRoute,\n                      routes,\n                      routeItem: { ...item },\n                      ...navDetail\n                    }}\n                    location={updatedLocation}\n                    {...routeProps}\n                  />\n                );\n              }}\n            />\n          );\n        }\n\n        return <Route exact={item.exact} key={item.to} path={item.to} component={item.component} />;\n      }),\n      redirectRoot\n    };\n  }\n\n  /**\n   * Render router.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { renderRoutes, redirectRoot } = this.renderRoutes();\n\n    return (\n      <React.Suspense fallback={<Loader variant=\"title\" />}>\n        <Switch>\n          {renderRoutes}\n          {redirectRoot}\n        </Switch>\n      </React.Suspense>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.boolean,\n      component: PropTypes.any.isRequired,\n      disabled: PropTypes.boolean,\n      exact: PropTypes.boolean,\n      redirect: PropTypes.string,\n      render: PropTypes.boolean,\n      strict: PropTypes.boolean,\n      to: PropTypes.string.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerConfig.routes\n};\n\nexport { Router as default, Router, Redirect, routerHelpers, routerConfig };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {Node|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {Node}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, icon: Node|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/components/cjs/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/components/cjs/NotAuthorized';\nimport { connectRouter, reduxActions, reduxSelectors } from '../../redux';\nimport { rhsmApiTypes } from '../../types';\nimport { helpers } from '../../common';\nimport { Redirect, routerHelpers, routerConfig } from '../router/router';\nimport MessageView from '../messageView/messageView';\nimport { translate } from '../i18n/i18n';\n\n/**\n * An authentication pass-through component.\n *\n * @augments React.Component\n */\nclass Authentication extends Component {\n  appName = routerConfig.appName;\n\n  removeListeners = helpers.noop;\n\n  async componentDidMount() {\n    const {\n      authorizeUser,\n      hideGlobalFilter,\n      history,\n      initializeChrome,\n      onNavigation,\n      session,\n      setAppName\n    } = this.props;\n    const { subscriptions: authorized } = session.authorized || {};\n\n    if (!authorized) {\n      await authorizeUser();\n    }\n\n    if (!helpers.DEV_MODE) {\n      initializeChrome();\n      setAppName(this.appName);\n      hideGlobalFilter();\n\n      const appNav = onNavigation(event => {\n        const { routeHref } = routerHelpers.getNavRouteDetail({ id: event.navId, returnDefault: true });\n        history.push(routeHref);\n      });\n\n      this.removeListeners = () => {\n        appNav();\n      };\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  /**\n   * Render authenticated children or messaging.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children, session, t } = this.props;\n    const { subscriptions: authorized } = session.authorized || {};\n\n    if (helpers.UI_DISABLED) {\n      return (\n        <MessageView>\n          <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n        </MessageView>\n      );\n    }\n\n    if (authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (session.errorCodes && session.errorCodes.includes(rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES.OPTIN)) ||\n      session.status === 418\n    ) {\n      if (helpers.TEST_MODE) {\n        return <React.Fragment>{session.status} redirect</React.Fragment>;\n      }\n      return <Redirect isRedirect route={routerHelpers.getErrorRoute.to} />;\n    }\n\n    return (\n      <MessageView>\n        <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n      </MessageView>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, t: Function,\n *     children: Node, initializeChrome: Function, session: object, history: object,\n *     hideGlobalFilter: Function}}\n */\nAuthentication.propTypes = {\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  hideGlobalFilter: PropTypes.func,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  initializeChrome: PropTypes.func,\n  onNavigation: PropTypes.func,\n  setAppName: PropTypes.func,\n  session: PropTypes.shape({\n    authorized: PropTypes.shape({\n      [routerConfig.appName]: PropTypes.bool\n    }),\n    errorCodes: PropTypes.arrayOf(PropTypes.string),\n    pending: PropTypes.bool,\n    status: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, t: translate,\n *     initializeChrome: Function, session: {authorized: object, errorCodes: Array, pending: boolean,\n *     status: number}, hideGlobalFilter: Function}}\n */\nAuthentication.defaultProps = {\n  authorizeUser: helpers.noop,\n  hideGlobalFilter: helpers.noop,\n  initializeChrome: helpers.noop,\n  onNavigation: helpers.noop,\n  setAppName: helpers.noop,\n  session: {\n    authorized: {},\n    errorCodes: [],\n    pending: false,\n    status: null\n  },\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser()),\n  hideGlobalFilter: isHidden => dispatch(reduxActions.platform.hideGlobalFilter(isHidden)),\n  initializeChrome: () => dispatch(reduxActions.platform.initializeChrome()),\n  onNavigation: callback => dispatch(reduxActions.platform.onNavigation(callback)),\n  setAppName: name => dispatch(reduxActions.platform.setAppName(name))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.user.makeUserSession();\n\nconst ConnectedAuthentication = connectRouter(makeMapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications/cjs';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router/router';\nimport Authentication from './authentication/authentication';\n\n/**\n * Application\n *\n * @augments React.Component\n */\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n    getLocale();\n  }\n\n  /**\n   * Render application.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <NotificationsPortal />\n        <Authentication>\n          <Router />\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{locale: object, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\n/**\n * Default props.\n *\n * @type {{locale: {}, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { baseName } from './components/router/routerHelpers';\nimport { store } from './redux';\nimport App from './components/app';\nimport '@redhat-cloud-services/frontend-components/index.css';\nimport '@redhat-cloud-services/frontend-components-notifications/index.css';\nimport './styles/index.scss';\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter basename={baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PageHeader as RcsPageHeader,\n  PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components/components/cjs/PageHeader';\nimport { Button, Flex, FlexItem, Label as PfLabel } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {boolean} props.includeTour\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst PageHeader = ({ children, includeTour, productLabel, t }) => (\n  <RcsPageHeader>\n    <Flex justifyContent={{ sm: 'justifyContentSpaceBetween' }}>\n      <FlexItem>\n        <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n      </FlexItem>\n      <FlexItem>\n        {includeTour && (\n          <Button variant=\"link\" className=\"uxui-curiosity__button-tour\" isInline>\n            <PfLabel color=\"blue\">{t('curiosity-optin.buttonTour')}</PfLabel>\n          </Button>\n        )}\n      </FlexItem>\n    </Flex>\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, includeTour: boolean, productLabel: string, t: Function}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  includeTour: PropTypes.bool,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{includeTour: boolean, productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  includeTour: false,\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageMessages = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-messages ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageMessages.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageMessages.defaultProps = {\n  className: ''\n};\n\nexport { PageMessages as default, PageMessages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageSection = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-section ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageSection.defaultProps = {\n  className: ''\n};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/cjs/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageToolbar = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-toolbar ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageToolbar.defaultProps = {\n  className: ''\n};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageMessages } from './pageMessages';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {Node} props.children\n * @returns {Node}\n */\nconst PageLayout = ({ children }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageMessages)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className=\"curiosity\">\n      {React.Children.toArray(children).filter(\n        child => child.type !== PageHeader && child.type !== PageMessages && child.type !== PageToolbar\n      )}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageLayout.defaultProps = {};\n\nexport { PageLayout as default, PageLayout, PageHeader, PageMessages, PageSection, PageToolbar };\n"],"sourceRoot":""}
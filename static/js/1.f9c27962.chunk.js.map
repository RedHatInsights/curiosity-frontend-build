{"version":3,"sources":["components/graphCard/graphCardHelpers.js","components/graphCard/graphCardChartTooltip.js","components/graphCard/graphCardChartLegend.js","components/chartArea/chartArea.js","components/graphCard/graphCard.js","components/c3GraphCard/c3GraphCardHelpers.js","components/c3GraphCard/c3GraphCardLegendItem.js","components/c3Chart/c3Chart.js","components/c3GraphCard/c3GraphCard.js","components/inventoryList/inventoryListHelpers.js","components/guestsList/guestsList.js","components/pagination/pagination.js","components/inventoryList/inventoryList.js","components/toolbar/toolbarTypes.js","components/toolbar/toolbar.js","components/form/select.js","components/graphCard/graphCardTypes.js"],"names":["getTooltipDate","date","granularity","momentDate","moment","utc","GRANULARITY_TYPES","QUARTERLY","format","dateHelpers","timestampQuarterFormats","yearShort","add","MONTHLY","timestampMonthFormats","yearLong","WEEKLY","timestampDayFormats","DAILY","yAxisTickFormatFallback","tick","abs","Math","updatedTick","updatedAbbr","pow","graphCardHelpers","getChartXAxisLabelIncrement","xAxisTickFormat","previousDate","formattedDate","isNewYear","Number","parseInt","year","replace","yAxisTickFormat","locale","helpers","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","length","GraphCardChartTooltip","datum","productLabel","t","header","data","itemsByKey","Object","keys","forEach","key","index","tempDataFacet","color","test","thresholdStringValue","hasInfinite","y","label","value","dataFactsValue","hasData","product","push","className","summary","colSpan","map","dataFacet","aria-hidden","style","backgroundColor","defaultProps","translate","GraphCardChartLegend","onClick","id","props","chart","viewId","updatedToggle","toggle","store","dispatch","type","reduxTypes","graph","SET_GRAPH_LEGEND","legend","this","dataSets","isToggled","hide","chartId","isDisabled","isThreshold","labelContent","tooltipContent","checkIsToggled","button","Button","onKeyPress","tabIndex","variant","component","icon","visibility","borderTopColor","Tooltip","content","position","TooltipPosition","top","enableFlip","distance","entryDelay","exitDelay","Fragment","stroke","find","context","renderLegendItem","React","Component","noop","ConnectedGraphCardChartLegend","connect","ChartArea","state","chartWidth","dataSetsToggle","resizeObserver","containerRef","createRef","tooltipRef","onHide","forceUpdate","onRevert","onToggle","onResizeContainer","current","clientWidth","setState","getIsToggled","setResizeObserve","containerElement","ResizeObserver","window","observe","unobserve","addEventListener","removeEventListener","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","x","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","item","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","filter","set","isStacked","dataSetMaxYStacked","floored","floor","log10","ceil","maxY","chartDomain","chartTooltip","tooltipDataSet","fill","_cloneDeep","mockDatum","tooltip","isValidElement","cloneElement","values","v","VictoryVoronoiCursorContainer","createContainer","parsedTooltipData","getTooltipData","globalContainerBounds","globalTooltipBounds","FlyoutComponent","obj","containerBounds","getBoundingClientRect","tooltipBounds","right","xCoordinate","width","htmlContent","applyParsedTooltipData","height","ref","display","xmlns","cursorDimension","labels","labelComponent","voronoiPadding","chartLegend","legendProps","revert","stacked","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","generateId","name","themeColor","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","tooltipComponent","containerComponent","renderTooltip","undefined","chartProps","Chart","duration","ChartAxis","renderChart","ChartStack","renderLegend","bottom","left","GraphCard","onUpdateGraphData","getGraphReportsCapacity","productId","query","graphGranularity","getQueryGranularity","getRangedDateTime","startDate","endDate","RHSM_API_QUERY_TYPES","START_DATE","toISOString","END_DATE","onGranularitySelect","event","SET_QUERY_RHSM_TYPES","GRANULARITY","prevProps","_isEqual","filterGraphData","graphData","selectOptionsType","selected","graphCardTypes","getGranularityOptions","updatedGranularity","chartAreaProps","JSON","stringify","filtered","tempFiltered","onLoad","chartColorGreenDark","assign","filteredGraphData","cardTitle","children","error","pending","options","Card","CardHeader","CardTitle","Title","headingLevel","size","CardActions","aria-label","onSelect","selectedOptions","placeholder","CardBody","UI_DISABLED_GRAPH","makeMapStateToProps","reduxSelectors","graphCard","makeGraphCard","ConnectedGraphCard","reduxActions","rhsm","c3GraphCardHelpers","productShortLabel","hiddenDataFacets","converted","colors","columns","groups","names","types","convertTimeSeriesDate","TEST_MODE","local","totalData","filteredValue","pop","configuration","order","a","b","title","ratio","updatedValue","dataItem","dataValue","unloadBeforeLoad","show","spline","point","grid","axis","xAxisTicks","slice","dateIndex","default","min","outer","C3GraphCardLegendItem","updatedIsToggled","onFocus","getToggle","focus","getColor","onMouseOver","onBlur","onMouseOut","C3Chart","node","generateChart","config","destroy","onComplete","updatedChart","c3","generate","bindto","load","unload","done","C3GraphCard","filteredData","isDataHidden","includes","inventoryListHelpers","filters","cellData","updatedColumnHeaders","updatedCells","allCells","entries","headerUpdated","cellUpdated","cell","columnHeaders","cells","GuestsList","currentPage","limit","previousData","onUpdateGuestsData","getHostsInventoryGuests","updatedQuery","LIMIT","OFFSET","apiQueries","parseRhsmQuery","guestsQuery","onScroll","target","numberOfGuests","listData","scrollHeight","scrollTop","clientHeight","newPage","updatedData","prevState","filterGuestsData","scrollLoader","tableProps","borders","colCount","rowCount","TableVariant","compact","updatedRows","updatedHeight","renderLoader","rows","perPageDefault","renderTable","guestsList","makeGuestsList","ConnectedGuestsList","Pagination","onPage","page","offsetDefault","updatedPerPage","offset","setOffset","setLimit","onPerPage","perPage","updatedActions","dropDirection","isCompact","itemCount","updatedPage","onSetPage","onPerPageSelect","ConnectedPagination","view","InventoryList","onUpdateInventoryData","getHostsInventory","filterInventoryData","hasGuests","guestsId","subscriptionManagerId","expandedContent","loaderPerPage","CardFooter","TableToolbar","isFooter","UI_DISABLED_TABLE","inventoryList","makeInventoryList","ConnectedInventoryList","toolbarTypes","optionsType","SLA","SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","USAGE","USAGE_TYPES","DEVELOPMENT","DISASTER","PRODUCTION","UNSPECIFIED","Toolbar","onClear","hardFilterReset","dispatchActions","toolbar","SET_ACTIVE_FILTERS","activeFilters","Set","SET_QUERY_CLEAR","clearFilters","SET_FILTER_TYPE","currentFilter","setDispatch","onClearFilter","categoryTitle","categoryValue","updatedActiveFilters","updatedCurrentFilter","onCategorySelect","field","actions","resetPage","Array","isArray","SET_QUERY_CLEAR_ALL_OFFSET","getCurrentFilter","optionsSelected","filterOptions","setSelectFilter","ToolbarFilter","chips","deleteChip","categoryName","showToolbarItem","categoryOptions","categoryOptionsSelected","collapseListedFiltersBreakpoint","clearAllFilters","ToolbarContent","ToolbarToggleGroup","toggleIcon","breakpoint","ToolbarGroup","ToolbarItem","renderSelectFilter","filterType","UI_DISABLED_TOOLBAR","ConnectedToolbar","Select","isExpanded","titleSelection","updatedOptions","optionsIndex","findIndex","option","SelectVariant","single","updateSelected","opt","mockUpdatedOptions","mockTarget","selectedIndex","checkbox","checked","mockEvent","currentTarget","persist","expanded","formatOptions","_isPlainObject","activateOptions","convertedOption","text","textContent","ariaLabel","isToggleText","pfSelectOptions","selections","isOpen","placeholderText","btoa","data-value","data-title"],"mappings":"yWA+BMA,EAAiB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACxBC,EAAaC,IAAOC,IAAIJ,GAE9B,OAAQC,GACN,KAAKI,IAAkBC,UACrB,MAAM,GAAN,OAAUJ,EAAWK,OAAOC,IAAYC,wBAAwBC,WAAhE,cAAgFR,EAC7ES,IAAI,EAAG,WACPJ,OAAOC,IAAYC,wBAAwBC,YAEhD,KAAKL,IAAkBO,QACrB,OAAOV,EAAWK,OAAOC,IAAYK,sBAAsBC,UAE7D,KAAKT,IAAkBU,OACrB,MAAM,GAAN,OAAUb,EAAWK,OAAOC,IAAYQ,oBAAZ,OAA5B,cAAwEd,EACrES,IAAI,EAAG,QACPJ,OAAOC,IAAYQ,oBAAoBN,YAE5C,KAAKL,IAAkBY,MACvB,QACE,OAAOf,EAAWK,OAAOC,IAAYQ,oBAAZ,QAmEzBE,EAA0B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC3BC,EAAMC,KAAKD,IAAID,GACjBG,EAAcH,EACdI,EAAc,GAgBlB,OAdIH,GAAOC,KAAKG,IAAI,GAAI,KACtBD,EAAc,IACdD,EAAcH,EAAOE,KAAKG,IAAI,GAAI,KACzBJ,EAAMC,KAAKG,IAAI,GAAI,KAAOJ,GAAOC,KAAKG,IAAI,GAAI,IACvDD,EAAc,IACdD,EAAcH,EAAOE,KAAKG,IAAI,GAAI,IACzBJ,EAAMC,KAAKG,IAAI,GAAI,IAAMJ,GAAOC,KAAKG,IAAI,GAAI,IACtDD,EAAc,IACdD,EAAcH,EAAOE,KAAKG,IAAI,GAAI,IACzBJ,EAAMC,KAAKG,IAAI,GAAI,IAAMJ,GAAOC,KAAKG,IAAI,GAAI,KACtDD,EAAc,IACdD,EAAcH,EAAOE,KAAKG,IAAI,GAAI,IAG9B,GAAN,OAAUF,GAAV,OAAwBC,IA0BpBE,EAAmB,CACvBC,4BAzJkC,SAAAzB,GAClC,OAAQA,GACN,KAAKI,IAAkBY,MACrB,OAAO,EACT,KAAKZ,IAAkBU,OACvB,KAAKV,IAAkBO,QACrB,OAAO,EACT,KAAKP,IAAkBC,UACvB,QACE,OAAO,IAiJXP,iBACA4B,gBArGsB,SAAC,GAA+C,IAA7C3B,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,YAAakB,EAAyB,EAAzBA,KAAMS,EAAmB,EAAnBA,aAClD,GAAK5B,GAASC,EAAd,CAIA,IAGI4B,EAHE3B,EAAaC,IAAOC,IAAIJ,GACxB8B,EACK,IAATX,GAAcY,OAAOC,SAAS9B,EAAW+B,OAAQ,MAAQF,OAAOC,SAAS7B,IAAOC,IAAIwB,GAAcK,OAAQ,IAG5G,OAAQhC,GACN,KAAKI,IAAkBC,UAKrBuB,GAJAA,EAAgBC,EACZ5B,EAAWK,OAAOC,IAAYC,wBAAwBC,WACtDR,EAAWK,OAAOC,IAAYC,wBAAZ,QAEQyB,QAAQ,KAAM,MAC5C,MACF,KAAK7B,IAAkBO,QAKrBiB,GAJAA,EAAgBC,EACZ5B,EAAWK,OAAOC,IAAYK,sBAAsBH,WACpDR,EAAWK,OAAOC,IAAYK,sBAAZ,QAEQqB,QAAQ,KAAM,MAC5C,MACF,KAAK7B,IAAkBU,OACvB,KAAKV,IAAkBY,MACvB,QAKEY,GAJAA,EAAgBC,EACZ5B,EAAWK,OAAOC,IAAYQ,oBAAoBN,WAClDR,EAAWK,OAAOC,IAAYQ,oBAAZ,QAEQkB,QAAQ,aAAc,QAIxD,OAAOL,IAkEPM,gBAlBsB,SAAC,GAAkD,IAAhDhB,EAA+C,EAA/CA,KAA+C,IAAzCiB,cAAyC,MAAhCC,IAAQC,kBAAwB,EACpEhB,EAAW,UAAM,IAAIiB,KAAKC,aAAaJ,EAAQ,CACjDK,sBAAuB,EACvBC,SAAU,UACVC,eAAgB,UACfpC,OAAOY,IAMV,OAJIG,EAAYsB,OAAS,GAAKtB,EAAYsB,QAAU,UAAGzB,GAAOyB,SAC5DtB,EAAcJ,EAAwB,CAAEC,UAGnCG,GAQPJ,2B,iBCxJI2B,EAAwB,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,MAAO7C,EAAmC,EAAnCA,YAAa8C,EAAsB,EAAtBA,aAAcC,EAAQ,EAARA,EAC7DC,EAAS,KACPC,EAAO,GAF4D,GAG7CJ,GAAS,IAA7BK,kBAHiE,MAGpD,GAHoD,EAmCzE,OA9BAC,OAAOC,KAAKF,GAAYG,SAAQ,SAACC,EAAKC,GAAW,IAAD,EAC7B,EAAH,IAAVA,IACFP,EAASlD,EAAe,CACtBC,KAAI,UAAEmD,EAAWI,UAAb,aAAE,EAAiBL,KAAKlD,KAC5BC,iBAIJ,IAAMwD,EAAgB,CACpBC,MAAK,UAAEP,EAAWI,UAAb,aAAE,EAAiBG,OAG1B,GAAI,aAAaC,KAAKJ,GAAM,CAAC,IAAD,MACpBK,GACH,UAAAT,EAAWI,UAAX,eAAiBL,KAAKW,cAAeb,EAAE,4CAAxC,oBACCG,EAAWI,UADZ,aACC,EAAiBL,KAAKY,SADvB,QAC4Bd,EAAE,gCAEhCS,EAAcM,MAAQf,EAAE,kCACxBS,EAAcO,MAAQJ,MACjB,CAAC,IAAD,IACCK,GAC+B,KAAlC,UAAAd,EAAWI,UAAX,eAAiBL,KAAKgB,UAAqBlB,EAAE,iCAA9C,UAAiFG,EAAWI,UAA5F,aAAiF,EAAiBL,KAAKY,IAAK,EAE9GL,EAAcM,MAAQf,EAAE,mBAAD,OAAoBO,EAApB,SAAgC,CAAEY,QAASpB,IAClEU,EAAcO,MAAQC,EAGxBf,EAAKkB,KAAKX,MAIV,yBAAKY,UAAU,mBACb,2BAAOC,QAAStB,EAAE,mCACdE,EAAKN,QAAUK,GACf,+BACE,4BACE,wBAAIsB,QAAS,GAAItB,MAIrB,KACAC,EAAKN,QACL,+BACGM,EAAKsB,KAAI,SAAAC,GAAS,OACjB,wBAAIlB,IAAG,kBAAakB,EAAUV,QAC5B,4BACE,yBACEW,eAAA,EACAL,UAAU,kCACVM,MAAO,CACLC,gBAAiBH,EAAUf,OAAS,iBAGvCe,EAAUV,OAEb,4BAAKU,EAAUT,aAKrB,OAEDd,EAAKN,QAAUI,EAAE,qCAAwC,OAkClEH,EAAsBgC,aAAe,CACnC/B,MAAO,GACPC,aAAc,GACdC,EAAG8B,K,iCCzGCC,E,4MAkBJC,QAAU,SAAAC,GAAO,IAAD,EACY,EAAKC,MAAvBC,EADM,EACNA,MAAOC,EADD,EACCA,OACTC,EAAgBF,EAAMG,OAAOL,GAEnCM,IAAMC,SAAS,CACbC,KAAMC,IAAWC,MAAMC,iBACvBC,OAAO,yBACDT,EADA,YACUH,GAAOI,M,kEAxBN,IAAD,EACuBS,KAAKZ,MAAtCC,EADU,EACVA,MAAOrC,EADG,EACHA,MAAO+C,EADJ,EACIA,OAAQT,EADZ,EACYA,OAC9BtC,EAAMiD,SAASzC,SAAQ,YAAa,IAAV2B,EAAS,EAATA,IACDY,EAAO,GAAD,OAAIT,EAAJ,YAAcH,KAASE,EAAMa,UAAUf,KAGlEE,EAAMc,KAAKhB,Q,0CAmC4E,IAAD,OAAzEiB,EAAyE,EAAzEA,QAASxC,EAAgE,EAAhEA,MAAOyC,EAAyD,EAAzDA,WAAYC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,eAAkB,EACxDR,KAAKZ,MAA/BC,EADkF,EAClFA,MAAOU,EAD2E,EAC3EA,OAAQT,EADmE,EACnEA,OACjBmB,EAAiBV,EAAO,GAAD,OAAIT,EAAJ,YAAcc,KAAcf,EAAMa,UAAUE,GAEnEM,EACJ,kBAACC,EAAA,EAAD,CACEzB,QAAS,kBAAM,EAAKA,QAAQkB,IAC5BQ,WAAY,kBAAM,EAAK1B,QAAQkB,IAC/B7B,UAAU,sBACVsC,SAAU,EACVpD,IAAG,2BAAsB2C,GACzBU,QAAQ,OACRC,UAAU,IACVV,WAAYA,EACZW,MACIX,GAAcI,IAAmB,kBAAC,IAAD,OAClCH,GACC,wBACE1B,eAAA,EACAL,UAAU,wBACVM,MAAO,CACLoC,WAAaZ,GAA4BI,EAAd,SAA6C,UACxES,eAAgBtD,MAIpB,yBACEgB,eAAA,EACAL,UAAU,cACVM,MAAO,CACLoC,WAAaZ,GAA4BI,EAAd,SAA6C,UACxE3B,gBAAiBlB,MAMxB2C,GAiBL,OAAIC,EAEA,kBAACW,EAAA,EAAD,CACE1D,IAAG,4BAAuB2C,GAC1BgB,QAAS,2BAAIZ,GACba,SAAUC,IAAgBC,IAC1BC,YAAY,EACZC,SAAU,EACVC,WAAY,IACZC,UAAW,GAEVjB,GAKAA,I,+BAQC,IAAD,SAC4BV,KAAKZ,MAAhCpC,EADD,EACCA,MAAOC,EADR,EACQA,aAAcC,EADtB,EACsBA,EAE7B,OACE,kBAAC,IAAM0E,SAAP,KACG5E,EAAMiD,SAASvB,KAAI,YAA6C,IAA1CS,EAAyC,EAAzCA,GAAImB,EAAqC,EAArCA,YAAauB,EAAwB,EAAxBA,OAAwB,IAAhBzE,KACxCiD,SADwD,MAAT,GAAS,GAEtDyB,MAAK,gBAAG9D,EAAH,EAAGA,EAAGI,EAAN,EAAMA,QAAN,OAAqBJ,GAAK,IAAiB,IAAZI,GAAsBJ,GAAK,IAAqB,IAAhBsC,OAA0B,EAEhGC,EACHD,GACCpD,EAAE,CAAC,mBAAD,OAAoBiC,EAApB,2CAAkE,CAClEd,QAASpB,EACT8E,QAAS9E,KAEbC,EAAE,CAAC,mBAAD,OAAoBiC,EAApB,oCAA2D,CAC3Dd,QAASpB,EACT8E,QAAS9E,IAGPuD,EACHF,GACCpD,EAAE,CAAC,mBAAD,OAAoBiC,EAApB,2DAAkF,CAClFd,QAASpB,EACT8E,QAAS9E,KAEbC,EAAE,mBAAD,OAAoBiC,EAApB,iBAAuC,CAAEd,QAASpB,EAAc8E,QAAS9E,IAE5E,OAAO,EAAK+E,iBAAiB,CAC3B5B,QAASjB,EACTvB,MAAOiE,EACPtB,eACAF,aACAC,cACAE,2B,GA1JuByB,IAAMC,WAkMzCjD,EAAqBF,aAAe,CAClCM,MAAO,CACLc,KAAM5D,IAAQ4F,KACd3C,OAAQjD,IAAQ4F,KAChBjC,UAAW3D,IAAQ4F,MAErBnF,MAAO,CACLiD,SAAU,IAEZF,OAAQ,GACR9C,aAAc,GACdC,EAAG8B,IACHM,OAAQ,mBAGV,IAEM8C,EAAgCC,aAFd,SAAC,GAAD,MAAgB,CAAEtC,OAAlB,EAAGF,MAA6BE,UAElBsC,CAAyBpD,G,8EC1MzDqD,E,4MACJC,MAAQ,CAAEC,WAAY,G,EAEtBC,eAAiB,G,EAEjBC,eAAiBnG,IAAQ4F,K,EAEzBQ,aAAeV,IAAMW,Y,EAErBC,WAAaZ,IAAMW,Y,EAgBnBE,OAAS,SAAA3D,GACP,EAAKsD,eAAL,eAA2B,EAAKA,eAAhC,eAAiDtD,GAAK,IACtD,EAAK4D,e,EAQPC,SAAW,WACT,EAAKP,eAAiB,GACtB,EAAKM,e,EAUPE,SAAW,SAAA9D,GACT,IAAMI,GAAiB,EAAKkD,eAAetD,GAI3C,OAHA,EAAKsD,eAAL,eAA2B,EAAKA,eAAhC,eAAiDtD,EAAKI,IACtD,EAAKwD,cAEExD,G,EAQT2D,kBAAoB,WAAO,IACjBV,EAAe,EAAKD,MAApBC,WADgB,GAEI,EAAKG,aAAaQ,SAAW,IAAjDC,mBAFgB,MAEF,EAFE,EAIpBA,IAAgBZ,GAClB,EAAKa,SAAS,CAAEb,WAAYY,K,EAYhCE,aAAe,SAAAnE,GAAE,OAAI,EAAKsD,eAAetD,KAAO,G,kEAjE9Ca,KAAKuD,qB,6CAILvD,KAAK0C,mB,yCAkEa,IAAD,OACXc,EAAmBxD,KAAK2C,aAAaQ,QACnCM,EAAmBC,OAAnBD,eAER,GAAID,GAAoBC,EAAgB,CACtC,IAAMf,EAAiB,IAAIe,EAAezD,KAAKkD,mBAC/CR,EAAeiB,QAAQH,GACvBxD,KAAK0C,eAAiB,kBAAMA,EAAekB,UAAUJ,SAErDxD,KAAKkD,oBACLQ,OAAOG,iBAAiB,SAAU7D,KAAKkD,mBACvClD,KAAK0C,eAAiB,kBAAMgB,OAAOI,oBAAoB,SAAU,EAAKZ,sB,sCASzD,IAAD,EAC8DlD,KAAKZ,MAAzE2E,EADM,EACNA,oBAAqBlI,EADf,EACeA,gBAAiBQ,EADhC,EACgCA,gBAAiB4D,EADjD,EACiDA,SACzD+D,EAAa,GACbC,EAAa,GACfC,EAAgBjE,EAASnD,QAAUmD,EAAS,GAAG7C,MAAS,GAgC5D,OA9BA6C,EAASzC,SAAQ,SAAA2G,GACXA,EAAQC,uBACVF,EAAeC,EAAQ/G,SAI3B4G,EAAWK,gBAAkBH,EAAaI,QACxC,SAACC,EAAKpB,EAASzF,GAAf,OAA0BA,EAAQqG,IAAwB,EAAIQ,EAAIC,OAAOrB,EAAQsB,GAAKF,IACtF,IAGFP,EAAWnI,gBAAkB,SAAA6I,GAAS,OACnCR,EAAaQ,IAAcR,EAAaQ,GAAWC,YAAeD,GAEtC,oBAApB7I,IACTmI,EAAWnI,gBAAkB,SAAAR,GAC3B,IAAMuJ,EAAaZ,EAAWK,gBACxBQ,EAAYD,EAAWE,QAAQzJ,GAC/B0J,EAAY,eAASb,EAAaU,EAAWC,EAAY,KAAO,IAChEG,EAAQ,eAASd,EAAaU,EAAWC,EAAY,KAAO,IAC5DI,EAAI,eAASf,EAAa7I,IAAS,IAEzC,OAAOQ,EAAgB,CAAER,OAAM0J,eAAcE,OAAMD,eAIxB,oBAApB3I,IACT4H,EAAW5H,gBAAkB,SAAAhB,GAAI,OAAIgB,EAAgB,CAAEhB,WAGlD,eACF2I,EADL,GAEKC,K,sCASU,IACPiB,EAAyBlF,KAAKZ,MAA9B8F,qBADM,EAGgDlF,KAAKmF,gBAA3Dd,EAHM,EAGNA,gBAAiBxI,EAHX,EAGWA,gBAAiBQ,EAH5B,EAG4BA,gBACpC+I,EAAoB,CACxBC,gBAAiBH,GAEbI,EAAoB,CACxBC,eAAe,EACfC,UAAU,GAeZ,OAZInB,IACFe,EAAkBR,WAAaP,GAG7BxI,IACFuJ,EAAkBK,WAAa5J,GAG7BQ,IACFiJ,EAAkBG,WAAapJ,GAG1B,CACLqJ,eAAgBrB,EAChBL,WAAYoB,EACZnB,WAAYqB,K,wCAUkB,IAAjBI,EAAgB,EAAhBA,aACPjD,EAAmBzC,KAAnByC,eADuB,EAEFzC,KAAKZ,MAA1BuG,EAFuB,EAEvBA,OAAQ1F,EAFe,EAEfA,SAEhB,GAAI3C,OAAOC,KAAKoI,GAAQ7I,OACtB,OAAO6I,EAGT,IAAMC,EAAkB,GAClBC,EAAqB,GACvBC,EAAc,EACdC,EAAc,EAEE9F,EAAS+F,QAAO,SAAAC,GAAG,OAAsB,IAAlBA,EAAIC,aAEnC1I,SAAQ,SAAA2G,GAClB,IAAK1B,EAAe0B,EAAQhF,KAAOgF,EAAQ/G,KAAM,CAC/C,IAAI+I,EAAqB,EAEzBhC,EAAQ/G,KAAKI,SAAQ,SAACU,EAAOR,GAC3ByI,EAAqBjI,GAASA,EAAMF,EAAImI,EAAqBjI,EAAMF,EAAImI,EAEnEzI,IAAUyG,EAAQ/G,KAAKN,OAAS,IAClCiJ,GAAeI,UAMvBlG,EAASzC,SAAQ,SAAA2G,IACV1B,EAAe0B,EAAQhF,KAAOgF,EAAQ/G,OACzC0I,EAAc3B,EAAQ/G,KAAKN,OAASgJ,EAAc3B,EAAQ/G,KAAKN,OAASgJ,EAExE3B,EAAQ/G,KAAKI,SAAQ,SAAAU,GACnB6H,EAAc7H,GAASA,EAAMF,EAAI+H,EAAc7H,EAAMF,EAAI+H,SAK1DL,IACHE,EAAgBnB,EAAI,CAAC,EAAGqB,GAAe,KAGzC,IAAMM,EAAU7K,KAAKG,IAAI,GAAIH,KAAK8K,MAAM9K,KAAK+K,MAAOP,EAAc,IAAMA,GAAgB,MAOxF,OANAH,EAAgB5H,EAAI,CAAC,EAAGzC,KAAKgL,MAAMR,EAAc,GAAKK,GAAWA,GAE7D9I,OAAOC,KAAKqI,GAAiB9I,SAC/B+I,EAAmBF,OAASC,GAGvB,CACLY,KAAMT,EACNU,YAAY,eAAMZ,M,uCASJ,IACRpD,EAAmBzC,KAAnByC,eADO,EAEoBzC,KAAKZ,MAAhCa,EAFO,EAEPA,SAAUyG,EAFH,EAEGA,aACdC,EAAiB,GA8BrB,OA5BID,GAAgBzG,GAAYA,EAAS,IAAMA,EAAS,GAAG7C,OACzDuJ,EAAiB1G,EAAS,GAAG7C,KAAKsB,KAAI,SAACyF,EAASzG,GAC9C,IAAML,EAAa,GAEnB4C,EAASzC,SAAQ,SAAAJ,IACVqF,EAAerF,EAAK+B,KAAO/B,EAAKA,MAAQA,EAAKA,KAAKM,KACrDL,EAAWD,EAAK+B,IAAM,CACpBvB,MAAOR,EAAKyE,QAAUzE,EAAKwJ,MAAQxJ,EAAKQ,OAAS,GACjDR,KAAMyJ,IAAWzJ,EAAKA,KAAKM,SAKjC,IAAMoJ,EAAY,CAChB9J,MAAO,CAAEyH,EAAGN,EAAQM,EAAGzG,EAAGmG,EAAQnG,EAAGN,QAAOL,aAAY4C,SAAU4G,IAAW5G,KAG/E,MAAO,CACLwE,EAAGN,EAAQM,EACXzG,EAAG,KACHX,aACA0J,QACG9E,IAAM+E,eAAeN,IAAiBzE,IAAMgF,aAAaP,EAAnB,eAAsCI,KAC7EJ,EAAa,eAAKI,SAKnBH,I,sCAsBQ,IAAD,OACNlE,EAAmBzC,KAAnByC,eADM,EAEqBzC,KAAKZ,MAAhCsH,EAFM,EAENA,aAAczG,EAFR,EAEQA,SAEtB,IAAKyG,GAAgBpJ,OAAO4J,OAAOzE,GAAgBuD,QAAO,SAAAmB,GAAC,OAAU,IAANA,KAAYrK,SAAWmD,EAASnD,OAC7F,OAAO,KAGT,IAAMsK,EAAgCC,YAAgB,UAAW,UAC3DC,EAAoBtH,KAAKuH,iBAC3BC,EAAwB,GACxBC,EAAsB,GAOpBC,EAAkB,SAAAC,GACtB,IAAMhF,EAAe,EAAKA,aAAaQ,QACjCN,EAAa,EAAKA,WAAWM,QAC7ByE,EAAmBjF,GAAgBA,EAAakF,yBAA4B,GAC5EC,EAAiBjF,GAAcA,EAAWgF,yBAA4B,GAExED,EAAgBG,QAClBP,EAAwBI,GAGtBE,EAAcC,QAChBN,EAAsBK,GAGxB,IAAIE,EAAcL,EAAIlD,EAAI,IAGxB+C,EAAsBO,MAAQN,EAAoBM,OAClDJ,EAAIlD,EAAIgD,EAAoBQ,MAAQT,EAAsBO,MAAQ,KAElEC,EAAcL,EAAIlD,EAAI,GAAKgD,EAAoBQ,OAGjD,IAAMC,EA5BuB,SAAC,GAAe,IAAblL,EAAY,EAAZA,MAC1BE,EAAIoK,EAAkBxF,MAAK,SAAAqF,GAAC,OAAIA,EAAE1C,IAAMzH,EAAMyH,MAAM,GAC1D,OAAQ,OAADvH,QAAC,IAADA,OAAA,EAAAA,EAAG6J,UAAW,GA0BDoB,CAAuB,eAAKR,IAEhD,OAAIO,EAEA,2BACE,mCAAezD,EAAGuD,EAAahK,EAAG2J,EAAI3J,EAAI,IAAKiK,MAAM,OAAOG,OAAO,QACjE,yBAAKC,IAAK,EAAKxF,WAAYhE,MAAO,CAAEyJ,QAAS,gBAAkBC,MAAM,gCAClEL,KAOJ,6BAGT,OACE,kBAACd,EAAD,CACEoB,gBAAgB,IAChBC,OAAQ,SAAAd,GAAG,OAAIA,GACfe,eAAgB,kBAAChB,EAAD,MAChBiB,eAAgB,O,qCAUN,IAAD,EACqB3I,KAAKZ,MAA/BwJ,EADK,EACLA,YAAa3I,EADR,EACQA,SAErB,IAAK2I,EACH,OAAO,KAGT,IAAMC,EAAc,CAClB7L,MAAO,CAAEiD,SAAU4G,IAAW5G,IAC9BZ,MAAO,CACLc,KAAMH,KAAK8C,OACXgG,OAAQ9I,KAAKgD,SACbxD,OAAQQ,KAAKiD,SACb/C,UAAWF,KAAKsD,eAIpB,OACGrB,IAAM+E,eAAe4B,IAAgB3G,IAAMgF,aAAa2B,EAAnB,eAAqCC,KAC3ED,EAAY,eAAKC,M,qCAUa,IAAD,IAAnBE,eAAmB,SACvBtG,EAAmBzC,KAAnByC,eACAxC,EAAaD,KAAKZ,MAAlBa,SACF+I,EAAS,GACTC,EAAgB,GA8EtB,OAZAhJ,EAASzC,SAAQ,SAAC2G,EAASzG,GACzB,IAAK+E,EAAe0B,EAAQhF,KAAOgF,EAAQ/G,MAAQ+G,EAAQ/G,KAAKN,OAAQ,CACtE,IAAMoM,EAAkB/E,EAAQ7D,aAlEb,SAAC6D,EAASzG,GAC/B,IAAMyL,EAAkB,CAAE/L,KAAM,IAkBhC,OAhBI+G,EAAQyC,OACVuC,EAAgB/L,KAAKwJ,KAAOzC,EAAQyC,MAGlCzC,EAAQtC,SACVsH,EAAgB/L,KAAKyE,OAASsC,EAAQtC,QAGpCsC,EAAQiF,cACVD,EAAgB/L,KAAKgM,YAAcjF,EAAQiF,aAGzCjF,EAAQkF,kBACVF,EAAgB/L,KAAKiM,gBAAkBlF,EAAQkF,iBAI/C,kBAACC,EAAA,EAAD,CACEC,QAASpF,EAAQoF,UAAW,EAC5BC,cAAerF,EAAQqF,eAAiB,OACxC/L,IAAKlB,IAAQkN,aACbC,KAAI,oBAAehM,EAAf,cACJN,KAAM+G,EAAQ/G,KACdyB,MAAK,eAAQsF,EAAQtF,OAAS,GAAzB,GAAiCsK,GAEtCQ,WAAYxF,EAAQwF,WACpBC,aAAczF,EAAQyF,eAqCuBC,CAAe1F,EAASzG,IAhCzD,SAACyG,EAASzG,GAC1B,IAAMyL,EAAkB,CAAE/L,KAAM,IAchC,OAZI+G,EAAQyC,OACVuC,EAAgB/L,KAAKwJ,KAAOzC,EAAQyC,MAGlCzC,EAAQtC,SACVsH,EAAgB/L,KAAKyE,OAASsC,EAAQtC,QAGpCsC,EAAQiF,cACVD,EAAgB/L,KAAKgM,YAAcjF,EAAQiF,aAI3C,kBAAC,IAAD,CACEG,QAASpF,EAAQoF,UAAW,EAC5BC,cAAerF,EAAQqF,eAAiB,YACxC/L,IAAKlB,IAAQkN,aACbC,KAAI,oBAAehM,EAAf,SACJN,KAAM+G,EAAQ/G,KACdyB,MAAK,eAAQsF,EAAQtF,OAAS,GAAzB,GAAiCsK,GAEtCQ,WAAYxF,EAAQwF,WACpBC,aAAczF,EAAQyF,eAO0DE,CAAU3F,EAASzG,GAEjGyG,EAAQ+B,UACV+C,EAAc3K,KAAK4K,GAEnBF,EAAO1K,KAAK4K,OAKVH,GAAWE,GAAkBD,I,+BAQ7B,IACAxG,EAAexC,KAAKuC,MAApBC,WADD,EAEsCxC,KAAKZ,MAA1CwJ,EAFD,EAECA,YAAamB,EAFd,EAEcA,QAASJ,EAFvB,EAEuBA,WAFvB,EAI0C3J,KAAKgK,gBAA9CtE,EAJD,EAICA,aAAc1B,EAJf,EAIeA,WAAYC,EAJ3B,EAI2BA,WAJ3B,EAKuBjE,KAAKiK,eAAe,CAAEvE,iBAA5Ce,EALD,EAKCA,YACFyD,EAAmB,CAAEC,mBANpB,EAKc3D,MACmC,GAAKxG,KAAKoK,sBAAoBC,GAChFC,EAAU,aAAKP,WAAYtD,EAAjB,GAAiCyD,GAEjD,OACE,yBACE/K,GAAG,sBACHZ,UAAU,uDACV8J,IAAKrI,KAAK2C,cAEV,kBAAC4H,EAAA,EAAD,eAAOhB,QAAS,CAAEiB,SAAU,GAAKvC,MAAOzF,EAAYmH,WAAYA,GAAgBW,GAC9E,kBAACG,EAAA,EAAD,iBAAezG,EAAf,CAA2BuF,SAAS,KACpC,kBAACkB,EAAA,EAAD,iBAAexG,EAAf,CAA2BsF,SAAS,KACnCvJ,KAAK0K,YAAY,IAClB,kBAACC,EAAA,EAAD,KAAa3K,KAAK0K,YAAY,CAAE3B,SAAS,MAE1CH,GAAe,yBAAKrK,UAAU,kDAAkDyB,KAAK4K,qB,GAngBtE3I,IAAMC,WAmkB9BI,EAAUvD,aAAe,CACvB6J,YAAa,KACblC,aAAc,KACdf,OAAQ,GACR1F,SAAU,GACVmI,OAAQ,IACR2B,QAAS,CACPc,OAAQ,GACRC,KAAM,GACN/C,MAAO,GACPxG,IAAK,IAEPoI,WAAY,OACZzE,sBAAsB,EACtBnB,oBAAqB,EACrBlI,gBAAiB,KACjBQ,gBAAiB,M,aCllBb0O,E,4MAkBJC,kBAAoB,WAAO,IAAD,EAC0C,EAAK5L,MAA/D6L,EADgB,EAChBA,wBAAyB5K,EADT,EACSA,WAAY6K,EADrB,EACqBA,UAAWC,EADhC,EACgCA,MAClDC,EAAmB,EAAKC,sBAE9B,IAAKhL,GAAc+K,GAAoBF,EAAW,CAAC,IAAD,IACjBxQ,IAAY4Q,kBAAkBF,GAArDG,EADwC,EACxCA,UAAWC,EAD6B,EAC7BA,QAOnBP,EAAwBC,EANR,gCACbO,IAAqBC,WAAaH,EAAUI,eAD/B,cAEbF,IAAqBG,SAAWJ,EAAQG,eAF3B,GAGXR,M,EAaTU,oBAAsB,WAAiB,IAAhBC,EAAe,uDAAP,GACrB5N,EAAU4N,EAAV5N,MACAoB,EAAW,EAAKF,MAAhBE,OAERG,IAAMC,SAAN,aACEC,KAAMC,IAAWuL,MAAMY,qBAAqBN,IAAqBO,aACjE1M,UACCmM,IAAqBO,YAAc9N,K,kEA7CtC8B,KAAKgL,sB,yCAGYiB,GAAY,IAAD,EACCjM,KAAKZ,MAA1B8L,EADoB,EACpBA,UAAWC,EADS,EACTA,MAEfD,IAAce,EAAUf,WAAcgB,IAASf,EAAOc,EAAUd,QAClEnL,KAAKgL,sB,4CA0Cc,IACbG,EAAUnL,KAAKZ,MAAf+L,MACR,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAQM,IAAqBO,e,oCAavB,IAAD,EAC2EhM,KAAKZ,MAApF+M,EADI,EACJA,gBAAiBC,EADb,EACaA,UAAWC,EADxB,EACwBA,kBAAmBpP,EAD3C,EAC2CA,aAAckO,EADzD,EACyDA,MAAO7L,EADhE,EACgEA,OACtE8L,EAAmBpL,KAAKqL,sBACtBiB,EAAaC,IAAeC,sBAAsBH,GAAlDC,SACFG,EAAqBrB,GAAoBkB,EAUzCI,EAAiB,CACrBxH,sBAAsB,EACtBnB,oBAAqBpI,EAAiBC,4BAA4B6Q,GAClE5Q,gBAXsB,SAAC,GAAD,IAAGoJ,EAAH,EAAGA,KAAMF,EAAT,EAASA,aAAc1J,EAAvB,EAAuBA,KAAvB,OACtBM,EAAiBE,gBAAgB,CAC/BR,OACAnB,KAAM+K,EAAK/K,KACX4B,aAAciJ,EAAa7K,KAC3BC,YAAasS,KAOfpQ,gBAAiBV,EAAiBU,iBAqCpC,OACE,kBAAC,EAAD,eACEoB,IAAG,gBAAWkP,KAAKC,UAAUzB,KACzBuB,EAFN,CAGEzM,SAtCsB,SAAA7C,GACxB,IAAMyP,EAAW,SAAApP,GACf,IAAMqP,EAAe,CACnB1P,KAAMA,EAAKK,GACX0B,GAAI1B,EACJ8L,QAAS,CACPiB,SAAU,IACVuC,OAAQ,CAAEvC,SAAU,MAEtBpB,YAAa,EACblD,WAAY,aAAarI,KAAKJ,GAC9B6C,YAAa,aAAazC,KAAKJ,IAajC,MAVI,aAAaI,KAAKJ,KACpBqP,EAAavD,QAAU,CACrBiB,SAAU,IACVuC,OAAQ,CAAEvC,SAAU,MAEtBsC,EAAajL,OAASmL,IAAoB9O,MAC1C4O,EAAazD,gBAAkB,MAC/ByD,EAAa1D,YAAc,GAGtB0D,GAGT,OAAIX,EAAgBrP,OACXqP,EAAgBzN,KAAI,SAAAR,GAAK,OAAIZ,OAAO2P,OAAOJ,EAAS3O,EAAMiB,IAAKjB,MAGjEZ,OAAOC,KAAKH,GAAMsB,KAAI,SAAAjB,GAAG,OAAIoP,EAASpP,MAOjCyP,CAAkBd,GAC5BxD,YAAa,gBAAGvJ,EAAH,EAAGA,MAAOrC,EAAV,EAAUA,MAAV,OACX,kBAAC,EAAD,CAAsBqC,MAAOA,EAAOrC,MAAOA,EAAOC,aAAcA,EAAcqC,OAAQA,KAExFoH,aAAc,gBAAG1J,EAAH,EAAGA,MAAH,OACZ,kBAAC,EAAD,CAAuBA,MAAOA,EAAO7C,YAAasS,EAAoBxP,aAAcA,U,+BAWlF,IAAD,EAC2E+C,KAAKZ,MAA/E+N,EADD,EACCA,UAAWC,EADZ,EACYA,SAAUC,EADtB,EACsBA,MAAOhN,EAD7B,EAC6BA,WAAYiN,EADzC,EACyCA,QAASjB,EADlD,EACkDA,kBAAmBnP,EADrE,EACqEA,EAE5E,GAAImD,EACF,OAAO,KAJF,IAOCkN,EAAYhB,IAAeC,sBAAsBH,GAAjDkB,QACFnC,EAAmBpL,KAAKqL,sBAE9B,OACE,kBAACmC,EAAA,EAAD,CAAMjP,UAAU,yBACd,kBAACkP,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,MAC3BV,IAGL,kBAACW,EAAA,EAAD,CAAavP,UAAY8O,EAAS,OAAW,IAC1CD,EACD,kBAAC,IAAD,CACEW,aAAY7Q,EAAE,uCACd8Q,SAAUhO,KAAK6L,oBACf0B,QAASA,EACTU,gBAAiB7C,EACjB8C,YAAahR,EAAE,2CAIrB,kBAACiR,EAAA,EAAD,KACE,yBAAK5P,UAAY8O,EAAS,OAAW,UAClCC,GAAW,kBAAC,IAAD,CAAQxM,QAAQ,WAC1BwM,GAAWtN,KAAK0K,qB,GA7KNzI,IAAMC,WA6N9B6I,EAAUhM,aAAe,CACvBoO,UAAW,KACXC,SAAU,KACVC,OAAO,EACPlB,gBAAiB,GACjBlB,wBAAyB1O,IAAQ4F,KACjCiK,UAAW,GACX/L,WAAY9D,IAAQ6R,kBACpBd,SAAS,EACTrQ,aAAc,GACdoP,kBAAmB,UACnBnP,EAAG8B,IACHM,OAAQ,aASV,IASM+O,EAAsBC,IAAeC,UAAUC,gBAE/CC,EAAqBpM,YAAQgM,GAXR,SAAA3O,GAAQ,MAAK,CACtCuL,wBAAyB,SAAC9L,EAAIgM,GAAL,OAAezL,EAASgP,IAAaC,KAAK1D,wBAAwB9L,EAAIgM,QAUtE9I,CAAiD0I,I,yRCvQtE9Q,EAAiB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACxBC,EAAaC,IAAOC,IAAIJ,GAE9B,OAAQC,GACN,KAAKI,IAAkBC,UACrB,MAAM,GAAN,OAAUJ,EAAWK,OAAOC,IAAYC,wBAAwBC,WAAhE,cAAgFR,EAC7ES,IAAI,EAAG,WACPJ,OAAOC,IAAYC,wBAAwBC,YAEhD,KAAKL,IAAkBO,QACrB,OAAOV,EAAWK,OAAOC,IAAYK,sBAAsBC,UAE7D,KAAKT,IAAkBU,OACrB,MAAM,GAAN,OAAUb,EAAWK,OAAOC,IAAYQ,oBAAZ,OAA5B,cAAwEd,EACrES,IAAI,EAAG,QACPJ,OAAOC,IAAYQ,oBAAoBN,YAE5C,KAAKL,IAAkBY,MACvB,QACE,OAAOf,EAAWK,OAAOC,IAAYQ,oBAAZ,QAczBW,EAAkB,SAAC,GAA+C,IAA7C3B,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,YAAakB,EAAyB,EAAzBA,KAAMS,EAAmB,EAAnBA,aAClD,GAAK5B,GAASC,EAAd,CAIA,IAGI4B,EAHE3B,EAAaC,IAAOC,IAAIJ,GACxB8B,EACK,IAATX,GAAcY,OAAOC,SAAS9B,EAAW+B,OAAQ,MAAQF,OAAOC,SAAS7B,IAAOC,IAAIwB,GAAcK,OAAQ,IAG5G,OAAQhC,GACN,KAAKI,IAAkBC,UAKrBuB,GAJAA,EAAgBC,EACZ5B,EAAWK,OAAOC,IAAYC,wBAAwBC,WACtDR,EAAWK,OAAOC,IAAYC,wBAAZ,QAEQyB,QAAQ,KAAM,MAC5C,MACF,KAAK7B,IAAkBO,QAKrBiB,GAJAA,EAAgBC,EACZ5B,EAAWK,OAAOC,IAAYK,sBAAsBH,WACpDR,EAAWK,OAAOC,IAAYK,sBAAZ,QAEQqB,QAAQ,KAAM,MAC5C,MACF,KAAK7B,IAAkBU,OACvB,KAAKV,IAAkBY,MACvB,QAKEY,GAJAA,EAAgBC,EACZ5B,EAAWK,OAAOC,IAAYQ,oBAAoBN,WAClDR,EAAWK,OAAOC,IAAYQ,oBAAZ,QAEQkB,QAAQ,aAAc,QAIxD,OAAOL,IAWHM,EAAkB,SAAC,GAAD,IAAGhB,EAAH,EAAGA,KAAMiB,EAAT,EAASA,OAAT,OACtB,IAAIG,KAAKC,aAAaJ,EAAQ,CAAEK,sBAAuB,EAAGC,SAAU,UAAWC,eAAgB,UAAWpC,OACxGY,IAmJEuT,EAhIW,SAAC,GAAmD,IAAD,IAAhDxR,YAAgD,MAAzC,GAAyC,EAArCjD,EAAqC,EAArCA,YAAa0U,EAAwB,EAAxBA,kBACpCC,EAAmB,GACnBC,EAAY,CAChBtK,EAAG,IACHuK,OAAQ,GACRC,QAAS,GACTC,OAAQ,CAAC,IACTC,MAAO,GACPC,MAAO,IAGHC,EAAwB,SAAAnR,GAE5B,OADiB3B,IAAQ+S,WAAajV,IAAOC,IAAI4D,IAAW7D,IAAOC,IAAI4D,GAAOqR,SAC/D9U,OAAO,eAiCxB,OA9BA2C,EAAKI,SAAQ,SAAAU,GACP,aAAaL,KAAKK,EAAMiB,KAC1B4P,EAAUC,OAAO9Q,EAAMiB,IAAMjB,EAAMN,OAASoP,IAAoB9O,MAChE6Q,EAAUK,MAAMlR,EAAMiB,IAAM,OAC5B4P,EAAUI,MAAMjR,EAAMiB,IAAMH,YAAU,oCAEtC+P,EAAUC,OAAO9Q,EAAMiB,IAAMjB,EAAMN,MACnCmR,EAAUK,MAAMlR,EAAMiB,IAAM,cAC5B4P,EAAUG,OAAO,GAAG5Q,KAAKJ,EAAMiB,IAC/B4P,EAAUI,MAAMjR,EAAMiB,IAAMH,YAAU,mBAAD,OAAoBd,EAAMiB,GAA1B,SAAqC,CAAEd,QAASwQ,KAGvFE,EAAUE,QAAQ,GAAK,CAAC,KACxBF,EAAUE,QAAQ3Q,KAAK,CAACJ,EAAMiB,KAE9B,IAAIqQ,EAAY,EAEhBtR,EAAMd,KAAKI,SAAQ,SAAAiS,GACjBV,EAAUE,QAAQ,GAAG3Q,KAAK+Q,EAAsBI,EAAcvV,OAC9D6U,EAAUE,QAAQF,EAAUE,QAAQnS,OAAS,GAAGwB,KAAKmR,EAAczR,GACnEwR,GAAaC,EAAczR,GAAK,KAI9BwR,GAAa,IACfT,EAAUE,QAAQS,MAClBZ,EAAiBxQ,KAAKJ,EAAMiB,QAIzB,CACL2P,mBACAa,cAAe,CACb5I,QAAS,CACP6I,MAAO,SAACC,EAAGC,GAAJ,OAAUf,EAAUE,QAAQnK,QAAQ+K,EAAE1Q,IAAM4P,EAAUE,QAAQnK,QAAQgL,EAAE3Q,KAC/E1E,OAAQ,CACNsV,MAAO,SAAA7V,GAAI,OACTD,EAAe,CACbC,OACAC,iBAEJ+D,MAAO,SAACA,EAAO8R,EAAO7Q,EAAIzB,GAAW,IAAD,EAE9BuS,EAEuB,EAHrBC,EAAQ,UAAG9S,EAAK0E,MAAK,SAAAqO,GAAS,OAAIhR,IAAOgR,EAAUhR,aAA3C,aAAG,EAA6C/B,KAAKM,GAG/D,aAAaG,KAAKsB,GACpB8Q,GACW,OAARC,QAAQ,IAARA,OAAA,EAAAA,EAAUnS,cAAeiB,YAAU,4CAApC,iBACCkR,QADD,IACCA,OADD,EACCA,EAAUlS,SADX,QACgBgB,YAAU,gCAE5BiR,GACyB,KAAd,OAARC,QAAQ,IAARA,OAAA,EAAAA,EAAU9R,UAAqBY,YAAU,iCAA1C,OAA6EkR,QAA7E,IAA6EA,OAA7E,EAA6EA,EAAUlS,IAAK,EAGhG,OAAOiS,KAIbG,kBAAkB,EAClBrG,QAAS,CAAEe,KAAM,GAAI/C,MAAO,GAAIxG,IAAK,GAAIsJ,OAAQ,IACjD9K,OAAQ,CAAEsQ,MAAM,GAChBC,OAAQ,CACN9G,cAAe,CACb7J,KAAM,aAGVvC,KAAK,eACA2R,GAELwB,MAAO,CACLF,MAAM,GAERG,KAAM,CACJxS,EAAG,CACDqS,MAAM,IAGVI,KAAM,CACJhM,EAAG,CACD9E,KAAM,aACNtE,KAAM,CACJZ,OAAQ,SAAAY,GACN,IAAMqV,EAAa3B,EAAUE,QAAQ,GAAG0B,MAAM,GACxC5U,EAAgBsT,EAAsBhU,GACtCuV,EAAYF,EAAW5L,QAAQ/I,GAC/BD,EAAe8U,GAAa,GAAKF,EAAWE,EAAY,GAE9D,OAAO/U,EAAgB,CACrBR,KAAMuV,EACN1W,KAAM6B,EACND,eACA3B,kBAIN4P,QAAS,GAEX/L,EAAG,CACD6S,QAAS,CAAC,EAAG,IACb9G,QAAS,CAAEc,OAAQ,GACnBiG,IAAK,EACLzV,KAAM,CACJgV,MAAM,EACNU,OAAO,EACPtW,OAAQ,SAAAY,GAAI,OAAc,IAATA,EAAa,GAAKgB,EAAgB,CAAEhB,gB,6BC7N3D2V,E,4MACJzO,MAAQ,CAAE0O,iBAAkB,M,EAO5BC,QAAU,WAAO,IACPD,EAAqB,EAAK1O,MAA1B0O,iBADM,EAEmC,EAAK7R,MAA9CC,EAFM,EAENA,MAAOe,EAFD,EAECA,QAAS+Q,EAFV,EAEUA,UAAWjR,EAFrB,EAEqBA,WAET,oBAAdiR,GAA6BjR,IAAe+Q,GACtD5R,EAAM+R,MAAMhR,I,EAShB4C,SAAW,WAAO,IACRiO,EAAqB,EAAK1O,MAA1B0O,iBADO,EAEyB,EAAK7R,MAArCC,EAFO,EAEPA,MAAO8R,EAFA,EAEAA,UAAWjR,EAFX,EAEWA,WAEA,oBAAdiR,GAA6BjR,IAAe+Q,GACtD5R,EAAMyJ,U,EASV7F,SAAW,WAAO,IACRgO,EAAqB,EAAK1O,MAA1B0O,iBADO,EAEkC,EAAK7R,MAA9CC,EAFO,EAEPA,MAAOe,EAFA,EAEAA,QAAS+Q,EAFT,EAESA,UAAWjR,EAFpB,EAEoBA,UAEnCb,EAAMG,OAAOY,GAEY,oBAAd+Q,EACTA,EAAU,CAAEjR,WAAYA,IAExB,EAAKmD,SAAS,CACZ4N,kBAAmBA,IAIvB,EAAKjO,Y,EAQPqO,SAAW,WAAO,IAAD,EACY,EAAKjS,MAAxBC,EADO,EACPA,MAAOe,EADA,EACAA,QACf,OAAOf,EAAMzB,MAAMwC,I,uDAWX,IACA6Q,EAAqBjR,KAAKuC,MAA1B0O,iBADD,EAEkFjR,KAAKZ,MAAtFgO,EAFD,EAECA,SAAU/N,EAFX,EAEWA,MAAOe,EAFlB,EAEkBA,QAASC,EAF3B,EAE2BA,WAAYC,EAFvC,EAEuCA,YAAaJ,EAFpD,EAEoDA,UAAWM,EAF/D,EAE+DA,eAChEC,EACkB,OAArBwQ,GAAkD,mBAAd/Q,GAA2BA,GAAc+Q,IAAoB,EAEhGxQ,GACFpB,EAAMc,KAAKC,GAGb,IAAMM,EACJ,kBAACC,EAAA,EAAD,CACEE,SAAU,EACVpD,IAAG,2BAAsB2C,GACzBU,QAAQ,OACR5B,QAASc,KAAKiD,SACdiO,QAASlR,KAAKkR,QACdI,YAAatR,KAAKkR,QAClBK,OAAQvR,KAAKgD,SACbwO,WAAYxR,KAAKgD,SACjBpC,WAAYZ,KAAKiD,SACjBlC,UAAU,IACVV,WAAYA,EACZW,MACIX,GAAcI,IAAmB,kBAAC,IAAD,OAClCH,GACC,wBACE1B,eAAA,EACAL,UAAU,wBACVM,MAAO,CACLoC,WAAaZ,GAA4BI,EAAd,SAA6C,UACxES,eAAgBlB,KAAKqR,eAIzB,yBACEzS,eAAA,EACAL,UAAU,cACVM,MAAO,CACLoC,WAAaZ,GAA4BI,EAAd,SAA6C,UACxE3B,gBAAiBkB,KAAKqR,eAM7BjE,GAiBL,OAAI5M,EAEA,kBAACW,EAAA,EAAD,CACE1D,IAAG,4BAAuB2C,GAC1BgB,QAASZ,EACTa,SAAUC,IAAgBC,IAC1BC,YAAY,EACZC,SAAU,EACVC,WAAY,IACZC,UAAW,GAEVjB,GAKAA,M,GAtJyBuB,IAAMC,WAwL1C8O,EAAsBjS,aAAe,CACnCM,MAAO,CACLzB,MAAOrB,IAAQ4F,KACfiP,MAAO7U,IAAQ4F,KACfhC,KAAM5D,IAAQ4F,KACd2G,OAAQvM,IAAQ4F,KAChB3C,OAAQjD,IAAQ4F,MAElBiL,SAAU,KACV/M,YAAY,EACZC,aAAa,EACbJ,WAAW,EACXM,eAAgB,KAChB2Q,UAAW,M,gCCtMPM,G,oNACJlP,MAAQ,CAAElD,MAAO,M,EAEjBqS,KAAOzP,IAAMW,Y,kEAGX5C,KAAK2R,kB,yCAGY1F,GAAY,IACrB2F,EAAW5R,KAAKZ,MAAhBwS,OAEH1F,IAASD,EAAU2F,OAAOxU,KAAMwU,EAAOxU,OAC1C4C,KAAK2R,kB,6CAIe,IACdtS,EAAUW,KAAKuC,MAAflD,MACJA,GACFA,EAAMwS,UAER7R,KAAKqD,SAAS,CAAEhE,MAAO,S,sCAGR,IAAD,OACNA,EAAUW,KAAKuC,MAAflD,MADM,EAEiBW,KAAKZ,MAA5BwS,EAFM,EAENA,OAAQE,EAFF,EAEEA,WAEZC,EAAe1S,EACd0S,IACHA,EAAeC,IAAGC,SAAH,aAAcC,OAAQlS,KAAK0R,KAAKvO,SAAYyO,KAG7DG,EAAaI,KAAb,eACKP,EAAOxU,KADZ,CAEEgV,OAAQR,EAAOxB,mBAAoB,EACnCiC,KAAM,WACJ,EAAKhP,SAAS,CAAEhE,MAAO0S,IAAgB,WACjCH,EAAOS,KACTT,EAAOS,KAAK,CAAEhT,MAAO0S,EAAcH,WAEnCE,EAAW,CAAEzS,MAAO0S,EAAcH,oB,+BAOlC,IACAvS,EAAUW,KAAKuC,MAAflD,MADD,EAEwCW,KAAKZ,MAA5Cb,EAFD,EAECA,UAAW6O,EAFZ,EAEYA,SAAUwE,EAFtB,EAEsBA,OAAQ/S,EAF9B,EAE8BA,MAErC,OACE,yBAAKN,UAAS,4BAAuBA,GAAaM,MAAOA,GACvD,yBAAKwJ,IAAKrI,KAAK0R,KAAMnT,UAAU,gCAC9Bc,GACC,yBAAKd,UAAU,iCACS,oBAAb6O,GAA2BA,EAAS,CAAE/N,QAAOuS,YAAcxE,Q,GA1D1DnL,IAAMC,YAwF5BuP,EAAQ1S,aAAe,CACrBqO,SAAU,KACV7O,UAAW,KACXqT,OAAQ,GACRE,WAAYvV,IAAQ4F,KACpBtD,MAAO,I,aChFHyT,E,4MACJ/P,MAAQ,G,EAmBRyI,kBAAoB,WAAO,IAAD,EAC0C,EAAK5L,MAA/D6L,EADgB,EAChBA,wBAAyB5K,EADT,EACSA,WAAY6K,EADrB,EACqBA,UAAWC,EADhC,EACgCA,MAClDC,EAAmB,EAAKC,sBAE9B,IAAKhL,GAAc+K,GAAoBF,EAAW,CAAC,IAAD,IACjBxQ,IAAY4Q,kBAAkBF,GAArDG,EADwC,EACxCA,UAAWC,EAD6B,EAC7BA,QAOnBP,EAAwBC,EANR,gCACbO,IAAqBC,WAAaH,EAAUI,eAD/B,cAEbF,IAAqBG,SAAWJ,EAAQG,eAF3B,GAGXR,M,EAaTU,oBAAsB,WAAiB,IAAhBC,EAAe,uDAAP,GACrB5N,EAAU4N,EAAV5N,MACAoB,EAAW,EAAKF,MAAhBE,OAERG,IAAMC,SAAN,aACEC,KAAMC,IAAWuL,MAAMY,qBAAqBN,IAAqBO,aACjE1M,UACCmM,IAAqBO,YAAc9N,K,kEA7CtC8B,KAAKgL,sB,yCAGYiB,GAAY,IAAD,EACCjM,KAAKZ,MAA1B+L,EADoB,EACpBA,MADoB,EACbD,YAEGe,EAAUf,WAAcgB,IAASf,EAAOc,EAAUd,QAClEnL,KAAKgL,sB,4CA0Cc,IACbG,EAAUnL,KAAKZ,MAAf+L,MACR,cAAOA,QAAP,IAAOA,OAAP,EAAOA,EAAQM,IAAqBO,e,sCAa0C,IAAD,OAAhE3M,EAAgE,EAAhEA,MAAgE,IAAzDkT,oBAAyD,MAA1C,GAA0C,EAAtCpY,EAAsC,EAAtCA,YAAsC,IAAzB2U,wBAAyB,MAAN,GAAM,EACrEvM,EAAUvC,KAAVuC,MADqE,EAEjCvC,KAAKZ,MAAzC8L,EAFqE,EAErEA,UAAW2D,EAF0D,EAE1DA,kBAAmB3R,EAFuC,EAEvCA,EAEtC,OAAOqV,EAAa7T,KAAI,YAAa,IAAVS,EAAS,EAATA,GACnBmB,EAAc,aAAazC,KAAKsB,GAChCqT,EAAe1D,EAAiB2D,SAAStT,GACzCqB,EACJ,2BAAKF,GAAepD,EAAE,2CAA8CA,EAAE,mBAAD,OAAoBiC,EAApB,mBAIjEe,EAAYqC,EAAM,GAAD,OAAI2I,EAAJ,YAAiB/Q,EAAjB,YAAgCgF,MAAS,EAEhE,OACE,kBAAC,EAAD,CACE1B,IAAG,iBAAYyN,EAAZ,YAAyB/Q,EAAzB,YAAwCgF,GAC3CE,MAAOA,EACPe,QAASjB,EACTqB,eAAgBA,EAChBH,WAAYmS,EACZlS,YAAaA,EACbJ,UAAWA,EACXiR,UAZc,SAAC,GAAD,IAAGjR,EAAH,EAAGA,UAAH,OAAmB,EAAKmD,SAAL,yBAAoB6H,EAApB,YAAiC/Q,EAAjC,YAAgDgF,GAAOe,MActFI,GAAepD,EAAE,mCACjBA,EAAE,mBAAD,OAAoBiC,EAApB,SAA+B,CAAEd,QAASwQ,U,oCAWtC,IAAD,SAC4E7O,KAAKZ,MAArF+M,EADI,EACJA,gBAAiBC,EADb,EACaA,UAAWlB,EADxB,EACwBA,UAAW2D,EADnC,EACmCA,kBAAmBxC,EADtD,EACsDA,kBAC5DjB,EAAmBpL,KAAKqL,sBACtBiB,EAAaC,IAAeC,sBAAsBH,GAAlDC,SACFG,EAAqBrB,GAAoBkB,EAE/C,IAAKF,IAAc9O,OAAO4J,OAAOkF,GAAWtP,OAC1C,OAAO,KAGT,IAAM+P,EAAW,GAEbV,EAAgBrP,OAClBqP,EAAgB3O,SAAQ,SAAAiS,GAClBrD,EAAUqD,EAActQ,KAC1B0N,EAASvO,KAAT,eAAmBmR,EAAnB,CAAkCrS,KAAK,YAAKgP,EAAUqD,EAActQ,WAIxE7B,OAAOC,KAAK6O,GAAW5O,SAAQ,SAAA2B,GAC7B0N,EAASvO,KAAK,CAAEa,KAAI/B,KAAK,YAAKgP,EAAUjN,SApBhC,MAwB0CyP,EAA4B,CAChFxR,KAAMyP,EACN1S,YAAasS,EACboC,sBA3BU,IAwBJc,qBAxBI,MAwBY,GAxBZ,MAwBgBb,wBAxBhB,MAwBmC,GAxBnC,EA8BZ,OACE,kBAAC,EAAD,CAASrR,IAAG,gBAAWyN,EAAX,YAAwBuB,GAAsBmF,OAAQjC,IAC/D,gBAAGtQ,EAAH,EAAGA,MAAH,OACC,EAAKuL,aAAa,CAChBvL,QACAkT,aAAc1F,EACd1S,YAAasS,EACbqC,0B,+BAYA,IAAD,EAC2E9O,KAAKZ,MAA/E+N,EADD,EACCA,UAAWC,EADZ,EACYA,SAAUC,EADtB,EACsBA,MAAOhN,EAD7B,EAC6BA,WAAYiN,EADzC,EACyCA,QAASjB,EADlD,EACkDA,kBAAmBnP,EADrE,EACqEA,EAE5E,GAAImD,EACF,OAAO,KAJF,IAOCkN,EAAYhB,IAAeC,sBAAsBH,GAAjDkB,QACFnC,EAAmBpL,KAAKqL,sBAE9B,OACE,kBAACmC,EAAA,EAAD,CAAMjP,UAAU,yBACd,kBAACkP,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,MAC3BV,IAGL,kBAACW,EAAA,EAAD,CAAavP,UAAY8O,EAAS,OAAW,IAC1CD,EACD,kBAAC,IAAD,CACEW,aAAY7Q,EAAE,uCACd8Q,SAAUhO,KAAK6L,oBACf0B,QAASA,EACTU,gBAAiB7C,EACjB8C,YAAahR,EAAE,2CAIrB,kBAACiR,EAAA,EAAD,KACE,yBAAK5P,UAAY8O,EAAS,OAAW,UAClCC,GAAW,kBAAC,IAAD,CAAQxM,QAAQ,WAC1BwM,GAAWtN,KAAK0K,qB,GA1LJzI,IAAMC,WAwOhCoQ,EAAYvT,aAAe,CACzBoO,UAAW,KACXC,SAAU,KACVC,OAAO,EACPlB,gBAAiB,GACjBlB,wBAAyB1O,IAAQ4F,KACjCiK,UAAW,GACX/L,WAAY9D,IAAQ6R,kBACpBd,SAAS,EACTjB,kBAAmB,UACnBnP,EAAG8B,IACH6P,kBAAmB,GACnBvP,OAAQ,aASV,IASM+O,EAAsBC,IAAeC,UAAUC,gBAE/CC,EAAqBpM,YAAQgM,GAXR,SAAA3O,GAAQ,MAAK,CACtCuL,wBAAyB,SAAC9L,EAAIgM,GAAL,OAAezL,EAASgP,IAAaC,KAAK1D,wBAAwB9L,EAAIgM,QAUtE9I,CAAiDiQ,I,qSCtOtEI,EAlDwB,SAAC,GAAqC,IAAD,IAAlCC,eAAkC,MAAxB,GAAwB,MAApBC,gBAAoB,MAAT,GAAS,EAC3DC,EAAuB,GACvBC,EAAe,GACfC,EAAW,GAwCjB,OArCAzV,OAAO0V,QAAQJ,GAAUpV,SAAQ,YAAmB,IAAD,mBAAhBC,EAAgB,KAAXS,EAAW,KACjD6U,EAAStV,GAAO,CACdsS,MAAO/Q,YAAU,6BAA8B,CAAE+C,QAAStE,IAC1DS,SAGF2U,EAAqBvU,KAAKyU,EAAStV,GAAKsS,OACxC+C,EAAaxU,KAAKJ,OAIpB,OAAIyU,QAAJ,IAAIA,OAAJ,EAAIA,EAAS7V,UACX+V,EAAqB/V,OAAS,EAC9BgW,EAAahW,OAAS,EAEtB6V,EAAQnV,SAAQ,YAA2B,IACrCyV,EACAC,EAFa/T,EAAuB,EAAvBA,GAAIgU,EAAmB,EAAnBA,KAAMhW,EAAa,EAAbA,OAIvB4V,EAAS5T,KACX8T,EAAgBF,EAAS5T,GAAI4Q,MAC7BmD,EAAcH,EAAS5T,GAAIjB,OAGzBf,IACF8V,EAAmC,oBAAX9V,GAAyBA,EAAO,eAAK4V,KAAgB5V,GAG3EgW,IACFD,EAA+B,oBAATC,GAAuBA,EAAK,eAAKJ,KAAgBI,GAGzEN,EAAqBvU,KAAK2U,GAC1BH,EAAaxU,KAAK4U,OAIf,CACLE,cAAeP,EACfQ,MAAOP,EACP1V,KAAK,eAAM2V,K,OChCTO,E,4MACJ/Q,MAAQ,CAAEgR,YAAa,EAAGC,MAAO,IAAKC,aAAc,I,EAmBpDC,mBAAqB,WAAO,IAAD,EACM,EAAKnR,MAA5BgR,EADiB,EACjBA,YAAaC,EADI,EACJA,MADI,EAEsB,EAAKpU,MAA5CuU,EAFiB,EAEjBA,wBAAyBxI,EAFR,EAEQA,MAAOhM,EAFf,EAEeA,GAExC,GAAIA,EAAI,CAAC,IAAD,EACAyU,EAAY,eACbzI,GADa,mBAEfM,IAAqBoI,MAAQL,GAFd,cAGf/H,IAAqBqI,OAASP,EAAcC,GAAS,GAHtC,IAOlBG,EAAwBxU,EADA4U,IAAWC,eAAeJ,GAA1CK,e,EAWZC,SAAW,SAAApI,GAAU,IACXqI,EAAWrI,EAAXqI,OADU,EAE2B,EAAK5R,MAA1CgR,EAFU,EAEVA,YAAaC,EAFH,EAEGA,MAAOC,EAFV,EAEUA,aAFV,EAG4B,EAAKrU,MAA3CgV,EAHU,EAGVA,eAAgB9G,EAHN,EAGMA,QAAS+G,EAHf,EAGeA,SAE3BxJ,EAASsJ,EAAOG,aAAeH,EAAOI,YAAcJ,EAAOK,aAEjE,GAAIJ,GAAkBb,EAAc,GAAKC,GAAS3I,IAAWyC,EAAS,CACpE,IAAMmH,EAAUlB,EAAc,EACxBmB,EAAW,sBAAOjB,GAAP,YAAyBY,GAAY,KAEtD,EAAKhR,SAAS,CACZoQ,aAAciB,EACdnB,YAAakB,M,kEAnDjBzU,KAAK0T,uB,yCAGYzH,EAAW0I,GACJ3U,KAAKuC,MAArBgR,cAEYoB,EAAUpB,aAC5BvT,KAAK0T,uB,qCAiDO,IACNH,EAAgBvT,KAAKuC,MAArBgR,YADK,EAEmCvT,KAAKZ,MAA7CwV,EAFK,EAELA,iBAAkBP,EAFb,EAEaA,SAAU/G,EAFvB,EAEuBA,QAEpC,GAAIiG,EAAc,GAAKjG,EAAS,CAC9B,IAAMuH,EACJ,kBAAC,IAAD,CACE/T,QAAQ,QACRgU,WAAY,CACVC,SAAS,EACTC,UAA0B,OAAhBJ,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB9X,UAAmB,OAARuX,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAAM/W,OAAOC,KAAK8W,EAAS,IAAIvX,QAAW,EAC5FmY,SAAU,EACVnU,QAASoU,IAAaC,WAK5B,OAAO,yBAAK5W,UAAU,yCAAyCsW,GAGjE,OAAO,O,oCAYM,IACLpB,EAAiBzT,KAAKuC,MAAtBkR,aADI,EAE2CzT,KAAKZ,MAApDwV,EAFI,EAEJA,iBAAkBP,EAFd,EAEcA,SAAUD,EAFxB,EAEwBA,eAChCvB,EAAuB,GAErBuC,EAAc,sBAAI3B,GAAJ,YAAsBY,GAAY,KAAK3V,KAAI,YAAsB,IAAhBkU,EAAe,sBACjDF,EAA2C,CAC1EC,QAASiC,EACThC,aAFMQ,EAD0E,EAC1EA,cAAeC,EAD2D,EAC3DA,MAOvB,OAFAR,EAAuBO,EAEhB,CACLC,YAKAgC,EAAuC,IAAtBjB,EAAiB,GAGtC,OAFAiB,EAAiBA,EAAgB,KAAOA,GAAkB,IAGxD,yBAAK9W,UAAU,yBAAyBM,MAAO,CAAEuJ,OAAO,GAAD,OAAKiN,EAAL,QACrD,yBACE9W,UAAS,qCAAiC8W,EAAgB,IAAO,cAAkB,IACnFnB,SAAUlU,KAAKkU,UAEdlU,KAAKsV,eACJF,EAAYtY,QACZ,kBAAC,IAAD,CACEiY,SAAS,EACTjU,QAASoU,IAAaC,QACtB5W,UAAU,2BACV6U,cAAeP,EACf0C,KAAMH,KAGR,S,+BAWA,IACA7B,EAAgBvT,KAAKuC,MAArBgR,YADD,EAEgFvT,KAAKZ,MAApFiO,EAFD,EAECA,MAAOuH,EAFR,EAEQA,iBAAkBP,EAF1B,EAE0BA,SAAUD,EAFpC,EAEoCA,eAAgB9G,EAFpD,EAEoDA,QAASkI,EAF7D,EAE6DA,eAEpE,OACE,yBAAKjX,UAAS,iBAAa8O,EAAS,OAAW,KAC5CC,GAA2B,IAAhBiG,GACV,kBAAC,IAAD,CACEzS,QAAQ,QACRgU,WAAY,CACVC,SAAS,EACTC,UAA0B,OAAhBJ,QAAgB,IAAhBA,OAAA,EAAAA,EAAkB9X,UAAmB,OAARuX,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAAM/W,OAAOC,KAAK8W,EAAS,IAAIvX,QAAW,EAC5FmY,SAAUb,EAAiBoB,EAAiBpB,EAAiBoB,EAC7D1U,QAASoU,IAAaC,aAIxB7H,GAA2B,IAAhBiG,GAAsBA,EAAc,IAAMvT,KAAKyV,mB,GA9J7CxT,IAAMC,WA6M/BoR,EAAWvU,aAAe,CACxBsO,OAAO,EACPuH,iBAAkB,GAClBjB,wBAAyBpX,IAAQ4F,KACjCkS,SAAU,GACV/G,SAAS,EACTkI,eAAgB,EAChBrK,MAAO,IAST,IASMkD,EAAsBC,IAAeoH,WAAWC,iBAEhDC,EAAsBvT,YAAQgM,GAXT,SAAA3O,GAAQ,MAAK,CACtCiU,wBAAyB,SAACxU,EAAIgM,GAAL,OAAezL,EAASgP,IAAaC,KAAKgF,wBAAwBxU,EAAIgM,QAUrE9I,CAAiDiR,G,UC/OvEuC,E,4MAQJC,OAAS,YAAe,IAAZC,EAAW,EAAXA,KAAW,EAC4B,EAAK3W,MAA9C4W,EADa,EACbA,cAAeR,EADF,EACEA,eAAgBrK,EADlB,EACkBA,MACjC8K,GAAsB,OAAL9K,QAAK,IAALA,OAAA,EAAAA,EAAQM,IAAqBoI,SAAU2B,EACxDU,EAASD,GAAkBF,EAAO,IAAMC,EAE9C,EAAKG,UAAUD,GACf,EAAKE,SAASH,I,EAUhBI,UAAY,YAAkB,IAAfC,EAAc,EAAdA,QACb,EAAKH,YACL,EAAKC,SAASE,I,wDAQNJ,GAAS,IAAD,EACqBlW,KAAKZ,MAAlC4W,EADQ,EACRA,cAAe9K,EADP,EACOA,UACjBqL,EAAiB,GAEvBA,EAAejY,KAAf,aACEqB,KAAMC,IAAWuL,MAAMY,qBAAqBN,IAAqBqI,QACjExU,OAAQ4L,GACPO,IAAqBqI,OAHxB,OAGiCoC,QAHjC,IAGiCA,IAAUF,IAG3CvW,IAAMC,SAAS6W,K,+BAQR/C,GAAQ,IAAD,EACwBxT,KAAKZ,MAAnCoW,EADM,EACNA,eAAgBtK,EADV,EACUA,UAClBqL,EAAiB,GAEvBA,EAAejY,KAAf,aACEqB,KAAMC,IAAWuL,MAAMY,qBAAqBN,IAAqBoI,OACjEvU,OAAQ4L,GACPO,IAAqBoI,MAHxB,OAGgCL,QAHhC,IAGgCA,IAASgC,IAGzC/V,IAAMC,SAAS6W,K,+BASP,IAAD,SACqFvW,KAAKZ,MAAzFoX,EADD,EACCA,cAAeC,EADhB,EACgBA,UAAWpW,EAD3B,EAC2BA,WAAYqW,EADvC,EACuCA,UAAWlB,EADlD,EACkDA,eAAgBrK,EADlE,EACkEA,MAAOrK,EADzE,EACyEA,QAC1E6V,EAAcxL,EAAMM,IAAqBqI,QAAU3I,EAAMM,IAAqBoI,OAAS,GAAK,EAC5FoC,EAAiB9K,EAAMM,IAAqBoI,QAAU2B,EAE5D,OACE,kBAAC,IAAD,CACEjX,UAAamY,EAA0B,GAAb,SAC1BF,cAAeA,EACfC,UAAWA,EACXpW,WAAYA,IAAeqW,EAC3BA,UAAWA,EACXX,KAAMY,EACNL,QAASL,EACTW,UAAW,SAAC9K,EAAOiK,GAAR,OAAiB,EAAKD,OAAO,CAAEhK,QAAOiK,UACjDc,gBAAiB,SAAC/K,EAAOwK,GAAR,OAAoB,EAAKD,UAAU,CAAEvK,QAAOwK,aAC7DxV,QAASA,Q,GAvFQmB,IAAMC,WAyH/B2T,EAAW9W,aAAe,CACxBoM,MAAO,GACPqL,cAAe,OACfC,WAAW,EACXpW,YAAY,EACZqW,UAAW,EACXV,cAAe,EACfR,eAAgB,GAChB1U,QAAS,MAYX,IAEMgW,EAAsBzU,aAFJ,SAAC,EAAD,SAAG0U,EAAH,EAAGA,KAAU7L,EAAb,EAAaA,UAAb,MAA8B,CAAEC,MAAK,UAAE4L,EAAK5L,aAAP,aAAE,EAAaD,MAEhD7I,CAAyBwT,GC3I/CmB,E,4MAkBJC,sBAAwB,WAAO,IAAD,EACgC,EAAK7X,MAAzD8X,EADoB,EACpBA,kBAAmB7W,EADC,EACDA,WAAY6K,EADX,EACWA,UAAWC,EADtB,EACsBA,OAE7C9K,GAAc6K,GACjBgM,EAAkBhM,EAAWC,I,kEApB/BnL,KAAKiX,0B,yCAGYhL,GAAY,IAAD,EACCjM,KAAKZ,MAA1B8L,EADoB,EACpBA,UAAWC,EADS,EACTA,MAEfD,IAAce,EAAUf,WAAcgB,IAASf,EAAOc,EAAUd,QAClEnL,KAAKiX,0B,oCAsBM,IAAD,EACuDjX,KAAKZ,MAAhEwV,EADI,EACJA,iBAAkBuC,EADd,EACcA,oBAAqB9C,EADnC,EACmCA,SAAUlJ,EAD7C,EAC6CA,MACrD0H,EAAuB,GAErBuC,EAAcf,EAAS3V,KAAI,YAAsB,IAAhBkU,EAAe,sBACnBF,EAA2C,CAC1EC,QAASwE,EACTvE,aAFMQ,EAD4C,EAC5CA,cAAeC,EAD6B,EAC7BA,MAKjB+D,GAAoB,OAARxE,QAAQ,IAARA,OAAA,EAAAA,EAAUwB,gBAAiB,EACvCiD,EAAQ,OAAGzE,QAAH,IAAGA,OAAH,EAAGA,EAAU0E,sBAG3B,OAFAzE,EAAuBO,EAEhB,CACLC,QACAkE,gBAAiBH,GAAaC,GAC5B,kBAAC,EAAD,CACE5Z,IAAK4Z,EACLzC,iBAAkBA,EAClBR,eAAc,OAAExB,QAAF,IAAEA,OAAF,EAAEA,EAAUwB,eAC1BjV,GAAIkY,EACJlM,MAAOA,QAMf,OACE,kBAAC,IAAD,CACE4J,SAAO,EACPjU,QAASoU,IAAaC,QACtB5W,UAAU,2BACV6U,cAAeP,EACf0C,KAAMH,M,+BAUF,IAAD,EAaHpV,KAAKZ,MAXP+N,EAFK,EAELA,UACAE,EAHK,EAGLA,MACA8J,EAJK,EAILA,oBACA9W,EALK,EAKLA,WACAqW,EANK,EAMLA,UACArC,EAPK,EAOLA,SACA/G,EARK,EAQLA,QACAkI,EATK,EASLA,eACAtK,EAVK,EAULA,UACAC,EAXK,EAWLA,MACA7L,EAZK,EAYLA,OAGF,GAAIe,EACF,OAAO,KAGT,IAAM4V,GAAsB,OAAL9K,QAAK,IAALA,OAAA,EAAAA,EAAQM,IAAqBoI,SAAU2B,EACxDgC,EAAgBvB,EAAiB,EAEvC,OACE,kBAACzI,EAAA,EAAD,CAAMjP,UAAU,4BACd,kBAACkP,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,MAC3BV,IAGL,kBAACW,EAAA,EAAD,CAAavP,UAAY8O,EAAS,OAAW,IAC3C,kBAAC,EAAD,CACEoJ,WAAS,EACTpW,WAAYiN,GAAWD,EACvBqJ,UAAWA,EACXxL,UAAWA,EACX5L,OAAQA,EACRkW,eAAgBS,MAItB,kBAAC9H,EAAA,EAAD,KACE,yBAAK5P,UAAY8O,EAAS,OAAW,UAClCC,GACC,kBAAC,IAAD,CACExM,QAAQ,QACRgU,WAAY,CACVvW,UAAW,2BACXyW,UAA6B,OAAnBmC,QAAmB,IAAnBA,OAAA,EAAAA,EAAqBra,UAAmB,OAARuX,QAAQ,IAARA,OAAA,EAAAA,EAAW,KAAM/W,OAAOC,KAAK8W,EAAS,IAAIvX,QAAW,EAC/FmY,UAAkB,OAARZ,QAAQ,IAARA,OAAA,EAAAA,EAAUvX,SAAU0a,EAC9B1W,QAASoU,IAAaC,YAI1B7H,GAAWtN,KAAKyV,gBAGtB,kBAACgC,EAAA,EAAD,CAAYlZ,UAAY8O,EAAS,OAAW,IAC1C,kBAACqK,EAAA,aAAD,CAAcC,UAAQ,GACpB,kBAAC,EAAD,CACEtX,WAAYiN,GAAWD,EACvBqJ,UAAWA,EACXxL,UAAWA,EACX5L,OAAQA,EACRkW,eAAgBS,EAChBO,cAAc,c,GA5IAvU,IAAMC,WAkMlC8U,EAAcjY,aAAe,CAC3BsO,OAAO,EACPF,UAAW,KACXyH,iBAAkB,GAClBuC,oBAAqB,GACrBD,kBAAmB3a,IAAQ4F,KAC3B9B,WAAY9D,IAAQqb,kBACpBlB,UAAW,EACXrC,SAAU,GACV/G,SAAS,EACTkI,eAAgB,GAChBlW,OAAQ,iBASV,IASM+O,EAAsBC,IAAeuJ,cAAcC,oBAEnDC,EAAyB1V,YAAQgM,GAXZ,SAAA3O,GAAQ,MAAK,CACtCwX,kBAAmB,SAAC/X,EAAIgM,GAAL,OAAezL,EAASgP,IAAaC,KAAKuI,kBAAkB/X,EAAIgM,QAUtD9I,CAAiD2U,I,yOC1K1EgB,EA/DiB,SAAAC,GACrB,OAAQA,GACN,KAAKxM,IAAqByM,IACxB,MAAO,CACL5L,SAAU,KACViB,QAAS,CACP,CACEwC,MAAO/Q,YAAU,gCACjBd,MAAOia,IAAUC,SAEnB,CACErI,MAAO/Q,YAAU,iCACjBd,MAAOia,IAAUE,UAEnB,CACEtI,MAAO/Q,YAAU,oCACjBd,MAAOia,IAAUG,MAEnB,CACEvI,MAAO/Q,YAAU,6BACjBd,MAAOia,IAAUI,QAIzB,KAAK9M,IAAqB+M,MACxB,MAAO,CACLlM,SAAU,KACViB,QAAS,CACP,CACEwC,MAAO/Q,YAAU,sCACjBd,MAAOua,IAAYC,aAErB,CACE3I,MAAO/Q,YAAU,mCACjBd,MAAOua,IAAYE,UAErB,CACE5I,MAAO/Q,YAAU,qCACjBd,MAAOua,IAAYG,YAErB,CACE7I,MAAO/Q,YAAU,sCACjBd,MAAOua,IAAYI,eAI3B,QACE,MAAO,CACLvM,SAAU,KACViB,QAAS,CACP,CACEwC,MAAO/Q,YAAU,6BAA8B,CAAE+C,QAAS0J,IAAqByM,MAC/Eha,MAAOuN,IAAqByM,KAE9B,CACEnI,MAAO/Q,YAAU,6BAA8B,CAAE+C,QAAS0J,IAAqB+M,QAC/Eta,MAAOuN,IAAqB+M,W,OC1ClCM,E,4MAMJC,QAAU,WAAO,IAAD,EACNC,EAAoB,EAAK5Z,MAAzB4Z,gBACFC,EAAkB,CACtB,CAAEtZ,KAAMC,IAAWsZ,QAAQC,mBAAoB/b,KAAM,CAAEgc,cAAe,IAAIC,MAC1E,CACE1Z,KAAMC,IAAWuL,MAAMmO,gBACvBlc,KAAM,CACJmc,cAAY,mBACT9N,IAAqByM,IAAM,MADlB,cAETzM,IAAqB+M,MAAQ,MAFpB,MAQdQ,GACFC,EAAgB3a,KAAK,CAAEqB,KAAMC,IAAWsZ,QAAQM,gBAAiBpc,KAAM,CAAEqc,cAAe,QAG1F,EAAKC,YAAYT,GAAiB,I,EASpCU,cAAgB,SAAAC,GAAkB,IAAD,EAC2B,EAAKxa,MAAvDga,EADuB,EACvBA,cAAeK,EADQ,EACRA,cAAeT,EADP,EACOA,gBAGvBa,GADS7B,IACyBzK,QAAQzL,MAAK,qBAAGiO,QAAsB6J,MAAkB,IAAjG1b,MAER,GAAK2b,EAAL,CAIA,IAAMC,EAAuB,IAAIT,IAAID,GACrCU,EAAoB,OAAQD,GAE5B,IAAMZ,EAAkB,CACtB,CAAEtZ,KAAMC,IAAWsZ,QAAQC,mBAAoB/b,KAAM,CAAEgc,cAAeU,IACtE,CACEna,KAAMC,IAAWuL,MAAMmO,gBACvBlc,KAAM,CACJmc,aAAa,eACVM,EAAgB,SAMzB,GAAIb,EAAiB,CACnB,IAAMe,EAAwBD,EAAqBjM,KAAO,GAAK4L,GAAkB,KACjFR,EAAgB3a,KAAK,CAAEqB,KAAMC,IAAWsZ,QAAQM,gBAAiBpc,KAAM,CAAEqc,cAAeM,KAG1F,EAAKL,YAAYT,GAAiB,K,EASpCe,iBAAmB,SAAAlO,GAAU,IACnB5N,EAAU4N,EAAV5N,MACR,EAAKwb,YAAY,CAAE/Z,KAAMC,IAAWsZ,QAAQM,gBAAiBpc,KAAM,CAAEqc,cAAevb,M,EAUtF8P,SAAW,YAAuB,IAApBlC,EAAmB,EAAnBA,MAAOmO,EAAY,EAAZA,MACXb,EAAkB,EAAKha,MAAvBga,cACAlb,EAAU4N,EAAV5N,MACF4b,EAAuB,IAAIT,IAAID,GAAeve,IAAIof,GAExD,EAAKP,YACH,CACE,CACE/Z,KAAMC,IAAWsZ,QAAQC,mBACzB/b,KAAM,CAAEgc,cAAeU,IAEzB,CACEna,KAAMC,IAAWuL,MAAMY,qBAAqBkO,GAC5C7c,KAAK,eAAI6c,EAAQ/b,MAGrB,I,0DAUQgc,GAA6B,IAApBC,EAAmB,wDAC9B7a,EAAWU,KAAKZ,MAAhBE,OACFiX,GAAmB6D,MAAMC,QAAQH,IAAYA,GAAY,CAACA,IAAUxb,KAAI,gBAAGiB,EAAH,EAAGA,KAAMvC,EAAT,EAASA,KAAT,oBAC5EuC,OACAL,UACGlC,MAGD+c,GACF5D,EAAejY,KAAK,CAClBqB,KAAMC,IAAWuL,MAAMmP,6BAI3B7a,IAAMC,SAAS6W,K,sCASD0D,GAAQ,IAAD,EAIjBjU,EAHImF,EAAUnL,KAAKZ,MAAf+L,MACFoC,EAAUyK,EAAwBiC,GAClCR,EAAgBzZ,KAAKua,mBAW3B,OAPEvU,EADEiU,EACiC,kBAA1B,OAAO9O,QAAP,IAAOA,OAAP,EAAOA,EAAQ8O,KAAuB1M,EAAQA,QAAQzL,MAAK,qBAAG5D,SAAiB,OAAKiN,QAAL,IAAKA,OAAL,EAAKA,EAAQ8O,OAE5F1M,EAAQA,QAAQzL,MAAK,qBAAG5D,QAAsBub,KAKlD,CAAElM,UAASiN,iBAFa,QAAN,EAAAxU,SAAA,eAAQ+J,QAAS,CAAC/J,EAAO+J,SAAmB,OAAPxC,QAAO,IAAPA,OAAA,EAAAA,EAASjB,WAAY,CAACiB,EAAQjB,WAAc,M,yCAUxF,IAAD,MACwBtM,KAAKZ,MAAtCqa,EADS,EACTA,cAAegB,EADN,EACMA,cAEvB,OACEhB,IAAa,UACbgB,EAAc3Y,MAAK,mBAA+B,IAA/B,EAAGwK,mBADT,aACb,EAAyDnN,KAC/B,IAAzBsb,EAAc3d,SAAd,UAA8B2d,EAAc,UAA5C,aAA8B,EAAkBtb,M,4CAWlB,IAAD,OAAT8a,EAAS,EAAb9a,GACXjC,EAAM8C,KAAKZ,MAAXlC,EADwB,EAEK8C,KAAK0a,gBAAgBT,GAAlD1M,EAFwB,EAExBA,QAASiN,EAFe,EAEfA,gBACXf,EAAgBzZ,KAAKua,mBAE3B,OACE,kBAACI,EAAA,EAAD,CACEld,IAAKwc,EACLW,MAAOJ,EACPK,WAAY7a,KAAK2Z,cACjBmB,aAAc5d,EAAE,6BAA8B,CAAE6E,QAASkY,IACzDc,gBAAiBtB,IAAkBQ,GAEnC,kBAAC,IAAD,CACElM,aAAY7Q,EAAE,6BAA8B,CAAE6E,QAASkY,IACvDjM,SAAU,SAAAlC,GAAK,OAAI,EAAKkC,SAAS,CAAElC,QAAOmO,WAC1ChM,gBAAiBuM,EACjBtM,YAAahR,EAAE,gCAAiC,CAAE6E,QAASkY,IAC3D1M,QAASA,EAAQA,a,+BAWf,IAAD,SACkCvN,KAAKZ,MAAtCqb,EADD,EACCA,cAAepa,EADhB,EACgBA,WAAYnD,EAD5B,EAC4BA,EAEnC,GAAImD,EACF,OAAO,KAJF,MAOwEL,KAAK0a,kBAAnEM,EAPV,EAOCzN,QAA2C0N,EAP5C,EAO2BT,gBAElC,OACE,kBAAC,IAAD,CACErb,GAAG,oBACHZ,UAAU,sEACV2c,gCAAgC,KAChCC,gBAAiBnb,KAAK+Y,SAEtB,kBAACqC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAoBC,WAAY,kBAAC,IAAD,MAAgBC,WAAW,MACzD,kBAACC,EAAA,EAAD,CAAc1a,QAAQ,gBACM,IAAzB2Z,EAAc3d,QACb,kBAAC2e,EAAA,EAAD,KACE,kBAAC,IAAD,CACE1N,aAAY7Q,EAAE,8BACd8Q,SAAUhO,KAAKga,iBACf/L,gBAAiBgN,EACjB/M,YAAahR,EAAE,iCACfqQ,QAASyN,EAAgBzN,QACzB+N,WAAY,kBAAC,IAAD,SAIjBb,EAAc/b,KAAI,gBAAGS,EAAH,EAAGA,GAAImN,EAAP,EAAOA,SAAP,OAAsB,EAAKoP,mBAAmB,CAAEvc,KAAImN,wB,GAzO/DrK,IAAMC,WAkR5B4W,EAAQ/Z,aAAe,CACrBoM,MAAO,GACPiO,cAAe,IAAIC,IACnBI,cAAe,KACfgB,cAAe,CACb,CACEtb,GAAIsM,IAAqByM,IACzByD,WAAY,UAEd,CACExc,GAAIsM,IAAqB+M,MACzBmD,WAAY,SACZrP,UAAU,IAGd0M,iBAAiB,EACjB3Y,WAAY9D,IAAQqf,oBACpB1e,EAAG8B,IACHM,OAAQ,WAYV,IAEMuc,EAAmBxZ,aAFD,SAAC,EAAD,SAAG6W,EAAH,EAAGA,QAAa5Z,EAAhB,EAAgBA,OAAhB,gCAAmC4Z,EAAQvG,eAA3C,aAAmC,EAAkBrT,MAEpD+C,CAAyByW,I,qNC9T5CgD,E,4MACJvZ,MAAQ,CAAEwZ,YAAY,EAAOxO,QAAS,KAAMjB,SAAU,M,EAyBtD0B,SAAW,SAAClC,EAAOkQ,GAAoB,IAC7BzO,EAAY,EAAKhL,MAAjBgL,QAD4B,EAEI,EAAKnO,MAArCD,EAF4B,EAE5BA,GAAIuK,EAFwB,EAExBA,KAAMsE,EAFkB,EAElBA,SAAUlN,EAFQ,EAERA,QAEtBmb,EAAiB1O,EACjB2O,EAAeD,EAAeE,WAAU,SAAAC,GAAM,OAAIA,EAAOrM,QAAUiM,KACzEC,EAAeC,GAAc5P,SAC3BxL,IAAYub,IAAcC,SAAiBL,EAAeC,GAAc5P,SAEtExL,IAAYub,IAAcC,QAC5BL,EAAeze,SAAQ,SAAC4e,EAAQ1e,GAC1Bwe,IAAiBxe,IACnBue,EAAeve,GAAO4O,UAAW,MAKvC,IAAMiQ,EACJzb,IAAYub,IAAcC,OACtBN,EACAC,EAAejW,QAAO,SAAAwW,GAAG,OAAqB,IAAjBA,EAAIlQ,YAAmB5N,KAAI,SAAA8d,GAAG,OAAIA,EAAIzM,SAEzE,EAAK1M,SACH,CACEkK,QAAS0O,EACT3P,SAAUiQ,IAEZ,WACE,IAAME,EAAqB5V,IAAWoV,GAEhCS,EAAa,CACjBvd,KACAuK,KAAMA,GAAQvK,EACdjB,MAAOue,EAAmBP,GAAche,MACxCoO,SACGxL,IAAYub,IAAcC,QAAUG,EAAmBP,IAAkBrV,IAAW0V,GACvFI,cAAeT,EACfvc,KAAK,UAAD,OAAamB,IAAYub,IAAcC,OAAU,MAAU,YAC/D/O,QAASkP,GAGP3b,IAAYub,IAAcO,WAC5BF,EAAWG,QAAUJ,EAAmBP,GAAc5P,UAGxD,IAAMwQ,EAAS,eACVJ,EADU,CAEbvI,OAAO,eAAMuI,GACbK,cAAc,eAAML,GACpBM,QAASzgB,IAAQ4F,OAGnB6L,EAAS,eAAK8O,GAAaZ,EAAcO,GAErC3b,IAAYub,IAAcC,QAC5B,EAAKjZ,SAAS,CACZ0Y,YAAY,Q,EAYtB9Y,SAAW,SAAAga,GACT,EAAK5Z,SAAS,CACZ0Y,WAAYkB,K,kEA1FE,OAFIjd,KAAKuC,MAAjBgL,SAGNvN,KAAKkd,kB,yCAIUjR,GAAY,IAAD,EACSjM,KAAKZ,MAAlCmO,EADoB,EACpBA,QAASU,EADW,EACXA,gBAEZ/B,IAASD,EAAUsB,QAASA,IAAarB,IAASD,EAAUgC,gBAAiBA,IAChFjO,KAAKkd,kB,sCAwFQ,IAiCXX,EAjCU,EACgCvc,KAAKZ,MAA3CmO,EADM,EACNA,QAASU,EADH,EACGA,gBAAiBnN,EADpB,EACoBA,QAC5Bmb,EAAiBkB,IAAe5P,GAClCjQ,OAAOC,KAAKgQ,GAAS7O,KAAI,SAAAjB,GAAG,sBAAU8P,EAAQ9P,GAAlB,CAAwBsS,MAAOtS,EAAKS,MAAOqP,EAAQ9P,QAC/EoJ,IAAW0G,GAET6P,EACHnP,GAA8C,kBAApBA,GAA4D,kBAApBA,EAC/D,CAACA,GACDA,EAENgO,EAAeze,SAAQ,SAAC4e,EAAQ1e,GAC9B,IAAI2f,EAAkBjB,EAES,kBAApBiB,IACTA,EAAkB,CAChBtN,MAAOqM,EACPle,MAAOke,GAGTH,EAAeve,GAAS2f,GAG1BA,EAAgBC,KAAOD,EAAgBC,MAAQD,EAAgBtN,MAC/DsN,EAAgBE,YAAcF,EAAgBE,aAAeF,EAAgBtN,MAC7EsN,EAAgBpf,MAAQof,EAAgBpf,OAASof,EAAgBtN,MAE7DqN,IACFnB,EAAeve,GAAO4O,SACpB8Q,EAAgB3K,SAAS4K,EAAgBnf,QAAUkf,EAAgB3K,SAAS4K,EAAgBtN,WAOhGwM,EADEzb,IAAYub,IAAcC,QACVL,EAAena,MAAK,SAAA0a,GAAG,OAAqB,IAAjBA,EAAIlQ,aAAsB,IAAIyD,MAE1DkM,EAAejW,QAAO,SAAAwW,GAAG,OAAqB,IAAjBA,EAAIlQ,YAAmB5N,KAAI,SAAA8d,GAAG,OAAIA,EAAIzM,SAGtF/P,KAAKqD,SAAS,CACZkK,QAAS0O,EACT3P,SAAUiQ,M,+BASJ,IAAD,EACmCvc,KAAKuC,MAAvCgL,EADD,EACCA,QAASjB,EADV,EACUA,SAAUyP,EADpB,EACoBA,WADpB,EAEsF/b,KAAKZ,MAA1Foe,EAFD,EAECA,UAAWjf,EAFZ,EAEYA,UAAW8B,EAFvB,EAEuBA,WAAYod,EAFnC,EAEmCA,aAAcvP,EAFjD,EAEiDA,YAAaoN,EAF9D,EAE8DA,WAAYxa,EAF1E,EAE0EA,QAE3E4c,EAAkB,GAaxB,OAVKnQ,GAAYA,EAAQzQ,SAAUuD,IACjCqd,EAAgBrd,YAAa,GAU7B,kBAAC,IAAD,eACE9B,UAAS,0BAAuBkf,EAAuC,GAAvB,mBAAvC,YAAoElf,GAC7EuC,QAASA,EACTiN,aAAYyP,EACZva,SAAUjD,KAAKiD,SACf+K,SAAUhO,KAAKgO,SACf2P,WAAYrR,EACZsR,OAAQ7B,EACRT,WAAYA,EACZuC,gBAAiB3P,GACbwP,GAEFnQ,GACAA,EAAQ7O,KAAI,SAAA0d,GAAM,OAChB,kBAAC,IAAD,CACE3e,IAAKiG,OAAOoa,KAAK1B,EAAOrM,OACxB7R,MAAOke,EAAOrM,MACdgO,aAAY3B,EAAOle,MACnB8f,aAAY5B,EAAOrM,YAGvB,Q,GAlMW9N,IAAMC,WAqP3B4Z,EAAO/c,aAAe,CACpBye,UAAW,gBACXjf,UAAW,GACXY,GAAI5C,IAAQkN,aACZpJ,YAAY,EACZod,cAAc,EACd/T,KAAM,KACNsE,SAAUzR,IAAQ4F,KAClBoL,QAAS,GACTW,YAAa,gBACbD,gBAAiB,KACjBqN,WAAY,KACZxa,QAASub,IAAcC,S,iCChRzB,qDAyBM/P,EAAiB,CACrBC,sBAjBgC,SAAAyL,GAChC,MAAoB,YAAhBA,EACK,CACL3L,SAAU/R,IAAkBY,MAC5BoS,QAAS,CACP,CAAEwC,MAAO/Q,YAAU,iCAAkCd,MAAO3D,IAAkBY,MAAOmR,UAAU,GAC/F,CAAEyD,MAAO/Q,YAAU,kCAAmCd,MAAO3D,IAAkBU,QAC/E,CAAE8U,MAAO/Q,YAAU,mCAAoCd,MAAO3D,IAAkBO,SAChF,CAAEiV,MAAO/Q,YAAU,qCAAsCd,MAAO3D,IAAkBC,aAKjF,CAAE+S,QAAS","file":"static/js/1.f9c27962.chunk.js","sourcesContent":["import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, productLabel, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      header = getTooltipDate({\n        date: itemsByKey[key]?.data.date,\n        granularity\n      });\n    }\n\n    const tempDataFacet = {\n      color: itemsByKey[key]?.color\n    };\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key]?.data.hasInfinite && t('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel'));\n\n      tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n      tempDataFacet.value = thresholdStringValue;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n      tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product: productLabel });\n      tempDataFacet.value = dataFactsValue;\n    }\n\n    data.push(tempDataFacet);\n  });\n\n  return (\n    <div className=\"victory-tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  <div\n                    aria-hidden\n                    className=\"legend-icon victory-legend-icon\"\n                    style={{\n                      backgroundColor: dataFacet.color || 'transparent'\n                    }}\n                  />\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, productLabel: string, t: translate}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  productLabel: '',\n  t: translate\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { connect, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @param {string} options.chartId\n   * @param {string} options.color\n   * @param {boolean} options.isDisabled\n   * @param {boolean} options.isThreshold\n   * @param {string} options.labelContent\n   * @param {string} options.tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"victory-legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: color\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: color\n              }}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *  - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, productLabel, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}Label`, `curiosity-graph.thresholdLabel`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t([`curiosity-graph.${id}Label`, `curiosity-graph.noLabel`], {\n              product: productLabel,\n              context: productLabel\n            });\n\n          const tooltipContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}LegendTooltip`, `curiosity-graph.thresholdLegendTooltip`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t(`curiosity-graph.${id}LegendTooltip`, { product: productLabel, context: productLabel });\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold,\n            tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, legend: object, chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {dataSets: Array}, productLabel: string, viewId: string, t: translate, legend: object,\n *     chart: {hide: Function, toggle: Function, isToggled: Function}}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connect(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer } from 'victory';\nimport {\n  Chart,\n  ChartAxis,\n  ChartStack,\n  ChartThreshold,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  dataSetsToggle = {};\n\n  resizeObserver = helpers.noop;\n\n  containerRef = React.createRef();\n\n  tooltipRef = React.createRef();\n\n  componentDidMount() {\n    this.setResizeObserve();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * Consumer exposed, hides chart layer.\n   *\n   * @event onHide\n   * @param {string} id\n   */\n  onHide = id => {\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: true };\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns all chart layers back on.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    this.dataSetsToggle = {};\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns chart layer on/off.\n   *\n   * @event onToggle\n   * @param {string} id\n   * @returns {boolean}\n   */\n  onToggle = id => {\n    const updatedToggle = !this.dataSetsToggle[id];\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: updatedToggle };\n    this.forceUpdate();\n\n    return updatedToggle;\n  };\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { chartWidth } = this.state;\n    const { clientWidth = 0 } = this.containerRef.current || {};\n\n    if (clientWidth !== chartWidth) {\n      this.setState({ chartWidth: clientWidth });\n    }\n  };\n\n  /**\n   * Consumer exposed, determine if chart layer on/off.\n   * Note: Using \"setState\" as related to this exposed check gives the appearance of a race condition.\n   * Using a class property with forceUpdate to bypass.\n   *\n   * @param {string} id\n   * @returns {boolean}\n   */\n  getIsToggled = id => this.dataSetsToggle[id] || false;\n\n  /**\n   * Set ResizeObserver for scenarios where the window.resize event doesn't fire.\n   */\n  setResizeObserve() {\n    const containerElement = this.containerRef.current;\n    const { ResizeObserver } = window;\n\n    if (containerElement && ResizeObserver) {\n      const resizeObserver = new ResizeObserver(this.onResizeContainer);\n      resizeObserver.observe(containerElement);\n      this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n    } else {\n      this.onResizeContainer();\n      window.addEventListener('resize', this.onResizeContainer);\n      this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n    }\n  }\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { dataSetsToggle } = this;\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply data set to custom tooltips.\n   *\n   * @returns {Array}\n   */\n  getTooltipData() {\n    const { dataSetsToggle } = this;\n    const { dataSets, chartTooltip } = this.props;\n    let tooltipDataSet = [];\n\n    if (chartTooltip && dataSets && dataSets[0] && dataSets[0].data) {\n      tooltipDataSet = dataSets[0].data.map((dataSet, index) => {\n        const itemsByKey = {};\n\n        dataSets.forEach(data => {\n          if (!dataSetsToggle[data.id] && data.data && data.data[index]) {\n            itemsByKey[data.id] = {\n              color: data.stroke || data.fill || data.color || '',\n              data: _cloneDeep(data.data[index])\n            };\n          }\n        });\n\n        const mockDatum = {\n          datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey, dataSets: _cloneDeep(dataSets) }\n        };\n\n        return {\n          x: dataSet.x,\n          y: null,\n          itemsByKey,\n          tooltip:\n            (React.isValidElement(chartTooltip) && React.cloneElement(chartTooltip, { ...mockDatum })) ||\n            chartTooltip({ ...mockDatum })\n        };\n      });\n    }\n\n    return tooltipDataSet;\n  }\n\n  /**\n   * ToDo: monitor Victory charts release version increment around Voronoi container attributes.\n   * Future updates could lead to additional unexpected behavior. Victory charts released a patch/fix\n   * around attribute behavior for Voronoi containers. The behavior was already \"unexpected\" in that there appears\n   * to be a need to provide the \"label\" attribute when using the \"labelComponent\" attribute, even if \"label\" is\n   * just a pass-through. Providing `label={() => ''}` was a work-around, that is now `label={obj => obj}`. See\n   * - https://github.com/FormidableLabs/victory/blob/master/CHANGELOG.md#3436-2020-05-18\n   * - https://github.com/FormidableLabs/victory/pull/1581\n   */\n  /**\n   * FixMe: Victory charts voronoi containers throw inaccurate coordinates on large graph widths\n   * Issue is \"patched\" by removing the \"x\" dimension attribute for voronoi.\n   * - https://github.com/RedHatInsights/curiosity-frontend/issues/318\n   */\n  /**\n   * Return a chart/graph tooltip Victory container component to allow custom HTML tooltips.\n   *\n   * @returns {Node}\n   */\n  renderTooltip() {\n    const { dataSetsToggle } = this;\n    const { chartTooltip, dataSets } = this.props;\n\n    if (!chartTooltip || Object.values(dataSetsToggle).filter(v => v === true).length === dataSets.length) {\n      return null;\n    }\n\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const parsedTooltipData = this.getTooltipData();\n    let globalContainerBounds = {};\n    let globalTooltipBounds = {};\n\n    const applyParsedTooltipData = ({ datum }) => {\n      const t = parsedTooltipData.find(v => v.x === datum.x) || {};\n      return t?.tooltip || '';\n    };\n\n    const FlyoutComponent = obj => {\n      const containerRef = this.containerRef.current;\n      const tooltipRef = this.tooltipRef.current;\n      const containerBounds = (containerRef && containerRef.getBoundingClientRect()) || {};\n      const tooltipBounds = (tooltipRef && tooltipRef.getBoundingClientRect()) || {};\n\n      if (containerBounds.right) {\n        globalContainerBounds = containerBounds;\n      }\n\n      if (tooltipBounds.right) {\n        globalTooltipBounds = tooltipBounds;\n      }\n\n      let xCoordinate = obj.x + 10;\n\n      if (\n        globalContainerBounds.right < globalTooltipBounds.right ||\n        obj.x + globalTooltipBounds.width > globalContainerBounds.right / 2\n      ) {\n        xCoordinate = obj.x - 10 - globalTooltipBounds.width;\n      }\n\n      const htmlContent = applyParsedTooltipData({ ...obj });\n\n      if (htmlContent) {\n        return (\n          <g>\n            <foreignObject x={xCoordinate} y={obj.y / 2.2} width=\"100%\" height=\"100%\">\n              <div ref={this.tooltipRef} style={{ display: 'inline-block' }} xmlns=\"http://www.w3.org/1999/xhtml\">\n                {htmlContent}\n              </div>\n            </foreignObject>\n          </g>\n        );\n      }\n\n      return <g />;\n    };\n\n    return (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={<FlyoutComponent />}\n        voronoiPadding={60}\n      />\n    );\n  }\n\n  /**\n   * Return a custom chart/graph legend component.\n   *\n   * @returns {Node}\n   */\n  renderLegend() {\n    const { chartLegend, dataSets } = this.props;\n\n    if (!chartLegend) {\n      return null;\n    }\n\n    const legendProps = {\n      datum: { dataSets: _cloneDeep(dataSets) },\n      chart: {\n        hide: this.onHide,\n        revert: this.onRevert,\n        toggle: this.onToggle,\n        isToggled: this.getIsToggled\n      }\n    };\n\n    return (\n      (React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n      chartLegend({ ...legendProps })\n    );\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const { dataSetsToggle } = this;\n    const { dataSets } = this.props;\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { chartLegend, padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const tooltipComponent = { containerComponent: (maxY >= 0 && this.renderTooltip()) || undefined };\n    const chartProps = { padding, ...chartDomain, ...tooltipComponent };\n\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n        {chartLegend && <div className=\"curiosity-chartarea-description victory-legend\">{this.renderLegend()}</div>}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartLegend: Node|Function, chartTooltip: Node|Function, padding, xAxisTickFormat: Function,\n *     themeColor: string, yAxisTickFormat: Function, domain: object|Array, dataSets: object,\n *     xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartLegend: null, chartTooltip: null, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: null, themeColor: string, yAxisTickFormat: null, domain: object,\n *     dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport { graphCardTypes } from './graphCardTypes';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { ChartArea } from '../chartArea/chartArea';\nimport { Loader } from '../loader/loader';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const graphQuery = {\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString(),\n        ...query\n      };\n\n      getGraphReportsCapacity(productId, graphQuery);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n      viewId,\n      [RHSM_API_QUERY_TYPES.GRANULARITY]: value\n    });\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, selectOptionsType, productLabel, query, viewId } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: updatedGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(updatedGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          strokeWidth: 2,\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 3;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <ChartArea\n        key={`chart_${JSON.stringify(query)}`}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend chart={chart} datum={datum} productLabel={productLabel} viewId={viewId} />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={updatedGranularity} productLabel={productLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, isDisabled, pending, selectOptionsType, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = this.getQueryGranularity();\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <CardHeader>\n          <CardTitle>\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {cardTitle}\n            </Title>\n          </CardTitle>\n          <CardActions className={(error && 'blur') || ''}>\n            {children}\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onGranularitySelect}\n              options={options}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHeader>\n        <CardBody>\n          <div className={(error && 'blur') || 'fadein'}>\n            {pending && <Loader variant=\"graph\" />}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productLabel: string, productId: string, pending: boolean, error: boolean, query: object,\n *     cardTitle: string, filterGraphData: Array, getGraphReportsCapacity: Function,\n *     selectOptionsType: string, viewId: string, t: Function, children: Node, graphData: object,\n *     isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productLabel: string, selectOptionsType: string,\n *     viewId: string, t: translate, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  productLabel: '',\n  selectOptionsType: 'default',\n  t: translate,\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import moment from 'moment';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale }) =>\n  new Intl.NumberFormat(locale, { maximumFractionDigits: 1, notation: 'compact', compactDisplay: 'short' }).format(\n    tick\n  );\n\n/**\n * Convert data into a C3 configuration object.\n *\n * @param {object} options\n * @param {Array} options.data\n * @param {string} options.granularity\n * @param {string} options.productShortLabel\n * @returns {{configuration: {padding: {top: number, left: number, bottom: number, right: number},\n *     data: {types: {}, names: {}, columns: Array, x: string, groups: Array, colors: {}},\n *     legend: {show: boolean}, grid: {y: {show: boolean}}, tooltip: {format: {title: Function,\n *     value: Function}, order: Function}, unloadBeforeLoad: boolean,\n *     spline: {interpolation: {type: string}}, axis: {x: {padding: number, tick: {format: Function},\n *     type: string}, y: {padding: {bottom: number}, default: number, min: number,\n *     tick: {show: boolean, outer: boolean, format: Function}}}, point: {show: boolean}},\n *     hiddenDataFacets: Array}}\n */\nconst c3Config = ({ data = [], granularity, productShortLabel }) => {\n  const hiddenDataFacets = [];\n  const converted = {\n    x: 'x',\n    colors: {},\n    columns: [],\n    groups: [[]],\n    names: {},\n    types: {}\n  };\n\n  const convertTimeSeriesDate = value => {\n    const dateStr = (helpers.TEST_MODE && moment.utc(value)) || moment.utc(value).local();\n    return dateStr.format('YYYY-MM-DD');\n  };\n\n  data.forEach(value => {\n    if (/^threshold/.test(value.id)) {\n      converted.colors[value.id] = value.color || chartColorGreenDark.value;\n      converted.types[value.id] = 'step';\n      converted.names[value.id] = translate(`curiosity-graph.thresholdLabel`);\n    } else {\n      converted.colors[value.id] = value.color;\n      converted.types[value.id] = 'area-spline';\n      converted.groups[0].push(value.id);\n      converted.names[value.id] = translate(`curiosity-graph.${value.id}Label`, { product: productShortLabel });\n    }\n\n    converted.columns[0] = ['x'];\n    converted.columns.push([value.id]);\n\n    let totalData = 0;\n\n    value.data.forEach(filteredValue => {\n      converted.columns[0].push(convertTimeSeriesDate(filteredValue.date));\n      converted.columns[converted.columns.length - 1].push(filteredValue.y);\n      totalData += filteredValue.y || 0;\n    });\n\n    // ToDo: need to check for infinite threshold, possibly has data\n    if (totalData <= 0) {\n      converted.columns.pop();\n      hiddenDataFacets.push(value.id);\n    }\n  });\n\n  return {\n    hiddenDataFacets,\n    configuration: {\n      tooltip: {\n        order: (a, b) => converted.columns.indexOf(a.id) - converted.columns.indexOf(b.id),\n        format: {\n          title: date =>\n            getTooltipDate({\n              date,\n              granularity\n            }),\n          value: (value, ratio, id, index) => {\n            const dataItem = data.find(dataValue => id === dataValue.id)?.data[index];\n            let updatedValue;\n\n            if (/^threshold/.test(id)) {\n              updatedValue =\n                (dataItem?.hasInfinite && translate('curiosity-graph.infiniteThresholdLabel')) ||\n                (dataItem?.y ?? translate('curiosity-graph.noDataLabel'));\n            } else {\n              updatedValue =\n                (dataItem?.hasData === false && translate('curiosity-graph.noDataLabel')) || dataItem?.y || 0;\n            }\n\n            return updatedValue;\n          }\n        }\n      },\n      unloadBeforeLoad: true,\n      padding: { left: 40, right: 40, top: 10, bottom: 10 },\n      legend: { show: false },\n      spline: {\n        interpolation: {\n          type: 'monotone'\n        }\n      },\n      data: {\n        ...converted\n      },\n      point: {\n        show: false\n      },\n      grid: {\n        y: {\n          show: true\n        }\n      },\n      axis: {\n        x: {\n          type: 'timeseries',\n          tick: {\n            format: tick => {\n              const xAxisTicks = converted.columns[0].slice(1);\n              const formattedDate = convertTimeSeriesDate(tick);\n              const dateIndex = xAxisTicks.indexOf(formattedDate);\n              const previousDate = dateIndex > -1 && xAxisTicks[dateIndex - 1];\n\n              return xAxisTickFormat({\n                tick: dateIndex,\n                date: formattedDate,\n                previousDate,\n                granularity\n              });\n            }\n          },\n          padding: 0\n        },\n        y: {\n          default: [0, 50],\n          padding: { bottom: 0 },\n          min: 0,\n          tick: {\n            show: false,\n            outer: false,\n            format: tick => (tick === 0 ? '' : yAxisTickFormat({ tick }))\n          }\n        }\n      }\n    }\n  };\n};\n\nconst c3GraphCardHelpers = {\n  c3Config,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  c3GraphCardHelpers as default,\n  c3GraphCardHelpers,\n  c3Config,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\n\n/**\n * A chart/graph legend button.\n *\n * @augments React.Component\n * @fires onFocus\n * @fires onRevert\n * @fires onToggle\n */\nclass C3GraphCardLegendItem extends React.Component {\n  state = { updatedIsToggled: null };\n\n  /**\n   * C3 chart display focus.\n   *\n   * @event onFocus\n   */\n  onFocus = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, chartId, getToggle, isToggled } = this.props;\n\n    if ((typeof getToggle === 'function' && !isToggled) || !updatedIsToggled) {\n      chart.focus(chartId);\n    }\n  };\n\n  /**\n   * C3 chart display revert.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, getToggle, isToggled } = this.props;\n\n    if ((typeof getToggle === 'function' && !isToggled) || !updatedIsToggled) {\n      chart.revert();\n    }\n  };\n\n  /**\n   * C3 chart display toggle.\n   *\n   * @event onToggle\n   */\n  onToggle = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, chartId, getToggle, isToggled } = this.props;\n\n    chart.toggle(chartId);\n\n    if (typeof getToggle === 'function') {\n      getToggle({ isToggled: !isToggled });\n    } else {\n      this.setState({\n        updatedIsToggled: !updatedIsToggled\n      });\n    }\n\n    this.onRevert();\n  };\n\n  /**\n   * C3 chart display config color.\n   *\n   * @returns {string}\n   */\n  getColor = () => {\n    const { chart, chartId } = this.props;\n    return chart.color(chartId);\n  };\n\n  /**\n   * ToDO: evaluate using nullish coalescing operator for checkIsToggled\n   */\n  /**\n   * Render a chart legend item.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedIsToggled } = this.state;\n    const { children, chart, chartId, isDisabled, isThreshold, isToggled, tooltipContent } = this.props;\n    const checkIsToggled =\n      (updatedIsToggled === null && typeof isToggled === 'boolean' && isToggled) || updatedIsToggled || false;\n\n    if (checkIsToggled) {\n      chart.hide(chartId);\n    }\n\n    const button = (\n      <Button\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        onClick={this.onToggle}\n        onFocus={this.onFocus}\n        onMouseOver={this.onFocus}\n        onBlur={this.onRevert}\n        onMouseOut={this.onRevert}\n        onKeyPress={this.onToggle}\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: this.getColor()\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: this.getColor()\n              }}\n            />\n          )\n        }\n      >\n        {children}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *   - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={tooltipContent}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartId: string, children: Node, isDisabled: boolean, tooltipContent: Node, chart: object,\n *    isThreshold: boolean, isToggled: boolean, getToggle: Function}}\n */\nC3GraphCardLegendItem.propTypes = {\n  chart: PropTypes.shape({\n    color: PropTypes.func,\n    focus: PropTypes.func,\n    hide: PropTypes.func,\n    revert: PropTypes.func,\n    toggle: PropTypes.func\n  }),\n  chartId: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  isThreshold: PropTypes.bool,\n  isToggled: PropTypes.bool,\n  tooltipContent: PropTypes.node,\n  getToggle: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, isDisabled: boolean, tooltipContent: null, chart: {hide: Function,\n *    color: Function, focus: Function, revert: Function, toggle: Function}, isThreshold: boolean,\n *    isToggled: boolean, getToggle: Function}}\n */\nC3GraphCardLegendItem.defaultProps = {\n  chart: {\n    color: helpers.noop,\n    focus: helpers.noop,\n    hide: helpers.noop,\n    revert: helpers.noop,\n    toggle: helpers.noop\n  },\n  children: null,\n  isDisabled: false,\n  isThreshold: false,\n  isToggled: false,\n  tooltipContent: null,\n  getToggle: null\n};\n\nexport { C3GraphCardLegendItem as default, C3GraphCardLegendItem };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport c3 from 'c3';\nimport _isEqual from 'lodash/isEqual';\nimport 'c3/c3.min.css';\nimport { helpers } from '../../common';\n\n/**\n * C3 wrapper.\n * Uses aspects from https://github.com/bcbcarl/react-c3js and https://github.com/wuct/react-c3-component\n *\n * @augments React.Component\n */\nclass C3Chart extends React.Component {\n  state = { chart: null };\n\n  node = React.createRef();\n\n  componentDidMount() {\n    this.generateChart();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { config } = this.props;\n\n    if (!_isEqual(prevProps.config.data, config.data)) {\n      this.generateChart();\n    }\n  }\n\n  componentWillUnmount() {\n    const { chart } = this.state;\n    if (chart) {\n      chart.destroy();\n    }\n    this.setState({ chart: null });\n  }\n\n  generateChart() {\n    const { chart } = this.state;\n    const { config, onComplete } = this.props;\n\n    let updatedChart = chart;\n    if (!updatedChart) {\n      updatedChart = c3.generate({ bindto: this.node.current, ...config });\n    }\n\n    updatedChart.load({\n      ...config.data,\n      unload: config.unloadBeforeLoad || false,\n      done: () => {\n        this.setState({ chart: updatedChart }, () => {\n          if (config.done) {\n            config.done({ chart: updatedChart, config });\n          } else {\n            onComplete({ chart: updatedChart, config });\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const { chart } = this.state;\n    const { className, children, config, style } = this.props;\n\n    return (\n      <div className={`curiosity-c3chart ${className}`} style={style}>\n        <div ref={this.node} className=\"curiosity-c3chart-container\" />\n        {chart && (\n          <div className=\"curiosity-c3chart-description\">\n            {(typeof children === 'function' && children({ chart, config })) || children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{children: Node|Function, onComplete: Function, className: string, style: object, config}}\n */\nC3Chart.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  className: PropTypes.string,\n  config: PropTypes.shape({\n    unloadBeforeLoad: PropTypes.bool,\n    data: PropTypes.object,\n    done: PropTypes.func\n  }),\n  onComplete: PropTypes.func,\n  style: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, onComplete: Function, className: null, style: {}, config: {}}}\n */\nC3Chart.defaultProps = {\n  children: null,\n  className: null,\n  config: {},\n  onComplete: helpers.noop,\n  style: {}\n};\n\nexport { C3Chart as default, C3Chart };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { c3GraphCardHelpers } from './c3GraphCardHelpers';\nimport { C3GraphCardLegendItem } from './c3GraphCardLegendItem';\nimport { graphCardTypes } from '../graphCard/graphCardTypes';\nimport { C3Chart } from '../c3Chart/c3Chart';\nimport { Loader } from '../loader/loader';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: Convert \"productShortLabel\" prop to \"productLabel\" for consistency\n * This is dependent on ALL c3 components being removed as part of future updates.\n */\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass C3GraphCard extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const graphQuery = {\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString(),\n        ...query\n      };\n\n      getGraphReportsCapacity(productId, graphQuery);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n      viewId,\n      [RHSM_API_QUERY_TYPES.GRANULARITY]: value\n    });\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * Apply a custom legend.\n   *\n   * @param {object} options\n   * @param {Function} options.chart\n   * @param {Array} options.filteredData\n   * @param {string} options.granularity\n   * @param {Array} options.hiddenDataFacets\n   * @returns {Array}\n   */\n  renderLegend({ chart, filteredData = [], granularity, hiddenDataFacets = [] }) {\n    const { state } = this;\n    const { productId, productShortLabel, t } = this.props;\n\n    return filteredData.map(({ id }) => {\n      const isThreshold = /^threshold/.test(id);\n      const isDataHidden = hiddenDataFacets.includes(id);\n      const tooltipContent = (\n        <p>{(isThreshold && t(`curiosity-graph.thresholdLegendTooltip`)) || t(`curiosity-graph.${id}LegendTooltip`)}</p>\n      );\n\n      const getToggle = ({ isToggled }) => this.setState({ [`${productId}-${granularity}-${id}`]: isToggled });\n      const isToggled = state[`${productId}-${granularity}-${id}`] || false;\n\n      return (\n        <C3GraphCardLegendItem\n          key={`legend-${productId}-${granularity}-${id}`}\n          chart={chart}\n          chartId={id}\n          tooltipContent={tooltipContent}\n          isDisabled={isDataHidden}\n          isThreshold={isThreshold}\n          isToggled={isToggled}\n          getToggle={getToggle}\n        >\n          {(isThreshold && t(`curiosity-graph.thresholdLabel`)) ||\n            t(`curiosity-graph.${id}Label`, { product: productShortLabel })}\n        </C3GraphCardLegendItem>\n      );\n    });\n  }\n\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, productId, productShortLabel, selectOptionsType } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    if (!graphData || !Object.values(graphData).length) {\n      return null;\n    }\n\n    const filtered = [];\n\n    if (filterGraphData.length) {\n      filterGraphData.forEach(filteredValue => {\n        if (graphData[filteredValue.id]) {\n          filtered.push({ ...filteredValue, data: [...graphData[filteredValue.id]] });\n        }\n      });\n    } else {\n      Object.keys(graphData).forEach(id => {\n        filtered.push({ id, data: [...graphData[id]] });\n      });\n    }\n\n    const { configuration = {}, hiddenDataFacets = [] } = c3GraphCardHelpers.c3Config({\n      data: filtered,\n      granularity: updatedGranularity,\n      productShortLabel\n    });\n\n    return (\n      <C3Chart key={`chart-${productId}-${updatedGranularity}`} config={configuration}>\n        {({ chart }) =>\n          this.renderLegend({\n            chart,\n            filteredData: filtered,\n            granularity: updatedGranularity,\n            hiddenDataFacets\n          })\n        }\n      </C3Chart>\n    );\n  }\n\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, isDisabled, pending, selectOptionsType, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = this.getQueryGranularity();\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <CardHeader>\n          <CardTitle>\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {cardTitle}\n            </Title>\n          </CardTitle>\n          <CardActions className={(error && 'blur') || ''}>\n            {children}\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onGranularitySelect}\n              options={options}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHeader>\n        <CardBody>\n          <div className={(error && 'blur') || 'fadein'}>\n            {pending && <Loader variant=\"graph\" />}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, pending: boolean, error: boolean, query: object, cardTitle: string,\n *     filterGraphData: Array, getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nC3GraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      color: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  productShortLabel: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: translate, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nC3GraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  selectOptionsType: 'default',\n  t: translate,\n  productShortLabel: '',\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(C3GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, C3GraphCard };\n","import { translate } from '../i18n/i18n';\n\n/**\n * Parse and return formatted/filtered table cells.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.cellData\n * @returns {{columnHeaders: Array, cells: Array, data: object}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {} }) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply translation and value, \"pre\" filters/callbacks\n  Object.entries(cellData).forEach(([key, value]) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value);\n  });\n\n  // Apply header and cell values, apply filters/callbacks\n  if (filters?.length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    filters.forEach(({ id, cell, header }) => {\n      let headerUpdated;\n      let cellUpdated;\n\n      if (allCells[id]) {\n        headerUpdated = allCells[id].title;\n        cellUpdated = allCells[id].value;\n      }\n\n      if (header) {\n        headerUpdated = (typeof header === 'function' && header({ ...allCells })) || header;\n      }\n\n      if (cell) {\n        cellUpdated = (typeof cell === 'function' && cell({ ...allCells })) || cell;\n      }\n\n      updatedColumnHeaders.push(headerUpdated);\n      updatedCells.push(cellUpdated);\n    });\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryListHelpers = {\n  parseRowCellsListData\n};\n\nexport { inventoryListHelpers as default, inventoryListHelpers, parseRowCellsListData };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { helpers } from '../../common';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { Loader } from '../loader/loader';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { Table } from '../table/table';\n\n/**\n * ToDo: Consider removing the query prop entirely.\n * The current API doesn't allow setting more than \"offset\" and \"limit\"\n */\n/**\n * ToDo: Review moving the \"onScroll\" layout into a standalone component.\n */\n/**\n * A system inventory guests component.\n *\n * @augments React.Component\n * @fires onUpdateGuestsData\n * @fires onScroll\n */\nclass GuestsList extends React.Component {\n  state = { currentPage: 0, limit: 100, previousData: [] };\n\n  componentDidMount() {\n    this.onUpdateGuestsData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentPage } = this.state;\n\n    if (currentPage !== prevState.currentPage) {\n      this.onUpdateGuestsData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGuestsData\n   */\n  onUpdateGuestsData = () => {\n    const { currentPage, limit } = this.state;\n    const { getHostsInventoryGuests, query, id } = this.props;\n\n    if (id) {\n      const updatedQuery = {\n        ...query,\n        [RHSM_API_QUERY_TYPES.LIMIT]: limit,\n        [RHSM_API_QUERY_TYPES.OFFSET]: currentPage * limit || 0\n      };\n\n      const { guestsQuery } = apiQueries.parseRhsmQuery(updatedQuery);\n      getHostsInventoryGuests(id, guestsQuery);\n    }\n  };\n\n  /**\n   * Update page state.\n   *\n   * @event onScroll\n   * @param {object} event\n   */\n  onScroll = event => {\n    const { target } = event;\n    const { currentPage, limit, previousData } = this.state;\n    const { numberOfGuests, pending, listData } = this.props;\n\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > (currentPage + 1) * limit && bottom && !pending) {\n      const newPage = currentPage + 1;\n      const updatedData = [...previousData, ...(listData || [])];\n\n      this.setState({\n        previousData: updatedData,\n        currentPage: newPage\n      });\n    }\n  };\n\n  renderLoader() {\n    const { currentPage } = this.state;\n    const { filterGuestsData, listData, pending } = this.props;\n\n    if (currentPage > 0 && pending) {\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            rowCount: 0,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  }\n\n  /**\n   * ToDo: Consider moving the \"meaning of life\" into the default props on iteration.\n   * For everyone else... move the 42 into default props, possibly the 275.\n   */\n  /**\n   * Render a guests table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { previousData } = this.state;\n    const { filterGuestsData, listData, numberOfGuests } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = [...previousData, ...(listData || [])].map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: filterGuestsData,\n        cellData\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    // Include the table header\n    let updatedHeight = (numberOfGuests + 1) * 42;\n    updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n    return (\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={this.onScroll}\n        >\n          {this.renderLoader()}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-inventory-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render a guest list table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { currentPage } = this.state;\n    const { error, filterGuestsData, listData, numberOfGuests, pending, perPageDefault } = this.props;\n\n    return (\n      <div className={`fadein ${(error && 'blur') || ''}`}>\n        {pending && currentPage === 0 && (\n          <Loader\n            variant=\"table\"\n            tableProps={{\n              borders: false,\n              colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n              rowCount: numberOfGuests < perPageDefault ? numberOfGuests : perPageDefault,\n              variant: TableVariant.compact\n            }}\n          />\n        )}\n        {((!pending && currentPage === 0) || currentPage > 0) && this.renderTable()}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, filterGuestsData: object,\n *     pending: boolean, query: object, numberOfGuests: number, perPageDefault: number,\n *     id: string, error: boolean}}\n */\nGuestsList.propTypes = {\n  error: PropTypes.bool,\n  filterGuestsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.string\n        }),\n        PropTypes.func\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.string\n        }),\n        PropTypes.func\n      ])\n    }).isRequired\n  ),\n  getHostsInventoryGuests: PropTypes.func,\n  numberOfGuests: PropTypes.number.isRequired,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object,\n  id: PropTypes.string.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, filterGuestsData: Array,\n *     pending: boolean, query: object, perPageDefault: number, error: boolean}}\n */\nGuestsList.defaultProps = {\n  error: false,\n  filterGuestsData: [],\n  getHostsInventoryGuests: helpers.noop,\n  listData: [],\n  pending: false,\n  perPageDefault: 5,\n  query: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventoryGuests: (id, query) => dispatch(reduxActions.rhsm.getHostsInventoryGuests(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.guestsList.makeGuestsList();\n\nconst ConnectedGuestsList = connect(makeMapStateToProps, mapDispatchToProps)(GuestsList);\n\nexport { ConnectedGuestsList as default, ConnectedGuestsList, GuestsList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * Contained pagination.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onPage\n * @fires onPerPage\n */\nclass Pagination extends React.Component {\n  /**\n   * Call page update.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.page\n   */\n  onPage = ({ page }) => {\n    const { offsetDefault, perPageDefault, query } = this.props;\n    const updatedPerPage = query?.[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const offset = updatedPerPage * (page - 1) || offsetDefault;\n\n    this.setOffset(offset);\n    this.setLimit(updatedPerPage);\n  };\n\n  /**\n   * Call per-page update.\n   *\n   * @event onPerPage\n   * @param {object} params\n   * @param {number} params.perPage\n   */\n  onPerPage = ({ perPage }) => {\n    this.setOffset();\n    this.setLimit(perPage);\n  };\n\n  /**\n   * Set page state.\n   *\n   * @param {number} offset\n   */\n  setOffset(offset) {\n    const { offsetDefault, productId } = this.props;\n    const updatedActions = [];\n\n    updatedActions.push({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n      viewId: productId,\n      [RHSM_API_QUERY_TYPES.OFFSET]: offset ?? offsetDefault\n    });\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Set per-page state.\n   *\n   * @param {number} limit\n   */\n  setLimit(limit) {\n    const { perPageDefault, productId } = this.props;\n    const updatedActions = [];\n\n    updatedActions.push({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n      viewId: productId,\n      [RHSM_API_QUERY_TYPES.LIMIT]: limit ?? perPageDefault\n    });\n\n    store.dispatch(updatedActions);\n  }\n\n  // ToDo: Consider using the PfPagination \"offset\" prop\n  /**\n   * Render pagination.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { dropDirection, isCompact, isDisabled, itemCount, perPageDefault, query, variant } = this.props;\n    const updatedPage = query[RHSM_API_QUERY_TYPES.OFFSET] / query[RHSM_API_QUERY_TYPES.LIMIT] + 1 || 1;\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n\n    return (\n      <PfPagination\n        className={(!itemCount && 'hidden') || ''}\n        dropDirection={dropDirection}\n        isCompact={isCompact}\n        isDisabled={isDisabled || !itemCount}\n        itemCount={itemCount}\n        page={updatedPage}\n        perPage={updatedPerPage}\n        onSetPage={(event, page) => this.onPage({ event, page })}\n        onPerPageSelect={(event, perPage) => this.onPerPage({ event, perPage })}\n        variant={variant}\n      />\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, productId: string, query, dropDirection: string,\n *     offsetDefault: number, variant: string, perPageDefault: number, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.LIMIT]: PropTypes.number,\n    [RHSM_API_QUERY_TYPES.OFFSET]: PropTypes.number\n  }),\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offsetDefault: PropTypes.number,\n  perPageDefault: PropTypes.number,\n  productId: PropTypes.string.isRequired,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, query: object, dropDirection: string, offsetDefault: number,\n *     variant: null, perPageDefault: number, isDisabled: boolean, itemCount: number}}\n */\nPagination.defaultProps = {\n  query: {},\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offsetDefault: 0,\n  perPageDefault: 10,\n  variant: null\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.view\n * @param {object} props\n * @param {string} props.productId\n * @returns {object}\n */\nconst mapStateToProps = ({ view }, { productId }) => ({ query: view.query?.[productId] });\n\nconst ConnectedPagination = connect(mapStateToProps)(Pagination);\n\nexport { ConnectedPagination as default, ConnectedPagination, Pagination };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Card, CardActions, CardBody, CardFooter, CardHeader, CardTitle, Title } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/TableToolbar';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport GuestsList from '../guestsList/guestsList';\nimport { inventoryListHelpers } from './inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * A system inventory component.\n *\n * @augments React.Component\n * @fires onUpdateInventoryData\n */\nclass InventoryList extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getHostsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getHostsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterGuestsData, filterInventoryData, listData, query } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: filterInventoryData,\n        cellData\n      });\n\n      const hasGuests = cellData?.numberOfGuests > 0;\n      const guestsId = cellData?.subscriptionManagerId;\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells,\n        expandedContent: hasGuests && guestsId && (\n          <GuestsList\n            key={guestsId}\n            filterGuestsData={filterGuestsData}\n            numberOfGuests={cellData?.numberOfGuests}\n            id={guestsId}\n            query={query}\n          />\n        )\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      cardTitle,\n      error,\n      filterInventoryData,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      productId,\n      query,\n      viewId\n    } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const updatedPerPage = query?.[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const loaderPerPage = updatedPerPage / 2;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <CardHeader>\n          <CardTitle>\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {cardTitle}\n            </Title>\n          </CardTitle>\n          <CardActions className={(error && 'blur') || ''}>\n            <Pagination\n              isCompact\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              productId={productId}\n              viewId={viewId}\n              perPageDefault={updatedPerPage}\n            />\n          </CardActions>\n        </CardHeader>\n        <CardBody>\n          <div className={(error && 'blur') || 'fadein'}>\n            {pending && (\n              <Loader\n                variant=\"table\"\n                tableProps={{\n                  className: 'curiosity-inventory-list',\n                  colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                  rowCount: listData?.length || loaderPerPage,\n                  variant: TableVariant.compact\n                }}\n              />\n            )}\n            {!pending && this.renderTable()}\n          </div>\n        </CardBody>\n        <CardFooter className={(error && 'blur') || ''}>\n          <TableToolbar isFooter>\n            <Pagination\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              productId={productId}\n              viewId={viewId}\n              perPageDefault={updatedPerPage}\n              dropDirection=\"up\"\n            />\n          </TableToolbar>\n        </CardFooter>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{viewId: string, productId: string, filterInventoryData: Array, listData: Array, pending: boolean, query: object,\n *     getHostsInventory: Function, perPageDefault: number, isDisabled: boolean, error: boolean, cardTitle: string,\n *     itemCount: number}}\n */\nInventoryList.propTypes = {\n  error: PropTypes.bool,\n  cardTitle: PropTypes.string,\n  filterGuestsData: PropTypes.array,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.string\n        }),\n        PropTypes.func\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.string\n        }),\n        PropTypes.func\n      ])\n    }).isRequired\n  ),\n  getHostsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, filterInventoryData: Array, listData: Array, pending: boolean, getHostsInventory: Function,\n *     perPageDefault: number, isDisabled: boolean, error: boolean, cardTitle: null, itemCount: number}}\n */\nInventoryList.defaultProps = {\n  error: false,\n  cardTitle: null,\n  filterGuestsData: [],\n  filterInventoryData: [],\n  getHostsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  viewId: 'inventoryList'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventory: (id, query) => dispatch(reduxActions.rhsm.getHostsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.inventoryList.makeInventoryList();\n\nconst ConnectedInventoryList = connect(makeMapStateToProps, mapDispatchToProps)(InventoryList);\n\nexport { ConnectedInventoryList as default, ConnectedInventoryList, InventoryList };\n","import { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SLA_TYPES as SLA_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES as USAGE_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = optionsType => {\n  switch (optionsType) {\n    case RHSM_API_QUERY_TYPES.SLA:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.slaPremium'),\n            value: SLA_TYPES.PREMIUM\n          },\n          {\n            title: translate('curiosity-toolbar.slaStandard'),\n            value: SLA_TYPES.STANDARD\n          },\n          {\n            title: translate('curiosity-toolbar.slaSelfSupport'),\n            value: SLA_TYPES.SELF\n          },\n          {\n            title: translate('curiosity-toolbar.slaNone'),\n            value: SLA_TYPES.NONE\n          }\n        ]\n      };\n    case RHSM_API_QUERY_TYPES.USAGE:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.usageDevelopment'),\n            value: USAGE_TYPES.DEVELOPMENT\n          },\n          {\n            title: translate('curiosity-toolbar.usageDisaster'),\n            value: USAGE_TYPES.DISASTER\n          },\n          {\n            title: translate('curiosity-toolbar.usageProduction'),\n            value: USAGE_TYPES.PRODUCTION\n          },\n          {\n            title: translate('curiosity-toolbar.usageUnspecified'),\n            value: USAGE_TYPES.UNSPECIFIED\n          }\n        ]\n      };\n    default:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.SLA }),\n            value: RHSM_API_QUERY_TYPES.SLA\n          },\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.USAGE }),\n            value: RHSM_API_QUERY_TYPES.USAGE\n          }\n        ]\n      };\n  }\n};\n\nconst toolbarTypes = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarTypes as default, toolbarTypes, getOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar as PfToolbar,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup\n} from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons';\nimport { Select } from '../form/select';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onClearFilter\n * @fires onCategorySelect\n * @fires onSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear all filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    const { hardFilterReset } = this.props;\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: new Set() } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [RHSM_API_QUERY_TYPES.SLA]: null,\n            [RHSM_API_QUERY_TYPES.USAGE]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: null } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Clear individual filter state.\n   *\n   * @event onClearFilter\n   * @param {string} categoryTitle\n   */\n  onClearFilter = categoryTitle => {\n    const { activeFilters, currentFilter, hardFilterReset } = this.props;\n\n    const categoryOptions = toolbarTypes.getOptions();\n    const { value: categoryValue } = categoryOptions.options.find(({ title }) => title === categoryTitle) || {};\n\n    if (!categoryValue) {\n      return;\n    }\n\n    const updatedActiveFilters = new Set(activeFilters);\n    updatedActiveFilters.delete(categoryValue);\n\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: updatedActiveFilters } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [categoryValue]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      const updatedCurrentFilter = (updatedActiveFilters.size > 0 && currentFilter) || null;\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: updatedCurrentFilter } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Set Category selection.\n   *\n   * @event onCategorySelect\n   * @param {object} event\n   */\n  onCategorySelect = event => {\n    const { value } = event;\n    this.setDispatch({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: value } });\n  };\n\n  /**\n   * Set select filter selection for dispatch.\n   *\n   * @param {object} params\n   * @param {object} params.event\n   * @param {string} params.field\n   */\n  onSelect = ({ event, field }) => {\n    const { activeFilters } = this.props;\n    const { value } = event;\n    const updatedActiveFilters = new Set(activeFilters).add(field);\n\n    this.setDispatch(\n      [\n        {\n          type: reduxTypes.toolbar.SET_ACTIVE_FILTERS,\n          data: { activeFilters: updatedActiveFilters }\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_TYPES[field],\n          data: { [field]: value }\n        }\n      ],\n      true\n    );\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {Array|object} actions\n   * @param {boolean} resetPage\n   */\n  setDispatch(actions, resetPage = false) {\n    const { viewId } = this.props;\n    const updatedActions = ((Array.isArray(actions) && actions) || [actions]).map(({ type, data }) => ({\n      type,\n      viewId,\n      ...data\n    }));\n\n    if (resetPage) {\n      updatedActions.push({\n        type: reduxTypes.query.SET_QUERY_CLEAR_ALL_OFFSET\n      });\n    }\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Available, and selected select filter options.\n   *\n   * @param {string} field\n   * @returns {{optionsSelected: Array, options: Array }}\n   */\n  setSelectFilter(field) {\n    const { query } = this.props;\n    const options = toolbarTypes.getOptions(field);\n    const currentFilter = this.getCurrentFilter();\n    let filter;\n\n    if (field) {\n      filter = typeof query?.[field] === 'string' && options.options.find(({ value }) => value === query?.[field]);\n    } else {\n      filter = options.options.find(({ value }) => value === currentFilter);\n    }\n\n    const optionsSelected = (filter?.title && [filter.title]) || (options?.selected && [options.selected]) || [];\n\n    return { options, optionsSelected };\n  }\n\n  /**\n   * Return the currentFilter, fallback to selected\n   *\n   * @returns {string|undefined}\n   */\n  getCurrentFilter() {\n    const { currentFilter, filterOptions } = this.props;\n\n    return (\n      currentFilter ||\n      filterOptions.find(({ selected }) => selected === true)?.id ||\n      (filterOptions.length === 1 && filterOptions[0]?.id)\n    );\n  }\n\n  /**\n   * A select filter node.\n   *\n   * @param {object} params\n   * @param {string} params.id\n   * @returns {object}\n   */\n  renderSelectFilter({ id: field }) {\n    const { t } = this.props;\n    const { options, optionsSelected } = this.setSelectFilter(field);\n    const currentFilter = this.getCurrentFilter();\n\n    return (\n      <ToolbarFilter\n        key={field}\n        chips={optionsSelected}\n        deleteChip={this.onClearFilter}\n        categoryName={t('curiosity-toolbar.category', { context: field })}\n        showToolbarItem={currentFilter === field}\n      >\n        <Select\n          aria-label={t('curiosity-toolbar.category', { context: field })}\n          onSelect={event => this.onSelect({ event, field })}\n          selectedOptions={optionsSelected}\n          placeholder={t('curiosity-toolbar.placeholder', { context: field })}\n          options={options.options}\n        />\n      </ToolbarFilter>\n    );\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { filterOptions, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options: categoryOptions, optionsSelected: categoryOptionsSelected } = this.setSelectFilter();\n\n    return (\n      <PfToolbar\n        id=\"curiosity-toolbar\"\n        className=\"curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"sm\"\n        clearAllFilters={this.onClear}\n      >\n        <ToolbarContent>\n          <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"md\">\n            <ToolbarGroup variant=\"filter-group\">\n              {filterOptions.length !== 1 && (\n                <ToolbarItem>\n                  <Select\n                    aria-label={t('curiosity-toolbar.category')}\n                    onSelect={this.onCategorySelect}\n                    selectedOptions={categoryOptionsSelected}\n                    placeholder={t('curiosity-toolbar.placeholder')}\n                    options={categoryOptions.options}\n                    toggleIcon={<FilterIcon />}\n                  />\n                </ToolbarItem>\n              )}\n              {filterOptions.map(({ id, selected }) => this.renderSelectFilter({ id, selected }))}\n            </ToolbarGroup>\n          </ToolbarToggleGroup>\n        </ToolbarContent>\n      </PfToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, Array}}\n */\nToolbar.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.SLA]: PropTypes.string,\n    [RHSM_API_QUERY_TYPES.USAGE]: PropTypes.string\n  }),\n  activeFilters: PropTypes.instanceOf(Set),\n  currentFilter: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n  filterOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      filterType: PropTypes.oneOf(['select']),\n      id: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n      selected: PropTypes.bool\n    })\n  ),\n  hardFilterReset: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, filterOptions: Array}}\n */\nToolbar.defaultProps = {\n  query: {},\n  activeFilters: new Set(),\n  currentFilter: null,\n  filterOptions: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA,\n      filterType: 'select'\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      filterType: 'select',\n      selected: true\n    }\n  ],\n  hardFilterReset: false,\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: translate,\n  viewId: 'toolbar'\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.toolbar\n * @param {object} props\n * @param {string} props.viewId\n * @returns {object}\n */\nconst mapStateToProps = ({ toolbar }, { viewId }) => ({ ...toolbar.filters?.[viewId] });\n\nconst ConnectedToolbar = connect(mapStateToProps)(Toolbar);\n\nexport { ConnectedToolbar as default, ConnectedToolbar, Toolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * A wrapper for Patternfly Select. Provides additional event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @param expanded\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected =\n          activateOptions.includes(convertedOption.value) || activateOptions.includes(convertedOption.title);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, isToggleText, placeholder, toggleIcon, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select${(!isToggleText && '__no-toggle-text') || ''} ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isOpen={isExpanded}\n        toggleIcon={toggleIcon}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(option.title)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{isToggleText: boolean, toggleIcon: Node|Function, name: string, options: object,\n *     selectedOptions: (number|string|Array), variant: (object|string), className: string,\n *     id: string, isDisabled: boolean, placeholder: string, ariaLabel: string,\n *     onSelect: Function}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.string,\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{isToggleText: boolean, toggleIcon: null, name: null, options: Array, selectedOptions: null,\n *     variant: SelectVariant.single, className: string, id: string, isDisabled: boolean,\n *     placeholder: string, ariaLabel: string, onSelect: Function}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  isToggleText: true,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  selectedOptions: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Return a set of options for display in a select/dropdown list.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getGranularityOptionsType = optionsType => {\n  if (optionsType === 'default') {\n    return {\n      selected: GRANULARITY_TYPES.DAILY,\n      options: [\n        { title: translate('curiosity-graph.dropdownDaily'), value: GRANULARITY_TYPES.DAILY, selected: true },\n        { title: translate('curiosity-graph.dropdownWeekly'), value: GRANULARITY_TYPES.WEEKLY },\n        { title: translate('curiosity-graph.dropdownMonthly'), value: GRANULARITY_TYPES.MONTHLY },\n        { title: translate('curiosity-graph.dropdownQuarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst graphCardTypes = {\n  getGranularityOptions: getGranularityOptionsType\n};\n\nexport { graphCardTypes as default, graphCardTypes, getGranularityOptionsType };\n"],"sourceRoot":""}
{"version":3,"sources":["../node_modules/@patternfly/react-tokens/dist/esm/chart_color_cyan_100.js","../node_modules/@patternfly/react-tokens/dist/esm/chart_color_cyan_300.js","../node_modules/@patternfly/react-tokens/dist/esm/chart_color_purple_100.js","../node_modules/@patternfly/react-tokens/dist/esm/chart_color_purple_300.js","components/rhelView/rhelView.js"],"names":["chart_color_cyan_100","chart_color_cyan_300","chart_color_purple_100","chart_color_purple_300","RhelView","this","props","query","initialFilters","initialToolbarFilters","location","routeDetail","t","viewId","isC3","parsedSearch","c3","appName","helpers","UI_DISPLAY_NAME","context","filterOptions","key","pathParameter","filterGraphData","productId","cardTitle","productShortLabel","React","Component","defaultProps","rhsmApiTypes","RHSM_API_QUERY_GRANULARITY","GRANULARITY_TYPES","DAILY","id","fill","chartColorBlueLight","value","stroke","chartColorBlueDark","color","chartColorCyanLight","chartColorCyanDark","chartColorPurpleLight","chartColorPurpleDark","RHSM_API_QUERY_SLA","RHSM_API_QUERY_USAGE","selected","translate","makeMapStateToProps","reduxSelectors","view","makeView","ConnectedRhelView","connect"],"mappings":"wVAAaA,EAAuB,CAClC,KAAQ,4BACR,MAAS,UACT,IAAO,kCCHIC,EAAuB,CAClC,KAAQ,4BACR,MAAS,UACT,IAAO,kCCHIC,EAAyB,CACpC,KAAQ,8BACR,MAAS,UACT,IAAO,oCCHIC,EAAyB,CACpC,KAAQ,8BACR,MAAS,UACT,IAAO,oC,oECqBHC,E,oNAQM,IAAD,IACoFC,KAAKC,MAAxFC,EADD,EACCA,MAAOC,EADR,EACQA,eAAgBC,EADxB,EACwBA,sBAAuBC,EAD/C,EAC+CA,SAAUC,EADzD,EACyDA,YAAaC,EADtE,EACsEA,EAAGC,EADzE,EACyEA,OAC1EC,EAAsC,MAAvB,OAARJ,QAAQ,IAARA,GAAA,UAAAA,EAAUK,oBAAV,eAAwBC,IAErC,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYH,OAAQA,GACjBD,EAAE,uBAAwB,CAAEK,QAASC,IAAQC,gBAAiBC,QAASP,KAE1E,kBAAC,IAAD,KACE,kBAAC,IAAD,CAASQ,cAAeZ,EAAuBF,MAAOA,EAAOM,OAAQA,KAEvE,kBAAC,IAAD,KACIC,GACA,kBAAC,IAAD,CACEQ,IAAKX,EAAYY,cACjBC,gBAAiBhB,EACjBD,MAAOA,EACPkB,UAAWd,EAAYY,cACvBV,OAAQA,EACRa,UAAWd,EAAE,kCACbe,kBAAmBd,KAGrB,kBAAC,IAAD,CACES,IAAKX,EAAYY,cACjBC,gBAAiBhB,EACjBD,MAAOA,EACPkB,UAAWd,EAAYY,cACvBV,OAAQA,EACRa,UAAWd,EAAE,kCACbe,kBAAmBd,U,GAvCVe,IAAMC,WA+E7BzB,EAAS0B,aAAe,CACtBvB,MAAM,eACHwB,IAAaC,2BAA6BC,IAAkBC,OAE/D1B,eAAgB,CACd,CACE2B,GAAI,kBACJC,KAAMC,IAAoBC,MAC1BC,OAAQC,IAAmBF,MAC3BG,MAAOD,IAAmBF,OAE5B,CACEH,GAAI,oBACJC,KAAMM,EAAoBJ,MAC1BC,OAAQI,EAAmBL,MAC3BG,MAAOE,EAAmBL,OAE5B,CACEH,GAAI,eACJC,KAAMQ,EAAsBN,MAC5BC,OAAQM,EAAqBP,MAC7BG,MAAOI,EAAqBP,OAE9B,CAAEH,GAAI,qBAER1B,sBAAuB,CACrB,CACE0B,GAAIJ,IAAae,oBAEnB,CACEX,GAAIJ,IAAagB,qBACjBC,UAAU,IAGdpC,EAAGqC,IACHpC,OAAQ,QAQV,IAAMqC,EAAsBC,IAAeC,KAAKC,SAASjD,EAAS0B,cAE5DwB,EAAoBC,YAAQL,EAARK,CAA6BnD","file":"static/js/2.8d7c5eb7.chunk.js","sourcesContent":["export const chart_color_cyan_100 = {\n  \"name\": \"--pf-chart-color-cyan-100\",\n  \"value\": \"#a2d9d9\",\n  \"var\": \"var(--pf-chart-color-cyan-100)\"\n};\nexport default chart_color_cyan_100;","export const chart_color_cyan_300 = {\n  \"name\": \"--pf-chart-color-cyan-300\",\n  \"value\": \"#009596\",\n  \"var\": \"var(--pf-chart-color-cyan-300)\"\n};\nexport default chart_color_cyan_300;","export const chart_color_purple_100 = {\n  \"name\": \"--pf-chart-color-purple-100\",\n  \"value\": \"#b2b0ea\",\n  \"var\": \"var(--pf-chart-color-purple-100)\"\n};\nexport default chart_color_purple_100;","export const chart_color_purple_300 = {\n  \"name\": \"--pf-chart-color-purple-300\",\n  \"value\": \"#5752d1\",\n  \"var\": \"var(--pf-chart-color-purple-300)\"\n};\nexport default chart_color_purple_300;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { PageLayout, PageHeader, PageSection, PageToolbar } from '../pageLayout/pageLayout';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { connect, reduxSelectors } from '../../redux';\nimport GraphCard from '../graphCard/graphCard';\nimport C3GraphCard from '../c3GraphCard/c3GraphCard';\nimport Toolbar from '../toolbar/toolbar';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A Red Hat Enterprise Linux encompassing view, and system architectures.\n *\n * @augments React.Component\n */\nclass RhelView extends React.Component {\n  componentDidMount() {}\n\n  /**\n   * Render a RHEL view.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { query, initialFilters, initialToolbarFilters, location, routeDetail, t, viewId } = this.props;\n    const isC3 = location?.parsedSearch?.c3 === '';\n\n    return (\n      <PageLayout>\n        <PageHeader viewId={viewId}>\n          {t(`curiosity-view.title`, { appName: helpers.UI_DISPLAY_NAME, context: viewId })}\n        </PageHeader>\n        <PageToolbar>\n          <Toolbar filterOptions={initialToolbarFilters} query={query} viewId={viewId} />\n        </PageToolbar>\n        <PageSection>\n          {(isC3 && (\n            <C3GraphCard\n              key={routeDetail.pathParameter}\n              filterGraphData={initialFilters}\n              query={query}\n              productId={routeDetail.pathParameter}\n              viewId={viewId}\n              cardTitle={t('curiosity-graph.socketsHeading')}\n              productShortLabel={viewId}\n            />\n          )) || (\n            <GraphCard\n              key={routeDetail.pathParameter}\n              filterGraphData={initialFilters}\n              query={query}\n              productId={routeDetail.pathParameter}\n              viewId={viewId}\n              cardTitle={t('curiosity-graph.socketsHeading')}\n              productShortLabel={viewId}\n            />\n          )}\n        </PageSection>\n      </PageLayout>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{initialFilters: Array, initialToolbarFilters: Array, viewId: string, t: Function, query: object,\n *     routeDetail: object, location: object}}\n */\nRhelView.propTypes = {\n  query: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)])\n  }),\n  initialFilters: PropTypes.array,\n  initialToolbarFilters: PropTypes.array,\n  location: PropTypes.shape({\n    parsedSearch: PropTypes.objectOf(PropTypes.string)\n  }).isRequired,\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    pathId: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    })\n  }).isRequired,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{initialFilters: Array, initialToolbarFilters: Array, viewId: string, t: translate, query: object}}\n */\nRhelView.defaultProps = {\n  query: {\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  initialFilters: [\n    {\n      id: 'physicalSockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'hypervisorSockets',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value\n    },\n    {\n      id: 'cloudSockets',\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value\n    },\n    { id: 'thresholdSockets' }\n  ],\n  initialToolbarFilters: [\n    {\n      id: rhsmApiTypes.RHSM_API_QUERY_SLA\n    },\n    {\n      id: rhsmApiTypes.RHSM_API_QUERY_USAGE,\n      selected: true\n    }\n  ],\n  t: translate,\n  viewId: 'RHEL'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.view.makeView(RhelView.defaultProps);\n\nconst ConnectedRhelView = connect(makeMapStateToProps)(RhelView);\n\nexport { ConnectedRhelView as default, ConnectedRhelView, RhelView };\n"],"sourceRoot":""}
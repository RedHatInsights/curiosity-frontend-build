{"version":3,"sources":["components/graphCard/graphCardHelpers.js"],"names":["getChartXAxisLabelIncrement","granularity","GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","getTooltipDate","date","momentDate","moment","utc","format","dateHelpers","timestampQuarterFormats","yearShort","add","timestampMonthFormats","yearLong","timestampDayFormats","short","long","xAxisTickFormat","tick","previousDate","formattedDate","isNewYear","Number","parseInt","year","replace","yAxisTickFormatFallback","abs","Math","updatedTick","updatedAbbr","pow","yAxisTickFormat","locale","helpers","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","length","graphCardHelpers"],"mappings":"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","file":"static/js/41.33c6eb49.chunk.js","sourcesContent":["import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n"],"sourceRoot":""}
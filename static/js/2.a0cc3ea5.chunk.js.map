{"version":3,"sources":["../node_modules/@patternfly/react-tokens/dist/esm/chart_color_cyan_100.js","../node_modules/@patternfly/react-tokens/dist/esm/chart_color_cyan_300.js","../node_modules/@patternfly/react-tokens/dist/esm/chart_color_purple_100.js","../node_modules/@patternfly/react-tokens/dist/esm/chart_color_purple_300.js","components/rhelView/rhelView.js"],"names":["chart_color_cyan_100","chart_color_cyan_300","chart_color_purple_100","chart_color_purple_300","RhelView","this","props","initialGraphFilters","initialGuestsFilters","initialInventoryFilters","initialToolbarFilters","location","productLabel","query","routeDetail","t","viewId","isC3","parsedSearch","c3","apiQueries","parseRhsmQuery","initialGraphQuery","graphQuery","initialInventoryQuery","inventoryQuery","toolbarQuery","appName","helpers","UI_DISPLAY_NAME","context","filterOptions","productId","pathParameter","key","filterGraphData","cardTitle","productShortLabel","filterGuestsData","filterInventoryData","React","Component","defaultProps","RHSM_API_QUERY_TYPES","DIRECTION","SORT_DIRECTION_TYPES","ASCENDING","GRANULARITY","GRANULARITY_TYPES","DAILY","LIMIT","OFFSET","SORT","SORT_TYPES","DATE","id","fill","chartColorBlueLight","value","stroke","chartColorBlueDark","color","chartColorCyanLight","chartColorCyanDark","chartColorPurpleLight","chartColorPurpleDark","cell","obj","displayName","inventoryId","Button","isInline","component","variant","target","href","isSortable","hardwareType","numberOfGuests","Fragment","translate","Badge","isRead","SLA","USAGE","selected","makeMapStateToProps","reduxSelectors","view","makeView","ConnectedRhelView","connect"],"mappings":"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","file":"static/js/2.a0cc3ea5.chunk.js","sourcesContent":["export const chart_color_cyan_100 = {\n  \"name\": \"--pf-chart-color-cyan-100\",\n  \"value\": \"#a2d9d9\",\n  \"var\": \"var(--pf-chart-color-cyan-100)\"\n};\nexport default chart_color_cyan_100;","export const chart_color_cyan_300 = {\n  \"name\": \"--pf-chart-color-cyan-300\",\n  \"value\": \"#009596\",\n  \"var\": \"var(--pf-chart-color-cyan-300)\"\n};\nexport default chart_color_cyan_300;","export const chart_color_purple_100 = {\n  \"name\": \"--pf-chart-color-purple-100\",\n  \"value\": \"#b2b0ea\",\n  \"var\": \"var(--pf-chart-color-purple-100)\"\n};\nexport default chart_color_purple_100;","export const chart_color_purple_300 = {\n  \"name\": \"--pf-chart-color-purple-300\",\n  \"value\": \"#5752d1\",\n  \"var\": \"var(--pf-chart-color-purple-300)\"\n};\nexport default chart_color_purple_300;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Badge, Button } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection, PageToolbar } from '../pageLayout/pageLayout';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { apiQueries, connect, reduxSelectors } from '../../redux';\nimport GraphCard from '../graphCard/graphCard';\nimport C3GraphCard from '../c3GraphCard/c3GraphCard';\nimport Toolbar from '../toolbar/toolbar';\nimport InventoryList from '../inventoryList/inventoryList';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A Red Hat Enterprise Linux encompassing view, and system architectures.\n *\n * @augments React.Component\n */\nclass RhelView extends React.Component {\n  componentDidMount() {}\n\n  /**\n   * Render a RHEL view.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      initialGraphFilters,\n      initialGuestsFilters,\n      initialInventoryFilters,\n      initialToolbarFilters,\n      location,\n      productLabel,\n      query,\n      routeDetail,\n      t,\n      viewId\n    } = this.props;\n    const isC3 = location?.parsedSearch?.c3 === '';\n    const {\n      graphQuery: initialGraphQuery,\n      inventoryQuery: initialInventoryQuery,\n      toolbarQuery\n    } = apiQueries.parseRhsmQuery(query);\n\n    return (\n      <PageLayout>\n        <PageHeader productLabel={productLabel}>\n          {t(`curiosity-view.title`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel })}\n        </PageHeader>\n        <PageToolbar>\n          <Toolbar\n            filterOptions={initialToolbarFilters}\n            productId={routeDetail.pathParameter}\n            query={toolbarQuery}\n            viewId={viewId}\n          />\n        </PageToolbar>\n        <PageSection>\n          {(isC3 && (\n            <C3GraphCard\n              key={routeDetail.pathParameter}\n              filterGraphData={initialGraphFilters}\n              query={initialGraphQuery}\n              productId={routeDetail.pathParameter}\n              viewId={viewId}\n              cardTitle={t('curiosity-graph.socketsHeading')}\n              productShortLabel={productLabel}\n            />\n          )) || (\n            <GraphCard\n              key={routeDetail.pathParameter}\n              filterGraphData={initialGraphFilters}\n              query={initialGraphQuery}\n              productId={routeDetail.pathParameter}\n              viewId={viewId}\n              cardTitle={t('curiosity-graph.socketsHeading')}\n              productLabel={productLabel}\n            />\n          )}\n        </PageSection>\n        <PageSection>\n          <InventoryList\n            key={routeDetail.pathParameter}\n            filterGuestsData={initialGuestsFilters}\n            filterInventoryData={initialInventoryFilters}\n            query={initialInventoryQuery}\n            productId={routeDetail.pathParameter}\n            viewId={viewId}\n            cardTitle={t('curiosity-inventory.cardHeading')}\n          />\n        </PageSection>\n      </PageLayout>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productLabel: string, initialToolbarFilters: Array, viewId: string, t: Function, query: object,\n *     initialGraphFilters: Array, routeDetail: object, location: object, initialGuestsFilters: Array,\n *     initialInventoryFilters: Array}}\n */\nRhelView.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)])\n  }),\n  initialGraphFilters: PropTypes.array,\n  initialGuestsFilters: PropTypes.array,\n  initialInventoryFilters: PropTypes.array,\n  initialToolbarFilters: PropTypes.array,\n  location: PropTypes.shape({\n    parsedSearch: PropTypes.objectOf(PropTypes.string)\n  }).isRequired,\n  productLabel: PropTypes.string,\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    pathId: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    })\n  }).isRequired,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{productLabel: string, initialToolbarFilters: Array, viewId: string, t: translate, query: object,\n *     initialGraphFilters: Array, initialGuestsFilters: Array, initialInventoryFilters: Array}}\n */\nRhelView.defaultProps = {\n  query: {\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.ASCENDING,\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 10,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0,\n    [RHSM_API_QUERY_TYPES.SORT]: SORT_TYPES.DATE\n  },\n  initialGraphFilters: [\n    {\n      id: 'physicalSockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'hypervisorSockets',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value\n    },\n    {\n      id: 'cloudSockets',\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value\n    },\n    { id: 'thresholdSockets' }\n  ],\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      cell: obj => {\n        const { displayName, inventoryId } = obj;\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            target=\"_blank\"\n            href={`/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId'\n    },\n    {\n      id: 'lastSeen'\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: obj => {\n        const { displayName, inventoryId } = obj;\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            target=\"_blank\"\n            href={`/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'hardwareType',\n      cell: obj => {\n        const { hardwareType, numberOfGuests } = obj;\n        return (\n          <React.Fragment>\n            {translate('curiosity-inventory.hardwareType', { context: hardwareType.value })}{' '}\n            {(numberOfGuests.value && <Badge isRead>{numberOfGuests.value}</Badge>) || ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'sockets',\n      isSortable: true\n    },\n    {\n      id: 'lastSeen',\n      isSortable: true\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      selected: true\n    }\n  ],\n  productLabel: 'RHEL',\n  t: translate,\n  viewId: 'viewRHEL'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.view.makeView(RhelView.defaultProps);\n\nconst ConnectedRhelView = connect(makeMapStateToProps)(RhelView);\n\nexport { ConnectedRhelView as default, ConnectedRhelView, RhelView };\n"],"sourceRoot":""}
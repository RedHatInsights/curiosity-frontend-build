{"version":3,"sources":["images/subscriptions.svg","common/helpers.js","components/pageLayout/pageHeader.js","components/pageLayout/pageSection.js","components/pageLayout/pageToolbar.js","components/pageLayout/pageLayout.js","types/rhsmApiTypes.js","common/dateHelpers.js","redux/common/reduxHelpers.js","redux/middleware/index.js","redux/middleware/statusMiddleware.js","redux/types/appTypes.js","redux/types/platformTypes.js","redux/types/rhsmTypes.js","redux/types/userTypes.js","redux/types/index.js","redux/reducers/graphReducer.js","redux/reducers/viewReducer.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store.js","services/platformServices.js","redux/actions/platformActions.js","services/config.js","services/rhsmServices.js","redux/actions/rhsmActions.js","services/userServices.js","redux/actions/index.js","redux/actions/userActions.js","redux/selectors/graphCardSelectors.js","redux/selectors/viewSelectors.js","redux/selectors/index.js","redux/index.js","components/select/select.js","components/i18n/i18n.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardTypes.js","components/chartArea/chartArea.js","components/graphCard/graphCard.js","components/toolbar/toolbarTypes.js","components/toolbar/toolbar.js","components/openshiftView/openshiftView.js","components/rhelView/rhelView.js","components/tourView/tourView.js","components/router/routerTypes.js","components/router/routerHelpers.js","components/router/redirect.js","components/router/router.js","components/messageView/messageView.js","components/authentication/authentication.js","components/app.js","index.js"],"names":["module","exports","helpers","generateId","prefix","Math","ceil","random","isPromise","obj","Object","prototype","toString","call","noop","Function","noopPromise","Promise","resolve","noopTranslate","key","value","DEV_MODE","process","PROD_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_TABLE","UI_DISABLED_TOOLBAR","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LOGGER_ID","UI_NAME","UI_PATH","UI_VERSION","window","PageHeader","children","title","defaultProps","PageSection","props","Section","PageToolbar","PageLayout","Fragment","React","Children","toArray","filter","child","isValidElement","type","className","RHSM_API_PATH_ID_TYPES","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","OPENSHIFT","RHSM_API_QUERY_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_QUERY_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","rhsmApiTypes","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","CLOUD_CORES","CLOUD_INSTANCES","CLOUD_SOCKETS","CORES","DATE","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_CAPACITY_META","RHSM_API_RESPONSE_CAPACITY_META_TYPES","COUNT","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","HAS_DATA","RHSM_API_RESPONSE_PRODUCTS_META","RHSM_API_RESPONSE_PRODUCTS_META_TYPES","RHSM_API_QUERY_GRANULARITY","RHSM_API_QUERY_LIMIT","RHSM_API_QUERY_OFFSET","RHSM_API_QUERY_SLA","RHSM_API_QUERY_START_DATE","RHSM_API_QUERY_END_DATE","getCurrentDate","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","date","subtract","measurement","startDate","moment","utc","startOf","toDate","endDate","endOf","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","getSingleResponseFromResultArray","results","updatedResults","payload","Array","isArray","firstErrorResponse","find","_get","status","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","message","dataResponse","data","formattedStatus","trim","_isPlainObject","JSON","stringify","getDateFromResults","getStatusFromResults","setStateProp","prop","options","state","initialState","reset","singlePromiseDataResponseFromArray","map","reduxHelpers","schemas","initialValue","schema","generated","values","forEach","types","action","expandedTypes","val","subVal","push","ref","RegExp","test","whichType","expandMetaTypes","meta","updatedMeta","id","query","metaData","metaId","metaQuery","baseState","error","errorMessage","fulfilled","pending","setId","errorResponse","cancelled","errorStatus","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","config","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","store","dispatch","next","httpStatus","payloadConfig","range","floor","statusMiddleware","promiseMiddleware","notificationsMiddleware","appTypes","STATUS_4XX","STATUS_5XX","platformTypes","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","rhsmTypes","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_RHSM","GET_GRAPH_REPORT_CAPACITY_RHSM","SET_GRAPH_GRANULARITY_RHSM","SET_GRAPH_SLA_RHSM","userTypes","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","reportCapacity","graphReducer","graphQuery","viewReducer","viewId","session","authorized","locale","userReducer","reducers","notifications","graph","view","user","reduxReducers","combineReducers","createStore","applyMiddleware","getUser","a","insights","chrome","auth","Error","platformServices","initializeChrome","init","onNavigation","callback","on","e","setAppName","name","identifyApp","reject","setNavigation","location","navigation","item","active","pathname","split","slice","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","serviceConfig","passedConfig","headers","timeout","cancelTokens","serviceCall","updatedConfig","cancelTokensId","url","cancel","CancelToken","source","cancelToken","token","axios","rhsmServices","params","rhsmActions","getGraphReportsCapacity","all","getLocaleFromCookie","Cookies","get","replace","LocaleCode","getLanguageName","userServices","authorizeUser","userData","keys","length","emulatedErrorResponse","getLocale","defaultLocale","logoutUser","actions","platform","rhsm","reduxActions","graphCardCache","dataId","graphCardSelector","createSelector","productId","response","responseData","updatedResponseData","graphData","responseMetaQuery","cachedGranularity","undefined","assign","_isEqual","report","capacity","reportData","capacityData","graphDataKey","tallySchema","capacitySchema","customCapacityValue","x","y","index","generateGraphData","graphDataObj","keyPrefix","customValue","graphDataObjKey","generatedY","casedGraphDataObjKey","_camelCase","Number","parseInt","updatedItem","graphCardSelectors","graphCard","makeGraphCard","viewSelector","createSelectorCreator","defaultMemoize","createDeepEqualSelector","viewGraph","reduxSelectors","makeView","connectTranslate","mapStateToProps","mapDispatchToProps","component","connect","withTranslation","Select","isExpanded","selected","onSelect","event","titleSelection","variant","updatedOptions","optionsIndex","findIndex","option","SelectVariant","single","updateSelected","opt","setState","mockUpdatedOptions","_cloneDeep","mockTarget","selectedIndex","checkbox","checked","mockEvent","target","currentTarget","persist","onToggle","expanded","this","formatOptions","prevProps","selectedOptions","activateOptions","convertedOption","text","textContent","label","includes","ariaLabel","isDisabled","placeholder","pfSelectOptions","aria-label","selections","placeholderText","btoa","data-value","data-title","Component","translate","str","i18next","t","I18n","isLoaded","i18nInit","fallbackLng","loadPath","use","XHR","initReactI18next","backend","lng","debug","ns","defaultNS","react","useSuspense","getTooltipDate","formattedDateTooltip","momentDate","format","graphCardHelpers","getChartXAxisLabelIncrement","getTooltips","itemsByKey","product","dateString","thresholdString","dataFacets","join","xAxisTickFormat","tick","previousDate","formattedDate","isNewYear","year","yAxisTickFormat","numbro","average","mantissa","optionalMantissa","graphCardTypes","optionsType","ChartArea","chartWidth","containerRef","createRef","onResizeContainer","containerElement","current","clientWidth","addEventListener","removeEventListener","dataSets","tooltips","updatedDataSets","items","i","_tooltip","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","floored","pow","log10","maxY","chartDomain","legendData","legendLabel","legendDataSettings","symbol","legendSymbolType","isThreshold","themeColor","fill","stroke","legendOrientation","legendPosition","legendComponent","ChartLegend","borderPadding","top","stacked","setDataSets","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","style","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","chartLegendProps","getChartLegend","containerComponent","getContainerComponent","chartProps","Chart","duration","width","ChartAxis","renderChart","ChartStack","VictoryVoronoiCursorContainer","createContainer","containerComponentProps","constrainToVisibleArea","cursorDimension","voronoiDimension","voronoiPadding","mouseFollowTooltips","labelComponent","ChartTooltip","pointerLength","centerOffset","tooltip","flyoutWidth","labels","datum","childName","height","bottom","left","right","GraphCard","onUpdateGraphData","graphGranularity","toISOString","onGranularitySelect","filterGraphData","selectOptionsType","productShortLabel","updatedGranularity","chartAreaProps","filtered","tempFiltered","onLoad","chartColorGreenDark","filteredGraphData","cardTitle","Card","CardHead","CardActions","CardBody","Skeleton","size","SkeletonSize","xs","sm","md","lg","makeMapStateToProps","ConnectedGraphCard","toolbarTypes","SLA_TYPES","Toolbar","onClear","dispatchFilter","onSlaSelect","slaOptions","filterSla","slaOptionsSelected","DataToolbar","collapseListedFiltersBreakpoint","clearAllFilters","DataToolbarContent","DataToolbarGroup","DataToolbarFilter","chips","deleteChip","categoryName","TranslatedToolbar","OpenshiftView","filters","initialFilters","initialOption","routeDetail","routeItem","pathParameter","renderSelect","chartColorBlueLight","chartColorBlueDark","ConnectedOpenshiftView","RhelView","chartColorCyanLight","chartColorCyanDark","chartColorPurpleLight","chartColorPurpleDark","ConnectedRhelView","TourView","EmptyState","EmptyStateVariant","full","src","subscriptionsSvg","alt","appName","aria-hidden","Title","headingLevel","EmptyStateBody","Button","href","EmptyStateSecondaryActions","ConnectedTourView","platformRedirect","path","routes","to","redirect","exact","render","disabled","activateOnError","pathId","default","routerTypes","dynamicBaseName","pathName","pathPrefix","shift","pathSlice","baseName","getErrorRoute","route","getNavigationDetail","navigationItem","returnDefault","defaultItem","getRouteDetail","routerHelpers","getNavRouteDetail","navDetail","Redirect","urlRoute","history","isRedirect","isReplace","forcePath","RoutedRedirect","withRouter","Router","activateOnErrorRoute","redirectRoot","renderRoutes","hasParameters","strict","routeProps","errorRoute","MessageView","icon","EmptyStateIcon","Authentication","removeListeners","appNav","navId","buildNav","listen","BinocularsIcon","BanIcon","ConnectedAuthentication","App","ConnectedApp","connectRouter","basename","document","getElementById"],"mappings":"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","file":"static/js/main.e9f418d3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/subscriptions.0ad5eae0.svg\";","/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n// ToDo: expand to include \"async\" check in scenarios where async/await are utilized.\n/**\n * Check if \"is a Promise\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => Object.prototype.toString.call(obj) === '[object Promise]';\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string} key\n * @param {string} value\n * @returns {string}\n */\nconst noopTranslate = (key, value) => `t(${key}${(value && `, ${value}`) || ''})`;\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\nconst helpers = {\n  generateId,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LOGGER_ID,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION\n};\n\n/**\n * Expose an application specific type.\n * Associated with access on a browser's developer console.\n *\n * @type {{UI_DISABLED_TOOLBAR: boolean, UI_DISPLAY_CONFIG_NAME: string, generateId: function(string): string,\n *     REVIEW_MODE: boolean, UI_LOGGER_ID: string, UI_DISABLED_GRAPH: boolean, UI_DISPLAY_START_NAME: string,\n *     UI_DEPLOY_PATH_PREFIX: string, UI_DISPLAY_NAME: string, noopPromise: Promise<{}>, DEV_MODE: boolean,\n *     TEST_MODE: boolean, noop: Function, isPromise: function((Promise|*)): boolean, UI_PATH: string,\n *     UI_NAME: string, UI_DISABLED: boolean, UI_DISABLED_TABLE: boolean, UI_VERSION: string, PROD_MODE: boolean,\n *     noopTranslate: function(string, string): string}}\n */\nwindow[UI_LOGGER_ID] = { ...helpers };\n\nexport { helpers as default, helpers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PageHeader as RcsPageHeader,\n  PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components/components/PageHeader';\n\n/**\n * Render a platform page header.\n *\n * @returns {Node}\n */\nconst PageHeader = ({ children }) => (\n  <RcsPageHeader>\n    <PageHeaderTitle title={children} />\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageHeader.defaultProps = {};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\n\n/**\n * Render a platform page section.\n *\n * @returns {Node}\n */\nconst PageSection = ({ children, ...props }) => <Section {...props}>{children}</Section>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageSection.defaultProps = {};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @returns {Node}\n */\nconst PageToolbar = ({ children, ...props }) => <Section {...props}>{children}</Section>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageToolbar.defaultProps = {};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @returns {Node}\n */\nconst PageLayout = ({ children }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main className=\"curiosity\">\n      {React.Children.toArray(children).filter(child => child.type !== PageHeader && child.type !== PageToolbar)}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageLayout.defaultProps = {};\n\nexport { PageLayout as default, PageLayout, PageHeader, PageSection, PageToolbar };\n","/**\n * RHSM response Capacity DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\n\n/**\n * RHSM response Capacity DATA types.\n * Schema/map of expected Capacity data response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string,\n *     HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response Capacity META type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_META = 'meta';\n\n/**\n * RHSM response Capacity META types.\n * Schema/map of expected Capacity META response properties.\n *\n * @type {{COUNT: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_META_TYPES = {\n  COUNT: 'count'\n};\n\n/**\n * RHSM response Reporting/Tally DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\n\n/**\n * RHSM response Reporting/Tally DATA types.\n * Schema/map of expected Reporting/Tally DATA response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, HAS_DATA: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM response Reporting/Tally META type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_META = 'meta';\n\n/**\n * RHSM response Reporting/Tally META types.\n * Schema/map of expected Reporting/Tally META response properties.\n *\n * @type {{COUNT: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_META_TYPES = {\n  COUNT: 'count'\n};\n\n/**\n * RHSM product id type values.\n *\n * @type {{RHEL_ARM: string, RHEL_WORKSTATION: string, RHEL_DESKTOP: string, RHEL: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_COMPUTE_NODE: string, RHEL_IBM_POWER: string,\n *     RHEL_X86: string, OPENSHIFT: string}}\n */\nconst RHSM_API_PATH_ID_TYPES = {\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  OPENSHIFT: 'OpenShift Container Platform'\n};\n\n/**\n * RHSM API query/search parameter GRANULARITY type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_GRANULARITY = 'granularity';\n\n/**\n * RHSM API query/search parameter of GRANULARITY type values.\n * Schema/map of expected query/search parameter granularity types.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\n\n/**\n * RHSM API query/search parameter results LIMIT type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_LIMIT = 'limit';\n\n/**\n * RHSM API query/search parameter result set OFFSET type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OFFSET = 'offset';\n\n/**\n * RHSM API query/search parameter SLA type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_SLA = 'sla';\n\n/**\n * RHSM API query/search parameter SLA type values.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_QUERY_SLA_TYPES = {\n  PREMIUM: 'premium',\n  STANDARD: 'standard',\n  SELF: 'self-support',\n  NONE: ''\n};\n\n/**\n * RHSM API query/search parameter START DATE type.\n * Associated with a sequential date prior/before the target date.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_START_DATE = 'beginning';\n\n/**\n * RHSM API query/search parameter END DATE type.\n * Associated with a sequential date on or after the target date. Limited by the current date.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_END_DATE = 'ending';\n\n/**\n * RHSM API types.\n *\n * @type {{RHSM_API_QUERY_END_DATE: string, RHSM_API_QUERY_GRANULARITY: string, RHSM_API_QUERY_START_DATE: string,\n *    RHSM_API_RESPONSE_CAPACITY_DATA: string, RHSM_API_PATH_ID_TYPES: {RHEL_ARM: string, RHEL_WORKSTATION: string,\n *    RHEL_DESKTOP: string, RHEL: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_COMPUTE_NODE: string,\n *    RHEL_IBM_POWER: string, RHEL_X86: string, OPENSHIFT: string}, RHSM_API_QUERY_SLA: string,\n *    RHSM_API_RESPONSE_CAPACITY_META_TYPES: {COUNT: string}, RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string,\n *    SELF: string, NONE: string, STANDARD: string},\n *    RHSM_API_RESPONSE_CAPACITY_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string,\n *    SOCKETS: string, PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, HAS_INFINITE: string,\n *    PHYSICAL_CORES: string}, RHSM_API_QUERY_LIMIT: string, RHSM_API_RESPONSE_CAPACITY_META: string,\n *    RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string,\n *    SOCKETS: string, HAS_DATA: string, PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string,\n *    PHYSICAL_CORES: string}, RHSM_API_RESPONSE_PRODUCTS_META: string,\n *    RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *    RHSM_API_RESPONSE_PRODUCTS_DATA: string, RHSM_API_RESPONSE_PRODUCTS_META_TYPES: {COUNT: string},\n *    RHSM_API_QUERY_OFFSET: string}}\n */\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_SLA,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_SLA,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @property {Date} date Start date, typically the current date.\n * @property {number} subtract Number of granularity type to subtract from the current date.\n * @property {string} measurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement }) => ({\n  startDate: moment\n    .utc(date)\n    .startOf(measurement)\n    .subtract(subtract, measurement)\n    .toDate(),\n  endDate: moment\n    .utc(date)\n    .startOf(measurement)\n    .endOf('days')\n    .toDate()\n});\n\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} initialValue\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults = results.payload || results;\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return firstErrorResponse || firstSuccessResponse;\n  }\n\n  return updatedResults;\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = _get(updatedResults, 'response.status', updatedResults.status);\n  const statusResponse = _get(updatedResults, 'response.statusText', updatedResults.statusText);\n  const messageResponse = _get(updatedResults, 'response.message', updatedResults.message);\n  const dataResponse = _get(updatedResults, 'response.data', updatedResults.data);\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 300 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return _get(updatedResults, 'response.status', updatedResults.status) || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (process.env.REACT_APP_ENV === 'development' && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (process.env.REACT_APP_ENV === 'development' && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults = results.payload || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    delete updatedMeta.data;\n    delete updatedMeta.id;\n    delete updatedMeta.query;\n\n    return {\n      meta: { ...updatedMeta },\n      metaData: meta.data,\n      metaId: meta.id,\n      metaQuery: meta.query\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          errorStatus: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setResponseSchemas,\n  generatedPromiseActionReducer,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { statusMiddleware } from './statusMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  promiseMiddleware,\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              status: httpStatus,\n              config: payloadConfig,\n              range,\n              message\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              status: httpStatus,\n              config: payloadConfig,\n              range,\n              message\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_INIT: string, PLATFORM_SET_NAV: string,\n *     PLATFORM_CLEAR_NOTIFICATIONS: string, PLATFORM_ADD_NOTIFICATION: string,\n *     PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n","const GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_RHSM = 'GET_GRAPH_REPORT_RHSM';\nconst GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst SET_GRAPH_GRANULARITY_RHSM = 'SET_GRAPH_GRANULARITY_RHSM';\nconst SET_GRAPH_SLA_RHSM = 'SET_GRAPH_SLA_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, SET_GRAPH_GRANULARITY_RHSM: string,\n *     GET_GRAPH_CAPACITY_RHSM: string, SET_GRAPH_SLA_RHSM: string,\n *     GET_GRAPH_REPORT_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  SET_GRAPH_GRANULARITY_RHSM,\n  SET_GRAPH_SLA_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  SET_GRAPH_GRANULARITY_RHSM,\n  SET_GRAPH_SLA_RHSM\n};\n","const USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_AUTH: string, USER_LOCALE: string}}\n */\nconst userTypes = { USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport { userTypes as default, userTypes, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n","import { appTypes } from './appTypes';\nimport { platformTypes } from './platformTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  platform: platformTypes,\n  rhsm: rhsmTypes,\n  user: userTypes\n};\n\nexport { reduxTypes as default, reduxTypes, appTypes, platformTypes, rhsmTypes, userTypes };\n","import { rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: object}}\n */\nconst initialState = {\n  reportCapacity: {}\n};\n\n/**\n * Apply generated graph observer/reducer for reportCapacity to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [{ ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM }],\n    state,\n    action\n  );\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_GRANULARITY, RHSM_API_QUERY_SLA } from '../../types/rhsmApiTypes';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphQuery: {}}}\n */\nconst initialState = {\n  graphQuery: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM:\n      return reduxHelpers.setStateProp(\n        'graphQuery',\n        {\n          [action.viewId]: {\n            ...state.graphQuery[action.viewId],\n            [RHSM_API_QUERY_GRANULARITY]: action[RHSM_API_QUERY_GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.rhsm.SET_GRAPH_SLA_RHSM:\n      return reduxHelpers.setStateProp(\n        'graphQuery',\n        {\n          [action.viewId]: {\n            ...state.graphQuery[action.viewId],\n            [RHSM_API_QUERY_SLA]: action[RHSM_API_QUERY_SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { appTypes, userTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{session: {pending: boolean, authorized: boolean, errorMessage: string, fulfilled: boolean,\n *     errorStatus: (string|number), error: boolean, locale: string}}}\n */\nconst initialState = {\n  session: {\n    error: false,\n    errorMessage: null,\n    errorStatus: null,\n    pending: false,\n    fulfilled: false,\n    authorized: false,\n    locale: null\n  }\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.REJECTED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          error: action.error,\n          errorMessage: reduxHelpers.getMessageFromResults(action),\n          errorStatus: reduxHelpers.getStatusFromResults(action),\n          locale: state.session.locale\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.PENDING_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: state.session.locale,\n          pending: true\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          authorized: true,\n          fulfilled: true,\n          locale: state.session.locale\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      if (action.status === 401 || action.status === 403) {\n        return reduxHelpers.setStateProp(\n          'session',\n          {\n            error: true,\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            errorStatus: reduxHelpers.getStatusFromResults(action),\n            locale: state.session.locale\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport viewReducer from './viewReducer';\nimport userReducer from './userReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  view: viewReducer,\n  user: userReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport { reduxReducers as default, reduxReducers, graphReducer, viewReducer, userReducer };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","import { helpers } from '../common';\n\n/**\n * Basic user authentication.\n *\n * @returns {Promise<void>}\n */\nconst getUser = async () => {\n  const { insights } = window;\n  try {\n    return (helpers.DEV_MODE && { test: {} }) || (await insights.chrome.auth.getUser());\n  } catch (e) {\n    throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<void>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n// FixMe: Revert catch to throwing an error. Relaxed for development\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<void>}\n */\nconst setAppName = async (name = null) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.identifyApp(name);\n  } catch (e) {\n    const error = `{ identifyApp } = insights.chrome, ${e.message}`;\n    await Promise.reject(error);\n  }\n};\n\n/**\n * Set platform left hand navigation active item.\n *\n * @param {Array} data\n * @returns {*}\n */\nconst setNavigation = (data = []) => {\n  const { insights, location } = window;\n  try {\n    return insights.chrome.navigation(\n      data.map(item => ({\n        ...item,\n        active: item.id === location.pathname.split('/').slice(-1)[0]\n      }))\n    );\n  } catch (e) {\n    throw new Error(`{ navigation } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = { getUser, initializeChrome, onNavigation, setAppName, setNavigation };\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for handling the left-nav navigation active item.\n *\n * @param {object} data\n * @returns {Function}\n */\nconst setNavigation = data => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_SET_NAV\n  });\n  return platformServices.setNavigation(data);\n};\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import axios, { CancelToken } from 'axios';\nimport { platformServices } from './platformServices';\n\n/**\n * Apply consistent service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {object}\n */\nconst cancelTokens = {};\n\n/**\n * Call platform \"getUser\" auth method, and apply service config.\n *\n * @param {object} config\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n\n  const updatedConfig = { ...config };\n  const cancelTokensId = updatedConfig.url;\n\n  if (updatedConfig.cancel === true) {\n    if (cancelTokens[cancelTokensId]) {\n      cancelTokens[cancelTokensId].cancel('cancelled request');\n    }\n\n    cancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = cancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  return axios(serviceConfig(updatedConfig));\n};\n\nexport { serviceConfig as default, serviceConfig, serviceCall };\n","import { serviceCall } from './config';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *       \"version\": \"0.0.0\",\n *       \"gitDescription\": \"lorem ipsum\",\n *       \"artifact\": \"dolor sit\",\n *       \"name\": \"lorem\",\n *       \"group\": \"ipsum\",\n *       \"gitHash\": \"0000000000000000\"\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @returns {Promise<*>}\n */\nconst getApiVersion = () =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {ForceStatus} 200\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {Enum} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {Enum} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {Object} links\n * @apiSuccess {Object} meta\n * @apiSuccess {Enum} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {Enum} meta.product\n * - RHEL\n * @apiSuccess {Number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2018-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40\n *         },\n *         {\n *           \"date\": \"2019-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-05-26T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-02T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-09T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-16T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-23T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-30T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-01-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-02-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-03-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"hypervisor\": 0,\n *           \"sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-04-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-05-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"hypervisor\": 50,\n *           \"sockets\": 48\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} QUARTERLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-01-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"hypervisor\": 50,\n *           \"sockets\": 48\n *         },\n *         {\n *           \"date\": \"2018-04-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2018-07-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2018-10-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"hypervisor\": 10,\n *           \"sockets\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 4,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"quarterly\"\n *       }\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params,\n    cancel: true\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2018-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {String} detail\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {String} detail\n * @apiErrorExample {text} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params,\n    cancel: true\n  });\n\nconst rhsmServices = { getApiVersion, getGraphCapacity, getGraphReports };\n\nexport { rhsmServices as default, rhsmServices, getApiVersion, getGraphCapacity, getGraphReports };\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsmServices';\n\n/**\n * Get a combined RHSM response from reporting and capacity.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getGraphReportsCapacity = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n    payload: Promise.all([rhsmServices.getGraphReports(id, query), rhsmServices.getGraphCapacity(id, query)]),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActions = { getGraphReportsCapacity };\n\nexport { rhsmActions as default, rhsmActions, getGraphReportsCapacity };\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { getUser } from './platformServices';\n\n/**\n * Apply an emulated API response to the platforms getUser method.\n *\n * @returns {Promise<{data: void, message: string, status: number}>}\n */\nconst authorizeUser = async () => {\n  let message = '{ getUser } = insights.chrome.auth';\n  let userData;\n\n  try {\n    userData = await getUser();\n  } catch (e) {\n    message = e.message;\n  }\n\n  if (_isPlainObject(userData) && Object.keys(userData).length) {\n    return Promise.resolve({ data: userData, message, status: 200 });\n  }\n\n  const emulatedErrorResponse = {\n    ...new Error(message),\n    message,\n    status: 418\n  };\n\n  return Promise.reject(emulatedErrorResponse);\n};\n\n/**\n * Return a platform locale value from a cookie.\n *\n * @private\n * @returns {{value: string, key: string | null}|null}\n */\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\n/**\n * Return platform locale.\n *\n * @returns {Promise<{data: void}>}\n */\nconst getLocale = () => {\n  const defaultLocale = {\n    value: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n    key: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC\n  };\n\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser };\n\nexport { userServices as default, userServices, authorizeUser, getLocale, logoutUser };\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/userServices';\n\n/**\n * Get an emulated API response from the platforms \"getUser\" method.\n *\n * @returns {Function}\n */\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userServices.authorizeUser()\n  });\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userServices.getLocale()\n});\n\nconst userActions = { authorizeUser, getLocale };\n\nexport { userActions as default, userActions, authorizeUser, getLocale };\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _get from 'lodash/get';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{dataId: {string}, data: {object}}}\n */\nconst graphCardCache = { dataId: null, data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst graphResponse = (state, props = {}) => ({\n  ..._get(state, ['graph', 'reportCapacity', props.productId]),\n  ...{\n    viewId: props.viewId,\n    productId: props.productId,\n    graphQuery: props.graphQuery\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{pending: boolean, fulfilled: boolean, errorStatus: (*|number), graphData: object, error: boolean}}\n */\nconst graphCardSelector = createSelector([graphResponse], response => {\n  const { viewId = null, productId = null, graphQuery = {}, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    errorStatus: responseData.errorStatus,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    graphData: {}\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n  delete responseMetaQuery[rhsmApiTypes.RHSM_API_QUERY_START_DATE];\n  delete responseMetaQuery[rhsmApiTypes.RHSM_API_QUERY_END_DATE];\n\n  const cachedGranularity =\n    (viewId && productId && graphCardCache.data[`${viewId}_${productId}_${JSON.stringify(graphQuery)}`]) || undefined;\n\n  Object.assign(updatedResponseData, { ...cachedGranularity });\n\n  if (viewId && graphCardCache.dataId !== viewId) {\n    graphCardCache.dataId = viewId;\n    graphCardCache.data = {};\n  }\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(graphQuery, responseMetaQuery)) {\n    const [report, capacity] = responseData.data;\n    const reportData = _get(report, [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA], []);\n    const capacityData = _get(capacity, [rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA], []);\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment\n        .utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE])\n        .startOf('day')\n        .toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY = Number.parseInt(graphDataObj[graphDataObjKey], 10);\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value } });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    graphCardCache.data[`${viewId}_${productId}_${JSON.stringify(graphQuery)}`] = {\n      ...updatedResponseData\n    };\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, errorStatus: (*|number), graphData: object, error: boolean}}\n */\nconst makeGraphCardSelector = defaultProps => (state, props) => ({\n  ...graphCardSelector(state, props, defaultProps)\n});\n\nconst graphCardSelectors = {\n  graphCard: graphCardSelector,\n  makeGraphCard: makeGraphCardSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, graphCardSelector, makeGraphCardSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _get from 'lodash/get';\nimport _isEqual from 'lodash/isEqual';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @param {object} defaultProps\n * @returns {object}\n */\nconst viewGraphQuery = (state = {}, props, defaultProps = {}) => ({\n  graphQuery: {\n    ...defaultProps.graphQuery,\n    ..._get(state, ['view', 'graphQuery', defaultProps.viewId])\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable API param/query object.\n *\n * @type {{graphQuery: object}}\n */\nconst viewSelector = createDeepEqualSelector([viewGraphQuery], viewGraph => ({\n  graphQuery: { ...viewGraph.graphQuery }\n}));\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{graphQuery: object}}\n */\nconst makeViewSelector = defaultProps => (state, props) => ({\n  ...viewSelector(state, props, defaultProps)\n});\n\nconst viewSelectors = {\n  view: viewSelector,\n  makeView: makeViewSelector\n};\n\nexport { viewSelectors as default, viewSelectors, viewSelector, makeViewSelector };\n","import graphCardSelectors from './graphCardSelectors';\nimport viewSelectors from './viewSelectors';\n\nconst reduxSelectors = {\n  graphCard: graphCardSelectors,\n  view: viewSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\nimport { helpers } from '../common/helpers';\n\nconst connectTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  connect(mapStateToProps, mapDispatchToProps)((!helpers.TEST_MODE && withTranslation()(component)) || component);\n\nconst connectRouterTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connectTranslate(mapStateToProps, mapDispatchToProps)(component));\n\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connect(mapStateToProps, mapDispatchToProps)(component));\n\nexport {\n  connect,\n  connectRouter,\n  connectRouterTranslate,\n  connectTranslate,\n  reduxActions,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  store\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * A wrapper for Patternfly Select. Provides additional event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @param expanded\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected =\n          activateOptions.includes(convertedOption.value) || activateOptions.includes(convertedOption.title);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, placeholder, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isExpanded={isExpanded}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(option.title)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{name: string, options: object, selectedOptions: (number|string|Array), variant: (object|string),\n *     className: string, id: string, isDisabled: boolean, placeholder: string, ariaLabel: string,\n *     onSelect: Function}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  placeholder: PropTypes.string,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{name: null, options: Array, selectedOptions: null, variant: SelectVariant.single,\n *     className: string, id: string, isDisabled: boolean, placeholder: string,\n *     ariaLabel: string, onSelect: Function}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  selectedOptions: null,\n  placeholder: 'Select option',\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, withTranslation } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\nconst translate = (str, placeholder = null) =>\n  (!helpers.TEST_MODE && i18next.t(str, placeholder)) || helpers.noopTranslate(str, placeholder);\n\nconst translateComponent = component => (!helpers.TEST_MODE && withTranslation()(component)) || component;\n\n/**\n * ToDo: reevaluate the \"I18nextProvider\" on package update.\n * Appears to have timing issues, and subsequent firings of the\n * ajax/xhr setup. Reverting it to just a function call that populates behind\n * the scenes appears more predictable.\n */\n/**\n * Load I18n.\n *\n * @augments React.Component\n */\nclass I18n extends React.Component {\n  state = { isLoaded: false };\n\n  componentDidMount() {\n    this.i18nInit();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { locale } = this.props;\n\n    if (locale !== prevProps.locale) {\n      this.i18nInit();\n    }\n  }\n\n  /**\n   * Load i18next.\n   *\n   * @returns {Promise<void>}\n   */\n  i18nInit = async () => {\n    const { fallbackLng, loadPath, locale } = this.props;\n\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: locale,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      // ToDo: eval the need for an isError state ref\n    }\n\n    this.setState({ isLoaded: true });\n  };\n\n  /**\n   * Render children after i18next loads.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { isLoaded } = this.state;\n    const { children } = this.props;\n\n    return (isLoaded && <React.Fragment>{children}</React.Fragment>) || <React.Fragment />;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: Node, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","import moment from 'moment';\nimport numbro from 'numbro';\nimport { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers } from '../../common/dateHelpers';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @property {Date} date\n * @property {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n  let formattedDateTooltip;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDateTooltip = dateHelpers.timestampQuarterFormats.yearLong;\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDateTooltip = dateHelpers.timestampMonthFormats.yearLong;\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDateTooltip = dateHelpers.timestampDayFormats.long;\n      break;\n  }\n\n  return momentDate.format(formattedDateTooltip);\n};\n\n/**\n * ToDo: we have access to the datasets and index which gives us access to the previous date.\n * Consider adding back in the year on tooltip cross year displays\n */\n/**\n * Get tooltips for x axis while displaying y axis values.\n *\n * @param {object} params\n * @property {object} itemsByKey\n * @property {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @property {string} product Apply the product to locale strings\n * @returns {string | *}\n */\nconst getTooltips = ({ itemsByKey, granularity, product = '' }) => {\n  let dateString = '';\n  let thresholdString = '';\n  const dataFacets = [];\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      dateString = `${translate('curiosity-graph.dateLabel')}: ${getTooltipDate({\n        date: itemsByKey[key].date,\n        granularity\n      })}`;\n    }\n\n    if (itemsByKey[key].y) {\n      if (/^threshold/.test(key)) {\n        thresholdString = `${translate(`curiosity-graph.thresholdLabel`)}: ${itemsByKey[key].y}\\n`;\n      } else {\n        dataFacets.push(`${translate(`curiosity-graph.${key}Label`, { product })}: ${itemsByKey[key].y}\\n`);\n      }\n    }\n  });\n\n  return (\n    ((thresholdString || dataFacets.length) && `${thresholdString}${dataFacets.join('')}${dateString}`.trim()) ||\n    translate('curiosity-graph.noDataLabel')\n  );\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @property {Date} date\n * @property {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @property {number|string} tick\n * @property {Date} previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @property {number|string} tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick }) => numbro(tick).format({ average: true, mantissa: 1, optionalMantissa: true });\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  getTooltips,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  getTooltips,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Return a set of options for display in a select/dropdown list.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getGranularityOptionsType = optionsType => {\n  if (optionsType === 'default') {\n    return {\n      selected: GRANULARITY_TYPES.DAILY,\n      options: [\n        { title: translate('curiosity-graph.dropdownDaily'), value: GRANULARITY_TYPES.DAILY, selected: true },\n        { title: translate('curiosity-graph.dropdownWeekly'), value: GRANULARITY_TYPES.WEEKLY },\n        { title: translate('curiosity-graph.dropdownMonthly'), value: GRANULARITY_TYPES.MONTHLY },\n        { title: translate('curiosity-graph.dropdownQuarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst graphCardTypes = {\n  getGranularityOptions: getGranularityOptionsType\n};\n\nexport { graphCardTypes as default, graphCardTypes, getGranularityOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer, VictoryPortal } from 'victory';\nimport {\n  Chart,\n  ChartAxis,\n  ChartLegend,\n  ChartStack,\n  ChartThreshold,\n  ChartTooltip,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  containerRef = React.createRef();\n\n  componentDidMount() {\n    this.onResizeContainer();\n    window.addEventListener('resize', this.onResizeContainer);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * On window resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const containerElement = this.containerRef.current;\n\n    if (containerElement && containerElement.clientWidth) {\n      this.setState({ chartWidth: containerElement.clientWidth });\n    }\n  };\n\n  /**\n   * Clone and update first dataSets list/array item with tooltip callbacks.\n   *\n   * @returns {object}\n   */\n  setDataSets() {\n    const { dataSets, tooltips } = this.props;\n\n    if (tooltips && dataSets && dataSets[0] && dataSets[0].data) {\n      const updatedDataSets = _cloneDeep(dataSets);\n\n      updatedDataSets[0].data = updatedDataSets[0].data.map((value, index) => {\n        const itemsByKey = {};\n        const items = [];\n\n        dataSets.forEach((data, i) => {\n          if (data.data && data.data[value.x]) {\n            itemsByKey[data.id || `dataSet-${i}`] = data.data[value.x];\n            items.push(data.data[value.x]);\n          }\n        });\n\n        return {\n          ...value,\n          _tooltip: tooltips({\n            x: value.x,\n            y: value.y,\n            index,\n            items,\n            itemsByKey,\n            dataSets: _cloneDeep(dataSets)\n          })\n        };\n      });\n\n      return updatedDataSets;\n    }\n\n    return dataSets;\n  }\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  // ToDo: the domain range needs to be updated when additional datasets are added\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply props and return chart/graph legend.\n   *\n   * @returns {object}\n   */\n  getChartLegend() {\n    const { dataSets } = this.props;\n    const legendData = [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.legendLabel) {\n        const legendDataSettings = { symbol: {}, name: dataSet.legendLabel };\n\n        if (dataSet.legendSymbolType) {\n          legendDataSettings.symbol.type = dataSet.legendSymbolType;\n        } else if (dataSet.isThreshold) {\n          legendDataSettings.symbol.type = 'threshold';\n        }\n\n        if (dataSet.themeColor) {\n          legendDataSettings.symbol.fill = dataSet.themeColor;\n        } else if (dataSet.stroke) {\n          legendDataSettings.symbol.fill = dataSet.stroke;\n        } else if (dataSet.fill) {\n          legendDataSettings.symbol.fill = dataSet.fill;\n        }\n\n        legendData.push(legendDataSettings);\n      }\n    });\n\n    return {\n      legendData,\n      legendOrientation: 'horizontal',\n      legendPosition: 'bottom-left',\n      legendComponent: <ChartLegend borderPadding={{ top: 20 }} />\n    };\n  }\n\n  /**\n   * Return a chart/graph container component. Aids in aggregated tooltips.\n   *\n   * @returns {Node}\n   */\n  static getContainerComponent() {\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const containerComponentProps = {\n      constrainToVisibleArea: true,\n      cursorDimension: 'x',\n      voronoiDimension: 'x',\n      voronoiPadding: 50,\n      mouseFollowTooltips: true\n    };\n\n    containerComponentProps.labelComponent = (\n      <VictoryPortal>\n        <ChartTooltip pointerLength={0} centerOffset={{ x: tooltip => tooltip.flyoutWidth / 2 + 5, y: 0 }} />\n      </VictoryPortal>\n    );\n\n    containerComponentProps.labels = ({ datum }) =>\n      (/^chartArea-0/.test(datum.childName) && datum._tooltip) || datum.tooltip || undefined;\n\n    return {\n      containerComponent: <VictoryVoronoiCursorContainer {...containerComponentProps} />\n    };\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const dataSets = this.setDataSets();\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const chartLegendProps = this.getChartLegend();\n    const containerComponent = (maxY > 0 && ChartArea.getContainerComponent()) || {};\n    const chartProps = { padding, ...chartLegendProps, ...chartDomain, ...containerComponent };\n\n    /**\n     * FixMe: PFCharts or Victory, unable to return null or empty content.\n     * General practice of returning \"null\" shouldn't necessarily melt the\n     * graph. To avoid issues we return an empty array\n     */\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{padding, xAxisTickFormat: Function, themeColor: string, yAxisTickFormat: Function,\n *     domain: object|Array, dataSets: object, xAxisFixLabelOverlap: boolean, tooltips: Function,\n *     xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          tooltip: PropTypes.string,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  tooltips: PropTypes.func,\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{padding: {top: number, left: number, bottom: number, right: number}, xAxisTickFormat: null,\n *     themeColor: string, yAxisTickFormat: null, domain: object, dataSets: Array, xAxisFixLabelOverlap: boolean,\n *     tooltips: null, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  tooltips: null,\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHead, CardActions, CardBody } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../select/select';\nimport { connectTranslate, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { rhsmApiTypes, RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport { graphCardTypes } from './graphCardTypes';\nimport ChartArea from '../chartArea/chartArea';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphQuery, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(graphQuery, prevProps.graphQuery)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, graphQuery, isDisabled, productId } = this.props;\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const query = {\n        [rhsmApiTypes.RHSM_API_QUERY_START_DATE]: startDate.toISOString(),\n        [rhsmApiTypes.RHSM_API_QUERY_END_DATE]: endDate.toISOString(),\n        ...graphQuery\n      };\n\n      getGraphReportsCapacity(productId, query);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM,\n      viewId,\n      [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: value\n    });\n  };\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, graphQuery, selectOptionsType, t, productShortLabel } = this.props;\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: updatedGranularity\n      });\n\n    const tooltips = ({ itemsByKey }) =>\n      graphCardHelpers.getTooltips({\n        itemsByKey,\n        granularity: updatedGranularity,\n        product: productShortLabel\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(updatedGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat,\n      tooltips\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.legendSymbolType = 'dash';\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 2.5;\n          tempFiltered.legendLabel = t(`curiosity-graph.thresholdLabel`);\n        } else {\n          tempFiltered.legendLabel = t(`curiosity-graph.${key}Label`, { product: productShortLabel });\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return <ChartArea key={helpers.generateId()} {...chartAreaProps} dataSets={filteredGraphData(graphData)} />;\n  }\n\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, graphQuery, isDisabled, selectOptionsType, pending, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    return (\n      <Card className=\"curiosity-usage-graph fadein\">\n        <CardHead>\n          <h2>{cardTitle}</h2>\n          <CardActions>\n            {children}\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onGranularitySelect}\n              options={options}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHead>\n        <CardBody>\n          <div className={`curiosity-skeleton-container ${(error && 'blur') || ''}`}>\n            {pending && (\n              <React.Fragment>\n                <Skeleton size={SkeletonSize.xs} />\n                <Skeleton size={SkeletonSize.sm} />\n                <Skeleton size={SkeletonSize.md} />\n                <Skeleton size={SkeletonSize.lg} />\n              </React.Fragment>\n            )}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, pending: boolean, error: boolean, graphQuery: object, cardTitle: string,\n *     filterGraphData: Array, getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  productShortLabel: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  selectOptionsType: 'default',\n  t: helpers.noopTranslate,\n  productShortLabel: '',\n  viewId: 'graphCard'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\nconst ConnectedGraphCard = connectTranslate(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_SLA_TYPES as SLA_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = (optionsType = 'sla') => {\n  if (optionsType === 'sla') {\n    return {\n      selected: null,\n      options: [\n        {\n          title: translate('curiosity-toolbar.slaPremium'),\n          value: SLA_TYPES.PREMIUM\n        },\n        {\n          title: translate('curiosity-toolbar.slaStandard'),\n          value: SLA_TYPES.STANDARD\n        },\n        {\n          title: translate('curiosity-toolbar.slaSelfSupport'),\n          value: SLA_TYPES.SELF\n        },\n        {\n          title: translate('curiosity-toolbar.slaNone'),\n          value: SLA_TYPES.NONE\n        }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst toolbarTypes = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarTypes as default, toolbarTypes, getOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { DataToolbar, DataToolbarContent, DataToolbarFilter, DataToolbarGroup } from '@patternfly/react-core';\nimport { Select } from '../select/select';\nimport { reduxTypes, store } from '../../redux';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { helpers } from '../../common';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onSlaSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    this.dispatchFilter(reduxTypes.rhsm.SET_GRAPH_SLA_RHSM, { [rhsmApiTypes.RHSM_API_QUERY_SLA]: null });\n  };\n\n  /**\n   * Set SLA filter selection.\n   *\n   * @event onSlaSelect\n   * @param {object} event\n   */\n  onSlaSelect = event => {\n    const { value } = event;\n\n    this.dispatchFilter(reduxTypes.rhsm.SET_GRAPH_SLA_RHSM, { [rhsmApiTypes.RHSM_API_QUERY_SLA]: value });\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {string} type\n   * @param {object} data\n   */\n  dispatchFilter(type, data = {}) {\n    const { viewId } = this.props;\n\n    if (type) {\n      store.dispatch({\n        type,\n        viewId,\n        ...data\n      });\n    }\n  }\n\n  // ToDo: API to provide SLA options from endpoint.\n  /**\n   * Available and selected SLA options.\n   *\n   * @returns {{slaOptionsSelected: Array, slaOptions: object}}\n   */\n  filterSla() {\n    const { graphQuery } = this.props;\n\n    const slaOptions = toolbarTypes.getOptions();\n    const filterSla =\n      typeof graphQuery[rhsmApiTypes.RHSM_API_QUERY_SLA] === 'string' &&\n      slaOptions.options.find(val => val.value === graphQuery[rhsmApiTypes.RHSM_API_QUERY_SLA]);\n\n    const slaOptionsSelected =\n      (filterSla && filterSla.title && [filterSla.title]) || (slaOptions.selected && [slaOptions.selected]) || [];\n\n    return { slaOptions, slaOptionsSelected };\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { slaOptions, slaOptionsSelected } = this.filterSla();\n\n    return (\n      <DataToolbar\n        id=\"curiosity-toolbar\"\n        className=\"pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"xl\"\n        clearAllFilters={this.onClear}\n      >\n        <DataToolbarContent>\n          <DataToolbarGroup variant=\"filter-group\">\n            <DataToolbarFilter\n              chips={slaOptionsSelected}\n              deleteChip={this.onClear}\n              categoryName={t('curiosity-toolbar.slaCategory')}\n            >\n              <Select\n                aria-label={t('curiosity-toolbar.slaCategory')}\n                onSelect={this.onSlaSelect}\n                selectedOptions={slaOptionsSelected}\n                placeholder={t('curiosity-toolbar.slaPlaceholder')}\n                options={slaOptions.options}\n              />\n            </DataToolbarFilter>\n          </DataToolbarGroup>\n        </DataToolbarContent>\n      </DataToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, isDisabled: boolean, graphQuery: object}}\n */\nToolbar.propTypes = {\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_SLA]: PropTypes.string\n  }),\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: Function, isDisabled: boolean, graphQuery: {}}}\n */\nToolbar.defaultProps = {\n  graphQuery: {},\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: helpers.noopTranslate,\n  viewId: 'toolbar'\n};\n\nconst TranslatedToolbar = withTranslation()(Toolbar);\n\nexport { TranslatedToolbar as default, TranslatedToolbar, Toolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { PageLayout, PageHeader, PageSection, PageToolbar } from '../pageLayout/pageLayout';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { connectTranslate, reduxSelectors } from '../../redux';\nimport GraphCard from '../graphCard/graphCard';\nimport { Select } from '../select/select';\nimport Toolbar from '../toolbar/toolbar';\nimport { helpers } from '../../common';\n\n/**\n * An OpenShift encompassing view.\n *\n * @augments React.Component\n * @fires onSelect\n */\nclass OpenshiftView extends React.Component {\n  state = {\n    option: null,\n    filters: []\n  };\n\n  componentDidMount() {\n    const { initialOption } = this.props;\n    this.onSelect({ value: initialOption });\n  }\n\n  /**\n   * Apply a selected filtered value.\n   *\n   * @event onSelect\n   * @param {object} event\n   */\n  onSelect = (event = {}) => {\n    const { option } = this.state;\n    const { initialFilters } = this.props;\n    const { value } = event;\n\n    if (value !== option) {\n      const filters = initialFilters.filter(val => new RegExp(value, 'i').test(val.id));\n      this.setState({\n        option,\n        filters\n      });\n    }\n  };\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  renderSelect() {\n    const { option } = this.state;\n    const { initialOption } = this.props;\n    const options = [\n      { title: 'Cores', value: 'cores' },\n      { title: 'Sockets', value: 'sockets' }\n    ];\n\n    return <Select onSelect={this.onSelect} options={options} selectedOptions={option || initialOption} />;\n  }\n\n  /**\n   * Render an OpenShift view.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { filters } = this.state;\n    const { graphQuery, routeDetail, t, viewId } = this.props;\n\n    return (\n      <PageLayout>\n        <PageHeader>\n          {(routeDetail.routeItem && routeDetail.routeItem.title) || helpers.UI_DISPLAY_CONFIG_NAME}\n        </PageHeader>\n        <PageToolbar>\n          <Toolbar graphQuery={graphQuery} viewId={viewId} />\n        </PageToolbar>\n        <PageSection>\n          <GraphCard\n            key={routeDetail.pathParameter}\n            filterGraphData={filters}\n            graphQuery={graphQuery}\n            productId={routeDetail.pathParameter}\n            viewId={viewId}\n            cardTitle={t('curiosity-graph.cardHeading')}\n            productShortLabel={viewId}\n          >\n            {this.renderSelect()}\n          </GraphCard>\n        </PageSection>\n      </PageLayout>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{initialFilters: Array, initialOption: string, viewId: string, t: Function, routeDetail: object, graphQuery: object}}\n */\nOpenshiftView.propTypes = {\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)])\n  }),\n  initialOption: PropTypes.oneOf(['cores', 'sockets']),\n  initialFilters: PropTypes.array,\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    pathId: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    })\n  }).isRequired,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{initialFilters: Array, initialOption: string, viewId: string, t: Function, graphQuery: object}}\n */\nOpenshiftView.defaultProps = {\n  graphQuery: {\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  initialOption: 'cores',\n  initialFilters: [\n    { id: 'cores', fill: chartColorBlueLight.value, stroke: chartColorBlueDark.value },\n    { id: 'sockets', fill: chartColorBlueLight.value, stroke: chartColorBlueDark.value },\n    { id: 'thresholdSockets' },\n    { id: 'thresholdCores' }\n  ],\n  t: helpers.noopTranslate,\n  viewId: 'OpenShift'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.view.makeView(OpenshiftView.defaultProps);\n\nconst ConnectedOpenshiftView = connectTranslate(makeMapStateToProps)(OpenshiftView);\n\nexport { ConnectedOpenshiftView as default, ConnectedOpenshiftView, OpenshiftView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { PageLayout, PageHeader, PageSection, PageToolbar } from '../pageLayout/pageLayout';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { connectTranslate, reduxSelectors } from '../../redux';\nimport GraphCard from '../graphCard/graphCard';\nimport Toolbar from '../toolbar/toolbar';\nimport { helpers } from '../../common';\n\n/**\n * A Red Hat Enterprise Linux encompassing view, and system architectures.\n *\n * @augments React.Component\n */\nclass RhelView extends React.Component {\n  componentDidMount() {}\n\n  /**\n   * Render a RHEL view.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { graphQuery, initialFilters, routeDetail, t, viewId } = this.props;\n\n    return (\n      <PageLayout>\n        <PageHeader>\n          {(routeDetail.routeItem && routeDetail.routeItem.title) || helpers.UI_DISPLAY_CONFIG_NAME}\n        </PageHeader>\n        <PageToolbar>\n          <Toolbar graphQuery={graphQuery} viewId={viewId} />\n        </PageToolbar>\n        <PageSection>\n          <GraphCard\n            key={routeDetail.pathParameter}\n            filterGraphData={initialFilters}\n            graphQuery={graphQuery}\n            productId={routeDetail.pathParameter}\n            viewId={viewId}\n            cardTitle={t('curiosity-graph.socketsHeading')}\n            productShortLabel={viewId}\n          />\n        </PageSection>\n      </PageLayout>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{initialFilters: Array, viewId: string, t: Function, routeDetail: object, graphQuery: object}}\n */\nRhelView.propTypes = {\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)])\n  }),\n  initialFilters: PropTypes.array,\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    pathId: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    })\n  }).isRequired,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{initialFilters: Array, viewId: string, t: Function, graphQuery: object}}\n */\nRhelView.defaultProps = {\n  graphQuery: {\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  initialFilters: [\n    { id: 'physicalSockets', fill: chartColorBlueLight.value, stroke: chartColorBlueDark.value },\n    { id: 'hypervisorSockets', fill: chartColorCyanLight.value, stroke: chartColorCyanDark.value },\n    { id: 'cloudSockets', fill: chartColorPurpleLight.value, stroke: chartColorPurpleDark.value },\n    { id: 'thresholdSockets' }\n  ],\n  t: helpers.noopTranslate,\n  viewId: 'RHEL'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.view.makeView(RhelView.defaultProps);\n\nconst ConnectedRhelView = connectTranslate(makeMapStateToProps)(RhelView);\n\nexport { ConnectedRhelView as default, ConnectedRhelView, RhelView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Title\n} from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport { connectTranslate } from '../../redux';\nimport subscriptionsSvg from '../../images/subscriptions.svg';\n\n/**\n * FixMe: Patternfly EmptyStateIcon can't pass a basic image\n * Requires the use of function based component syntax\n */\n/**\n * FixMe: Patternfly EmptyStateBody and Title appear to throw an error on translate string replacement\n * Wrap with a fragment to pass.\n */\n/**\n * Render a user guided tour view.\n *\n * @returns {Node} Node containing tour view.\n */\nconst TourView = ({ session, t }) => (\n  <PageLayout>\n    <PageHeader>{helpers.UI_DISPLAY_CONFIG_NAME}</PageHeader>\n    <PageSection>\n      <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n        <img\n          src={subscriptionsSvg}\n          className=\"curiosity-emptystate-img-icon\"\n          alt={t('curiosity-tour.emptyStateIconAlt', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          aria-hidden\n        />\n        <Title headingLevel=\"h5\" size=\"lg\">\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateTitle', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </Title>\n        <EmptyStateBody>\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateDescription', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n            {session.errorStatus !== 418 &&\n              ` ${t('curiosity-tour.emptyStateDescriptionTour', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}`}\n          </React.Fragment>\n        </EmptyStateBody>\n        <EmptyStateBody>\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateDescriptionExtended', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </EmptyStateBody>\n        {(session.errorStatus === 418 && (\n          <Button\n            className=\"uxui-curiosity__button-learn\"\n            variant=\"primary\"\n            component=\"a\"\n            target=\"_blank\"\n            href=\"https://access.redhat.com/products/subscription-central\"\n          >\n            {t('curiosity-tour.emptyStateLinkLearnMore')}\n          </Button>\n        )) || (\n          <Button className=\"uxui-curiosity__button-tour\" variant=\"primary\">\n            {t('curiosity-tour.emptyStateButton')}\n          </Button>\n        )}\n        <EmptyStateSecondaryActions>\n          {session.errorStatus !== 418 && (\n            <Button\n              component=\"a\"\n              variant=\"link\"\n              target=\"_blank\"\n              href=\"https://access.redhat.com/products/subscription-central\"\n            >\n              {t('curiosity-tour.emptyStateLinkLearnMore')}\n            </Button>\n          )}\n          <Button component=\"a\" variant=\"link\" target=\"_blank\" href=\"https://access.redhat.com/account-team\">\n            {t('curiosity-tour.emptyStateLinkContactUs')}\n          </Button>\n        </EmptyStateSecondaryActions>\n      </EmptyState>\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{t: Function, session: object}}\n */\nTourView.propTypes = {\n  session: PropTypes.shape({\n    errorStatus: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: Function, session: {errorStatus: null}}}\n */\nTourView.defaultProps = {\n  session: {\n    errorStatus: null\n  },\n  t: helpers.noopTranslate\n};\n\nconst mapStateToProps = state => ({ session: state.user.session });\n\nconst ConnectedTourView = connectTranslate(mapStateToProps)(TourView);\n\nexport { ConnectedTourView as default, ConnectedTourView, TourView };\n","import path from 'path';\nimport { helpers } from '../../common/helpers';\nimport OpenshiftView from '../openshiftView/openshiftView';\nimport RhelView from '../rhelView/rhelView';\nimport TourView from '../tourView/tourView';\nimport { RHSM_API_PATH_ID_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = [\n  {\n    title: 'Red Hat Enterprise Linux',\n    to: '/rhel-sw/all',\n    redirect: true,\n    component: RhelView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Red Hat Enterprise Linux',\n    id: 'rhel-sw',\n    to: '/rhel-sw/:variant',\n    component: RhelView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Red Hat OpenShift',\n    id: 'openshift-sw',\n    to: '/openshift-sw',\n    component: OpenshiftView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Tour',\n    id: 'soon',\n    to: '/soon',\n    component: TourView,\n    exact: true,\n    render: true,\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    title: 'Tour',\n    id: 'tour',\n    to: '/tour',\n    component: TourView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  }\n];\n\n/**\n * Return an array of objects that describes platform navigation.\n *\n * @returns {Array}\n */\nconst navigation = [\n  {\n    title: 'Red Hat Enterprise Linux',\n    id: 'all',\n    path: '/rhel-sw/all',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL,\n    default: true\n  },\n  {\n    title: 'ARM',\n    id: 'arm',\n    path: '/rhel-sw/arm',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_ARM\n  },\n  {\n    title: 'IBM Power',\n    id: 'ibmpower',\n    path: '/rhel-sw/ibmpower',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER\n  },\n  {\n    title: 'IBM Z systems',\n    id: 'ibmz',\n    path: '/rhel-sw/ibmz',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z\n  },\n  {\n    title: 'x86',\n    id: 'x86',\n    path: '/rhel-sw/x86',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_X86\n  },\n  {\n    title: 'Red Hat OpenShift',\n    id: 'openshift-sw',\n    path: '/openshift-sw',\n    pathId: 'openshift-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.OPENSHIFT\n  }\n];\n\nconst routerTypes = {\n  appName,\n  navigation,\n  platformRedirect,\n  routes\n};\n\nexport { routerTypes as default, routerTypes, appName, navigation, platformRedirect, routes };\n","import { helpers } from '../../common/helpers';\nimport { routes, navigation } from './routerTypes';\n\n/**\n * Return an assumed dynamic route baseName directory\n * based on a predictable platform directory depth of\n * /[OPTIONAL]/[environment]/[APP NAME]\n *\n * @param {object} params\n * @property {string} pathName\n * @property {string} pathPrefix\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName, pathPrefix }) => {\n  const path = pathName.split('/');\n  path.shift();\n  const pathSlice = pathPrefix && new RegExp(path[0]).test(pathPrefix) ? 2 : 1;\n\n  return `/${path.slice(0, pathSlice).join('/')}`;\n};\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName =\n  (helpers.TEST_MODE && '/') ||\n  (helpers.DEV_MODE && '/') ||\n  dynamicBaseName({ pathName: window.location.pathname, pathPrefix: helpers.UI_DEPLOY_PATH_PREFIX });\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Return an object matching a specific navigation object.\n *\n * @param {object} params\n * @property {string} id\n * @property {string} pathname\n * @property {boolean} returnDefault\n * @returns {object}\n */\nconst getNavigationDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const defaultItem = returnDefault && navigation.find(item => item.default === true);\n  let navigationItem;\n\n  if (id) {\n    navigationItem = navigation.find(item => item.id === id);\n  }\n\n  if (!navigationItem && pathname) {\n    navigationItem =\n      navigation.find(item => item.path.replace(/\\/$/, '') === pathname.replace(/\\/$/, '')) ||\n      (returnDefault && defaultItem);\n  }\n\n  if (!navigationItem && returnDefault) {\n    navigationItem = defaultItem;\n  }\n\n  return { ...(navigationItem || {}) };\n};\n\n/**\n * Return an object matching a specific, or the first generic route.\n *\n * @param {object} params\n * @property {string} id\n * @property {string} pathname\n * @returns {object}\n */\nconst getRouteDetail = ({ id = null, pathname = null }) => {\n  let routeItem;\n\n  if (id) {\n    routeItem = routes.find(value => id === value.id);\n  }\n\n  if (!routeItem && pathname) {\n    routeItem = routes.find(value => pathname === value.to);\n    routeItem = routeItem || routes.find(item => pathname.includes(item.to.split(':')[0]));\n  }\n\n  return { ...(routeItem || {}) };\n};\n\n/**\n * Return an object generated from both generic routes and specific navigation objects.\n * ID is not passed to \"getRouteDetail\" to avoid conflicts between routing and\n * navigation.\n *\n * @param {object} params\n * @property {string} id\n * @property {string} pathname\n * @property {boolean} returnDefault\n * @returns {object}\n */\nconst getNavRouteDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const navDetail = getNavigationDetail({ id, pathname, returnDefault });\n  const routeDetail = getRouteDetail({ pathname: navDetail.path || pathname });\n\n  return { ...routeDetail, ...navDetail };\n};\n\nconst routerHelpers = {\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n","import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Route } from 'react-router-dom';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A routing redirect.\n *\n * @returns {Node}\n */\nconst Redirect = ({ baseName, history, isRedirect, isReplace, url, route }) => {\n  const forceNavigation = urlRoute => {\n    if (!helpers.DEV_MODE && !helpers.TEST_MODE) {\n      if (isReplace) {\n        window.location.replace(urlRoute);\n      } else {\n        window.location.href = urlRoute;\n      }\n    }\n  };\n\n  if (isRedirect === true) {\n    if (route && history) {\n      const routeDetail = routerHelpers.getRouteDetail({ pathname: route });\n      return <Route path=\"*\">{routeDetail && <routeDetail.component />}</Route>;\n    }\n\n    const forcePath = url || (route && path.join(baseName, route));\n    forceNavigation(forcePath);\n\n    return (\n      ((helpers.DEV_MODE || helpers.TEST_MODE) && <React.Fragment>Redirected towards {forcePath}</React.Fragment>) ||\n      null\n    );\n  }\n\n  return null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, isReplace: boolean, history: object, baseName: string, url: string}}\n */\nRedirect.propTypes = {\n  history: PropTypes.object,\n  isRedirect: PropTypes.bool.isRequired,\n  isReplace: PropTypes.bool,\n  url: PropTypes.string,\n  baseName: PropTypes.string,\n  route: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{route: null, isReplace: boolean, history: null, baseName: string, url: null}}\n */\nRedirect.defaultProps = {\n  history: null,\n  isReplace: false,\n  url: null,\n  baseName: routerHelpers.baseName,\n  route: null\n};\n\nconst RoutedRedirect = withRouter(Redirect);\n\nexport { RoutedRedirect as default, RoutedRedirect, Redirect };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport Redirect from './redirect';\nimport { routerHelpers } from './routerHelpers';\nimport { routerTypes } from './routerTypes';\n\n/**\n * Load routes.\n *\n * @augments React.Component\n */\nclass Router extends React.Component {\n  /**\n   * Parse settings array with route options.\n   *\n   * @returns {{redirectRoot: Node, renderRoutes: Array}}\n   */\n  renderRoutes() {\n    const { routes } = this.props;\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    let redirectRoot = null;\n\n    return {\n      renderRoutes: routes.map(item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        if (item.redirect === true) {\n          redirectRoot = <ReactRouterDomRedirect to={item.to} />;\n        }\n\n        if (item.render === true) {\n          return (\n            <Route\n              exact={item.hasParameters || item.exact}\n              key={item.to}\n              path={item.to}\n              strict={item.strict}\n              render={routeProps => {\n                const navDetail = routerHelpers.getNavigationDetail({\n                  pathname: routeProps.location && routeProps.location.pathname,\n                  returnDefault: false\n                });\n\n                return (\n                  <item.component\n                    routeDetail={{\n                      baseName: routerHelpers.baseName,\n                      errorRoute: activateOnErrorRoute,\n                      routes,\n                      routeItem: { ...item },\n                      ...navDetail\n                    }}\n                    {...routeProps}\n                  />\n                );\n              }}\n            />\n          );\n        }\n\n        return (\n          <Route exact={item.hasParameters || item.exact} key={item.to} path={item.to} component={item.component} />\n        );\n      }),\n      redirectRoot\n    };\n  }\n\n  /**\n   * Render router.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { renderRoutes, redirectRoot } = this.renderRoutes();\n\n    return (\n      <Switch>\n        {renderRoutes}\n        {redirectRoot}\n      </Switch>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.boolean,\n      component: PropTypes.any.isRequired,\n      disabled: PropTypes.boolean,\n      exact: PropTypes.boolean,\n      hasParameters: PropTypes.boolean,\n      redirect: PropTypes.boolean,\n      render: PropTypes.boolean,\n      strict: PropTypes.boolean,\n      to: PropTypes.string.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerTypes.routes\n};\n\nexport { Router as default, Router, Redirect, routerHelpers, routerTypes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState as PfEmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant } from '@patternfly/react-core';\nimport { PageLayout, PageHeader } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType is not intuitive\n * Requires the use of a function proptype?!?\n */\n/**\n * Render a message view.\n *\n * @returns {Node}\n */\nconst MessageView = ({ icon, message, title }) => (\n  <PageLayout>\n    <PageHeader>{title || helpers.UI_DISPLAY_CONFIG_NAME}</PageHeader>\n    <PfEmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n      {icon && <EmptyStateIcon icon={icon} />}\n      {message && <EmptyStateBody>{message}</EmptyStateBody>}\n    </PfEmptyState>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, message: string, title: string}}\n */\nMessageView.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, message: null, title: null}}\n */\nMessageView.defaultProps = {\n  icon: null,\n  message: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BanIcon, BinocularsIcon } from '@patternfly/react-icons';\nimport { connectRouterTranslate, reduxActions } from '../../redux';\nimport { helpers } from '../../common';\nimport { Redirect, routerHelpers, routerTypes } from '../router/router';\nimport MessageView from '../messageView/messageView';\n\n/**\n * An authentication pass-through component.\n *\n * @augments React.Component\n */\nclass Authentication extends Component {\n  appName = routerTypes.appName;\n\n  removeListeners = helpers.noop;\n\n  componentDidMount() {\n    const {\n      authorizeUser,\n      history,\n      initializeChrome,\n      onNavigation,\n      navigation,\n      setAppName,\n      setNavigation,\n      session\n    } = this.props;\n\n    if (helpers.PROD_MODE || helpers.REVIEW_MODE) {\n      initializeChrome();\n      setAppName(this.appName);\n\n      const appNav = onNavigation(event => {\n        const { path } = routerHelpers.getNavRouteDetail({ id: event.navId, returnDefault: true });\n        history.push(path);\n      });\n      const buildNav = history.listen(() => setNavigation(navigation));\n\n      this.removeListeners = () => {\n        appNav();\n        buildNav();\n      };\n    }\n\n    if (!session.authorized) {\n      authorizeUser();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  /**\n   * Render authenticated children or messaging.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children, session, t } = this.props;\n\n    if (session.authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return <MessageView title=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (session.errorStatus === 403 || session.errorStatus === 418) {\n      if (helpers.TEST_MODE) {\n        return <React.Fragment>{session.errorStatus} redirect</React.Fragment>;\n      }\n      return <Redirect isRedirect route={routerHelpers.getErrorRoute.to} />;\n    }\n\n    return (\n      <MessageView\n        title={t('curiosity-auth.authorizedTitle', '...')}\n        message={t('curiosity-auth.authorizedCopy', '...')}\n        icon={BanIcon}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, navigation: Array,\n *     t: Function, children: Node, initializeChrome: Function, session: object, history: object,\n *     setNavigation: Function}}\n */\nAuthentication.propTypes = {\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  initializeChrome: PropTypes.func,\n  onNavigation: PropTypes.func,\n  setAppName: PropTypes.func,\n  setNavigation: PropTypes.func,\n  navigation: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string\n    })\n  ),\n  session: PropTypes.shape({\n    authorized: PropTypes.bool,\n    error: PropTypes.bool,\n    errorMessage: PropTypes.string,\n    errorStatus: PropTypes.number,\n    pending: PropTypes.bool\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, navigation: Array,\n *     t: Function, initializeChrome: Function, session: {authorized: boolean, pending: boolean,\n *     errorMessage: string, errorStatus: null, error: boolean}, setNavigation: Function}}\n */\nAuthentication.defaultProps = {\n  authorizeUser: helpers.noop,\n  initializeChrome: helpers.noop,\n  onNavigation: helpers.noop,\n  setAppName: helpers.noop,\n  setNavigation: helpers.noop,\n  navigation: routerTypes.navigation,\n  session: {\n    authorized: false,\n    error: false,\n    errorMessage: '',\n    errorStatus: null,\n    pending: false\n  },\n  t: helpers.noopTranslate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser()),\n  initializeChrome: () => dispatch(reduxActions.platform.initializeChrome()),\n  onNavigation: callback => dispatch(reduxActions.platform.onNavigation(callback)),\n  setAppName: name => dispatch(reduxActions.platform.setAppName(name)),\n  setNavigation: data => dispatch(reduxActions.platform.setNavigation(data))\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = state => ({ session: state.user.session });\n\nconst ConnectedAuthentication = connectRouterTranslate(mapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router/router';\nimport Authentication from './authentication/authentication';\n\n/**\n * Application\n *\n * @augments React.Component\n */\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n    getLocale();\n  }\n\n  /**\n   * Render application.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <NotificationsPortal />\n        <Authentication>\n          <Router />\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{locale: object, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\n/**\n * Default props.\n *\n * @type {{locale: {}, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { baseName } from './components/router/routerHelpers';\nimport { store } from './redux';\nimport App from './components/app';\nimport './styles/index.scss';\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter basename={baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
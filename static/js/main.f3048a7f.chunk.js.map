{"version":3,"sources":["images/graph4x.png","images/graph2x.png","images/subscriptions.svg","common/helpers.js","components/pageLayout/pageHeader.js","components/pageLayout/pageSection.js","components/pageLayout/pageToolbar.js","components/pageLayout/pageLayout.js","types/rhsmApiTypes.js","common/dateHelpers.js","redux/common/reduxHelpers.js","redux/middleware/index.js","redux/middleware/statusMiddleware.js","redux/types/appTypes.js","redux/types/platformTypes.js","redux/types/rhsmTypes.js","redux/types/userTypes.js","redux/types/index.js","redux/reducers/graphReducer.js","redux/reducers/viewReducer.js","types/platformApiTypes.js","redux/reducers/userReducer.js","redux/reducers/index.js","redux/store.js","services/platformServices.js","redux/actions/platformActions.js","services/config.js","services/rhsmServices.js","redux/actions/rhsmActions.js","services/userServices.js","components/i18n/i18n.js","redux/actions/userActions.js","redux/actions/index.js","redux/selectors/graphCardSelectors.js","redux/selectors/viewSelectors.js","redux/selectors/index.js","redux/index.js","components/form/select.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardTypes.js","components/chartArea/chartArea.js","components/graphCard/graphCard.js","components/toolbar/toolbarTypes.js","components/toolbar/toolbar.js","components/openshiftView/openshiftView.js","components/optinView/optinView.js","components/rhelView/rhelView.js","components/tourView/tourView.js","components/router/routerTypes.js","components/router/routerHelpers.js","components/router/redirect.js","components/router/router.js","components/messageView/messageView.js","components/authentication/authentication.js","components/app.js","index.js"],"names":["module","exports","noop","Function","prototype","noopPromise","Promise","resolve","helpers","browserExpose","obj","options","limit","id","process","window","generateId","prefix","Math","ceil","random","isPromise","Object","toString","call","noopTranslate","key","value","components","DEV_MODE","PROD_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_TABLE","UI_DISABLED_TOOLBAR","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LOGGER_ID","UI_NAME","UI_PATH","UI_VERSION","UI_WINDOW_ID","PageHeader","children","title","defaultProps","PageSection","props","Section","PageToolbar","PageLayout","Fragment","React","Children","toArray","filter","child","isValidElement","type","className","RHSM_API_PATH_ID_TYPES","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","OPENSHIFT","RHSM_API_QUERY_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_QUERY_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","rhsmApiTypes","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","CLOUD_CORES","CLOUD_INSTANCES","CLOUD_SOCKETS","CORES","DATE","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_CAPACITY_META","RHSM_API_RESPONSE_CAPACITY_META_TYPES","COUNT","RHSM_API_RESPONSE_ERROR_DATA","RHSM_API_RESPONSE_ERROR_DATA_TYPES","CODE","DETAIL","RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES","OPTIN","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","HAS_DATA","RHSM_API_RESPONSE_PRODUCTS_META","RHSM_API_RESPONSE_PRODUCTS_META_TYPES","RHSM_API_QUERY_GRANULARITY","RHSM_API_QUERY_LIMIT","RHSM_API_QUERY_OFFSET","RHSM_API_QUERY_OPTIN_TALLY_SYNC","RHSM_API_QUERY_OPTIN_TALLY_REPORT","RHSM_API_QUERY_OPTIN_CONDUIT_SYNC","RHSM_API_QUERY_SLA","RHSM_API_QUERY_START_DATE","RHSM_API_QUERY_END_DATE","getCurrentDate","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","date","subtract","measurement","startDate","moment","utc","startOf","toDate","endDate","endOf","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","getSingleResponseFromResultArray","results","updatedResults","payload","response","updatedResultsMessage","message","Array","isArray","firstErrorResponse","find","_get","status","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","data","formattedStatus","trim","_isPlainObject","JSON","stringify","getDateFromResults","getStatusFromResults","setStateProp","prop","state","initialState","reset","singlePromiseDataResponseFromArray","map","reduxHelpers","schemas","initialValue","schema","generated","values","forEach","types","action","expandedTypes","val","subVal","push","ref","RegExp","test","whichType","expandMetaTypes","meta","updatedMeta","query","metaData","metaId","metaQuery","baseState","error","errorMessage","fulfilled","pending","setId","errorResponse","cancelled","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","autoDismiss","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","config","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","store","dispatch","next","httpStatus","payloadConfig","range","floor","statusMiddleware","promiseMiddleware","notificationsMiddleware","appTypes","STATUS_4XX","STATUS_5XX","platformTypes","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","rhsmTypes","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_RHSM","GET_GRAPH_REPORT_CAPACITY_RHSM","SET_GRAPH_GRANULARITY_RHSM","SET_GRAPH_SLA_RHSM","userTypes","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_AUTH","USER_LOCALE","USER_LOGOUT","reduxTypes","reportCapacity","graphReducer","graphQuery","viewReducer","viewId","platformApiTypes","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","optin","session","admin","authorized","entitled","errorCodes","locale","permissions","userReducer","user","subscriptionPermissions","permission","definitions","actionStatus","reducers","notifications","graph","view","reduxReducers","combineReducers","createStore","applyMiddleware","getUser","a","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","auth","Error","getUserPermissions","appName","e","platformServices","initializeChrome","init","onNavigation","callback","on","setAppName","name","identifyApp","reject","setNavigation","location","navigation","item","active","pathname","split","slice","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","serviceConfig","passedConfig","headers","timeout","cancelTokens","serviceCall","updatedConfig","cancelTokensId","url","cancel","CancelToken","source","cancelToken","token","axios","rhsmServices","getApiVersion","getGraphCapacity","params","getGraphReports","rhsmActions","getGraphReportsCapacity","all","getLocaleFromCookie","Cookies","get","replace","LocaleCode","getLanguageName","userServices","authorizeUser","userData","userPermissions","keys","length","emulatedErrorResponse","getLocale","defaultLocale","logoutUser","deleteAccountOptIn","method","getAccountOptIn","updateAccountOptIn","translate","translateKey","Trans","i18nKey","i18next","t","I18n","isLoaded","i18nInit","fallbackLng","loadPath","use","XHR","initReactI18next","backend","lng","debug","ns","defaultNS","react","useSuspense","setState","this","prevProps","Component","actions","platform","rhsm","rejected","variant","description","dismissable","reduxActions","graphCardCache","dataId","graphCardSelector","createSelector","productId","responseData","updatedResponseData","graphData","responseMetaQuery","cachedGranularity","undefined","assign","_isEqual","report","capacity","reportData","capacityData","graphDataKey","tallySchema","capacitySchema","customReportValue","presetData","hasData","customCapacityValue","x","y","hasInfinite","index","generateGraphData","graphDataObj","keyPrefix","customValue","graphDataObjKey","generatedY","casedGraphDataObjKey","_camelCase","Number","parseInt","updatedItem","graphCardSelectors","graphCard","makeGraphCard","viewSelector","createSelectorCreator","defaultMemoize","createDeepEqualSelector","viewGraph","reduxSelectors","makeView","connectTranslate","mapStateToProps","mapDispatchToProps","component","connect","withTranslation","Select","isExpanded","selected","onSelect","event","titleSelection","updatedOptions","optionsIndex","findIndex","option","SelectVariant","single","updateSelected","opt","mockUpdatedOptions","_cloneDeep","mockTarget","selectedIndex","checkbox","checked","mockEvent","target","currentTarget","persist","onToggle","expanded","formatOptions","selectedOptions","activateOptions","convertedOption","text","textContent","label","includes","ariaLabel","isDisabled","placeholder","pfSelectOptions","aria-label","selections","placeholderText","btoa","data-value","data-title","getTooltipDate","momentDate","format","add","graphCardHelpers","getChartXAxisLabelIncrement","getTooltips","itemsByKey","product","dateString","thresholdString","dataFacets","thresholdStringValue","dataFactsValue","join","xAxisTickFormat","tick","previousDate","formattedDate","isNewYear","year","yAxisTickFormat","numbro","average","mantissa","optionalMantissa","graphCardTypes","optionsType","ChartArea","chartWidth","containerRef","createRef","onResizeContainer","containerElement","current","clientWidth","addEventListener","removeEventListener","dataSets","tooltips","updatedDataSets","items","i","_tooltip","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","floored","pow","log10","maxY","chartDomain","legendData","legendLabel","legendDataSettings","symbol","legendSymbolType","isThreshold","themeColor","fill","stroke","legendOrientation","legendPosition","legendComponent","ChartLegend","borderPadding","top","stacked","setDataSets","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","style","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","chartLegendProps","getChartLegend","containerComponent","getContainerComponent","chartProps","Chart","duration","width","ChartAxis","renderChart","ChartStack","VictoryVoronoiCursorContainer","createContainer","containerComponentProps","constrainToVisibleArea","cursorDimension","voronoiDimension","voronoiPadding","mouseFollowTooltips","labelComponent","ChartTooltip","pointerLength","centerOffset","tooltip","flyoutWidth","labels","datum","childName","height","bottom","left","right","GraphCard","onUpdateGraphData","graphGranularity","toISOString","onGranularitySelect","filterGraphData","selectOptionsType","productShortLabel","updatedGranularity","chartAreaProps","filtered","tempFiltered","onLoad","chartColorGreenDark","filteredGraphData","cardTitle","Card","CardHead","CardActions","CardBody","Skeleton","size","SkeletonSize","xs","sm","md","lg","makeMapStateToProps","ConnectedGraphCard","toolbarTypes","SLA_TYPES","Toolbar","onClear","dispatchFilter","onSlaSelect","slaOptions","filterSla","slaOptionsSelected","DataToolbar","collapseListedFiltersBreakpoint","clearAllFilters","DataToolbarContent","DataToolbarGroup","DataToolbarFilter","chips","deleteChip","categoryName","TranslatedToolbar","OpenshiftView","filters","initialFilters","initialOption","routeDetail","pathParameter","renderSelect","chartColorBlueLight","chartColorBlueDark","ConnectedOpenshiftView","OptinView","onSubmitOptIn","disableButton","Form","ActionGroup","Button","Spinner","isInline","href","onClick","CardHeadMain","Brand","srcSet","graphPng4x","graphPng2x","src","alt","aria-hidden","CardHeader","Title","headingLevel","CardFooter","Flex","breakpointMods","modifier","FlexModifiers","column","row","breakpoint","FlexBreakpoints","FlexItem","renderOptinForm","renderTour","ConnectedOptinView","RhelView","chartColorCyanLight","chartColorCyanDark","chartColorPurpleLight","chartColorPurpleDark","ConnectedRhelView","TourView","EmptyState","EmptyStateVariant","full","subscriptionsSvg","EmptyStateBody","EmptyStateSecondaryActions","ConnectedTourView","platformLandingRedirect","path","platformModalRedirect","routes","to","redirect","exact","render","disabled","activateOnError","pathId","default","routerTypes","dynamicBaseName","pathName","pathPrefix","shift","pathSlice","baseName","getErrorRoute","route","getNavigationDetail","navigationItem","returnDefault","defaultItem","getRouteDetail","routeItem","routerHelpers","getNavRouteDetail","navDetail","Redirect","urlRoute","history","isRedirect","isReplace","forcePath","RoutedRedirect","withRouter","Router","activateOnErrorRoute","redirectRoot","renderRoutes","hasParameters","strict","routeProps","errorRoute","MessageView","icon","pageTitle","EmptyStateIcon","Authentication","removeListeners","appNav","navId","BinocularsIcon","LockIcon","ConnectedAuthentication","App","ConnectedApp","connectRouter","basename","document","getElementById"],"mappings":"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","file":"static/js/main.f3048a7f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/graph4x.4d450825.png\";","module.exports = __webpack_public_path__ + \"static/media/graph2x.1e4428de.png\";","module.exports = __webpack_public_path__ + \"static/media/subscriptions.0ad5eae0.svg\";","/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n// ToDo: expand to include \"async\" check in scenarios where async/await are utilized.\n/**\n * Check if \"is a Promise\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => Object.prototype.toString.call(obj) === '[object Promise]';\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string} key\n * @param {string|object} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) =>\n  `t(${key}${(value && `, ${value}`) || ''}${(components && `, ${components}`) || ''})`;\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  browserExpose,\n  generateId,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LOGGER_ID,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  PageHeader as RcsPageHeader,\n  PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components/components/PageHeader';\n\n/**\n * Render a platform page header.\n *\n * @returns {Node}\n */\nconst PageHeader = ({ children }) => (\n  <RcsPageHeader>\n    <PageHeaderTitle title={children} />\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageHeader.defaultProps = {};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\n\n/**\n * Render a platform page section.\n *\n * @returns {Node}\n */\nconst PageSection = ({ children, ...props }) => <Section {...props}>{children}</Section>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageSection.defaultProps = {};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @returns {Node}\n */\nconst PageToolbar = ({ children, ...props }) => <Section {...props}>{children}</Section>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageToolbar.defaultProps = {};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @returns {Node}\n */\nconst PageLayout = ({ children }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main className=\"curiosity\">\n      {React.Children.toArray(children).filter(child => child.type !== PageHeader && child.type !== PageToolbar)}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n */\nPageLayout.defaultProps = {};\n\nexport { PageLayout as default, PageLayout, PageHeader, PageSection, PageToolbar };\n","/**\n * RHSM response Capacity DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\n\n/**\n * RHSM response Capacity DATA types.\n * Schema/map of expected Capacity data response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string,\n *     HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response Capacity META type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_META = 'meta';\n\n/**\n * RHSM response Capacity META types.\n * Schema/map of expected Capacity META response properties.\n *\n * @type {{COUNT: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_META_TYPES = {\n  COUNT: 'count'\n};\n\n/**\n * RHSM response Error DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA = 'errors';\n\n/**\n * RHSM response Error DATA types.\n * Schema/map of expected Error data response properties.\n *\n * @type {{CODE: string, DETAIL: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_TYPES = {\n  CODE: 'code',\n  DETAIL: 'detail'\n};\n\n/**\n * RHSM response Error DATA CODE types.\n *\n * @type {{OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES = {\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response Reporting/Tally DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\n\n/**\n * RHSM response Reporting/Tally DATA types.\n * Schema/map of expected Reporting/Tally DATA response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, HAS_DATA: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM response Reporting/Tally META type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_META = 'meta';\n\n/**\n * RHSM response Reporting/Tally META types.\n * Schema/map of expected Reporting/Tally META response properties.\n *\n * @type {{COUNT: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_META_TYPES = {\n  COUNT: 'count'\n};\n\n/**\n * RHSM product id type values.\n *\n * @type {{RHEL_ARM: string, RHEL_WORKSTATION: string, RHEL_DESKTOP: string, RHEL: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_COMPUTE_NODE: string, RHEL_IBM_POWER: string,\n *     RHEL_X86: string, OPENSHIFT: string}}\n */\nconst RHSM_API_PATH_ID_TYPES = {\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  OPENSHIFT: 'OpenShift Container Platform'\n};\n\n/**\n * RHSM API query/search parameter GRANULARITY type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_GRANULARITY = 'granularity';\n\n/**\n * RHSM API query/search parameter of GRANULARITY type values.\n * Schema/map of expected query/search parameter granularity types.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\n\n/**\n * RHSM API query/search parameter results LIMIT type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_LIMIT = 'limit';\n\n/**\n * RHSM API query/search parameter result set OFFSET type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OFFSET = 'offset';\n\n/**\n * RHSM API query/search parameter OPT-IN TALLY SYNC type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OPTIN_TALLY_SYNC = 'enable_tally_sync';\n\n/**\n * RHSM API query/search parameter OPT-IN TALLY REPORT type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OPTIN_TALLY_REPORT = 'enable_tally_reporting';\n\n/**\n * RHSM API query/search parameter OPTIN CONDUIT SYNC type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_OPTIN_CONDUIT_SYNC = 'enable_conduit_sync';\n\n/**\n * RHSM API query/search parameter SLA type.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_SLA = 'sla';\n\n/**\n * RHSM API query/search parameter SLA type values.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_QUERY_SLA_TYPES = {\n  PREMIUM: 'premium',\n  STANDARD: 'standard',\n  SELF: 'self-support',\n  NONE: ''\n};\n\n/**\n * RHSM API query/search parameter START DATE type.\n * Associated with a sequential date prior/before the target date.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_START_DATE = 'beginning';\n\n/**\n * RHSM API query/search parameter END DATE type.\n * Associated with a sequential date on or after the target date. Limited by the current date.\n *\n * @type {string}\n */\nconst RHSM_API_QUERY_END_DATE = 'ending';\n\n/**\n * RHSM API types.\n *\n * @type {{RHSM_API_QUERY_END_DATE: string, RHSM_API_QUERY_GRANULARITY: string, RHSM_API_QUERY_START_DATE: string,\n *    RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES: {OPTIN: string}, RHSM_API_RESPONSE_CAPACITY_DATA: string,\n *    RHSM_API_PATH_ID_TYPES: {RHEL_ARM: string, RHEL_WORKSTATION: string, RHEL_DESKTOP: string, RHEL: string,\n *    RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_COMPUTE_NODE: string, RHEL_IBM_POWER: string,\n *    RHEL_X86: string, OPENSHIFT: string}, RHSM_API_RESPONSE_ERROR_DATA_TYPES: {CODE: string, DETAIL: string},\n *    RHSM_API_QUERY_OPTIN_TALLY_REPORT: string, RHSM_API_QUERY_OPTIN_TALLY_SYNC: string,\n *    RHSM_API_QUERY_SLA: string, RHSM_API_RESPONSE_CAPACITY_META_TYPES: {COUNT: string},\n *    RHSM_API_QUERY_OPTIN_CONDUIT_SYNC: string, RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string,\n *    NONE: string, STANDARD: string}, RHSM_API_RESPONSE_CAPACITY_DATA_TYPES: {HYPERVISOR_SOCKETS: string,\n *    CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string,\n *    HAS_INFINITE: string, PHYSICAL_CORES: string}, RHSM_API_QUERY_LIMIT: string,\n *    RHSM_API_RESPONSE_CAPACITY_META: string, RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES: {HYPERVISOR_SOCKETS: string,\n *    CORES: string, DATE: string, SOCKETS: string, HAS_DATA: string, PHYSICAL_SOCKETS: string,\n *    HYPERVISOR_CORES: string, PHYSICAL_CORES: string}, RHSM_API_RESPONSE_PRODUCTS_META: string,\n *    RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *    RHSM_API_RESPONSE_ERROR_DATA: string, RHSM_API_RESPONSE_PRODUCTS_DATA: string,\n *    RHSM_API_RESPONSE_PRODUCTS_META_TYPES: {COUNT: string}, RHSM_API_QUERY_OFFSET: string}}\n */\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_OPTIN_TALLY_SYNC,\n  RHSM_API_QUERY_OPTIN_TALLY_REPORT,\n  RHSM_API_QUERY_OPTIN_CONDUIT_SYNC,\n  RHSM_API_QUERY_SLA,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_META,\n  RHSM_API_RESPONSE_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_META,\n  RHSM_API_RESPONSE_PRODUCTS_META_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_LIMIT,\n  RHSM_API_QUERY_OFFSET,\n  RHSM_API_QUERY_OPTIN_TALLY_SYNC,\n  RHSM_API_QUERY_OPTIN_TALLY_REPORT,\n  RHSM_API_QUERY_OPTIN_CONDUIT_SYNC,\n  RHSM_API_QUERY_SLA,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_START_DATE,\n  RHSM_API_QUERY_END_DATE\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @property {Date} date Start date, typically the current date.\n * @property {number} subtract Number of granularity type to subtract from the current date.\n * @property {string} measurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf('days').toDate()\n});\n\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedDateTime,\n  setRangedDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} initialValue\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 300 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (process.env.REACT_APP_ENV === 'development' && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (process.env.REACT_APP_ENV === 'development' && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    delete updatedMeta.data;\n    delete updatedMeta.id;\n    delete updatedMeta.query;\n\n    return {\n      meta: { ...updatedMeta },\n      metaData: meta.data,\n      metaId: meta.id,\n      metaQuery: meta.query\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setResponseSchemas,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { statusMiddleware } from './statusMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  promiseMiddleware,\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_INIT: string, PLATFORM_SET_NAV: string,\n *     PLATFORM_CLEAR_NOTIFICATIONS: string, PLATFORM_ADD_NOTIFICATION: string,\n *     PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n","const GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_RHSM = 'GET_GRAPH_REPORT_RHSM';\nconst GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst SET_GRAPH_GRANULARITY_RHSM = 'SET_GRAPH_GRANULARITY_RHSM';\nconst SET_GRAPH_SLA_RHSM = 'SET_GRAPH_SLA_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, SET_GRAPH_GRANULARITY_RHSM: string,\n *     GET_GRAPH_CAPACITY_RHSM: string, SET_GRAPH_SLA_RHSM: string,\n *     GET_GRAPH_REPORT_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  SET_GRAPH_GRANULARITY_RHSM,\n  SET_GRAPH_SLA_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  SET_GRAPH_GRANULARITY_RHSM,\n  SET_GRAPH_SLA_RHSM\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_AUTH: string, USER_LOCALE: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_AUTH,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { platformTypes } from './platformTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  platform: platformTypes,\n  rhsm: rhsmTypes,\n  user: userTypes\n};\n\nexport { reduxTypes as default, reduxTypes, appTypes, platformTypes, rhsmTypes, userTypes };\n","import { rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: object}}\n */\nconst initialState = {\n  reportCapacity: {}\n};\n\n/**\n * Apply generated graph observer/reducer for reportCapacity to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [{ ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM }],\n    state,\n    action\n  );\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_GRANULARITY, RHSM_API_QUERY_SLA } from '../../types/rhsmApiTypes';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphQuery: {}}}\n */\nconst initialState = {\n  graphQuery: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM:\n      return reduxHelpers.setStateProp(\n        'graphQuery',\n        {\n          [action.viewId]: {\n            ...state.graphQuery[action.viewId],\n            [RHSM_API_QUERY_GRANULARITY]: action[RHSM_API_QUERY_GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.rhsm.SET_GRAPH_SLA_RHSM:\n      return reduxHelpers.setStateProp(\n        'graphQuery',\n        {\n          [action.viewId]: {\n            ...state.graphQuery[action.viewId],\n            [RHSM_API_QUERY_SLA]: action[RHSM_API_QUERY_SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\n/**\n * Platform API types.\n *\n * @type {{PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES: {USER: string},\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS: string, PLATFORM_API_RESPONSE_USER_IDENTITY: string,\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES: {ENTITLED: string},\n *     PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES: {ORG_ADMIN: string}}}\n */\nconst platformApiTypes = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES\n};\n\nexport {\n  platformApiTypes as default,\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES\n};\n","import _get from 'lodash/get';\nimport { appTypes, userTypes } from '../types';\nimport { platformApiTypes, rhsmApiTypes } from '../../types';\nimport { helpers } from '../../common';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{session: {entitled: boolean, permissions: Array, authorized: boolean, errorCodes: Array,\n *     pending: boolean, errorMessage: string, fulfilled: boolean, admin: boolean, error: boolean,\n *     locale: string, status: (string|number)}, optin: {}}}\n */\nconst initialState = {\n  optin: {},\n  session: {\n    admin: false,\n    authorized: false,\n    entitled: false,\n    error: false,\n    errorCodes: [],\n    errorMessage: null,\n    fulfilled: false,\n    locale: null,\n    pending: false,\n    permissions: [],\n    status: null\n  }\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.REJECTED_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          error: action.error,\n          errorMessage: reduxHelpers.getMessageFromResults(action),\n          locale: state.session.locale,\n          status: reduxHelpers.getStatusFromResults(action)\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.PENDING_ACTION(userTypes.USER_AUTH):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: state.session.locale,\n          pending: true\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_AUTH):\n      const { user, permissions } = reduxHelpers.getDataFromResults(action);\n      const admin = _get(\n        user,\n        [\n          platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n          platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n          platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n        ],\n        false\n      );\n\n      const entitled = _get(\n        user,\n        [\n          platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n          helpers.UI_NAME,\n          platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED\n        ],\n        false\n      );\n\n      const subscriptionPermissions = permissions.map(value => ({\n        permission: value[platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION],\n        definitions: value[platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]\n      }));\n\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          admin,\n          authorized: true,\n          entitled,\n          fulfilled: true,\n          locale: state.session.locale,\n          permissions: subscriptionPermissions\n        },\n        {\n          state,\n          initialState\n        }\n      );\n\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(\n          reduxHelpers.getDataFromResults(action),\n          [rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA],\n          []\n        );\n\n        return reduxHelpers.setStateProp(\n          'session',\n          {\n            admin: state.session.admin,\n            entitled: state.session.entitled,\n            error: true,\n            errorCodes: errorCodes.map(value => value[rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE]),\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            locale: state.session.locale,\n            permissions: state.session.permissions,\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport viewReducer from './viewReducer';\nimport userReducer from './userReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  view: viewReducer,\n  user: userReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport { reduxReducers as default, reduxReducers, graphReducer, viewReducer, userReducer };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","import _set from 'lodash/set';\nimport { helpers } from '../common';\nimport { platformApiTypes } from '../types';\n\n/**\n * Basic user authentication.\n *\n * @returns {Promise<void>}\n */\nconst getUser = async () => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE &&\n        _set(\n          {},\n          [\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n          ],\n          process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n        )) ||\n      (await insights.chrome.auth.getUser())\n    );\n  } catch (e) {\n    throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n  }\n};\n\n/**\n * FixMe: revert this back towards async/await\n * Removed because there appears to be some quirky behavior where permissions will not come through\n * unless the function, and/or await are specifically returned, i.e. \"return await insights.chrome...\".\n */\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @returns {Promise<void>}\n */\nconst getUserPermissions = (appName = '') => {\n  const { insights } = window;\n  try {\n    return insights.chrome.getUserPermissions(appName);\n  } catch (e) {\n    throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<void>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n// FixMe: Revert catch to throwing an error. Relaxed for development\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<void>}\n */\nconst setAppName = async (name = null) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.identifyApp(name);\n  } catch (e) {\n    const error = `{ identifyApp } = insights.chrome, ${e.message}`;\n    await Promise.reject(error);\n  }\n};\n\n// ToDo: Clean up, consider removing setNavigation, currently no longer used.\n/**\n * Set platform left hand navigation active item.\n *\n * @param {Array} data\n * @returns {*}\n */\nconst setNavigation = (data = []) => {\n  const { insights, location } = window;\n  try {\n    return insights.chrome.navigation(\n      data.map(item => ({\n        ...item,\n        active: item.id === location.pathname.split('/').slice(-1)[0]\n      }))\n    );\n  } catch (e) {\n    throw new Error(`{ navigation } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = { getUser, getUserPermissions, initializeChrome, onNavigation, setAppName, setNavigation };\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  getUserPermissions,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for handling the left-nav navigation active item.\n *\n * @param {object} data\n * @returns {Function}\n */\nconst setNavigation = data => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_SET_NAV\n  });\n  return platformServices.setNavigation(data);\n};\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setNavigation\n};\n","import axios, { CancelToken } from 'axios';\nimport { platformServices } from './platformServices';\n\n/**\n * Apply consistent service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {object}\n */\nconst cancelTokens = {};\n\n/**\n * Call platform \"getUser\" auth method, and apply service config.\n *\n * @param {object} config\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n\n  const updatedConfig = { ...config };\n  const cancelTokensId = updatedConfig.url;\n\n  if (updatedConfig.cancel === true) {\n    if (cancelTokens[cancelTokensId]) {\n      cancelTokens[cancelTokensId].cancel('cancelled request');\n    }\n\n    cancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = cancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  return axios(serviceConfig(updatedConfig));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *       \"version\": \"0.0.0\",\n *       \"gitDescription\": \"lorem ipsum\",\n *       \"artifact\": \"dolor sit\",\n *       \"name\": \"lorem\",\n *       \"group\": \"ipsum\",\n *       \"gitHash\": \"0000000000000000\"\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @returns {Promise<*>}\n */\nconst getApiVersion = () =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {ForceStatus} 200\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {Enum} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {Enum} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {Object} links\n * @apiSuccess {Object} meta\n * @apiSuccess {Enum} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {Enum} meta.product\n * - RHEL\n * @apiSuccess {Number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2018-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40\n *         },\n *         {\n *           \"date\": \"2019-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-05-26T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-02T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-09T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-16T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-23T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-06-30T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         },\n *         {\n *           \"date\": \"2019-07-07T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-14T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"instance_count\": 5,\n *           \"cores\": 10,\n *           \"hypervisor\": 0,\n *           \"sockets\": 10\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"instance_count\": 6,\n *           \"cores\": 12,\n *           \"hypervisor\": 20,\n *           \"sockets\": 12\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2019-05-26T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-01-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-02-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-03-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"hypervisor\": 0,\n *           \"sockets\": 0\n *         },\n *         {\n *           \"date\": \"2019-04-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2019-05-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2019-06-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"hypervisor\": 50,\n *           \"sockets\": 48\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2018-08-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\"\n *       }\n *     }\n *\n * @apiSuccessExample {json} QUARTERLY, Success-Response:\n *     HTTP/1.1 201 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-01-01T00:00:00Z\",\n *           \"instance_count\": 24,\n *           \"cores\": 48,\n *           \"hypervisor\": 50,\n *           \"sockets\": 48\n *         },\n *         {\n *           \"date\": \"2018-04-01T00:00:00Z\",\n *           \"instance_count\": 16,\n *           \"cores\": 32,\n *           \"hypervisor\": 50,\n *           \"sockets\": 32\n *         },\n *         {\n *           \"date\": \"2018-07-01T00:00:00Z\",\n *           \"instance_count\": 8,\n *           \"cores\": 16,\n *           \"hypervisor\": 20,\n *           \"sockets\": 16\n *         },\n *         {\n *           \"date\": \"2018-10-01T00:00:00Z\",\n *           \"instance_count\": 0,\n *           \"cores\": 0,\n *           \"hypervisor\": 10,\n *           \"sockets\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=quarterly&beginning=2015-01-01T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 4,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"quarterly\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params,\n    cancel: true\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2018-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2018-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2019-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-24T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2019-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2019-07-20T00:00:00.000Z&ending=2019-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}) =>\n  serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params,\n    cancel: true\n  });\n\nconst rhsmServices = { getApiVersion, getGraphCapacity, getGraphReports };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport { rhsmServices as default, rhsmServices, getApiVersion, getGraphCapacity, getGraphReports };\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsmServices';\n\n/**\n * Get a combined RHSM response from reporting and capacity.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getGraphReportsCapacity = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n    payload: Promise.all([rhsmServices.getGraphReports(id, query), rhsmServices.getGraphCapacity(id, query)]),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActions = { getGraphReportsCapacity };\n\nexport { rhsmActions as default, rhsmActions, getGraphReportsCapacity };\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { getUser, getUserPermissions } from './platformServices';\nimport { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * Apply an emulated API response to the platforms getUser method.\n *\n * @returns {Promise<{data: {permissions: (void|*[]), user: void}, message: string, status: number}>}\n */\nconst authorizeUser = async () => {\n  let message = '{ auth.getUser, getUserPermissions } = insights.chrome';\n  let userData;\n  let userPermissions;\n\n  try {\n    userData = await getUser();\n    userPermissions = await getUserPermissions(helpers.UI_NAME);\n  } catch (e) {\n    message = e.message;\n  }\n\n  if (_isPlainObject(userData) && Object.keys(userData).length) {\n    return Promise.resolve({ data: { user: userData, permissions: userPermissions || [] }, message, status: 200 });\n  }\n\n  const emulatedErrorResponse = {\n    ...new Error(message),\n    message,\n    status: 418\n  };\n\n  return Promise.reject(emulatedErrorResponse);\n};\n\n/**\n * Return a platform locale value from a cookie.\n *\n * @private\n * @returns {{value: string, key: string | null}|null}\n */\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\n/**\n * Return platform locale.\n *\n * @returns {Promise<{data: void}>}\n */\nconst getLocale = () => {\n  const defaultLocale = {\n    value: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n    key: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC\n  };\n\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_numner\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = () =>\n  serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel: true\n  });\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/master/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_numner\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport {\n  userServices as default,\n  userServices,\n  authorizeUser,\n  getLocale,\n  logoutUser,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, Trans, withTranslation } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string} translateKey\n * @param {string|Array} values A default string if the key can't be found. An array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @returns {string|Node}\n */\nconst translate = (translateKey, values = null, components) => {\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(translateKey, values, components);\n  }\n\n  if (components) {\n    return <Trans i18nKey={translateKey} values={values} components={components} />;\n  }\n\n  return i18next.t(translateKey, values);\n};\n\n/**\n * Apply string replacements against a component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst translateComponent = component => (!helpers.TEST_MODE && withTranslation()(component)) || component;\n\n/**\n * ToDo: reevaluate the \"I18nextProvider\" on package update.\n * Appears to have timing issues, and subsequent firings of the\n * ajax/xhr setup. Reverting it to just a function call that populates behind\n * the scenes appears more predictable.\n */\n/**\n * Load I18n.\n *\n * @augments React.Component\n */\nclass I18n extends React.Component {\n  state = { isLoaded: false };\n\n  componentDidMount() {\n    this.i18nInit();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { locale } = this.props;\n\n    if (locale !== prevProps.locale) {\n      this.i18nInit();\n    }\n  }\n\n  /**\n   * Load i18next.\n   *\n   * @returns {Promise<void>}\n   */\n  i18nInit = async () => {\n    const { fallbackLng, loadPath, locale } = this.props;\n\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: locale,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      // ToDo: eval the need for an isError state ref\n    }\n\n    this.setState({ isLoaded: true });\n  };\n\n  /**\n   * Render children after i18next loads.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { isLoaded } = this.state;\n    const { children } = this.props;\n\n    return (isLoaded && <React.Fragment>{children}</React.Fragment>) || <React.Fragment />;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: Node, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get an emulated API response from the platforms \"getUser\" method.\n *\n * @returns {Function}\n */\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userServices.authorizeUser()\n  });\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userServices.getLocale()\n});\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn = (query = {}) => dispatch =>\n  dispatch({\n    type: userTypes.UPDATE_USER_OPTIN,\n    payload: userServices.updateAccountOptIn(query),\n    meta: {\n      query,\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsErrorDescription'),\n          dismissable: true\n        },\n        fulfilled: {\n          variant: 'success',\n          title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsSuccessDescription'),\n          dismissable: true,\n          autoDismiss: false\n        }\n      }\n    }\n  });\n\nconst userActions = { authorizeUser, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport {\n  userActions as default,\n  userActions,\n  authorizeUser,\n  getLocale,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { createSelector } from 'reselect';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _get from 'lodash/get';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{dataId: {string}, data: {object}}}\n */\nconst graphCardCache = { dataId: null, data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst graphResponse = (state, props = {}) => ({\n  ..._get(state, ['graph', 'reportCapacity', props.productId]),\n  ...{\n    viewId: props.viewId,\n    productId: props.productId,\n    graphQuery: props.graphQuery\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst graphCardSelector = createSelector([graphResponse], response => {\n  const { viewId = null, productId = null, graphQuery = {}, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    graphData: {},\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n  delete responseMetaQuery[rhsmApiTypes.RHSM_API_QUERY_START_DATE];\n  delete responseMetaQuery[rhsmApiTypes.RHSM_API_QUERY_END_DATE];\n\n  const cachedGranularity =\n    (viewId && productId && graphCardCache.data[`${viewId}_${productId}_${JSON.stringify(graphQuery)}`]) || undefined;\n\n  Object.assign(updatedResponseData, { ...cachedGranularity });\n\n  if (viewId && graphCardCache.dataId !== viewId) {\n    graphCardCache.dataId = viewId;\n    graphCardCache.data = {};\n  }\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(graphQuery, responseMetaQuery)) {\n    const [report, capacity] = responseData.data;\n    const reportData = _get(report, [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA], []);\n    const capacityData = _get(capacity, [rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA], []);\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Reporting graph entries\n    const customReportValue = (data, key, presetData) => ({\n      ...presetData,\n      hasData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_DATA]\n    });\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y,\n      hasInfinite: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE]\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment.utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE]).startOf('day').toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY = Number.parseInt(graphDataObj[graphDataObjKey], 10);\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value }, customValue: customReportValue });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    graphCardCache.data[`${viewId}_${productId}_${JSON.stringify(graphQuery)}`] = {\n      ...updatedResponseData\n    };\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeGraphCardSelector = defaultProps => (state, props) => ({\n  ...graphCardSelector(state, props, defaultProps)\n});\n\nconst graphCardSelectors = {\n  graphCard: graphCardSelector,\n  makeGraphCard: makeGraphCardSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, graphCardSelector, makeGraphCardSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _get from 'lodash/get';\nimport _isEqual from 'lodash/isEqual';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @param {object} defaultProps\n * @returns {object}\n */\nconst viewGraphQuery = (state = {}, props, defaultProps = {}) => ({\n  graphQuery: {\n    ...defaultProps.graphQuery,\n    ..._get(state, ['view', 'graphQuery', defaultProps.viewId])\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable API param/query object.\n *\n * @type {{graphQuery: object}}\n */\nconst viewSelector = createDeepEqualSelector([viewGraphQuery], viewGraph => ({\n  graphQuery: { ...viewGraph.graphQuery }\n}));\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{graphQuery: object}}\n */\nconst makeViewSelector = defaultProps => (state, props) => ({\n  ...viewSelector(state, props, defaultProps)\n});\n\nconst viewSelectors = {\n  view: viewSelector,\n  makeView: makeViewSelector\n};\n\nexport { viewSelectors as default, viewSelectors, viewSelector, makeViewSelector };\n","import graphCardSelectors from './graphCardSelectors';\nimport viewSelectors from './viewSelectors';\n\nconst reduxSelectors = {\n  graphCard: graphCardSelectors,\n  view: viewSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { withTranslation } from 'react-i18next';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\nimport { helpers } from '../common/helpers';\n\nconst connectTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  connect(mapStateToProps, mapDispatchToProps)((!helpers.TEST_MODE && withTranslation()(component)) || component);\n\nconst connectRouterTranslate = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connectTranslate(mapStateToProps, mapDispatchToProps)(component));\n\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connect(mapStateToProps, mapDispatchToProps)(component));\n\nexport {\n  connect,\n  connectRouter,\n  connectRouterTranslate,\n  connectTranslate,\n  reduxActions,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  store\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * A wrapper for Patternfly Select. Provides additional event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @param expanded\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected =\n          activateOptions.includes(convertedOption.value) || activateOptions.includes(convertedOption.title);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, placeholder, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isExpanded={isExpanded}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(option.title)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{name: string, options: object, selectedOptions: (number|string|Array), variant: (object|string),\n *     className: string, id: string, isDisabled: boolean, placeholder: string, ariaLabel: string,\n *     onSelect: Function}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  placeholder: PropTypes.string,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{name: null, options: Array, selectedOptions: null, variant: SelectVariant.single,\n *     className: string, id: string, isDisabled: boolean, placeholder: string,\n *     ariaLabel: string, onSelect: Function}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  selectedOptions: null,\n  placeholder: 'Select option',\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","import moment from 'moment';\nimport numbro from 'numbro';\nimport { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers } from '../../common/dateHelpers';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @property {Date} date\n * @property {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * ToDo: we have access to the datasets and index which gives us access to the previous date.\n * Consider adding back in the year on tooltip cross year displays\n */\n/**\n * Get tooltips for x axis while displaying y axis values.\n *\n * @param {object} params\n * @property {object} itemsByKey\n * @property {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @property {string} product Apply the product to locale strings\n * @returns {string | *}\n */\nconst getTooltips = ({ itemsByKey, granularity, product = '' }) => {\n  let dateString = '';\n  let thresholdString = '';\n  const dataFacets = [];\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      dateString = `${translate('curiosity-graph.dateLabel')}: ${getTooltipDate({\n        date: itemsByKey[key].date,\n        granularity\n      })}`;\n    }\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key].hasInfinite && translate('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key].y ?? translate('curiosity-graph.noDataLabel'));\n\n      thresholdString = `${translate(`curiosity-graph.thresholdLabel`)}: ${thresholdStringValue}\\n`;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key].hasData === false && translate('curiosity-graph.noDataLabel')) || itemsByKey[key].y || 0;\n\n      dataFacets.push(`${translate(`curiosity-graph.${key}Label`, { product })}: ${dataFactsValue}\\n`);\n    }\n  });\n\n  return (\n    ((thresholdString || dataFacets.length) && `${thresholdString}${dataFacets.join('')}${dateString}`.trim()) ||\n    translate('curiosity-graph.noDataErrorLabel')\n  );\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @property {Date} date\n * @property {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @property {number|string} tick\n * @property {Date} previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @property {number|string} tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick }) => numbro(tick).format({ average: true, mantissa: 1, optionalMantissa: true });\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  getTooltips,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  getTooltips,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Return a set of options for display in a select/dropdown list.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getGranularityOptionsType = optionsType => {\n  if (optionsType === 'default') {\n    return {\n      selected: GRANULARITY_TYPES.DAILY,\n      options: [\n        { title: translate('curiosity-graph.dropdownDaily'), value: GRANULARITY_TYPES.DAILY, selected: true },\n        { title: translate('curiosity-graph.dropdownWeekly'), value: GRANULARITY_TYPES.WEEKLY },\n        { title: translate('curiosity-graph.dropdownMonthly'), value: GRANULARITY_TYPES.MONTHLY },\n        { title: translate('curiosity-graph.dropdownQuarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst graphCardTypes = {\n  getGranularityOptions: getGranularityOptionsType\n};\n\nexport { graphCardTypes as default, graphCardTypes, getGranularityOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer, VictoryPortal } from 'victory';\nimport {\n  Chart,\n  ChartAxis,\n  ChartLegend,\n  ChartStack,\n  ChartThreshold,\n  ChartTooltip,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  containerRef = React.createRef();\n\n  componentDidMount() {\n    this.onResizeContainer();\n    window.addEventListener('resize', this.onResizeContainer);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * On window resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const containerElement = this.containerRef.current;\n\n    if (containerElement && containerElement.clientWidth) {\n      this.setState({ chartWidth: containerElement.clientWidth });\n    }\n  };\n\n  /**\n   * Clone and update first dataSets list/array item with tooltip callbacks.\n   *\n   * @returns {object}\n   */\n  setDataSets() {\n    const { dataSets, tooltips } = this.props;\n\n    if (tooltips && dataSets && dataSets[0] && dataSets[0].data) {\n      const updatedDataSets = _cloneDeep(dataSets);\n\n      updatedDataSets[0].data = updatedDataSets[0].data.map((value, index) => {\n        const itemsByKey = {};\n        const items = [];\n\n        dataSets.forEach((data, i) => {\n          if (data.data && data.data[value.x]) {\n            itemsByKey[data.id || `dataSet-${i}`] = data.data[value.x];\n            items.push(data.data[value.x]);\n          }\n        });\n\n        return {\n          ...value,\n          _tooltip: tooltips({\n            x: value.x,\n            y: value.y,\n            index,\n            items,\n            itemsByKey,\n            dataSets: _cloneDeep(dataSets)\n          })\n        };\n      });\n\n      return updatedDataSets;\n    }\n\n    return dataSets;\n  }\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  // ToDo: the domain range needs to be updated when additional datasets are added\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply props and return chart/graph legend.\n   *\n   * @returns {object}\n   */\n  getChartLegend() {\n    const { dataSets } = this.props;\n    const legendData = [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.legendLabel) {\n        const legendDataSettings = { symbol: {}, name: dataSet.legendLabel };\n\n        if (dataSet.legendSymbolType) {\n          legendDataSettings.symbol.type = dataSet.legendSymbolType;\n        } else if (dataSet.isThreshold) {\n          legendDataSettings.symbol.type = 'threshold';\n        }\n\n        if (dataSet.themeColor) {\n          legendDataSettings.symbol.fill = dataSet.themeColor;\n        } else if (dataSet.stroke) {\n          legendDataSettings.symbol.fill = dataSet.stroke;\n        } else if (dataSet.fill) {\n          legendDataSettings.symbol.fill = dataSet.fill;\n        }\n\n        legendData.push(legendDataSettings);\n      }\n    });\n\n    return {\n      legendData,\n      legendOrientation: 'horizontal',\n      legendPosition: 'bottom-left',\n      legendComponent: <ChartLegend borderPadding={{ top: 20 }} />\n    };\n  }\n\n  /**\n   * Return a chart/graph container component. Aids in aggregated tooltips.\n   *\n   * @returns {Node}\n   */\n  static getContainerComponent() {\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const containerComponentProps = {\n      constrainToVisibleArea: true,\n      cursorDimension: 'x',\n      voronoiDimension: 'x',\n      voronoiPadding: 50,\n      mouseFollowTooltips: true\n    };\n\n    containerComponentProps.labelComponent = (\n      <VictoryPortal>\n        <ChartTooltip pointerLength={0} centerOffset={{ x: tooltip => tooltip.flyoutWidth / 2 + 5, y: 0 }} />\n      </VictoryPortal>\n    );\n\n    containerComponentProps.labels = ({ datum }) =>\n      (/^chartArea-0/.test(datum.childName) && datum._tooltip) || datum.tooltip || undefined;\n\n    return {\n      containerComponent: <VictoryVoronoiCursorContainer {...containerComponentProps} />\n    };\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const dataSets = this.setDataSets();\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const chartLegendProps = this.getChartLegend();\n    const containerComponent = (maxY > 0 && ChartArea.getContainerComponent()) || {};\n    const chartProps = { padding, ...chartLegendProps, ...chartDomain, ...containerComponent };\n\n    /**\n     * FixMe: PFCharts or Victory, unable to return null or empty content.\n     * General practice of returning \"null\" shouldn't necessarily melt the\n     * graph. To avoid issues we return an empty array\n     */\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{padding, xAxisTickFormat: Function, themeColor: string, yAxisTickFormat: Function,\n *     domain: object|Array, dataSets: object, xAxisFixLabelOverlap: boolean, tooltips: Function,\n *     xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          tooltip: PropTypes.string,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  tooltips: PropTypes.func,\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{padding: {top: number, left: number, bottom: number, right: number}, xAxisTickFormat: null,\n *     themeColor: string, yAxisTickFormat: null, domain: object, dataSets: Array, xAxisFixLabelOverlap: boolean,\n *     tooltips: null, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  tooltips: null,\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardHead, CardActions, CardBody } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connectTranslate, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { rhsmApiTypes, RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport { graphCardTypes } from './graphCardTypes';\nimport ChartArea from '../chartArea/chartArea';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphQuery, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(graphQuery, prevProps.graphQuery)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, graphQuery, isDisabled, productId } = this.props;\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const query = {\n        [rhsmApiTypes.RHSM_API_QUERY_START_DATE]: startDate.toISOString(),\n        [rhsmApiTypes.RHSM_API_QUERY_END_DATE]: endDate.toISOString(),\n        ...graphQuery\n      };\n\n      getGraphReportsCapacity(productId, query);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM,\n      viewId,\n      [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: value\n    });\n  };\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, graphQuery, selectOptionsType, t, productShortLabel } = this.props;\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: updatedGranularity\n      });\n\n    const tooltips = ({ itemsByKey }) =>\n      graphCardHelpers.getTooltips({\n        itemsByKey,\n        granularity: updatedGranularity,\n        product: productShortLabel\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(updatedGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat,\n      tooltips\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.legendSymbolType = 'dash';\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 2.5;\n          tempFiltered.legendLabel = t(`curiosity-graph.thresholdLabel`);\n        } else {\n          tempFiltered.legendLabel = t(`curiosity-graph.${key}Label`, { product: productShortLabel });\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return <ChartArea key={helpers.generateId()} {...chartAreaProps} dataSets={filteredGraphData(graphData)} />;\n  }\n\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, graphQuery, isDisabled, selectOptionsType, pending, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    return (\n      <Card className=\"curiosity-usage-graph fadein\">\n        <CardHead>\n          <h2>{cardTitle}</h2>\n          <CardActions>\n            {children}\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onGranularitySelect}\n              options={options}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHead>\n        <CardBody>\n          <div className={`curiosity-skeleton-container ${(error && 'blur') || ''}`}>\n            {pending && (\n              <React.Fragment>\n                <Skeleton size={SkeletonSize.xs} />\n                <Skeleton size={SkeletonSize.sm} />\n                <Skeleton size={SkeletonSize.md} />\n                <Skeleton size={SkeletonSize.lg} />\n              </React.Fragment>\n            )}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, pending: boolean, error: boolean, graphQuery: object, cardTitle: string,\n *     filterGraphData: Array, getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  productShortLabel: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  selectOptionsType: 'default',\n  t: helpers.noopTranslate,\n  productShortLabel: '',\n  viewId: 'graphCard'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\nconst ConnectedGraphCard = connectTranslate(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_SLA_TYPES as SLA_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = (optionsType = 'sla') => {\n  if (optionsType === 'sla') {\n    return {\n      selected: null,\n      options: [\n        {\n          title: translate('curiosity-toolbar.slaPremium'),\n          value: SLA_TYPES.PREMIUM\n        },\n        {\n          title: translate('curiosity-toolbar.slaStandard'),\n          value: SLA_TYPES.STANDARD\n        },\n        {\n          title: translate('curiosity-toolbar.slaSelfSupport'),\n          value: SLA_TYPES.SELF\n        },\n        {\n          title: translate('curiosity-toolbar.slaNone'),\n          value: SLA_TYPES.NONE\n        }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst toolbarTypes = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarTypes as default, toolbarTypes, getOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { DataToolbar, DataToolbarContent, DataToolbarFilter, DataToolbarGroup } from '@patternfly/react-core';\nimport { Select } from '../form/select';\nimport { reduxTypes, store } from '../../redux';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { helpers } from '../../common';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onSlaSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    this.dispatchFilter(reduxTypes.rhsm.SET_GRAPH_SLA_RHSM, { [rhsmApiTypes.RHSM_API_QUERY_SLA]: null });\n  };\n\n  /**\n   * Set SLA filter selection.\n   *\n   * @event onSlaSelect\n   * @param {object} event\n   */\n  onSlaSelect = event => {\n    const { value } = event;\n\n    this.dispatchFilter(reduxTypes.rhsm.SET_GRAPH_SLA_RHSM, { [rhsmApiTypes.RHSM_API_QUERY_SLA]: value });\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {string} type\n   * @param {object} data\n   */\n  dispatchFilter(type, data = {}) {\n    const { viewId } = this.props;\n\n    if (type) {\n      store.dispatch({\n        type,\n        viewId,\n        ...data\n      });\n    }\n  }\n\n  // ToDo: API to provide SLA options from endpoint.\n  /**\n   * Available and selected SLA options.\n   *\n   * @returns {{slaOptionsSelected: Array, slaOptions: object}}\n   */\n  filterSla() {\n    const { graphQuery } = this.props;\n\n    const slaOptions = toolbarTypes.getOptions();\n    const filterSla =\n      typeof graphQuery[rhsmApiTypes.RHSM_API_QUERY_SLA] === 'string' &&\n      slaOptions.options.find(val => val.value === graphQuery[rhsmApiTypes.RHSM_API_QUERY_SLA]);\n\n    const slaOptionsSelected =\n      (filterSla && filterSla.title && [filterSla.title]) || (slaOptions.selected && [slaOptions.selected]) || [];\n\n    return { slaOptions, slaOptionsSelected };\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { slaOptions, slaOptionsSelected } = this.filterSla();\n\n    return (\n      <DataToolbar\n        id=\"curiosity-toolbar\"\n        className=\"pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"xl\"\n        clearAllFilters={this.onClear}\n      >\n        <DataToolbarContent>\n          <DataToolbarGroup variant=\"filter-group\">\n            <DataToolbarFilter\n              chips={slaOptionsSelected}\n              deleteChip={this.onClear}\n              categoryName={t('curiosity-toolbar.slaCategory')}\n            >\n              <Select\n                aria-label={t('curiosity-toolbar.slaCategory')}\n                onSelect={this.onSlaSelect}\n                selectedOptions={slaOptionsSelected}\n                placeholder={t('curiosity-toolbar.slaPlaceholder')}\n                options={slaOptions.options}\n              />\n            </DataToolbarFilter>\n          </DataToolbarGroup>\n        </DataToolbarContent>\n      </DataToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, isDisabled: boolean, graphQuery: object}}\n */\nToolbar.propTypes = {\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_SLA]: PropTypes.string\n  }),\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: Function, isDisabled: boolean, graphQuery: {}}}\n */\nToolbar.defaultProps = {\n  graphQuery: {},\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: helpers.noopTranslate,\n  viewId: 'toolbar'\n};\n\nconst TranslatedToolbar = withTranslation()(Toolbar);\n\nexport { TranslatedToolbar as default, TranslatedToolbar, Toolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { PageLayout, PageHeader, PageSection, PageToolbar } from '../pageLayout/pageLayout';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { connectTranslate, reduxSelectors } from '../../redux';\nimport GraphCard from '../graphCard/graphCard';\nimport { Select } from '../form/select';\nimport Toolbar from '../toolbar/toolbar';\nimport { helpers } from '../../common';\n\n/**\n * An OpenShift encompassing view.\n *\n * @augments React.Component\n * @fires onSelect\n */\nclass OpenshiftView extends React.Component {\n  state = {\n    option: null,\n    filters: []\n  };\n\n  componentDidMount() {\n    const { initialOption } = this.props;\n    this.onSelect({ value: initialOption });\n  }\n\n  /**\n   * Apply a selected filtered value.\n   *\n   * @event onSelect\n   * @param {object} event\n   */\n  onSelect = (event = {}) => {\n    const { option } = this.state;\n    const { initialFilters } = this.props;\n    const { value } = event;\n\n    if (value !== option) {\n      const filters = initialFilters.filter(val => new RegExp(value, 'i').test(val.id));\n      this.setState({\n        option,\n        filters\n      });\n    }\n  };\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  renderSelect() {\n    const { option } = this.state;\n    const { initialOption } = this.props;\n    const options = [\n      { title: 'Cores', value: 'cores' },\n      { title: 'Sockets', value: 'sockets' }\n    ];\n\n    return <Select onSelect={this.onSelect} options={options} selectedOptions={option || initialOption} />;\n  }\n\n  /**\n   * Render an OpenShift view.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { filters } = this.state;\n    const { graphQuery, routeDetail, t, viewId } = this.props;\n\n    return (\n      <PageLayout>\n        <PageHeader>{t('curiosity-view.openshift', helpers.UI_DISPLAY_CONFIG_NAME)}</PageHeader>\n        <PageToolbar>\n          <Toolbar graphQuery={graphQuery} viewId={viewId} />\n        </PageToolbar>\n        <PageSection>\n          <GraphCard\n            key={routeDetail.pathParameter}\n            filterGraphData={filters}\n            graphQuery={graphQuery}\n            productId={routeDetail.pathParameter}\n            viewId={viewId}\n            cardTitle={t('curiosity-graph.cardHeading')}\n            productShortLabel={viewId}\n          >\n            {this.renderSelect()}\n          </GraphCard>\n        </PageSection>\n      </PageLayout>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{initialFilters: Array, initialOption: string, viewId: string, t: Function, routeDetail: object, graphQuery: object}}\n */\nOpenshiftView.propTypes = {\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)])\n  }),\n  initialOption: PropTypes.oneOf(['cores', 'sockets']),\n  initialFilters: PropTypes.array,\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    pathId: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    })\n  }).isRequired,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{initialFilters: Array, initialOption: string, viewId: string, t: Function, graphQuery: object}}\n */\nOpenshiftView.defaultProps = {\n  graphQuery: {\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  initialOption: 'cores',\n  initialFilters: [\n    { id: 'cores', fill: chartColorBlueLight.value, stroke: chartColorBlueDark.value },\n    { id: 'sockets', fill: chartColorBlueLight.value, stroke: chartColorBlueDark.value },\n    { id: 'thresholdSockets' },\n    { id: 'thresholdCores' }\n  ],\n  t: helpers.noopTranslate,\n  viewId: 'OpenShift'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.view.makeView(OpenshiftView.defaultProps);\n\nconst ConnectedOpenshiftView = connectTranslate(makeMapStateToProps)(OpenshiftView);\n\nexport { ConnectedOpenshiftView as default, ConnectedOpenshiftView, OpenshiftView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Brand,\n  Button,\n  Card,\n  CardHead,\n  CardHeadMain,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Flex,\n  FlexItem,\n  FlexBreakpoints,\n  FlexModifiers,\n  Form,\n  ActionGroup,\n  Spinner,\n  Title\n} from '@patternfly/react-core';\nimport { connectTranslate, reduxActions } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { PageLayout } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport graphPng2x from '../../images/graph2x.png';\nimport graphPng4x from '../../images/graph4x.png';\n\n/**\n * An account opt-in view.\n *\n * @augments React.Component\n * @fires onSubmitOptIn\n */\nclass OptinView extends React.Component {\n  /**\n   * Submit and update account opt-in.\n   *\n   * @event onSubmitOptIn\n   */\n  onSubmitOptIn = () => {\n    const { updateAccountOptIn } = this.props;\n    updateAccountOptIn();\n  };\n\n  /**\n   * Render opt-in form states.\n   *\n   * @returns {Node}\n   */\n  renderOptinForm() {\n    const { error, fulfilled, pending, session, t } = this.props;\n    const disableButton = session.status !== 403;\n\n    if (pending) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              <Spinner size=\"sm\" /> {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n        </Form>\n      );\n    }\n\n    if (error) {\n      return (\n        <p>\n          {translate('curiosity-optin.cardIsErrorDescription', { appName: helpers.UI_DISPLAY_NAME }, [\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              target=\"_blank\"\n              href=\"https://access.redhat.com/account-team\"\n            />\n          ])}\n        </p>\n      );\n    }\n\n    if (disableButton || fulfilled) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              {t('curiosity-optin.buttonIsActive', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n          {fulfilled && <p>{t('curiosity-optin.cardIsActiveDescription')}</p>}\n        </Form>\n      );\n    }\n\n    return (\n      <Form>\n        <ActionGroup>\n          <Button variant=\"primary\" onClick={this.onSubmitOptIn}>\n            {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n          </Button>\n        </ActionGroup>\n      </Form>\n    );\n  }\n\n  /**\n   * Render tour copy and button.\n   *\n   * @returns {Node}\n   */\n  renderTour() {\n    const { t } = this.props;\n\n    return (\n      <Card className=\"curiosity-optin-tour\">\n        <CardHead>\n          <CardHeadMain>\n            <Brand\n              srcSet={`${graphPng4x} 1064w, ${graphPng2x} 600w`}\n              src={graphPng4x}\n              alt={t('curiosity-optin.tourTitleImageAlt')}\n              aria-hidden\n              className=\"curiosity-optin-image\"\n            />\n          </CardHeadMain>\n        </CardHead>\n        <CardHeader>\n          <Title headingLevel=\"h3\" size=\"2xl\">\n            {t('curiosity-optin.tourTitle')}\n          </Title>\n        </CardHeader>\n        <CardBody>{t('curiosity-optin.tourDescription')}</CardBody>\n        <CardFooter>\n          <Button variant=\"secondary\" className=\"uxui-curiosity__button-tour\">\n            {t('curiosity-optin.buttonTour')}\n          </Button>\n        </CardFooter>\n      </Card>\n    );\n  }\n\n  /**\n   * Render opt-in.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { t } = this.props;\n\n    return (\n      <PageLayout>\n        <Card>\n          <Flex\n            breakpointMods={[\n              { modifier: FlexModifiers.column },\n              { modifier: FlexModifiers.row, breakpoint: FlexBreakpoints.md }\n            ]}\n          >\n            <Flex breakpointMods={[{ modifier: FlexModifiers['flex-2'] }]}>\n              <FlexItem>\n                <CardHeader key=\"heading1Title\">\n                  <Title size=\"2xl\">{t('curiosity-optin.cardTitle', { appName: helpers.UI_DISPLAY_NAME })}</Title>\n                </CardHeader>\n                <CardBody key=\"heading1Desc\">\n                  {t('curiosity-optin.cardDescription', { appName: helpers.UI_DISPLAY_NAME })}\n                </CardBody>\n\n                <CardHeader key=\"heading2Title\">\n                  <Title headingLevel=\"h2\" size=\"xl\">\n                    {t('curiosity-optin.cardSeeTitle')}\n                  </Title>\n                </CardHeader>\n                <CardBody key=\"heading2Desc\">{t('curiosity-optin.cardSeeDescription')}</CardBody>\n\n                <CardHeader key=\"heading3Title\">\n                  <Title headingLevel=\"h2\" size=\"xl\">\n                    {t('curiosity-optin.cardReportTitle')}\n                  </Title>\n                </CardHeader>\n                <CardBody key=\"heading3Desc\">{t('curiosity-optin.cardReportDescription')}</CardBody>\n\n                <CardHeader key=\"heading4Title\">\n                  <Title headingLevel=\"h2\" size=\"xl\">\n                    {t('curiosity-optin.cardFilterTitle')}\n                  </Title>\n                </CardHeader>\n                <CardBody key=\"heading4Desc\">{t('curiosity-optin.cardFilterDescription')}</CardBody>\n\n                <CardFooter>{this.renderOptinForm()}</CardFooter>\n              </FlexItem>\n            </Flex>\n            <Flex\n              breakpointMods={[{ modifier: FlexModifiers['flex-1'] }, { modifier: FlexModifiers['align-self-center'] }]}\n            >\n              <FlexItem>\n                <CardBody>{this.renderTour()}</CardBody>\n              </FlexItem>\n            </Flex>\n          </Flex>\n        </Card>\n      </PageLayout>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{t: Function, session: object, updateAccountOptIn: Function, pending: boolean, fulfilled: boolean,\n *     error: boolean}}\n */\nOptinView.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  pending: PropTypes.bool,\n  session: PropTypes.shape({\n    status: PropTypes.number\n  }),\n  t: PropTypes.func,\n  updateAccountOptIn: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: Function, session: {status: null}, updateAccountOptIn: Function, pending: boolean,\n *     fulfilled: boolean, error: boolean}}\n */\nOptinView.defaultProps = {\n  error: false,\n  fulfilled: false,\n  pending: false,\n  session: {\n    status: null\n  },\n  t: helpers.noopTranslate,\n  updateAccountOptIn: helpers.noop\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  updateAccountOptIn: query => dispatch(reduxActions.user.updateAccountOptIn(query))\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = ({ user }) => ({ ...user.optin, session: user.session });\n\nconst ConnectedOptinView = connectTranslate(mapStateToProps, mapDispatchToProps)(OptinView);\n\nexport { ConnectedOptinView as default, ConnectedOptinView, OptinView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { PageLayout, PageHeader, PageSection, PageToolbar } from '../pageLayout/pageLayout';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { connectTranslate, reduxSelectors } from '../../redux';\nimport GraphCard from '../graphCard/graphCard';\nimport Toolbar from '../toolbar/toolbar';\nimport { helpers } from '../../common';\n\n/**\n * A Red Hat Enterprise Linux encompassing view, and system architectures.\n *\n * @augments React.Component\n */\nclass RhelView extends React.Component {\n  componentDidMount() {}\n\n  /**\n   * Render a RHEL view.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { graphQuery, initialFilters, routeDetail, t, viewId } = this.props;\n\n    return (\n      <PageLayout>\n        <PageHeader>{t('curiosity-view.rhel', helpers.UI_DISPLAY_CONFIG_NAME)}</PageHeader>\n        <PageToolbar>\n          <Toolbar graphQuery={graphQuery} viewId={viewId} />\n        </PageToolbar>\n        <PageSection>\n          <GraphCard\n            key={routeDetail.pathParameter}\n            filterGraphData={initialFilters}\n            graphQuery={graphQuery}\n            productId={routeDetail.pathParameter}\n            viewId={viewId}\n            cardTitle={t('curiosity-graph.socketsHeading')}\n            productShortLabel={viewId}\n          />\n        </PageSection>\n      </PageLayout>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{initialFilters: Array, viewId: string, t: Function, routeDetail: object, graphQuery: object}}\n */\nRhelView.propTypes = {\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)])\n  }),\n  initialFilters: PropTypes.array,\n  routeDetail: PropTypes.shape({\n    pathParameter: PropTypes.string.isRequired,\n    pathId: PropTypes.string.isRequired,\n    routeItem: PropTypes.shape({\n      title: PropTypes.string\n    })\n  }).isRequired,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{initialFilters: Array, viewId: string, t: Function, graphQuery: object}}\n */\nRhelView.defaultProps = {\n  graphQuery: {\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  initialFilters: [\n    { id: 'physicalSockets', fill: chartColorBlueLight.value, stroke: chartColorBlueDark.value },\n    { id: 'hypervisorSockets', fill: chartColorCyanLight.value, stroke: chartColorCyanDark.value },\n    { id: 'cloudSockets', fill: chartColorPurpleLight.value, stroke: chartColorPurpleDark.value },\n    { id: 'thresholdSockets' }\n  ],\n  t: helpers.noopTranslate,\n  viewId: 'RHEL'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.view.makeView(RhelView.defaultProps);\n\nconst ConnectedRhelView = connectTranslate(makeMapStateToProps)(RhelView);\n\nexport { ConnectedRhelView as default, ConnectedRhelView, RhelView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Title\n} from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport { connectTranslate } from '../../redux';\nimport subscriptionsSvg from '../../images/subscriptions.svg';\n\n/**\n * FixMe: Patternfly EmptyStateIcon can't pass a basic image\n * Requires the use of function based component syntax\n */\n/**\n * FixMe: Patternfly EmptyStateBody and Title appear to throw an error on translate string replacement\n * Wrap with a fragment to pass.\n */\n/**\n * Render a user guided tour view.\n *\n * @returns {Node} Node containing tour view.\n */\nconst TourView = ({ session, t }) => (\n  <PageLayout>\n    <PageHeader>{helpers.UI_DISPLAY_CONFIG_NAME}</PageHeader>\n    <PageSection>\n      <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n        <img\n          src={subscriptionsSvg}\n          className=\"curiosity-emptystate-img-icon\"\n          alt={t('curiosity-tour.emptyStateIconAlt', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          aria-hidden\n        />\n        <Title headingLevel=\"h5\" size=\"lg\">\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateTitle', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </Title>\n        <EmptyStateBody>\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateDescription', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n            {session.status !== 418 &&\n              ` ${t('curiosity-tour.emptyStateDescriptionTour', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}`}\n          </React.Fragment>\n        </EmptyStateBody>\n        <EmptyStateBody>\n          <React.Fragment>\n            {t('curiosity-tour.emptyStateDescriptionExtended', { appName: helpers.UI_DISPLAY_CONFIG_NAME })}\n          </React.Fragment>\n        </EmptyStateBody>\n        {(session.status === 418 && (\n          <Button\n            className=\"uxui-curiosity__button-learn\"\n            variant=\"primary\"\n            component=\"a\"\n            target=\"_blank\"\n            href=\"https://access.redhat.com/products/subscription-central\"\n          >\n            {t('curiosity-tour.emptyStateLinkLearnMore')}\n          </Button>\n        )) || (\n          <Button className=\"uxui-curiosity__button-tour\" variant=\"primary\">\n            {t('curiosity-tour.emptyStateButton')}\n          </Button>\n        )}\n        <EmptyStateSecondaryActions>\n          {session.status !== 418 && (\n            <Button\n              component=\"a\"\n              variant=\"link\"\n              target=\"_blank\"\n              href=\"https://access.redhat.com/products/subscription-central\"\n            >\n              {t('curiosity-tour.emptyStateLinkLearnMore')}\n            </Button>\n          )}\n          <Button component=\"a\" variant=\"link\" target=\"_blank\" href=\"https://access.redhat.com/account-team\">\n            {t('curiosity-tour.emptyStateLinkContactUs')}\n          </Button>\n        </EmptyStateSecondaryActions>\n      </EmptyState>\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{t: Function, session: object}}\n */\nTourView.propTypes = {\n  session: PropTypes.shape({\n    status: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: Function, session: {status: null}}}\n */\nTourView.defaultProps = {\n  session: {\n    status: null\n  },\n  t: helpers.noopTranslate\n};\n\nconst mapStateToProps = state => ({ session: state.user.session });\n\nconst ConnectedTourView = connectTranslate(mapStateToProps)(TourView);\n\nexport { ConnectedTourView as default, ConnectedTourView, TourView };\n","import path from 'path';\nimport { helpers } from '../../common/helpers';\nimport OpenshiftView from '../openshiftView/openshiftView';\nimport OptinView from '../optinView/optinView';\nimport RhelView from '../rhelView/rhelView';\nimport TourView from '../tourView/tourView';\nimport { RHSM_API_PATH_ID_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformLandingRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/');\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformModalRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = [\n  {\n    to: '/rhel-sw/all',\n    redirect: true,\n    component: RhelView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'rhel-sw',\n    to: '/rhel-sw/:variant',\n    component: RhelView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'openshift-sw',\n    to: '/openshift-sw',\n    component: OpenshiftView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'soon',\n    to: '/soon',\n    component: TourView,\n    exact: true,\n    render: true,\n    disabled: helpers.UI_DISABLED\n  },\n  {\n    id: 'optin',\n    to: '/optin',\n    component: OptinView,\n    exact: true,\n    render: true,\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED\n  }\n];\n\n/**\n * Return an array of objects that describes navigation against API product IDs.\n *\n * @returns {Array}\n */\nconst navigation = [\n  {\n    id: 'all',\n    path: '/rhel-sw/all',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL,\n    default: true\n  },\n  {\n    id: 'arm',\n    path: '/rhel-sw/arm',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_ARM\n  },\n  {\n    id: 'ibmpower',\n    path: '/rhel-sw/ibmpower',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER\n  },\n  {\n    id: 'ibmz',\n    path: '/rhel-sw/ibmz',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z\n  },\n  {\n    id: 'x86',\n    path: '/rhel-sw/x86',\n    pathId: 'rhel-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.RHEL_X86\n  },\n  {\n    id: 'openshift-sw',\n    path: '/openshift-sw',\n    pathId: 'openshift-sw',\n    pathParameter: RHSM_API_PATH_ID_TYPES.OPENSHIFT\n  }\n];\n\nconst routerTypes = {\n  appName,\n  navigation,\n  platformLandingRedirect,\n  platformModalRedirect,\n  routes\n};\n\nexport {\n  routerTypes as default,\n  routerTypes,\n  appName,\n  navigation,\n  platformLandingRedirect,\n  platformModalRedirect,\n  routes\n};\n","import { helpers } from '../../common/helpers';\nimport { routes, navigation } from './routerTypes';\n\n/**\n * Return an assumed dynamic route baseName directory\n * based on a predictable platform directory depth of\n * /[OPTIONAL]/[environment]/[APP NAME]\n *\n * @param {object} params\n * @property {string} pathName\n * @property {string} pathPrefix\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName, pathPrefix }) => {\n  const path = pathName.split('/');\n  path.shift();\n  const pathSlice = pathPrefix && new RegExp(path[0]).test(pathPrefix) ? 2 : 1;\n\n  return `/${path.slice(0, pathSlice).join('/')}`;\n};\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName =\n  (helpers.TEST_MODE && '/') ||\n  (helpers.DEV_MODE && '/') ||\n  dynamicBaseName({ pathName: window.location.pathname, pathPrefix: helpers.UI_DEPLOY_PATH_PREFIX });\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Return an object matching a specific navigation object.\n *\n * @param {object} params\n * @property {string} id\n * @property {string} pathname\n * @property {boolean} returnDefault\n * @returns {object}\n */\nconst getNavigationDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const defaultItem = returnDefault && navigation.find(item => item.default === true);\n  let navigationItem;\n\n  if (id) {\n    navigationItem = navigation.find(item => item.id === id);\n  }\n\n  if (!navigationItem && pathname) {\n    navigationItem =\n      navigation.find(item => item.path.replace(/\\/$/, '') === pathname.replace(/\\/$/, '')) ||\n      (returnDefault && defaultItem);\n  }\n\n  if (!navigationItem && returnDefault) {\n    navigationItem = defaultItem;\n  }\n\n  return { ...(navigationItem || {}) };\n};\n\n/**\n * Return an object matching a specific, or the first generic route.\n *\n * @param {object} params\n * @property {string} id\n * @property {string} pathname\n * @returns {object}\n */\nconst getRouteDetail = ({ id = null, pathname = null }) => {\n  let routeItem;\n\n  if (id) {\n    routeItem = routes.find(value => id === value.id);\n  }\n\n  if (!routeItem && pathname) {\n    routeItem = routes.find(value => pathname === value.to);\n    routeItem = routeItem || routes.find(item => pathname.includes(item.to.split(':')[0]));\n  }\n\n  return { ...(routeItem || {}) };\n};\n\n/**\n * Return an object generated from both generic routes and specific navigation objects.\n * ID is not passed to \"getRouteDetail\" to avoid conflicts between routing and\n * navigation.\n *\n * @param {object} params\n * @property {string} id\n * @property {string} pathname\n * @property {boolean} returnDefault\n * @returns {object}\n */\nconst getNavRouteDetail = ({ id = null, pathname = null, returnDefault = false }) => {\n  const navDetail = getNavigationDetail({ id, pathname, returnDefault });\n  const routeDetail = getRouteDetail({ pathname: navDetail.path || pathname });\n\n  return { ...routeDetail, ...navDetail };\n};\n\nconst routerHelpers = {\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  baseName,\n  dynamicBaseName,\n  getErrorRoute,\n  getNavigationDetail,\n  getRouteDetail,\n  getNavRouteDetail\n};\n","import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Route } from 'react-router-dom';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A routing redirect.\n *\n * @returns {Node}\n */\nconst Redirect = ({ baseName, history, isRedirect, isReplace, url, route }) => {\n  const forceNavigation = urlRoute => {\n    if (!helpers.DEV_MODE && !helpers.TEST_MODE) {\n      if (isReplace) {\n        window.location.replace(urlRoute);\n      } else {\n        window.location.href = urlRoute;\n      }\n    }\n  };\n\n  if (isRedirect === true) {\n    if (route && history) {\n      const routeDetail = routerHelpers.getRouteDetail({ pathname: route });\n      return <Route path=\"*\">{routeDetail && <routeDetail.component />}</Route>;\n    }\n\n    const forcePath = url || (route && path.join(baseName, route));\n    forceNavigation(forcePath);\n\n    return (\n      ((helpers.DEV_MODE || helpers.TEST_MODE) && <React.Fragment>Redirected towards {forcePath}</React.Fragment>) ||\n      null\n    );\n  }\n\n  return null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, isReplace: boolean, history: object, baseName: string, url: string}}\n */\nRedirect.propTypes = {\n  history: PropTypes.object,\n  isRedirect: PropTypes.bool.isRequired,\n  isReplace: PropTypes.bool,\n  url: PropTypes.string,\n  baseName: PropTypes.string,\n  route: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{route: null, isReplace: boolean, history: null, baseName: string, url: null}}\n */\nRedirect.defaultProps = {\n  history: null,\n  isReplace: false,\n  url: null,\n  baseName: routerHelpers.baseName,\n  route: null\n};\n\nconst RoutedRedirect = withRouter(Redirect);\n\nexport { RoutedRedirect as default, RoutedRedirect, Redirect };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport Redirect from './redirect';\nimport { routerHelpers } from './routerHelpers';\nimport { routerTypes } from './routerTypes';\n\n/**\n * Load routes.\n *\n * @augments React.Component\n */\nclass Router extends React.Component {\n  /**\n   * Parse settings array with route options.\n   *\n   * @returns {{redirectRoot: Node, renderRoutes: Array}}\n   */\n  renderRoutes() {\n    const { routes } = this.props;\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    let redirectRoot = null;\n\n    return {\n      renderRoutes: routes.map(item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        if (item.redirect === true) {\n          redirectRoot = <ReactRouterDomRedirect to={item.to} />;\n        }\n\n        if (item.render === true) {\n          return (\n            <Route\n              exact={item.hasParameters || item.exact}\n              key={item.to}\n              path={item.to}\n              strict={item.strict}\n              render={routeProps => {\n                const navDetail = routerHelpers.getNavigationDetail({\n                  pathname: routeProps.location && routeProps.location.pathname,\n                  returnDefault: false\n                });\n\n                return (\n                  <item.component\n                    routeDetail={{\n                      baseName: routerHelpers.baseName,\n                      errorRoute: activateOnErrorRoute,\n                      routes,\n                      routeItem: { ...item },\n                      ...navDetail\n                    }}\n                    {...routeProps}\n                  />\n                );\n              }}\n            />\n          );\n        }\n\n        return (\n          <Route exact={item.hasParameters || item.exact} key={item.to} path={item.to} component={item.component} />\n        );\n      }),\n      redirectRoot\n    };\n  }\n\n  /**\n   * Render router.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { renderRoutes, redirectRoot } = this.renderRoutes();\n\n    return (\n      <Switch>\n        {renderRoutes}\n        {redirectRoot}\n      </Switch>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.boolean,\n      component: PropTypes.any.isRequired,\n      disabled: PropTypes.boolean,\n      exact: PropTypes.boolean,\n      hasParameters: PropTypes.boolean,\n      redirect: PropTypes.boolean,\n      render: PropTypes.boolean,\n      strict: PropTypes.boolean,\n      to: PropTypes.string.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerTypes.routes\n};\n\nexport { Router as default, Router, Redirect, routerHelpers, routerTypes };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState as PfEmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title\n} from '@patternfly/react-core';\nimport { PageLayout, PageHeader } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @returns {Node}\n */\nconst MessageView = ({ icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PfEmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n      {title && (\n        <Title headingLevel=\"h2\" size=\"lg\">\n          {title}\n        </Title>\n      )}\n      {icon && <EmptyStateIcon icon={icon} />}\n      {message && <EmptyStateBody>{message}</EmptyStateBody>}\n    </PfEmptyState>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, message: string, title: string}}\n */\nMessageView.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, message: null, title: null}}\n */\nMessageView.defaultProps = {\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon, LockIcon } from '@patternfly/react-icons';\nimport { connectRouterTranslate, reduxActions } from '../../redux';\nimport { rhsmApiTypes } from '../../types';\nimport { helpers } from '../../common';\nimport { Redirect, routerHelpers, routerTypes } from '../router/router';\nimport MessageView from '../messageView/messageView';\n\n/**\n * An authentication pass-through component.\n *\n * @augments React.Component\n */\nclass Authentication extends Component {\n  appName = routerTypes.appName;\n\n  removeListeners = helpers.noop;\n\n  async componentDidMount() {\n    const { authorizeUser, history, initializeChrome, onNavigation, setAppName, session } = this.props;\n\n    if (!session.authorized) {\n      await authorizeUser();\n    }\n\n    if (helpers.PROD_MODE || helpers.REVIEW_MODE) {\n      initializeChrome();\n      setAppName(this.appName);\n\n      const appNav = onNavigation(event => {\n        const { path } = routerHelpers.getNavRouteDetail({ id: event.navId, returnDefault: true });\n        history.push(path);\n      });\n\n      this.removeListeners = () => {\n        appNav();\n      };\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  /**\n   * Render authenticated children or messaging.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children, session, t } = this.props;\n\n    if (session.authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (session.errorCodes && session.errorCodes.includes(rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES.OPTIN)) ||\n      session.status === 418\n    ) {\n      if (helpers.TEST_MODE) {\n        return <React.Fragment>{session.status} redirect</React.Fragment>;\n      }\n      return <Redirect isRedirect route={routerHelpers.getErrorRoute.to} />;\n    }\n\n    return (\n      <MessageView\n        title={t('curiosity-auth.authorizedTitle', { appName: helpers.UI_DISPLAY_NAME })}\n        message={t('curiosity-auth.authorizedCopy', '...')}\n        icon={LockIcon}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, navigation: Array,\n *     t: Function, children: Node, initializeChrome: Function, session: object, history: object,\n *     setNavigation: Function}}\n */\nAuthentication.propTypes = {\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  initializeChrome: PropTypes.func,\n  onNavigation: PropTypes.func,\n  setAppName: PropTypes.func,\n  session: PropTypes.shape({\n    authorized: PropTypes.bool,\n    error: PropTypes.bool,\n    errorCodes: PropTypes.arrayOf(PropTypes.string),\n    errorMessage: PropTypes.string,\n    pending: PropTypes.bool,\n    status: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, navigation: Array,\n *     t: Function, initializeChrome: Function, session: {authorized: boolean, pending: boolean,\n *     errorMessage: string, error: boolean, status: null}, setNavigation: Function}}\n */\nAuthentication.defaultProps = {\n  authorizeUser: helpers.noop,\n  initializeChrome: helpers.noop,\n  onNavigation: helpers.noop,\n  setAppName: helpers.noop,\n  session: {\n    authorized: false,\n    error: false,\n    errorCodes: [],\n    errorMessage: '',\n    pending: false,\n    status: null\n  },\n  t: helpers.noopTranslate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser()),\n  initializeChrome: () => dispatch(reduxActions.platform.initializeChrome()),\n  onNavigation: callback => dispatch(reduxActions.platform.onNavigation(callback)),\n  setAppName: name => dispatch(reduxActions.platform.setAppName(name))\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = state => ({ session: state.user.session });\n\nconst ConnectedAuthentication = connectRouterTranslate(mapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connectRouter, reduxActions } from '../redux';\nimport { helpers } from '../common/helpers';\nimport { I18n } from './i18n/i18n';\nimport { Router } from './router/router';\nimport Authentication from './authentication/authentication';\n\n/**\n * Application\n *\n * @augments React.Component\n */\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n    getLocale();\n  }\n\n  /**\n   * Render application.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <NotificationsPortal />\n        <Authentication>\n          <Router />\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{locale: object, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\n/**\n * Default props.\n *\n * @type {{locale: {}, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { baseName } from './components/router/routerHelpers';\nimport { store } from './redux';\nimport App from './components/app';\nimport './styles/index.scss';\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter basename={baseName}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
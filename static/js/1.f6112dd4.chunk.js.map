{"version":3,"sources":["components/graphCard/graphCardTypes.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardChartTooltip.js","components/graphCard/graphCardChartLegend.js","components/chartArea/chartArea.js","components/graphCard/graphCard.js","components/c3GraphCard/c3GraphCardHelpers.js","components/c3GraphCard/c3GraphCardLegendItem.js","components/c3Chart/c3Chart.js","components/c3GraphCard/c3GraphCard.js","components/toolbar/toolbarTypes.js","components/toolbar/toolbar.js","components/form/select.js"],"names":["graphCardTypes","getGranularityOptions","optionsType","selected","GRANULARITY_TYPES","DAILY","options","title","translate","value","WEEKLY","MONTHLY","QUARTERLY","getTooltipDate","date","granularity","momentDate","moment","utc","format","dateHelpers","timestampQuarterFormats","yearShort","add","timestampMonthFormats","yearLong","timestampDayFormats","yAxisTickFormatFallback","tick","abs","Math","updatedTick","updatedAbbr","pow","graphCardHelpers","getChartXAxisLabelIncrement","xAxisTickFormat","previousDate","formattedDate","isNewYear","Number","parseInt","year","replace","yAxisTickFormat","locale","helpers","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","length","GraphCardChartTooltip","datum","product","t","header","data","itemsByKey","Object","keys","forEach","key","index","tempDataFacet","color","test","thresholdStringValue","hasInfinite","y","label","dataFactsValue","hasData","push","className","summary","colSpan","map","dataFacet","aria-hidden","style","backgroundColor","defaultProps","noopTranslate","TranslatedGraphCardChartTooltip","withTranslation","GraphCardChartLegend","onClick","id","props","chart","viewId","updatedToggle","toggle","store","dispatch","type","reduxTypes","graph","SET_GRAPH_LEGEND","legend","this","dataSets","isToggled","hide","chartId","isDisabled","isThreshold","labelContent","tooltipContent","checkIsToggled","button","Button","onKeyPress","tabIndex","variant","component","icon","visibility","borderTopColor","Tooltip","content","position","TooltipPosition","top","enableFlip","distance","entryDelay","exitDelay","Fragment","stroke","find","context","renderLegendItem","React","Component","noop","ConnectedGraphCardChartLegend","connectTranslate","ChartArea","state","chartWidth","dataSetsToggle","resizeObserver","containerRef","createRef","tooltipRef","onHide","forceUpdate","onRevert","onToggle","onResizeContainer","current","clientWidth","setState","getIsToggled","setResizeObserve","containerElement","ResizeObserver","window","observe","unobserve","addEventListener","removeEventListener","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","x","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","item","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","filter","set","isStacked","dataSetMaxYStacked","floored","floor","log10","ceil","maxY","chartDomain","chartTooltip","tooltipDataSet","fill","_cloneDeep","mockDatum","tooltip","isValidElement","cloneElement","values","v","VictoryVoronoiCursorContainer","createContainer","parsedTooltipData","getTooltipData","globalContainerBounds","globalTooltipBounds","FlyoutComponent","obj","containerBounds","getBoundingClientRect","tooltipBounds","right","xCoordinate","width","htmlContent","applyParsedTooltipData","height","ref","display","xmlns","cursorDimension","labels","labelComponent","voronoiPadding","chartLegend","legendProps","revert","stacked","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","generateId","name","themeColor","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","tooltipComponent","containerComponent","renderTooltip","undefined","chartProps","Chart","duration","ChartAxis","renderChart","ChartStack","renderLegend","bottom","left","GraphCard","onUpdateGraphData","getGraphReportsCapacity","graphQuery","productId","graphGranularity","rhsmApiTypes","RHSM_API_QUERY_GRANULARITY","getRangedDateTime","startDate","endDate","RHSM_API_QUERY_START_DATE","toISOString","RHSM_API_QUERY_END_DATE","onGranularitySelect","event","rhsm","SET_GRAPH_GRANULARITY_RHSM","prevProps","_isEqual","filterGraphData","graphData","selectOptionsType","productShortLabel","updatedGranularity","chartAreaProps","filtered","tempFiltered","onLoad","chartColorGreenDark","assign","filteredGraphData","cardTitle","children","error","pending","Card","CardHeader","CardTitle","CardActions","aria-label","onSelect","selectedOptions","placeholder","CardBody","Skeleton","size","SkeletonSize","xs","sm","md","lg","UI_DISABLED_GRAPH","makeMapStateToProps","reduxSelectors","graphCard","makeGraphCard","ConnectedGraphCard","query","reduxActions","c3GraphCardHelpers","hiddenDataFacets","converted","colors","columns","groups","names","types","convertTimeSeriesDate","TEST_MODE","local","totalData","filteredValue","pop","configuration","order","a","b","ratio","updatedValue","dataItem","dataValue","unloadBeforeLoad","show","spline","point","grid","axis","xAxisTicks","slice","dateIndex","default","min","outer","C3GraphCardLegendItem","updatedIsToggled","onFocus","getToggle","focus","getColor","onMouseOver","onBlur","onMouseOut","C3Chart","node","generateChart","config","destroy","onComplete","updatedChart","c3","generate","bindto","load","unload","done","C3GraphCard","filteredData","isDataHidden","includes","toolbarTypes","SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","Toolbar","onClear","dispatchFilter","SET_GRAPH_SLA_RHSM","RHSM_API_QUERY_SLA","onSlaSelect","slaOptions","filterSla","val","slaOptionsSelected","collapseListedFiltersBreakpoint","clearAllFilters","ToolbarContent","ToolbarGroup","ToolbarFilter","chips","deleteChip","categoryName","UI_DISABLED_TOOLBAR","TranslatedToolbar","Select","isExpanded","titleSelection","updatedOptions","optionsIndex","findIndex","option","SelectVariant","single","updateSelected","opt","mockUpdatedOptions","mockTarget","selectedIndex","checkbox","checked","mockEvent","target","currentTarget","persist","expanded","formatOptions","_isPlainObject","activateOptions","convertedOption","text","textContent","ariaLabel","pfSelectOptions","selections","isOpen","placeholderText","btoa","data-value","data-title"],"mappings":"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","file":"static/js/1.f6112dd4.chunk.js","sourcesContent":["import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Return a set of options for display in a select/dropdown list.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getGranularityOptionsType = optionsType => {\n  if (optionsType === 'default') {\n    return {\n      selected: GRANULARITY_TYPES.DAILY,\n      options: [\n        { title: translate('curiosity-graph.dropdownDaily'), value: GRANULARITY_TYPES.DAILY, selected: true },\n        { title: translate('curiosity-graph.dropdownWeekly'), value: GRANULARITY_TYPES.WEEKLY },\n        { title: translate('curiosity-graph.dropdownMonthly'), value: GRANULARITY_TYPES.MONTHLY },\n        { title: translate('curiosity-graph.dropdownQuarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst graphCardTypes = {\n  getGranularityOptions: getGranularityOptionsType\n};\n\nexport { graphCardTypes as default, graphCardTypes, getGranularityOptionsType };\n","import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.product\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, product, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      header = getTooltipDate({\n        date: itemsByKey[key]?.data.date,\n        granularity\n      });\n    }\n\n    const tempDataFacet = {\n      color: itemsByKey[key]?.color\n    };\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key]?.data.hasInfinite && t('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel'));\n\n      tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n      tempDataFacet.value = thresholdStringValue;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n      tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product });\n      tempDataFacet.value = dataFactsValue;\n    }\n\n    data.push(tempDataFacet);\n  });\n\n  return (\n    <div className=\"victory-tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  <div\n                    aria-hidden\n                    className=\"legend-icon victory-legend-icon\"\n                    style={{\n                      backgroundColor: dataFacet.color || 'transparent'\n                    }}\n                  />\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, product: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  product: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {}, product: string, t: Function}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  product: '',\n  t: helpers.noopTranslate\n};\n\nconst TranslatedGraphCardChartTooltip = withTranslation()(GraphCardChartTooltip);\n\nexport { TranslatedGraphCardChartTooltip as default, TranslatedGraphCardChartTooltip, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { connectTranslate, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @param {string} options.chartId\n   * @param {string} options.color\n   * @param {boolean} options.isDisabled\n   * @param {boolean} options.isThreshold\n   * @param {string} options.labelContent\n   * @param {string} options.tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"victory-legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: color\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: color\n              }}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *  - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, product, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}Label`, `curiosity-graph.thresholdLabel`], { product, context: product })) ||\n            t([`curiosity-graph.${id}Label`, `curiosity-graph.noLabel`], { product, context: product });\n\n          const tooltipContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}LegendTooltip`, `curiosity-graph.thresholdLegendTooltip`], {\n                product,\n                context: product\n              })) ||\n            t(`curiosity-graph.${id}LegendTooltip`, { product, context: product });\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold,\n            tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum, product: string, t: Function, legend, chart}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  product: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {dataSets: Array}, product: string, viewId: string, t: Function, legend: {},\n *     chart: {hide: Function, toggle: Function, isToggled: Function}}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  product: '',\n  t: helpers.noopTranslate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connectTranslate(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer } from 'victory';\nimport {\n  Chart,\n  ChartAxis,\n  ChartStack,\n  ChartThreshold,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n * @param id\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  dataSetsToggle = {};\n\n  resizeObserver = helpers.noop;\n\n  containerRef = React.createRef();\n\n  tooltipRef = React.createRef();\n\n  componentDidMount() {\n    this.setResizeObserve();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * Consumer exposed, hides chart layer.\n   *\n   * @event onHide\n   * @param {string} id\n   */\n  onHide = id => {\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: true };\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns all chart layers back on.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    this.dataSetsToggle = {};\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns chart layer on/off.\n   *\n   * @event onToggle\n   * @param {string} id\n   * @returns {boolean}\n   */\n  onToggle = id => {\n    const updatedToggle = !this.dataSetsToggle[id];\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: updatedToggle };\n    this.forceUpdate();\n\n    return updatedToggle;\n  };\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { chartWidth } = this.state;\n    const { clientWidth = 0 } = this.containerRef.current || {};\n\n    if (clientWidth !== chartWidth) {\n      this.setState({ chartWidth: clientWidth });\n    }\n  };\n\n  /**\n   * Consumer exposed, determine if chart layer on/off.\n   * Note: Using \"setState\" as related to this exposed check gives the appearance of a race condition.\n   * Using a class property with forceUpdate to bypass.\n   *\n   * @param {string} id\n   * @returns {boolean}\n   */\n  getIsToggled = id => this.dataSetsToggle[id] || false;\n\n  /**\n   * Set ResizeObserver for scenarios where the window.resize event doesn't fire.\n   */\n  setResizeObserve() {\n    const containerElement = this.containerRef.current;\n    const { ResizeObserver } = window;\n\n    if (containerElement && ResizeObserver) {\n      const resizeObserver = new ResizeObserver(this.onResizeContainer);\n      resizeObserver.observe(containerElement);\n      this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n    } else {\n      this.onResizeContainer();\n      window.addEventListener('resize', this.onResizeContainer);\n      this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n    }\n  }\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { dataSetsToggle } = this;\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply data set to custom tooltips.\n   *\n   * @returns {Array}\n   */\n  getTooltipData() {\n    const { dataSetsToggle } = this;\n    const { dataSets, chartTooltip } = this.props;\n    let tooltipDataSet = [];\n\n    if (chartTooltip && dataSets && dataSets[0] && dataSets[0].data) {\n      tooltipDataSet = dataSets[0].data.map((dataSet, index) => {\n        const itemsByKey = {};\n\n        dataSets.forEach(data => {\n          if (!dataSetsToggle[data.id] && data.data && data.data[index]) {\n            itemsByKey[data.id] = {\n              color: data.stroke || data.fill || data.color || '',\n              data: _cloneDeep(data.data[index])\n            };\n          }\n        });\n\n        const mockDatum = {\n          datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey, dataSets: _cloneDeep(dataSets) }\n        };\n\n        return {\n          x: dataSet.x,\n          y: null,\n          itemsByKey,\n          tooltip:\n            (React.isValidElement(chartTooltip) && React.cloneElement(chartTooltip, { ...mockDatum })) ||\n            chartTooltip({ ...mockDatum })\n        };\n      });\n    }\n\n    return tooltipDataSet;\n  }\n\n  /**\n   * ToDo: monitor Victory charts release version increment around Voronoi container attributes.\n   * Future updates could lead to additional unexpected behavior. Victory charts released a patch/fix\n   * around attribute behavior for Voronoi containers. The behavior was already \"unexpected\" in that there appears\n   * to be a need to provide the \"label\" attribute when using the \"labelComponent\" attribute, even if \"label\" is\n   * just a pass-through. Providing `label={() => ''}` was a work-around, that is now `label={obj => obj}`. See\n   * - https://github.com/FormidableLabs/victory/blob/master/CHANGELOG.md#3436-2020-05-18\n   * - https://github.com/FormidableLabs/victory/pull/1581\n   */\n  /**\n   * FixMe: Victory charts voronoi containers throw inaccurate coordinates on large graph widths\n   * Issue is \"patched\" by removing the \"x\" dimension attribute for voronoi.\n   * - https://github.com/RedHatInsights/curiosity-frontend/issues/318\n   */\n  /**\n   * Return a chart/graph tooltip Victory container component to allow custom HTML tooltips.\n   *\n   * @returns {Node}\n   */\n  renderTooltip() {\n    const { dataSetsToggle } = this;\n    const { chartTooltip, dataSets } = this.props;\n\n    if (!chartTooltip || Object.values(dataSetsToggle).filter(v => v === true).length === dataSets.length) {\n      return null;\n    }\n\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const parsedTooltipData = this.getTooltipData();\n    let globalContainerBounds = {};\n    let globalTooltipBounds = {};\n\n    const applyParsedTooltipData = ({ datum }) => {\n      const t = parsedTooltipData.find(v => v.x === datum.x) || {};\n      return t?.tooltip || '';\n    };\n\n    const FlyoutComponent = obj => {\n      const containerRef = this.containerRef.current;\n      const tooltipRef = this.tooltipRef.current;\n      const containerBounds = (containerRef && containerRef.getBoundingClientRect()) || {};\n      const tooltipBounds = (tooltipRef && tooltipRef.getBoundingClientRect()) || {};\n\n      if (containerBounds.right) {\n        globalContainerBounds = containerBounds;\n      }\n\n      if (tooltipBounds.right) {\n        globalTooltipBounds = tooltipBounds;\n      }\n\n      let xCoordinate = obj.x + 10;\n\n      if (\n        globalContainerBounds.right < globalTooltipBounds.right ||\n        obj.x + globalTooltipBounds.width > globalContainerBounds.right / 2\n      ) {\n        xCoordinate = obj.x - 10 - globalTooltipBounds.width;\n      }\n\n      const htmlContent = applyParsedTooltipData({ ...obj });\n\n      if (htmlContent) {\n        return (\n          <g>\n            <foreignObject x={xCoordinate} y={obj.y / 2.2} width=\"100%\" height=\"100%\">\n              <div ref={this.tooltipRef} style={{ display: 'inline-block' }} xmlns=\"http://www.w3.org/1999/xhtml\">\n                {htmlContent}\n              </div>\n            </foreignObject>\n          </g>\n        );\n      }\n\n      return <g />;\n    };\n\n    return (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={<FlyoutComponent />}\n        voronoiPadding={60}\n      />\n    );\n  }\n\n  /**\n   * Return a custom chart/graph legend component.\n   *\n   * @returns {Node}\n   */\n  renderLegend() {\n    const { chartLegend, dataSets } = this.props;\n\n    if (!chartLegend) {\n      return null;\n    }\n\n    const legendProps = {\n      datum: { dataSets: _cloneDeep(dataSets) },\n      chart: {\n        hide: this.onHide,\n        revert: this.onRevert,\n        toggle: this.onToggle,\n        isToggled: this.getIsToggled\n      }\n    };\n\n    return (\n      (React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n      chartLegend({ ...legendProps })\n    );\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const { dataSetsToggle } = this;\n    const { dataSets } = this.props;\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { chartLegend, padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const tooltipComponent = { containerComponent: (maxY >= 0 && this.renderTooltip()) || undefined };\n    const chartProps = { padding, ...chartDomain, ...tooltipComponent };\n\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n        {chartLegend && <div className=\"curiosity-chartarea-description victory-legend\">{this.renderLegend()}</div>}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartLegend: Node|Function, chartTooltip: Node|Function, padding, xAxisTickFormat: Function,\n *     themeColor: string, yAxisTickFormat: Function, domain: object|Array, dataSets: object,\n *     xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartLegend: null, chartTooltip: null, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: null, themeColor: string, yAxisTickFormat: null, domain: object,\n *     dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/cjs/Skeleton';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connectTranslate, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { rhsmApiTypes, RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport { graphCardTypes } from './graphCardTypes';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { ChartArea } from '../chartArea/chartArea';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphQuery, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(graphQuery, prevProps.graphQuery)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, graphQuery, isDisabled, productId } = this.props;\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const query = {\n        [rhsmApiTypes.RHSM_API_QUERY_START_DATE]: startDate.toISOString(),\n        [rhsmApiTypes.RHSM_API_QUERY_END_DATE]: endDate.toISOString(),\n        ...graphQuery\n      };\n\n      getGraphReportsCapacity(productId, query);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM,\n      viewId,\n      [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: value\n    });\n  };\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, graphQuery, selectOptionsType, productShortLabel, viewId } = this.props;\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: updatedGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(updatedGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 2.5;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <ChartArea\n        key={helpers.generateId()}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend chart={chart} datum={datum} product={productShortLabel} viewId={viewId} />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={updatedGranularity} product={productShortLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, graphQuery, isDisabled, selectOptionsType, pending, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    return (\n      <Card className=\"curiosity-usage-graph fadein\">\n        <CardHeader>\n          <CardTitle>{cardTitle}</CardTitle>\n          <CardActions>\n            {children}\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onGranularitySelect}\n              options={options}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHeader>\n        <CardBody>\n          <div className={`curiosity-skeleton-container ${(error && 'blur') || ''}`}>\n            {pending && (\n              <React.Fragment>\n                <Skeleton size={SkeletonSize.xs} />\n                <Skeleton size={SkeletonSize.sm} />\n                <Skeleton size={SkeletonSize.md} />\n                <Skeleton size={SkeletonSize.lg} />\n              </React.Fragment>\n            )}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, pending: boolean, error: boolean, graphQuery: object, cardTitle: string,\n *     filterGraphData: Array, getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  productShortLabel: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  selectOptionsType: 'default',\n  t: helpers.noopTranslate,\n  productShortLabel: '',\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connectTranslate(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import moment from 'moment';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale }) =>\n  new Intl.NumberFormat(locale, { maximumFractionDigits: 1, notation: 'compact', compactDisplay: 'short' }).format(\n    tick\n  );\n\n/**\n * Convert data into a C3 configuration object.\n *\n * @param {object} options\n * @param {Array} options.data\n * @param {string} options.granularity\n * @param {string} options.productShortLabel\n * @returns {{configuration: {padding: {top: number, left: number, bottom: number, right: number},\n *     data: {types: {}, names: {}, columns: Array, x: string, groups: Array, colors: {}},\n *     legend: {show: boolean}, grid: {y: {show: boolean}}, tooltip: {format: {title: Function,\n *     value: Function}, order: Function}, unloadBeforeLoad: boolean,\n *     spline: {interpolation: {type: string}}, axis: {x: {padding: number, tick: {format: Function},\n *     type: string}, y: {padding: {bottom: number}, default: number, min: number,\n *     tick: {show: boolean, outer: boolean, format: Function}}}, point: {show: boolean}},\n *     hiddenDataFacets: Array}}\n */\nconst c3Config = ({ data = [], granularity, productShortLabel }) => {\n  const hiddenDataFacets = [];\n  const converted = {\n    x: 'x',\n    colors: {},\n    columns: [],\n    groups: [[]],\n    names: {},\n    types: {}\n  };\n\n  const convertTimeSeriesDate = value => {\n    const dateStr = (helpers.TEST_MODE && moment.utc(value)) || moment.utc(value).local();\n    return dateStr.format('YYYY-MM-DD');\n  };\n\n  data.forEach(value => {\n    if (/^threshold/.test(value.id)) {\n      converted.colors[value.id] = value.color || chartColorGreenDark.value;\n      converted.types[value.id] = 'step';\n      converted.names[value.id] = translate(`curiosity-graph.thresholdLabel`);\n    } else {\n      converted.colors[value.id] = value.color;\n      converted.types[value.id] = 'area-spline';\n      converted.groups[0].push(value.id);\n      converted.names[value.id] = translate(`curiosity-graph.${value.id}Label`, { product: productShortLabel });\n    }\n\n    converted.columns[0] = ['x'];\n    converted.columns.push([value.id]);\n\n    let totalData = 0;\n\n    value.data.forEach(filteredValue => {\n      converted.columns[0].push(convertTimeSeriesDate(filteredValue.date));\n      converted.columns[converted.columns.length - 1].push(filteredValue.y);\n      totalData += filteredValue.y || 0;\n    });\n\n    // ToDo: need to check for infinite threshold, possibly has data\n    if (totalData <= 0) {\n      converted.columns.pop();\n      hiddenDataFacets.push(value.id);\n    }\n  });\n\n  return {\n    hiddenDataFacets,\n    configuration: {\n      tooltip: {\n        order: (a, b) => converted.columns.indexOf(a.id) - converted.columns.indexOf(b.id),\n        format: {\n          title: date =>\n            getTooltipDate({\n              date,\n              granularity\n            }),\n          value: (value, ratio, id, index) => {\n            const dataItem = data.find(dataValue => id === dataValue.id)?.data[index];\n            let updatedValue;\n\n            if (/^threshold/.test(id)) {\n              updatedValue =\n                (dataItem?.hasInfinite && translate('curiosity-graph.infiniteThresholdLabel')) ||\n                (dataItem?.y ?? translate('curiosity-graph.noDataLabel'));\n            } else {\n              updatedValue =\n                (dataItem?.hasData === false && translate('curiosity-graph.noDataLabel')) || dataItem?.y || 0;\n            }\n\n            return updatedValue;\n          }\n        }\n      },\n      unloadBeforeLoad: true,\n      padding: { left: 40, right: 40, top: 10, bottom: 10 },\n      legend: { show: false },\n      spline: {\n        interpolation: {\n          type: 'monotone'\n        }\n      },\n      data: {\n        ...converted\n      },\n      point: {\n        show: false\n      },\n      grid: {\n        y: {\n          show: true\n        }\n      },\n      axis: {\n        x: {\n          type: 'timeseries',\n          tick: {\n            format: tick => {\n              const xAxisTicks = converted.columns[0].slice(1);\n              const formattedDate = convertTimeSeriesDate(tick);\n              const dateIndex = xAxisTicks.indexOf(formattedDate);\n              const previousDate = dateIndex > -1 && xAxisTicks[dateIndex - 1];\n\n              return xAxisTickFormat({\n                tick: dateIndex,\n                date: formattedDate,\n                previousDate,\n                granularity\n              });\n            }\n          },\n          padding: 0\n        },\n        y: {\n          default: [0, 50],\n          padding: { bottom: 0 },\n          min: 0,\n          tick: {\n            show: false,\n            outer: false,\n            format: tick => (tick === 0 ? '' : yAxisTickFormat({ tick }))\n          }\n        }\n      }\n    }\n  };\n};\n\nconst c3GraphCardHelpers = {\n  c3Config,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  c3GraphCardHelpers as default,\n  c3GraphCardHelpers,\n  c3Config,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\n\n/**\n * A chart/graph legend button.\n *\n * @augments React.Component\n * @fires onFocus\n * @fires onRevert\n * @fires onToggle\n */\nclass C3GraphCardLegendItem extends React.Component {\n  state = { updatedIsToggled: null };\n\n  /**\n   * C3 chart display focus.\n   *\n   * @event onFocus\n   */\n  onFocus = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, chartId, getToggle, isToggled } = this.props;\n\n    if ((typeof getToggle === 'function' && !isToggled) || !updatedIsToggled) {\n      chart.focus(chartId);\n    }\n  };\n\n  /**\n   * C3 chart display revert.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, getToggle, isToggled } = this.props;\n\n    if ((typeof getToggle === 'function' && !isToggled) || !updatedIsToggled) {\n      chart.revert();\n    }\n  };\n\n  /**\n   * C3 chart display toggle.\n   *\n   * @event onToggle\n   */\n  onToggle = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, chartId, getToggle, isToggled } = this.props;\n\n    chart.toggle(chartId);\n\n    if (typeof getToggle === 'function') {\n      getToggle({ isToggled: !isToggled });\n    } else {\n      this.setState({\n        updatedIsToggled: !updatedIsToggled\n      });\n    }\n\n    this.onRevert();\n  };\n\n  /**\n   * C3 chart display config color.\n   *\n   * @returns {string}\n   */\n  getColor = () => {\n    const { chart, chartId } = this.props;\n    return chart.color(chartId);\n  };\n\n  /**\n   * ToDO: evaluate using nullish coalescing operator for checkIsToggled\n   */\n  /**\n   * Render a chart legend item.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedIsToggled } = this.state;\n    const { children, chart, chartId, isDisabled, isThreshold, isToggled, tooltipContent } = this.props;\n    const checkIsToggled =\n      (updatedIsToggled === null && typeof isToggled === 'boolean' && isToggled) || updatedIsToggled || false;\n\n    if (checkIsToggled) {\n      chart.hide(chartId);\n    }\n\n    const button = (\n      <Button\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        onClick={this.onToggle}\n        onFocus={this.onFocus}\n        onMouseOver={this.onFocus}\n        onBlur={this.onRevert}\n        onMouseOut={this.onRevert}\n        onKeyPress={this.onToggle}\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: this.getColor()\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: this.getColor()\n              }}\n            />\n          )\n        }\n      >\n        {children}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *   - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={tooltipContent}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartId: string, children: Node, isDisabled: boolean, tooltipContent: Node, chart: object,\n *    isThreshold: boolean, isToggled: boolean, getToggle: Function}}\n */\nC3GraphCardLegendItem.propTypes = {\n  chart: PropTypes.shape({\n    color: PropTypes.func,\n    focus: PropTypes.func,\n    hide: PropTypes.func,\n    revert: PropTypes.func,\n    toggle: PropTypes.func\n  }),\n  chartId: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  isThreshold: PropTypes.bool,\n  isToggled: PropTypes.bool,\n  tooltipContent: PropTypes.node,\n  getToggle: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, isDisabled: boolean, tooltipContent: null, chart: {hide: Function,\n *    color: Function, focus: Function, revert: Function, toggle: Function}, isThreshold: boolean,\n *    isToggled: boolean, getToggle: Function}}\n */\nC3GraphCardLegendItem.defaultProps = {\n  chart: {\n    color: helpers.noop,\n    focus: helpers.noop,\n    hide: helpers.noop,\n    revert: helpers.noop,\n    toggle: helpers.noop\n  },\n  children: null,\n  isDisabled: false,\n  isThreshold: false,\n  isToggled: false,\n  tooltipContent: null,\n  getToggle: null\n};\n\nexport { C3GraphCardLegendItem as default, C3GraphCardLegendItem };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport c3 from 'c3';\nimport _isEqual from 'lodash/isEqual';\nimport 'c3/c3.min.css';\nimport { helpers } from '../../common';\n\n/**\n * C3 wrapper.\n * Uses aspects from https://github.com/bcbcarl/react-c3js and https://github.com/wuct/react-c3-component\n *\n * @augments React.Component\n */\nclass C3Chart extends React.Component {\n  state = { chart: null };\n\n  node = React.createRef();\n\n  componentDidMount() {\n    this.generateChart();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { config } = this.props;\n\n    if (!_isEqual(prevProps.config.data, config.data)) {\n      this.generateChart();\n    }\n  }\n\n  componentWillUnmount() {\n    const { chart } = this.state;\n    if (chart) {\n      chart.destroy();\n    }\n    this.setState({ chart: null });\n  }\n\n  generateChart() {\n    const { chart } = this.state;\n    const { config, onComplete } = this.props;\n\n    let updatedChart = chart;\n    if (!updatedChart) {\n      updatedChart = c3.generate({ bindto: this.node.current, ...config });\n    }\n\n    updatedChart.load({\n      ...config.data,\n      unload: config.unloadBeforeLoad || false,\n      done: () => {\n        this.setState({ chart: updatedChart }, () => {\n          if (config.done) {\n            config.done({ chart: updatedChart, config });\n          } else {\n            onComplete({ chart: updatedChart, config });\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const { chart } = this.state;\n    const { className, children, config, style } = this.props;\n\n    return (\n      <div className={`curiosity-c3chart ${className}`} style={style}>\n        <div ref={this.node} className=\"curiosity-c3chart-container\" />\n        {chart && (\n          <div className=\"curiosity-c3chart-description\">\n            {(typeof children === 'function' && children({ chart, config })) || children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{children: Node|Function, onComplete: Function, className: string, style: object, config}}\n */\nC3Chart.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  className: PropTypes.string,\n  config: PropTypes.shape({\n    unloadBeforeLoad: PropTypes.bool,\n    data: PropTypes.object,\n    done: PropTypes.func\n  }),\n  onComplete: PropTypes.func,\n  style: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, onComplete: Function, className: null, style: {}, config: {}}}\n */\nC3Chart.defaultProps = {\n  children: null,\n  className: null,\n  config: {},\n  onComplete: helpers.noop,\n  style: {}\n};\n\nexport { C3Chart as default, C3Chart };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/components/cjs/Skeleton';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connectTranslate, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { rhsmApiTypes, RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { c3GraphCardHelpers } from './c3GraphCardHelpers';\nimport { C3GraphCardLegendItem } from './c3GraphCardLegendItem';\nimport { graphCardTypes } from '../graphCard/graphCardTypes';\nimport { C3Chart } from '../c3Chart/c3Chart';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass C3GraphCard extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { graphQuery, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(graphQuery, prevProps.graphQuery)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, graphQuery, isDisabled, productId } = this.props;\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const query = {\n        [rhsmApiTypes.RHSM_API_QUERY_START_DATE]: startDate.toISOString(),\n        [rhsmApiTypes.RHSM_API_QUERY_END_DATE]: endDate.toISOString(),\n        ...graphQuery\n      };\n\n      getGraphReportsCapacity(productId, query);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.rhsm.SET_GRAPH_GRANULARITY_RHSM,\n      viewId,\n      [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: value\n    });\n  };\n\n  /**\n   * Apply a custom legend.\n   *\n   * @param {object} options\n   * @param {Function} options.chart\n   * @param {Array} options.filteredData\n   * @param {string} options.granularity\n   * @param {Array} options.hiddenDataFacets\n   * @returns {Array}\n   */\n  renderLegend({ chart, filteredData = [], granularity, hiddenDataFacets = [] }) {\n    const { state } = this;\n    const { productId, productShortLabel, t } = this.props;\n\n    return filteredData.map(({ id }) => {\n      const isThreshold = /^threshold/.test(id);\n      const isDataHidden = hiddenDataFacets.includes(id);\n      const tooltipContent = (\n        <p>{(isThreshold && t(`curiosity-graph.thresholdLegendTooltip`)) || t(`curiosity-graph.${id}LegendTooltip`)}</p>\n      );\n\n      const getToggle = ({ isToggled }) => this.setState({ [`${productId}-${granularity}-${id}`]: isToggled });\n      const isToggled = state[`${productId}-${granularity}-${id}`] || false;\n\n      return (\n        <C3GraphCardLegendItem\n          key={`legend-${productId}-${granularity}-${id}`}\n          chart={chart}\n          chartId={id}\n          tooltipContent={tooltipContent}\n          isDisabled={isDataHidden}\n          isThreshold={isThreshold}\n          isToggled={isToggled}\n          getToggle={getToggle}\n        >\n          {(isThreshold && t(`curiosity-graph.thresholdLabel`)) ||\n            t(`curiosity-graph.${id}Label`, { product: productShortLabel })}\n        </C3GraphCardLegendItem>\n      );\n    });\n  }\n\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, graphQuery, selectOptionsType, productId, productShortLabel } = this.props;\n\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    if (!graphData || !Object.values(graphData).length) {\n      return null;\n    }\n\n    const filtered = [];\n\n    if (filterGraphData.length) {\n      filterGraphData.forEach(filteredValue => {\n        if (graphData[filteredValue.id]) {\n          filtered.push({ ...filteredValue, data: [...graphData[filteredValue.id]] });\n        }\n      });\n    } else {\n      Object.keys(graphData).forEach(id => {\n        filtered.push({ id, data: [...graphData[id]] });\n      });\n    }\n\n    const { configuration = {}, hiddenDataFacets = [] } = c3GraphCardHelpers.c3Config({\n      data: filtered,\n      granularity: updatedGranularity,\n      productShortLabel\n    });\n\n    return (\n      <C3Chart key={`chart-${productId}-${updatedGranularity}`} config={configuration}>\n        {({ chart }) =>\n          this.renderLegend({\n            chart,\n            filteredData: filtered,\n            granularity: updatedGranularity,\n            hiddenDataFacets\n          })\n        }\n      </C3Chart>\n    );\n  }\n\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, graphQuery, isDisabled, selectOptionsType, pending, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = graphQuery && graphQuery[rhsmApiTypes.RHSM_API_QUERY_GRANULARITY];\n\n    return (\n      <Card className=\"curiosity-usage-graph fadein\">\n        <CardHeader>\n          <CardTitle>{cardTitle}</CardTitle>\n          <CardActions>\n            {children}\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onGranularitySelect}\n              options={options}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHeader>\n        <CardBody>\n          <div className={`curiosity-skeleton-container ${(error && 'blur') || ''}`}>\n            {pending && (\n              <React.Fragment>\n                <Skeleton size={SkeletonSize.xs} />\n                <Skeleton size={SkeletonSize.sm} />\n                <Skeleton size={SkeletonSize.md} />\n                <Skeleton size={SkeletonSize.lg} />\n              </React.Fragment>\n            )}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, pending: boolean, error: boolean, graphQuery: object, cardTitle: string,\n *     filterGraphData: Array, getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nC3GraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      color: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  productShortLabel: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nC3GraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  selectOptionsType: 'default',\n  t: helpers.noopTranslate,\n  productShortLabel: '',\n  viewId: 'graphCard'\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\nconst ConnectedGraphCard = connectTranslate(makeMapStateToProps, mapDispatchToProps)(C3GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, C3GraphCard };\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_SLA_TYPES as SLA_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = (optionsType = 'sla') => {\n  if (optionsType === 'sla') {\n    return {\n      selected: null,\n      options: [\n        {\n          title: translate('curiosity-toolbar.slaPremium'),\n          value: SLA_TYPES.PREMIUM\n        },\n        {\n          title: translate('curiosity-toolbar.slaStandard'),\n          value: SLA_TYPES.STANDARD\n        },\n        {\n          title: translate('curiosity-toolbar.slaSelfSupport'),\n          value: SLA_TYPES.SELF\n        },\n        {\n          title: translate('curiosity-toolbar.slaNone'),\n          value: SLA_TYPES.NONE\n        }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst toolbarTypes = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarTypes as default, toolbarTypes, getOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { Toolbar as PfToolbar, ToolbarContent, ToolbarFilter, ToolbarGroup } from '@patternfly/react-core';\nimport { Select } from '../form/select';\nimport { reduxTypes, store } from '../../redux';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { helpers } from '../../common';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onSlaSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    this.dispatchFilter(reduxTypes.rhsm.SET_GRAPH_SLA_RHSM, { [rhsmApiTypes.RHSM_API_QUERY_SLA]: null });\n  };\n\n  /**\n   * Set SLA filter selection.\n   *\n   * @event onSlaSelect\n   * @param {object} event\n   */\n  onSlaSelect = event => {\n    const { value } = event;\n\n    this.dispatchFilter(reduxTypes.rhsm.SET_GRAPH_SLA_RHSM, { [rhsmApiTypes.RHSM_API_QUERY_SLA]: value });\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {string} type\n   * @param {object} data\n   */\n  dispatchFilter(type, data = {}) {\n    const { viewId } = this.props;\n\n    if (type) {\n      store.dispatch({\n        type,\n        viewId,\n        ...data\n      });\n    }\n  }\n\n  // ToDo: API to provide SLA options from endpoint.\n  /**\n   * Available and selected SLA options.\n   *\n   * @returns {{slaOptionsSelected: Array, slaOptions: object}}\n   */\n  filterSla() {\n    const { graphQuery } = this.props;\n\n    const slaOptions = toolbarTypes.getOptions();\n    const filterSla =\n      typeof graphQuery[rhsmApiTypes.RHSM_API_QUERY_SLA] === 'string' &&\n      slaOptions.options.find(val => val.value === graphQuery[rhsmApiTypes.RHSM_API_QUERY_SLA]);\n\n    const slaOptionsSelected =\n      (filterSla && filterSla.title && [filterSla.title]) || (slaOptions.selected && [slaOptions.selected]) || [];\n\n    return { slaOptions, slaOptionsSelected };\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { slaOptions, slaOptionsSelected } = this.filterSla();\n\n    return (\n      <PfToolbar\n        id=\"curiosity-toolbar\"\n        className=\"pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"xl\"\n        clearAllFilters={this.onClear}\n      >\n        <ToolbarContent>\n          <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilter\n              chips={slaOptionsSelected}\n              deleteChip={this.onClear}\n              categoryName={t('curiosity-toolbar.slaCategory')}\n            >\n              <Select\n                aria-label={t('curiosity-toolbar.slaCategory')}\n                onSelect={this.onSlaSelect}\n                selectedOptions={slaOptionsSelected}\n                placeholder={t('curiosity-toolbar.slaPlaceholder')}\n                options={slaOptions.options}\n              />\n            </ToolbarFilter>\n          </ToolbarGroup>\n        </ToolbarContent>\n      </PfToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, isDisabled: boolean, graphQuery: object}}\n */\nToolbar.propTypes = {\n  graphQuery: PropTypes.shape({\n    [rhsmApiTypes.RHSM_API_QUERY_SLA]: PropTypes.string\n  }),\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: Function, isDisabled: boolean, graphQuery: {}}}\n */\nToolbar.defaultProps = {\n  graphQuery: {},\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: helpers.noopTranslate,\n  viewId: 'toolbar'\n};\n\nconst TranslatedToolbar = withTranslation()(Toolbar);\n\nexport { TranslatedToolbar as default, TranslatedToolbar, Toolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * A wrapper for Patternfly Select. Provides additional event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @param expanded\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected =\n          activateOptions.includes(convertedOption.value) || activateOptions.includes(convertedOption.title);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, placeholder, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isOpen={isExpanded}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(option.title)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{name: string, options: object, selectedOptions: (number|string|Array), variant: (object|string),\n *     className: string, id: string, isDisabled: boolean, placeholder: string, ariaLabel: string,\n *     onSelect: Function}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  placeholder: PropTypes.string,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{name: null, options: Array, selectedOptions: null, variant: SelectVariant.single,\n *     className: string, id: string, isDisabled: boolean, placeholder: string,\n *     ariaLabel: string, onSelect: Function}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  selectedOptions: null,\n  placeholder: 'Select option',\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n"],"sourceRoot":""}
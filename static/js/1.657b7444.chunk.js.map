{"version":3,"sources":["components/form/select.js","components/guestsList/guestsList.js","components/toolbar/toolbarFieldGranularity.js","components/inventorySubscriptions/inventorySubscriptions.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardChartTooltip.js","components/graphCard/graphCardChartLegend.js","components/chartArea/chartArea.js","components/graphCard/graphCard.js","components/form/formHelpers.js","components/form/textInput.js","components/toolbar/toolbarFieldDisplayName.js","components/inventoryList/inventoryList.js","components/tabs/tabs.js","components/inventoryTabs/inventoryTab.js","components/inventoryTabs/inventoryTabs.js","components/toolbar/toolbarHelpers.js","components/toolbar/toolbar.js","components/minHeight/minHeight.js","components/inventoryList/inventoryListHelpers.js","components/pagination/paginationHelpers.js","components/pagination/pagination.js"],"names":["Select","state","isExpanded","options","selected","onSelect","event","titleSelection","props","id","name","variant","updatedOptions","optionsIndex","findIndex","option","title","SelectVariant","single","forEach","index","updateSelected","filter","opt","map","setState","mockUpdatedOptions","_cloneDeep","mockTarget","value","selectedIndex","type","checkbox","checked","mockEvent","target","currentTarget","persist","helpers","noop","onToggle","expanded","this","formatOptions","prevProps","selectedOptions","_isEqual","_isPlainObject","Object","keys","key","activateOptions","convertedOption","text","textContent","label","isSelected","_findIndex","find","activeOption","values","includes","ariaLabel","className","isDisabled","isToggleText","maxHeight","placeholder","toggleIcon","pfSelectOptions","length","aria-label","selections","isOpen","placeholderText","window","btoa","data-value","JSON","stringify","data-title","React","Component","defaultProps","generateId","GuestsList","currentPage","limit","previousData","onUpdateGuestsData","getHostsInventoryGuests","query","updatedQuery","RHSM_API_QUERY_TYPES","LIMIT","OFFSET","apiQueries","parseRhsmQuery","inventoryGuestsQuery","onScroll","numberOfGuests","pending","listData","bottom","scrollHeight","scrollTop","clientHeight","newPage","updatedData","prevState","filterGuestsData","scrollLoader","tableProps","borders","colCount","colWidth","cellWidth","rowCount","TableVariant","compact","session","updatedColumnHeaders","updatedRows","cellData","inventoryListHelpers","parseRowCellsListData","filters","columnHeaders","cells","updatedHeight","style","height","renderLoader","rows","error","perPageDefault","renderTable","makeMapStateToProps","reduxSelectors","guestsList","makeGuestsList","ConnectedGuestsList","connect","dispatch","reduxActions","rhsm","toolbarFieldOptions","FIELD_TYPES","translate","context","ToolbarFieldGranularity","t","viewId","updatedValue","useSelector","view","graphTallyQuery","GRANULARITY","dateHelpers","getRangedDateTime","startDate","endDate","store","reduxTypes","SET_QUERY_RHSM_TYPES","START_DATE","toISOString","END_DATE","DAILY","InventorySubscriptions","onColumnSort","data","updatedDirection","direction","productId","updatedSortColumn","SORT_TYPES","_camelCase","SortByDirection","desc","SORT_DIRECTION_TYPES","DESCENDING","ASCENDING","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","DIRECTION","SORT","DEV_MODE","REVIEW_MODE","console","warn","onPage","offset","perPage","onUpdateInventoryData","getSubscriptionsInventory","filterInventoryData","parseInventoryFilters","onSort","fulfilled","itemCount","updatedPerPage","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","updateOnContent","aria-hidden","isCompact","onPerPage","isFooter","dropDirection","UI_DISABLED_TABLE_SUBSCRIPTIONS","subscriptionsList","makeSubscriptionsList","ConnectedInventorySubscriptions","getTooltipDate","date","granularity","momentDate","moment","utc","GRANULARITY_TYPES","QUARTERLY","format","timestampQuarterFormats","yearShort","add","MONTHLY","timestampMonthFormats","yearLong","WEEKLY","timestampDayFormats","yAxisTickFormatFallback","tick","abs","Math","updatedTick","updatedAbbr","pow","graphCardHelpers","getChartXAxisLabelIncrement","xAxisTickFormat","previousDate","formattedDate","isNewYear","Number","parseInt","year","replace","yAxisTickFormat","locale","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","GraphCardChartTooltip","datum","productLabel","header","itemsByKey","tempDataFacet","color","test","thresholdStringValue","hasInfinite","y","dataFactsValue","hasData","product","push","summary","colSpan","dataFacet","backgroundColor","GraphCardChartLegend","onClick","chart","updatedToggle","toggle","graph","SET_GRAPH_LEGEND","legend","dataSets","isToggled","hide","chartId","isThreshold","labelContent","tooltipContent","checkIsToggled","button","Button","onKeyPress","tabIndex","component","icon","visibility","borderTopColor","Tooltip","content","position","TooltipPosition","top","enableFlip","distance","entryDelay","exitDelay","Fragment","stroke","renderLegendItem","ConnectedGraphCardChartLegend","ChartArea","chartWidth","dataSetsToggle","resizeObserver","containerRef","createRef","tooltipRef","onHide","forceUpdate","onRevert","onResizeContainer","current","clientWidth","getIsToggled","setResizeObserve","containerElement","ResizeObserver","observe","unobserve","addEventListener","removeEventListener","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","x","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","item","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","floored","floor","log10","ceil","maxY","chartDomain","chartTooltip","tooltipDataSet","fill","mockDatum","tooltip","isValidElement","cloneElement","v","VictoryVoronoiCursorContainer","createContainer","parsedTooltipData","getTooltipData","getXCoordinate","width","tooltipWidth","xCoordinate","getYCoordinate","tooltipHeight","yCoordinate","FlyoutComponent","obj","containerBounds","getBoundingClientRect","tooltipBounds","htmlContent","applyParsedTooltipData","ref","display","xmlns","labelComponent","ChartCursorTooltip","flyout","ChartCursorFlyout","flyoutStyle","renderInPortal","cursorDimension","labels","voronoiPadding","mouseFollowTooltips","chartLegend","legendProps","revert","stacked","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","themeColor","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","tooltipComponent","containerComponent","renderTooltip","undefined","chartProps","Chart","duration","ChartAxis","renderChart","ChartStack","renderLegend","left","right","GraphCard","onUpdateGraphData","getGraphReportsCapacity","graphGranularity","getQueryGranularity","filterGraphData","graphData","chartAreaProps","filtered","tempFiltered","onLoad","chartColorGreenDark","assign","filteredGraphData","cardTitle","children","Card","CardHeader","CardTitle","Title","headingLevel","size","CardActions","CardBody","UI_DISABLED_GRAPH","graphCard","makeGraphCard","ConnectedGraphCard","createMockEvent","persistEvent","keyCode","TextInput","onKeyUp","onClear","clonedEvent","onMouseUp","setTimeout","onChange","isReadOnly","updatedName","updatedId","ToolbarFieldDisplayName","currentValue","inventoryHostsQuery","DISPLAY_NAME","onSubmit","submitValue","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","trim","debounced","_debounce","InputGroup","iconVariant","maxLength","InventoryList","getHostsInventory","settings","guestsId","subscriptionManagerId","hasGuests","expandedContent","Bullseye","CardHeaderMain","CardFooter","TableToolbar","UI_DISABLED_TABLE_HOSTS","inventoryList","makeInventoryList","ConnectedInventoryList","Tabs","updatedActiveTab","updatedTabs","onTab","setTabData","tabs","_isEqualWith","valueA","valueB","toString","activeTab","defaultActiveTab","active","Tab","eventKey","TabTitleText","hasOverflowScroll","activeKey","mountOnEnter","unmountOnExit","inset","default","md","Grid","GridItem","span","renderTabs","InventoryTab","InventoryTabs","inventory","SET_INVENTORY_TAB","updatedChildren","Children","toArray","count","UI_DISABLED_TABLE","ConnectedInventoryTabs","toolbarHelpers","optionsType","SLA","SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","USAGE","USAGE_TYPES","DEVELOPMENT","DISASTER","PRODUCTION","UNSPECIFIED","Toolbar","hardFilterReset","dispatchActions","toolbar","SET_ACTIVE_FILTERS","activeFilters","Set","SET_QUERY_CLEAR","clearFilters","SET_FILTER_TYPE","currentFilter","setDispatch","onClearFilter","categoryTitle","categoryValue","updatedActiveFilters","updatedCurrentFilter","onCategorySelect","field","actions","resetPage","updatedActions","Array","isArray","SET_QUERY_RESET_INVENTORY_LIST","getCurrentFilter","optionsSelected","filterOptions","setSelectFilter","ToolbarFilter","chips","deleteChip","categoryName","showToolbarItem","categoryOptions","categoryOptionsSelected","collapseListedFiltersBreakpoint","clearAllFilters","clearFiltersButtonText","ToolbarContent","ToolbarToggleGroup","breakpoint","ToolbarGroup","ToolbarItem","renderSelectFilter","filterType","UI_DISABLED_TOOLBAR","ConnectedToolbar","initialQuery","MinHeight","innerContainerRef","updatedContainerWidth","updateOnResize","setMinHeight","setResizeObserver","reset","overrideMinHeight","minHeight","domElement","innerDomElement","applySortFilters","updatedFilter","hasSort","sortActive","sortDirection","asc","isSortDefault","sortDefaultInitialDirection","applyWrappableFilters","transforms","wrappable","isSortable","isWrappable","updatedCells","allCells","entries","headerUpdated","cellUpdated","cell","PfCellWidth","calculatePageFromOffset","calculateOffsetFromPage","page","Pagination","onSetPage","onPerPageSelect"],"mappings":"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","file":"static/js/1.657b7444.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _findIndex from 'lodash/findIndex';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * A wrapper for Patternfly Select. Provides restructured event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @fires onToggle\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @event onToggle\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        let isSelected;\n\n        if (_isPlainObject(convertedOption.value)) {\n          isSelected = _findIndex(activateOptions, convertedOption.value) > -1;\n\n          if (!isSelected) {\n            const tempSearch = activateOptions.find(activeOption =>\n              Object.values(convertedOption.value).includes(activeOption)\n            );\n            isSelected = !!tempSearch;\n          }\n        } else {\n          isSelected = activateOptions.includes(convertedOption.value);\n        }\n\n        if (!isSelected) {\n          isSelected = activateOptions.includes(convertedOption.title);\n        }\n\n        updatedOptions[index].selected = isSelected;\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, isToggleText, maxHeight, placeholder, toggleIcon, variant } = this.props;\n\n    const pfSelectOptions = {\n      maxHeight\n    };\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select${(!isToggleText && '__no-toggle-text') || ''} ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isOpen={isExpanded}\n        toggleIcon={toggleIcon}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(`${option.title}-${option.value}`)}\n              id={window.btoa(`${option.title}-${option.value}`)}\n              value={option.title}\n              data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{toggleIcon: (Node|Function), className: string, ariaLabel: string, onSelect: Function,\n *     isToggleText: boolean, maxHeight: number, name: string, options: (Array|object),\n *     selectedOptions: (number|string|Array), variant: string, id: string, isDisabled: boolean,\n *     placeholder: string}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  maxHeight: PropTypes.number,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.string,\n  selectedOptions: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]))\n  ]),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{toggleIcon: (Node|Function), className: string, ariaLabel: string, onSelect: Function,\n *     isToggleText: boolean, maxHeight: number, name: string, options: (Array|object),\n *     selectedOptions: (number|string|Array), variant: SelectVariant.single, id: string,\n *     isDisabled: boolean, placeholder: string}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  isToggleText: true,\n  maxHeight: null,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  selectedOptions: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { helpers } from '../../common';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { Loader } from '../loader/loader';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { Table } from '../table/table';\n\n/**\n * ToDo: Consider removing the query prop entirely.\n * The current API doesn't allow setting more than \"offset\" and \"limit\"\n */\n/**\n * ToDo: Review moving the \"onScroll\" layout into a standalone component.\n */\n/**\n * A system inventory guests component.\n *\n * @augments React.Component\n * @fires onUpdateGuestsData\n * @fires onScroll\n */\nclass GuestsList extends React.Component {\n  state = { currentPage: 0, limit: 100, previousData: [] };\n\n  componentDidMount() {\n    this.onUpdateGuestsData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentPage } = this.state;\n\n    if (currentPage !== prevState.currentPage) {\n      this.onUpdateGuestsData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGuestsData\n   */\n  onUpdateGuestsData = () => {\n    const { currentPage, limit } = this.state;\n    const { getHostsInventoryGuests, query, id } = this.props;\n\n    if (id) {\n      const updatedQuery = {\n        ...query,\n        [RHSM_API_QUERY_TYPES.LIMIT]: limit,\n        [RHSM_API_QUERY_TYPES.OFFSET]: currentPage * limit || 0\n      };\n\n      const { inventoryGuestsQuery } = apiQueries.parseRhsmQuery(updatedQuery);\n      getHostsInventoryGuests(id, inventoryGuestsQuery);\n    }\n  };\n\n  /**\n   * Update page state.\n   *\n   * @event onScroll\n   * @param {object} event\n   */\n  onScroll = event => {\n    const { target } = event;\n    const { currentPage, limit, previousData } = this.state;\n    const { numberOfGuests, pending, listData } = this.props;\n\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > (currentPage + 1) * limit && bottom && !pending) {\n      const newPage = currentPage + 1;\n      const updatedData = [...previousData, ...(listData || [])];\n\n      this.setState({\n        previousData: updatedData,\n        currentPage: newPage\n      });\n    }\n  };\n\n  renderLoader() {\n    const { currentPage } = this.state;\n    const { filterGuestsData, listData, pending } = this.props;\n\n    if (currentPage > 0 && pending) {\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n            rowCount: 0,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  }\n\n  /**\n   * ToDo: Consider moving the \"meaning of life\" into the default props on iteration.\n   * For everyone else... move the 42 into default props, possibly the 275.\n   */\n  /**\n   * Render a guests table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { previousData } = this.state;\n    const { filterGuestsData, listData, numberOfGuests, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = [...previousData, ...(listData || [])].map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: filterGuestsData,\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    // Include the table header\n    let updatedHeight = (numberOfGuests + 1) * 42;\n    updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n    return (\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={this.onScroll}\n        >\n          {this.renderLoader()}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render a guest list table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { currentPage } = this.state;\n    const { error, filterGuestsData, listData, numberOfGuests, pending, perPageDefault } = this.props;\n\n    return (\n      <div className={`fadein ${(error && 'blur') || ''}`}>\n        {pending && currentPage === 0 && (\n          <Loader\n            variant=\"table\"\n            tableProps={{\n              borders: false,\n              colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n              colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n              rowCount: numberOfGuests < perPageDefault ? numberOfGuests : perPageDefault,\n              variant: TableVariant.compact\n            }}\n          />\n        )}\n        {((!pending && currentPage === 0) || currentPage > 0) && this.renderTable()}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: object,\n *     pending: boolean, query: object, numberOfGuests: number, perPageDefault: number, id: string,\n *     error: boolean}}\n */\nGuestsList.propTypes = {\n  error: PropTypes.bool,\n  filterGuestsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventoryGuests: PropTypes.func,\n  listData: PropTypes.array,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  pending: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object,\n  session: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: Array,\n *     pending: boolean, query: object, perPageDefault: number, error: boolean}}\n */\nGuestsList.defaultProps = {\n  error: false,\n  filterGuestsData: [],\n  getHostsInventoryGuests: helpers.noop,\n  listData: [],\n  pending: false,\n  perPageDefault: 5,\n  query: {},\n  session: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventoryGuests: (id, query) => dispatch(reduxActions.rhsm.getHostsInventoryGuests(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.guestsList.makeGuestsList();\n\nconst ConnectedGuestsList = connect(makeMapStateToProps, mapDispatchToProps)(GuestsList);\n\nexport { ConnectedGuestsList as default, ConnectedGuestsList, GuestsList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { reduxTypes, store, useSelector } from '../../redux';\nimport { Select } from '../form/select';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as FIELD_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Select field options.\n *\n * @type {{title: (string|Node), value: string, selected: boolean}[]}\n */\nconst toolbarFieldOptions = Object.values(FIELD_TYPES).map(type => ({\n  title: translate('curiosity-toolbar.granularity', { context: type }),\n  value: type,\n  selected: false\n}));\n\n/**\n * Display a granularity field with options.\n *\n * @fires onSelect\n * @param {object} props\n * @param {Array} props.options\n * @param {Function} props.t\n * @param {string} props.value\n * @param {string} props.viewId\n * @returns {Node}\n */\nconst ToolbarFieldGranularity = ({ options, t, value, viewId }) => {\n  const updatedValue = useSelector(\n    ({ view }) => view.graphTallyQuery?.[viewId]?.[RHSM_API_QUERY_TYPES.GRANULARITY],\n    value\n  );\n\n  const updatedOptions = options.map(option => ({ ...option, selected: option.value === updatedValue }));\n\n  /**\n   * On select, dispatch type.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @returns {void}\n   */\n  const onSelect = event => {\n    const { startDate, endDate } = dateHelpers.getRangedDateTime(event.value);\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n        viewId,\n        [RHSM_API_QUERY_TYPES.GRANULARITY]: event.value\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE],\n        viewId,\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString()\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE],\n        viewId,\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString()\n      }\n    ]);\n  };\n\n  return (\n    <Select\n      aria-label={t('curiosity-toolbar.placeholder', { context: 'granularity' })}\n      onSelect={onSelect}\n      options={updatedOptions}\n      selectedOptions={updatedValue}\n      placeholder={t('curiosity-toolbar.placeholder', { context: 'granularity' })}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{viewId: string, t: Function, options: Array, value: string}}\n */\nToolbarFieldGranularity.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      value: PropTypes.any,\n      selected: PropTypes.bool\n    })\n  ),\n  t: PropTypes.func,\n  value: PropTypes.oneOf([...Object.values(FIELD_TYPES)]),\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, options: Array, value: string}}\n */\nToolbarFieldGranularity.defaultProps = {\n  options: toolbarFieldOptions,\n  t: translate,\n  value: FIELD_TYPES.DAILY,\n  viewId: 'toolbarFieldGranularity'\n};\n\nexport { ToolbarFieldGranularity as default, ToolbarFieldGranularity, toolbarFieldOptions };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A subscriptions system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventorySubscriptions extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getSubscriptionsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getSubscriptionsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterInventoryData, listData, query, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n            <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter\n            className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n            aria-hidden={error || !itemCount || false}\n          >\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, listData: Array, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, error: boolean, getSubscriptionsInventory: Function, itemCount: number,\n *     t: Function, filterInventoryData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventorySubscriptions.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getSubscriptionsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, filterInventoryData: Array, listData: Array, session: object, pending: boolean,\n *     fulfilled: boolean, perPageDefault: number, isDisabled: boolean, error: boolean,\n *     getSubscriptionsInventory: Function, itemCount: number}}\n */\nInventorySubscriptions.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterInventoryData: [],\n  getSubscriptionsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getSubscriptionsInventory: (id, query) => dispatch(reduxActions.rhsm.getSubscriptionsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.subscriptionsList.makeSubscriptionsList();\n\nconst ConnectedInventorySubscriptions = connect(makeMapStateToProps, mapDispatchToProps)(InventorySubscriptions);\n\nexport { ConnectedInventorySubscriptions as default, ConnectedInventorySubscriptions, InventorySubscriptions };\n","import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, productLabel, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      header = getTooltipDate({\n        date: itemsByKey[key]?.data.date,\n        granularity\n      });\n    }\n\n    const tempDataFacet = {\n      color: itemsByKey[key]?.color\n    };\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key]?.data.hasInfinite && t('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel'));\n\n      tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n      tempDataFacet.value = thresholdStringValue;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n      tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product: productLabel });\n      tempDataFacet.value = dataFactsValue;\n    }\n\n    data.push(tempDataFacet);\n  });\n\n  return (\n    <div className=\"victory-tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  <div\n                    aria-hidden\n                    className=\"legend-icon victory-legend-icon\"\n                    style={{\n                      backgroundColor: dataFacet.color || 'transparent'\n                    }}\n                  />\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, productLabel: string, t: translate}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  productLabel: '',\n  t: translate\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { connect, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @param {string} options.chartId\n   * @param {string} options.color\n   * @param {boolean} options.isDisabled\n   * @param {boolean} options.isThreshold\n   * @param {string} options.labelContent\n   * @param {string} options.tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"victory-legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: color\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: color\n              }}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *  - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, productLabel, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}Label`, `curiosity-graph.thresholdLabel`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t([`curiosity-graph.${id}Label`, `curiosity-graph.noLabel`], {\n              product: productLabel,\n              context: productLabel\n            });\n\n          const tooltipContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}LegendTooltip`, `curiosity-graph.thresholdLegendTooltip`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t(`curiosity-graph.${id}LegendTooltip`, { product: productLabel, context: productLabel });\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold,\n            tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, legend: object, chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {dataSets: Array}, productLabel: string, viewId: string, t: translate, legend: object,\n *     chart: {hide: Function, toggle: Function, isToggled: Function}}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connect(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer } from 'victory-create-container';\nimport {\n  Chart,\n  ChartAxis,\n  ChartStack,\n  ChartThreshold,\n  ChartThemeColor,\n  ChartArea as PfChartArea,\n  ChartCursorFlyout,\n  ChartCursorTooltip\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: chart redraw flash related to custom tooltips use\n * Removing custom tooltips corrects redraw issues. As a temporary patch, caching at the selector alleviates\n * the symptoms.\n */\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  dataSetsToggle = {};\n\n  resizeObserver = helpers.noop;\n\n  containerRef = React.createRef();\n\n  tooltipRef = React.createRef();\n\n  componentDidMount() {\n    this.setResizeObserve();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * Consumer exposed, hides chart layer.\n   *\n   * @event onHide\n   * @param {string} id\n   */\n  onHide = id => {\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: true };\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns all chart layers back on.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    this.dataSetsToggle = {};\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns chart layer on/off.\n   *\n   * @event onToggle\n   * @param {string} id\n   * @returns {boolean}\n   */\n  onToggle = id => {\n    const updatedToggle = !this.dataSetsToggle[id];\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: updatedToggle };\n    this.forceUpdate();\n\n    return updatedToggle;\n  };\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { chartWidth } = this.state;\n    const { clientWidth = 0 } = this.containerRef.current || {};\n\n    if (clientWidth !== chartWidth) {\n      this.setState({ chartWidth: clientWidth });\n    }\n  };\n\n  /**\n   * Consumer exposed, determine if chart layer on/off.\n   * Note: Using \"setState\" as related to this exposed check gives the appearance of a race condition.\n   * Using a class property with forceUpdate to bypass.\n   *\n   * @param {string} id\n   * @returns {boolean}\n   */\n  getIsToggled = id => this.dataSetsToggle[id] || false;\n\n  /**\n   * Set ResizeObserver for scenarios where the window.resize event doesn't fire.\n   */\n  setResizeObserve() {\n    const containerElement = this.containerRef.current;\n    const { ResizeObserver } = window;\n\n    if (containerElement && ResizeObserver) {\n      const resizeObserver = new ResizeObserver(this.onResizeContainer);\n      resizeObserver.observe(containerElement);\n      this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n    } else {\n      this.onResizeContainer();\n      window.addEventListener('resize', this.onResizeContainer);\n      this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n    }\n  }\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { dataSetsToggle } = this;\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply data set to custom tooltips.\n   *\n   * @returns {Array}\n   */\n  getTooltipData() {\n    const { dataSetsToggle } = this;\n    const { dataSets, chartTooltip } = this.props;\n    let tooltipDataSet = [];\n\n    if (chartTooltip && dataSets && dataSets[0] && dataSets[0].data) {\n      tooltipDataSet = dataSets[0].data.map((dataSet, index) => {\n        const itemsByKey = {};\n\n        dataSets.forEach(data => {\n          if (!dataSetsToggle[data.id] && data.data && data.data[index]) {\n            itemsByKey[data.id] = {\n              color: data.stroke || data.fill || data.color || '',\n              data: _cloneDeep(data.data[index])\n            };\n          }\n        });\n\n        const mockDatum = {\n          datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey, dataSets: _cloneDeep(dataSets) }\n        };\n\n        return {\n          x: dataSet.x,\n          y: null,\n          itemsByKey,\n          tooltip:\n            (React.isValidElement(chartTooltip) && React.cloneElement(chartTooltip, { ...mockDatum })) ||\n            chartTooltip({ ...mockDatum })\n        };\n      });\n    }\n\n    return tooltipDataSet;\n  }\n\n  /**\n   * Return a chart/graph tooltip Victory container component to allow custom HTML tooltips.\n   *\n   * @returns {Node}\n   */\n  renderTooltip() {\n    const { dataSetsToggle } = this;\n    const { chartTooltip, dataSets } = this.props;\n\n    if (!chartTooltip || Object.values(dataSetsToggle).filter(v => v === true).length === dataSets.length) {\n      return null;\n    }\n\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const parsedTooltipData = this.getTooltipData();\n\n    const applyParsedTooltipData = ({ datum }) => {\n      const t = parsedTooltipData.find(v => v.x === datum.x) || {};\n      return t?.tooltip || '';\n    };\n\n    const getXCoordinate = (x, width, tooltipWidth) => {\n      let xCoordinate = x + 10;\n\n      if (x > width / 2) {\n        xCoordinate = x - 10 - tooltipWidth / 2;\n      }\n\n      return xCoordinate;\n    };\n\n    const getYCoordinate = (y, height, tooltipHeight) => {\n      let yCoordinate = y + 10;\n\n      if (y > height / 2) {\n        yCoordinate = y - 10 - tooltipHeight;\n      }\n\n      return yCoordinate;\n    };\n\n    const FlyoutComponent = obj => {\n      const containerRef = this.containerRef.current;\n      const tooltipRef = this.tooltipRef.current;\n      const containerBounds = (containerRef && containerRef.getBoundingClientRect()) || { width: 0, height: 0 };\n      const tooltipBounds = (tooltipRef && tooltipRef.getBoundingClientRect()) || { width: 0, height: 0 };\n      const htmlContent = applyParsedTooltipData({ ...obj });\n\n      if (htmlContent) {\n        return (\n          <g>\n            <foreignObject\n              x={getXCoordinate(obj.x, containerBounds.width, tooltipBounds.width)}\n              y={getYCoordinate(obj.y, containerBounds.height, tooltipBounds.height)}\n              width=\"100%\"\n              height=\"100%\"\n            >\n              <div ref={this.tooltipRef} style={{ display: 'inline-block' }} xmlns=\"http://www.w3.org/1999/xhtml\">\n                {htmlContent}\n              </div>\n            </foreignObject>\n          </g>\n        );\n      }\n\n      return <g />;\n    };\n\n    const labelComponent = (\n      <ChartCursorTooltip\n        flyout={<ChartCursorFlyout />}\n        flyoutStyle={{ fill: 'transparent' }}\n        labelComponent={<FlyoutComponent />}\n        renderInPortal\n      />\n    );\n\n    return (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={labelComponent}\n        voronoiPadding={50}\n        mouseFollowTooltips\n      />\n    );\n  }\n\n  /**\n   * Return a custom chart/graph legend component.\n   *\n   * @returns {Node}\n   */\n  renderLegend() {\n    const { chartLegend, dataSets } = this.props;\n\n    if (!chartLegend) {\n      return null;\n    }\n\n    const legendProps = {\n      datum: { dataSets: _cloneDeep(dataSets) },\n      chart: {\n        hide: this.onHide,\n        revert: this.onRevert,\n        toggle: this.onToggle,\n        isToggled: this.getIsToggled\n      }\n    };\n\n    return (\n      (React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n      chartLegend({ ...legendProps })\n    );\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const { dataSetsToggle } = this;\n    const { dataSets } = this.props;\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { chartLegend, padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const tooltipComponent = { containerComponent: (maxY >= 0 && this.renderTooltip()) || undefined };\n    const chartProps = { padding, ...chartDomain, ...tooltipComponent };\n\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n        {chartLegend && <div className=\"curiosity-chartarea-description victory-legend\">{this.renderLegend()}</div>}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartLegend: Node|Function, chartTooltip: Node|Function, padding, xAxisTickFormat: Function,\n *     themeColor: string, yAxisTickFormat: Function, domain: object|Array, dataSets: object,\n *     xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartLegend: null, chartTooltip: null, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: null, themeColor: string, yAxisTickFormat: null, domain: object,\n *     dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport _isEqual from 'lodash/isEqual';\nimport { connect, reduxActions, reduxSelectors } from '../../redux';\nimport { helpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { ChartArea } from '../chartArea/chartArea';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n    const { [RHSM_API_QUERY_TYPES.START_DATE]: startDate, [RHSM_API_QUERY_TYPES.END_DATE]: endDate } = query;\n\n    if (!isDisabled && graphGranularity && startDate && endDate && productId) {\n      getGraphReportsCapacity(productId, query);\n    }\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, productLabel, query, viewId } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: graphGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(graphGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          strokeWidth: 2,\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 3;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <ChartArea\n        key={`chart_${JSON.stringify(query)}`}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend chart={chart} datum={datum} productLabel={productLabel} viewId={viewId} />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={graphGranularity} productLabel={productLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * ToDo: Evaluate applying a minHeight attr to the MinHeight component graphCard setup\n   * Appears there may be a minor page shift when compared to the prior hard-set min-height\n   * of 410px\n   */\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, isDisabled, pending } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <MinHeight key=\"headerMinHeight\">\n          <CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                {cardTitle}\n              </Title>\n            </CardTitle>\n            <CardActions className={(error && 'blur') || ''}>{children}</CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key=\"bodyMinHeight\">\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && <Loader variant=\"graph\" />}\n              {!pending && this.renderChart()}\n            </div>\n          </CardBody>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productLabel: string, productId: string, pending: boolean, error: boolean, query: object,\n *     cardTitle: string, filterGraphData: Array, getGraphReportsCapacity: Function,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired,\n    [RHSM_API_QUERY_TYPES.START_DATE]: PropTypes.string.isRequired,\n    [RHSM_API_QUERY_TYPES.END_DATE]: PropTypes.string.isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productLabel: string, viewId: string, t: translate,\n *     children: Node, pending: boolean, graphData: object, isDisabled: boolean, error: boolean,\n *     cardTitle: string, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import { helpers } from '../../common/helpers';\n\n/**\n * Create a consistent mock event object.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget, name, id: *, persist: Function, value, target}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput as PfTextInput } from '@patternfly/react-core';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly TextInput. Provides restructured event data,\n * and an onClear event for the search type.\n *\n * @augments React.Component\n * @fires onKeyUp\n * @fires onMouseUp\n * @fires onChange\n */\nclass TextInput extends React.Component {\n  state = {\n    updatedValue: null\n  };\n\n  /**\n   * onKeyUp event, provide additional functionality for onClear event.\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  onKeyUp = event => {\n    const { onClear, onKeyUp, type } = this.props;\n    const { currentTarget, keyCode } = event;\n    const clonedEvent = { ...event };\n\n    onKeyUp(createMockEvent(event, true));\n\n    if (keyCode === 27) {\n      if (type === 'search' && currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      } else {\n        this.setState({ updatedValue: '' }, () => {\n          onClear(\n            createMockEvent({ ...clonedEvent, ...{ currentTarget: { ...clonedEvent.currentTarget, value: '' } } })\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * onMouseUp event, provide additional functionality for onClear event.\n   *\n   * @event onMouseUp\n   * @param {object} event\n   */\n  onMouseUp = event => {\n    const { onClear, onMouseUp, type } = this.props;\n    const { currentTarget } = event;\n    const clonedEvent = { ...event };\n\n    onMouseUp(createMockEvent(event, true));\n\n    if (type !== 'search' || currentTarget.value === '') {\n      return;\n    }\n\n    setTimeout(() => {\n      if (currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      }\n    });\n  };\n\n  /**\n   * onChange event, provide restructured event.\n   *\n   * @param {string} value\n   * @param {object} event\n   */\n  onChange = (value, event) => {\n    const { onChange } = this.props;\n    const clonedEvent = { ...event };\n\n    this.setState({ updatedValue: value }, () => {\n      onChange(createMockEvent(clonedEvent));\n    });\n  };\n\n  /**\n   * Render a text input.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedValue } = this.state;\n    const {\n      className,\n      id,\n      isDisabled,\n      name,\n      onChange,\n      onClear,\n      onKeyUp,\n      onMouseUp,\n      isReadOnly,\n      type,\n      value,\n      ...props\n    } = this.props;\n    const updatedName = name || helpers.generateId();\n    const updatedId = id || updatedName;\n\n    return (\n      <PfTextInput\n        id={updatedId}\n        name={updatedName}\n        className={`curiosity-text-input ${className}`}\n        isDisabled={isDisabled || false}\n        onChange={this.onChange}\n        onKeyUp={this.onKeyUp}\n        onMouseUp={this.onMouseUp}\n        isReadOnly={isReadOnly || false}\n        type={type}\n        value={updatedValue ?? value ?? ''}\n        {...props}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.defaultProps = {\n  className: '',\n  id: null,\n  isDisabled: false,\n  isReadOnly: false,\n  name: null,\n  onChange: helpers.noop,\n  onClear: helpers.noop,\n  onKeyUp: helpers.noop,\n  onMouseUp: helpers.noop,\n  type: 'text',\n  value: ''\n};\n\nexport { TextInput as default, TextInput };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup } from '@patternfly/react-core';\nimport _debounce from 'lodash/debounce';\nimport { reduxTypes, store, useSelector } from '../../redux';\nimport { TextInput } from '../form/textInput';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: evaluate the debounce milliseconds, currently based off platforms default 800 ms\n */\n/**\n * Display a display name input field for search.\n *\n * @fires onSubmit\n * @fires onClear\n * @fires onKeyUp\n * @param {object} props\n * @param {string} props.value\n * @param {Function} props.t\n * @param {string} props.viewId\n * @returns {Node}\n */\nconst ToolbarFieldDisplayName = ({ value, t, viewId }) => {\n  const currentValue = useSelector(\n    ({ view }) => view.inventoryHostsQuery?.[viewId]?.[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n    value\n  );\n\n  /**\n   * On submit, dispatch type.\n   *\n   * @event onSubmit\n   * @param {string} submitValue\n   * @returns {void}\n   */\n  const onSubmit = submitValue =>\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: submitValue?.trim() || null\n      }\n    ]);\n\n  /**\n   * On clear, dispatch type.\n   *\n   * @event onClear\n   * @returns {void}\n   */\n  const onClear = () => {\n    if (currentValue === '' || !currentValue) {\n      return;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: null\n      }\n    ]);\n  };\n\n  /**\n   * Set up submit debounce event to allow for bypass.\n   */\n  const debounced = _debounce(onSubmit, 700);\n\n  /**\n   * On enter submit value, on type submit value, and on esc ignore (clear value at component level).\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 13:\n        onSubmit(event.value);\n        break;\n      case 27:\n        break;\n      default:\n        debounced(event.value);\n        break;\n    }\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        aria-label={t('curiosity-toolbar.placeholder', { context: 'displayName' })}\n        className=\"curiosity-input__display-name\"\n        iconVariant=\"search\"\n        maxLength={255}\n        onClear={onClear}\n        onKeyUp={onKeyUp}\n        value={currentValue}\n        placeholder={t('curiosity-toolbar.placeholder', { context: 'displayName' })}\n      />\n    </InputGroup>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{viewId: string, t: Function, value: string}}\n */\nToolbarFieldDisplayName.propTypes = {\n  t: PropTypes.func,\n  value: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, value: string}}\n */\nToolbarFieldDisplayName.defaultProps = {\n  t: translate,\n  value: null,\n  viewId: 'toolbarFieldDisplayName'\n};\n\nexport { ToolbarFieldDisplayName as default, ToolbarFieldDisplayName };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader, CardHeaderMain } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport GuestsList from '../guestsList/guestsList';\nimport { inventoryListHelpers } from './inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { ToolbarFieldDisplayName } from '../toolbar/toolbarFieldDisplayName';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A hosts system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventoryList extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getHostsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getHostsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterGuestsData, filterInventoryData, listData, query, session, settings } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      const guestsId = cellData?.subscriptionManagerId;\n      let hasGuests = cellData?.numberOfGuests > 0 && guestsId;\n\n      // Apply hasGuests callback, return boolean\n      if (typeof settings?.hasGuests === 'function') {\n        hasGuests = settings.hasGuests({ ...cellData }, { ...session });\n      }\n\n      return {\n        cells,\n        expandedContent:\n          (hasGuests && (\n            <GuestsList\n              key={guestsId}\n              filterGuestsData={filterGuestsData}\n              numberOfGuests={cellData?.numberOfGuests}\n              id={guestsId}\n              query={query}\n            />\n          )) ||\n          undefined\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t,\n      viewId\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n            <CardHeaderMain>\n              <ToolbarFieldDisplayName viewId={viewId} />\n            </CardHeaderMain>\n            <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter\n            className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n            aria-hidden={error || !itemCount || false}\n          >\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{settings:object, productId: string, listData: Array, session: object, pending: boolean,\n *     query: object, fulfilled: boolean, getHostsInventory: Function, error: boolean,\n *     itemCount: number, viewId: string, t: Function, filterInventoryData: Array, filterGuestsData: Array,\n *     perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterGuestsData: PropTypes.array,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  settings: PropTypes.shape({\n    hasGuests: PropTypes.func\n  }),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{settings: object, listData: Array, session: object, pending: boolean, fulfilled: boolean,\n *     getHostsInventory: Function, error: boolean, itemCount: number, viewId: string, t: translate,\n *     filterInventoryData: Array, filterGuestsData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterGuestsData: [],\n  filterInventoryData: [],\n  getHostsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_HOSTS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  settings: {},\n  t: translate,\n  viewId: 'inventoryList'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventory: (id, query) => dispatch(reduxActions.rhsm.getHostsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.inventoryList.makeInventoryList();\n\nconst ConnectedInventoryList = connect(makeMapStateToProps, mapDispatchToProps)(InventoryList);\n\nexport { ConnectedInventoryList as default, ConnectedInventoryList, InventoryList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs as PfTabs, Tab, TabTitleText, Grid, GridItem } from '@patternfly/react-core';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: PF tabs misinterprets \"isElementInView\" when tab title nodes are loaded dynamically\n * It appears the use of isElementInView within PF tabs is trying to be predicative in using\n * \"getBoundingClientRect\" but produces questionable results in scenarios where content is\n * async created. isElementInView assumes some form of the content will always be there\n * instead of scenarios where someone tries to dynamically apply components. It may be good to\n * review using a window.setTimeout(() => handleScrollButtons()) in componentDidMount.\n *\n * Our temporary solution is to simply hide the buttons with a manual set flag affecting the\n * CSS class. This will most likely cause long-term issues.\n */\n/**\n * ToDo: Insights frontend components uses a custom tabs layout, investigate related CSS classes\n * Originally we applied the CSS classes, but they appeared to provide nothing. Since Insights\n * rolled its own tabs we're hesitant to apply said classes without understanding what they provide.\n */\n/**\n * A set of tabs.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass Tabs extends React.Component {\n  state = {\n    updatedActiveTab: null,\n    updatedTabs: null\n  };\n\n  componentDidMount() {\n    const { updatedTabs } = this.state;\n\n    if (updatedTabs === null) {\n      this.setTabData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tabs } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (!_isEqualWith(prevProps.tabs, tabs, customizer)) {\n      this.setTabData();\n    }\n  }\n\n  /**\n   * On tab selected\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {number} params.index\n   */\n  onTab = ({ index }) => {\n    const { onTab } = this.props;\n\n    this.setState(\n      {\n        updatedActiveTab: index\n      },\n      () => onTab({ index })\n    );\n  };\n\n  /**\n   * Convert tab objects into the required PF Tab format.\n   */\n  setTabData() {\n    const { activeTab, defaultActiveTab, tabs } = this.props;\n    let updatedActiveTab = defaultActiveTab;\n\n    const updatedTabs = tabs.map(({ active, content, title }, index) => {\n      updatedActiveTab = active ? index : updatedActiveTab;\n\n      return (\n        <Tab key={title} eventKey={index} title={<TabTitleText>{title}</TabTitleText>}>\n          {content}\n        </Tab>\n      );\n    });\n\n    if (typeof activeTab === 'number') {\n      updatedActiveTab = activeTab;\n    }\n\n    this.setState({\n      updatedActiveTab,\n      updatedTabs\n    });\n  }\n\n  /**\n   * Apply props to tabs.\n   *\n   * @returns {Node}\n   */\n  renderTabs() {\n    const { updatedActiveTab, updatedTabs } = this.state;\n    const { className, hasOverflowScroll } = this.props;\n\n    return (\n      <PfTabs\n        className={`curiosity-tabs${(!hasOverflowScroll && '__no-scroll') || ''} ${className || ''}`}\n        activeKey={updatedActiveTab}\n        onSelect={(event, index) => this.onTab({ event, index })}\n        mountOnEnter\n        unmountOnExit\n        inset={{\n          default: 'insetNone',\n          md: 'insetLg'\n        }}\n      >\n        {updatedTabs}\n      </PfTabs>\n    );\n  }\n\n  /**\n   * Render tabs.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"curiosity-tabs-container\">\n        <GridItem span={12}>{this.renderTabs()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.propTypes = {\n  activeTab: PropTypes.number,\n  className: PropTypes.string,\n  defaultActiveTab: PropTypes.number,\n  hasOverflowScroll: PropTypes.bool,\n  onTab: PropTypes.func,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      content: PropTypes.node.isRequired,\n      title: PropTypes.node.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.defaultProps = {\n  activeTab: null,\n  className: '',\n  defaultActiveTab: 0,\n  hasOverflowScroll: false,\n  onTab: helpers.noop,\n  tabs: []\n};\n\nexport { Tabs as default, Tabs };\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * A tab pass-through component for passing props to InventoryTabs.\n *\n * @param {object} props\n * @param {boolean} props.active\n * @param {Node} props.children\n * @param {string} props.title\n * @returns {Node}\n */\n// eslint-disable-next-line no-unused-vars\nconst InventoryTab = ({ active, children, title }) => <React.Fragment>{children}</React.Fragment>;\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nInventoryTab.propTypes = {\n  children: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  title: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nInventoryTab.defaultProps = {\n  active: false\n};\n\nexport { InventoryTab as default, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { Tabs } from '../tabs/tabs';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { InventoryTab } from './inventoryTab';\n\n/**\n * A system inventory tabs component.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass InventoryTabs extends React.Component {\n  /**\n   * On tab update state.\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {string} params.index tab index\n   */\n  onTab = ({ index }) => {\n    const { productId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.inventory.SET_INVENTORY_TAB,\n      tabs: {\n        [productId]: index\n      }\n    });\n  };\n\n  /**\n   * Render inventory tabs using Inventory tab passed props only. A parallel outcome can be\n   * achieved by passing an array of objects through a prop.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { activeTab, children, defaultActiveTab, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const updatedChildren = React.Children.toArray(children).map(({ props = {} }) => ({\n      active: props.active || false,\n      content: props.children,\n      title: props.title\n    }));\n\n    return (\n      <React.Fragment>\n        <Title headingLevel=\"h2\" className=\"sr-only\">\n          {t('curiosity-inventory.tabHeading', { count: updatedChildren.length })}\n        </Title>\n        <Tabs activeTab={activeTab} defaultActiveTab={defaultActiveTab} onTab={this.onTab} tabs={updatedChildren} />\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, t: Function, children: Node, defaultActiveTab: number, isDisabled: boolean,\n *     activeTab: number}}\n */\nInventoryTabs.propTypes = {\n  activeTab: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  defaultActiveTab: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.defaultProps = {\n  activeTab: 0,\n  defaultActiveTab: 0,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  t: translate\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst mapStateToProps = ({ inventory }, { productId }) => ({ activeTab: inventory.tabs?.[productId] });\n\nconst ConnectedInventoryTabs = connect(mapStateToProps)(InventoryTabs);\n\nexport { ConnectedInventoryTabs as default, ConnectedInventoryTabs, InventoryTabs, InventoryTab };\n","import { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SLA_TYPES as SLA_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES as USAGE_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = optionsType => {\n  switch (optionsType) {\n    case RHSM_API_QUERY_TYPES.SLA:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.slaPremium'),\n            value: SLA_TYPES.PREMIUM\n          },\n          {\n            title: translate('curiosity-toolbar.slaStandard'),\n            value: SLA_TYPES.STANDARD\n          },\n          {\n            title: translate('curiosity-toolbar.slaSelfSupport'),\n            value: SLA_TYPES.SELF\n          },\n          {\n            title: translate('curiosity-toolbar.slaNone'),\n            value: SLA_TYPES.NONE\n          }\n        ]\n      };\n    case RHSM_API_QUERY_TYPES.USAGE:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.usageDevelopment'),\n            value: USAGE_TYPES.DEVELOPMENT\n          },\n          {\n            title: translate('curiosity-toolbar.usageDisaster'),\n            value: USAGE_TYPES.DISASTER\n          },\n          {\n            title: translate('curiosity-toolbar.usageProduction'),\n            value: USAGE_TYPES.PRODUCTION\n          },\n          {\n            title: translate('curiosity-toolbar.usageUnspecified'),\n            value: USAGE_TYPES.UNSPECIFIED\n          }\n        ]\n      };\n    default:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.SLA }),\n            value: RHSM_API_QUERY_TYPES.SLA\n          },\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.USAGE }),\n            value: RHSM_API_QUERY_TYPES.USAGE\n          }\n        ]\n      };\n  }\n};\n\nconst toolbarHelpers = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarHelpers as default, toolbarHelpers, getOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar as PfToolbar,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup\n} from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons';\nimport { Select } from '../form/select';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { toolbarHelpers } from './toolbarHelpers';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onClearFilter\n * @fires onCategorySelect\n * @fires onSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear all filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    const { hardFilterReset } = this.props;\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: new Set() } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [RHSM_API_QUERY_TYPES.SLA]: null,\n            [RHSM_API_QUERY_TYPES.USAGE]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: null } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Clear individual filter state.\n   *\n   * @event onClearFilter\n   * @param {string} categoryTitle\n   */\n  onClearFilter = categoryTitle => {\n    const { activeFilters, currentFilter, hardFilterReset } = this.props;\n\n    const categoryOptions = toolbarHelpers.getOptions();\n    const { value: categoryValue } = categoryOptions.options.find(({ title }) => title === categoryTitle) || {};\n\n    if (!categoryValue) {\n      return;\n    }\n\n    const updatedActiveFilters = new Set(activeFilters);\n    updatedActiveFilters.delete(categoryValue);\n\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: updatedActiveFilters } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [categoryValue]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      const updatedCurrentFilter = (updatedActiveFilters.size > 0 && currentFilter) || null;\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: updatedCurrentFilter } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Set Category selection.\n   *\n   * @event onCategorySelect\n   * @param {object} event\n   */\n  onCategorySelect = event => {\n    const { value } = event;\n    this.setDispatch({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: value } });\n  };\n\n  /**\n   * Set select filter selection for dispatch.\n   *\n   * @param {object} params\n   * @param {object} params.event\n   * @param {string} params.field\n   */\n  onSelect = ({ event, field }) => {\n    const { activeFilters } = this.props;\n    const { value } = event;\n    const updatedActiveFilters = new Set(activeFilters).add(field);\n\n    this.setDispatch(\n      [\n        {\n          type: reduxTypes.toolbar.SET_ACTIVE_FILTERS,\n          data: { activeFilters: updatedActiveFilters }\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_TYPES[field],\n          data: { [field]: value }\n        }\n      ],\n      true\n    );\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {Array|object} actions\n   * @param {boolean} resetPage\n   */\n  setDispatch(actions, resetPage = false) {\n    const { viewId } = this.props;\n    const updatedActions = ((Array.isArray(actions) && actions) || [actions]).map(({ type, data }) => ({\n      type,\n      viewId,\n      ...data\n    }));\n\n    if (resetPage) {\n      updatedActions.push({\n        type: reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST\n      });\n    }\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Available, and selected select filter options.\n   *\n   * @param {string} field\n   * @returns {{optionsSelected: Array, options: Array }}\n   */\n  setSelectFilter(field) {\n    const { query } = this.props;\n    const options = toolbarHelpers.getOptions(field);\n    const currentFilter = this.getCurrentFilter();\n    let filter;\n\n    if (field) {\n      filter = typeof query?.[field] === 'string' && options.options.find(({ value }) => value === query?.[field]);\n    } else {\n      filter = options.options.find(({ value }) => value === currentFilter);\n    }\n\n    const optionsSelected = (filter?.title && [filter.title]) || (options?.selected && [options.selected]) || [];\n\n    return { options, optionsSelected };\n  }\n\n  /**\n   * Return the currentFilter, fallback to selected\n   *\n   * @returns {string|undefined}\n   */\n  getCurrentFilter() {\n    const { currentFilter, filterOptions } = this.props;\n\n    return (\n      currentFilter ||\n      filterOptions.find(({ selected }) => selected === true)?.id ||\n      (filterOptions.length === 1 && filterOptions[0]?.id)\n    );\n  }\n\n  /**\n   * A select filter node.\n   *\n   * @param {object} params\n   * @param {string} params.id\n   * @returns {object}\n   */\n  renderSelectFilter({ id: field }) {\n    const { t } = this.props;\n    const { options, optionsSelected } = this.setSelectFilter(field);\n    const currentFilter = this.getCurrentFilter();\n\n    return (\n      <ToolbarFilter\n        key={field}\n        chips={optionsSelected}\n        deleteChip={this.onClearFilter}\n        categoryName={t('curiosity-toolbar.category', { context: field })}\n        showToolbarItem={currentFilter === field}\n      >\n        <Select\n          aria-label={t('curiosity-toolbar.category', { context: field })}\n          onSelect={event => this.onSelect({ event, field })}\n          selectedOptions={optionsSelected}\n          placeholder={t('curiosity-toolbar.placeholder', { context: field })}\n          options={options.options}\n        />\n      </ToolbarFilter>\n    );\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { filterOptions, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options: categoryOptions, optionsSelected: categoryOptionsSelected } = this.setSelectFilter();\n\n    return (\n      <PfToolbar\n        id=\"curiosity-toolbar\"\n        className=\"curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"sm\"\n        clearAllFilters={this.onClear}\n        clearFiltersButtonText={t('curiosity-toolbar.clearFilters')}\n      >\n        <ToolbarContent>\n          <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"md\">\n            <ToolbarGroup variant=\"filter-group\">\n              {filterOptions.length !== 1 && (\n                <ToolbarItem>\n                  <Select\n                    aria-label={t('curiosity-toolbar.category')}\n                    onSelect={this.onCategorySelect}\n                    selectedOptions={categoryOptionsSelected}\n                    placeholder={t('curiosity-toolbar.placeholder')}\n                    options={categoryOptions.options}\n                    toggleIcon={<FilterIcon />}\n                  />\n                </ToolbarItem>\n              )}\n              {filterOptions.map(({ id, selected }) => this.renderSelectFilter({ id, selected }))}\n            </ToolbarGroup>\n          </ToolbarToggleGroup>\n        </ToolbarContent>\n      </PfToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, Array}}\n */\nToolbar.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.SLA]: PropTypes.string,\n    [RHSM_API_QUERY_TYPES.USAGE]: PropTypes.string\n  }),\n  activeFilters: PropTypes.instanceOf(Set),\n  currentFilter: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n  filterOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      filterType: PropTypes.oneOf(['select']),\n      id: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n      selected: PropTypes.bool\n    })\n  ),\n  hardFilterReset: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, filterOptions: Array}}\n */\nToolbar.defaultProps = {\n  query: {},\n  activeFilters: new Set(),\n  currentFilter: null,\n  filterOptions: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA,\n      filterType: 'select'\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      filterType: 'select',\n      selected: true\n    }\n  ],\n  hardFilterReset: false,\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: translate,\n  viewId: 'toolbar'\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.toolbar\n * @param {object} state.view\n * @param {object} props\n * @param {string} props.query\n * @param {string} props.viewId\n * @returns {object}\n */\nconst mapStateToProps = ({ toolbar, view }, { query: initialQuery, viewId }) => ({\n  ...toolbar.filters?.[viewId],\n  query: view.query?.[viewId] || initialQuery\n});\n\nconst ConnectedToolbar = connect(mapStateToProps)(Toolbar);\n\nexport { ConnectedToolbar as default, ConnectedToolbar, Toolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Apply sort filter to filters.\n *\n * @param {object} params\n * @param {{ onSort: Function, sortActive: boolean, sortDirection: string, isSortDefault: boolean,\n *     sortDefaultInitialDirection: string }} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {object}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} }) => {\n  const { id } = filter;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === id\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  if (\n    hasSort &&\n    !updatedFilter.sortActive &&\n    !query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    updatedFilter.isSortDefault === true\n  ) {\n    updatedFilter.sortActive = true;\n\n    if (updatedFilter.sortDefaultInitialDirection) {\n      updatedFilter.sortDirection = updatedFilter.sortDefaultInitialDirection;\n    }\n  }\n\n  return updatedFilter;\n};\n\nconst applyWrappableFilters = ({ filter = {} }) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Apply additional properties to filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {Array}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} }) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.cellData\n * @param {object} params.session\n * @returns {{columnHeaders: Array, cells: Array, data: object}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, session = {} }) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value]) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value);\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    filters.forEach(({ id, cell, cellWidth, header, onSort, sortActive, sortDirection, transforms }) => {\n      let headerUpdated;\n      let cellUpdated;\n\n      if (allCells[id]) {\n        headerUpdated = allCells[id]?.title ?? id;\n        cellUpdated = allCells[id]?.value ?? '';\n      } else if (id) {\n        headerUpdated = translate('curiosity-inventory.header', { context: id });\n        cellUpdated = '';\n      }\n\n      // set table header cell filter params\n      if (header) {\n        headerUpdated = (typeof header === 'function' && header({ ...allCells })) || header;\n      }\n\n      if (\n        typeof headerUpdated === 'string' ||\n        typeof headerUpdated === 'number' ||\n        React.isValidElement(headerUpdated)\n      ) {\n        headerUpdated = {\n          title: headerUpdated\n        };\n      }\n\n      if (headerUpdated) {\n        headerUpdated.transforms = [];\n\n        if (Array.isArray(transforms)) {\n          headerUpdated.transforms = headerUpdated.transforms.concat([...transforms]);\n        }\n\n        if (typeof cellWidth === 'number') {\n          headerUpdated.transforms.push(PfCellWidth(cellWidth));\n        }\n      }\n\n      if (typeof onSort === 'function') {\n        headerUpdated = {\n          ...headerUpdated,\n          onSort: obj => onSort({ ...allCells }, { ...obj, id }),\n          sortActive,\n          sortDirection\n        };\n      }\n\n      // set table row cell filter params\n      if (cell) {\n        cellUpdated = (typeof cell === 'function' && cell({ ...allCells }, { ...session })) || cell;\n      }\n\n      if (typeof cellUpdated === 'string' || typeof cellUpdated === 'number' || React.isValidElement(cellUpdated)) {\n        cellUpdated = {\n          title: cellUpdated\n        };\n      }\n\n      updatedColumnHeaders.push(headerUpdated);\n      updatedCells.push(cellUpdated);\n    });\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryListHelpers = {\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryListHelpers as default,\n  inventoryListHelpers,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n"],"sourceRoot":""}
{"version":3,"sources":["components/form/select.js","components/graphCard/graphCardTypes.js","components/minHeight/minHeight.js","components/bannerMessages/bannerMessages.js","components/graphCard/graphCardHelpers.js","components/graphCard/graphCardChartTooltip.js","components/graphCard/graphCardChartLegend.js","components/chartArea/chartArea.js","components/graphCard/graphCard.js","components/c3GraphCard/c3GraphCardHelpers.js","components/c3GraphCard/c3GraphCardLegendItem.js","components/c3Chart/c3Chart.js","components/c3GraphCard/c3GraphCard.js","components/inventoryList/inventoryListHelpers.js","components/guestsList/guestsList.js","components/pagination/pagination.js","components/inventoryList/inventoryList.js","components/toolbar/toolbarTypes.js","components/toolbar/toolbar.js"],"names":["Select","state","isExpanded","options","selected","onSelect","event","titleSelection","props","id","name","variant","updatedOptions","optionsIndex","findIndex","option","title","SelectVariant","single","forEach","index","updateSelected","filter","opt","map","setState","mockUpdatedOptions","_cloneDeep","mockTarget","value","selectedIndex","type","checkbox","checked","mockEvent","target","currentTarget","persist","helpers","noop","onToggle","expanded","this","formatOptions","prevProps","selectedOptions","_isEqual","_isPlainObject","Object","keys","key","activateOptions","convertedOption","text","textContent","label","includes","find","ariaLabel","className","isDisabled","isToggleText","placeholder","toggleIcon","pfSelectOptions","length","aria-label","selections","isOpen","placeholderText","window","btoa","data-value","data-title","React","Component","defaultProps","generateId","graphCardTypes","getGranularityOptions","optionsType","GRANULARITY_TYPES","DAILY","translate","WEEKLY","MONTHLY","QUARTERLY","MinHeight","containerRef","createRef","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","clientWidth","current","setMinHeight","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","children","ref","BannerMessages","onUpdateData","getMessageReports","productId","dateHelpers","getRangedDateTime","startDate","endDate","RHSM_API_QUERY_TYPES","GRANULARITY","START_DATE","toISOString","END_DATE","cancel","appMessages","messages","updatedMessages","entries","message","push","AlertVariant","info","actionClose","onClose","alerts","renderAlerts","context","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","appName","UI_DISPLAY_NAME","isInline","component","icon","iconPosition","href","makeMapStateToProps","reduxSelectors","makeAppMessages","ConnectedBannerMessages","connect","dispatch","query","reduxActions","rhsm","getTooltipDate","date","granularity","momentDate","moment","utc","format","timestampQuarterFormats","yearShort","add","timestampMonthFormats","yearLong","timestampDayFormats","yAxisTickFormatFallback","tick","abs","Math","updatedTick","updatedAbbr","pow","graphCardHelpers","getChartXAxisLabelIncrement","xAxisTickFormat","previousDate","formattedDate","isNewYear","Number","parseInt","year","replace","yAxisTickFormat","locale","UI_LOCALE_DEFAULT","Intl","NumberFormat","maximumFractionDigits","notation","compactDisplay","GraphCardChartTooltip","datum","productLabel","t","header","data","itemsByKey","tempDataFacet","color","test","thresholdStringValue","hasInfinite","y","dataFactsValue","hasData","product","summary","colSpan","dataFacet","aria-hidden","backgroundColor","GraphCardChartLegend","onClick","chart","viewId","updatedToggle","toggle","store","reduxTypes","graph","SET_GRAPH_LEGEND","legend","dataSets","isToggled","hide","chartId","isThreshold","labelContent","tooltipContent","checkIsToggled","button","Button","onKeyPress","tabIndex","visibility","borderTopColor","Tooltip","content","position","TooltipPosition","top","enableFlip","distance","entryDelay","exitDelay","Fragment","stroke","renderLegendItem","ConnectedGraphCardChartLegend","ChartArea","chartWidth","dataSetsToggle","tooltipRef","onHide","forceUpdate","onRevert","getIsToggled","setResizeObserve","containerElement","ResizeObserver","observe","unobserve","xAxisLabelIncrement","xAxisProps","yAxisProps","xAxisDataSet","dataSet","xAxisLabelUseDataSet","xAxisTickValues","reduce","acc","concat","x","tickValue","xAxisLabel","tickValues","tickIndex","indexOf","previousItem","nextItem","item","xAxisFixLabelOverlap","setChartTicks","updatedXAxisProps","fixLabelOverlap","updatedYAxisProps","dependentAxis","showGrid","tickFormat","isXAxisTicks","domain","generatedDomain","updatedChartDomain","dataSetMaxX","dataSetMaxY","set","isStacked","dataSetMaxYStacked","floored","floor","log10","ceil","maxY","chartDomain","chartTooltip","tooltipDataSet","fill","mockDatum","tooltip","isValidElement","cloneElement","values","v","VictoryVoronoiCursorContainer","createContainer","parsedTooltipData","getTooltipData","globalContainerBounds","globalTooltipBounds","FlyoutComponent","obj","containerBounds","getBoundingClientRect","tooltipBounds","right","xCoordinate","width","htmlContent","applyParsedTooltipData","height","display","xmlns","cursorDimension","labels","labelComponent","voronoiPadding","chartLegend","legendProps","revert","stacked","charts","chartsStacked","updatedDataSet","dataColorStroke","strokeWidth","strokeDasharray","ChartThreshold","animate","interpolation","themeColor","themeVariant","thresholdChart","areaChart","padding","getChartTicks","getChartDomain","tooltipComponent","containerComponent","renderTooltip","undefined","chartProps","Chart","duration","ChartAxis","renderChart","ChartStack","renderLegend","bottom","left","GraphCard","onUpdateGraphData","getGraphReportsCapacity","graphGranularity","getQueryGranularity","onGranularitySelect","SET_QUERY_RHSM_TYPES","filterGraphData","graphData","selectOptionsType","updatedGranularity","chartAreaProps","JSON","stringify","filtered","tempFiltered","onLoad","chartColorGreenDark","assign","filteredGraphData","cardTitle","error","pending","Card","CardHeader","CardTitle","Title","headingLevel","size","CardActions","CardBody","UI_DISABLED_GRAPH","graphCard","makeGraphCard","ConnectedGraphCard","c3GraphCardHelpers","productShortLabel","hiddenDataFacets","converted","colors","columns","groups","names","types","convertTimeSeriesDate","TEST_MODE","local","totalData","filteredValue","pop","configuration","order","a","b","ratio","updatedValue","dataItem","dataValue","unloadBeforeLoad","show","spline","point","grid","axis","xAxisTicks","slice","dateIndex","default","min","outer","C3GraphCardLegendItem","updatedIsToggled","onFocus","getToggle","focus","getColor","onMouseOver","onBlur","onMouseOut","C3Chart","node","generateChart","config","destroy","onComplete","updatedChart","c3","generate","bindto","load","unload","done","C3GraphCard","filteredData","isDataHidden","applySortFilters","onSort","updatedFilter","hasSort","sortActive","SORT","_camelCase","sortDirection","DIRECTION","SORT_DIRECTION_TYPES","DESCENDING","SortByDirection","desc","asc","applyWrappableFilters","Array","isArray","transforms","wrappable","inventoryListHelpers","filters","isSortable","isWrappable","cellData","session","updatedColumnHeaders","updatedCells","allCells","headerUpdated","cellUpdated","cell","cellWidth","PfCellWidth","columnHeaders","cells","GuestsList","currentPage","limit","previousData","onUpdateGuestsData","getHostsInventoryGuests","updatedQuery","LIMIT","OFFSET","apiQueries","parseRhsmQuery","guestsQuery","onScroll","numberOfGuests","listData","scrollHeight","scrollTop","newPage","updatedData","prevState","filterGuestsData","scrollLoader","tableProps","borders","colCount","rowCount","TableVariant","compact","updatedRows","updatedHeight","renderLoader","rows","perPageDefault","colWidth","renderTable","guestsList","makeGuestsList","ConnectedGuestsList","Pagination","onPage","page","offsetDefault","updatedPerPage","offset","setOffset","setLimit","onPerPage","perPage","updatedActions","dropDirection","isCompact","itemCount","updatedPage","onSetPage","onPerPageSelect","ConnectedPagination","view","InventoryList","onColumnSort","updatedDirection","direction","updatedSortColumn","SORT_TYPES","ASCENDING","onUpdateInventoryData","getHostsInventory","filterInventoryData","settings","guestsId","subscriptionManagerId","hasGuests","expandedContent","fulfilled","isLastPage","minHeightContentRefreshKey","CardFooter","TableToolbar","isFooter","UI_DISABLED_TABLE","inventoryList","makeInventoryList","ConnectedInventoryList","toolbarTypes","SLA","SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","USAGE","USAGE_TYPES","DEVELOPMENT","DISASTER","PRODUCTION","UNSPECIFIED","Toolbar","onClear","hardFilterReset","dispatchActions","toolbar","SET_ACTIVE_FILTERS","activeFilters","Set","SET_QUERY_CLEAR","clearFilters","SET_FILTER_TYPE","currentFilter","setDispatch","onClearFilter","categoryTitle","categoryValue","updatedActiveFilters","updatedCurrentFilter","onCategorySelect","field","actions","resetPage","SET_QUERY_CLEAR_INVENTORY_LIST","getCurrentFilter","optionsSelected","filterOptions","setSelectFilter","ToolbarFilter","chips","deleteChip","categoryName","showToolbarItem","categoryOptions","categoryOptionsSelected","collapseListedFiltersBreakpoint","clearAllFilters","ToolbarContent","ToolbarToggleGroup","breakpoint","ToolbarGroup","ToolbarItem","renderSelectFilter","filterType","UI_DISABLED_TOOLBAR","ConnectedToolbar"],"mappings":"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","file":"static/js/1.0e83d549.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select as PfSelect, SelectOption as PfSelectOption, SelectVariant } from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * FixMe: Patternfly React select generates a random ID for select options.\n * On the surface this seems like a legitimate update until you remember unit tests.\n * Quite a few apps use test snapshots causing certain rendered select snapshots to\n * fail consistently. Appears this may have been part of the \"favorites\" update.\n * The solution centers around updating the  \"GenerateId helper\" and detecting a\n * test, dev, or prod environment instead of generating a random string every time.\n *\n * This issue also has the side-effect of making the attribute inadvertently\n * \"required\" anywhere it's used in an effort to squash it.\n */\n/**\n * A wrapper for Patternfly Select. Provides additional event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @param expanded\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  /**\n   * Format options into a consumable array of objects format.\n   */\n  formatOptions() {\n    const { options, selectedOptions, variant } = this.props;\n    const updatedOptions = _isPlainObject(options)\n      ? Object.keys(options).map(key => ({ ...options[key], title: key, value: options[key] }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        updatedOptions[index].selected =\n          activateOptions.includes(convertedOption.value) || activateOptions.includes(convertedOption.title);\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const { ariaLabel, className, isDisabled, isToggleText, placeholder, toggleIcon, variant } = this.props;\n\n    const pfSelectOptions = {};\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    return (\n      <PfSelect\n        className={`curiosity-select${(!isToggleText && '__no-toggle-text') || ''} ${className}`}\n        variant={variant}\n        aria-label={ariaLabel}\n        onToggle={this.onToggle}\n        onSelect={this.onSelect}\n        selections={selected}\n        isOpen={isExpanded}\n        toggleIcon={toggleIcon}\n        placeholderText={placeholder}\n        {...pfSelectOptions}\n      >\n        {(options &&\n          options.map(option => (\n            <PfSelectOption\n              key={window.btoa(`${option.title}-${option.value}`)}\n              id={window.btoa(`${option.title}-${option.value}`)}\n              value={option.title}\n              data-value={option.value}\n              data-title={option.title}\n            />\n          ))) ||\n          []}\n      </PfSelect>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{isToggleText: boolean, toggleIcon: Node|Function, name: string, options: object,\n *     selectedOptions: (number|string|Array), variant: (object|string), className: string,\n *     id: string, isDisabled: boolean, placeholder: string, ariaLabel: string,\n *     onSelect: Function}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.string,\n  selectedOptions: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.array]),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{isToggleText: boolean, toggleIcon: null, name: null, options: Array, selectedOptions: null,\n *     variant: SelectVariant.single, className: string, id: string, isDisabled: boolean,\n *     placeholder: string, ariaLabel: string, onSelect: Function}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  id: helpers.generateId(),\n  isDisabled: false,\n  isToggleText: true,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  selectedOptions: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select };\n","import { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Return a set of options for display in a select/dropdown list.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getGranularityOptionsType = optionsType => {\n  if (optionsType === 'default') {\n    return {\n      selected: GRANULARITY_TYPES.DAILY,\n      options: [\n        { title: translate('curiosity-graph.dropdownDaily'), value: GRANULARITY_TYPES.DAILY, selected: true },\n        { title: translate('curiosity-graph.dropdownWeekly'), value: GRANULARITY_TYPES.WEEKLY },\n        { title: translate('curiosity-graph.dropdownMonthly'), value: GRANULARITY_TYPES.MONTHLY },\n        { title: translate('curiosity-graph.dropdownQuarterly'), value: GRANULARITY_TYPES.QUARTERLY }\n      ]\n    };\n  }\n\n  return { options: [] };\n};\n\nconst graphCardTypes = {\n  getGranularityOptions: getGranularityOptionsType\n};\n\nexport { graphCardTypes as default, graphCardTypes, getGranularityOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Alert, AlertActionCloseButton, AlertVariant, Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { connect, reduxActions, reduxSelectors } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { dateHelpers, helpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Render banner messages.\n *\n * @augments React.Component\n */\nclass BannerMessages extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.onUpdateData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId } = this.props;\n\n    if (productId !== prevProps.productId) {\n      this.onUpdateData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateData = () => {\n    const { getMessageReports, productId } = this.props;\n\n    if (productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime('CURRENT');\n      const query = {\n        [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY,\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString()\n      };\n\n      getMessageReports(productId, query, { cancel: false });\n    }\n  };\n\n  /**\n   * Apply messages' configuration to alerts.\n   *\n   * @returns {Node}\n   */\n  renderAlerts() {\n    const { state } = this;\n    const { appMessages, messages } = this.props;\n    const updatedMessages = [];\n\n    if (messages.length) {\n      Object.entries(appMessages).forEach(([key, value]) => {\n        if (state[key] !== true && value === true) {\n          const message = messages.find(({ id }) => id === key);\n\n          if (message) {\n            updatedMessages.push({\n              key,\n              ...message\n            });\n          }\n        }\n      });\n    }\n\n    return updatedMessages.map(({ key, message, title, variant = AlertVariant.info }) => {\n      const actionClose = <AlertActionCloseButton onClose={() => this.setState({ [key]: true })} />;\n\n      return (\n        <Alert actionClose={actionClose} key={key} title={title} variant={variant}>\n          {message}\n        </Alert>\n      );\n    });\n  }\n\n  /**\n   * Render a banner messages container.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const alerts = this.renderAlerts();\n\n    if (alerts.length) {\n      return <div className=\"curiosity-banner-messages\">{alerts}</div>;\n    }\n\n    return null;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{appMessages: object, productId: string, messages: Array, getMessageReports: Function}}\n */\nBannerMessages.propTypes = {\n  appMessages: PropTypes.object.isRequired,\n  getMessageReports: PropTypes.func,\n  messages: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      title: PropTypes.node.isRequired,\n      message: PropTypes.node.isRequired,\n      variant: PropTypes.oneOf([...Object.values(AlertVariant)])\n    })\n  ),\n  productId: PropTypes.string.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{messages: Array, getMessageReports: Function}}\n */\nBannerMessages.defaultProps = {\n  getMessageReports: helpers.noop,\n  messages: [\n    {\n      id: 'cloudigradeMismatch',\n      title: translate('curiosity-banner.dataMismatchTitle'),\n      message: translate(\n        'curiosity-banner.dataMismatchMessage',\n        {\n          context: helpers.UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS !== '' && 'cloudigradeMismatch',\n          appName: helpers.UI_DISPLAY_NAME\n        },\n        [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS}\n          />\n        ]\n      )\n    }\n  ]\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getMessageReports: (id, query) => dispatch(reduxActions.rhsm.getMessageReports(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.appMessages.makeAppMessages();\n\nconst ConnectedBannerMessages = connect(makeMapStateToProps, mapDispatchToProps)(BannerMessages);\n\nexport { ConnectedBannerMessages as default, ConnectedBannerMessages, BannerMessages };\n","import moment from 'moment';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * ToDo: Remove yAxisTickFormatFallback.\n * Appears Linux combined with Firefox has an issue using `Intl.NumberFormat` method.\n * We've applied shim code from NumeralJS and Numbro as a fallback. Up-to-date\n * browsers still have the optimal version with locale. If the original package used\n * corrects its rounding behavior we may consider re-implementing it.\n */\n/**\n * Fallback method for Linux and Firefox.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormatFallback = ({ tick }) => {\n  const abs = Math.abs(tick);\n  let updatedTick = tick;\n  let updatedAbbr = '';\n\n  if (abs >= Math.pow(10, 12)) {\n    updatedAbbr = 'T';\n    updatedTick = tick / Math.pow(10, 12);\n  } else if (abs < Math.pow(10, 12) && abs >= Math.pow(10, 9)) {\n    updatedAbbr = 'B';\n    updatedTick = tick / Math.pow(10, 9);\n  } else if (abs < Math.pow(10, 9) && abs >= Math.pow(10, 6)) {\n    updatedAbbr = 'M';\n    updatedTick = tick / Math.pow(10, 6);\n  } else if (abs < Math.pow(10, 6) && abs >= Math.pow(10, 3)) {\n    updatedAbbr = 'K';\n    updatedTick = tick / Math.pow(10, 3);\n  }\n\n  return `${updatedTick}${updatedAbbr}`;\n};\n\n// ToDo: remove yAxisTickFormatFallback check.\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale = helpers.UI_LOCALE_DEFAULT }) => {\n  let updatedTick = `${new Intl.NumberFormat(locale, {\n    maximumFractionDigits: 1,\n    notation: 'compact',\n    compactDisplay: 'short'\n  }).format(tick)}`;\n\n  if (updatedTick.length > 3 && updatedTick.length >= `${tick}`.length) {\n    updatedTick = yAxisTickFormatFallback({ tick });\n  }\n\n  return updatedTick;\n};\n\nconst graphCardHelpers = {\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  yAxisTickFormatFallback\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {string} props.granularity\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({ datum, granularity, productLabel, t }) => {\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey).forEach((key, index) => {\n    if (index === 0) {\n      header = getTooltipDate({\n        date: itemsByKey[key]?.data.date,\n        granularity\n      });\n    }\n\n    const tempDataFacet = {\n      color: itemsByKey[key]?.color\n    };\n\n    if (/^threshold/.test(key)) {\n      const thresholdStringValue =\n        (itemsByKey[key]?.data.hasInfinite && t('curiosity-graph.infiniteThresholdLabel')) ||\n        (itemsByKey[key]?.data.y ?? t('curiosity-graph.noDataLabel'));\n\n      tempDataFacet.label = t(`curiosity-graph.thresholdLabel`);\n      tempDataFacet.value = thresholdStringValue;\n    } else {\n      const dataFactsValue =\n        (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.noDataLabel')) || itemsByKey[key]?.data.y || 0;\n\n      tempDataFacet.label = t(`curiosity-graph.${key}Label`, { product: productLabel });\n      tempDataFacet.value = dataFactsValue;\n    }\n\n    data.push(tempDataFacet);\n  });\n\n  return (\n    <div className=\"victory-tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => (\n              <tr key={`tooltip-${dataFacet.label}`}>\n                <th>\n                  <div\n                    aria-hidden\n                    className=\"legend-icon victory-legend-icon\"\n                    style={{\n                      backgroundColor: dataFacet.color || 'transparent'\n                    }}\n                  />\n                  {dataFacet.label}\n                </th>\n                <td>{dataFacet.value}</td>\n              </tr>\n            ))}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.noDataErrorLabel')) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, granularity: string}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  granularity: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, productLabel: string, t: translate}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  productLabel: '',\n  t: translate\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { connect, store, reduxTypes } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A custom chart legend.\n *\n * @augments React.Component\n * @fires onClick\n */\nclass GraphCardChartLegend extends React.Component {\n  componentDidMount() {\n    const { chart, datum, legend, viewId } = this.props;\n    datum.dataSets.forEach(({ id }) => {\n      const checkIsToggled = legend[`${viewId}-${id}`] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  }\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  onClick = id => {\n    const { chart, viewId } = this.props;\n    const updatedToggle = chart.toggle(id);\n\n    store.dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      legend: {\n        [`${viewId}-${id}`]: updatedToggle\n      }\n    });\n  };\n\n  /**\n   * Return a legend item.\n   *\n   * @param {object} options\n   * @param {string} options.chartId\n   * @param {string} options.color\n   * @param {boolean} options.isDisabled\n   * @param {boolean} options.isThreshold\n   * @param {string} options.labelContent\n   * @param {string} options.tooltipContent\n   * @returns {Node}\n   */\n  renderLegendItem({ chartId, color, isDisabled, isThreshold, labelContent, tooltipContent }) {\n    const { chart, legend, viewId } = this.props;\n    const checkIsToggled = legend[`${viewId}-${chartId}`] || chart.isToggled(chartId);\n\n    const button = (\n      <Button\n        onClick={() => this.onClick(chartId)}\n        onKeyPress={() => this.onClick(chartId)}\n        className=\"victory-legend-item\"\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: color\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: color\n              }}\n            />\n          )\n        }\n      >\n        {labelContent}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *  - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={<p>{tooltipContent}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n\n  /**\n   * Render a graph legend.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { datum, productLabel, t } = this.props;\n\n    return (\n      <React.Fragment>\n        {datum.dataSets.map(({ id, isThreshold, stroke, data = [] }) => {\n          const isDisabled =\n            !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n          const labelContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}Label`, `curiosity-graph.thresholdLabel`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t([`curiosity-graph.${id}Label`, `curiosity-graph.noLabel`], {\n              product: productLabel,\n              context: productLabel\n            });\n\n          const tooltipContent =\n            (isThreshold &&\n              t([`curiosity-graph.${id}LegendTooltip`, `curiosity-graph.thresholdLegendTooltip`], {\n                product: productLabel,\n                context: productLabel\n              })) ||\n            t(`curiosity-graph.${id}LegendTooltip`, { product: productLabel, context: productLabel });\n\n          return this.renderLegendItem({\n            chartId: id,\n            color: stroke,\n            labelContent,\n            isDisabled,\n            isThreshold,\n            tooltipContent\n          });\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{datum, productLabel: string, t: Function, legend: object, chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  legend: PropTypes.objectOf(PropTypes.bool),\n  productLabel: PropTypes.string,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{datum: {dataSets: Array}, productLabel: string, viewId: string, t: translate, legend: object,\n *     chart: {hide: Function, toggle: Function, isToggled: Function}}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  legend: {},\n  productLabel: '',\n  t: translate,\n  viewId: 'graphCardLegend'\n};\n\nconst mapStateToProps = ({ graph }) => ({ legend: graph.legend });\n\nconst ConnectedGraphCardChartLegend = connect(mapStateToProps)(GraphCardChartLegend);\n\nexport { ConnectedGraphCardChartLegend as default, ConnectedGraphCardChartLegend, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createContainer } from 'victory-create-container';\nimport {\n  Chart,\n  ChartAxis,\n  ChartStack,\n  ChartThreshold,\n  ChartThemeColor,\n  ChartArea as PfChartArea\n} from '@patternfly/react-charts';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * ToDo: Evaluate Victory Charts combined with PF react-charts, updating adds 100+-kb to the output bundle\n * This appears to be related to Victory Charts itself, upgrading to versions after 35.3.1 of\n * the Victory Charts components also expands the bundle at a similar rate. Breaking out the imports\n * into individual direct imports from PF react-charts increases the build even more, by our estimates 200+-kb.\n * If Victory Charts combined with PF react-charts continues to balloon in size we may need to review pulling\n * the Victory components directly instead of through PF react-charts.\n */\n/**\n * A wrapper for Patternfly and Victory charts/graphs.\n *\n * @augments React.Component\n * @fires onResizeContainer\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n */\nclass ChartArea extends React.Component {\n  state = { chartWidth: 0 };\n\n  dataSetsToggle = {};\n\n  resizeObserver = helpers.noop;\n\n  containerRef = React.createRef();\n\n  tooltipRef = React.createRef();\n\n  componentDidMount() {\n    this.setResizeObserve();\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * Consumer exposed, hides chart layer.\n   *\n   * @event onHide\n   * @param {string} id\n   */\n  onHide = id => {\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: true };\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns all chart layers back on.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    this.dataSetsToggle = {};\n    this.forceUpdate();\n  };\n\n  /**\n   * Consumer exposed, turns chart layer on/off.\n   *\n   * @event onToggle\n   * @param {string} id\n   * @returns {boolean}\n   */\n  onToggle = id => {\n    const updatedToggle = !this.dataSetsToggle[id];\n    this.dataSetsToggle = { ...this.dataSetsToggle, [id]: updatedToggle };\n    this.forceUpdate();\n\n    return updatedToggle;\n  };\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { chartWidth } = this.state;\n    const { clientWidth = 0 } = this.containerRef.current || {};\n\n    if (clientWidth !== chartWidth) {\n      this.setState({ chartWidth: clientWidth });\n    }\n  };\n\n  /**\n   * Consumer exposed, determine if chart layer on/off.\n   * Note: Using \"setState\" as related to this exposed check gives the appearance of a race condition.\n   * Using a class property with forceUpdate to bypass.\n   *\n   * @param {string} id\n   * @returns {boolean}\n   */\n  getIsToggled = id => this.dataSetsToggle[id] || false;\n\n  /**\n   * Set ResizeObserver for scenarios where the window.resize event doesn't fire.\n   */\n  setResizeObserve() {\n    const containerElement = this.containerRef.current;\n    const { ResizeObserver } = window;\n\n    if (containerElement && ResizeObserver) {\n      const resizeObserver = new ResizeObserver(this.onResizeContainer);\n      resizeObserver.observe(containerElement);\n      this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n    } else {\n      this.onResizeContainer();\n      window.addEventListener('resize', this.onResizeContainer);\n      this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n    }\n  }\n\n  /**\n   * Apply props, set x and y axis chart increments/ticks formatting.\n   *\n   * @returns {object}\n   */\n  setChartTicks() {\n    const { xAxisLabelIncrement, xAxisTickFormat, yAxisTickFormat, dataSets } = this.props;\n    const xAxisProps = {};\n    const yAxisProps = {};\n    let xAxisDataSet = (dataSets.length && dataSets[0].data) || [];\n\n    dataSets.forEach(dataSet => {\n      if (dataSet.xAxisLabelUseDataSet) {\n        xAxisDataSet = dataSet.data;\n      }\n    });\n\n    xAxisProps.xAxisTickValues = xAxisDataSet.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    );\n\n    xAxisProps.xAxisTickFormat = tickValue =>\n      (xAxisDataSet[tickValue] && xAxisDataSet[tickValue].xAxisLabel) || tickValue;\n\n    if (typeof xAxisTickFormat === 'function') {\n      xAxisProps.xAxisTickFormat = tick => {\n        const tickValues = xAxisProps.xAxisTickValues;\n        const tickIndex = tickValues.indexOf(tick);\n        const previousItem = { ...(xAxisDataSet[tickValues[tickIndex - 1]] || {}) };\n        const nextItem = { ...(xAxisDataSet[tickValues[tickIndex + 1]] || {}) };\n        const item = { ...(xAxisDataSet[tick] || {}) };\n\n        return xAxisTickFormat({ tick, previousItem, item, nextItem });\n      };\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      yAxisProps.yAxisTickFormat = tick => yAxisTickFormat({ tick });\n    }\n\n    return {\n      ...xAxisProps,\n      ...yAxisProps\n    };\n  }\n\n  /**\n   * Return x and y axis increments/ticks.\n   *\n   * @returns {object}\n   */\n  getChartTicks() {\n    const { xAxisFixLabelOverlap } = this.props;\n\n    const { xAxisTickValues, xAxisTickFormat, yAxisTickFormat } = this.setChartTicks();\n    const updatedXAxisProps = {\n      fixLabelOverlap: xAxisFixLabelOverlap\n    };\n    const updatedYAxisProps = {\n      dependentAxis: true,\n      showGrid: true\n    };\n\n    if (xAxisTickValues) {\n      updatedXAxisProps.tickValues = xAxisTickValues;\n    }\n\n    if (xAxisTickFormat) {\n      updatedXAxisProps.tickFormat = xAxisTickFormat;\n    }\n\n    if (yAxisTickFormat) {\n      updatedYAxisProps.tickFormat = yAxisTickFormat;\n    }\n\n    return {\n      isXAxisTicks: !!xAxisTickValues,\n      xAxisProps: updatedXAxisProps,\n      yAxisProps: updatedYAxisProps\n    };\n  }\n\n  /**\n   * Calculate and return the x and y domain range.\n   *\n   * @param {boolean} isXAxisTicks\n   * @returns {object}\n   */\n  getChartDomain({ isXAxisTicks }) {\n    const { dataSetsToggle } = this;\n    const { domain, dataSets } = this.props;\n\n    if (Object.keys(domain).length) {\n      return domain;\n    }\n\n    const generatedDomain = {};\n    const updatedChartDomain = {};\n    let dataSetMaxX = 0;\n    let dataSetMaxY = 0;\n\n    const stackedSets = dataSets.filter(set => set.isStacked === true);\n\n    stackedSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        let dataSetMaxYStacked = 0;\n\n        dataSet.data.forEach((value, index) => {\n          dataSetMaxYStacked = value && value.y > dataSetMaxYStacked ? value.y : dataSetMaxYStacked;\n\n          if (index === dataSet.data.length - 1) {\n            dataSetMaxY += dataSetMaxYStacked;\n          }\n        });\n      }\n    });\n\n    dataSets.forEach(dataSet => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data) {\n        dataSetMaxX = dataSet.data.length > dataSetMaxX ? dataSet.data.length : dataSetMaxX;\n\n        dataSet.data.forEach(value => {\n          dataSetMaxY = value && value.y > dataSetMaxY ? value.y : dataSetMaxY;\n        });\n      }\n    });\n\n    if (!isXAxisTicks) {\n      generatedDomain.x = [0, dataSetMaxX || 10];\n    }\n\n    const floored = Math.pow(10, Math.floor(Math.log10((dataSetMaxY > 10 && dataSetMaxY) || 10)));\n    generatedDomain.y = [0, Math.ceil((dataSetMaxY + 1) / floored) * floored];\n\n    if (Object.keys(generatedDomain).length) {\n      updatedChartDomain.domain = generatedDomain;\n    }\n\n    return {\n      maxY: dataSetMaxY,\n      chartDomain: { ...updatedChartDomain }\n    };\n  }\n\n  /**\n   * Apply data set to custom tooltips.\n   *\n   * @returns {Array}\n   */\n  getTooltipData() {\n    const { dataSetsToggle } = this;\n    const { dataSets, chartTooltip } = this.props;\n    let tooltipDataSet = [];\n\n    if (chartTooltip && dataSets && dataSets[0] && dataSets[0].data) {\n      tooltipDataSet = dataSets[0].data.map((dataSet, index) => {\n        const itemsByKey = {};\n\n        dataSets.forEach(data => {\n          if (!dataSetsToggle[data.id] && data.data && data.data[index]) {\n            itemsByKey[data.id] = {\n              color: data.stroke || data.fill || data.color || '',\n              data: _cloneDeep(data.data[index])\n            };\n          }\n        });\n\n        const mockDatum = {\n          datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey, dataSets: _cloneDeep(dataSets) }\n        };\n\n        return {\n          x: dataSet.x,\n          y: null,\n          itemsByKey,\n          tooltip:\n            (React.isValidElement(chartTooltip) && React.cloneElement(chartTooltip, { ...mockDatum })) ||\n            chartTooltip({ ...mockDatum })\n        };\n      });\n    }\n\n    return tooltipDataSet;\n  }\n\n  /**\n   * ToDo: monitor Victory charts release version increment around Voronoi container attributes.\n   * Future updates could lead to additional unexpected behavior. Victory charts released a patch/fix\n   * around attribute behavior for Voronoi containers. The behavior was already \"unexpected\" in that there appears\n   * to be a need to provide the \"label\" attribute when using the \"labelComponent\" attribute, even if \"label\" is\n   * just a pass-through. Providing `label={() => ''}` was a work-around, that is now `label={obj => obj}`. See\n   * - https://github.com/FormidableLabs/victory/blob/master/CHANGELOG.md#3436-2020-05-18\n   * - https://github.com/FormidableLabs/victory/pull/1581\n   */\n  /**\n   * FixMe: Victory charts voronoi containers throw inaccurate coordinates on large graph widths\n   * Issue is \"patched\" by removing the \"x\" dimension attribute for voronoi.\n   * - https://github.com/RedHatInsights/curiosity-frontend/issues/318\n   */\n  /**\n   * Return a chart/graph tooltip Victory container component to allow custom HTML tooltips.\n   *\n   * @returns {Node}\n   */\n  renderTooltip() {\n    const { dataSetsToggle } = this;\n    const { chartTooltip, dataSets } = this.props;\n\n    if (!chartTooltip || Object.values(dataSetsToggle).filter(v => v === true).length === dataSets.length) {\n      return null;\n    }\n\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const parsedTooltipData = this.getTooltipData();\n    let globalContainerBounds = {};\n    let globalTooltipBounds = {};\n\n    const applyParsedTooltipData = ({ datum }) => {\n      const t = parsedTooltipData.find(v => v.x === datum.x) || {};\n      return t?.tooltip || '';\n    };\n\n    const FlyoutComponent = obj => {\n      const containerRef = this.containerRef.current;\n      const tooltipRef = this.tooltipRef.current;\n      const containerBounds = (containerRef && containerRef.getBoundingClientRect()) || {};\n      const tooltipBounds = (tooltipRef && tooltipRef.getBoundingClientRect()) || {};\n\n      if (containerBounds.right) {\n        globalContainerBounds = containerBounds;\n      }\n\n      if (tooltipBounds.right) {\n        globalTooltipBounds = tooltipBounds;\n      }\n\n      let xCoordinate = obj.x + 10;\n\n      if (\n        globalContainerBounds.right < globalTooltipBounds.right ||\n        obj.x + globalTooltipBounds.width > globalContainerBounds.right / 2\n      ) {\n        xCoordinate = obj.x - 10 - globalTooltipBounds.width;\n      }\n\n      const htmlContent = applyParsedTooltipData({ ...obj });\n\n      if (htmlContent) {\n        return (\n          <g>\n            <foreignObject x={xCoordinate} y={obj.y / 2.2} width=\"100%\" height=\"100%\">\n              <div ref={this.tooltipRef} style={{ display: 'inline-block' }} xmlns=\"http://www.w3.org/1999/xhtml\">\n                {htmlContent}\n              </div>\n            </foreignObject>\n          </g>\n        );\n      }\n\n      return <g />;\n    };\n\n    return (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={<FlyoutComponent />}\n        voronoiPadding={60}\n      />\n    );\n  }\n\n  /**\n   * Return a custom chart/graph legend component.\n   *\n   * @returns {Node}\n   */\n  renderLegend() {\n    const { chartLegend, dataSets } = this.props;\n\n    if (!chartLegend) {\n      return null;\n    }\n\n    const legendProps = {\n      datum: { dataSets: _cloneDeep(dataSets) },\n      chart: {\n        hide: this.onHide,\n        revert: this.onRevert,\n        toggle: this.onToggle,\n        isToggled: this.getIsToggled\n      }\n    };\n\n    return (\n      (React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n      chartLegend({ ...legendProps })\n    );\n  }\n\n  /**\n   * Return a list/array of both stacked and non-stacked charts/graphs.\n   *\n   * @param {boolean} stacked\n   * @returns {Array}\n   */\n  renderChart({ stacked = false }) {\n    const { dataSetsToggle } = this;\n    const { dataSets } = this.props;\n    const charts = [];\n    const chartsStacked = [];\n\n    const thresholdChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      if (dataSet.strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = dataSet.strokeDasharray;\n      }\n\n      return (\n        <ChartThreshold\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'step'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-threshold`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartArea. Appears enforced, see PFCharts. Leads to multiple checks and implementations.\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    const areaChart = (dataSet, index) => {\n      const dataColorStroke = { data: {} };\n\n      if (dataSet.fill) {\n        dataColorStroke.data.fill = dataSet.fill;\n      }\n\n      if (dataSet.stroke) {\n        dataColorStroke.data.stroke = dataSet.stroke;\n      }\n\n      if (dataSet.strokeWidth) {\n        dataColorStroke.data.strokeWidth = dataSet.strokeWidth;\n      }\n\n      return (\n        <PfChartArea\n          animate={dataSet.animate || false}\n          interpolation={dataSet.interpolation || 'monotoneX'}\n          key={helpers.generateId()}\n          name={`chartArea-${index}-area`}\n          data={dataSet.data}\n          style={{ ...(dataSet.style || {}), ...dataColorStroke }}\n          // FixMe: PFCharts inconsistent implementation around themeColor and style, see ChartThreshold themeColor and style\n          themeColor={dataSet.themeColor}\n          themeVariant={dataSet.themeVariant}\n        />\n      );\n    };\n\n    dataSets.forEach((dataSet, index) => {\n      if (!dataSetsToggle[dataSet.id] && dataSet.data && dataSet.data.length) {\n        const updatedDataSet = (dataSet.isThreshold && thresholdChart(dataSet, index)) || areaChart(dataSet, index);\n\n        if (dataSet.isStacked) {\n          chartsStacked.push(updatedDataSet);\n        } else {\n          charts.push(updatedDataSet);\n        }\n      }\n    });\n\n    return (stacked && chartsStacked) || charts;\n  }\n\n  /**\n   * Render a chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { chartWidth } = this.state;\n    const { chartLegend, padding, themeColor } = this.props;\n\n    const { isXAxisTicks, xAxisProps, yAxisProps } = this.getChartTicks();\n    const { chartDomain, maxY } = this.getChartDomain({ isXAxisTicks });\n    const tooltipComponent = { containerComponent: (maxY >= 0 && this.renderTooltip()) || undefined };\n    const chartProps = { padding, ...chartDomain, ...tooltipComponent };\n\n    return (\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={this.containerRef}\n      >\n        <Chart animate={{ duration: 0 }} width={chartWidth} themeColor={themeColor} {...chartProps}>\n          <ChartAxis {...xAxisProps} animate={false} />\n          <ChartAxis {...yAxisProps} animate={false} />\n          {this.renderChart({})}\n          <ChartStack>{this.renderChart({ stacked: true })}</ChartStack>\n        </Chart>\n        {chartLegend && <div className=\"curiosity-chartarea-description victory-legend\">{this.renderLegend()}</div>}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartLegend: Node|Function, chartTooltip: Node|Function, padding, xAxisTickFormat: Function,\n *     themeColor: string, yAxisTickFormat: Function, domain: object|Array, dataSets: object,\n *     xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      legendLabel: PropTypes.string,\n      legendSymbolType: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      isThreshold: PropTypes.bool,\n      xAxisLabelUseDataSet: PropTypes.bool\n    })\n  ),\n  domain: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  height: PropTypes.number,\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartLegend: null, chartTooltip: null, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: null, themeColor: string, yAxisTickFormat: null, domain: object,\n *     dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number, height: number}}\n */\nChartArea.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  domain: {},\n  dataSets: [],\n  height: 275,\n  padding: {\n    bottom: 75,\n    left: 50,\n    right: 50,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisFixLabelOverlap: false,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null\n};\n\nexport { ChartArea as default, ChartArea };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport { graphCardTypes } from './graphCardTypes';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport { ChartArea } from '../chartArea/chartArea';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass GraphCard extends React.Component {\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const graphQuery = {\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString(),\n        ...query\n      };\n\n      getGraphReportsCapacity(productId, graphQuery);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n      viewId,\n      [RHSM_API_QUERY_TYPES.GRANULARITY]: value\n    });\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * FixMe: custom use of dash over threshold vs updating PF Charts legend threshold symbol\n   *\n   * patternfly/react-tokens chart_threshold_stroke_dash_array and chart_threshold_stroke_Width\n   */\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, selectOptionsType, productLabel, query, viewId } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    const xAxisTickFormat = ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity: updatedGranularity\n      });\n\n    const chartAreaProps = {\n      xAxisFixLabelOverlap: true,\n      xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(updatedGranularity),\n      xAxisTickFormat,\n      yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n    };\n\n    const filteredGraphData = data => {\n      const filtered = key => {\n        const tempFiltered = {\n          data: data[key],\n          id: key,\n          animate: {\n            duration: 250,\n            onLoad: { duration: 250 }\n          },\n          strokeWidth: 2,\n          isStacked: !/^threshold/.test(key),\n          isThreshold: /^threshold/.test(key)\n        };\n\n        if (/^threshold/.test(key)) {\n          tempFiltered.animate = {\n            duration: 100,\n            onLoad: { duration: 100 }\n          };\n          tempFiltered.stroke = chartColorGreenDark.value;\n          tempFiltered.strokeDasharray = '4,3';\n          tempFiltered.strokeWidth = 3;\n        }\n\n        return tempFiltered;\n      };\n\n      if (filterGraphData.length) {\n        return filterGraphData.map(value => Object.assign(filtered(value.id), value));\n      }\n\n      return Object.keys(data).map(key => filtered(key));\n    };\n\n    return (\n      <ChartArea\n        key={`chart_${JSON.stringify(query)}`}\n        {...chartAreaProps}\n        dataSets={filteredGraphData(graphData)}\n        chartLegend={({ chart, datum }) => (\n          <GraphCardChartLegend chart={chart} datum={datum} productLabel={productLabel} viewId={viewId} />\n        )}\n        chartTooltip={({ datum }) => (\n          <GraphCardChartTooltip datum={datum} granularity={updatedGranularity} productLabel={productLabel} />\n        )}\n      />\n    );\n  }\n\n  /**\n   * ToDo: Evaluate applying a minHeight attr to the MinHeight component graphCard setup\n   * Appears there may be a minor page shift when compared to the prior hard-set min-height\n   * of 410px\n   */\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, isDisabled, pending, selectOptionsType, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = this.getQueryGranularity();\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <MinHeight key=\"headerMinHeight\">\n          <CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                {cardTitle}\n              </Title>\n            </CardTitle>\n            <CardActions className={(error && 'blur') || ''}>\n              {children}\n              <Select\n                aria-label={t('curiosity-graph.dropdownPlaceholder')}\n                onSelect={this.onGranularitySelect}\n                options={options}\n                selectedOptions={graphGranularity}\n                placeholder={t('curiosity-graph.dropdownPlaceholder')}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key=\"bodyMinHeight\">\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && <Loader variant=\"graph\" />}\n              {!pending && this.renderChart()}\n            </div>\n          </CardBody>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productLabel: string, productId: string, pending: boolean, error: boolean, query: object,\n *     cardTitle: string, filterGraphData: Array, getGraphReportsCapacity: Function,\n *     selectOptionsType: string, viewId: string, t: Function, children: Node, graphData: object,\n *     isDisabled: boolean}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      fill: PropTypes.string,\n      stroke: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  productLabel: PropTypes.string,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productLabel: string, selectOptionsType: string,\n *     viewId: string, t: translate, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  productLabel: '',\n  selectOptionsType: 'default',\n  t: translate,\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import moment from 'moment';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { translate } from '../i18n/i18n';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity }) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ date, granularity, tick, previousDate }) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {number|string} params.tick\n * @param {string} params.locale\n * @returns {string}\n */\nconst yAxisTickFormat = ({ tick, locale }) =>\n  new Intl.NumberFormat(locale, { maximumFractionDigits: 1, notation: 'compact', compactDisplay: 'short' }).format(\n    tick\n  );\n\n/**\n * Convert data into a C3 configuration object.\n *\n * @param {object} options\n * @param {Array} options.data\n * @param {string} options.granularity\n * @param {string} options.productShortLabel\n * @returns {{configuration: {padding: {top: number, left: number, bottom: number, right: number},\n *     data: {types: {}, names: {}, columns: Array, x: string, groups: Array, colors: {}},\n *     legend: {show: boolean}, grid: {y: {show: boolean}}, tooltip: {format: {title: Function,\n *     value: Function}, order: Function}, unloadBeforeLoad: boolean,\n *     spline: {interpolation: {type: string}}, axis: {x: {padding: number, tick: {format: Function},\n *     type: string}, y: {padding: {bottom: number}, default: number, min: number,\n *     tick: {show: boolean, outer: boolean, format: Function}}}, point: {show: boolean}},\n *     hiddenDataFacets: Array}}\n */\nconst c3Config = ({ data = [], granularity, productShortLabel }) => {\n  const hiddenDataFacets = [];\n  const converted = {\n    x: 'x',\n    colors: {},\n    columns: [],\n    groups: [[]],\n    names: {},\n    types: {}\n  };\n\n  const convertTimeSeriesDate = value => {\n    const dateStr = (helpers.TEST_MODE && moment.utc(value)) || moment.utc(value).local();\n    return dateStr.format('YYYY-MM-DD');\n  };\n\n  data.forEach(value => {\n    if (/^threshold/.test(value.id)) {\n      converted.colors[value.id] = value.color || chartColorGreenDark.value;\n      converted.types[value.id] = 'step';\n      converted.names[value.id] = translate(`curiosity-graph.thresholdLabel`);\n    } else {\n      converted.colors[value.id] = value.color;\n      converted.types[value.id] = 'area-spline';\n      converted.groups[0].push(value.id);\n      converted.names[value.id] = translate(`curiosity-graph.${value.id}Label`, { product: productShortLabel });\n    }\n\n    converted.columns[0] = ['x'];\n    converted.columns.push([value.id]);\n\n    let totalData = 0;\n\n    value.data.forEach(filteredValue => {\n      converted.columns[0].push(convertTimeSeriesDate(filteredValue.date));\n      converted.columns[converted.columns.length - 1].push(filteredValue.y);\n      totalData += filteredValue.y || 0;\n    });\n\n    // ToDo: need to check for infinite threshold, possibly has data\n    if (totalData <= 0) {\n      converted.columns.pop();\n      hiddenDataFacets.push(value.id);\n    }\n  });\n\n  return {\n    hiddenDataFacets,\n    configuration: {\n      tooltip: {\n        order: (a, b) => converted.columns.indexOf(a.id) - converted.columns.indexOf(b.id),\n        format: {\n          title: date =>\n            getTooltipDate({\n              date,\n              granularity\n            }),\n          value: (value, ratio, id, index) => {\n            const dataItem = data.find(dataValue => id === dataValue.id)?.data[index];\n            let updatedValue;\n\n            if (/^threshold/.test(id)) {\n              updatedValue =\n                (dataItem?.hasInfinite && translate('curiosity-graph.infiniteThresholdLabel')) ||\n                (dataItem?.y ?? translate('curiosity-graph.noDataLabel'));\n            } else {\n              updatedValue =\n                (dataItem?.hasData === false && translate('curiosity-graph.noDataLabel')) || dataItem?.y || 0;\n            }\n\n            return updatedValue;\n          }\n        }\n      },\n      unloadBeforeLoad: true,\n      padding: { left: 40, right: 40, top: 10, bottom: 10 },\n      legend: { show: false },\n      spline: {\n        interpolation: {\n          type: 'monotone'\n        }\n      },\n      data: {\n        ...converted\n      },\n      point: {\n        show: false\n      },\n      grid: {\n        y: {\n          show: true\n        }\n      },\n      axis: {\n        x: {\n          type: 'timeseries',\n          tick: {\n            format: tick => {\n              const xAxisTicks = converted.columns[0].slice(1);\n              const formattedDate = convertTimeSeriesDate(tick);\n              const dateIndex = xAxisTicks.indexOf(formattedDate);\n              const previousDate = dateIndex > -1 && xAxisTicks[dateIndex - 1];\n\n              return xAxisTickFormat({\n                tick: dateIndex,\n                date: formattedDate,\n                previousDate,\n                granularity\n              });\n            }\n          },\n          padding: 0\n        },\n        y: {\n          default: [0, 50],\n          padding: { bottom: 0 },\n          min: 0,\n          tick: {\n            show: false,\n            outer: false,\n            format: tick => (tick === 0 ? '' : yAxisTickFormat({ tick }))\n          }\n        }\n      }\n    }\n  };\n};\n\nconst c3GraphCardHelpers = {\n  c3Config,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  c3GraphCardHelpers as default,\n  c3GraphCardHelpers,\n  c3Config,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { EyeSlashIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\n\n/**\n * A chart/graph legend button.\n *\n * @augments React.Component\n * @fires onFocus\n * @fires onRevert\n * @fires onToggle\n */\nclass C3GraphCardLegendItem extends React.Component {\n  state = { updatedIsToggled: null };\n\n  /**\n   * C3 chart display focus.\n   *\n   * @event onFocus\n   */\n  onFocus = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, chartId, getToggle, isToggled } = this.props;\n\n    if ((typeof getToggle === 'function' && !isToggled) || !updatedIsToggled) {\n      chart.focus(chartId);\n    }\n  };\n\n  /**\n   * C3 chart display revert.\n   *\n   * @event onRevert\n   */\n  onRevert = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, getToggle, isToggled } = this.props;\n\n    if ((typeof getToggle === 'function' && !isToggled) || !updatedIsToggled) {\n      chart.revert();\n    }\n  };\n\n  /**\n   * C3 chart display toggle.\n   *\n   * @event onToggle\n   */\n  onToggle = () => {\n    const { updatedIsToggled } = this.state;\n    const { chart, chartId, getToggle, isToggled } = this.props;\n\n    chart.toggle(chartId);\n\n    if (typeof getToggle === 'function') {\n      getToggle({ isToggled: !isToggled });\n    } else {\n      this.setState({\n        updatedIsToggled: !updatedIsToggled\n      });\n    }\n\n    this.onRevert();\n  };\n\n  /**\n   * C3 chart display config color.\n   *\n   * @returns {string}\n   */\n  getColor = () => {\n    const { chart, chartId } = this.props;\n    return chart.color(chartId);\n  };\n\n  /**\n   * ToDO: evaluate using nullish coalescing operator for checkIsToggled\n   */\n  /**\n   * Render a chart legend item.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedIsToggled } = this.state;\n    const { children, chart, chartId, isDisabled, isThreshold, isToggled, tooltipContent } = this.props;\n    const checkIsToggled =\n      (updatedIsToggled === null && typeof isToggled === 'boolean' && isToggled) || updatedIsToggled || false;\n\n    if (checkIsToggled) {\n      chart.hide(chartId);\n    }\n\n    const button = (\n      <Button\n        tabIndex={0}\n        key={`curiosity-button-${chartId}`}\n        variant=\"link\"\n        onClick={this.onToggle}\n        onFocus={this.onFocus}\n        onMouseOver={this.onFocus}\n        onBlur={this.onRevert}\n        onMouseOut={this.onRevert}\n        onKeyPress={this.onToggle}\n        component=\"a\"\n        isDisabled={isDisabled}\n        icon={\n          ((isDisabled || checkIsToggled) && <EyeSlashIcon />) ||\n          (isThreshold && (\n            <hr\n              aria-hidden\n              className=\"threshold-legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                borderTopColor: this.getColor()\n              }}\n            />\n          )) || (\n            <div\n              aria-hidden\n              className=\"legend-icon\"\n              style={{\n                visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible',\n                backgroundColor: this.getColor()\n              }}\n            />\n          )\n        }\n      >\n        {children}\n      </Button>\n    );\n\n    /**\n     * FixMe: PF Tooltip has breaking changes not called out in changelog.md for PF React-core?\n     * Unclear which changelog this is called out in. Had to open the PF React-core component\n     * and the associated PR to determine when breaking changes were activated. v4.30.0\n     *   - https://github.com/patternfly/patternfly-react/pull/4491/files\n     *\n     * Breaking changes:\n     * 1. enableFlip prop is more sensitive, and/or not overridden by declaring \"position\"\n     *    - enableFlip possibly causes unintended behavior on smaller screen sizes when \"distance\" prop\n     *      is set to \"0\"\n     * 2. unit test snapshots updated, causing CI to fail\n     * 3. removing props, deprecating them, having them \"[not do anything]\"\n     */\n    if (tooltipContent) {\n      return (\n        <Tooltip\n          key={`curiosity-tooltip-${chartId}`}\n          content={tooltipContent}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          {button}\n        </Tooltip>\n      );\n    }\n\n    return button;\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{chartId: string, children: Node, isDisabled: boolean, tooltipContent: Node, chart: object,\n *    isThreshold: boolean, isToggled: boolean, getToggle: Function}}\n */\nC3GraphCardLegendItem.propTypes = {\n  chart: PropTypes.shape({\n    color: PropTypes.func,\n    focus: PropTypes.func,\n    hide: PropTypes.func,\n    revert: PropTypes.func,\n    toggle: PropTypes.func\n  }),\n  chartId: PropTypes.string.isRequired,\n  children: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  isThreshold: PropTypes.bool,\n  isToggled: PropTypes.bool,\n  tooltipContent: PropTypes.node,\n  getToggle: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, isDisabled: boolean, tooltipContent: null, chart: {hide: Function,\n *    color: Function, focus: Function, revert: Function, toggle: Function}, isThreshold: boolean,\n *    isToggled: boolean, getToggle: Function}}\n */\nC3GraphCardLegendItem.defaultProps = {\n  chart: {\n    color: helpers.noop,\n    focus: helpers.noop,\n    hide: helpers.noop,\n    revert: helpers.noop,\n    toggle: helpers.noop\n  },\n  children: null,\n  isDisabled: false,\n  isThreshold: false,\n  isToggled: false,\n  tooltipContent: null,\n  getToggle: null\n};\n\nexport { C3GraphCardLegendItem as default, C3GraphCardLegendItem };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport c3 from 'c3';\nimport _isEqual from 'lodash/isEqual';\nimport 'c3/c3.min.css';\nimport { helpers } from '../../common';\n\n/**\n * C3 wrapper.\n * Uses aspects from https://github.com/bcbcarl/react-c3js and https://github.com/wuct/react-c3-component\n *\n * @augments React.Component\n */\nclass C3Chart extends React.Component {\n  state = { chart: null };\n\n  node = React.createRef();\n\n  componentDidMount() {\n    this.generateChart();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { config } = this.props;\n\n    if (!_isEqual(prevProps.config.data, config.data)) {\n      this.generateChart();\n    }\n  }\n\n  componentWillUnmount() {\n    const { chart } = this.state;\n    if (chart) {\n      chart.destroy();\n    }\n    this.setState({ chart: null });\n  }\n\n  generateChart() {\n    const { chart } = this.state;\n    const { config, onComplete } = this.props;\n\n    let updatedChart = chart;\n    if (!updatedChart) {\n      updatedChart = c3.generate({ bindto: this.node.current, ...config });\n    }\n\n    updatedChart.load({\n      ...config.data,\n      unload: config.unloadBeforeLoad || false,\n      done: () => {\n        this.setState({ chart: updatedChart }, () => {\n          if (config.done) {\n            config.done({ chart: updatedChart, config });\n          } else {\n            onComplete({ chart: updatedChart, config });\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const { chart } = this.state;\n    const { className, children, config, style } = this.props;\n\n    return (\n      <div className={`curiosity-c3chart ${className}`} style={style}>\n        <div ref={this.node} className=\"curiosity-c3chart-container\" />\n        {chart && (\n          <div className=\"curiosity-c3chart-description\">\n            {(typeof children === 'function' && children({ chart, config })) || children}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{children: Node|Function, onComplete: Function, className: string, style: object, config}}\n */\nC3Chart.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  className: PropTypes.string,\n  config: PropTypes.shape({\n    unloadBeforeLoad: PropTypes.bool,\n    data: PropTypes.object,\n    done: PropTypes.func\n  }),\n  onComplete: PropTypes.func,\n  style: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, onComplete: Function, className: null, style: {}, config: {}}}\n */\nC3Chart.defaultProps = {\n  children: null,\n  className: null,\n  config: {},\n  onComplete: helpers.noop,\n  style: {}\n};\n\nexport { C3Chart as default, C3Chart };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport _isEqual from 'lodash/isEqual';\nimport { Select } from '../form/select';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport { helpers, dateHelpers } from '../../common';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { c3GraphCardHelpers } from './c3GraphCardHelpers';\nimport { C3GraphCardLegendItem } from './c3GraphCardLegendItem';\nimport { graphCardTypes } from '../graphCard/graphCardTypes';\nimport { C3Chart } from '../c3Chart/c3Chart';\nimport { Loader } from '../loader/loader';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: Convert \"productShortLabel\" prop to \"productLabel\" for consistency\n * This is dependent on ALL c3 components being removed as part of future updates.\n */\n/**\n * A chart/graph card.\n *\n * @augments React.Component\n * @fires onUpdateGraphData\n * @fires onGranularitySelect\n */\nclass C3GraphCard extends React.Component {\n  state = {};\n\n  componentDidMount() {\n    this.onUpdateGraphData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, productId } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateGraphData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGraphData\n   */\n  onUpdateGraphData = () => {\n    const { getGraphReportsCapacity, isDisabled, productId, query } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n\n    if (!isDisabled && graphGranularity && productId) {\n      const { startDate, endDate } = dateHelpers.getRangedDateTime(graphGranularity);\n      const graphQuery = {\n        [RHSM_API_QUERY_TYPES.START_DATE]: startDate.toISOString(),\n        [RHSM_API_QUERY_TYPES.END_DATE]: endDate.toISOString(),\n        ...query\n      };\n\n      getGraphReportsCapacity(productId, graphQuery);\n    }\n  };\n\n  /**\n   * On granularity select, dispatch granularity type.\n   *\n   * @event onGranularitySelect\n   * @param {object} event\n   */\n  onGranularitySelect = (event = {}) => {\n    const { value } = event;\n    const { viewId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY],\n      viewId,\n      [RHSM_API_QUERY_TYPES.GRANULARITY]: value\n    });\n  };\n\n  getQueryGranularity() {\n    const { query } = this.props;\n    return query?.[RHSM_API_QUERY_TYPES.GRANULARITY];\n  }\n\n  /**\n   * Apply a custom legend.\n   *\n   * @param {object} options\n   * @param {Function} options.chart\n   * @param {Array} options.filteredData\n   * @param {string} options.granularity\n   * @param {Array} options.hiddenDataFacets\n   * @returns {Array}\n   */\n  renderLegend({ chart, filteredData = [], granularity, hiddenDataFacets = [] }) {\n    const { state } = this;\n    const { productId, productShortLabel, t } = this.props;\n\n    return filteredData.map(({ id }) => {\n      const isThreshold = /^threshold/.test(id);\n      const isDataHidden = hiddenDataFacets.includes(id);\n      const tooltipContent = (\n        <p>{(isThreshold && t(`curiosity-graph.thresholdLegendTooltip`)) || t(`curiosity-graph.${id}LegendTooltip`)}</p>\n      );\n\n      const getToggle = ({ isToggled }) => this.setState({ [`${productId}-${granularity}-${id}`]: isToggled });\n      const isToggled = state[`${productId}-${granularity}-${id}`] || false;\n\n      return (\n        <C3GraphCardLegendItem\n          key={`legend-${productId}-${granularity}-${id}`}\n          chart={chart}\n          chartId={id}\n          tooltipContent={tooltipContent}\n          isDisabled={isDataHidden}\n          isThreshold={isThreshold}\n          isToggled={isToggled}\n          getToggle={getToggle}\n        >\n          {(isThreshold && t(`curiosity-graph.thresholdLabel`)) ||\n            t(`curiosity-graph.${id}Label`, { product: productShortLabel })}\n        </C3GraphCardLegendItem>\n      );\n    });\n  }\n\n  /**\n   * Apply props to chart/graph.\n   *\n   * @returns {Node}\n   */\n  renderChart() {\n    const { filterGraphData, graphData, productId, productShortLabel, selectOptionsType } = this.props;\n    const graphGranularity = this.getQueryGranularity();\n    const { selected } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const updatedGranularity = graphGranularity || selected;\n\n    if (!graphData || !Object.values(graphData).length) {\n      return null;\n    }\n\n    const filtered = [];\n\n    if (filterGraphData.length) {\n      filterGraphData.forEach(filteredValue => {\n        if (graphData[filteredValue.id]) {\n          filtered.push({ ...filteredValue, data: [...graphData[filteredValue.id]] });\n        }\n      });\n    } else {\n      Object.keys(graphData).forEach(id => {\n        filtered.push({ id, data: [...graphData[id]] });\n      });\n    }\n\n    const { configuration = {}, hiddenDataFacets = [] } = c3GraphCardHelpers.c3Config({\n      data: filtered,\n      granularity: updatedGranularity,\n      productShortLabel\n    });\n\n    return (\n      <C3Chart key={`chart-${productId}-${updatedGranularity}`} config={configuration}>\n        {({ chart }) =>\n          this.renderLegend({\n            chart,\n            filteredData: filtered,\n            granularity: updatedGranularity,\n            hiddenDataFacets\n          })\n        }\n      </C3Chart>\n    );\n  }\n\n  /**\n   * Render a chart/graph card with chart/graph.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { cardTitle, children, error, isDisabled, pending, selectOptionsType, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options } = graphCardTypes.getGranularityOptions(selectOptionsType);\n    const graphGranularity = this.getQueryGranularity();\n\n    return (\n      <Card className=\"curiosity-usage-graph\">\n        <CardHeader>\n          <CardTitle>\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {cardTitle}\n            </Title>\n          </CardTitle>\n          <CardActions className={(error && 'blur') || ''}>\n            {children}\n            <Select\n              aria-label={t('curiosity-graph.dropdownPlaceholder')}\n              onSelect={this.onGranularitySelect}\n              options={options}\n              selectedOptions={graphGranularity}\n              placeholder={t('curiosity-graph.dropdownPlaceholder')}\n            />\n          </CardActions>\n        </CardHeader>\n        <CardBody>\n          <div className={(error && 'blur') || 'fadein'}>\n            {pending && <Loader variant=\"graph\" />}\n            {!pending && this.renderChart()}\n          </div>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, pending: boolean, error: boolean, query: object, cardTitle: string,\n *     filterGraphData: Array, getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: Function, children: Node, graphData: object, isDisabled: boolean}}\n */\nC3GraphCard.propTypes = {\n  cardTitle: PropTypes.string,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  filterGraphData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      color: PropTypes.string\n    })\n  ),\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: PropTypes.oneOf([...Object.values(GRANULARITY_TYPES)]).isRequired\n  }).isRequired,\n  isDisabled: PropTypes.bool,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  selectOptionsType: PropTypes.oneOf(['default']),\n  t: PropTypes.func,\n  productShortLabel: PropTypes.string,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, productShortLabel: string, selectOptionsType: string,\n *     viewId: string, t: translate, children: null, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: null, filterGraphData: Array}}\n */\nC3GraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  filterGraphData: [],\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  pending: false,\n  selectOptionsType: 'default',\n  t: translate,\n  productShortLabel: '',\n  viewId: 'graphCard'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(C3GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, C3GraphCard };\n","import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Apply sort filter to filters.\n *\n * @param {object} params\n * @param {object} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {object}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} }) => {\n  const { id } = filter;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === id\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  return updatedFilter;\n};\n\nconst applyWrappableFilters = ({ filter = {} }) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Apply additional properties to filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {Array}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} }) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.cellData\n * @param {object} params.session\n * @returns {{columnHeaders: Array, cells: Array, data: object}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, session = {} }) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value]) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value);\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    filters.forEach(({ id, cell, cellWidth, header, onSort, sortActive, sortDirection, transforms }) => {\n      let headerUpdated;\n      let cellUpdated;\n\n      if (allCells[id]) {\n        headerUpdated = allCells[id]?.title ?? id;\n        cellUpdated = allCells[id]?.value ?? '';\n      }\n\n      // set table header cell filter params\n      if (header) {\n        headerUpdated = (typeof header === 'function' && header({ ...allCells })) || header;\n      }\n\n      if (\n        typeof headerUpdated === 'string' ||\n        typeof headerUpdated === 'number' ||\n        React.isValidElement(headerUpdated)\n      ) {\n        headerUpdated = {\n          title: headerUpdated\n        };\n      }\n\n      headerUpdated.transforms = [];\n\n      if (Array.isArray(transforms)) {\n        headerUpdated.transforms = headerUpdated.transforms.concat([...transforms]);\n      }\n\n      if (typeof cellWidth === 'number') {\n        headerUpdated.transforms.push(PfCellWidth(cellWidth));\n      }\n\n      if (typeof onSort === 'function') {\n        headerUpdated = {\n          ...headerUpdated,\n          onSort: obj => onSort({ ...allCells }, { ...obj, id }),\n          sortActive,\n          sortDirection\n        };\n      }\n\n      // set table row cell filter params\n      if (cell) {\n        cellUpdated = (typeof cell === 'function' && cell({ ...allCells }, { ...session })) || cell;\n      }\n\n      if (typeof cellUpdated === 'string' || typeof cellUpdated === 'number' || React.isValidElement(cellUpdated)) {\n        cellUpdated = {\n          title: cellUpdated\n        };\n      }\n\n      updatedColumnHeaders.push(headerUpdated);\n      updatedCells.push(cellUpdated);\n    });\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryListHelpers = {\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryListHelpers as default,\n  inventoryListHelpers,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { helpers } from '../../common';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { Loader } from '../loader/loader';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { Table } from '../table/table';\n\n/**\n * ToDo: Consider removing the query prop entirely.\n * The current API doesn't allow setting more than \"offset\" and \"limit\"\n */\n/**\n * ToDo: Review moving the \"onScroll\" layout into a standalone component.\n */\n/**\n * A system inventory guests component.\n *\n * @augments React.Component\n * @fires onUpdateGuestsData\n * @fires onScroll\n */\nclass GuestsList extends React.Component {\n  state = { currentPage: 0, limit: 100, previousData: [] };\n\n  componentDidMount() {\n    this.onUpdateGuestsData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentPage } = this.state;\n\n    if (currentPage !== prevState.currentPage) {\n      this.onUpdateGuestsData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGuestsData\n   */\n  onUpdateGuestsData = () => {\n    const { currentPage, limit } = this.state;\n    const { getHostsInventoryGuests, query, id } = this.props;\n\n    if (id) {\n      const updatedQuery = {\n        ...query,\n        [RHSM_API_QUERY_TYPES.LIMIT]: limit,\n        [RHSM_API_QUERY_TYPES.OFFSET]: currentPage * limit || 0\n      };\n\n      const { guestsQuery } = apiQueries.parseRhsmQuery(updatedQuery);\n      getHostsInventoryGuests(id, guestsQuery);\n    }\n  };\n\n  /**\n   * Update page state.\n   *\n   * @event onScroll\n   * @param {object} event\n   */\n  onScroll = event => {\n    const { target } = event;\n    const { currentPage, limit, previousData } = this.state;\n    const { numberOfGuests, pending, listData } = this.props;\n\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > (currentPage + 1) * limit && bottom && !pending) {\n      const newPage = currentPage + 1;\n      const updatedData = [...previousData, ...(listData || [])];\n\n      this.setState({\n        previousData: updatedData,\n        currentPage: newPage\n      });\n    }\n  };\n\n  renderLoader() {\n    const { currentPage } = this.state;\n    const { filterGuestsData, listData, pending } = this.props;\n\n    if (currentPage > 0 && pending) {\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            rowCount: 0,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  }\n\n  /**\n   * ToDo: Consider moving the \"meaning of life\" into the default props on iteration.\n   * For everyone else... move the 42 into default props, possibly the 275.\n   */\n  /**\n   * Render a guests table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { previousData } = this.state;\n    const { filterGuestsData, listData, numberOfGuests, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = [...previousData, ...(listData || [])].map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: filterGuestsData,\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    // Include the table header\n    let updatedHeight = (numberOfGuests + 1) * 42;\n    updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n    return (\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={this.onScroll}\n        >\n          {this.renderLoader()}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render a guest list table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { currentPage } = this.state;\n    const { error, filterGuestsData, listData, numberOfGuests, pending, perPageDefault } = this.props;\n\n    return (\n      <div className={`fadein ${(error && 'blur') || ''}`}>\n        {pending && currentPage === 0 && (\n          <Loader\n            variant=\"table\"\n            tableProps={{\n              borders: false,\n              colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n              colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n              rowCount: numberOfGuests < perPageDefault ? numberOfGuests : perPageDefault,\n              variant: TableVariant.compact\n            }}\n          />\n        )}\n        {((!pending && currentPage === 0) || currentPage > 0) && this.renderTable()}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: object,\n *     pending: boolean, query: object, numberOfGuests: number, perPageDefault: number, id: string,\n *     error: boolean}}\n */\nGuestsList.propTypes = {\n  error: PropTypes.bool,\n  filterGuestsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventoryGuests: PropTypes.func,\n  listData: PropTypes.array,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  pending: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object,\n  session: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: Array,\n *     pending: boolean, query: object, perPageDefault: number, error: boolean}}\n */\nGuestsList.defaultProps = {\n  error: false,\n  filterGuestsData: [],\n  getHostsInventoryGuests: helpers.noop,\n  listData: [],\n  pending: false,\n  perPageDefault: 5,\n  query: {},\n  session: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventoryGuests: (id, query) => dispatch(reduxActions.rhsm.getHostsInventoryGuests(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.guestsList.makeGuestsList();\n\nconst ConnectedGuestsList = connect(makeMapStateToProps, mapDispatchToProps)(GuestsList);\n\nexport { ConnectedGuestsList as default, ConnectedGuestsList, GuestsList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * Contained pagination.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onPage\n * @fires onPerPage\n */\nclass Pagination extends React.Component {\n  /**\n   * Call page update.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.page\n   */\n  onPage = ({ page }) => {\n    const { offsetDefault, perPageDefault, query } = this.props;\n    const updatedPerPage = query?.[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const offset = updatedPerPage * (page - 1) || offsetDefault;\n\n    this.setOffset(offset);\n    this.setLimit(updatedPerPage);\n  };\n\n  /**\n   * Call per-page update.\n   *\n   * @event onPerPage\n   * @param {object} params\n   * @param {number} params.perPage\n   */\n  onPerPage = ({ perPage }) => {\n    this.setOffset();\n    this.setLimit(perPage);\n  };\n\n  /**\n   * Set page state.\n   *\n   * @param {number} offset\n   */\n  setOffset(offset) {\n    const { offsetDefault, productId } = this.props;\n    const updatedActions = [];\n\n    updatedActions.push({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n      viewId: productId,\n      [RHSM_API_QUERY_TYPES.OFFSET]: offset ?? offsetDefault\n    });\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Set per-page state.\n   *\n   * @param {number} limit\n   */\n  setLimit(limit) {\n    const { perPageDefault, productId } = this.props;\n    const updatedActions = [];\n\n    updatedActions.push({\n      type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n      viewId: productId,\n      [RHSM_API_QUERY_TYPES.LIMIT]: limit ?? perPageDefault\n    });\n\n    store.dispatch(updatedActions);\n  }\n\n  // ToDo: Consider using the PfPagination \"offset\" prop\n  /**\n   * Render pagination.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { dropDirection, isCompact, isDisabled, itemCount, perPageDefault, query, variant } = this.props;\n    const updatedPage = query[RHSM_API_QUERY_TYPES.OFFSET] / query[RHSM_API_QUERY_TYPES.LIMIT] + 1 || 1;\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n\n    return (\n      <PfPagination\n        className={(!itemCount && 'hidden') || ''}\n        dropDirection={dropDirection}\n        isCompact={isCompact}\n        isDisabled={isDisabled || !itemCount}\n        itemCount={itemCount}\n        page={updatedPage}\n        perPage={updatedPerPage}\n        onSetPage={(event, page) => this.onPage({ event, page })}\n        onPerPageSelect={(event, perPage) => this.onPerPage({ event, perPage })}\n        variant={variant}\n      />\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, productId: string, query, dropDirection: string,\n *     offsetDefault: number, variant: string, perPageDefault: number, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.LIMIT]: PropTypes.number,\n    [RHSM_API_QUERY_TYPES.OFFSET]: PropTypes.number\n  }),\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offsetDefault: PropTypes.number,\n  perPageDefault: PropTypes.number,\n  productId: PropTypes.string.isRequired,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, query: object, dropDirection: string, offsetDefault: number,\n *     variant: null, perPageDefault: number, isDisabled: boolean, itemCount: number}}\n */\nPagination.defaultProps = {\n  query: {},\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offsetDefault: 0,\n  perPageDefault: 10,\n  variant: null\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.view\n * @param {object} props\n * @param {string} props.productId\n * @returns {object}\n */\nconst mapStateToProps = ({ view }, { productId }) => ({ query: view.query?.[productId] });\n\nconst ConnectedPagination = connect(mapStateToProps)(Pagination);\n\nexport { ConnectedPagination as default, ConnectedPagination, Pagination };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Card, CardActions, CardBody, CardFooter, CardHeader, CardTitle, Title } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/components/cjs/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport GuestsList from '../guestsList/guestsList';\nimport { inventoryListHelpers } from './inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * A system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onUpdateInventoryData\n */\nclass InventoryList extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getHostsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getHostsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterGuestsData, filterInventoryData, listData, query, session, settings } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      const guestsId = cellData?.subscriptionManagerId;\n      let hasGuests = cellData?.numberOfGuests > 0 && guestsId;\n\n      // Apply hasGuests callback, return boolean\n      if (typeof settings?.hasGuests === 'function') {\n        hasGuests = settings.hasGuests({ ...cellData }, { ...session });\n      }\n\n      return {\n        cells,\n        expandedContent:\n          (hasGuests && (\n            <GuestsList\n              key={guestsId}\n              filterGuestsData={filterGuestsData}\n              numberOfGuests={cellData?.numberOfGuests}\n              id={guestsId}\n              query={query}\n            />\n          )) ||\n          undefined\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      cardTitle,\n      error,\n      filterInventoryData,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      productId,\n      query,\n      viewId,\n      fulfilled\n    } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const updatedPerPage = query?.[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedPage = query[RHSM_API_QUERY_TYPES.OFFSET] / query[RHSM_API_QUERY_TYPES.LIMIT] + 1 || 1;\n    const isLastPage = updatedPage === Math.ceil(itemCount / updatedPerPage);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader>\n            <CardTitle>\n              <Title headingLevel=\"h2\" size=\"lg\">\n                {cardTitle}\n              </Title>\n            </CardTitle>\n            <CardActions className={(error && 'blur') || ''}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                productId={productId}\n                viewId={viewId}\n                perPageDefault={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || 'fadein'}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter className={(error && 'blur') || ''}>\n            <TableToolbar isFooter>\n              <Pagination\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                productId={productId}\n                viewId={viewId}\n                perPageDefault={updatedPerPage}\n                dropDirection=\"up\"\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{settings: object, productId: string, listData: Array, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, getHostsInventory: Function, error: boolean, cardTitle: string, itemCount: number,\n *     viewId: string, filterInventoryData: Array, filterGuestsData: Array, perPageDefault: number,\n *     isDisabled: boolean}}\n */\nInventoryList.propTypes = {\n  cardTitle: PropTypes.string,\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterGuestsData: PropTypes.array,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  settings: PropTypes.shape({\n    hasGuests: PropTypes.func\n  }),\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{settings: object, listData: Array, session: object, pending: boolean, fulfilled: boolean,\n *     getHostsInventory: Function, error: boolean, cardTitle: null, itemCount: number, viewId: string,\n *     filterInventoryData: Array, filterGuestsData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.defaultProps = {\n  cardTitle: null,\n  error: false,\n  fulfilled: false,\n  filterGuestsData: [],\n  filterInventoryData: [],\n  getHostsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  settings: {},\n  viewId: 'inventoryList'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventory: (id, query) => dispatch(reduxActions.rhsm.getHostsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.inventoryList.makeInventoryList();\n\nconst ConnectedInventoryList = connect(makeMapStateToProps, mapDispatchToProps)(InventoryList);\n\nexport { ConnectedInventoryList as default, ConnectedInventoryList, InventoryList };\n","import { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SLA_TYPES as SLA_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES as USAGE_TYPES\n} from '../../types/rhsmApiTypes';\n\n/**\n * Get filter options to display by type.\n *\n * @param {string} optionsType\n * @returns {object}\n */\nconst getOptionsType = optionsType => {\n  switch (optionsType) {\n    case RHSM_API_QUERY_TYPES.SLA:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.slaPremium'),\n            value: SLA_TYPES.PREMIUM\n          },\n          {\n            title: translate('curiosity-toolbar.slaStandard'),\n            value: SLA_TYPES.STANDARD\n          },\n          {\n            title: translate('curiosity-toolbar.slaSelfSupport'),\n            value: SLA_TYPES.SELF\n          },\n          {\n            title: translate('curiosity-toolbar.slaNone'),\n            value: SLA_TYPES.NONE\n          }\n        ]\n      };\n    case RHSM_API_QUERY_TYPES.USAGE:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.usageDevelopment'),\n            value: USAGE_TYPES.DEVELOPMENT\n          },\n          {\n            title: translate('curiosity-toolbar.usageDisaster'),\n            value: USAGE_TYPES.DISASTER\n          },\n          {\n            title: translate('curiosity-toolbar.usageProduction'),\n            value: USAGE_TYPES.PRODUCTION\n          },\n          {\n            title: translate('curiosity-toolbar.usageUnspecified'),\n            value: USAGE_TYPES.UNSPECIFIED\n          }\n        ]\n      };\n    default:\n      return {\n        selected: null,\n        options: [\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.SLA }),\n            value: RHSM_API_QUERY_TYPES.SLA\n          },\n          {\n            title: translate('curiosity-toolbar.category', { context: RHSM_API_QUERY_TYPES.USAGE }),\n            value: RHSM_API_QUERY_TYPES.USAGE\n          }\n        ]\n      };\n  }\n};\n\nconst toolbarTypes = {\n  getOptions: getOptionsType\n};\n\nexport { toolbarTypes as default, toolbarTypes, getOptionsType };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar as PfToolbar,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup\n} from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons';\nimport { Select } from '../form/select';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Application filter toolbar.\n *\n * @augments React.Component\n * @fires onClear\n * @fires onClearFilter\n * @fires onCategorySelect\n * @fires onSelect\n */\nclass Toolbar extends React.Component {\n  /**\n   * Clear all filters' state.\n   *\n   * @event onClear\n   */\n  onClear = () => {\n    const { hardFilterReset } = this.props;\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: new Set() } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [RHSM_API_QUERY_TYPES.SLA]: null,\n            [RHSM_API_QUERY_TYPES.USAGE]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: null } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Clear individual filter state.\n   *\n   * @event onClearFilter\n   * @param {string} categoryTitle\n   */\n  onClearFilter = categoryTitle => {\n    const { activeFilters, currentFilter, hardFilterReset } = this.props;\n\n    const categoryOptions = toolbarTypes.getOptions();\n    const { value: categoryValue } = categoryOptions.options.find(({ title }) => title === categoryTitle) || {};\n\n    if (!categoryValue) {\n      return;\n    }\n\n    const updatedActiveFilters = new Set(activeFilters);\n    updatedActiveFilters.delete(categoryValue);\n\n    const dispatchActions = [\n      { type: reduxTypes.toolbar.SET_ACTIVE_FILTERS, data: { activeFilters: updatedActiveFilters } },\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR,\n        data: {\n          clearFilters: {\n            [categoryValue]: null\n          }\n        }\n      }\n    ];\n\n    if (hardFilterReset) {\n      const updatedCurrentFilter = (updatedActiveFilters.size > 0 && currentFilter) || null;\n      dispatchActions.push({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: updatedCurrentFilter } });\n    }\n\n    this.setDispatch(dispatchActions, true);\n  };\n\n  /**\n   * Set Category selection.\n   *\n   * @event onCategorySelect\n   * @param {object} event\n   */\n  onCategorySelect = event => {\n    const { value } = event;\n    this.setDispatch({ type: reduxTypes.toolbar.SET_FILTER_TYPE, data: { currentFilter: value } });\n  };\n\n  /**\n   * Set select filter selection for dispatch.\n   *\n   * @param {object} params\n   * @param {object} params.event\n   * @param {string} params.field\n   */\n  onSelect = ({ event, field }) => {\n    const { activeFilters } = this.props;\n    const { value } = event;\n    const updatedActiveFilters = new Set(activeFilters).add(field);\n\n    this.setDispatch(\n      [\n        {\n          type: reduxTypes.toolbar.SET_ACTIVE_FILTERS,\n          data: { activeFilters: updatedActiveFilters }\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_TYPES[field],\n          data: { [field]: value }\n        }\n      ],\n      true\n    );\n  };\n\n  /**\n   * Dispatch a Redux store type.\n   *\n   * @param {Array|object} actions\n   * @param {boolean} resetPage\n   */\n  setDispatch(actions, resetPage = false) {\n    const { viewId } = this.props;\n    const updatedActions = ((Array.isArray(actions) && actions) || [actions]).map(({ type, data }) => ({\n      type,\n      viewId,\n      ...data\n    }));\n\n    if (resetPage) {\n      updatedActions.push({\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST\n      });\n    }\n\n    store.dispatch(updatedActions);\n  }\n\n  /**\n   * Available, and selected select filter options.\n   *\n   * @param {string} field\n   * @returns {{optionsSelected: Array, options: Array }}\n   */\n  setSelectFilter(field) {\n    const { query } = this.props;\n    const options = toolbarTypes.getOptions(field);\n    const currentFilter = this.getCurrentFilter();\n    let filter;\n\n    if (field) {\n      filter = typeof query?.[field] === 'string' && options.options.find(({ value }) => value === query?.[field]);\n    } else {\n      filter = options.options.find(({ value }) => value === currentFilter);\n    }\n\n    const optionsSelected = (filter?.title && [filter.title]) || (options?.selected && [options.selected]) || [];\n\n    return { options, optionsSelected };\n  }\n\n  /**\n   * Return the currentFilter, fallback to selected\n   *\n   * @returns {string|undefined}\n   */\n  getCurrentFilter() {\n    const { currentFilter, filterOptions } = this.props;\n\n    return (\n      currentFilter ||\n      filterOptions.find(({ selected }) => selected === true)?.id ||\n      (filterOptions.length === 1 && filterOptions[0]?.id)\n    );\n  }\n\n  /**\n   * A select filter node.\n   *\n   * @param {object} params\n   * @param {string} params.id\n   * @returns {object}\n   */\n  renderSelectFilter({ id: field }) {\n    const { t } = this.props;\n    const { options, optionsSelected } = this.setSelectFilter(field);\n    const currentFilter = this.getCurrentFilter();\n\n    return (\n      <ToolbarFilter\n        key={field}\n        chips={optionsSelected}\n        deleteChip={this.onClearFilter}\n        categoryName={t('curiosity-toolbar.category', { context: field })}\n        showToolbarItem={currentFilter === field}\n      >\n        <Select\n          aria-label={t('curiosity-toolbar.category', { context: field })}\n          onSelect={event => this.onSelect({ event, field })}\n          selectedOptions={optionsSelected}\n          placeholder={t('curiosity-toolbar.placeholder', { context: field })}\n          options={options.options}\n        />\n      </ToolbarFilter>\n    );\n  }\n\n  /**\n   * Render a filter toolbar.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { filterOptions, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const { options: categoryOptions, optionsSelected: categoryOptionsSelected } = this.setSelectFilter();\n\n    return (\n      <PfToolbar\n        id=\"curiosity-toolbar\"\n        className=\"curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"sm\"\n        clearAllFilters={this.onClear}\n      >\n        <ToolbarContent>\n          <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"md\">\n            <ToolbarGroup variant=\"filter-group\">\n              {filterOptions.length !== 1 && (\n                <ToolbarItem>\n                  <Select\n                    aria-label={t('curiosity-toolbar.category')}\n                    onSelect={this.onCategorySelect}\n                    selectedOptions={categoryOptionsSelected}\n                    placeholder={t('curiosity-toolbar.placeholder')}\n                    options={categoryOptions.options}\n                    toggleIcon={<FilterIcon />}\n                  />\n                </ToolbarItem>\n              )}\n              {filterOptions.map(({ id, selected }) => this.renderSelectFilter({ id, selected }))}\n            </ToolbarGroup>\n          </ToolbarToggleGroup>\n        </ToolbarContent>\n      </PfToolbar>\n    );\n  }\n}\n\n/**\n * Prop types\n *\n * @type {{viewId: string, t: Function, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, Array}}\n */\nToolbar.propTypes = {\n  query: PropTypes.shape({\n    [RHSM_API_QUERY_TYPES.SLA]: PropTypes.string,\n    [RHSM_API_QUERY_TYPES.USAGE]: PropTypes.string\n  }),\n  activeFilters: PropTypes.instanceOf(Set),\n  currentFilter: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n  filterOptions: PropTypes.arrayOf(\n    PropTypes.shape({\n      filterType: PropTypes.oneOf(['select']),\n      id: PropTypes.oneOf([RHSM_API_QUERY_TYPES.SLA, RHSM_API_QUERY_TYPES.USAGE]),\n      selected: PropTypes.bool\n    })\n  ),\n  hardFilterReset: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{viewId: string, t: translate, activeFilters: Set, hardFilterReset: boolean, query: object,\n *     currentFilter: string, isDisabled: boolean, filterOptions: Array}}\n */\nToolbar.defaultProps = {\n  query: {},\n  activeFilters: new Set(),\n  currentFilter: null,\n  filterOptions: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA,\n      filterType: 'select'\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      filterType: 'select',\n      selected: true\n    }\n  ],\n  hardFilterReset: false,\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: translate,\n  viewId: 'toolbar'\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.toolbar\n * @param {object} props\n * @param {string} props.viewId\n * @returns {object}\n */\nconst mapStateToProps = ({ toolbar }, { viewId }) => ({ ...toolbar.filters?.[viewId] });\n\nconst ConnectedToolbar = connect(mapStateToProps)(Toolbar);\n\nexport { ConnectedToolbar as default, ConnectedToolbar, Toolbar };\n"],"sourceRoot":""}
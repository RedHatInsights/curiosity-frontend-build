{"version":3,"file":"js/4220.1646335814356.3436d7b4bf53072ac413.js","mappings":"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","sources":["webpack:///./src/components/chart/chartIcon.js","webpack:///./src/components/graphCard/graphCardChartLegend.js","webpack:///./src/components/graphCard/graphCardChartTooltip.js","webpack:///./src/components/graphCard/graphCardHelpers.js","webpack:///./src/components/minHeight/minHeight.js","webpack:///./src/components/productView/productViewOpenShiftContainer.js","webpack:///./node_modules/fast-shallow-equal/index.js","webpack:///./node_modules/react-use/esm/useShallowCompareEffect.js","webpack:///./node_modules/react-use/esm/useCustomCompareEffect.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EyeIcon, EyeSlashIcon, InfinityIcon, SquareIcon, IconSize } from '@patternfly/react-icons';\n\n/**\n * Emulate pf icon sizing for custom SVGs\n *\n * @param {string} size\n * @returns {string} em measurement\n */\nconst getSize = size => {\n  switch (size) {\n    case 'md':\n      return '1.5em';\n    case 'lg':\n      return '2em';\n    case 'xl':\n      return '3em';\n    case 'sm':\n    default:\n      return '1em';\n  }\n};\n\n/**\n * Render an icon for use outside of Victory charts.\n *\n * @param {object} props\n * @param {string} props.fill\n * @param {string} props.symbol\n * @param {string} props.size\n * @param {string} props.title\n * @returns {Node}\n */\nconst ChartIcon = ({ fill, symbol, size, title }) => {\n  const svgProps = {};\n  const iconProps = { size, title };\n  const emSvgSize = getSize(size);\n\n  if (title) {\n    svgProps['aria-labelledby'] = title;\n  } else {\n    svgProps['aria-hidden'] = true;\n  }\n\n  if (fill) {\n    iconProps.color = fill;\n  }\n\n  const setIcon = () => {\n    switch (symbol) {\n      case 'dash':\n        return (\n          <span\n            style={{\n              width: emSvgSize,\n              height: `${Number.parseFloat(emSvgSize) / 2}em`\n            }}\n          >\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 38 10\" role=\"img\" {...svgProps}>\n              <rect y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"14\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"28\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n            </svg>\n          </span>\n        );\n      case 'threshold':\n        return (\n          <span style={{ width: `${Number.parseFloat(emSvgSize) * 2}em`, height: emSvgSize }}>\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 18 10\" role=\"img\" {...svgProps}>\n              <line\n                x1={0}\n                y1={(Number.parseFloat(emSvgSize) * 16) / 2}\n                x2={Number.parseFloat(emSvgSize) * 16 * 3}\n                y2={(Number.parseFloat(emSvgSize) * 16) / 2}\n                stroke={fill}\n                strokeWidth={3}\n                strokeDasharray=\"4,3\"\n              />\n            </svg>\n          </span>\n        );\n      case 'eye':\n        return <EyeIcon {...iconProps} />;\n      case 'eyeSlash':\n        return <EyeSlashIcon {...iconProps} />;\n      case 'infinity':\n        return <InfinityIcon {...iconProps} />;\n      case 'square':\n      default:\n        return <SquareIcon {...iconProps} />;\n    }\n  };\n\n  return <span className={`curiosity-chartarea__icon curiosity-chartarea__icon-${symbol}`}>{setIcon()}</span>;\n};\n\nChartIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOf([...Object.keys(IconSize)]),\n  symbol: PropTypes.oneOf(['dash', 'eye', 'eyeSlash', 'infinity', 'square', 'threshold']),\n  title: PropTypes.string\n};\n\nChartIcon.defaultProps = {\n  fill: null,\n  size: 'sm',\n  symbol: 'square',\n  title: null\n};\n\nexport { ChartIcon as default, ChartIcon };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { useMount } from 'react-use';\nimport { useProduct } from '../productView/productViewContext';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { ChartIcon } from '../chart/chartIcon';\n\n/**\n * A custom chart legend.\n *\n * @fires onClick\n * @param {object} props\n * @param {object} props.chart\n * @param {object} props.datum\n * @param {Function} props.t\n * @param {Function} props.useDispatch\n * @param {Function} props.useProduct\n * @param {Function} props.useSelectors\n * @returns {Node}\n */\nconst GraphCardChartLegend = ({\n  chart,\n  datum,\n  t,\n  useDispatch: useAliasDispatch,\n  useSelectors: useAliasSelectors,\n  useProduct: useAliasProduct\n}) => {\n  const { productLabel, viewId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n  const legendItems = useAliasSelectors(\n    datum.dataSets.map(\n      ({ id }) =>\n        ({ graph }) =>\n          graph.legend?.[`${viewId}-${id}`]\n    )\n  );\n\n  useMount(() => {\n    datum.dataSets.forEach(({ id }, index) => {\n      const checkIsToggled = legendItems?.[index] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  });\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  const onClick = id => {\n    const updatedToggle = chart.toggle(id);\n\n    dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      id: `${viewId}-${id}`,\n      value: updatedToggle\n    });\n  };\n\n  return (\n    <React.Fragment>\n      {datum.dataSets.map(({ id, isThreshold, stroke: color, data = [] }, index) => {\n        const isDisabled =\n          !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n        const labelContent = t(\n          [`curiosity-graph.label_${(isThreshold && 'threshold') || id}`, 'curiosity-graph.label_no'],\n          {\n            product: productLabel,\n            context: productLabel\n          }\n        );\n\n        const tooltipContent = t(\n          `curiosity-graph.legendTooltip${(isThreshold && '_threshold') || ''}_${id}`,\n          {\n            product: productLabel,\n            context: productLabel\n          },\n          [<span style={{ whiteSpace: 'nowrap' }} />]\n        );\n\n        const checkIsToggled = legendItems?.[index] || chart.isToggled(id);\n\n        const button = (\n          <Button\n            onClick={() => onClick(id)}\n            onKeyPress={() => onClick(id)}\n            className=\"curiosity-usage-graph__legend-item\"\n            tabIndex={0}\n            key={`curiosity-button-${id}`}\n            variant=\"link\"\n            component=\"a\"\n            isDisabled={isDisabled}\n            icon={\n              ((isDisabled || checkIsToggled) && <ChartIcon symbol=\"eyeSlash\" />) || (\n                <ChartIcon\n                  symbol={(isThreshold && 'dash') || 'square'}\n                  style={{ visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible' }}\n                  fill={color}\n                />\n              )\n            }\n          >\n            {labelContent}\n          </Button>\n        );\n\n        if (tooltipContent) {\n          return (\n            <Tooltip\n              key={`curiosity-tooltip-${id}`}\n              content={<p>{tooltipContent}</p>}\n              position={TooltipPosition.top}\n              enableFlip\n              distance={5}\n            >\n              {button}\n            </Tooltip>\n          );\n        }\n\n        return button;\n      })}\n    </React.Fragment>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum: object, useProduct: Function, t: Function, useDispatch: Function, useSelectors: Function, chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelectors: PropTypes.func,\n  useProduct: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, useProduct: Function, t: Function, useDispatch: Function, useSelectors: Function, chart: object}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelectors: storeHooks.reactRedux.useSelectors,\n  useProduct\n};\n\nexport { GraphCardChartLegend as default, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useProduct, useProductGraphTallyQuery } from '../productView/productViewContext';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\nimport { ChartIcon } from '../chart/chartIcon';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {Function} props.t\n * @param {Function} props.useProduct\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({\n  datum,\n  t,\n  useProduct: useAliasProduct,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery\n}) => {\n  const { productLabel } = useAliasProduct();\n  const { [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: granularity } = useAliasProductGraphTallyQuery();\n\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey)\n    .reverse()\n    .forEach((key, index) => {\n      if (index === 0) {\n        header = getTooltipDate({\n          date: itemsByKey[key]?.data.date,\n          granularity\n        });\n      }\n\n      const tempDataFacet = {\n        color: itemsByKey[key]?.color\n      };\n\n      if (itemsByKey[key]?.chartType === 'threshold') {\n        let thresholdStringValue = itemsByKey[key]?.data.y ?? t('curiosity-graph.label_noData');\n\n        if (itemsByKey[key]?.data.hasInfinite) {\n          if (tempDataFacet.color) {\n            thresholdStringValue = (\n              <ChartIcon\n                symbol=\"infinity\"\n                fill=\"#ffffff\"\n                title={t('curiosity-graph.label_threshold', { context: 'infinite' })}\n              />\n            );\n          } else {\n            thresholdStringValue = t('curiosity-graph.label_threshold', { context: 'infinite' });\n          }\n        }\n\n        tempDataFacet.label = t('curiosity-graph.label_threshold');\n        tempDataFacet.value = thresholdStringValue;\n      } else {\n        const dataFactsValue =\n          (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.label_noData')) ||\n          itemsByKey[key]?.data.y ||\n          0;\n\n        tempDataFacet.label = t('curiosity-graph.label', { context: key, product: productLabel });\n        tempDataFacet.value = dataFactsValue;\n      }\n\n      tempDataFacet.chartType = itemsByKey[key]?.chartType;\n      data.push(tempDataFacet);\n    });\n\n  return (\n    <div className=\"curiosity-usage-graph__tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => {\n              const updatedDataFacetValue =\n                (typeof dataFacet.value === 'number' &&\n                  !Number.isInteger(dataFacet.value) &&\n                  helpers\n                    .numberDisplay(dataFacet.value)\n                    ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n                    ?.toUpperCase()) ||\n                dataFacet.value;\n\n              return (\n                <tr key={`tooltip-${dataFacet.label}`}>\n                  <th>\n                    {dataFacet.chartType === 'threshold' && (\n                      <ChartIcon size=\"sm\" symbol=\"dash\" fill={dataFacet.color || 'transparent'} />\n                    )}\n                    {dataFacet.chartType !== 'threshold' && (\n                      <ChartIcon size=\"sm\" fill={dataFacet.color || 'transparent'} />\n                    )}{' '}\n                    {dataFacet.label}\n                  </th>\n                  <td>{updatedDataFacetValue}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.label_noData', { context: 'error' })) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum: object, useProduct: Function, useProductGraphTallyQuery: Function, t: Function}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        chartType: PropTypes.string,\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  t: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductGraphTallyQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, useProduct: Function, useProductGraphTallyQuery: Function, t: Function}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  t: translate,\n  useProduct,\n  useProductGraphTallyQuery\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import moment from 'moment';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Update chart/graph filters with base settings with styling.\n *\n * @param {Array} filters\n * @returns {{standaloneFilters: Array, groupedFilters: Array}}\n */\nconst generateChartSettings = (filters = []) => {\n  const standaloneFilters = [];\n  const groupedFilters = [];\n\n  filters.forEach(({ id, isStandalone = false, isThreshold = false, ...settings }) => {\n    if (!id) {\n      return;\n    }\n\n    const baseFilterSettings = {\n      id,\n      isStacked: !isThreshold,\n      isStandalone,\n      isThreshold,\n      strokeWidth: 2\n    };\n\n    if (isThreshold) {\n      baseFilterSettings.stroke = chartColorGreenDark.value;\n      baseFilterSettings.strokeDasharray = '4,3';\n      baseFilterSettings.strokeWidth = 3;\n    }\n\n    if (isStandalone) {\n      standaloneFilters.push({\n        ...baseFilterSettings,\n        ...settings\n      });\n    } else {\n      groupedFilters.push({\n        ...baseFilterSettings,\n        ...settings\n      });\n    }\n  });\n\n  return {\n    standaloneFilters,\n    groupedFilters\n  };\n};\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity } = {}) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ callback, date, granularity, tick, previousDate } = {}) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  if (callback) {\n    return callback({ callback, date, granularity, tick, previousDate });\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ callback, tick } = {}) => {\n  if (callback) {\n    return callback({ tick });\n  }\n\n  return helpers\n    .numberDisplay(tick)\n    ?.format({\n      average: true,\n      mantissa: 1,\n      trimMantissa: true,\n      lowPrecision: false\n    })\n    ?.toUpperCase();\n};\n\n/**\n * Generate base chart component props.\n *\n * @param {object} params\n * @param {object} params.settings\n * @param {string} params.granularity\n * @returns {object}\n */\nconst generateExtendedChartSettings = ({ settings, granularity } = {}) => ({\n  ...settings,\n  xAxisLabelIncrement: getChartXAxisLabelIncrement(granularity),\n  xAxisTickFormat: ({ item, previousItem, tick }) =>\n    xAxisTickFormat({\n      callback: settings?.xAxisTickFormat,\n      tick,\n      date: item.date,\n      previousDate: previousItem.date,\n      granularity\n    }),\n  yAxisTickFormat: ({ tick }) =>\n    yAxisTickFormat({\n      callback: settings?.yAxisTickFormat,\n      tick\n    })\n});\n\nconst graphCardHelpers = {\n  generateChartSettings,\n  generateExtendedChartSettings,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  generateChartSettings,\n  generateExtendedChartSettings,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport InfoCircleIcon from '@patternfly/react-icons/dist/js/icons/info-circle-icon';\nimport { useRouteDetail } from '../../hooks/useRouter';\nimport { ProductViewContext } from './productViewContext';\nimport { PageLayout, PageColumns, PageHeader, PageSection, PageToolbar } from '../pageLayout/pageLayout';\nimport { RHSM_API_PATH_ID_TYPES, RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { apiQueries, storeHooks } from '../../redux';\nimport GraphCard from '../graphCard/graphCard.deprecated';\nimport { SelectPosition } from '../form/select';\nimport { ToolbarFieldUom } from '../toolbar/toolbarFieldUom';\nimport { ToolbarFieldGranularity } from '../toolbar/toolbarFieldGranularity';\nimport { ToolbarFieldRangedMonthly } from '../toolbar/toolbarFieldRangedMonthly';\nimport { Toolbar } from '../toolbar/toolbar';\nimport InventoryList from '../inventoryCard/inventoryList.deprecated';\nimport InventoryCardSubscriptions from '../inventoryCardSubscriptions/inventoryCardSubscriptions';\nimport InventoryTabs, { InventoryTab } from '../inventoryTabs/inventoryTabs';\nimport { translate } from '../i18n/i18n';\nimport { helpers } from '../../common';\n\n/**\n * An OpenShift Container Platform encompassing view.\n *\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.useRouteDetail\n * @returns {Node}\n */\nconst ProductViewOpenShiftContainer = ({ t, useRouteDetail: useAliasRouteDetail }) => {\n  const { productParameter: viewProductLabel, productConfig } = useAliasRouteDetail();\n  const uomValue = storeHooks.reactRedux.useSelector(\n    ({ view }) => view.query?.[productConfig[0].viewId]?.[RHSM_API_QUERY_TYPES.UOM],\n    null\n  );\n\n  const renderProduct = (config, updatedUomValue) => {\n    const {\n      productContextFilterUom,\n      query = {},\n      graphTallyQuery = {},\n      inventoryHostsQuery = {},\n      inventorySubscriptionsQuery = {},\n      initialGuestsFilters = [],\n      initialInventoryFilters = [],\n      initialInventorySettings = {},\n      initialSubscriptionsInventoryFilters,\n      productId,\n      viewId\n    } = config;\n\n    if (!productId || !viewId) {\n      return null;\n    }\n\n    const { graphTallyQuery: initialGraphTallyQuery, inventoryHostsQuery: initialInventoryHostsQuery } =\n      apiQueries.parseRhsmQuery(query, { graphTallyQuery, inventoryHostsQuery, inventorySubscriptionsQuery });\n\n    let inventoryFilters = initialInventoryFilters;\n    let uomFilter;\n\n    if (productContextFilterUom) {\n      uomFilter = updatedUomValue || query[RHSM_API_QUERY_TYPES.UOM];\n\n      const filter = ({ id, isOptional }) => {\n        if (!isOptional) {\n          return true;\n        }\n        return new RegExp(uomFilter, 'i').test(id);\n      };\n\n      inventoryFilters = initialInventoryFilters.filter(filter);\n    }\n\n    const graphCardTitle = (\n      <React.Fragment>\n        {t('curiosity-graph.cardHeading', { context: productId })}\n        <Tooltip\n          content={<p>{t('curiosity-graph.cardHeadingDescription', { context: productId })}</p>}\n          position={TooltipPosition.top}\n          enableFlip={false}\n          distance={5}\n          entryDelay={100}\n          exitDelay={0}\n        >\n          <sup className=\"curiosity-icon__info\">\n            <InfoCircleIcon />\n          </sup>\n        </Tooltip>\n      </React.Fragment>\n    );\n\n    return (\n      <ProductViewContext.Provider value={config} key={`product_${productId}_${uomFilter}`}>\n        <PageToolbar>\n          <Toolbar />\n        </PageToolbar>\n        <PageSection>\n          <GraphCard\n            key={`graph_${productId}`}\n            query={initialGraphTallyQuery}\n            productId={productId}\n            viewId={viewId}\n            cardTitle={graphCardTitle}\n          >\n            {productId === RHSM_API_PATH_ID_TYPES.OPENSHIFT && uomFilter && (\n              <ToolbarFieldUom position={SelectPosition.right} />\n            )}\n            {productId === RHSM_API_PATH_ID_TYPES.OPENSHIFT && (\n              <ToolbarFieldGranularity position={SelectPosition.right} />\n            )}\n            {productId === RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS && (\n              <ToolbarFieldRangedMonthly position={SelectPosition.right} />\n            )}\n          </GraphCard>\n        </PageSection>\n        <PageSection>\n          <InventoryTabs key={`inventory_${productId}`} productId={productId}>\n            <InventoryTab\n              key={`inventory_hosts_${productId}`}\n              title={t('curiosity-inventory.tabHosts', { context: ['noInstances', productId] })}\n            >\n              <InventoryList\n                key={`inv_${productId}`}\n                filterGuestsData={initialGuestsFilters}\n                filterInventoryData={inventoryFilters}\n                productId={productId}\n                settings={initialInventorySettings}\n                query={initialInventoryHostsQuery}\n                viewId={viewId}\n              />\n            </InventoryTab>\n            {!helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS && initialSubscriptionsInventoryFilters && (\n              <InventoryTab\n                key={`inventory_subs_${productId}`}\n                title={t('curiosity-inventory.tabSubscriptions', { context: productId })}\n              >\n                <InventoryCardSubscriptions />\n              </InventoryTab>\n            )}\n          </InventoryTabs>\n        </PageSection>\n      </ProductViewContext.Provider>\n    );\n  };\n\n  return (\n    <PageLayout>\n      <PageHeader productLabel={viewProductLabel}>\n        {t(`curiosity-view.title`, { appName: helpers.UI_DISPLAY_NAME, context: viewProductLabel })}\n      </PageHeader>\n      <PageColumns>{productConfig.map(config => renderProduct(config, uomValue))}</PageColumns>\n    </PageLayout>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{t: Function, useRouteDetail: Function}}\n */\nProductViewOpenShiftContainer.propTypes = {\n  t: PropTypes.func,\n  useRouteDetail: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: Function, useRouteDetail: Function}}\n */\nProductViewOpenShiftContainer.defaultProps = {\n  t: translate,\n  useRouteDetail\n};\n\nexport { ProductViewOpenShiftContainer as default, ProductViewOpenShiftContainer };\n","var keyList = Object.keys;\n\nexports.equal = function equal (a, b) {\n  if (a === b) return true;\n  if (!(a instanceof Object) || !(b instanceof Object)) return false;\n\n  var keys = keyList(a);\n  var length = keys.length;\n\n  for (var i = 0; i < length; i++)\n    if (!(keys[i] in b)) return false;\n\n  for (var i = 0; i < length; i++)\n    if (a[keys[i]] !== b[keys[i]]) return false;\n\n  return length === keyList(b).length;\n};\n","import { equal as isShallowEqual } from 'fast-shallow-equal';\nimport useCustomCompareEffect from './useCustomCompareEffect';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar shallowEqualDepsList = function (prevDeps, nextDeps) {\n    return prevDeps.every(function (dep, index) { return isShallowEqual(dep, nextDeps[index]); });\n};\nvar useShallowCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useShallowCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useShallowCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, shallowEqualDepsList);\n};\nexport default useShallowCompareEffect;\n","import { useEffect, useRef } from 'react';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useCustomCompareEffect = function (effect, deps, depsEqual) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useCustomCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useCustomCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n        if (typeof depsEqual !== 'function') {\n            console.warn('`useCustomCompareEffect` should be used with depsEqual callback for comparing deps list');\n        }\n    }\n    var ref = useRef(undefined);\n    if (!ref.current || !depsEqual(deps, ref.current)) {\n        ref.current = deps;\n    }\n    useEffect(effect, ref.current);\n};\nexport default useCustomCompareEffect;\n"],"names":["ChartIcon","fill","symbol","size","title","svgProps","iconProps","emSvgSize","getSize","color","className","style","width","height","Number","parseFloat","viewBox","role","y","x","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","EyeIcon","EyeSlashIcon","InfinityIcon","SquareIcon","setIcon","defaultProps","GraphCardChartLegend","chart","datum","t","useAliasDispatch","useDispatch","useAliasSelectors","useSelectors","useAliasProduct","useProduct","productLabel","viewId","dispatch","legendItems","dataSets","map","id","graph","legend","useMount","forEach","index","isToggled","hide","onClick","updatedToggle","toggle","type","reduxTypes","value","isThreshold","data","isDisabled","find","hasData","labelContent","product","context","tooltipContent","whiteSpace","checkIsToggled","button","Button","onKeyPress","tabIndex","key","variant","component","icon","visibility","Tooltip","content","position","TooltipPosition","enableFlip","distance","helpers","translate","storeHooks","GraphCardChartTooltip","useAliasProductGraphTallyQuery","useProductGraphTallyQuery","granularity","RHSM_API_QUERY_SET_TYPES","header","itemsByKey","Object","keys","reverse","getTooltipDate","date","tempDataFacet","chartType","thresholdStringValue","hasInfinite","label","dataFactsValue","push","summary","length","colSpan","dataFacet","updatedDataFacetValue","isInteger","format","average","mantissa","trimMantissa","lowPrecision","toUpperCase","generateChartSettings","filters","standaloneFilters","groupedFilters","isStandalone","settings","baseFilterSettings","isStacked","chartColorGreenDark","getChartXAxisLabelIncrement","GRANULARITY_TYPES","momentDate","moment","dateHelpers","add","xAxisTickFormat","callback","tick","previousDate","formattedDate","isNewYear","parseInt","year","replace","yAxisTickFormat","generateExtendedChartSettings","xAxisLabelIncrement","item","previousItem","graphCardHelpers","MinHeight","containerRef","React","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","props","clientWidth","current","setMinHeight","this","window","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","addEventListener","removeEventListener","children","ref","ProductViewOpenShiftContainer","useAliasRouteDetail","useRouteDetail","viewProductLabel","productParameter","productConfig","uomValue","view","query","RHSM_API_QUERY_TYPES","PageLayout","PageHeader","appName","PageColumns","config","updatedUomValue","productContextFilterUom","graphTallyQuery","inventoryHostsQuery","inventorySubscriptionsQuery","initialGuestsFilters","initialInventoryFilters","initialInventorySettings","initialSubscriptionsInventoryFilters","productId","uomFilter","apiQueries","initialGraphTallyQuery","initialInventoryHostsQuery","inventoryFilters","filter","isOptional","RegExp","test","graphCardTitle","entryDelay","exitDelay","ProductViewContext","PageToolbar","Toolbar","PageSection","cardTitle","RHSM_API_PATH_ID_TYPES","ToolbarFieldUom","SelectPosition","ToolbarFieldGranularity","ToolbarFieldRangedMonthly","InventoryTab","filterGuestsData","filterInventoryData","renderProduct","keyList","exports","a","b","i","shallowEqualDepsList","prevDeps","nextDeps","every","dep","effect","deps","depsEqual","useRef","undefined","useEffect"],"sourceRoot":""}
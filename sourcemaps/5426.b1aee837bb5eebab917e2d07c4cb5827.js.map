{"version":3,"file":"js/5426.25c12ad4a9ce3db3d651.js","mappings":"oGACAA,EAAOC,QAAU,CAAC,C,6LC6BlB,MAAMC,EAAMC,IAAiF,IAAhF,UAAEC,EAAWC,YAAaC,EAAkBC,YAAaC,GAAkBL,EACtF,MAAMM,EAAWH,KACTI,MAAOC,GAAWH,GAAiBI,IAAA,IAAAC,EAAA,IAAC,KAAEC,GAAMF,EAAA,OAAKE,SAAY,QAARD,EAAJC,EAAMH,cAAM,IAAAE,OAAR,EAAJA,EAAcE,IAAI,GAAE,CAAC,GAC9E,IAAIC,EAAwB,KAY5B,OAVAC,EAAAA,EAAAA,IAAS,KACFN,GACHF,EAASL,IACX,IAGGc,EAAAA,QAAAA,4BACHF,EAAwBG,IAAAA,cAACC,EAAAA,oBAAmB,OAI5CD,IAAAA,cAACE,EAAAA,KAAI,CAACV,OAAQA,GACXK,EACDG,IAAAA,cAACG,EAAAA,QAAc,KACbH,IAAAA,cAACI,EAAAA,OAAM,OAEJ,EASXrB,EAAIsB,UAAY,CACdpB,UAAWqB,IAAAA,KACXpB,YAAaoB,IAAAA,KACblB,YAAakB,IAAAA,MAQfvB,EAAIwB,aAAe,CACjBtB,UAAWuB,EAAAA,GAAAA,KAAAA,UACXtB,YAAauB,EAAAA,GAAAA,WAAAA,YACbrB,YAAaqB,EAAAA,GAAAA,WAAAA,Y,yJCvDf,MA6EMC,EAAO,SAACC,GAAkC,IAA5B,WAAEC,EAAa,GAAGC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAoBxC,OAlBa,WACX,MAAMG,EAAQ,GAEd,OAAO,WAAa,QAAAC,EAAAJ,UAAAC,OAATI,EAAI,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJF,EAAIE,GAAAP,UAAAO,GACb,MAAMC,EAAMC,KAAKC,UAAU,CAAEhC,MAAO,IAAI2B,GAAMM,KAAIC,GAAuB,mBAARA,GAAsBA,EAAIC,YAAeD,MACpGE,EAAWX,EAAMY,QAAQP,GAE/B,GAAIM,EAAW,EAAG,CAChB,MAAME,EAASlB,EAAKmB,KAAK,QAASZ,GAGlC,OAFAF,EAAMe,QAAQV,EAAKQ,GACnBb,EAAMF,OAAsB,EAAbF,EACRI,EAAM,EACf,CAEA,OAAOA,EAAMW,EAAW,EAC1B,CACF,CAEOK,EACT,EAMMC,EAAOC,SAASC,UAQhBC,EAAcC,QAAQC,QAAQ,CAAC,GA2B/BC,EAAYC,IAChBC,OAAOC,OAAOF,GAEd,MAAMG,EAA6B,mBAARH,EACrBI,EAAaH,OAAON,UAAUU,eAcpC,OAZAJ,OAAOK,oBAAoBN,GAAKO,SAAQC,KAEpCJ,EAAWd,KAAKU,EAAKQ,IACpBL,IAAuB,WAATK,GAA8B,WAATA,GAA8B,cAATA,IAC3C,OAAdR,EAAIQ,IACkB,iBAAdR,EAAIQ,IAA2C,mBAAdR,EAAIQ,IAC5CP,OAAOQ,SAAST,EAAIQ,KAErBT,EAAUC,EAAIQ,GAChB,IAGKR,CAAG,EAWNU,EAAmBxC,GACvB,SAACd,GAAI,IAAE,QAAEuD,GAAU,GAAOtC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAMsC,GAAWZ,EAAUa,IAAWxD,KAAW2C,EAAU3C,EAAK,IAiB3FyD,GAAYC,EAqNZC,EAAeD,YAiBfvD,EAAU,CACdyD,gBAjasB,SAACC,EAAQC,GAA8C,IAArC,KAAEC,EAAO,kBAAkB9C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvE,MAAM,eAAE+C,EAAc,MAAEC,GAAUC,OAClC,IAAIC,EAUJ,OARIH,EACFG,EAAM,IAAIH,EAAeH,EAAQC,IAEjCK,EAAM,IAAIF,EAAMH,GAChBK,EAAIJ,KAAOA,EACXI,EAAIN,OAAUtC,MAAM6C,QAAQP,IAAWA,GAAW,CAACA,GACnDM,EAAIE,YAAa,GAEZF,CACT,EAqZEG,cAPoB,WAAuB,IAAtB1B,EAAG3B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGsD,EAAOtD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtC,MAAM,MAAEqD,EAAQf,EAAS,GAAEgB,EAAKd,GAAiBY,GAAW,CAAC,EAC7DL,OAAOO,GAAOD,GAAS,IAAKN,OAAOO,KAAU,IAAKP,OAAOO,MAAQ7B,EACnE,EAKE8B,aAnXmB,SAACC,GAAQ,IAAE,OAAEC,EAASC,KAAY5D,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC1D2D,EACElD,KAAKC,UAAU,CACbhC,MACGmF,IAAeH,IACdjD,KAAKC,UACHkB,OAAOkC,QAAQJ,GAAUK,MAAK,CAAA5F,EAAAS,KAAA,IAAEoF,GAAE7F,GAAG8F,GAAErF,EAAA,OAAKoF,EAAEE,cAAcD,EAAE,KAC9D,CAACzD,EAAK9B,IACAA,IAAUgF,GAAYG,IAAenF,GAChC+B,KAAKC,UAAUkB,OAAOkC,QAAQpF,GAAOqF,MAAK,CAAAI,EAAAC,KAAA,IAAEJ,GAAEG,GAAGF,GAAEG,EAAA,OAAKJ,EAAEE,cAAcD,EAAE,KAAK,IAEnE,mBAAVvF,EACFA,EAAMmC,WAERnC,KAEV,GAAA2F,cACOX,GAAQW,QAAGX,aAAQ,EAARA,EAAU7C,aAAc6C,MAEjD7C,UAAU,EAiWZyD,WA/YiBC,GAAM,GAAAF,OACpBE,GAAU,cAAa,KAAAF,OAA6CG,KAAKC,KAAK,IAAMD,KAAKE,WAAc,IA+Y1GC,OAvYaC,GAAiD,kBAAzChD,OAAON,UAAUT,SAASI,KAAK2D,GAwYpDC,UAhYgBlD,GAAO,2CAA2CmD,KAAKlD,OAAON,UAAUT,SAASI,KAAKU,IAiYtG9B,OACAuB,OACAG,cACAwD,cA9SoBrG,GACC,iBAAVA,GAAsBsG,OAAOC,MAAMvG,GACrCA,EAEFwG,IAAOxG,GA2SdgD,YACAW,mBACA8C,UA3Pe1C,EA4PfD,YACA4C,aA7OkB3C,EA8OlB4C,WAtOgB5C,EAuOhB6C,sBA/N4B7C,GAgO5B8C,2BArNiC9C,GAsNjC+C,aA9MkB/C,EA+MlBgD,mBAvMwBhD,EAwMxBiD,2BAhMgCjD,EAiMhCkD,mBAzLwBlD,EA0LxBmD,yBAlL8BnD,EAmL9BoD,6BA3KkCpD,EA4KlCqD,iCApKsCrD,EAqKtCsD,qBA7J0BtD,EA8J1BuD,mCAtJwCvD,EAuJxCwD,gBA/IsBxD,gBAgJtByD,uBAxI6BzD,gBAyI7B0D,sBAjI4B1D,gBAkI5B2D,mBA3HyB3D,yCA4HzB4D,mBArHyB5D,mOAsHzB6D,wCA/G8C7D,kEAgH9C8D,kBAzGwB9D,QA0GxB+D,uBAnG6B/D,UAoG7BgE,aA5FmBhE,YA6FnBiE,eAtFqBjE,+BAuFrBkE,QA/EclE,gBAgFdmE,QAxEcnE,uBAyEdoE,WAjEiBpE,gBAkEjBC,gBAMFxD,EAAQmE,cAAc,IAAKnE,GAAW,CAAEqE,OAAO,G,8JCnd/C,MAAMuD,EAAiBA,IACpB5H,EAAAA,EAAAA,WAAqB6H,IAAAA,IAAW,YAAYC,UAC5C9H,EAAAA,EAAAA,UACCuD,kBAAYwE,kCACZF,IAAAA,IAAWtE,kBAAYwE,kCAAkCD,UAC3DD,IAAAA,MAAaC,SAYTE,EAAoB/I,IAAA,IAAC,KAAEyG,EAAI,SAAEuC,EAAQ,YAAEC,EAAW,iBAAEC,EAAmB,QAAQlJ,EAAA,MAAM,CACzFmJ,UAAWP,IAAAA,IAAWnC,GAAM2C,QAAQH,GAAaD,SAASA,EAAUC,GAAaJ,SACjFQ,QAAST,IAAAA,IAAWnC,GAAM2C,QAAQH,GAAaK,MAAMJ,GAAkBL,SACxE,EAEKU,EAAkBR,EAAkB,CAAEtC,KAAMkC,IAAkBK,SAAU,EAAGC,YAAa,SACxFO,EAAkBT,EAAkB,CAAEtC,KAAMkC,IAAkBK,SAAU,GAAIC,YAAa,SACzFQ,EAAiBV,EAAkB,CAAEtC,KAAMkC,IAAkBK,SAAU,GAAIC,YAAa,UACxFS,EAAkBX,EAAkB,CAAEtC,KAAMkC,IAAkBK,SAAU,GAAIC,YAAa,WACzFU,EAAoBZ,EAAkB,CAAEtC,KAAMkC,IAAkBK,SAAU,GAAIC,YAAa,WAC3FW,EAAqBb,EAAkB,CAC3CtC,KAAMkC,IACNK,SAAU,GACVC,YAAa,SACbC,iBAAkB,WAkGdW,EAAwB,CAC5BC,KAAM,OACNC,SAAU,YACVC,MAAO,MACPC,UAAW,YAQPC,EAA0B,IAC3BL,GA2BCM,EAAc,CAClBxB,iBACAyB,uBA7G6BC,IAC7B,MAAMC,EAAczD,OAAO0D,SAAS3B,IAAAA,IAAWD,KAAkB6B,OAAQ,KACnE,UAAErB,EAAS,QAAEE,GAAY,IAAKO,GAC9Ba,EAAoB,CAAC,EAC3B,IAAIC,EAAqB,GAEzB,MAAMC,EAAmB/B,IAAAA,IAAWO,GAC9ByB,EAAiBhC,IAAAA,IAAWS,GAElC,KAAOuB,EAAiBD,GAAoBA,EAAiBE,OAAO,OAASD,EAAeC,OAAO,MAAM,CACvG,MAAMC,EAAW,CACfvK,MAAO,CACL4I,UAAWwB,EAAiB9B,WAI1BkC,EAAYJ,EAAiBE,OAAO,aACpCG,EAAQL,EAAiBE,OAAO,QAChCI,EAAaN,EAAiBE,OAAO,KACrCK,EAAaZ,IAAgBzD,OAAO0D,SAASI,EAAiBH,OAAQ,IAE5EM,EAASE,MAASE,GAAcH,GAAcC,EAC9CF,EAASK,OAASH,EAAMI,cACxBN,EAASvK,MAAM8I,QAAUT,IAAAA,IAAW+B,GAAkBrB,MAAM,SAAST,SAErE8B,EAAiBU,IAAI,EAAG,SAExBP,EAASE,OAAQM,EAAAA,EAAAA,WAAU,0BAA2B,CAAEC,QAAS,CAAC,2BAA4BT,EAASE,SACvGP,EAAkBO,EAAMI,eAAiB,IAAKN,GAC9CL,EAAkBQ,GAAc,IAAKH,GACrCJ,EAAmBc,KAAKV,EAC1B,CAYA,OAVAJ,EAAqBA,EAAmBe,UACxCf,EAAmB,GAAK,IACnBA,EAAmB,GACtBgB,WAAW,EACXP,OAAQ,UACRH,OAAOM,EAAAA,EAAAA,WAAU,0BAA2B,CAAEC,QAAS,CAAC,2BAA4B,cAGtFd,EAAkBkB,QAAU,IAAKjB,EAAmB,IAEhDL,GACKI,aAAiB,EAAjBA,EAAoBJ,UAAUtI,EAGhC,CAAE0I,oBAAmBC,qBAAoB,EA+DhDkB,kBApIwBC,IACxB,OAAQA,GACN,IAAK,UACH,MAAO,IAAKtC,GACd,KAAKuC,EAAAA,GAAAA,OACH,MAAO,IAAKrC,GACd,KAAKqC,EAAAA,GAAAA,QACH,MAAO,IAAKpC,GACd,KAAKoC,EAAAA,GAAAA,UACH,MAAO,IAAKnC,GACd,KAAKmC,EAAAA,GAAAA,MACL,QACE,MAAO,IAAKtC,GAChB,EAwHAT,oBACAQ,kBACAC,kBACAE,kBACAC,oBACAF,iBACAG,qBACAmC,oBA/D0B,CAC1BjC,KAAM,SACNC,SAAU,cACVC,MAAO,QACPC,UAAW,cA4DXJ,wBACAK,0BACA8B,qBAjC2B,CAC3BC,SAAU,mBACVC,aAAc,wBACdC,UAAW,eACXC,cAAe,qBA8BfC,wBAtB8B,CAC9BJ,SAAU,uBACVC,aAAc,4BACdC,UAAW,mBACXC,cAAe,0BC3GjBrL,EAAAA,EAAAA,cAAsB,CAAEuL,SApBPC,UACf,IACE,MAAM,eAAEC,GAAmB1H,OACrB2H,EAAW,GAAAvG,OAAGnF,EAAAA,EAAAA,gBAAyB2L,QAC3C,MACA9D,IAAOuB,EAAYxB,kBAAkBkC,OAAO,oBAExCjK,EAAO0B,KAAKC,UAAUD,KAAKqK,MAAMH,EAAeI,QAAQ,GAAD1G,OAAInF,EAAAA,EAAAA,gBAA0B,KAAM,QA3ChFoE,KACnB,MAAM,KAAEvE,EAAO,GAAE,SAAE6L,EAAW,eAAc,SAAEI,EAAW,cAAiB1H,GAAW,CAAC,EACtF,OAAO,IAAI9B,SAAQ,CAACC,EAASwJ,KAC3B,IACE,MAAM,SAAEC,EAAQ,UAAEC,EAAS,IAAEC,GAAQnI,OAC/BoI,EAAO,IAAIC,KAAK,CAACvM,GAAO,CAAEwM,KAAMP,IAEtC,GAAIG,SAAAA,EAAWK,WACbL,EAAUK,WAAWH,EAAMT,GAC3BnJ,EAAQ,CAAEmJ,WAAU7L,aACf,CACL,MAAM0M,EAAYP,EAASQ,cAAc,KAEzCD,EAAUE,KAAOP,EAAIQ,gBAAgBP,GACrCI,EAAUI,MAAMC,QAAU,OAC1BL,EAAUM,SAAWnB,EAErBM,EAASc,KAAKC,YAAYR,GAE1BA,EAAUS,QAEVC,YAAW,KACTjB,EAASc,KAAKI,YAAYX,GAC1BL,EAAIiB,gBAAgBhB,GACpB5J,EAAQ,CAAEmJ,WAAU7L,QAAO,GAC1B,IACL,CACF,CAAE,MAAOuN,GACPrB,EAAOqB,EACT,IACA,EAeMC,CAAa,CAAExN,OAAM6L,WAAUI,SAAU,oBACjD,CAAE,MAAOwB,GACP,MAAM,IAAIxJ,MAAM,mBAADqB,OAAoBmI,EAAE3J,SACvC,IAQkC,CAAEU,OAAO,G,8QC1C7C,MAAMjE,EAAiBnB,IAAyF,IAAxF,QAAEsO,EAAO,SAAEC,EAAQ,WAAEC,EAAU,EAAEC,EAAGC,oBAAqBC,GAA0B3O,EACzG,MAAM,QAAE4O,EAAO,KAAEhO,EAAO,CAAC,GAAM+N,KACzB,WAAEE,EAAa,CAAC,EAAC,WAAEC,EAAU,YAAEC,GAAgBnO,GAC7C,CAAC0N,GAAUU,GAAiBH,EAiCpC,OAAO7N,IAAAA,cAACiO,EAAAA,sBAAAA,SAA8B,CAAC1O,MAAOK,GA9BxC4N,EAEAxN,IAAAA,cAACkO,EAAAA,YAAW,KACVlO,IAAAA,cAACmO,EAAAA,EAAW,CAACC,YAAaX,EAAE,iCAAkC,UAKhEO,EACKT,EAGLK,EACK5N,IAAAA,cAACkO,EAAAA,YAAW,CAACG,UAAU,IAAS3K,QAAS+J,EAAE,yBAA0B,OAAQa,KAAMC,EAAAA,iBAIzFT,GAAcA,EAAWU,SAASC,EAAAA,GAAAA,oCAAAA,QACnB,MAAhBV,EAEO/N,IAAAA,cAAC0O,EAAAA,UAAS,MAIjB1O,IAAAA,cAACkO,EAAAA,YAAW,KACVlO,IAAAA,cAAC2O,EAAAA,EAAa,CAACC,YAAa7O,EAAAA,QAAAA,mBAKoE,EAQxGI,EAAeE,UAAY,CACzBiN,QAAShN,IAAAA,OACTiN,SAAUjN,IAAAA,KAAAA,WACVkN,WAAYlN,IAAAA,KACZmN,EAAGnN,IAAAA,KACHoN,oBAAqBpN,IAAAA,MAQvBH,EAAeI,aAAe,CAC5B+M,QAASuB,EAAAA,cAAAA,QACTrB,WAAYzN,EAAAA,QAAAA,YACZ0N,EAAGnD,EAAAA,UACHoD,oBAAmBA,EAAAA,oB,2XC5ErB,MAAMoB,EAAkB,CAAC,CAAC,EAAG/O,EAAAA,QAAAA,MAEvBkO,EAAwBjO,IAAAA,cAAoB8O,GAO5CC,EAAiBA,KAAMC,EAAAA,EAAAA,YAAWf,GAclCP,EAAsB,WAOjB,IAAAuB,EAAAC,EAAA,IAPkB,QAC3B5B,EAAUuB,EAAAA,cAAAA,QAAqB,cAC/BM,EAAgB3O,EAAAA,GAAAA,SAAAA,cAAmC,iBACnD4O,EAAmB5O,EAAAA,GAAAA,SAAAA,iBACnB6O,UAAWC,EAAiBD,EAAAA,EAC5BnQ,YAAaC,EAAmBsB,EAAAA,GAAAA,WAAAA,YAChC8O,qBAAsBC,EAA4B/O,EAAAA,GAAAA,WAAAA,sBACnDI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACH,MAAMvB,EAAWH,KACX,oBAAEsQ,EAAsB1P,EAAAA,QAAAA,MAAiBuP,KACzC,KAAE1P,EAAI,MAAEuN,EAAK,UAAEuC,EAAS,QAAE9B,EAAO,UAAE+B,GAAcH,EAA0B,CAC/E,CAAEnL,GAAI,OAAQuL,SAAU5Q,IAAA,IAAC,KAAEW,GAAMX,EAAA,OAAKW,aAAI,EAAJA,EAAMkQ,IAAI,GAChD,CAAExL,GAAI,SAAUuL,SAAUnQ,IAAA,IAAC,KAAEE,GAAMF,EAAA,OAAKE,aAAI,EAAJA,EAAMH,MAAM,GACpD,CACE6E,GAAI,SACJuL,SAAU5K,IAAA,IAAA8K,EAAA,IAAC,KAAEnQ,GAAMqF,EAAA,OAA8B,KAAxBrF,SAAY,QAARmQ,EAAJnQ,EAAM8D,cAAM,IAAAqM,OAAR,EAAJA,EAAc3C,QAAkBxN,EAAK8D,QAAW,CAAEiM,WAAW,EAAM9P,KAAM,GAAI,MAI1GE,EAAAA,EAAAA,IAASyL,gBACDjM,EAAS6P,KACfM,EAAoBnC,GACpBhO,EAAS,CAAC8P,KAAoB,IAGhC,MAAOzP,EAAO,CAAC,EAAGoQ,EAAM,CAAC,GAAM5O,MAAM6C,QAAQpE,EAAKiQ,OAASjQ,EAAKiQ,MAAS,GACnE9B,EAAeZ,IAASwC,SAAa,QAAJV,EAATU,EAAWtL,UAAE,IAAA4K,GAAQ,QAARC,EAAbD,EAAexL,cAAM,IAAAyL,OAAZ,EAATA,EAAuBc,SAAW,KAEhE,MAAO,CACLpQ,KAAM,IACDD,KACAoQ,EACHvQ,OAAQI,EAAKJ,OACbsO,WAAYlO,EAAK6D,OACjBsK,eAEFZ,QACAuC,YACA9B,UAEJ,EAQMqC,EAAa,WAAmE,IAAhElB,eAAgBmB,EAAsBnB,GAAgBlO,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE9E,MAAO,IADSqP,IAIlB,EAEM3F,EAAU,CACd0D,wBACAa,kBACAC,iBACArB,sBACAuC,a,kRC1DF,MAAME,EAAQnR,IAcR,IAdS,YACboR,EAAW,aACXC,EAAY,SACZC,EAAQ,QACRC,EAAO,WACPC,EAAU,gBACVC,EAAe,gBACfC,EAAe,qBACfC,EAAoB,oBACpBC,EAAmB,gBACnBC,EAAe,gBACfC,EAAe,aACfC,EAAY,aACZC,GACDhS,EACC,MAAOuL,EAAS0G,IAAcC,EAAAA,EAAAA,aACvBC,EAAgBC,IAAqBF,EAAAA,EAAAA,UAAS,CAAC,GAChDG,GAAeC,EAAAA,EAAAA,QAAO,MACtBC,GAAaD,EAAAA,EAAAA,QAAO,OAClBE,MAAOC,IAAeC,EAAAA,EAAAA,IAAkBL,GA4FhD,OA1FAM,EAAAA,EAAAA,YAAU,KASR,MAsDMC,EAAkB,CACtBC,kBAAmBA,IAAMR,EACzBS,cAAe,IAxDWC,MAC1B,MAAMC,EAAkB1B,EAAS2B,QAAOxS,IAAA,IAAC,GAAE4E,GAAI5E,EAAA,OAAM0R,EAAe9M,EAAG,IAEjE6N,EAAuBC,EAAAA,aAAAA,oBAAiC,CAC5DC,QAAS/B,EACTC,SAAU0B,KAGN,KAAEK,EAAI,KAAEC,GAASH,EAAAA,aAAAA,cAA2B,CAAE7B,SAAU0B,KACxD,eAAEO,GAAmBJ,EAAAA,aAAAA,cAA2B,CAAE7B,cAClD,WAAEkC,EAAU,WAAEC,GAAeN,EAAAA,aAAAA,kBAA+B,CAChE7B,WACAiC,iBACAF,OACAC,OACA7B,kBACAC,kBACAC,uBACAC,sBACAC,kBACAC,oBAGI4B,EAAeD,EAAW3R,OAAS,EACnC6R,EAAqBR,EAAAA,aAAAA,sBAAmC,CAC5D7B,SAAU0B,EACVK,OACAC,KAAOI,GAAgBH,GAAmBD,EAC1CvB,eACAC,kBAEI,OAAE4B,EAAQrC,QAASsC,GAAkBV,EAAAA,aAAAA,gBAA6B,CACtEG,KAAOI,GAAgBH,GAAmBD,EAC1C/B,YAKF,MAAO,CACLiC,aACAC,aACAK,YAAa,CAAEF,UACfD,qBACAI,UARgBP,EAAWQ,WAS3BN,eACAL,OACAC,KAAOI,GAAgBH,GAAmBD,EAC1C/B,QAXqB,CAAE0C,OAAQ,EAAGC,KAAM,EAAGC,MAAO,EAAGC,IAAK,KAAM7C,KAAYsC,GAY5ErC,aACA0B,uBACD,EAGmBH,GAGe3B,cAAaqB,aAAYnB,YAC5D+C,gBAAiBA,IAAM9B,EACvBJ,eAAgB,CAACA,EAAgBC,IAGnCH,EAAWW,EAAgB,GAC1B,CACDxB,EACAC,EACAoB,EACAnB,EACAa,EACAZ,EACAU,EACAT,EACAC,EACAC,EACAC,EACAC,EACAE,EACAD,EACAE,EACAC,IAIAhR,IAAAA,cAACsT,EAAAA,aAAAA,SAAqB,CAAC/T,MAAOgL,GAC5BvK,IAAAA,cAAA,OACEuT,UAAU,2EACV,YAAU,sBACVC,IAAKnC,GAEJI,EAAa,GACZzR,IAAAA,cAACA,IAAAA,SAAc,KACbA,IAAAA,cAACyT,EAAAA,cAAa,MACdzT,IAAAA,cAAC0T,EAAAA,YAAW,QAII,EAY5BvD,EAAM9P,UAAY,CAChB+P,YAAa9P,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OAClD+P,aAAc/P,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OACnDgQ,SAAUhQ,IAAAA,QACRA,IAAAA,MAAgB,CACdV,KAAMU,IAAAA,QACJA,IAAAA,MAAgB,CACdqT,EAAGrT,IAAAA,OAAAA,WACHsT,EAAGtT,IAAAA,OACHuT,WAAYvT,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,OAAkBA,IAAAA,WAAqBwT,WAG9FC,QAASzT,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,SAC9C0T,UAAW1T,IAAAA,MAAgB,IAAImC,OAAOwR,OAAOC,EAAAA,oBAC7CC,KAAM7T,IAAAA,OACN8T,OAAQ9T,IAAAA,OACR+T,YAAa/T,IAAAA,OACbgU,gBAAiBhU,IAAAA,OACjBkQ,WAAYlQ,IAAAA,OACZiU,aAAcjU,IAAAA,OACd+D,GAAI/D,IAAAA,OAAAA,WACJkU,cAAelU,IAAAA,OACfoM,MAAOpM,IAAAA,OACPmU,UAAWnU,IAAAA,KACXmQ,gBAAiBnQ,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OACtDoQ,gBAAiBpQ,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OACtDoU,gBAAiBpU,IAAAA,KACjBqU,gBAAiBrU,IAAAA,QAGrBiQ,QAASjQ,IAAAA,MAAgB,CACvB2S,OAAQ3S,IAAAA,OACR4S,KAAM5S,IAAAA,OACN6S,MAAO7S,IAAAA,OACP8S,IAAK9S,IAAAA,SAEPkQ,WAAYlQ,IAAAA,MAAgBmC,OAAOwR,OAAOW,EAAAA,KAC1CnE,gBAAiBnQ,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OACtDoQ,gBAAiBpQ,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OACtDqQ,qBAAsBrQ,IAAAA,KACtBsQ,oBAAqBtQ,IAAAA,OACrBuQ,gBAAiBvQ,IAAAA,KACjBwQ,gBAAiBxQ,IAAAA,KACjByQ,aAAczQ,IAAAA,KACd0Q,aAAc1Q,IAAAA,MAWhB6P,EAAM5P,aAAe,CACnB6P,YAAa,KACbC,aAAc,KACdC,SAAU,GACVC,QAAS,CACP0C,OAAQ,GACRC,KAAM,GACNC,MAAO,GACPC,IAAK,IAEP5C,WAAY,OACZC,gBAAiB,KACjBC,gBAAiB,KACjBC,sBAAsB,EACtBC,oBAAqB,EACrBC,gBAAiB,KACjBC,gBAAiB,KACjBC,aAAc,KACdC,aAAc,K,8ICzOhB,MAAM6D,EACJ,eAAC,KAAEC,EAAI,MAAEC,EAAQ,GAAGlU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACzB7B,IAAA,IAAC,EAAE2U,EAAC,EAAEC,EAAC,KAAEoB,GAAMhW,EAAA,OAEXgB,IAAAA,cAAA,SACEA,IAAAA,cAAA,iBAAe2T,EAAG,EAAGC,EAAG,EAAGpC,MAAM,OAAOyD,OAAO,QAC7CjV,IAAAA,cAAA,OACEuT,UAAS,uFAAArO,OAAyF4P,EAAI,+CAAA5P,OAA8C4P,EAAI,KAAA5P,OAAI6P,GAC5JrI,MAAO,CAAE0G,IAAK,GAAFlO,OAAK0O,QAAAA,EAAK,EAAC,OACvBsB,MAAM,gCAENlV,IAAAA,cAAA,OAAKuT,UAAU,qDAAqDyB,KAGtE,CACL,C,iSCrBL,MAAMlG,EAAkB,CACtB,CAAE+C,kBAAmB9R,EAAAA,QAAAA,KAAc+R,cAAe,CAAC,EAAGuB,gBAAiBtT,EAAAA,QAAAA,KAAcoR,eAAgB,IACrGpR,EAAAA,QAAAA,MAGIuT,EAAetT,IAAAA,cAAoB8O,GAOnCqG,EAAkBA,KAAMnG,EAAAA,EAAAA,YAAWsE,GAgBnC8B,EAAgB,WAAsE,IAAnED,gBAAiBE,EAAuBF,GAAiBtU,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpF,MAAQsQ,eAAgBmE,EAAwB,IAAOD,KAChDlE,EAAgBC,GAAqBkE,EAOtCC,GAASC,EAAAA,EAAAA,cACbnR,IACE+M,GAAkBqE,IAAa,IAAMA,EAAW,CAACpR,IAAK,KAAQ,GAEhE,CAAC+M,IAQGsE,GAAWF,EAAAA,EAAAA,cAAY,KAC3BpE,GAAkB,KAAM,CAAG,IAAE,GAC5B,CAACA,IAQEuE,GAAWH,EAAAA,EAAAA,cACfnR,IACE,MAAMuR,IAAiBzE,SAAAA,EAAiB9M,IAExC,OADA+M,GAAkBqE,IAAa,IAAMA,EAAW,CAACpR,GAAKuR,MAC/CA,CAAa,GAEtB,CAACzE,EAAgBC,IASbyE,GAAeL,EAAAA,EAAAA,cAAYnR,IAAM8M,aAAc,EAAdA,EAAiB9M,MAAO,GAAO,CAAC8M,IAEvE,MAAO,CACAA,iBACLoE,SACAG,WACAC,WACAE,eAEJ,EAEMtL,EAAU,CACd+I,eACAxE,kBACAqG,kBACAC,gB,0TChFF,MAAM3B,EAAgBzU,IAA2B,IAA1B,kBAAE8W,GAAmB9W,EAC1C,MAAM,cAAE8S,EAAgB,CAAC,EAAC,kBAAED,EAAiB,gBAAEwB,IAAoB8B,EAAAA,EAAAA,oBAC7D,YACJrC,EAAW,mBACXH,EAAkB,WAClBlB,EAAU,QACVsB,EAAO,QACPxC,EAAO,WACPC,EAAU,WACVgC,EAAa,CAAC,EAAC,WACfC,EAAa,IACXX,EAEJ,IAAIiE,EAAqB/V,IAAAA,cAACgW,EAAAA,EAAc,MACpCC,EAAQ,KACRC,EAAQ,KACRC,EAAgB,GAChBC,EAAuB,GAE3B,GAAIrD,EAAS,KAAAsD,EAKX,MAAMC,GAAgCC,EAAAA,EAAAA,IAAgB,UAAW,UAC3DC,GAAwBnG,EAAAA,EAAAA,cAAa,CAAEyB,gBAAeD,oBAAmBwB,oBAE/E0C,EACE/V,IAAAA,cAACsW,EAA6B,CAC5BG,gBAAgB,IAChBC,iBAAiB,IACjBC,OAAQnU,GAAOA,EACfoU,eACE5W,IAAAA,cAAC6W,EAAAA,EAAkB,CACjBC,GAAI,EACJC,GAAI,EACJC,aAAc,CAAErD,EAAG,EAAGC,EAAG,GACzBqD,YAAa,CAAE9C,KAAM,cAAeC,OAAQ,eAC5CwC,eAAgB5W,IAAAA,cAACwW,EAAqB,QAG1CU,eAAiB3G,IAAwC,QAAjC8F,EAAI5T,OAAOwR,OAAO1D,GAAS3L,cAAM,IAAAyR,OAAA,EAA7BA,EAAgC,KAAO,EACnEc,qBAAmB,GAGzB,CAKA,GAAI1U,OAAO2U,KAAK5E,GAAY1R,OAAQ,CAClC,MAAMuW,EAAoB,IACrB7E,GAGL,GAAI6E,EAAkBC,MAAO,CAC3B,MAAMC,GAAqB1C,EAAAA,EAAAA,gBAAe,CAAEC,KAAM,MAClDuC,EAAkBG,mBAAqBxX,IAAAA,cAACuX,EAAkB,KAC5D,CAEAtB,EAAQjW,IAAAA,cAACyX,EAAAA,GAASC,EAAAA,EAAAA,GAAA,GAAKL,EAAiB,CAAEtD,SAAS,IACrD,CAKI5S,MAAM6C,QAAQyO,KAChByD,EAAQzD,EAAWjR,KAAI,CAACmW,EAAW5C,KACjC,MAAM6C,EAAmB,IACpBD,GAGL,GAAIC,EAAiBN,MAAO,CAC1B,MAAMC,GAAqB1C,EAAAA,EAAAA,gBAAe,CAAEC,KAAM,IAAKC,UACvD6C,EAAiBJ,mBAAqBxX,IAAAA,cAACuX,EAAkB,KAC3D,CAEA,OAAOvX,IAAAA,cAACyX,EAAAA,GAASC,EAAAA,EAAAA,GAAA,CAACrW,IAAG,SAAA6D,OAAWyS,EAAUE,cAAmBD,EAAgB,CAAE7D,SAAS,IAAS,KAIrG,MAAM+D,EAAkBrY,IAA0B,IAAzB,UAAEuU,EAAS,MAAE+D,GAAOtY,EAC3C,MAAQuY,UAAWC,KAAc1X,GAC/BuV,EAAkB9B,IAAc8B,EAAkB5B,EAAAA,iBAAAA,MACpD,OAAOlU,IAAAA,cAACiY,GAASP,EAAAA,EAAAA,GAAA,GAAUnX,EAAiBwX,GAAW,EAMzD,OAHA5B,EAAgBxD,aAAkB,EAAlBA,EAAoBuF,SAAS1W,IAAIsW,GACjD1B,EAAuBzD,aAAkB,EAAlBA,EAAoBwF,gBAAgB3W,IAAIsW,GAG7D9X,IAAAA,cAACmQ,EAAAA,GAAKuH,EAAAA,EAAAA,GAAA,CACJ3D,QAAS,CAAEqE,SAAU,GACrB5G,MAAOC,EACPjB,WAAYA,EACND,UAASwF,sBAAuBjD,GAErCmD,EACAC,EACAC,EACDnW,IAAAA,cAACqY,EAAAA,EAAU,KAAEjC,GACP,EASZ3C,EAAcpT,UAAY,CACxByV,kBAAmBxV,IAAAA,SACjBA,IAAAA,MAAgB,CACd0X,UAAW1X,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OAAiBgY,WACjEvE,QAASzT,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,SAC9CkU,cAAelU,IAAAA,MAAgB,CAAC,YAAa,aAUnDmT,EAAclT,aAAe,CAC3BuV,kBAAmB,CACjB,CAAC5B,EAAAA,iBAAAA,MAAwB,CACvB8D,UAAWO,EAAAA,EACXxE,QAAS,CACPqE,SAAU,IACVI,OAAQ,CAAEJ,SAAU,MAEtB5D,cAAe,aAEjB,CAACN,EAAAA,iBAAAA,MAAwB,CACvB8D,UAAWS,EAAAA,EACX1E,QAAS,CACPqE,SAAU,IACVI,OAAQ,CAAEJ,SAAU,MAEtB5D,cAAe,aAEjB,CAACN,EAAAA,iBAAAA,WAA6B,CAC5B8D,UAAWU,EAAAA,EACX3E,QAAS,CACPqE,SAAU,IACVI,OAAQ,CAAEJ,SAAU,MAEtB5D,cAAe,S,oeC7JrB,MAAMN,EAAmB,CACvByE,KAAM,OACNC,KAAM,OACNC,UAAW,aAUPC,EAAgB,WAA4B,IAA3B,SAAExI,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1C,MAAMkY,EAAyB,CAAC,EAChC,IAAIC,EAAsB,EACtBC,EAAuB,EAyB3B,OAvBA3I,EACG2B,QAAOjT,IAAA,IAAC,UAAEyV,GAAWzV,EAAA,OAAmB,IAAdyV,CAAkB,IAC5C1R,SAAQtD,IAAc,IAAb,KAAEG,GAAMH,EACZ0B,MAAM6C,QAAQpE,KAChBqZ,GAAwB5T,KAAK6T,OAAOtZ,EAAK4B,KAAIjC,IAAK,IAAA4Z,EAAA,OAAY,QAAZA,EAAI5Z,aAAK,EAALA,EAAOqU,SAAC,IAAAuF,EAAAA,EAAI,CAAC,KACrE,IAGJ7I,EAASvN,SAAQiC,IAAkB,IAAjB,GAAEX,EAAE,KAAEzE,GAAMoF,EACxBoU,EAAc,EAEdjY,MAAM6C,QAAQpE,KAChBoZ,EAAsBpZ,EAAKkB,OAASkY,EAAsBpZ,EAAKkB,OAASkY,EAExEI,EAAc/T,KAAK6T,OAAOtZ,EAAK4B,KAAIjC,IAAK,IAAA8Z,EAAA,OAAY,QAAZA,EAAI9Z,aAAK,EAALA,EAAOqU,SAAC,IAAAyF,EAAAA,EAAI,CAAC,KACzDJ,EAAuBG,EAAcH,EAAuBG,EAAcH,GAGxE5U,IACF0U,EAAuB1U,GAAM+U,EAC/B,IAGK,CACL/G,KAAM2G,EACN1G,KAAM2G,EACN1G,eAAgBwG,EAEpB,EAUMO,EAAkB,WAAiC,IAAhC,KAAEhH,EAAI,QAAE/B,EAAU,CAAC,GAAG1P,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjD,MAAM0Y,EAAqB,CAAC,EACtBC,EAAiB,IAAKjJ,GACtBkJ,EAAkB,CAAC,EAEzB,GAAIhX,OAAOwR,OAAO3B,GAAMxR,OACtB2Y,EAAgB7F,EAAI,CAAC,EAAG,WACnB,GAAItB,GAAQ,GAAK,CACtB,MAAMoH,EAAUrU,KAAKsU,IAAI,GAAItU,KAAKuU,MAAMvU,KAAKwU,MAAMvH,GAAQ,MAC3DmH,EAAgB7F,EAAI,CAAC,EAAGvO,KAAKC,MAAMgN,EAAO,GAAKoH,GAAWA,EAC5D,MACED,EAAgB7F,EADPtB,EAAO,GACI,CAAC,EAAGA,EAAOA,EAAO,GAAK,IAEvB,CAAC,EAAG,IAY1B,OATIA,EAAO,MACTkH,EAAetG,MAAQuG,EAAgB7F,EAAElS,WAAWZ,OACpD0Y,EAAerG,OAASsG,EAAgB7F,EAAElS,WAAWZ,QAGnD2B,OAAO2U,KAAKqC,GAAiB3Y,SAC/ByY,EAAmB3G,OAAS6G,GAGvB,IACFF,EACHhJ,QAASiJ,EAEb,EAeMM,EAAwB,WAGzB,IAFH,SAAExJ,EAAW,GAAE,KAAE+B,EAAI,KAAEC,EAAI,aAAEvB,EAAY,aAAEC,GAAcnQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAC7D,iBAAEkZ,EAAmB7F,GAAkBrT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE3C,MAAMqX,EAAW,GACXC,EAAkB,GAClB6B,EAAe,CAAC,EAChBC,EAAsB,CAAC,EAkF7B,OAhFA3J,EAASvN,SAAQmX,IACf,MAAM,QAAEnG,EAAO,UAAEC,EAAS,KAAEpU,EAAI,KAAEuU,EAAI,GAAE9P,EAAE,UAAEoQ,EAAS,cAAED,EAAa,OAAEJ,EAAM,gBAAEE,EAAe,YAAED,GAC7F6F,EAEF,GAAIta,SAAAA,EAAMkB,OAAQ,CAChB,MAAMqZ,EAAkB,CACtBva,KAAM,CAAC,GAGLuU,GAAQH,IAAc+F,EAAiBnB,MAAQ5E,IAAc+F,EAAiBlB,YAChFsB,EAAgBva,KAAKuU,KAAOA,GAG1BC,IACF+F,EAAgBva,KAAKwU,OAASA,GAG5BE,IACF6F,EAAgBva,KAAK0U,gBAAkBA,GAGrCD,IACF8F,EAAgBva,KAAKyU,YAAcA,GAGrC,MAAM9T,EAAe,CAAC,EAElBwT,IACFxT,EAAawT,QAAUA,GAGrBS,IACFjU,EAAaiU,cAAgBA,GAG/B,MAiCM4F,EAAe,CAAEpG,YAAW+D,MADpB,IAhCY,IACrBxX,EACHc,IAAK,SAAF6D,OAAWgV,EAAQ7V,GAAE,KAAAa,OAAI8O,GAAa,IACzCrQ,KAAM,SAAFuB,OAAWgV,EAAQ7V,GAAE,KAAAa,OAAI8O,GAAa,IAC1CpU,KAAMsa,EAAQta,KACd8M,MAAO,IAAMwN,EAAQxN,OAAS,CAAC,KAAOyN,GACtC3J,WAAY0J,EAAQ1J,WACpB+D,aAAc2F,EAAQ3F,aACtBZ,EACG5C,GAAY,CACVsJ,IACC,MAAMC,EAASvJ,EAAa,CAAEsJ,QAAOhI,SACrC,YAAkBtR,IAAXuZ,GAAwBzU,OAAOC,MAAMwU,GAAU,EAAIA,CAC3D,SACHvZ,EACF6S,EAAGyG,IACD,IAAIE,EAYJ,OATEA,EADEvJ,EACOA,EAAa,CACpBqJ,QACAG,YAA6B,iBAATlI,EACpBA,KAAsB,iBAATA,EAAoBA,EAAOA,aAAI,EAAJA,EAAO4H,EAAQ7V,MAGhC,iBAATiO,EAAoB+H,EAAMzG,EAAIyG,EAAMzG,GAAItB,aAAI,EAAJA,EAAO4H,EAAQ7V,UAGvDtD,IAAXwZ,GAAwB1U,OAAOC,MAAMyU,GAAU,EAAIA,CAAM,KAOhE9F,GACFwF,EAAoB5V,GAAM+V,EAC1BjC,EAAgB3N,KAAK4P,KAErBJ,EAAa3V,GAAM+V,EACnBlC,EAAS1N,KAAK4P,GAElB,KAGK,CACLlC,WACA8B,eACA7B,kBACA8B,sBAEJ,EAUMQ,EAAsB,WAAoD,IAAAC,EAAA,IAAnD,QAAEtI,EAAUrS,EAAAA,QAAAA,KAAY,SAAEuQ,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACxE,MAAMqR,EAAuB,CAAC,EA8B9B,OA5BIE,GAAWjR,MAAM6C,QAAQsM,SAAa,QAALoK,EAARpK,EAAW,UAAE,IAAAoK,OAAL,EAARA,EAAe9a,OAC1C0Q,EAAS,GAAG1Q,KAAKmD,SAAQ,CAACmX,EAASnF,KACjC,MAAM4F,EAAa,CAAC,EAEpBrK,EAASvN,SAAQnD,IAAQ,IAAAgb,EACnBhb,SAAU,QAANgb,EAAJhb,EAAMA,YAAI,IAAAgb,GAAVA,EAAa7F,KACf4F,EAAW/a,EAAKyE,IAAM,CACpBwW,MAAOjb,EAAKwU,QAAUxU,EAAKuU,MAAQvU,EAAKib,OAAS,GACjD7G,UAAWpU,EAAKoU,UAChBpU,KAAMwD,IAAWxD,EAAKA,KAAKmV,KAE/B,IAGF,MAAM+F,EAAY,CAChBT,MAAO,CAAE1G,EAAGuG,EAAQvG,EAAGC,EAAGsG,EAAQtG,EAAGmB,QAAO4F,eAG9CzI,EAAqBgI,EAAQvG,GAAK,CAChCA,EAAGuG,EAAQvG,EACXC,EAAG,KACH+G,aACAI,QACG/a,IAAAA,eAAqBoS,IAAYpS,IAAAA,aAAmBoS,EAAS,IAAK0I,KAAiB1I,EAAQ,IAAK0I,IACpG,IAIE5I,CACT,EAaM8I,EAAqB,WAMhB,IANiB,QAC1Bd,EAAU,CAAC,EAAC,KACZ7H,EAAI,oBACJzB,EAAmB,kBACnBqK,EAAoB,CAAC,EAAC,gBACtBpK,GACDhQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACH,MAAM,KAAEjB,EAAO,GAAE,gBAAE6Q,GAAoByJ,EACjCvC,EAAY,IACbsD,EACHjI,WAAYpT,EAAKsb,QACf,CAACC,EAAKxQ,EAASoK,IAAWA,EAAQnE,GAAwB,EAAIuK,EAAIjW,OAAOyF,EAAQgJ,GAAKwH,GACtF,IAEFC,WAAYC,IAAI,IAAAC,EAAA,OAAc,QAAVA,EAAA1b,EAAKyb,UAAK,IAAAC,OAAA,EAAVA,EAAYzH,aAAcwH,CAAI,GAoBpD,OAhBE1D,EAAUL,MADmB,mBAApB7G,EACSA,EAAgB,IAAKyJ,EAASzJ,qBAAiB1P,IAE/C0P,EAGW,mBAApBI,IACT8G,EAAUyD,WAAaC,IACrB,MAAME,EAAY5D,EAAU3E,WAAWpR,QAAQyZ,GACzCG,EAAe,IAAK5b,EAAK+X,EAAU3E,WAAWuI,EAAY,KAC1DE,EAAW,IAAK7b,EAAK+X,EAAU3E,WAAWuI,EAAY,KACtDG,EAAO,IAAK9b,EAAKyb,IAEvB,OAAOxK,EAAgB,CAAEwK,OAAMG,eAAcE,OAAMD,WAAUpJ,QAAO,GAIjEsF,CACT,EAYMgE,EAAqB,WAA2E,IAA1E,SAAErL,EAAW,GAAE,KAAEgC,EAAI,kBAAEsJ,EAAoB,CAAC,EAAC,gBAAE9K,GAAiBjQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC9F,MAAM8W,EAAY,GACZ6C,EAAclK,EAASxP,OAAS,EA2CtC,OAzCAwP,EAASvN,SAAQ,WAA0E,IAAzE,gBAAE2N,EAAe,GAAErM,EAAE,OAAE+P,EAAM,YAAEC,KAAgB6F,GAASrZ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGkU,EAAKlU,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpF,MAAM6W,EAAmB,CACvBlL,MAAO,CAAEoI,KAAM,CAAC,EAAG+G,WAAY,CAAC,GAChCT,WAAYC,GAAQA,GAiBtB,GAdIb,GAAepG,IACjBwD,EAAiBlL,MAAMoI,KAAKV,OAASA,GAGnCoG,GAAenG,IACjBuD,EAAiBlL,MAAMoI,KAAKT,YAAcA,GAI1CuD,EAAiBN,MADY,mBAApB5G,EACgBA,EAAgB,CAAErM,KAAI+P,SAAQC,iBAAgB6F,IAE9CxJ,EAGI,mBAApBI,EAAgC,CACzC,MAAMgL,EAA+B,iBAATxJ,GAAqBA,IAASA,aAAI,EAAJA,EAAOjO,IAEjEuT,EAAiBwD,WAAaC,GAGrBvK,EAAgB,CACrBuK,KAHsBb,GAAea,EAAOS,GAAgBT,EAI5Db,cACAlI,KAAMwJ,GAGZ,CAEAnE,EAAUnN,KAAK,IACVoR,KACAhE,EACHC,YAAwB,IAAV9C,EAAe,OAAW,SAE5C,IAEO4C,CACT,EAkBMoE,EAAoB,WAWf,IAXgB,SACzBzL,EAAW,GAAE,eACbiC,EAAiB,CAAC,EAAC,KACnBF,EAAI,KACJC,EAAI,gBACJ7B,EAAe,gBACfC,EAAe,qBACfC,GAAuB,EAAI,oBAC3BC,EAAsB,EAAC,gBACvBC,EAAe,gBACfC,GACDjQ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACH,MAAMoa,EAAoB,CACxBe,gBAAiBrL,GAQnB,IACIsL,EADAC,EAAgB,GAGpB5L,EAASvN,SAAQmX,IACXA,EAAQvF,iBACVuH,EAAc1R,KAAK,CACjBkG,qBACGwJ,IAGHA,EAAQxF,kBACVuH,EAAe,CACbxL,qBACGyJ,GAEP,IAGGgC,EAAcpb,OAMjBob,EAAgBA,EAAcC,MAAM,EAAG,GALvCD,EAAc1R,KAAK,CACjBkG,qBACGJ,aAAQ,EAARA,EAAW,KAMb2L,IACHA,EAAe,CACbxL,qBACGH,aAAQ,EAARA,EAAW,KAIlB,MAAMwL,EAAeI,EAAcpb,OAAS,GAAKyR,GAAmBD,EAEpE,MAAO,CACLE,WAAYwI,EAAmB,CAC7Bd,QAAS+B,EACT5J,OACAzB,sBACAqK,oBACApK,oBAEF4B,WAAYkJ,EAAmB,CAAErL,SAAU4L,EAAe5J,KAAMwJ,EAAaF,kBAjDrD,CACxBQ,eAAe,EACfC,UAAU,GA+CsFvL,oBAEpG,EAEMqB,EAAe,CACnB+B,mBACA6H,oBACAzC,kBACAQ,wBACAhB,gBACA2B,sBACAO,qBACAW,qB,kLCrbF,MAAMW,EAAUC,IACd,IAAK1W,OAAOC,MAAMD,OAAO2W,WAAWD,IAClC,OAAOA,EAGT,OAAQA,GACN,IAAK,KACH,MAAO,QACT,IAAK,KACH,MAAO,MACT,IAAK,KACH,MAAO,MAET,QACE,MAAO,MACX,EAaIE,EAAYzd,IAA6C,IAA5C,KAAEmV,EAAI,OAAEuI,EAAM,KAAEH,EAAI,MAAEvS,KAAU+N,GAAO/Y,EACxD,MAAM2d,EAAW,IAAK5E,GAChB6E,EAAY,CAAEL,OAAMvS,WAAU+N,GAC9B8E,EAAY,CAAEnQ,MAAO,CAAEoQ,SAAUR,EAAQC,IAASvS,WAAU+N,GAC5DgF,EAAYT,EAAQC,GA+D1B,OA7DIvS,EACF2S,EAAS,mBAAqB3S,EAE9B2S,EAAS,gBAAiB,EAGxBxI,IACFyI,EAAU/B,MAAQ1G,EAClB0I,EAAUnQ,MAAMmO,MAAQ1G,GAqDnBnU,IAAAA,cAAA,QAAMuT,UAAS,uDAAArO,OAAyDwX,IAlD/DM,MACd,OAAQN,GACN,IAAK,OACH,OACE1c,IAAAA,cAAA,QACE0M,MAAO,CACL8E,MAAOuL,EACP9H,OAAQ,GAAF/P,OAAKW,OAAO2W,WAAWO,GAAa,EAAC,QAG7C/c,IAAAA,cAAA,OAAA0X,EAAAA,EAAAA,GAAA,CAAKlG,MAAM,OAAOyD,OAAO,OAAOgI,QAAQ,YAAYC,KAAK,OAAUP,GACjE3c,IAAAA,cAAA,QAAM4T,EAAE,IAAIpC,MAAM,KAAKyD,OAAO,KAAKd,KAAMA,IACzCnU,IAAAA,cAAA,QAAM2T,EAAE,KAAKC,EAAE,IAAIpC,MAAM,KAAKyD,OAAO,KAAKd,KAAMA,IAChDnU,IAAAA,cAAA,QAAM2T,EAAE,KAAKC,EAAE,IAAIpC,MAAM,KAAKyD,OAAO,KAAKd,KAAMA,MAIxD,IAAK,YACH,OACEnU,IAAAA,cAAA,QAAM0M,MAAO,CAAE8E,MAAO,GAAFtM,OAAoC,EAA/BW,OAAO2W,WAAWO,GAAc,MAAM9H,OAAQ8H,IACrE/c,IAAAA,cAAA,OAAA0X,EAAAA,EAAAA,GAAA,CAAKlG,MAAM,OAAOyD,OAAO,OAAOgI,QAAQ,YAAYC,KAAK,OAAUP,GACjE3c,IAAAA,cAAA,QACEmd,GAAI,EACJC,GAAoC,GAA/BvX,OAAO2W,WAAWO,GAAmB,EAC1CM,GAAmC,GAA/BxX,OAAO2W,WAAWO,GAAkB,EACxCO,GAAoC,GAA/BzX,OAAO2W,WAAWO,GAAmB,EAC1C3I,OAAQD,EACRE,YAAa,EACbC,gBAAgB,UAK1B,IAAK,MACH,OAAOtU,IAAAA,cAACud,EAAAA,QAAYX,GACtB,IAAK,WACH,OAAO5c,IAAAA,cAACwd,EAAAA,aAAiBZ,GAC3B,IAAK,WACH,OACE5c,IAAAA,cAAA,QAAA0X,EAAAA,EAAAA,GAAA,CAAMnE,UAAU,8BAAiCsJ,GAC/C7c,IAAAA,cAAA,QAAM,kBAAY,MAKxB,QACE,OAAOA,IAAAA,cAACyd,EAAAA,WAAeb,GAC3B,EAGwFI,GAAiB,EAQ7GP,EAAUpc,UAAY,CACpB8T,KAAM7T,IAAAA,OACNic,KAAMjc,IAAAA,MAAgB,IAAImC,OAAO2U,KAAKsG,EAAAA,YACtChB,OAAQpc,IAAAA,MAAgB,CAAC,OAAQ,MAAO,WAAY,WAAY,SAAU,cAC1E0J,MAAO1J,IAAAA,QAQTmc,EAAUlc,aAAe,CACvB4T,KAAM,KACNoI,KAAM,KACNG,OAAQ,SACR1S,MAAO,K,0KCxHT,MAAM0J,EAAcA,KAClB,MAAM,aAAEmC,EAAY,OAAEN,EAAM,SAAEG,EAAQ,SAAEC,IAAaP,EAAAA,EAAAA,kBAC/C,cAAEtD,EAAgB,CAAC,IAAMqD,EAAAA,EAAAA,oBACzB,YAAE/E,EAAW,SAAEE,EAAQ,QAAEC,EAAU,CAAC,EAAC,WAAEiC,EAAa,CAAC,GAAMV,EAEjE,IAAK1B,EACH,OAAO,KAGT,MAAMuN,EAAc,CAClBtD,MAAO,CAAE/J,SAAUlN,IAAWkN,IAC9BsN,MAAO,CACLC,KAAMtI,EACNuI,OAAQpI,EACRqI,OAAQpI,EACRqI,UAAWnI,IAIf,OACE7V,IAAAA,cAAA,OACEuT,UAAS,8BAAArO,QAAiCsN,aAAU,EAAVA,EAAY8E,OAAS,qBAAyB,IACxF5K,MAAO,CACLuR,YAAa1N,aAAO,EAAPA,EAAS2C,OAAI,GAAAhO,OAAOqL,EAAQ2C,KAAI,OAAS,EACtDgL,aAAc3N,aAAO,EAAPA,EAAS4C,QAAK,GAAAjO,OAAOqL,EAAQ4C,MAAK,OAAS,IAGzDnT,IAAAA,eAAqBoQ,IAAgBpQ,IAAAA,aAAmBoQ,EAAa,IAAKuN,KAC1EvN,EAAY,IAAKuN,IACf,EAOVjK,EAAYrT,UAAY,CAAC,EAKzBqT,EAAYnT,aAAe,CAAC,C,uJC1B5B,MAAM8P,EAAe,WAKV,IALW,cACpByB,EAAgB,CAAC,EAAC,kBAClBD,EAAoB9R,EAAAA,QAAAA,KAAY,gBAChCsT,EAAkBtT,EAAAA,QAAAA,KAAY,cAC9Boe,EAAgB,KACjBtd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAaH,MAAMud,EAAiB,WAA4E,IAA3E,EAAEzK,EAAC,MAAEnC,EAAK,aAAE6M,EAAY,QAAE9N,EAAU,EAAC,SAAE+N,EAAWH,GAAetd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3F,OAAI2Q,GAAS8M,GAAY3K,EAAI0K,EAAe,EAAI9N,GAAWoD,EAAI2K,EAAWD,EAAe9N,EAChFoD,EAAIpD,EAAU8N,EAAe,EAG/B1K,EAAInC,EAAQ,EAAImC,EAAI0K,EAAe9N,EAAUoD,EAAIpD,CAC1D,EAcMgO,EAAiB,WAAsF,IAArF,EAAE3K,EAAC,OAAEqB,EAAM,cAAEuJ,EAAa,MAAEhN,EAAK,QAAEjB,EAAU,GAAE,SAAE+N,EAAWH,GAAetd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACrG,GAAI2Q,GAAS8M,EACX,OAAO1K,EAAIqB,EAAS,EAAIrB,EAAI4K,EAAgBjO,EAAUqD,EAAIrD,EAG5D,MAAMkO,EAAoBxJ,EAASuJ,EAAgB,GAGnD,OAAOvJ,GAFmBwJ,EAAoB,KAAQA,GAAsB,IAG9E,EAcMC,EAAe,WAA4E,IAA3E,EAAE/K,EAAC,MAAEnC,EAAK,aAAE6M,EAAY,QAAE9N,EAAU,EAAC,SAAE+N,EAAWH,GAAetd,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzF,OAAI2Q,GAAS8M,GAAY3K,EAAI0K,EAAe,EAAI9N,GAAWoD,EAAI2K,EAAWD,EAAe9N,EAChF,SAGFoD,EAAInC,EAAQ,EAAI,QAAU,MACnC,EAEA,OAAOxS,IAA0B,IAAA2f,EAAAC,EAAAC,EAAAC,EAAA,IAAzB,EAAEnL,EAAC,EAAEC,EAAC,MAAEyG,EAAQ,CAAC,GAAGrb,EAC1B,MAAM,QAAEuR,EAAU,CAAC,EAAC,qBAAE2B,EAAuB,CAAC,GAAMJ,EAE9CT,EAAeQ,IACfN,EAAa8B,IACbmG,EAAiB,CAAEvG,OAAQ,EAAGC,KAAM,EAAGC,MAAO,EAAGC,IAAK,KAAM7C,GAC5D6B,GAAUF,SAA+B,QAAXyM,EAApBzM,EAAuBmI,EAAM1G,UAAE,IAAAgL,OAAX,EAApBA,EAAiC5D,UAAW,GACtDgE,GAAkB1N,SAAqB,QAATuN,EAAZvN,EAAc1G,eAAO,IAAAiU,GAAsB,QAAtBC,EAArBD,EAAuBI,cAAc,cAAM,IAAAH,OAA/B,EAAZA,EAA6CI,0BAA2B,CAC9FzN,MAAO,EACPyD,OAAQ,GAGJiK,GAAgB3N,SAAmB,QAATuN,EAAVvN,EAAY5G,eAAO,IAAAmU,OAAT,EAAVA,EAAqBG,0BAA2B,CAAEzN,MAAO,EAAGyD,OAAQ,GAE1F,GAAI7C,EAAS,CACX,MAAM+M,EAAuBvL,EAAImL,EAAgB9J,OAASuE,EAAevG,OACnEmM,EAAqBzL,EAAI6F,EAAetG,KACxCmM,EAAsB1L,EAAIoL,EAAgBvN,MAAQgI,EAAerG,MACjEmM,EAAoB1L,EAAI4F,EAAepG,IACvCmM,EAAmB,GAAHra,OAAOga,EAAcjK,QAAU,EAAK,SAAa,IAEvE,OACEjV,IAAAA,cAAA,SACEA,IAAAA,cAAA,iBACE2T,EAAGyK,EAAe,CAAEzK,IAAGnC,MAAOuN,EAAgBvN,MAAO6M,aAAca,EAAc1N,QACjFoC,EAAG2K,EAAe,CAChB3K,IACAqB,OAAQ8J,EAAgB9J,OACxBuJ,cAAeU,EAAcjK,OAC7BzD,MAAOuN,EAAgBvN,QAEzBA,MAAM,OACNyD,OAAO,QAEPjV,IAAAA,cAAA,OACEuT,UAAS,0CAAArO,OAA4Cqa,GACrD/L,IAAKjC,EACL7E,MAAO,CACLC,QACIwS,GAAwBC,GAAsBC,GAAuBC,EACrE,OACF,gBAEJpK,MAAM,gCAENlV,IAAAA,cAAA,OACEuT,UAAS,6DAAArO,OAA+DwZ,EAAa,CACnF/K,IACAC,IACApC,MAAOuN,EAAgBvN,MACvB6M,aAAca,EAAc1N,UAG7BY,KAMb,CAEA,OAAOpS,IAAAA,cAAA,SAAK,CAEhB,C,yNCjJA,MAAMwf,EAAkB,SAACC,GAAgC,IAAAC,EAAA,IAAzBC,EAAY9e,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC1C,MAAM,QAAE+e,EAAO,cAAEC,EAAgB,CAAC,EAAC,QAAEC,EAAO,QAAEC,EAAUhgB,EAAAA,EAAAA,KAAY,OAAEigB,EAAS,CAAC,GAAM,IAAKP,GAC3F,IAAIQ,EAAuBJ,EAS3B,OARIF,GACFI,IAGEhgB,EAAAA,EAAAA,YACFkgB,EAAuBD,GAGlB,CACLJ,QAASA,QAAAA,EAA+B,QAAxBF,EAAIO,SAAoB,IAAAP,OAAA,EAApBA,EAAsBE,QAC1CC,cAAeI,EACfH,UACAzb,GAAI4b,EAAqB5b,IAAM4b,EAAqBtc,KACpDA,KAAMsc,EAAqBtc,KAC3Boc,UACAxgB,MAAOsgB,EAActgB,MACrBygB,SAEJ,EASME,EAA+B,SAAC3gB,GAAK,IAAE4gB,EAAUtf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAC,MACvC,iBAAVtB,GAAsBA,EAAMuB,OAASqf,GAAgC,iBAAV5gB,CAAkB,EAEjF6gB,EAAc,CAClBZ,kBACAU,+B,goBChBF,MAAMG,EAAqB,CACzBC,OAAQ,SACRC,SAAU,YAQNC,EAAgBC,EAAAA,cAOhBC,EAAsBF,EAOtBG,EAAkBC,EAAAA,kBAOlBC,EAAiBC,EAAAA,iBAqBjBC,EAAgB,WAA2F,IAA1F,YAAEC,EAAc,CAAErW,QAAS,MAAM,QAAExG,EAAO,gBAAE8c,EAAe,QAAEC,KAAYnJ,GAAOlX,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzG,MAAQ8J,QAASwW,EAAa,CAAC,GAAMH,EAC/BI,EAAiB3e,OAAOkC,QAAQoT,GAAO9F,QAAOjT,IAAA,IAAEqC,GAAIrC,EAAA,MAAK,UAAU2G,KAAKtE,EAAI,IAC5EggB,EACH3c,IAAeP,IAAY1B,OAAOkC,QAAQR,GAAS3C,KAAI/B,IAAA,IAAE4B,EAAK9B,GAAME,EAAA,MAAM,IAAKF,EAAOyK,MAAO3I,EAAK9B,QAAO,KACzG4E,GAAWf,IAAWe,IACvB,GACImd,EAA2D,iBAApBL,GAA2D,iBAApBA,EAC9EM,EACHpgB,MAAM6C,QAAQid,IAAoBA,GAAqBK,GAAiC,CAACL,IAAqB,GA4CjH,IAAIO,EAYJ,OAtDAH,EAAete,SAAQ,CAAC0e,EAAQ1M,KAC9B,IAAI2M,EAAkBD,EAiBtB,GAf+B,iBAApBC,GACTA,EAAkB,CAChB1X,MAAOyX,EACPliB,MAAOkiB,GAGTJ,EAAetM,GAAS2M,GACkB,mBAA1BA,EAAgB1X,QAChC0X,EAAgB1X,MAAQ0X,EAAgB1X,SAG1C0X,EAAgB1M,KAAO0M,EAAgB1M,MAAQ0M,EAAgB1X,MAC/D0X,EAAgBC,YAAcD,EAAgBC,aAAeD,EAAgB1X,MAC7E0X,EAAgBpK,MAAQoK,EAAgBpK,OAASoK,EAAgB1X,MAE7DuX,EAAgBzgB,OAAQ,CAC1B,IAAI8gB,EAEAld,IAAegd,EAAgBniB,QACjCqiB,EAAaC,IAAWN,EAAiBG,EAAgBniB,QAAU,EAE9DqiB,IAIHA,IAHmBL,EAAgBO,MAAKC,GACtCtf,OAAOwR,OAAOyN,EAAgBniB,OAAOiP,SAASuT,OAKlDH,EAAaL,EAAgB/S,SAASkT,EAAgBniB,OAGnDqiB,IACHA,EAAaL,EAAgB/S,SAASkT,EAAgB1X,QAGxDqX,EAAetM,GAAOiN,SAAWJ,CACnC,KAMAJ,EADEN,IAAYe,EAAAA,cAAAA,QACIZ,EAAeS,MAAKI,IAAwB,IAAjBA,EAAIF,YAAsB,CAAC,GAAGhY,MAE1DqX,EAAepP,QAAOiQ,IAAwB,IAAjBA,EAAIF,WAAmBxgB,KAAI0gB,GAAOA,EAAIlY,QAGlFmX,SAAAA,EAAYgB,YACdf,EAAere,SAAQiC,IAAA,IAAE3D,EAAK9B,GAAMyF,EAAA,OAAKmc,aAAU,EAAVA,EAAYgB,WAAWC,aAAa/gB,EAAK9B,EAAM,IAGnF,CACL4E,QAASkd,EACTW,SAAUR,EAEd,EAWMa,EAAoBC,KAAS,WAA+C,IAA9C,WAAE9U,EAAU,YAAE+U,EAAW,QAAEpe,GAAStD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1E,MAAMuZ,EAAe,CAAC,EAUtB,OARKjW,GAAYA,EAAQrD,SAAU0M,IACjC4M,EAAa5M,YAAa,GAGD,iBAAhB+U,GAA4BA,IACrCnI,EAAaoI,qBAAsB,GAG9BpI,CACT,IAcMqI,EAAoBH,KACxB,WAAqG,IAApG,WAAE9U,EAAU,QAAErJ,EAAO,cAAEue,EAAa,cAAEC,EAAa,gBAAEC,EAAe,mBAAEC,GAAoBhiB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7F,MAQMiiB,EAA+B,CACnCxC,OAAQ,CACNuC,mBAAoB,SACpBE,iBAAkB,CAChB/iB,IAAAA,cAACgjB,EAAAA,qBAAoB,CAACC,QAASN,EAAethB,IAAI,iBAC/CuhB,KAIPrC,SAAU,CACRsC,mBAAoB,WACpBE,iBAAkB,CAChB/iB,IAAAA,cAACkjB,EAAAA,uBAAsB,CACrB7e,GAAE,iBAAAa,OAAmB0d,GACrBvhB,IAAI,gBACJ4hB,QAASN,EACT,aAAYC,EACZL,YAAaK,OAMfxI,EAAe,IA/BW,CAC9B+I,QAAS,CAAEC,cAAe,WAC1BC,MAAO,CAAEC,SAAS,EAAMC,gBAAiB,MACzCC,QAAS,CAAEJ,cAAe,WAC1BK,UAAW,CAAEL,cAAe,aAC5BpO,KAAM,CAAE0O,QAAQ,IA2BWhB,MACxBI,EAA6BD,IAOlC,OAJK1e,GAAYA,EAAQrD,SAAU0M,IACjC4M,EAAa5M,YAAa,GAGrB4M,CACT,IAsDIuJ,EAAS1e,IAuBT,IAvBU,UACd2e,EAAS,cACTlB,EAAa,UACbnP,EAAS,UACTsQ,EAAS,GACTxf,EAAE,WACFmJ,EAAU,iBACVsW,EAAgB,cAChBC,EAAa,SACbC,EAAQ,aACRC,EAAY,UACZC,EAAS,KACTvgB,EAAI,SACJwgB,EAAQ,cACRxB,EACAxe,QAASigB,EAAW,YACpB7B,EAAW,SACX8B,EAAQ,gBACRpD,EAAe,mBACf4B,EAAkB,WAClByB,EAAU,QACVpD,KACGnJ,GACJ9S,EACC,MAAOsf,EAAYC,IAAiBtT,EAAAA,EAAAA,WAAS,IACtC/M,EAASsgB,IAAcvT,EAAAA,EAAAA,UAASkT,IAChCpC,EAAU0C,IAAexT,EAAAA,EAAAA,UAAS,IACnC8P,GAAc1P,EAAAA,EAAAA,WAEpBqT,EAAAA,EAAAA,IAAwB,KACtB,MAAQxgB,QAASkd,EAAgBW,SAAU4C,GAAoB7D,EAAc,CAC3EC,cACA7c,QAASigB,EACTnD,kBACAC,aACGnJ,IAGL0M,EAAWpD,GACXqD,EAAYE,EAAgB,GAC3B,CAACR,EAAarM,EAAOiJ,EAAaC,EAAiBC,IAQtD,MAAMvL,EAAWkP,IACfL,EAAcK,EAAS,EAqBnBC,EAAmBA,CAACrF,EAAOsF,KAC/B,MAAM1D,EAAiBld,EACjB6gB,EAAe3D,EAAe4D,WAClCxD,IAAM,IAAAyD,EAAA,OACHH,GAAkBtD,EAAOzX,QAAU+a,IACa,QAAjDG,EAAAzF,EAAMI,cAAcb,cAAc,uBAAe,IAAAkG,OAAA,EAAjDA,EAAmDC,aAAa,iBAAkB1D,EAAOzX,OACzFyV,EAAMI,cAAcuF,YAAc3D,EAAOzX,KAAK,IAGlDqX,EAAe2D,GAAchD,SAC3Bd,IAAYe,EAAAA,cAAAA,SAA+BZ,EAAe2D,GAAchD,SAEtEd,IAAYe,EAAAA,cAAAA,QACdZ,EAAete,SAAQ,CAAC0e,EAAQ1M,KAC1BiQ,IAAiBjQ,IACnBsM,EAAetM,GAAOiN,UAAW,EACnC,IAIJ,MAAMR,EACJN,IAAYe,EAAAA,cAAAA,OACR8C,EACA1D,EAAepP,QAAOiQ,IAAwB,IAAjBA,EAAIF,WAAmBxgB,KAAI0gB,GAAOA,EAAIlY,QAEnEqb,EAAqBjiB,IAAWie,GAEhCiE,EAAa,CACjBjhB,KACAV,KAAMA,GAAQU,EACd9E,MAAO8lB,EAAmBL,GAAczlB,MACxCyiB,SAAWd,IAAYe,EAAAA,cAAAA,QAAwBoD,EAAmBL,IAAkB5hB,IAAWoe,GAC/F+D,cAAeP,EACf5Y,KAAM,UAAFlH,OAAagc,IAAYe,EAAAA,cAAAA,OAAwB,MAAU,YAC/D9d,QAASkhB,GAGPnE,IAAYe,EAAAA,cAAAA,WACdqD,EAAW1F,QAAUyF,EAAmBL,GAAchD,UAGxD,MAAMwD,EAAY,IACbF,EACHtF,OAAQ,IAAKsF,GACbzF,cAAe,IAAKyF,GACpBvF,QAAShgB,EAAAA,QAAAA,MAGX0kB,EAAWpD,GACXqD,EAAYlD,GAEZ2C,EAAS,IAAKqB,GAAaR,EAAcK,GAErCnE,IAAYe,EAAAA,cAAAA,QACduC,GAAc,EAChB,EA4FF,OACExkB,IAAAA,cAAA,OACEwT,IAAKwN,EACLzN,UAAS,mBAAArO,OAAsB8e,EAAY,4BAAgC,kCAEzEF,GAxFJ9jB,IAAAA,cAACylB,EAAAA,UAAQ/N,EAAAA,EAAAA,GAAA,CACPmM,UAAWA,EACXE,cAAeA,EACf2B,OAAQnB,EACRF,SAAUA,EACVtG,OACE/d,IAAAA,cAAC2lB,EAAAA,gBAAcjO,EAAAA,EAAAA,GAAA,CACb/B,SAAUA,GACN8M,EAAkB,CACpBjV,aACAmV,cAtFmBlD,IAC3B,MAAM4B,EAAiBje,IAAWe,GAClCwe,EAAc,KAAKnD,EAAAA,EAAAA,iBAAgBC,GAAQtb,QAASkd,IAAmB,EAAGA,EAAe,EAqFjFld,UACAue,gBACAE,gBAAiBL,GAAeqB,EAChCf,yBAGCA,GAAsBN,IAAkBlC,GAAsBuD,GAGrEgC,eACEzhB,aAAO,EAAPA,EAAS3C,KAAIigB,GACXzhB,IAAAA,cAAC6lB,EAAAA,aAAY,CACX5C,QAAS6B,EACTzjB,IAAKyC,OAAOgiB,KAAK,GAAD5gB,OAAIuc,EAAOzX,MAAK,KAAA9E,OAAIuc,EAAOliB,QAC3C8E,GAAIP,OAAOgiB,KAAK,GAAD5gB,OAAIuc,EAAOzX,MAAK,KAAA9E,OAAIuc,EAAOliB,QAC1C,aAAamF,IAAe+c,EAAOliB,QAAU+B,KAAKC,UAAU,CAACkgB,EAAOliB,SAAYkiB,EAAOliB,MACvF,aAAYkiB,EAAOzX,MACnB,mBAAkByX,EAAOrT,YACzBA,YAAaqT,EAAOrT,aAEnBqT,EAAOzX,WAEN,IA/MkB,WAC9B,MAAM+b,EAAqBtD,EADwB5hB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAKvD,cAHOklB,EAAmBvY,kBACnBuY,EAAmBxC,gBAEnBwC,CACT,CA2MUC,CAAwB,CAAEtD,kBAC1B3K,KAUN/X,IAAAA,cAACimB,EAAAA,QAAQvO,EAAAA,EAAAA,GAAA,CACPnE,UAAS,sBAAArO,OAA0B+e,EAAuC,GAAvB,mBAAyB,KAAA/e,OACzE2e,IAAclD,EAAgBuF,KAAQ,qCAAyC,GAAE,KAAAhhB,OAC/Emf,IAAaxD,EAAe1N,MAAS,sCAA0C,GAAE,KAAAjO,OAAIqO,GAC1F2N,QAASA,EACT,aAAY0C,EACZjO,SAAUA,EACVwO,SAAUW,EACVqB,WAAYnE,EACZ+B,cAAeA,EACf2B,OAAQnB,EACRD,WAAYA,EACZ8B,gBAAyC,iBAAhB7D,GAA4BA,QAAgBxhB,EAEnE8iB,YACAK,aACG7B,EAAkB,CACnB7U,aACArJ,QAASigB,EACT7B,gBAGAxK,IAEH5T,aAAO,EAAPA,EAAS3C,KAAIigB,GACZzhB,IAAAA,cAACqmB,EAAAA,aAAc,CACbhlB,IAAKyC,OAAOgiB,KAAK,GAAD5gB,OAAIuc,EAAOzX,MAAK,KAAA9E,OAAIuc,EAAOliB,QAC3C8E,GAAIP,OAAOgiB,KAAK,GAAD5gB,OAAIuc,EAAOzX,MAAK,KAAA9E,OAAIuc,EAAOliB,QAC1CA,MAAOkiB,EAAOzX,MACd,aAAatF,IAAe+c,EAAOliB,QAAU+B,KAAKC,UAAU,CAACkgB,EAAOliB,SAAYkiB,EAAOliB,MACvF,aAAYkiB,EAAOzX,MACnB,mBAAkByX,EAAOrT,kBAEvB,IAUF,EAYVuV,EAAOtjB,UAAY,CACjBujB,UAAWtjB,IAAAA,OACXoiB,cAAepiB,IAAAA,MAAgBmC,OAAOwR,OAAOuM,IAC7CjN,UAAWjT,IAAAA,OACXujB,UAAWvjB,IAAAA,MAAgBmC,OAAOwR,OAAO0M,IACzCtc,GAAI/D,IAAAA,OACJkN,WAAYlN,IAAAA,KACZwjB,iBAAkBxjB,IAAAA,KAClByjB,cAAezjB,IAAAA,KACf0jB,SAAU1jB,IAAAA,KACV2jB,aAAc3jB,IAAAA,KACd4jB,UAAW5jB,IAAAA,OACXqD,KAAMrD,IAAAA,OACN6jB,SAAU7jB,IAAAA,KACVqiB,cAAeriB,IAAAA,KACf6D,QAAS7D,IAAAA,UAAoB,CAC3BA,IAAAA,QAAkBA,IAAAA,QAClBA,IAAAA,QACEA,IAAAA,MAAgB,CACd8N,YAAa9N,IAAAA,IACb0hB,SAAU1hB,IAAAA,KACV0J,MAAO1J,IAAAA,IACPf,MAAOe,IAAAA,IAAAA,cAGXA,IAAAA,MAAgB,CACd8N,YAAa9N,IAAAA,IACb0hB,SAAU1hB,IAAAA,KACV0J,MAAO1J,IAAAA,IACPf,MAAOe,IAAAA,IAAAA,aAETA,IAAAA,SAEFiiB,YAAajiB,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,MACpD+jB,SAAU/jB,IAAAA,MAAgBmC,OAAOwR,OAAO4M,IACxCI,gBAAiB3gB,IAAAA,UAAoB,CACnCA,IAAAA,OACAA,IAAAA,OACAA,IAAAA,QAAkBA,IAAAA,UAAoB,CAACA,IAAAA,OAAkBA,IAAAA,YAE3DuiB,mBAAoBviB,IAAAA,MAAgBmC,OAAOwR,OAAOoM,IAClDiE,WAAYhkB,IAAAA,QACZ4gB,QAAS5gB,IAAAA,MAAgB,IAAImC,OAAOwR,OAAOgO,EAAAA,kBAW7C0B,EAAOpjB,aAAe,CACpBqjB,UAAW,gBACXlB,cAAelC,EAAc2C,QAC7B5P,UAAW,GACXsQ,UAAWlD,EAAgBuF,KAC3B7hB,GAAItE,EAAAA,QAAAA,aACJyN,YAAY,EACZsW,kBAAkB,EAClBC,eAAe,EACfC,UAAU,EACVC,cAAc,EACdC,UAAW,KACXvgB,KAAM,KACNwgB,SAAUpkB,EAAAA,QAAAA,KACV4iB,cAAe5iB,EAAAA,QAAAA,KACfoE,QAAS,GACToe,YAAa,gBACb8B,SAAUxD,EAAe3N,KACzB+N,gBAAiB,KACjB4B,mBAAoB,KACpByB,WAAY,KACZpD,QAASe,EAAAA,cAAAA,O,4uBC9jBX,MAAMqE,EAAmB,WAAwD,IAAvD,WAAEC,EAAU,OAAEC,EAAM,UAAEC,EAAS,MAAEC,EAAQ,CAAC,GAAG7lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzE,MAAM8lB,GAAiBD,aAAK,EAALA,EAAQE,EAAAA,GAAAA,iBAAsC7lB,EAC/D8lB,GAAkBH,aAAK,EAALA,EAAQE,EAAAA,GAAAA,yBAA8C7lB,EAC9E,MAAO,GAAPmE,OAAWqhB,EAAc,aAAiB,IAAErhB,OAAGshB,GAAMthB,OAAI2hB,GAAmB,IAAJ3hB,OAAQ2hB,IAAsB,IAAE3hB,OACrGyhB,GAAkB,IAAJzhB,OAAQyhB,IAAqB,IAAEzhB,OAC5CuhB,GAAa,IAAJvhB,OAAQuhB,IAAgB,GACvC,EASMK,EAA0B,eAAC,MAAEJ,EAAQ,CAAC,GAAG7lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,SAAM6lB,aAAK,EAALA,EAAQE,EAAAA,GAAAA,UAAoD,EAkBhHG,EAAwB,WAAwE,IAAvE,QAAEC,EAAU,GAAIC,SAAUC,EAAoB,CAAC,EAAC,UAAET,GAAW5lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC9F,MAAMsmB,EAAkB,GAClBlV,EAAS,WAAoE,IAAnE,OAAEuU,EAAQS,SAAUG,KAAqBC,GAAgBxmB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3E,IAAK2lB,EACH,OAEF,MAAM,cAAEc,EAAa,QAAEC,EAAO,OAAEC,KAAWC,GAA8BL,EACnEM,GAAmBL,aAAc,EAAdA,EAAgBrT,YAAaE,EAAAA,iBAAAA,KAChDyT,GAAcN,aAAc,EAAdA,EAAgBrT,aAAcE,EAAAA,iBAAAA,UAC5C0T,GACJH,aAAyB,EAAzBA,EAA2B/W,mBAC3B+W,aAAyB,EAAzBA,EAA2BhX,mBAC3B4W,aAAc,EAAdA,EAAgB3W,mBAChB2W,aAAc,EAAdA,EAAgB5W,iBACZoX,EAAqB,CACzB7T,UAAW0T,EACXrjB,GAAIiiB,EAAiB,CAAEC,WAAYoB,EAAanB,SAAQC,YAAWC,MAAOW,aAAc,EAAdA,EAAgBX,QAC1FjS,WAAYkT,EACZA,cACApB,WAAYoB,EACZnB,SACAnS,YAAa,EACbyT,gBAAiBhB,EAAwB,CAAEJ,MAAOW,aAAc,EAAdA,EAAgBX,SASpE,GANIiB,IACFE,EAAmBzT,OAAS2T,EAAAA,sBAAAA,MAC5BF,EAAmBvT,gBAAkB,MACrCuT,EAAmBxT,YAAc,GAG/BkT,EAAS,KAAAS,EAAAC,EACXd,EAAgB3c,KAAK,CACnByc,SAAU,IACJW,GAAe,CACjBrX,QAAS,CACP0C,OAAQ,GACRC,KAAM,GACNC,MAAO,GACPC,IAAK,QAGNqU,EACHS,gBAA2D,QAA5CF,EAAEP,aAAyB,EAAzBA,EAA2BS,uBAAe,IAAAF,EAAAA,GAAIP,SAAgC,QAAPQ,EAAzBR,EAA2BU,aAAK,IAAAF,OAAP,EAAzBA,EAAkCnnB,QAAS,EAC1GwmB,gBACAc,kBAAcrnB,EACdylB,YAAQzlB,EACRsnB,YAAa,IAAIC,IAAI,CAAC9B,IACtB+B,QAAS,CACP,IACKV,KACAR,IAGPZ,YACA+B,SAAUX,EAAmBxjB,KAGnC,KAAO,KAAAokB,EACL,MAAMC,EAAkCvB,SAA6C,QAA9BsB,EAAftB,EAAkBA,EAAgBrmB,OAAS,UAAE,IAAA2nB,OAA9B,EAAfA,EAA+CxB,SAEnFyB,IACFA,EAAgCL,YAAYhe,IAAImc,GAChDkC,EAAgCH,QAAQ/d,KAAK,IACxCqd,KACAR,IAGT,CAEA,GAAIG,EAAQ,KAAAmB,EACV,MAAMC,EAA2BzB,SAA6C,QAA9BwB,EAAfxB,EAAkBA,EAAgBrmB,OAAS,UAAE,IAAA6nB,OAA9B,EAAfA,EAA+C1B,SAChF2B,EAAyBP,YAAclnB,MAAM0nB,KAAKD,aAAwB,EAAxBA,EAA0BP,aAAazjB,OAErFgkB,EAAyBtB,gBAC3BsB,EAAyBJ,SAAW,GAAHtjB,OAAM0jB,EAAyBP,YAAYS,KAAK,KAAI,KAAA5jB,OACnF0jB,EAAyBnC,WAG/B,CACF,EAkCA,OAhCAO,EAAQjkB,SAAQ/D,IAAyF,IAAtFgoB,QAAS+B,EAAgB9B,SAAU+B,KAA2BC,GAAmBjqB,EAC9FmC,MAAM6C,QAAQ+kB,GAChBA,EAAehmB,SAAQ,CAACmmB,EAAcnU,KACpC9C,EAAO,IACFgX,KACAC,EACHjC,SAAU,IACLC,KACA+B,KACAD,KACAE,EACH3B,QAAmB,IAAVxS,EACTyS,OAAQuB,EAAejoB,OAAS,IAAMiU,EACtCuS,cAAeyB,EAAejoB,OAAS,IAEzC,IAKNmR,EAAO,IACFgX,EACHhC,SAAU,IACLC,KACA+B,EACH1B,SAAS,EACTC,QAAQ,EACRF,eAAe,IAEjB,IAGG,CACLH,kBAEJ,EAQMgC,EAA8Bte,IAClC,OAAQA,GACN,KAAKC,EAAAA,GAAAA,MACH,OAAO,EACT,KAAKA,EAAAA,GAAAA,OACL,KAAKA,EAAAA,GAAAA,QACH,OAAO,EACT,KAAKA,EAAAA,GAAAA,UACL,QACE,OAAO,EACX,EAWIse,EAAiB,WAAgC,IAA/B,KAAE3jB,EAAI,YAAEoF,GAAahK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/C,MAAMwoB,EAAazhB,IAAAA,IAAWnC,GAE9B,OAAQoF,GACN,KAAKC,EAAAA,GAAAA,UACH,MAAO,GAAP5F,OAAUmkB,EAAWxf,OAAOV,EAAAA,GAAAA,wBAAAA,WAA8C,OAAAjE,OAAMmkB,EAC7Ehf,IAAI,EAAG,WACPR,OAAOV,EAAAA,GAAAA,wBAAAA,YAEZ,KAAK2B,EAAAA,GAAAA,QACH,OAAOue,EAAWxf,OAAOV,EAAAA,GAAAA,sBAAAA,UAE3B,KAAK2B,EAAAA,GAAAA,OACH,MAAO,GAAP5F,OAAUmkB,EAAWxf,OAAOV,EAAAA,GAAAA,oBAAAA,OAAsC,OAAAjE,OAAMmkB,EACrEhf,IAAI,EAAG,QACPR,OAAOV,EAAAA,GAAAA,oBAAAA,YAEZ,KAAK2B,EAAAA,GAAAA,MACL,QACE,OAAOue,EAAWxf,OAAOV,EAAAA,GAAAA,oBAAAA,MAE/B,EAaM0H,EAAkB,WAA8D,IAA7D,SAAEyY,EAAQ,KAAE7jB,EAAI,YAAEoF,EAAW,KAAEwQ,EAAI,aAAEkO,GAAc1oB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC9E,IAAK4E,IAASoF,EACZ,OAGF,GAAIye,EACF,OAAOA,EAAS,CAAEA,WAAU7jB,OAAMoF,cAAawQ,OAAMkO,iBAGvD,MAAMF,EAAazhB,IAAAA,IAAWnC,GACxB+jB,EACK,IAATnO,GAAcxV,OAAO0D,SAAS8f,EAAW7f,OAAQ,MAAQ3D,OAAO0D,SAAS3B,IAAAA,IAAW2hB,GAAc/f,OAAQ,IAC5G,IAAIigB,EAEJ,OAAQ5e,GACN,KAAKC,EAAAA,GAAAA,UACH2e,EAAgBD,EACZH,EAAWxf,OAAOV,EAAAA,GAAAA,wBAAAA,WAClBkgB,EAAWxf,OAAOV,EAAAA,GAAAA,wBAAAA,OAEtBsgB,EAAgBA,EAAc/d,QAAQ,KAAM,MAC5C,MACF,KAAKZ,EAAAA,GAAAA,QACH2e,EAAgBD,EACZH,EAAWxf,OAAOV,EAAAA,GAAAA,sBAAAA,WAClBkgB,EAAWxf,OAAOV,EAAAA,GAAAA,sBAAAA,OAEtBsgB,EAAgBA,EAAc/d,QAAQ,KAAM,MAC5C,MACF,KAAKZ,EAAAA,GAAAA,OACL,KAAKA,EAAAA,GAAAA,MACL,QACE2e,EAAgBD,EACZH,EAAWxf,OAAOV,EAAAA,GAAAA,oBAAAA,WAClBkgB,EAAWxf,OAAOV,EAAAA,GAAAA,oBAAAA,OAEtBsgB,EAAgBA,EAAc/d,QAAQ,aAAc,QAIxD,OAAO+d,CACT,EAUM3Y,EAAkB,WAA6B,IAAA4Y,EAAAC,EAAA,IAA5B,SAAEL,EAAQ,KAAEjO,GAAMxa,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7C,OAAIyoB,EACKA,EAAS,CAAEjO,SAIE,QADtBqO,EAAO3pB,EAAAA,QAAAA,cACUsb,UAAK,IAAAqO,GAMlB,QANkBC,EADfD,EAEH7f,OAAO,CACP+f,SAAS,EACTC,SAAU,EACVC,cAAc,EACdC,cAAc,WACd,IAAAJ,OANkB,EADfA,EAQHK,aACN,EAUMC,EAAgC,eAAAC,EAAA,IAAC,SAAEjD,EAAQ,YAAEpc,GAAahK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAAM,IACtEomB,EACHrW,oBAAkD,QAA/BsZ,EAAEjD,aAAQ,EAARA,EAAUrW,2BAAmB,IAAAsZ,EAAAA,EAAIf,EAA4Bte,GAClFgG,gBAAiBpR,IAAA,IAAC,KAAEic,EAAI,aAAEF,EAAY,KAAEH,GAAM5b,EAAA,OAC5CoR,EAAgB,CACdyY,SAAUrC,aAAQ,EAARA,EAAUpW,gBACpBwK,OACA5V,KAAMiW,EAAKjW,KACX8jB,aAAc/N,EAAa/V,KAC3BoF,eACA,EACJiG,gBAAiB9L,IAAA,IAAC,KAAEqW,GAAMrW,EAAA,OACxB8L,EAAgB,CACdwY,SAAUrC,aAAQ,EAARA,EAAUnW,gBACpBuK,QACA,EACL,EAUK8O,EAAkCpqB,EAAAA,QAAAA,MACtC,WAAsC,IAArC,KAAEH,EAAI,UAAE8K,GAAY,GAAO7J,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC9B,MACE4E,KAAM2kB,EACNrX,QAASsX,EACTzW,EAAG0W,GACD1qB,EAAKkiB,MAAK7c,IAAA,IAAC,cAAEslB,GAAetlB,EAAA,OAAuB,IAAlBslB,CAAsB,KAAK,CAAC,GACzD9kB,KAAM+kB,EAAUzX,QAAS0X,EAAa7W,EAAG8W,GAAc9qB,EAAKA,EAAKkB,OAAS,IAAM,CAAC,EAMzF,MAAO,CACL2E,KALWiF,EAAY0f,EAAcI,EAMrCzX,QALcrI,EAAY2f,EAAiBI,EAM3ClrB,MALYmL,EAAY4f,EAAeI,EAO3C,GACA,CAAE9pB,WAAY,IAYV+pB,EAAwB5qB,EAAAA,QAAAA,MAC5B,WAAyC,IAAxC,QAAEma,EAAO,UAAExP,GAAY,GAAO7J,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjC,MAAM,KAAEjB,EAAO,GAAE,KAAEgrB,EAAO,CAAC,GAAM1Q,GAAW,CAAC,GAE3C2Q,iBAAkBC,EAClBC,oBAAqBC,EACrBC,kBAAmBC,GACjBN,GAGFnlB,KAAM0lB,EACNpY,QAASqY,EACT7rB,MAAO8rB,GACLlB,EAAgC,CAAEvqB,OAAM8K,cAE5C,MAAO,CACLygB,YACAC,eACAC,aACAP,cACAE,iBACAE,eAEJ,GACA,CAAEtqB,WAAY,IAUV0qB,EAA0BvrB,EAAAA,QAAAA,MAC9B,eAAAwrB,EAAAC,EAAA,IAAC,KAAE5rB,EAAO,IAAIiB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAAM,CACvB4qB,aAAuG,QAA3FF,EAAE3rB,EAAKkiB,MAAK4J,IAAA,IAAC,UAAE1X,GAAW0X,EAAA,OAAK,IAAIC,OAAOzX,EAAAA,iBAAAA,UAA4B,KAAKvO,KAAKqO,EAAU,WAAC,IAAAuX,OAAA,EAAzFA,EAA2F3rB,KACzGgsB,UAAkF,QAAzEJ,EAAE5rB,EAAKkiB,MAAK+J,IAAA,IAAC,GAAExnB,GAAIwnB,EAAA,OAAK,IAAIF,OAAOG,EAAAA,GAAAA,QAAwB,KAAKnmB,KAAKtB,EAAG,WAAC,IAAAmnB,OAAA,EAAvEA,EAAyE5rB,KACrF,GACD,CAAEgB,WAAY,IAYVmrB,EAAuBhsB,EAAAA,QAAAA,MAC3B,WAAmE,IAAlE,aAAE0rB,EAAe,GAAE,UAAEG,EAAY,GAAE,UAAElhB,GAAY,GAAO7J,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3D,MAAQkS,QAASiZ,EAAiBzsB,MAAO0sB,GAAkB9B,EAAgC,CACzFvqB,KAAM6rB,EACN/gB,eAEMqI,QAASmZ,EAAc3sB,MAAO4sB,GAAehC,EAAgC,CACnFvqB,KAAMgsB,EACNlhB,cAEI0hB,EAAW,CACfC,yBAA0BL,GAAmBE,EAC7CI,kBAAmB,MAWrB,OARIF,EAASC,2BACXD,EAASE,kBAAoBzmB,OAAO0D,SAAS0iB,EAAe,IAAMpmB,OAAO0D,SAAS4iB,EAAY,KAAO,EAE/FC,EAASE,mBAAqB,IAClCF,EAASE,kBAAoB,IAI1BF,CACT,GACA,CAAExrB,WAAY,IAYV2rB,EAAsBxsB,EAAAA,QAAAA,MAC1B,WAAmE,IAAlE,aAAE0rB,EAAe,GAAE,UAAEG,EAAY,GAAE,UAAElhB,GAAY,GAAO7J,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3D,MAAQkS,QAASiZ,EAAiBzsB,MAAO0sB,GAAkB9B,EAAgC,CACzFvqB,KAAM6rB,EACN/gB,eAEMqI,QAASmZ,EAAc3sB,MAAO4sB,GAAehC,EAAgC,CACnFvqB,KAAMgsB,EACNlhB,cAEI0hB,EAAW,CACfI,wBAAyBR,GAAmBE,EAC5CO,iBAAkB,MAWpB,OARIL,EAASI,0BACXJ,EAASK,iBAAmB5mB,OAAO0D,SAAS4iB,EAAY,IAAMtmB,OAAO0D,SAAS0iB,EAAe,KAAO,EAE9FG,EAASK,kBAAoB,IACjCL,EAASK,iBAAmB,IAIzBL,CACT,GACA,CAAExrB,WAAY,IAGV8rB,EAAmB,CACvBpG,mBACAS,wBACAkD,gCACAnD,0BACAqC,8BACAwB,wBACAR,kCACAmB,0BACAS,uBACAQ,sBACAnD,iBACAvY,kBACAC,kB,8YCxdF,MAAM5Q,EAAOlB,IAAiD,IAAhD,SAAEuO,EAAQ,YAAEof,EAAW,SAAEC,EAAQ,OAAEptB,GAAQR,EACvD,MAAO6tB,EAAaC,IAAkB5b,EAAAA,EAAAA,WAAS,GA4C/C,OAvCApR,EAAAA,EAAAA,IAASyL,UACP,UACQwhB,EAAAA,GAAAA,IACCC,EAAAA,GACJC,IAAIC,EAAAA,IACJC,KAAK,CACJC,QAAS,CACPR,YAEFD,cACAU,SAAKtsB,EACLusB,OAAQvtB,EAAAA,EAAAA,UACRwtB,GAAI,CAAC,WACLC,UAAW,UACXC,MAAO,CACLC,aAAa,IAGrB,CAAE,MAAOrgB,GACP,CAGFyf,GAAe,EAAK,KAMtBnb,EAAAA,EAAAA,YAAU,KACR,GAAIkb,GAAertB,EACjB,IACEutB,EAAAA,GAAAA,eAAuBvtB,EACzB,CAAE,MAAO6N,GACP,CAEJ,GACC,CAACwf,EAAartB,IAGTqtB,GAAetf,GAAavN,IAAAA,cAACA,IAAAA,SAAc,KAAG,EAQxDE,EAAKG,UAAY,CACfkN,SAAUjN,IAAAA,KAAAA,WACVqsB,YAAarsB,IAAAA,OACbssB,SAAUtsB,IAAAA,OACVd,OAAQc,IAAAA,QAQVJ,EAAKK,aAAe,CAClBosB,YAAarpB,QACbspB,SAAUtpB,2CACV9D,OAAQ,K,8aChFV,MAAMmuB,EAAgB,uBAWhBC,EAAgBA,CAACvsB,EAAK9B,EAAOsuB,KACjC,MAAMC,EAAc3sB,MAAM6C,QAAQ3C,IAAQ,IAAJ6D,OAAQ7D,EAAG,MAAQA,EACnD0sB,EACc,iBAAVxuB,GAAsBA,GAC7B4B,MAAM6C,QAAQzE,IAAU,IAAJ2F,OAAQ3F,EAAK,MACjCkD,OAAO2U,KAAK7X,GAAS,IAAIuB,QAAUQ,KAAKC,UAAUhC,IACnD,GACIyuB,EAAqBH,GAAc,GAAJ3oB,OAAO2oB,IAAiB,GAE7D,MAAO,KAAP3oB,OAAY4oB,GAAU5oB,OAAI6oB,GAAgB,KAAJ7oB,OAAS6oB,IAAmB,IAAE7oB,OACjE8oB,GAAqB,KAAJ9oB,OAAS8oB,IAAwB,GAAE,MAYnDC,EAAe,SAAC1uB,GAAsD,IAA/C,kBAAE2uB,EAAoBP,GAAe9sB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpE,MAAqB,iBAAVtB,GAAsBA,IAAU2uB,GAAqB,IAAIvoB,KAAKpG,GAChEA,EAAM4uB,MAAM,KAEd5uB,CACT,EAYM6uB,EAAe,SACnBC,EACA9jB,GAEG,IADH,kBAAE2jB,EAAoBP,EAAeM,aAAcK,EAAoBL,GAAcptB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAErF0tB,EAAsBF,EACtBG,EAAiBjkB,EAMrB,GAJIikB,IACFA,EAAiBF,EAAkBE,IAGjCrtB,MAAM6C,QAAQwqB,GAAiB,CACjC,MAAMC,EAAcD,EACjBhtB,KAAIjC,GAAUA,IAAU2uB,EAAqB,IAAQI,EAAkB/uB,KACvEmvB,OACAzc,QAAO1S,GAA0B,iBAAVA,GAAsBA,EAAMuB,OAAS,IAE/D,IAAI2tB,aAAW,EAAXA,EAAa3tB,QAAS,EAAG,CAC3B,MAAM6tB,EAAcF,EAAYG,MAE5BztB,MAAM6C,QAAQuqB,GAChBA,EAAoB,GAAK,GAAHrpB,OAAMqpB,EAAoB,GAAE,KAAArpB,OAAIupB,EAAY3F,KAAK,MAEvEyF,EAAsB,GAAHrpB,OAAMqpB,EAAmB,KAAArpB,OAAIupB,EAAY3F,KAAK,MAGnE0F,EAAiBG,CACnB,MACEH,EAAiBC,EAAY3F,KAAK,IAEtC,MAAW0F,IAAmBN,IAC5BM,EAAiB,KAGnB,MAAO,CACLjkB,QAASikB,EACTH,aAAcE,EAElB,EAQMM,EAAoBR,IACxB,IAAIE,EAAsBF,EAM1B,OAJIltB,MAAM6C,QAAQuqB,KAChBA,EAAsBA,EAAoBtc,QAAO1S,GAA0B,iBAAVA,GAAsBA,EAAMuB,OAAS,KAGjGytB,CAAmB,EA+DtBjkB,EAAY,SAChB+jB,GAUG,IATHpa,EAAMpT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KACTgtB,EAAUhtB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAERgsB,QAAS+B,EAAe/B,EAAAA,GAAO,QAC/BgC,EAAUhvB,EAAAA,EAAAA,UACV6tB,cAAeoB,EAAqBpB,EACpCQ,aAAca,EAAoBb,EAClCS,kBAAmBK,EAAyBL,GAC7ChuB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEL,MAAMsuB,EAAgBlb,GAAU,CAAC,EAC3Bmb,EAA0BF,EAAuBb,GACvD,IACIgB,EADAd,EAAsBa,EAG1B,GAAID,SAAAA,EAAe5kB,QAAS,CAC1B,MAAQA,QAAS+kB,EAAejB,aAAckB,GAA4BN,EACxEV,EACAY,EAAc5kB,SAEhBgkB,EAAsBgB,EACtBJ,EAAc5kB,QAAU+kB,CAC1B,CAEA,OAAIP,EACKC,EAAmBT,EAAqBY,EAAetB,IAG5DsB,SAAAA,EAAeK,SACjBH,EAnFuBrwB,KAA+B,IAA9B,cAAEywB,EAAa,OAAED,GAAQxwB,EACnD,GAAsB,kBAAXwwB,GAAwBC,EAAe,CAChD,MAAMC,EAAmBvuB,MAAM6C,QAAQyrB,IAAkBA,EAAc,IAAOA,EAE9E,OAAO,SAAwBhwB,GAAe,IAAd,SAAE8N,GAAU9N,EAC1C,OACEO,IAAAA,cAAA,QAAMqB,IAAKquB,EAAiBnc,UAAU,+BAA+B,YAAWmc,GAC7EniB,EAGP,CACF,CAEA,MAAsB,iBAAXiiB,GAAuBA,EAAO1uB,OAAS,EAEzC,SAA0BkE,GAAe,IAAd,SAAEuI,GAAUvI,EAC5C,OACEhF,IAAAA,cAAA,QAAMqB,IAAKmuB,EAAQjc,UAAU,+BAA+B,YAAWic,GACpEjiB,EAGP,EAGEvN,IAAAA,eAAqBwvB,GAEhB,SAAwBvqB,GAAe,IAAd,SAAEsI,GAAUtI,EAC1C,OAAOjF,IAAAA,aAAmBwvB,EAAQ,CAAC,EAAGjiB,EACxC,EAGK,IAAI,EAoDKoiB,CAAmB,CAAEF,cAAeL,EAAyBI,OAAQL,EAAcK,UAG/F3B,GAAciB,EAAac,MACzBP,EAEArvB,IAAAA,cAACqvB,EAAW,KACVrvB,IAAAA,cAAC6vB,EAAAA,GAAK,CAACC,QAASvB,EAAqBta,OAAQkb,EAAetB,WAAYA,KAKvE7tB,IAAAA,cAAC6vB,EAAAA,GAAK,CAACC,QAASvB,EAAqBta,OAAQkb,EAAetB,WAAYA,IAG7EiB,EAAac,MACXP,EACKrvB,IAAAA,cAACqvB,EAAW,KAAEP,EAAarhB,EAAE8gB,EAAqBY,IAGpDL,EAAarhB,EAAE8gB,EAAqBY,GAGtC,MAAPjqB,OAAaqpB,EAAmB,MAClC,EAWMwB,EAAqB,SACzB9X,GAEG,IADD8U,QAAS+B,EAAe/B,EAAAA,GAASa,cAAeoB,EAAqBpB,GAAe/sB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAE1F,MAAMmvB,EAAkBtE,IAAA,OAAM3T,GAAO2T,EAAA,OACnC1rB,IAAAA,cAACiY,GAASP,EAAAA,EAAAA,GAAA,GACJK,EAAK,CACTtK,EAAIqhB,EAAac,OAAStlB,GAAc0kB,EACxCiB,KAAOnB,EAAac,OAASd,GAAiB/uB,EAAAA,EAAAA,OAC9C,EAIJ,OADAiwB,EAAgBE,YAAc,kBACvBF,CACT,EAEMG,EAAc,CAClBxC,gBACAC,gBACAQ,eACAS,oBACAZ,eACA3jB,YACAylB,qB,oPCvPF,MAAMK,EAASpxB,IAA4C,IAA3C,cAAEqxB,EAAa,WAAEC,EAAU,QAAEpP,GAASliB,EACpD,OAAQkiB,GACN,IAAK,QACL,IAAK,QACH,OACElhB,IAAAA,cAAA,OAAKuT,UAAU,mEACbvT,IAAAA,cAACuwB,EAAAA,EAAQ,CAAChU,KAAMiU,EAAAA,EAAAA,KAChBxwB,IAAAA,cAACuwB,EAAAA,EAAQ,CAAChU,KAAMiU,EAAAA,EAAAA,MAGtB,IAAK,YACH,OACExwB,IAAAA,cAAA,OAAKuT,UAAU,gCACbvT,IAAAA,cAACuwB,EAAAA,EAAQ,CAAChU,KAAMiU,EAAAA,EAAAA,KAChBxwB,IAAAA,cAACuwB,EAAAA,EAAQ,CAAChU,KAAMiU,EAAAA,EAAAA,KAChBxwB,IAAAA,cAACuwB,EAAAA,EAAQ,CAAChU,KAAMiU,EAAAA,EAAAA,KAChBxwB,IAAAA,cAACuwB,EAAAA,EAAQ,CAAChU,KAAMiU,EAAAA,EAAAA,MAGtB,IAAK,WACH,OAAOxwB,IAAAA,cAACuwB,EAAAA,EAAaF,GACvB,IAAK,QACH,OAAOrwB,IAAAA,cAACywB,EAAAA,cAAkBH,GAC5B,IAAK,QACH,OACEtwB,IAAAA,cAAC0wB,EAAAA,WAAU,KACT1wB,IAAAA,cAAC2wB,EAAAA,WAAU,KACT3wB,IAAAA,cAACuwB,EAAAA,EAAQ,CAAChU,KAAK,SAKvB,QACE,OAAOvc,IAAAA,cAAC4wB,EAAAA,EAAO,MACnB,EAQFR,EAAO/vB,UAAY,CACjBgwB,cAAe/vB,IAAAA,MAAgB,CAC7Bic,KAAMjc,IAAAA,MAAgB,IAAImC,OAAOwR,OAAOuc,EAAAA,OAE1CF,WAAYhwB,IAAAA,MAAgB,CAC1BuwB,QAASvwB,IAAAA,KACTiT,UAAWjT,IAAAA,OACXwwB,SAAUxwB,IAAAA,OACVywB,SAAUzwB,IAAAA,MACV0wB,SAAU1wB,IAAAA,OACV4gB,QAAS5gB,IAAAA,MAAgB,IAAImC,OAAOwR,OAAOgd,EAAAA,kBAE7C/P,QAAS5gB,IAAAA,MAAgB,CAAC,QAAS,QAAS,YAAa,WAAY,UAAW,QAAS,WAQ3F8vB,EAAO7vB,aAAe,CACpB8vB,cAAe,CACb9T,KAAMiU,EAAAA,EAAAA,IAERF,WAAY,CAAC,EACbpP,QAAS,U,gMChEX,MAAMhT,EAAclP,IAAA,IAAC,SAAEuO,EAAQ,KAAEe,EAAI,QAAE5K,EAAO,UAAE2K,EAAS,MAAErE,GAAOhL,EAAA,OAChEgB,IAAAA,cAAC0wB,EAAAA,WAAU,KACT1wB,IAAAA,cAAC2wB,EAAAA,WAAU,KAAEtiB,GAAatO,EAAAA,QAAAA,iBAC1BC,IAAAA,cAACkxB,EAAAA,YAAW,KACT3jB,QAAAA,EACCvN,IAAAA,cAACmxB,EAAAA,WAAU,CAACjQ,QAASkQ,EAAAA,kBAAAA,KAAwB7d,UAAU,UACpDjF,GAAQtO,IAAAA,cAACqxB,EAAAA,eAAc,CAAC/iB,KAAMA,IAC9BtE,GACChK,IAAAA,cAACsxB,EAAAA,MAAK,CAACC,aAAa,KAAKhV,KAAK,MAC3BvS,GAGJtG,GAAW1D,IAAAA,cAACwxB,EAAAA,eAAc,KAAE9tB,KAIxB,EAQfwK,EAAY7N,UAAY,CACtBkN,SAAUjN,IAAAA,KACVgO,KAAMhO,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OAC3CoD,QAASpD,IAAAA,OACT+N,UAAW/N,IAAAA,OACX0J,MAAO1J,IAAAA,QAQT4N,EAAY3N,aAAe,CACzBgN,SAAU,KACVe,KAAM,KACN5K,QAAS,KACT2K,UAAW,KACXrE,MAAO,K,iRCxBT,MAAM0E,EAAY1P,IAMZ,IANa,EACjByO,EAAC,mBACDgkB,EACAvyB,YAAaC,EACboQ,qBAAsBC,EACtBS,WAAYyhB,GACb1yB,EACC,MAAMM,EAAWH,KACX,YAAE4O,GAAgB2jB,KAClB,MAAEvkB,EAAK,UAAEuC,EAAS,QAAE9B,GAAY4B,GAA0B/P,IAAA,IAAC,KAAEE,GAAMF,EAAA,OAAKE,aAAI,EAAJA,EAAMgyB,KAAK,IAQnFC,EAAgBA,IAAMH,IAAqBnyB,GAwFjD,OACEU,IAAAA,cAAC0wB,EAAAA,WAAU,KACT1wB,IAAAA,cAAC6xB,EAAAA,KAAI,CAAC,YAAU,aACd7xB,IAAAA,cAAC8xB,EAAAA,KAAI,KACH9xB,IAAAA,cAAC8xB,EAAAA,KAAI,CAACC,KAAM,CAAE5O,QAAS,WACrBnjB,IAAAA,cAACgyB,EAAAA,SAAQ,KACPhyB,IAAAA,cAACiyB,EAAAA,UAAS,CAAC5wB,IAAI,iBACbrB,IAAAA,cAACsxB,EAAAA,MAAK,CAACC,aAAa,KAAKhV,KAAK,OAC3B9O,EAAE,4BAA6B,CAAEH,QAASvN,EAAAA,QAAAA,oBAG/CC,IAAAA,cAACkyB,EAAAA,SAAQ,CAAC7wB,IAAI,gBACXoM,EAAE,kCAAmC,CAAEH,QAASvN,EAAAA,QAAAA,mBAGnDC,IAAAA,cAACiyB,EAAAA,UAAS,CAAC5wB,IAAI,iBACbrB,IAAAA,cAACsxB,EAAAA,MAAK,CAACC,aAAa,KAAKhV,KAAK,MAC3B9O,EAAE,kCAGPzN,IAAAA,cAACkyB,EAAAA,SAAQ,CAAC7wB,IAAI,gBAAgBoM,EAAE,uCAEhCzN,IAAAA,cAACiyB,EAAAA,UAAS,CAAC5wB,IAAI,iBACbrB,IAAAA,cAACsxB,EAAAA,MAAK,CAACC,aAAa,KAAKhV,KAAK,MAC3B9O,EAAE,qCAGPzN,IAAAA,cAACkyB,EAAAA,SAAQ,CAAC7wB,IAAI,gBAAgBoM,EAAE,0CAEhCzN,IAAAA,cAACiyB,EAAAA,UAAS,CAAC5wB,IAAI,iBACbrB,IAAAA,cAACsxB,EAAAA,MAAK,CAACC,aAAa,KAAKhV,KAAK,MAC3B9O,EAAE,qCAGPzN,IAAAA,cAACkyB,EAAAA,SAAQ,CAAC7wB,IAAI,gBAAgBoM,EAAE,0CAEhCzN,IAAAA,cAACmyB,EAAAA,WAAU,KArHCC,MACtB,MAAMC,EAAgC,MAAhBtkB,EAEtB,OAAIH,EAEA5N,IAAAA,cAACsyB,EAAAA,KAAI,KACHtyB,IAAAA,cAACuyB,EAAAA,YAAW,KACVvyB,IAAAA,cAACwyB,EAAAA,OAAM,CAACtR,QAAQ,UAAU1T,YAAU,GAClCxN,IAAAA,cAAC4wB,EAAAA,QAAO,CAACrU,KAAK,OAAO,IAAE9O,EAAE,iCAAkC,CAAEH,QAASvN,EAAAA,QAAAA,qBAO5EoN,EAEAnN,IAAAA,cAAA,SACGyN,EAAE,yCAA0C,CAAEH,QAASvN,EAAAA,QAAAA,iBAA2B,CACjFC,IAAAA,cAACwyB,EAAAA,OAAM,CAACxO,UAAQ,EAAChM,UAAU,IAAIkJ,QAAQ,OAAOlB,OAAO,SAASxT,KAAMzM,EAAAA,QAAAA,wBAMxEsyB,GAAiB3iB,EAEjB1P,IAAAA,cAACsyB,EAAAA,KAAI,KACHtyB,IAAAA,cAACuyB,EAAAA,YAAW,KACVvyB,IAAAA,cAACwyB,EAAAA,OAAM,CAAC,YAAU,4BAA4BtR,QAAQ,UAAU1T,YAAU,GACvEC,EAAE,iCAAkC,CAAEH,QAASvN,EAAAA,QAAAA,oBAGnD2P,GAAa1P,IAAAA,cAAA,SAAIyN,EAAE,6CAMxBzN,IAAAA,cAACsyB,EAAAA,KAAI,KACHtyB,IAAAA,cAACuyB,EAAAA,YAAW,KACVvyB,IAAAA,cAACwyB,EAAAA,OAAM,CAAC,YAAU,oBAAoBtR,QAAQ,UAAU+B,QAAS2O,GAC9DnkB,EAAE,iCAAkC,CAAEH,QAASvN,EAAAA,QAAAA,oBAG/C,EAwEcqyB,MAGjBpyB,IAAAA,cAAC8xB,EAAAA,KAAI,CAACC,KAAM,CAAE5O,QAAS,UAAYsP,UAAW,CAAEtP,QAAS,oBACvDnjB,IAAAA,cAACgyB,EAAAA,SAAQ,KACPhyB,IAAAA,cAACkyB,EAAAA,SAAQ,KAnEnBlyB,IAAAA,cAAC6xB,EAAAA,KAAI,CAACte,UAAU,wBACdvT,IAAAA,cAAC0yB,EAAAA,WAAU,KACT1yB,IAAAA,cAAC2yB,EAAAA,eAAc,KACb3yB,IAAAA,cAAC4yB,EAAAA,MAAK,CACJC,OAAM,GAAA3tB,OAAK4tB,EAAU,YAAA5tB,OAAW6tB,EAAU,SAC1CC,IAAKF,EACLG,IAAKxlB,EAAE,qCACP,iBACA8F,UAAU,4BAIhBvT,IAAAA,cAACiyB,EAAAA,UAAS,KACRjyB,IAAAA,cAACsxB,EAAAA,MAAK,CAACC,aAAa,KAAKhV,KAAK,OAC3B9O,EAAE,+BAGPzN,IAAAA,cAACkyB,EAAAA,SAAQ,KAAEzkB,EAAE,oCACbzN,IAAAA,cAACmyB,EAAAA,WAAU,KACTnyB,IAAAA,cAACwyB,EAAAA,OAAM,CAAC,YAAU,kBAAkBtR,QAAQ,YAAY3N,UAAU,+BAC/D9F,EAAE,sCAoDI,EASjBiB,EAAUrO,UAAY,CACpBoN,EAAGnN,IAAAA,KACHmxB,mBAAoBnxB,IAAAA,KACpBpB,YAAaoB,IAAAA,KACbiP,qBAAsBjP,IAAAA,KACtB2P,WAAY3P,IAAAA,MAQdoO,EAAUnO,aAAe,CACvBkN,EAAGnD,EAAAA,UACHmnB,mBAAoBjxB,EAAAA,GAAAA,KAAAA,mBACpBtB,YAAauB,EAAAA,GAAAA,WAAAA,YACb8O,qBAAsB9O,EAAAA,GAAAA,WAAAA,qBACtBwP,WAAUA,EAAAA,W,oLC7MZ,MAAMijB,EAAcl0B,IAAA,IAAC,SAAEuO,EAAQ,UAAEgG,GAAWvU,EAAA,OAC1CgB,IAAAA,cAAC8xB,EAAAA,KAAI,CACHqB,WAAY,CAAEC,GAAI,qBAClBC,WAAY,CAAED,GAAI,kBAClB7f,UAAS,0BAAArO,OAA4BqO,IAEpCvT,IAAAA,SAAAA,QAAuBuN,GACrB0E,QAAOqhB,GAAStzB,IAAAA,eAAqBszB,KACrC9xB,KAAI8xB,GACHtzB,IAAAA,cAACgyB,EAAAA,SAAQ,CACP3wB,IAAMiyB,EAAMjyB,KAAO,eAAJ6D,OAAmBouB,EAAMjyB,MAAUtB,EAAAA,QAAAA,aAClDwzB,KAAM,CAAEH,GAAI,QACZ7f,UAAU,iCAET+f,KAGF,EAQTJ,EAAY7yB,UAAY,CACtBkN,SAAUjN,IAAAA,KACViT,UAAWjT,IAAAA,QAQb4yB,EAAY3yB,aAAe,CACzBgN,SAAU,GACVgG,UAAW,G,gOCjCb,MAAMod,EAAa3xB,IAAA,IAAC,SAAEuO,EAAQ,aAAEimB,EAAY,EAAE/lB,GAAGzO,EAAA,OAC/CgB,IAAAA,cAACyzB,EAAAA,EAAa,KACZzzB,IAAAA,cAAC8xB,EAAAA,KAAI,CAAC4B,eAAgB,CAAEN,GAAI,+BAC1BpzB,IAAAA,cAACgyB,EAAAA,SAAQ,KACPhyB,IAAAA,cAAC2zB,EAAAA,EAAe,CAAC3pB,MAAOuD,EAAUgG,UAAU,iBAG/CigB,GACCxzB,IAAAA,cAAA,SACGyN,EAAE,0BAA2B,CAAEH,QAASvN,EAAAA,QAAAA,gBAAyBwK,QAASipB,GAAgB,CACzFxzB,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR5S,KAAMtO,IAAAA,cAAC4zB,EAAAA,oBAAmB,MAC1BC,aAAa,QACb7T,OAAO,SACPxT,KAAMzM,EAAAA,QAAAA,wBAKA,EAQlB4wB,EAAWtwB,UAAY,CACrBkN,SAAUjN,IAAAA,KAAAA,WACVkzB,aAAclzB,IAAAA,OACdmN,EAAGnN,IAAAA,MAQLqwB,EAAWpwB,aAAe,CACxBizB,aAAc,KACd/lB,EAAGnD,EAAAA,U,gcChCL,MAAMomB,EAAa1xB,IAAA,IAAC,SAAEuO,EAAQ,UAAEgG,GAAWvU,EAAA,OACzCgB,IAAAA,cAACA,IAAAA,SAAc,KACZA,IAAAA,SAAAA,QAAuBuN,GAAU0E,QAAOqhB,GAAStzB,IAAAA,eAAqBszB,IAAUA,EAAMlnB,OAASukB,EAAAA,aAC/F3wB,IAAAA,SAAAA,QAAuBuN,GAAU0E,QAAOqhB,GAAStzB,IAAAA,eAAqBszB,IAAUA,EAAMlnB,OAAS0nB,EAAAA,eAC/F9zB,IAAAA,SAAAA,QAAuBuN,GAAU0E,QAAOqhB,GAAStzB,IAAAA,eAAqBszB,IAAUA,EAAMlnB,OAAS2nB,EAAAA,cAChG/zB,IAAAA,cAACg0B,EAAAA,YAAI,CAACzjB,QAAS,CAAE4S,QAAS,aAAe5P,UAAS,aAAArO,OAAeqO,IAC9DvT,IAAAA,SAAAA,QAAuBuN,GAAU0E,QAChCqhB,GAASA,EAAMlnB,OAASukB,EAAAA,YAAc2C,EAAMlnB,OAAS0nB,EAAAA,cAAgBR,EAAMlnB,OAAS2nB,EAAAA,eAGzE,EAQnBrD,EAAWrwB,UAAY,CACrBkN,SAAUjN,IAAAA,KAAAA,WACViT,UAAWjT,IAAAA,QAQbowB,EAAWnwB,aAAe,CACxBgT,UAAW,G,qLC7Cb,MAAMugB,EAAe90B,IAAA,IAAC,SAAEuO,EAAQ,UAAEgG,KAAcwE,GAAO/Y,EAAA,OACrDgB,IAAAA,cAACi0B,EAAAA,GAAOvc,EAAAA,EAAAA,GAAA,CAACnE,UAAS,2BAAArO,OAA6BqO,IAAiBwE,GAC7DxK,EACO,EAQZumB,EAAazzB,UAAY,CACvBkN,SAAUjN,IAAAA,KAAAA,WACViT,UAAWjT,IAAAA,QAQbwzB,EAAavzB,aAAe,CAC1BgT,UAAW,G,oLCtBb,MAAM2d,EAAclyB,IAAA,IAAC,SAAEuO,EAAQ,UAAEgG,KAAcwE,GAAO/Y,EAAA,OACpDgB,IAAAA,cAACi0B,EAAAA,GAAOvc,EAAAA,EAAAA,GAAA,CAACnE,UAAS,0BAAArO,OAA4BqO,IAAiBwE,GAC5DxK,EACO,EAQZ2jB,EAAY7wB,UAAY,CACtBkN,SAAUjN,IAAAA,KAAAA,WACViT,UAAWjT,IAAAA,QAQb4wB,EAAY3wB,aAAe,CACzBgT,UAAW,G,oLCtBb,MAAMwgB,EAAc/0B,IAAA,IAAC,SAAEuO,EAAQ,UAAEgG,KAAcwE,GAAO/Y,EAAA,OACpDgB,IAAAA,cAACi0B,EAAAA,GAAOvc,EAAAA,EAAAA,GAAA,CAACnE,UAAS,0BAAArO,OAA4BqO,IAAiBwE,GAC5DxK,EACO,EAQZwmB,EAAY1zB,UAAY,CACtBkN,SAAUjN,IAAAA,KAAAA,WACViT,UAAWjT,IAAAA,QAQbyzB,EAAYxzB,aAAe,CACzBgT,UAAW,G,6ZCdb,MAAMnT,EAAS,WAA+E,IAA9E,cAAE8zB,EAAa,OAAEC,EAAQC,kBAAmBC,GAAwBxzB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACtFwzB,IAEA,MAAMC,EAAgBH,EAAO3yB,KAAIka,IAC/B,MAAM6Y,EAAO1lB,EAAAA,cAAAA,WAAyB6M,EAAK1D,WAC3C,OAAOhY,IAAAA,cAACw0B,EAAAA,MAAK,CAACnzB,IAAKqa,EAAK+Y,KAAMA,KAAM/Y,EAAK+Y,KAAMC,QAAS10B,IAAAA,cAACu0B,EAAI,OAAO,IAGtE,OACEv0B,IAAAA,cAACA,IAAAA,SAAc,CAAC20B,SAAU30B,IAAAA,cAACowB,EAAAA,OAAM,CAAClP,QAAQ,WACxClhB,IAAAA,cAAC40B,EAAAA,OAAM,KACJN,GACAJ,aAAa,EAAbA,EAAeO,QAAQP,aAAa,EAAbA,EAAeW,WACrC70B,IAAAA,cAACw0B,EAAAA,MAAK,CAACnzB,IAAI,WAAWozB,KAAMP,EAAcO,KAAMC,QAAS10B,IAAAA,cAAC80B,EAAAA,SAAQ,CAACppB,SAAO,EAACqpB,GAAIb,EAAcW,cAKvG,EAQAz0B,EAAOC,UAAY,CACjB6zB,cAAe5zB,IAAAA,MAAgB,CAC7Bm0B,KAAMn0B,IAAAA,OAAAA,WACNu0B,SAAUv0B,IAAAA,OAAAA,aAEZ6zB,OAAQ7zB,IAAAA,QACNA,IAAAA,MAAgB,CACd0X,UAAW1X,IAAAA,OAAAA,WACX00B,SAAU10B,IAAAA,KACVm0B,KAAMn0B,IAAAA,OAAAA,cAGV8zB,kBAAmB9zB,IAAAA,MAQrBF,EAAOG,aAAe,CACpB2zB,cAAerlB,EAAAA,cAAAA,cACfslB,OAAQtlB,EAAAA,cAAAA,OACRulB,kBAAiBA,EAAAA,kB,kXChDnB,MAAMa,EAAc,WAGT,IAFTA,YAAaC,EAAmBC,EAAAA,YAChCC,eAAgBC,EAAsBvxB,OAAOwxB,UAC9Cz0B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACH,MAAMy0B,EAAWJ,IACXE,EAAiBC,GAChBE,EAAiBC,IAAsBtkB,EAAAA,EAAAA,UAAS,CAAC,GAexD,OAbAS,EAAAA,EAAAA,YAAU,KACR,MAAM8jB,EAAM11B,EAAAA,EAAAA,aAAqBq1B,IAC7BG,aAAe,EAAfA,EAAiBE,OAAQA,GAC3BD,EAAmB,IACdF,KACAF,EACHK,MACAC,MAAMJ,aAAQ,EAARA,EAAUI,OAAQ,GACxBC,QAAQL,aAAQ,EAARA,EAAUK,SAAU,IAEhC,GACC,CAACL,EAAUC,aAAe,EAAfA,EAAiBE,IAAKL,IAE7BG,CACT,EAYMK,EAAc,WAIT,IAHT12B,YAAaC,EAAmBsB,EAAAA,GAAAA,WAAAA,YAChCw0B,YAAaC,EAAmBD,EAChCW,YAAaC,EAAmBC,EAAAA,aACjCj1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACH,MAAM,OAAE80B,EAAS,GAAE,KAAED,EAAO,IAAOR,IAC7Ba,EAAWF,IACXv2B,EAAWH,IAEjB,OAAOqW,EAAAA,EAAAA,cACL,CAACwgB,EAAc7xB,KACb,MAAM8xB,EAAoC,iBAAjBD,GAA6BA,IAAiBA,aAAY,EAAZA,EAAcE,WAC/E,WAAEC,GAAetnB,EAAAA,cAAAA,qBAAmC,CAAEonB,aAE5D,OAAIE,SAAAA,EAAYC,aACd92B,EAAS,CACP8M,KAAMiqB,EAAAA,GAAAA,IAAAA,YACNC,OAAQH,aAAU,EAAVA,EAAYC,cAGfL,EAAS,GAAD7wB,OAAI2J,EAAAA,cAAAA,SAAuB,IAAKsnB,aAAU,EAAVA,EAAYC,cAAYlxB,OAAGywB,GAAMzwB,OAAGwwB,GAAQvxB,IAGtF4xB,EAAUE,GAAY,GAAJ/wB,OAAO+wB,GAAQ/wB,OAAGywB,GAAMzwB,OAAGwwB,IAAWM,EAAc7xB,EAAQ,GAEvF,CAAC7E,EAAUo2B,EAAMK,EAAUJ,GAE/B,EAYMY,EAAiB,WAIZ,IAJa,EACtB9oB,EAAInD,EAAAA,UACJ+E,UAAWC,EAAiBD,EAAAA,EAC5BmnB,aAAcC,EAAoBh2B,EAAAA,GAAAA,WAAAA,cACnCI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACH,MAAM,cAAE61B,EAAgB32B,EAAAA,EAAAA,KAAY,oBAAE0P,EAAsB1P,EAAAA,EAAAA,MAAiBuP,IACvEqnB,EAAaD,KACZN,EAAaQ,GAAkBH,EAAkB,CACtDz3B,IAAA,IAAA63B,EAAA,IAAC,KAAEC,GAAM93B,EAAA,OAAK83B,SAAa,QAATD,EAAJC,EAAMC,eAAO,IAAAF,OAAT,EAAJA,EAAeP,MAAM,EACnC72B,IAAA,IAAAu3B,EAAA,IAAC,KAAEF,GAAMr3B,EAAA,OAAKq3B,SAAa,QAATE,EAAJF,EAAMC,eAAO,IAAAC,OAAT,EAAJA,EAAe9V,OAAO,KAE/B+V,EAAQC,IAAahmB,EAAAA,EAAAA,UAAS,CAAC,GAkDtC,OAhDAS,EAAAA,EAAAA,YAAU,KACR,MAAMwlB,EAAqBf,EACrBgB,EAAWr3B,EAAAA,EAAAA,aAAqB,CAAEq2B,cAAaQ,mBAErD,GAAIO,IAAsBF,aAAM,EAANA,EAAQI,WAAYD,EAAU,CAEtD,IAAIE,EAAczoB,EAAAA,cAAAA,qBAAmC,CACnDonB,SAAUkB,IAIZ,GAAIP,EAAgB,KAAAW,EAAAC,EAClB,MAAMC,EAAkBb,aAAc,EAAdA,EAA4B,QAAdW,EAAGD,SAAW,IAAAC,GAAY,QAAZC,EAAXD,EAAapB,kBAAU,IAAAqB,OAAZ,EAAXA,EAAyBE,cAE9DD,IACFH,EAAczoB,EAAAA,cAAAA,qBAAmC,CAC/ConB,SAAUwB,IAGhB,CAEA,MAAM,WAAEE,EAAU,kBAAEC,EAAiB,QAAEC,EAAO,WAAE1B,EAAU,UAAE2B,GAAcR,EAG1E7nB,EAAoB,GAADvK,OACduI,EAAE,uBAAwB,CAC3BH,QAASvN,EAAAA,EAAAA,gBACTwK,QAAS4rB,aAAU,EAAVA,EAAYuB,eACrB,OAAAxyB,OAAMnF,EAAAA,EAAAA,iBAAuBmF,QAAIyxB,aAAU,EAAVA,EAAYoB,cAAW,MAAA7yB,OAAUyxB,aAAU,EAAVA,EAAYoB,cAAkB,KAClG,GAIFb,EAAU,CACRG,QAASD,EACTO,aACAC,oBACAzB,aACA6B,WAAYnpB,EAAAA,cAAAA,WACZipB,YACAJ,aAAcvB,aAAU,EAAVA,EAAYuB,aAC1BO,eAAgBJ,aAAO,EAAPA,EAAS/2B,SAAU+2B,GAAY,GAC/CzB,cACAQ,kBAEJ,IACC,CAACD,aAAU,EAAVA,EAAYoB,YAAad,aAAM,EAANA,EAAQI,QAASjB,EAAaQ,EAAgBnpB,EAAGgC,IAEvEwnB,CACT,EAUMiB,EAAkB,WAGb,IAFTA,gBAAiBC,EAAuBC,EAAAA,gBACxCnD,YAAaC,EAAmBD,GACjCp0B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACH,MAAM,OAAE80B,GAAWT,KACZ,CAAEmD,GAAwBF,IAW3BG,GAAkB9iB,EAAAA,EAAAA,cACtB,SAAC+iB,GAAmE,IAArD,SAAEC,GAAW,EAAI,cAAEC,EAAgB9C,GAAQ90B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACxD63B,EAAgB,CAAC,EAEjBF,EACF/1B,OAAOk2B,OAAOD,EAAe7pB,EAAAA,cAAAA,kBAAgC4pB,GAAgBF,GAE7EG,EAAgBH,EAGlBF,EAAqBK,EACvB,GACA,CAAC/C,EAAQ0C,IAGX,MAAO,CAACxpB,EAAAA,cAAAA,kBAAgC8mB,GAAS2C,EACnD,EAaMlE,EAAoB,WAIf,IAHTh1B,YAAaC,EAAmBoB,EAAAA,GAAAA,WAAAA,aAChCvB,YAAaC,EAAmBsB,EAAAA,GAAAA,WAAAA,YAChC20B,eAAgBC,EAAsBvxB,OAAOwxB,UAC9Cz0B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACH,MAAMvB,EAAWH,KACVy5B,GAAev5B,EAAiB,CAAC2F,IAAA,IAAA6zB,EAAA,IAAC,KAAE/B,GAAM9xB,EAAA,OAAK8xB,SAAa,QAAT+B,EAAJ/B,EAAMC,eAAO,IAAA8B,OAAT,EAAJA,EAAevC,MAAM,KACnEJ,SAAUE,GAAgBf,EAWlC,OATA1jB,EAAAA,EAAAA,YAAU,KACJykB,GAAeA,IAAgBwC,GACjCt5B,EAAS,CACP8M,KAAMiqB,EAAAA,GAAAA,IAAAA,YACNC,OAAQF,GAEZ,GACC,CAACwC,EAAat5B,EAAU82B,IAEpBwC,CACT,EAEMruB,EAAU,CACd0qB,cACAW,cACAW,iBACA2B,kBACA9D,oB,keCnOF,MAAM9mB,EAAUvN,EAAAA,EAAAA,QAYV+4B,EAAkB,eAAC,SAAE7C,EAAWnyB,OAAOwxB,SAASY,SAAU5oB,QAASyrB,EAAkBh5B,EAAAA,EAAAA,SAAiBc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,SAAAqE,OAC5G+wB,EAAS9H,MAAM4K,GAAiB,IAAE7zB,OAAG6zB,EAAe,EAUnDC,EAAkB,eAAC,SAAE/C,EAAWnyB,OAAOwxB,SAASY,SAAU5oB,QAASyrB,EAAkBh5B,EAAAA,EAAAA,SAAiBc,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC/Go1B,EAAS9H,MAAM4K,GAAiB,EAAE,EAO9B7E,EAAgB+E,EAAAA,GAAAA,MAAkBj6B,IAAA,IAAC,SAAEg2B,EAAQ,SAAEH,GAAU71B,EAAA,OAAMg2B,GAAYH,CAAQ,IAOnFV,EAAS8E,EAAAA,GAAAA,QAAoBvd,IAASA,EAAKsZ,WAY3CkE,EAAuBn5B,EAAAA,EAAAA,MAAa,WAA8D,IAAAo5B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA7D,SAAExD,EAAQ,QAAE4B,EAAUI,EAAAA,GAAAA,eAA6Bp3B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChG,MAAM,WAAE64B,EAAU,kBAAEC,EAAiB,mBAAEC,EAAkB,mBAAEC,GAAuBhC,IAC5EiC,EACH,SAASn0B,KAAKswB,IAAa,IAAIhqB,IAAIgqB,GAAUC,UAAkC,iBAAbD,GAAyBA,QAAal1B,EACrGg5B,EAAkBD,SACP,QADsBX,EAAfW,EACpB1vB,qBAAa,IAAA+uB,GACH,QADGC,EADOD,EAEpBhL,MAAM,YAAI,IAAAiL,GAAK,QAALC,EAFUD,EAEP,UAAE,IAAAC,GACL,QADKC,EAFKD,EAGpBlL,MAAM,YAAI,IAAAmL,GAAK,QAALC,EAHUD,EAGP,UAAE,IAAAC,GACU,QADVC,EAHKD,EAIpB7tB,QAAQ,aAAc,WAAG,IAAA8tB,GAC4B,QAD5BC,EAJLD,EAKpB9tB,QAAQ,IAAIigB,OAAO5rB,EAAAA,EAAAA,gBAAyB,KAAM,WAAG,IAAA05B,OALlB,EAAfA,EAMpB/tB,QAAQ,QAAS,KAGfsuB,EAAaL,EAAkB7X,MAAKviB,IAAK,IAAA06B,EAAA,OAAI16B,EAAM6K,iBAAkB2vB,SAA2B,QAAZE,EAAfF,EAAiB5L,MAAM,YAAI,IAAA8L,OAAZ,EAAfA,EAA6BrL,MAAM,IAGxGsL,EAAaH,IAAmBI,EAAAA,EAAAA,GAAQJ,EAAiBJ,GACzDS,EAAoBV,aAAU,EAAVA,EAAaM,GAAcE,GAC/CtC,EAAoBgC,aAAkB,EAAlBA,EAAqBI,GAAcE,GAE7D,MAAO,CACLpC,WAAYkC,EACZrC,WAAYl1B,OAAOwR,OAAO4lB,GAC1BjC,oBACAC,QAASuC,EACTjE,WAAYiE,aAAiB,EAAjBA,EAAoB,GAEpC,IAQMC,EAAariB,GACZjY,EAAAA,EAAAA,UAIEu6B,GAAKt6B,IAAAA,cAACA,IAAAA,SAAc,KAAEsB,KAAKC,UAAU,IAAK+4B,EAAGtiB,aAAa,KAAM,IAH9DhY,IAAAA,MAAW,IAAM,SAA0C,KAAnCkF,OAA0C8S,EAAS,UAYhFuiB,EAAoBx6B,EAAAA,EAAAA,MAAa,WAAqD,IAApDy6B,EAAsB35B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGiD,OAAOwxB,SAASK,OAC/E,MAAM,mBAAE8E,EAAkB,gBAAEC,GAAoB52B,OAC1C62B,EAAe,CAAC,EAWtB,MATA,IACK,IAAIrS,IACL,IAAI,IAAIoS,EAAgBD,EAAmBD,KAA0Bh5B,KAAI/B,IAAA,IAAEm7B,EAAOr7B,GAAME,EAAA,SAAAyF,OAAQ01B,EAAK,KAAA11B,OAAI3F,EAAK,MAEhHwD,SAAQ83B,IACR,MAAOD,EAAOr7B,GAASs7B,EAAE1M,MAAM,KAC/BwM,EAAaC,GAASr7B,CAAK,IAGtBo7B,CACT,IAQMG,EAAW/6B,EAAAA,EAAAA,MAAa,WAAc,QAAAkB,EAAAJ,UAAAC,OAAVi6B,EAAK,IAAA55B,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAL25B,EAAK35B,GAAAP,UAAAO,GACrC,IAAIw3B,EAAcz3B,MAAM0nB,KAAKkS,GAC7B,MAAMC,EAAU,QAAQr1B,KAAKizB,EAAY,IAWzC,OAVAA,EAAcA,EACX9P,KAAK,KACLpd,QAAQ,WAAY,KACpBA,QAAQ,KAAM,KACdA,QAAQ,QAAS,KAEhBsvB,IACFpC,EAAc,IAAH1zB,OAAO0zB,IAGbA,CACT,IAEM/pB,EAAgB,CACpBvB,UACAwrB,kBACAE,kBACA9E,gBACAgF,uBACAmB,aACAE,oBACAO,WACA3G,S,oQCjGF,MAAM8G,UAAcj7B,IAAAA,UAAgBk7B,cAAA,SAAAr6B,YAAAs6B,EAAAA,EAAAA,GAAA,aAC1B,CACNC,eAAe,EACfC,YAAY,EACZC,OAAQ,CAAC,EACTC,qBAAsB,KACtBC,YAAa,QA6BfL,EAAAA,EAAAA,GAAA,mBAQan8B,IAAuB,IAAtB,MAAE+V,EAAK,OAAE2Q,GAAQ1mB,EAC7B,MAAM,YAAEw8B,GAAgBC,KAAKC,MAC7BF,EAAYzmB,GAAO2Q,OAASA,EAExBA,GACF8V,EAAYzmB,EAAQ,GAAG4mB,WAAY,EACnCH,EAAYzmB,EAAQ,GAAG6mB,MAAQ,CAAC,CAAE5xB,MAAOwxB,EAAYzmB,EAAQ,GAAG8mB,mBAEhEL,EAAYzmB,EAAQ,GAAG6mB,MAAQ,CAAC,CAAE5xB,MAAO,KAG3CyxB,KAAKK,SAAS,CACZN,eACA,KAUJL,EAAAA,EAAAA,GAAA,eASS17B,IAAqC,IAApC,MAAEsV,EAAK,UAAE8O,EAAS,KAAEjkB,EAAO,CAAC,GAAGH,EACvC,MAAM,cAAE27B,EAAa,qBAAEG,EAAoB,YAAEC,GAAgBC,KAAKC,MAC5DK,EAAeX,EAAgBrmB,EAAQ,EAAIA,EAEjDymB,EAAYz4B,SAAQwI,MAAAvG,EAAmBg3B,KAAM,IAAlB,OAAEtW,GAAQ1gB,GACpB,IAAX0gB,SACI+V,KAAKQ,WAAW,CAAElnB,MAAOinB,EAAGtW,QAAQ,GAC5C,IAGF+V,KAAKK,SACH,CACER,OAAQ,CACNvmB,QACA8O,eAGJ,SAAAqY,EAAAC,EAAA,OACEZ,EAAqBQ,GAAcK,OAAO,CACxCvY,YACA9O,MAAOgnB,EACPzkB,MAAO1X,SAAY,QAARs8B,EAAJt8B,EAAMy8B,cAAM,IAAAH,GAAQ,QAARC,EAAZD,EAAcI,cAAM,IAAAH,OAAhB,EAAJA,EAAsB7kB,OAC7B,GACL,GACF,CA1FDilB,oBACE,MAAM,YAAEf,GAAgBC,KAAKC,MAET,OAAhBF,GACFC,KAAKe,YAET,CAEAC,mBAAmBC,GACjB,MAAM,cAAEC,EAAa,KAAEC,GAASnB,KAAK1jB,MAC/B8kB,EAAaA,CAACC,EAAQC,KAC1B,GAAsB,mBAAXD,GAA2C,mBAAXC,EACzC,OAAOD,EAAOp7B,aAAeq7B,EAAOr7B,UAGtB,EAIfs7B,IAAaN,EAAUE,KAAMA,EAAMC,IACnCG,IAAaN,EAAUC,cAAeA,EAAeE,IAEtDpB,KAAKe,YAET,CAuEAA,aACE,MAAM,cAAEG,EAAa,KAAEC,GAASnB,KAAK1jB,MAC/BwjB,EAAuB,GACvBC,EAAc,GACdyB,EAAc,CAAC,EACrB,IAAI7B,GAAgB,EAChBC,GAAa,EAEjBuB,EAAK75B,SAAQkC,IAA4C,IAA3C,gBAAE42B,EAAe,MAAED,EAAK,WAAErX,GAAYtf,EAClD,MAAMi4B,EAAS,CACbtB,MAAO,IAETJ,EAAYhxB,KAAK0yB,GAEbrB,IACFT,GAAgB,EAChB8B,EAAOxX,OAASnB,IAAc,EAE9BiX,EAAYhxB,KAAK,CACf2yB,OAAQ3B,EAAY16B,OAAS,EAC7B66B,WAAW,EACXC,MAAO,CAAC,CAAE5xB,MAAO,KACjB6xB,qBAIJD,EAAM74B,SAAQq6B,IACZ,QAAoBr8B,KAAhBq8B,aAAI,EAAJA,EAAMpzB,OAAqB,CAC7B,MAAM,MAAEA,KAAUid,GAAamW,EAC/BF,EAAOtB,MAAMpxB,KAAK,CAAER,WAAUid,GAChC,MACEiW,EAAOtB,MAAMpxB,KAAK,CAChBR,MAAQhK,IAAAA,eAAqBo9B,IAASA,GAA0B,iBAATA,GAAqB,GAAJl4B,OAAOk4B,IAAWA,GAE9F,GACA,IAGJT,EAAc55B,SAAQ,CAACs6B,EAActoB,KACnC,QAA4BhU,KAAxBs8B,aAAY,EAAZA,EAAcrzB,OAAqB,CACrC,MAAM,OAAEoyB,EAAM,WAAEkB,EAAU,cAAEC,EAAa,MAAEvzB,KAAUid,GAAaoW,EAC5DG,EAAmB,CACvBxzB,WACGid,GAGDmV,GACFf,GAAa,EACbmC,EAAiBC,WAAa,KAAKD,aAAgB,EAAhBA,EAAkBC,aAAc,GAAKC,EAAAA,UACxEF,EAAiBpB,OAASA,EAEtBkB,IACFL,EAAY3B,OAAS,CAAEvmB,MAAOqmB,EAAgBrmB,EAAQ,EAAIA,GAC1DkoB,EAAY3B,OAAOzX,UAAY8Z,EAAAA,gBAAAA,KAG7BJ,IACFN,EAAY3B,OAAS,IAAK2B,EAAY3B,OAAQzX,UAAW0Z,KAElDC,EAAiBC,aAC1BD,EAAiBC,WAAaD,EAAiBC,WAAWxrB,QAAO4oB,GAAKA,IAAM6C,EAAAA,YAG9EnC,EAAqB/wB,KAAKgzB,EAC5B,MACEjC,EAAqB/wB,KAAK,CACxBR,MACGhK,IAAAA,eAAqBq9B,IAAiBA,GACd,iBAAjBA,GAA6B,GAAJn4B,OAAOm4B,IACxCA,GAEN,IAGF5B,KAAKK,SAAS,CACZV,gBACAC,aACAE,uBACAC,iBACGyB,GAEP,CAaAW,cACE,MAAM,cAAExC,EAAa,WAAEC,EAAU,OAAEC,EAAM,qBAAEC,EAAoB,YAAEC,GAAgBC,KAAKC,OAChF,UAAE9X,EAAS,QAAEiN,EAAO,SAAEtjB,EAAQ,UAAEgG,EAAS,SAAEsqB,EAAQ,QAAEC,EAAO,EAAErwB,EAAC,QAAEyT,GAAYua,KAAK1jB,MAClFgmB,EAAe,CAAC,EACtB,IAAIC,EAAa,KAqBjB,OAnBKxC,SAAAA,EAAa16B,SAChBk9B,EAAazwB,GACXvN,IAAAA,cAACi+B,EAAAA,WAAU,CACT3vB,KAAM4vB,EAAAA,GACNl0B,MAAOyD,EAAE,gDACT/J,QAAS+J,EAAE,qDAKb2tB,IACF2C,EAAa9B,WAAa,CAACxc,EAAO1K,EAAO2Q,EAAQ9lB,IAAS67B,KAAKQ,WAAW,CAAExc,QAAO1K,QAAO2Q,SAAQ9lB,UAGhGy7B,IACF0C,EAAazC,OAASA,EACtByC,EAAa3B,OAAS,CAAC3c,EAAO1K,EAAO8O,EAAWjkB,IAAS67B,KAAKW,OAAO,CAAE3c,QAAO1K,QAAO8O,YAAWjkB,UAIhGI,IAAAA,cAACA,IAAAA,SAAc,KACbA,IAAAA,cAACm+B,EAAAA,OAAOzmB,EAAAA,EAAAA,GAAA,CACNnE,UAAS,kBAAArO,OAAsB2rB,EAA4B,GAAjB,aAAmB,KAAA3rB,OAAIqO,GAAa,IAC9Esd,QAASA,EACT,aAAYjN,GAAanW,EAAE,qCAAsC,CAAEH,QAASvN,EAAAA,QAAAA,kBAC5E+9B,QAASA,GAAWrwB,EAAE,oCACtByT,QAASA,EACT0b,MAAOpB,aAAW,EAAXA,EAAa16B,SAAU06B,GAAgB,GAC9CI,MAAOL,GAAwB,IAC3BwC,GAEHF,GAAY79B,IAAAA,cAACo+B,EAAAA,YAAW,MACzBp+B,IAAAA,cAACq+B,EAAAA,UAAS,OAEXL,EAGP,CAOAM,SACE,OACEt+B,IAAAA,cAACu+B,EAAAA,KAAI,CAAChrB,UAAU,sBACdvT,IAAAA,cAACw+B,EAAAA,SAAQ,CAACC,KAAM,IAAKhD,KAAKmC,eAGhC,EASF3C,EAAM56B,UAAY,CAChBujB,UAAWtjB,IAAAA,OACXuwB,QAASvwB,IAAAA,KACTiN,SAAUjN,IAAAA,KACViT,UAAWjT,IAAAA,OACXq8B,cAAer8B,IAAAA,QACbA,IAAAA,UAAoB,CAClBA,IAAAA,KACAA,IAAAA,MAAgB,CACd87B,OAAQ97B,IAAAA,KACRg9B,WAAYh9B,IAAAA,KACZi9B,cAAej9B,IAAAA,MAAgB,IAAImC,OAAOwR,OAAO0pB,EAAAA,mBACjD3zB,MAAO1J,IAAAA,KAAAA,gBAGXgY,WACFulB,SAAUv9B,IAAAA,KACVs8B,KAAMt8B,IAAAA,QACJA,IAAAA,MAAgB,CACdu7B,gBAAiBv7B,IAAAA,KACjBs7B,MAAOt7B,IAAAA,QACLA,IAAAA,UAAoB,CAClBA,IAAAA,KACAA,IAAAA,WAAqBwT,MACrBxT,IAAAA,MAAgB,CACd0J,MAAO1J,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,WAAqBwT,QAAQwE,gBAI/EiM,WAAYjkB,IAAAA,QAGhBw9B,QAASx9B,IAAAA,OACTmN,EAAGnN,IAAAA,KACH4gB,QAAS5gB,IAAAA,MAAgB,IAAImC,OAAOwR,OAAOgd,EAAAA,iBAS7CgK,EAAM16B,aAAe,CACnBqjB,UAAW,KACXiN,SAAS,EACTtjB,SAAU,KACVgG,UAAW,KACXsqB,UAAU,EACVjB,KAAM,GACNkB,QAAS,KACTrwB,EAAGnD,EAAAA,UACH4W,QAAS,K,oLCtWX,MAAM+c,EAAaj/B,IAAA,IAAC,KAAEsP,EAAI,QAAE5K,EAAO,aAAEg7B,EAAY,MAAE10B,EAAK,QAAEkX,GAASliB,EAAA,OACjEgB,IAAAA,cAAC2+B,EAAAA,EAAyB,KACxB3+B,IAAAA,cAACmxB,EAAAA,WAAU,CAACjQ,QAASA,GAClB5S,GAAQtO,IAAAA,cAACqxB,EAAAA,eAAc,CAAC/iB,KAAMA,IAC/BtO,IAAAA,cAACsxB,EAAAA,MAAK,CAACC,aAAcmN,EAAcniB,KAAK,MACrCvS,GAEHhK,IAAAA,cAACwxB,EAAAA,eAAc,KAAE9tB,IAEO,EAS9Bu6B,EAAW59B,UAAY,CACrBiO,KAAMhO,IAAAA,UAAoB,CAACA,IAAAA,KAAgBA,IAAAA,OAC3CoD,QAASpD,IAAAA,KAAAA,WACTo+B,aAAcp+B,IAAAA,OACd0J,MAAO1J,IAAAA,KAAAA,WACP4gB,QAAS5gB,IAAAA,MAAgBmC,OAAO2U,KAAKga,EAAAA,qBAQvC6M,EAAW19B,aAAe,CACxB+N,KAAM,KACNowB,aAAc,KACdxd,QAASkQ,EAAAA,kBAAAA,M,6MC7BX,MAAMX,EAAgBzxB,IAAgF,IAA/E,UAAEuU,EAAS,QAAEsd,EAAO,SAAEC,EAAQ,SAAEC,EAAQ,SAAE8M,EAAQ,SAAE7M,EAAQ,EAAEvjB,EAAC,QAAEyT,GAASliB,EAC/F,MAAMu8B,EAAuB,IAAI,IAAIp6B,MAAM2vB,IAAWtvB,KAAI,CAACjC,EAAOwV,KAChE,MAAM6pB,EAAgB,CAAE50B,MAAOhK,IAAAA,cAACuwB,EAAAA,EAAQ,CAAChU,KAAMiU,EAAAA,EAAAA,MAM/C,MAJ+B,iBAApBO,EAAShc,KAClB6pB,EAAcnB,WAAa,EAACoB,EAAAA,EAAAA,WAAU9N,EAAShc,MAG1C6pB,CAAa,IAKhBpD,EAAc,IAAI,IAAIr6B,MAFJ6vB,GAAY,IAEgBxvB,KAAI,KAAM,CAC5Do6B,MAAO,IAAI,IAAIz6B,MAAM2vB,IAAWtvB,KAAI,IAAMxB,IAAAA,cAACuwB,EAAAA,EAAQ,CAAChU,KAAMiU,EAAAA,EAAAA,WAG5D,OACExwB,IAAAA,cAACi7B,EAAAA,QAAK,CACJrX,UAAWnW,EAAE,8CACbojB,QAASA,EACTtd,UAAS,2BAAArO,OAA+B8rB,EAAyD,GAA7C,yCAA+C,KAAA9rB,OACjGqO,GAAa,IAEfopB,cAAepB,EACfsC,SAAUA,EACVjB,KAAMpB,EACNta,QAASA,GACT,EAUNuP,EAAcpwB,UAAY,CACxBwwB,QAASvwB,IAAAA,KACTiT,UAAWjT,IAAAA,OACXwwB,SAAUxwB,IAAAA,OACVywB,SAAUzwB,IAAAA,QAAkBA,IAAAA,QAC5Bu9B,SAAUv9B,IAAAA,KACV0wB,SAAU1wB,IAAAA,OACVmN,EAAGnN,IAAAA,KACH4gB,QAAS5gB,IAAAA,MAAgB,IAAImC,OAAOwR,OAAOgd,EAAAA,iBAS7CR,EAAclwB,aAAe,CAC3BswB,SAAS,EACTtd,UAAW,KACXud,SAAU,EACVC,SAAU,GACV8M,UAAU,EACV7M,SAAU,EACVvjB,EAAGnD,EAAAA,UACH4W,QAAS,K,gLCpEX,MAAM4d,EAAU9/B,IAAA,IAAC,SAAEuO,EAAQ,QAAE6E,EAAO,SAAE2sB,KAAahnB,GAAO/Y,EAAA,OACxDgB,IAAAA,cAACg/B,EAAAA,SAAStnB,EAAAA,EAAAA,GAAA,CACRnE,UAAS,oBAAArO,OAAuB65B,EAAY,WAAe,IAC3D3sB,QAAUpS,IAAAA,eAAqBoS,IAAYA,GAAYpS,IAAAA,cAAA,SAAIoS,GAAW,KAClE2F,GAEF/X,IAAAA,eAAqBuN,IAAaA,GAAavN,IAAAA,cAAA,QAAMuT,UAAU,8BAA8BhG,GACrF,EAQduxB,EAAQz+B,UAAY,CAClBkN,SAAUjN,IAAAA,KAAAA,WACV8R,QAAS9R,IAAAA,KACT2+B,SAAU3+B,IAAAA,OACV4+B,WAAY5+B,IAAAA,KACZ6+B,WAAY7+B,IAAAA,OACZ8+B,UAAW9+B,IAAAA,OACXy+B,SAAUz+B,IAAAA,KACV+jB,SAAU/jB,IAAAA,QAQZw+B,EAAQv+B,aAAe,CACrB6R,QAAS,MACT6sB,SAAU,EACVC,YAAY,EACZC,WAAY,IACZC,UAAW,EACXL,UAAU,EACV1a,SAAUgb,EAAAA,gBAAAA,I,6gBCjDZ,MAAMC,EAoBF,QApBgBtgC,EAAG,MACrB,IACE,MAAMy1B,EAAO8K,EAAAA,OACb,OAAO9K,EAAKrd,OAAO5V,IAAIizB,EACzB,CAAE,MAAOpnB,GAcP,OADAmyB,QAAQC,KAAK,yCAADv6B,OAA0CmI,EAAE3J,UACjD,EACT,CACD,EApBsB,UAoBnB,IAAA1E,OAAA,EApBmBA,EAoBjBwC,KAAIjC,GAASA,EAAM+2B,SAuBnBoJ,EAAuB3/B,EAAAA,EAAAA,MAAa,WAA8B,IAA7B83B,EAAOh3B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGy+B,EACnD,MAAMK,EAAgB,CAAC,EACjBC,EAAiB,CAAC,EAClBC,EAAa,IAAIvX,IACjBwX,EAAmB,CAAC,EACpBC,EAAqB,CAAC,EACtBC,EAAW,CAAC,EACZC,EAAmB,CAAC,EACpBC,EAAiB,CAAC,EAClBC,EAAkB,CAAC,EACnBC,EAAkB,CAAC,EACnBC,EAAiB,CAAC,EAoGxB,OAlGAxI,SAAAA,EAAS90B,SAAQuzB,IACf,MAAM,QAAEgK,EAAO,aAAE5I,EAAY,UAAEjR,EAAS,aAAE+M,EAAY,YAAE4C,EAAW,gBAAEmK,EAAe,OAAEC,GAAWlK,EAElE,IAAAmK,EAKhBC,EAKgBC,EAKDC,EA+BbC,EAKCC,EAIoBC,EAMPC,EAAAC,EAI4BC,EAM/CC,EAKaC,EA5ErB1J,GAAgBjR,IACI,QAAtBga,EAAAT,EAAStI,UAAa,IAAA+I,IAAtBT,EAAStI,GAAkB,CAAC,GAC5BsI,EAAStI,GAAcjR,GAAa6P,GAGlC7P,IACiB,QAAnBia,EAAAV,EAASvZ,UAAU,IAAAia,IAAnBV,EAASvZ,GAAe,CAAC,GACzBuZ,EAASvZ,GAAWA,GAAa6P,GAG/B9C,GAAgB/M,IACI,QAAtBka,EAAAX,EAASxM,UAAa,IAAAmN,IAAtBX,EAASxM,GAAkB,CAAC,GAC5BwM,EAASxM,GAAc/M,GAAa6P,GAGlCF,GAAe3P,IACI,QAArBma,EAAAZ,EAAS5J,UAAY,IAAAwK,IAArBZ,EAAS5J,GAAiB,CAAC,GAC3B4J,EAAS5J,GAAa3P,GAAa6P,GAGrCgK,SAAAA,EAASv9B,SAAQs+B,IAAS,IAAAC,EACTC,EAAX9a,IACa,QAAf8a,EAAAvB,EAASqB,UAAM,IAAAE,IAAfvB,EAASqB,GAAW,CAAC,GACrBrB,EAASqB,GAAO5a,GAAa6P,GAGV,QAArBgL,EAAA1B,EAAeyB,UAAM,IAAAC,IAArB1B,EAAeyB,GAAW,IAC1BzB,EAAeyB,GAAO72B,KAAK8rB,EAAO,IAGpCiK,SAAAA,EAAiBx9B,SAAQme,IAAW,IAAAsgB,EACnBC,EAAXhb,IACe,QAAjBgb,EAAAzB,EAAS9e,UAAQ,IAAAugB,IAAjBzB,EAAS9e,GAAa,CAAC,GACvB8e,EAAS9e,GAASuF,GAAa6P,EAC/B0J,EAAS9e,GAASuF,GAAa,IAAK6P,EAAQ7P,UAAWvF,IAGlC,QAAvBsgB,EAAA5B,EAAe1e,UAAQ,IAAAsgB,IAAvB5B,EAAe1e,GAAa,IAC5B0e,EAAe1e,GAAS1W,KAAK,IAAK8rB,EAAQ7P,UAAWvF,GAAU,IAG7DuF,IACFqZ,EAAiBrZ,GAAa6P,EAC9BuJ,EAAWx1B,IAAIoc,IAGb2P,IAC6B,QAA/ByK,EAAAd,EAAmB3J,UAAY,IAAAyK,IAA/Bd,EAAmB3J,GAAiB,IACpC2J,EAAmB3J,GAAa5rB,KAAK8rB,IAGnCoB,IAC0B,QAA5BoJ,EAAAZ,EAAexI,UAAa,IAAAoJ,IAA5BZ,EAAexI,GAAkB,IACjCwI,EAAexI,GAAcltB,KAAK8rB,GAE9Bn1B,MAAM6C,QAAQu8B,KACa,QAA7BQ,EAAAX,EAAgB1I,UAAa,IAAAqJ,IAA7BX,EAAgB1I,GAAkB,IAClC0I,EAAgB1I,GAAcltB,QAAQ+1B,KAItC7I,GAAgBjR,IACW,QAA7Bua,EAAAb,EAAgBzI,UAAa,IAAAsJ,IAA7Bb,EAAgBzI,GAAkB,IAClCyI,EAAgBzI,GAAcltB,KAAKic,GAED,QAA9Bwa,EAACb,EAAgB1I,UAAa,IAAAuJ,GAA7BA,EAA+BzyB,SAASiY,KACd,QAA7Bya,EAAAd,EAAgB1I,UAAa,IAAAwJ,IAA7Bd,EAAgB1I,GAAkB,IAClC0I,EAAgB1I,GAAcltB,KAAKic,KAInC+Z,IACmB,QAArBW,EAAAxB,EAAca,UAAO,IAAAW,IAArBxB,EAAca,GAAY,IAC1Bb,EAAca,GAAQh2B,KAAK8rB,IAGzBkK,GAAU/Z,IACU,QAAtB2a,EAAAf,EAAeG,UAAO,IAAAY,IAAtBf,EAAeG,GAAY,IAC3BH,EAAeG,GAAQh2B,KAAKic,GAC9B,IAGFhkB,OAAOkC,QAAQq7B,GAAUj9B,SAAQtD,IAAkB,IAAAiiC,EAAA,IAAhBrgC,EAAK9B,GAAME,EAC5CugC,EAAS3+B,GAAOoB,OAAOwR,OAAO1U,GACT,QAArBmiC,EAAAzB,EAAiB5+B,UAAI,IAAAqgC,IAArBzB,EAAiB5+B,GAAS,IAE1B2+B,EAAS3+B,GAAK0B,SAAQiC,IAAsB,IAArB,aAAE0yB,GAAc1yB,EACjC0yB,IACFuI,EAAiB5+B,GAAOF,MAAM0nB,KAC5B,IAAIP,IAAI,IAAI2X,EAAiB5+B,MAAS++B,EAAgB1I,MACtD9yB,OACJ,GACA,IAGG7E,EAAAA,EAAAA,UAAkB,CACvB4hC,QAAS/B,EACTlG,WAAYsG,EACZrG,kBAAmBl3B,OAAO2U,KAAK4oB,GAAUp7B,OACzCg1B,mBAAoBqG,EACpB2B,iBAAkB1B,EAClB2B,WAAY1B,EACZ2B,kBAAmB1B,EACnB2B,qBAAsBhC,EACtBlG,mBAAoBiG,EACpBkC,aAAc7gC,MAAM0nB,KAAKgX,GACzBoC,gBAAiBtC,EACjBuC,UAAW7B,GAEf,IAEM8B,EAAW,CACftK,QAASyH,EACT8C,cAAe1C,G,eCpLjB,MAAMvL,EAAS,CACb,CACE9vB,GAAI,MACJowB,KAAM,eACNI,SAAU,KACVwN,iBAAiB,EACjBrN,SAAUj1B,EAAAA,QAAAA,YACVojB,SAAS,EACTnL,UAAW,2BAEb,CACE3T,GAAI,UACJowB,KAAM,IACNI,SAAU,KACVwN,iBAAiB,EACjBrN,SAAUj1B,EAAAA,QAAAA,YACVojB,SAAS,EACTnL,UAAW,kC,uUCYf,MAAM0f,EAAe,YAEfjR,EAAY6b,EAAAA,GAAAA,UAEZ9O,EAAe8O,EAAAA,GAAAA,UAWfhM,EAAS,CACbgK,QAAS,CAACgC,EAAAA,GAAAA,UAAuC,sBAAuB,YAAa,WAAY,SACjG5K,eACAjR,YACA+M,eACA4C,YAAasB,EAAattB,cAC1Bm4B,eAAgBC,EAAAA,GAAAA,SAChBhC,OAAQ,OAAFt7B,OAASwyB,GACf+K,yBAAyB,EACzB/b,MAAO,CACL,CAACE,EAAAA,GAAAA,KAA+B8b,EAAAA,GAAAA,MAChC,CAAC9b,EAAAA,GAAAA,YAAsCzd,EAAAA,GAAAA,kBAClB2B,EAAAA,GAAAA,OAClB3C,UAAUw6B,cACb,CAAC/b,EAAAA,GAAAA,UAAoCzd,EAAAA,GAAAA,kBAA8B2B,EAAAA,GAAAA,OAAyBzC,QAAQs6B,eAEtGC,gBAAiB,CACf,CAAChc,EAAAA,GAAAA,aAAuC9b,EAAAA,GAAAA,OAE1C+3B,oBAAqB,CACnB,CAACjc,EAAAA,GAAAA,MAAgCkc,EAAAA,GAAAA,UACjC,CAAClc,EAAAA,GAAAA,WAAqCmc,EAAAA,GAAAA,WACtC,CAACnc,EAAAA,GAAAA,OAAiC,IAClC,CAACA,EAAAA,GAAAA,QAAkC,GAErCoc,4BAA6B,CAC3B,CAACpc,EAAAA,GAAAA,MAAgCqc,EAAAA,GAAAA,gBACjC,CAACrc,EAAAA,GAAAA,WAAqCmc,EAAAA,GAAAA,WACtC,CAACnc,EAAAA,GAAAA,OAAiC,IAClC,CAACA,EAAAA,GAAAA,QAAkC,GAErCsc,cAAeR,EAAAA,GAAAA,MACfS,oBAAqB,CACnB,CACEnc,QAAS,CACP,CACER,OAAQ4c,EAAAA,GAAAA,MACRC,YAAY,EACZlvB,KAAMmvB,EAAAA,qBAAAA,MACNlvB,OAAQmvB,EAAAA,qBAAAA,MACR1oB,MAAO0oB,EAAAA,qBAAAA,OAET,CACE/c,OAAQ4c,EAAAA,GAAAA,QACRC,YAAY,EACZlvB,KAAMmvB,EAAAA,qBAAAA,MACNlvB,OAAQmvB,EAAAA,qBAAAA,MACR1oB,MAAO0oB,EAAAA,qBAAAA,OAET,CACE/c,OAAQ4c,EAAAA,GAAAA,QACRpvB,UAAWE,EAAAA,iBAAAA,UACXmvB,YAAY,GAEd,CACE7c,OAAQ4c,EAAAA,GAAAA,MACRpvB,UAAWE,EAAAA,iBAAAA,UACXmvB,YAAY,MAKpBG,qBAAsB,CACpBC,wBAAwB,EACxBC,QAAS,CACP,CACEr/B,GAAIuiB,EAAAA,GAAAA,IACJvC,SAAUxD,EAAAA,eAAAA,OAEZ,CACExc,GAAIuiB,EAAAA,GAAAA,YACJvC,SAAUxD,EAAAA,eAAAA,SAIhB8iB,qBAAsB,CACpB,CACEt/B,GAAIu/B,EAAAA,GAAAA,aACJtH,OAAQA,KAAMhyB,EAAAA,EAAAA,WAAU,6BAA8B,CAAEC,QAAS,CAAC,SAAUq5B,EAAAA,GAAAA,gBAC5ExG,KAAM,WAGD,IAFD,CAACwG,EAAAA,GAAAA,cAA+B1T,EAAc,CAAC,EAAG,CAAC0T,EAAAA,GAAAA,cAA+BC,EAAc,CAAC,GAAGhjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1GijC,EAAOjjC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEP,MAAQgjC,UAAWl2B,IAAei2B,aAAO,EAAPA,EAASj2B,aAAc,CAAC,EAE1D,GAAKg2B,UAAAA,EAAatkC,MAChB,OAAO2wB,aAAW,EAAXA,EAAa3wB,MAGtB,IAAIykC,EAAqB9T,EAAY3wB,OAASskC,EAAYtkC,MAe1D,OAbIsO,IACFm2B,EACEhkC,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR1U,KAAI,GAAAtH,OAAKnF,EAAAA,QAAAA,2BAAkC,wBAAAmF,OAAuB2+B,EAAYtkC,MAAK,MAElFykC,IAKAA,CACT,GAEF,CACE3/B,GAAIu/B,EAAAA,GAAAA,aACJ/E,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,UACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,WAA4BK,GAAUpjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAClDojC,aAAQ,EAARA,EAAU1kC,QAASS,IAAAA,cAACkkC,EAAAA,EAAU,CAACz+B,KAAMw+B,aAAQ,EAARA,EAAU1kC,SAAc,EAAE,EAClEs/B,UAAW,KAGfsF,wBAAyB,CACvB,CACE9/B,GAAIu/B,EAAAA,GAAAA,aACJxG,KAAM,WAOD,IALD,CAACwG,EAAAA,GAAAA,cAA+B1T,EAAc,CAAC,EAC/C,CAAC0T,EAAAA,GAAAA,aAA8BQ,EAAa,CAAC,EAC7C,CAACR,EAAAA,GAAAA,kBAAmCS,EAAiB,CAAC,GACvDxjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACLijC,EAAOjjC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEP,MAAQgjC,UAAWl2B,IAAei2B,aAAO,EAAPA,EAASj2B,aAAc,CAAC,EAE1D,IAAKu2B,EAAW7kC,MACd,OAAO2wB,EAAY3wB,MAGrB,IAAIykC,EAAqB9T,EAAY3wB,OAAS6kC,EAAW7kC,MAezD,OAbIsO,IACFm2B,EACEhkC,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR1U,KAAI,GAAAtH,OAAKnF,EAAAA,QAAAA,2BAAkC,wBAAAmF,OAAuBk/B,EAAW7kC,MAAK,MAEjFykC,IAMLhkC,IAAAA,cAACA,IAAAA,SAAc,KACZgkC,EAAoB,IACnBK,EAAe9kC,QACf+K,EAAAA,EAAAA,WAAU,4BAA6B,CAAEC,QAAS,iBAAkB+5B,MAAOD,aAAc,EAAdA,EAAgB9kC,OAAS,CAClGS,IAAAA,cAACukC,EAAAA,MAAO,CAAC1pB,MAAM,YAEjB,GAGR,EACAwgB,YAAY,GAEd,CACEh3B,GAAI++B,EAAAA,GAAAA,MACJ9G,OAAQ,SAAC18B,EAAMkkC,GAAO,IAAI,CAACU,EAAAA,GAAAA,KAA2BC,GAAK5jC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC9DyJ,EAAAA,EAAAA,WAAU,6BAA8B,CAAEC,QAAS,CAACk6B,EAAKhe,IAAa,EACxE2W,KAAM,eAAAsH,EAAA,IAAC9kC,EAAIiB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAAc,CAAC2jC,EAAAA,GAAAA,KAA2BC,GAAK5jC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAKjB,SAAW,QAAP8kC,EAAJ9kC,EAAO6kC,UAAI,IAAAC,OAAP,EAAJA,EAAanlC,QAAS,IAAI,EAClG87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,UACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,WAA4BK,GAAUpjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAClDojC,aAAQ,EAARA,EAAU1kC,QAASS,IAAAA,cAACkkC,EAAAA,EAAU,CAACz+B,KAAMw+B,aAAQ,EAARA,EAAU1kC,SAAc,EAAE,EAClE87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,KAGf+F,yBAA0B,CACxBC,aAAc,eACZ,CAACjB,EAAAA,GAAAA,kBAAmCS,EAAiB,CAAC,EACtD,CAACT,EAAAA,GAAAA,aAA8Bv/B,GAChCxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAMwjC,EAAiB,GAAKhgC,QAAOtD,CAAS,GAEpD+jC,qCAAsC,CACpC,CACEzgC,GAAI0gC,EAAAA,GAAAA,aACJ1J,YAAY,EACZsJ,aAAa,GAEf,CACEtgC,GAAI0gC,EAAAA,GAAAA,cACJ1J,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAI0gC,EAAAA,GAAAA,SACJ1J,YAAY,EACZwD,UAAW,GACX8F,aAAa,GAEf,CACEtgC,GAAI0gC,EAAAA,GAAAA,eACJzI,OAAQ,eAAG,CAACyI,EAAAA,GAAAA,KAAoCN,GAAK5jC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACxDyJ,EAAAA,EAAAA,WAAU,6BAA8B,CAAEC,QAAS,CAAC,gBAAiBk6B,aAAG,EAAHA,EAAKllC,QAAS,EACrF69B,KAAM,WAIK,IAHT,CAAC2H,EAAAA,GAAAA,uBAAsDC,EACvD,CAACD,EAAAA,GAAAA,gBAA+CE,EAChD,CAACF,EAAAA,GAAAA,KAAoCN,GACtC5jC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACH,IAAmC,KAA/BmkC,aAAmB,EAAnBA,EAAqBzlC,OAAgB,CACvC,MAAM6S,GAAU9H,EAAAA,EAAAA,WAAU,6BAADpF,OACM6/B,EAAAA,GAAAA,uBAC7B,CAAEx6B,QAASk6B,aAAG,EAAHA,EAAKllC,QAElB,OACES,IAAAA,cAAC8+B,EAAAA,QAAO,CAAC1sB,QAASA,GAChBpS,IAAAA,cAACyc,EAAAA,UAAS,CAACC,OAAO,WAAW,aAAYtK,IAG/C,CACA,OAAO6yB,aAAa,EAAbA,EAAe1lC,KACxB,EACA87B,YAAY,EACZwD,UAAW,GACX8F,aAAa,GAEf,CACEtgC,GAAI0gC,EAAAA,GAAAA,gBACJ3H,KAAM,eAAG,CAAC2H,EAAAA,GAAAA,iBAAgDG,GAAerkC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3EqkC,aAAa,EAAbA,EAAe3lC,QAASqI,IAAAA,IAAWs9B,aAAa,EAAbA,EAAe3lC,OAAOsK,OAAO,eAAkB,EAAE,EACvFwxB,YAAY,EACZsJ,aAAa,EACb9F,UAAW,KAGfsG,sBAAuB,CACrB,CACE9gC,GAAIuiB,EAAAA,GAAAA,M,kTCvQV,MAAM8Q,EAAe,YAEfjR,EAAY6b,EAAAA,GAAAA,4BAEZ9O,EAAe8O,EAAAA,GAAAA,4BAUfhM,EAAS,CACbgK,QAAS,CAAC,sBAAuB,aACjC5I,eACAjR,YACA+M,eACA4C,YAAasB,EAAattB,cAC1Bm4B,eAAgBC,EAAAA,GAAAA,OAChBhC,OAAQ,OAAFt7B,OAASwyB,EAAY,KAAAxyB,OAAIuhB,GAC/BC,MAAO,CACL,CAACE,EAAAA,GAAAA,YAAsCzd,EAAAA,GAAAA,uBAAmC,WAAW5J,MAAM4I,UAAUw6B,cACrG,CAAC/b,EAAAA,GAAAA,UAAoCzd,EAAAA,GAAAA,uBAAmC,WAAW5J,MAAM8I,QAAQs6B,eAEnGC,gBAAiB,CACf,CAAChc,EAAAA,GAAAA,aAAuC9b,EAAAA,GAAAA,OAE1C+3B,oBAAqB,CACnB,CAACjc,EAAAA,GAAAA,MAAgCkc,EAAAA,GAAAA,UACjC,CAAClc,EAAAA,GAAAA,WAAqCmc,EAAAA,GAAAA,WACtC,CAACnc,EAAAA,GAAAA,OAAiC,IAClC,CAACA,EAAAA,GAAAA,QAAkC,GAErCuc,oBAAqB,CACnB,CACE3c,OAAQ4c,EAAAA,GAAAA,MACRjvB,KAAMmvB,EAAAA,qBAAAA,MACNlvB,OAAQmvB,EAAAA,qBAAAA,MACR1oB,MAAO0oB,EAAAA,qBAAAA,MACPvvB,UAAWE,EAAAA,iBAAAA,KACXO,WAAW,EACX/D,gBAAiB,eAAC,GAAErM,GAAIxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAKyJ,EAAAA,EAAAA,WAAU,8BAA+B,CAAEC,QAASlG,GAAK,GAE7F,CACEmiB,OAAQ4c,EAAAA,GAAAA,eACRjvB,KAAMixB,EAAAA,qBAAAA,MACNhxB,OAAQixB,EAAAA,qBAAAA,MACRxqB,MAAOwqB,EAAAA,qBAAAA,MACPrxB,UAAWE,EAAAA,iBAAAA,KACXO,WAAW,EACX/D,gBAAiB,eAAC,GAAErM,GAAIxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAKyJ,EAAAA,EAAAA,WAAU,8BAA+B,CAAEC,QAASlG,GAAK,IAG/Fm/B,qBAAsB,CACpBrb,MAAO,CACL,CACEmU,OAAQ,eAAA5hB,EAAA4qB,EAAA,IAAC,SAAEh1B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,oCAAqC,CAC7CC,QAAS,CAAC,aAAc+F,SAAa,QAALoK,EAARpK,EAAW,UAAE,IAAAoK,GAAS,QAAT4qB,EAAb5qB,EAAe/N,eAAO,IAAA24B,OAAd,EAARA,EAAwBC,SAChD/V,OAAQ,8BACR,EACJ3iB,KAAM,eAAA24B,EAAAC,EAAAC,EAAAC,EAAAjc,EAAAC,EAAAic,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,SAAE31B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3ByJ,EAAAA,EAAAA,WACE,iCACA,CACEC,QAAS,CAAC,SAAS+F,SAAa,QAALk1B,EAARl1B,EAAW,UAAE,IAAAk1B,GAAS,QAATC,EAAbD,EAAe74B,eAAO,IAAA84B,OAAd,EAARA,EAAwBra,gBAAgB9a,SAAa,QAALo1B,EAARp1B,EAAW,UAAE,IAAAo1B,GAAS,QAATC,EAAbD,EAAe/4B,eAAO,IAAAg5B,OAAd,EAARA,EAAwBJ,UACnF/V,OAAQ,2BACR0W,MACoD,QAD/Cxc,EAAE3pB,EAAAA,QAAAA,cACUuQ,SAAa,QAALs1B,EAARt1B,EAAW,UAAE,IAAAs1B,GAAS,QAATC,EAAbD,EAAej5B,eAAO,IAAAk5B,OAAd,EAARA,EAAwBxa,mBAAW,IAAA3B,GAMhD,QANgDC,EAD7CD,EAEH7f,OAAO,CACP+f,SAAS,EACTC,SAAU,EACVC,cAAc,EACdC,cAAc,WACd,IAAAJ,OANgD,EAD7CA,EAQHK,eAEN,CAAChqB,IAAAA,cAAA,UAAQgK,MAAOsG,SAAa,QAALw1B,EAARx1B,EAAW,UAAE,IAAAw1B,GAAS,QAATC,EAAbD,EAAen5B,eAAO,IAAAo5B,OAAd,EAARA,EAAwB1a,WAAY,aAAY/a,SAAa,QAAL01B,EAAR11B,EAAW,UAAE,IAAA01B,GAAS,QAATC,EAAbD,EAAer5B,eAAO,IAAAs5B,OAAd,EAARA,EAAwB5a,cACzF,EACH8a,OAAQ,eAAAC,EAAAC,EAAA,IAAC,SAAE/1B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,mCAAoC,CAC5C7E,KAAMmC,IAAAA,IACC0I,SAAa,QAAL81B,EAAR91B,EAAW,UAAE,IAAA81B,GAAS,QAATC,EAAbD,EAAez5B,eAAO,IAAA05B,OAAd,EAARA,EAAwBlb,WAC5BthB,OAAOV,EAAAA,GAAAA,wBAAAA,eACVqmB,OAAQ,8BACR,GAEN,CACE8M,OAAQ,eAAAgK,EAAAC,EAAA,IAAC,SAAEj2B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,oCAAqC,CAC7CC,QAAS,CAAC,eAAgB+F,SAAa,QAALg2B,EAARh2B,EAAW,UAAE,IAAAg2B,GAAS,QAATC,EAAbD,EAAe35B,eAAO,IAAA45B,OAAd,EAARA,EAAwBhB,SAClD/V,OAAQ,gCACR,EACJ3iB,KAAM,eAAA25B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,SAAE72B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3ByJ,EAAAA,EAAAA,WACE,iCACA,CACEC,QAAS,CAAC,SAAS+F,SAAa,QAALk2B,EAARl2B,EAAW,UAAE,IAAAk2B,GAAS,QAATC,EAAbD,EAAe75B,eAAO,IAAA85B,OAAd,EAARA,EAAwBzb,kBAAkB1a,SAAa,QAALo2B,EAARp2B,EAAW,UAAE,IAAAo2B,GAAS,QAATC,EAAbD,EAAe/5B,eAAO,IAAAg6B,OAAd,EAARA,EAAwBpB,UACrF/V,OAAQ,6BACR0W,MACsD,QADjDU,EAAE7mC,EAAAA,QAAAA,cACUuQ,SAAa,QAALw2B,EAARx2B,EAAW,UAAE,IAAAw2B,GAAS,QAATC,EAAbD,EAAen6B,eAAO,IAAAo6B,OAAd,EAARA,EAAwB7b,qBAAa,IAAA0b,GAMlD,QANkDC,EAD/CD,EAEH/8B,OAAO,CACP+f,SAAS,EACTC,SAAU,EACVC,cAAc,EACdC,cAAc,WACd,IAAA8c,OANkD,EAD/CA,EAQH7c,eAEN,CAAChqB,IAAAA,cAAA,UAAQgK,MAAOsG,SAAa,QAAL02B,EAAR12B,EAAW,UAAE,IAAA02B,GAAS,QAATC,EAAbD,EAAer6B,eAAO,IAAAs6B,OAAd,EAARA,EAAwB/b,aAAc,aAAY5a,SAAa,QAAL42B,EAAR52B,EAAW,UAAE,IAAA42B,GAAS,QAATC,EAAbD,EAAev6B,eAAO,IAAAw6B,OAAd,EAARA,EAAwBjc,gBAC3F,EACHib,OAAQ,eAAAiB,EAAAC,EAAA,IAAC,SAAE/2B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,mCAAoC,CAC5C7E,KAAMmC,IAAAA,IACC0I,SAAa,QAAL82B,EAAR92B,EAAW,UAAE,IAAA82B,GAAS,QAATC,EAAbD,EAAez6B,eAAO,IAAA06B,OAAd,EAARA,EAAwBvc,aAC5BjhB,OAAOV,EAAAA,GAAAA,wBAAAA,eACVqmB,OAAQ,gCACR,IAGRiU,wBAAwB,EACxBhzB,gBAAiBA,KAAMnG,EAAAA,EAAAA,WAAU,8BAA+B,CAAEC,QAASO,EAAAA,GAAAA,QAC3EgG,gBAAiB,WAAmB,IAAAw2B,EAAAC,EAAA,IAAlB,KAAElsB,GAAMxa,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACd,IAAA2mC,EAAAC,EAAd,OAAIpsB,EAAO,EAEa,QADtBmsB,EAAOznC,EAAAA,QAAAA,cACUsb,UAAK,IAAAmsB,GAC6D,QAD7DC,EADfD,EAEH39B,OAAO,CAAE+f,SAAS,EAAMC,SAAU,EAAGC,cAAc,EAAMC,cAAc,WAAQ,IAAA0d,OAD7D,EADfA,EAGHzd,cAGgB,QADtBsd,EAAOvnC,EAAAA,QAAAA,cACUsb,UAAK,IAAAisB,GAC4D,QAD5DC,EADfD,EAEHz9B,OAAO,CAAE+f,SAAS,EAAMC,SAAU,EAAGC,cAAc,EAAMC,cAAc,WAAO,IAAAwd,OAD5D,EADfA,EAGHvd,aACN,GAEF2Z,qBAAsB,CACpB,CACEt/B,GAAIu/B,EAAAA,GAAAA,aACJtH,OAAQA,KAAMhyB,EAAAA,EAAAA,WAAU,6BAA8B,CAAEC,QAAS,CAAC,SAAUq5B,EAAAA,GAAAA,gBAC5ExG,KAAM,WAGK,IAFT,CAACwG,EAAAA,GAAAA,cAA+B1T,EAAc,CAAC,EAC/C,CAAC0T,EAAAA,GAAAA,cAA+BC,EAAc,CAAC,GAChDhjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEH,MAAQkjC,UAAWl2B,GAAa,GAAU,CAAC,EAE3C,GAAKg2B,UAAAA,EAAatkC,MAChB,OAAO2wB,aAAW,EAAXA,EAAa3wB,MAGtB,IAAIykC,EAAqB9T,EAAY3wB,OAASskC,EAAYtkC,MAe1D,OAbIsO,IACFm2B,EACEhkC,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR1U,KAAI,GAAAtH,OAAKnF,EAAAA,QAAAA,2BAAkC,wBAAAmF,OAAuB2+B,EAAYtkC,MAAK,MAElFykC,IAKAA,CACT,GAEF,CACE3/B,GAAIu/B,EAAAA,GAAAA,aACJ/E,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,UACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,WAA4BK,GAAUpjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAClDojC,aAAQ,EAARA,EAAU1kC,QAASS,IAAAA,cAACkkC,EAAAA,EAAU,CAACz+B,KAAMw+B,aAAQ,EAARA,EAAU1kC,SAAc,EAAE,EAClEs/B,UAAW,KAGfsF,wBAAyB,CACvB,CACE9/B,GAAIu/B,EAAAA,GAAAA,aACJxG,KAAM,WAIK,IAHT,CAACwG,EAAAA,GAAAA,cAA+B1T,EAAc,CAAC,EAC/C,CAAC0T,EAAAA,GAAAA,aAA8BQ,EAAa,CAAC,EAC7C,CAACR,EAAAA,GAAAA,kBAAmCS,EAAiB,CAAC,GACvDxjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEH,MAAQkjC,UAAWl2B,GAAa,GAAU,CAAC,EAE3C,IAAKu2B,EAAW7kC,MACd,OAAO2wB,EAAY3wB,MAGrB,IAAIykC,EAAqB9T,EAAY3wB,OAAS6kC,EAAW7kC,MAezD,OAbIsO,IACFm2B,EACEhkC,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR1U,KAAI,GAAAtH,OAAKnF,EAAAA,QAAAA,2BAAkC,wBAAAmF,OAAuBk/B,EAAW7kC,MAAK,MAEjF2wB,EAAY3wB,OAAS6kC,EAAW7kC,QAMrCS,IAAAA,cAACA,IAAAA,SAAc,KACZgkC,EAAoB,IACnBK,EAAe9kC,QACf+K,EAAAA,EAAAA,WAAU,4BAA6B,CAAEC,QAAS,iBAAkB+5B,MAAOD,aAAc,EAAdA,EAAgB9kC,OAAS,CAClGS,IAAAA,cAACukC,EAAAA,MAAO,CAAC1pB,MAAM,YAEjB,GAGR,EACAwgB,YAAY,GAEd,CACEh3B,GAAI++B,EAAAA,GAAAA,MACJhG,KAAMp+B,IAAA,IAAG,CAACokC,EAAAA,GAAAA,OAAmCsE,GAAO1oC,EAAA,MACzB,iBAAjB0oC,aAAK,EAALA,EAAOnoC,QAAsBsG,OAAO2W,WAAWkrB,aAAK,EAALA,EAAOnoC,OAAOooC,QAAQ,IAAO,IAAI,EAC1FtM,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAI++B,EAAAA,GAAAA,eACJhG,KAAM,eAAG,CAACgG,EAAAA,GAAAA,gBAA4CwE,GAAe/mC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MACvC,iBAAzB+mC,aAAa,EAAbA,EAAeroC,QAAsBsG,OAAO2W,WAAWorB,aAAa,EAAbA,EAAeroC,OAAOooC,QAAQ,IAAO,IAAI,EAC1GtM,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,UACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,WAA4BK,GAAUpjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAClDojC,aAAQ,EAARA,EAAU1kC,QAASS,IAAAA,cAACkkC,EAAAA,EAAU,CAACz+B,KAAMw+B,aAAQ,EAARA,EAAU1kC,SAAc,EAAE,EAClE87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,KAGf+F,yBAA0B,CACxBC,aAAc,eACZ,CAACjB,EAAAA,GAAAA,kBAAmCS,EAAiB,CAAC,EACtD,CAACT,EAAAA,GAAAA,aAA8Bv/B,GAChCxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAMwjC,EAAiB,GAAKhgC,QAAOtD,CAAS,GAEpDokC,sBAAuB,CACrB,CACE9gC,GAAI,gBACJwjC,aAAa,EACbxjB,SAAUxD,EAAAA,eAAAA,Q,mTCnQhB,MAAM6W,EAAe,YAEfjR,EAAY6b,EAAAA,GAAAA,kBAEZ9O,EAAe8O,EAAAA,GAAAA,kBAUfhM,EAAS,CACbgK,QAAS,CAACgC,EAAAA,GAAAA,kBAA+C,WACzD5K,eACAjR,YACA+M,eACA4C,YAAasB,EAAattB,cAC1Bm4B,eAAgBC,EAAAA,GAAAA,OAChBhC,OAAQ,OAAFt7B,OAASwyB,EAAY,KAAAxyB,OAAIuhB,GAC/BC,MAAO,CACL,CAACE,EAAAA,GAAAA,YAAsCzd,EAAAA,GAAAA,uBAAmC,WAAW5J,MAAM4I,UAAUw6B,cACrG,CAAC/b,EAAAA,GAAAA,UAAoCzd,EAAAA,GAAAA,uBAAmC,WAAW5J,MAAM8I,QAAQs6B,eAEnGC,gBAAiB,CACf,CAAChc,EAAAA,GAAAA,aAAuC9b,EAAAA,GAAAA,OAE1C+3B,oBAAqB,CACnB,CAACjc,EAAAA,GAAAA,MAAgCkc,EAAAA,GAAAA,UACjC,CAAClc,EAAAA,GAAAA,WAAqCmc,EAAAA,GAAAA,WACtC,CAACnc,EAAAA,GAAAA,OAAiC,IAClC,CAACA,EAAAA,GAAAA,QAAkC,GAErCuc,oBAAqB,CACnB,CACE3c,OAAQ4c,EAAAA,GAAAA,MACRjvB,KAAMmvB,EAAAA,qBAAAA,MACNlvB,OAAQmvB,EAAAA,qBAAAA,MACR1oB,MAAO0oB,EAAAA,qBAAAA,MACPvvB,UAAWE,EAAAA,iBAAAA,KACXO,WAAW,EACX/D,gBAAiB,eAAC,GAAErM,GAAIxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAKyJ,EAAAA,EAAAA,WAAU,8BAA+B,CAAEC,QAASlG,GAAK,IAG/Fm/B,qBAAsB,CACpBrb,MAAO,CACL,CACEmU,OAAQ,eAAA5hB,EAAA4qB,EAAA,IAAC,SAAEh1B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,oCAAqC,CAC7CC,QAAS,CAAC,aAAc+F,SAAa,QAALoK,EAARpK,EAAW,UAAE,IAAAoK,GAAS,QAAT4qB,EAAb5qB,EAAe/N,eAAO,IAAA24B,OAAd,EAARA,EAAwBC,SAChD/V,OAAQ,8BACR,EACJ3iB,KAAM,eAAA24B,EAAAC,EAAAC,EAAAC,EAAAjc,EAAAC,EAAAic,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,SAAE31B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3ByJ,EAAAA,EAAAA,WACE,iCACA,CACEC,QAAS,CAAC,SAAS+F,SAAa,QAALk1B,EAARl1B,EAAW,UAAE,IAAAk1B,GAAS,QAATC,EAAbD,EAAe74B,eAAO,IAAA84B,OAAd,EAARA,EAAwBra,gBAAgB9a,SAAa,QAALo1B,EAARp1B,EAAW,UAAE,IAAAo1B,GAAS,QAATC,EAAbD,EAAe/4B,eAAO,IAAAg5B,OAAd,EAARA,EAAwBJ,UACnF/V,OAAQ,2BACR0W,MACoD,QAD/Cxc,EAAE3pB,EAAAA,QAAAA,cACUuQ,SAAa,QAALs1B,EAARt1B,EAAW,UAAE,IAAAs1B,GAAS,QAATC,EAAbD,EAAej5B,eAAO,IAAAk5B,OAAd,EAARA,EAAwBxa,mBAAW,IAAA3B,GAMhD,QANgDC,EAD7CD,EAEH7f,OAAO,CACP+f,SAAS,EACTC,SAAU,EACVC,cAAc,EACdC,cAAc,WACd,IAAAJ,OANgD,EAD7CA,EAQHK,eAEN,CAAChqB,IAAAA,cAAA,UAAQgK,MAAOsG,SAAa,QAALw1B,EAARx1B,EAAW,UAAE,IAAAw1B,GAAS,QAATC,EAAbD,EAAen5B,eAAO,IAAAo5B,OAAd,EAARA,EAAwB1a,WAAY,aAAY/a,SAAa,QAAL01B,EAAR11B,EAAW,UAAE,IAAA01B,GAAS,QAATC,EAAbD,EAAer5B,eAAO,IAAAs5B,OAAd,EAARA,EAAwB5a,cACzF,EACH8a,OAAQ,eAAAC,EAAAC,EAAA,IAAC,SAAE/1B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,mCAAoC,CAC5C7E,KAAMmC,IAAAA,IACC0I,SAAa,QAAL81B,EAAR91B,EAAW,UAAE,IAAA81B,GAAS,QAATC,EAAbD,EAAez5B,eAAO,IAAA05B,OAAd,EAARA,EAAwBlb,WAC5BthB,OAAOV,EAAAA,GAAAA,wBAAAA,eACVqmB,OAAQ,8BACR,GAEN,CACE8M,OAAQ,eAAAgK,EAAAC,EAAA,IAAC,SAAEj2B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,oCAAqC,CAC7CC,QAAS,CAAC,eAAgB+F,SAAa,QAALg2B,EAARh2B,EAAW,UAAE,IAAAg2B,GAAS,QAATC,EAAbD,EAAe35B,eAAO,IAAA45B,OAAd,EAARA,EAAwBhB,SAClD/V,OAAQ,gCACR,EACJ3iB,KAAM,eAAA25B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,SAAE72B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3ByJ,EAAAA,EAAAA,WACE,iCACA,CACEC,QAAS,CAAC,SAAS+F,SAAa,QAALk2B,EAARl2B,EAAW,UAAE,IAAAk2B,GAAS,QAATC,EAAbD,EAAe75B,eAAO,IAAA85B,OAAd,EAARA,EAAwBzb,kBAAkB1a,SAAa,QAALo2B,EAARp2B,EAAW,UAAE,IAAAo2B,GAAS,QAATC,EAAbD,EAAe/5B,eAAO,IAAAg6B,OAAd,EAARA,EAAwBpB,UACrF/V,OAAQ,6BACR0W,MACsD,QADjDU,EAAE7mC,EAAAA,QAAAA,cACUuQ,SAAa,QAALw2B,EAARx2B,EAAW,UAAE,IAAAw2B,GAAS,QAATC,EAAbD,EAAen6B,eAAO,IAAAo6B,OAAd,EAARA,EAAwB7b,qBAAa,IAAA0b,GAMlD,QANkDC,EAD/CD,EAEH/8B,OAAO,CACP+f,SAAS,EACTC,SAAU,EACVC,cAAc,EACdC,cAAc,WACd,IAAA8c,OANkD,EAD/CA,EAQH7c,eAEN,CAAChqB,IAAAA,cAAA,UAAQgK,MAAOsG,SAAa,QAAL02B,EAAR12B,EAAW,UAAE,IAAA02B,GAAS,QAATC,EAAbD,EAAer6B,eAAO,IAAAs6B,OAAd,EAARA,EAAwB/b,aAAc,aAAY5a,SAAa,QAAL42B,EAAR52B,EAAW,UAAE,IAAA42B,GAAS,QAATC,EAAbD,EAAev6B,eAAO,IAAAw6B,OAAd,EAARA,EAAwBjc,gBAC3F,EACHib,OAAQ,eAAAiB,EAAAC,EAAA,IAAC,SAAE/2B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,mCAAoC,CAC5C7E,KAAMmC,IAAAA,IACC0I,SAAa,QAAL82B,EAAR92B,EAAW,UAAE,IAAA82B,GAAS,QAATC,EAAbD,EAAez6B,eAAO,IAAA06B,OAAd,EAARA,EAAwBvc,aAC5BjhB,OAAOV,EAAAA,GAAAA,wBAAAA,eACVqmB,OAAQ,gCACR,IAGRiU,wBAAwB,EACxBhzB,gBAAiBA,KAAMnG,EAAAA,EAAAA,WAAU,8BAA+B,CAAEC,QAASO,EAAAA,GAAAA,QAC3EgG,gBAAiB,WAAmB,IAAAw2B,EAAAC,EAAA,IAAlB,KAAElsB,GAAMxa,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACd,IAAA2mC,EAAAC,EAAd,OAAIpsB,EAAO,EAEa,QADtBmsB,EAAOznC,EAAAA,QAAAA,cACUsb,UAAK,IAAAmsB,GAC6D,QAD7DC,EADfD,EAEH39B,OAAO,CAAE+f,SAAS,EAAMC,SAAU,EAAGC,cAAc,EAAMC,cAAc,WAAQ,IAAA0d,OAD7D,EADfA,EAGHzd,cAGgB,QADtBsd,EAAOvnC,EAAAA,QAAAA,cACUsb,UAAK,IAAAisB,GAC4D,QAD5DC,EADfD,EAEHz9B,OAAO,CAAE+f,SAAS,EAAMC,SAAU,EAAGC,cAAc,EAAMC,cAAc,WAAO,IAAAwd,OAD5D,EADfA,EAGHvd,aACN,GAEF2Z,qBAAsB,CACpB,CACEt/B,GAAIu/B,EAAAA,GAAAA,aACJtH,OAAQA,KAAMhyB,EAAAA,EAAAA,WAAU,6BAA8B,CAAEC,QAAS,CAAC,SAAUq5B,EAAAA,GAAAA,gBAC5ExG,KAAM,WAGK,IAFT,CAACwG,EAAAA,GAAAA,cAA+B1T,EAAc,CAAC,EAC/C,CAAC0T,EAAAA,GAAAA,cAA+BC,EAAc,CAAC,GAChDhjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEH,MAAQkjC,UAAWl2B,GAAa,GAAU,CAAC,EAE3C,GAAKg2B,UAAAA,EAAatkC,MAChB,OAAO2wB,aAAW,EAAXA,EAAa3wB,MAGtB,IAAIykC,EAAqB9T,EAAY3wB,OAASskC,EAAYtkC,MAe1D,OAbIsO,IACFm2B,EACEhkC,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR1U,KAAI,GAAAtH,OAAKnF,EAAAA,QAAAA,2BAAkC,wBAAAmF,OAAuB2+B,EAAYtkC,MAAK,MAElFykC,IAKAA,CACT,GAEF,CACE3/B,GAAIu/B,EAAAA,GAAAA,aACJ/E,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,UACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,WAA4BK,GAAUpjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAClDojC,aAAQ,EAARA,EAAU1kC,QAASS,IAAAA,cAACkkC,EAAAA,EAAU,CAACz+B,KAAMw+B,aAAQ,EAARA,EAAU1kC,SAAc,EAAE,EAClEs/B,UAAW,KAGfsF,wBAAyB,CACvB,CACE9/B,GAAIu/B,EAAAA,GAAAA,aACJxG,KAAM,WAIK,IAHT,CAACwG,EAAAA,GAAAA,cAA+B1T,EAAc,CAAC,EAC/C,CAAC0T,EAAAA,GAAAA,aAA8BQ,EAAa,CAAC,EAC7C,CAACR,EAAAA,GAAAA,kBAAmCS,EAAiB,CAAC,GACvDxjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEH,MAAQkjC,UAAWl2B,GAAa,GAAU,CAAC,EAE3C,IAAKu2B,EAAW7kC,MACd,OAAO2wB,EAAY3wB,MAGrB,IAAIykC,EAAqB9T,EAAY3wB,OAAS6kC,EAAW7kC,MAezD,OAbIsO,IACFm2B,EACEhkC,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR1U,KAAI,GAAAtH,OAAKnF,EAAAA,QAAAA,2BAAkC,wBAAAmF,OAAuBk/B,EAAW7kC,MAAK,MAEjF2wB,EAAY3wB,OAAS6kC,EAAW7kC,QAMrCS,IAAAA,cAACA,IAAAA,SAAc,KACZgkC,EAAoB,IACnBK,EAAe9kC,QACf+K,EAAAA,EAAAA,WAAU,4BAA6B,CAAEC,QAAS,iBAAkB+5B,MAAOD,aAAc,EAAdA,EAAgB9kC,OAAS,CAClGS,IAAAA,cAACukC,EAAAA,MAAO,CAAC1pB,MAAM,YAEjB,GAGR,EACAwgB,YAAY,GAEd,CACEh3B,GAAI++B,EAAAA,GAAAA,MACJhG,KAAM,eAAG,CAACgG,EAAAA,GAAAA,OAAmCsE,GAAO7mC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MAC9B,iBAAjB6mC,aAAK,EAALA,EAAOnoC,QAAsBsG,OAAO2W,WAAWkrB,aAAK,EAALA,EAAOnoC,OAAOooC,QAAQ,IAAO,IAAI,EAC1FtM,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,UACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,WAA4BK,GAAUpjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAClDojC,aAAQ,EAARA,EAAU1kC,QAASS,IAAAA,cAACkkC,EAAAA,EAAU,CAACz+B,KAAMw+B,aAAQ,EAARA,EAAU1kC,SAAc,EAAE,EAClE87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,KAGf+F,yBAA0B,CACxBC,aAAc,eACZ,CAACjB,EAAAA,GAAAA,kBAAmCS,EAAiB,CAAC,EACtD,CAACT,EAAAA,GAAAA,aAA8Bv/B,GAChCxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAMwjC,EAAiB,GAAKhgC,QAAOtD,CAAS,GAEpDokC,sBAAuB,CACrB,CACE9gC,GAAI,gBACJwjC,aAAa,EACbxjB,SAAUxD,EAAAA,eAAAA,Q,mTC5OhB,MAAM6W,EAAe4K,EAAAA,GAAAA,MAEf7b,EAAY6b,EAAAA,GAAAA,MAEZ9O,EAAe8O,EAAAA,GAAAA,MAEfhM,EAAS,CACbgK,QAAS,CAAC,WAAY,UAAW,WAAY,aAAc,OAC3D5I,eACAjR,YACA+M,eACA4C,YAAasB,EAAattB,cAC1Bm4B,eAAgBC,EAAAA,GAAAA,OAChBhC,OAAQ,OAAFt7B,OAASwyB,GACfhR,MAAO,CACL,CAACE,EAAAA,GAAAA,YAAsCzd,EAAAA,GAAAA,uBAAmC,WAAW5J,MAAM4I,UAAUw6B,cACrG,CAAC/b,EAAAA,GAAAA,UAAoCzd,EAAAA,GAAAA,uBAAmC,WAAW5J,MAAM8I,QAAQs6B,eAEnGC,gBAAiB,CACf,CAAChc,EAAAA,GAAAA,aAAuC9b,EAAAA,GAAAA,OAE1C+3B,oBAAqB,CACnB,CAACjc,EAAAA,GAAAA,MAAgCkhB,EAAAA,GAAAA,UACjC,CAAClhB,EAAAA,GAAAA,WAAqCmc,EAAAA,GAAAA,WACtC,CAACnc,EAAAA,GAAAA,OAAiC,IAClC,CAACA,EAAAA,GAAAA,QAAkC,GAErCoc,4BAA6B,CAC3B,CAACpc,EAAAA,GAAAA,MAAgCmhB,EAAAA,GAAAA,gBACjC,CAACnhB,EAAAA,GAAAA,WAAqCmc,EAAAA,GAAAA,WACtC,CAACnc,EAAAA,GAAAA,OAAiC,IAClC,CAACA,EAAAA,GAAAA,QAAkC,GAErCuc,oBAAqB,CACnB,CACE3c,OAAQ4c,EAAAA,GAAAA,MACRjvB,KAAMmvB,EAAAA,qBAAAA,MACNlvB,OAAQmvB,EAAAA,qBAAAA,MACR1oB,MAAO0oB,EAAAA,qBAAAA,MACPvvB,UAAWE,EAAAA,iBAAAA,KACXO,WAAW,EACX/D,gBAAiB,eAAC,GAAErM,GAAIxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAKyJ,EAAAA,EAAAA,WAAU,8BAA+B,CAAEC,QAASlG,GAAK,IAG/Fm/B,qBAAsB,CACpBrb,MAAO,CACL,CACEmU,OAAQ,eAAA5hB,EAAA4qB,EAAA,IAAC,SAAEh1B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,oCAAqC,CAC7CC,QAAS,CAAC,aAAc+F,SAAa,QAALoK,EAARpK,EAAW,UAAE,IAAAoK,GAAS,QAAT4qB,EAAb5qB,EAAe/N,eAAO,IAAA24B,OAAd,EAARA,EAAwBC,SAChD/V,OAAQ,8BACR,EACJ3iB,KAAM,eAAA24B,EAAAC,EAAAC,EAAAC,EAAAjc,EAAAC,EAAAic,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,SAAE31B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3ByJ,EAAAA,EAAAA,WACE,iCACA,CACEC,QAAS,CAAC,SAAS+F,SAAa,QAALk1B,EAARl1B,EAAW,UAAE,IAAAk1B,GAAS,QAATC,EAAbD,EAAe74B,eAAO,IAAA84B,OAAd,EAARA,EAAwBra,gBAAgB9a,SAAa,QAALo1B,EAARp1B,EAAW,UAAE,IAAAo1B,GAAS,QAATC,EAAbD,EAAe/4B,eAAO,IAAAg5B,OAAd,EAARA,EAAwBJ,UACnF/V,OAAQ,2BACR0W,MACoD,QAD/Cxc,EAAE3pB,EAAAA,QAAAA,cACUuQ,SAAa,QAALs1B,EAARt1B,EAAW,UAAE,IAAAs1B,GAAS,QAATC,EAAbD,EAAej5B,eAAO,IAAAk5B,OAAd,EAARA,EAAwBxa,mBAAW,IAAA3B,GAMhD,QANgDC,EAD7CD,EAEH7f,OAAO,CACP+f,SAAS,EACTC,SAAU,EACVC,cAAc,EACdC,cAAc,WACd,IAAAJ,OANgD,EAD7CA,EAQHK,eAEN,CAAChqB,IAAAA,cAAA,UAAQgK,MAAOsG,SAAa,QAALw1B,EAARx1B,EAAW,UAAE,IAAAw1B,GAAS,QAATC,EAAbD,EAAen5B,eAAO,IAAAo5B,OAAd,EAARA,EAAwB1a,WAAY,aAAY/a,SAAa,QAAL01B,EAAR11B,EAAW,UAAE,IAAA01B,GAAS,QAATC,EAAbD,EAAer5B,eAAO,IAAAs5B,OAAd,EAARA,EAAwB5a,cACzF,EACH8a,OAAQ,eAAAC,EAAAC,EAAA,IAAC,SAAE/1B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,mCAAoC,CAC5C7E,KAAMmC,IAAAA,IACC0I,SAAa,QAAL81B,EAAR91B,EAAW,UAAE,IAAA81B,GAAS,QAATC,EAAbD,EAAez5B,eAAO,IAAA05B,OAAd,EAARA,EAAwBlb,WAC5BthB,OAAOV,EAAAA,GAAAA,wBAAAA,eACVqmB,OAAQ,8BACR,GAEN,CACE8M,OAAQ,eAAAgK,EAAAC,EAAA,IAAC,SAAEj2B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,oCAAqC,CAC7CC,QAAS,CAAC,eAAgB+F,SAAa,QAALg2B,EAARh2B,EAAW,UAAE,IAAAg2B,GAAS,QAATC,EAAbD,EAAe35B,eAAO,IAAA45B,OAAd,EAARA,EAAwBhB,SAClD/V,OAAQ,gCACR,EACJ3iB,KAAM,eAAA25B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,SAAE72B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3ByJ,EAAAA,EAAAA,WACE,iCACA,CACEC,QAAS,CAAC,SAAS+F,SAAa,QAALk2B,EAARl2B,EAAW,UAAE,IAAAk2B,GAAS,QAATC,EAAbD,EAAe75B,eAAO,IAAA85B,OAAd,EAARA,EAAwBzb,kBAAkB1a,SAAa,QAALo2B,EAARp2B,EAAW,UAAE,IAAAo2B,GAAS,QAATC,EAAbD,EAAe/5B,eAAO,IAAAg6B,OAAd,EAARA,EAAwBpB,UACrF/V,OAAQ,6BACR0W,MACsD,QADjDU,EAAE7mC,EAAAA,QAAAA,cACUuQ,SAAa,QAALw2B,EAARx2B,EAAW,UAAE,IAAAw2B,GAAS,QAATC,EAAbD,EAAen6B,eAAO,IAAAo6B,OAAd,EAARA,EAAwB7b,qBAAa,IAAA0b,GAMlD,QANkDC,EAD/CD,EAEH/8B,OAAO,CACP+f,SAAS,EACTC,SAAU,EACVC,cAAc,EACdC,cAAc,WACd,IAAA8c,OANkD,EAD/CA,EAQH7c,eAEN,CAAChqB,IAAAA,cAAA,UAAQgK,MAAOsG,SAAa,QAAL02B,EAAR12B,EAAW,UAAE,IAAA02B,GAAS,QAATC,EAAbD,EAAer6B,eAAO,IAAAs6B,OAAd,EAARA,EAAwB/b,aAAc,aAAY5a,SAAa,QAAL42B,EAAR52B,EAAW,UAAE,IAAA42B,GAAS,QAATC,EAAbD,EAAev6B,eAAO,IAAAw6B,OAAd,EAARA,EAAwBjc,gBAC3F,EACHib,OAAQ,eAAAiB,EAAAC,EAAA,IAAC,SAAE/2B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,mCAAoC,CAC5C7E,KAAMmC,IAAAA,IACC0I,SAAa,QAAL82B,EAAR92B,EAAW,UAAE,IAAA82B,GAAS,QAATC,EAAbD,EAAez6B,eAAO,IAAA06B,OAAd,EAARA,EAAwBvc,aAC5BjhB,OAAOV,EAAAA,GAAAA,wBAAAA,eACVqmB,OAAQ,gCACR,IAGRiU,wBAAwB,EACxBhzB,gBAAiBA,KAAMnG,EAAAA,EAAAA,WAAU,8BAA+B,CAAEC,QAASO,EAAAA,GAAAA,QAC3EgG,gBAAiB,WAAmB,IAAAw2B,EAAAC,EAAA,IAAlB,KAAElsB,GAAMxa,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACd,IAAA2mC,EAAAC,EAAd,OAAIpsB,EAAO,EAEa,QADtBmsB,EAAOznC,EAAAA,QAAAA,cACUsb,UAAK,IAAAmsB,GAC6D,QAD7DC,EADfD,EAEH39B,OAAO,CAAE+f,SAAS,EAAMC,SAAU,EAAGC,cAAc,EAAMC,cAAc,WAAQ,IAAA0d,OAD7D,EADfA,EAGHzd,cAGgB,QADtBsd,EAAOvnC,EAAAA,QAAAA,cACUsb,UAAK,IAAAisB,GAC4D,QAD5DC,EADfD,EAEHz9B,OAAO,CAAE+f,SAAS,EAAMC,SAAU,EAAGC,cAAc,EAAMC,cAAc,WAAO,IAAAwd,OAD5D,EADfA,EAGHvd,aACN,GAEFma,wBAAyB,CACvB,CACE9/B,GAAIu/B,EAAAA,GAAAA,aACJxG,KAAMA,CAAAp+B,EAEJ8kC,KACG,IAFD,CAACF,EAAAA,GAAAA,cAA+B1T,EAAc,CAAC,EAAG,CAAC0T,EAAAA,GAAAA,aAA8BQ,EAAa,CAAC,GAAGplC,EAGpG,MAAQ+kC,UAAWl2B,IAAei2B,aAAO,EAAPA,EAASj2B,aAAc,CAAC,EAE1D,IAAKu2B,EAAW7kC,MACd,OAAO2wB,EAAY3wB,MAGrB,IAAIykC,EAAqB9T,EAAY3wB,OAAS6kC,EAAW7kC,MAezD,OAbIsO,IACFm2B,EACEhkC,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR1U,KAAI,GAAAtH,OAAKnF,EAAAA,QAAAA,2BAAkC,iDAAAmF,OAAgDk/B,EAAW7kC,QAErG2wB,EAAY3wB,OAAS6kC,EAAW7kC,QAKhCykC,CAAkB,EAE3B3I,YAAY,GAEd,CACEh3B,GAAIu/B,EAAAA,GAAAA,iBACJxG,KAAM39B,IAAA,IAAG,CAACmkC,EAAAA,GAAAA,kBAAmCoE,GAAUvoC,EAAA,OACrD6K,EAAAA,EAAAA,WAAU,6BAADpF,OAA8B0+B,EAAAA,GAAAA,kBAAoC,CACzEr5B,SAASy9B,aAAQ,EAARA,EAAUzoC,QAAS,QAC5B,EACJ87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAI++B,EAAAA,GAAAA,MACJhG,KAAMp4B,IAAA,IAAAijC,EAAA,IAAG,CAAC7E,EAAAA,GAAAA,OAAmC8C,GAAOlhC,EAAA,OAClDsF,EAAAA,EAAAA,WAAU,kCAAmC,CAC3CC,QAAS64B,EAAAA,GAAAA,MACT8C,OAA0C,QAAnC+B,EAAAloC,EAAAA,QAAAA,cAAsBmmC,aAAK,EAALA,EAAO3mC,cAAM,IAAA0oC,OAAA,EAAnCA,EAAqCp+B,OAAO,CAAEggB,SAAU,EAAGC,cAAc,MAAW,GAC3F,EACJuR,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,UACJxG,KAAMn4B,IAAA,IAAG,CAAC2+B,EAAAA,GAAAA,WAA4BK,GAAUh/B,EAAA,OAC7Cg/B,aAAQ,EAARA,EAAU1kC,QAASS,IAAAA,cAACkkC,EAAAA,EAAU,CAACz+B,KAAMw+B,aAAQ,EAARA,EAAU1kC,SAAc,EAAE,EAClE87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,KAGf+F,yBAA0B,CACxBC,aAAc,eACZ,CAACjB,EAAAA,GAAAA,kBAAmCS,EAAiB,CAAC,EACtD,CAACT,EAAAA,GAAAA,aAA8Bv/B,GAChCxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAMwjC,EAAiB,GAAKhgC,QAAOtD,CAAS,GAEpD+jC,qCAAsC,CACpC,CACEzgC,GAAI0gC,EAAAA,GAAAA,aACJ1J,YAAY,EACZsJ,aAAa,GAEf,CACEtgC,GAAI0gC,EAAAA,GAAAA,iBACJ3H,KAAM1R,IAAA,IAAG,CAACqZ,EAAAA,GAAAA,kBAAiDiD,GAAUtc,EAAA,OACnEphB,EAAAA,EAAAA,WAAU,4BAA6B,CACrCC,QAAS,CAACw6B,EAAAA,GAAAA,kBAAgDiD,aAAQ,EAARA,EAAUzoC,QAAS,SAC7E,EACJ87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAI0gC,EAAAA,GAAAA,cACJ1J,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAI0gC,EAAAA,GAAAA,SACJ1J,YAAY,EACZwD,UAAW,GACX8F,aAAa,GAEf,CACEtgC,GAAI6jC,EAAAA,GAAAA,kBACJ9K,KAAM,SAACx9B,EAAMkkC,GAAO,IAAI,CAACoE,EAAAA,GAAAA,mBAAuDC,GAAkBtnC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACrGyJ,EAAAA,EAAAA,WAAU,6BAADpF,OAA8BgjC,EAAAA,GAAAA,mBAAwD,CAC7F39B,QAAS49B,GAAoBxa,EAAAA,eAC7B,EACJ0N,YAAY,EACZwD,UAAW,GACX8F,aAAa,GAEf,CACEtgC,GAAI0gC,EAAAA,GAAAA,gBACJ3H,KAAM,eAAG,CAAC2H,EAAAA,GAAAA,iBAAgDG,GAAerkC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3EqkC,aAAa,EAAbA,EAAe3lC,QACdQ,EAAAA,QAAAA,OAAemlC,aAAa,EAAbA,EAAe3lC,QAC9BqI,IAAAA,IAAWs9B,aAAa,EAAbA,EAAe3lC,OAAOsK,OAAO,eAC1C,EAAE,EACJwxB,YAAY,EACZsJ,aAAa,EACb9F,UAAW,KAGfsG,sBAAuB,CACrB,CACE9gC,GAAIuiB,EAAAA,GAAAA,kBAEN,CACEviB,GAAI,gBACJwjC,aAAa,EACbxjB,SAAUxD,EAAAA,eAAAA,Q,uUCjPhB,MAAM6W,EAAe,OAEfjR,EAAY6b,EAAAA,GAAAA,SAEZ9O,EAAe8O,EAAAA,GAAAA,KAUfhM,EAAS,CACbgK,QAAS,CAAC,WAAY,aAAc,QAAS,KAAM,MAAO,MAAO,SACjE5I,eACAjR,YACA+M,eACA4C,YAAasB,EAAattB,cAC1Bm4B,eAAgBC,EAAAA,GAAAA,SAChBhC,OAAQ,OAAFt7B,OAASwyB,GACf6I,gBAAiB,IAAI99B,OAAOwR,OAAOm0B,EAAAA,KACnC1hB,MAAO,CACL,CAACE,EAAAA,GAAAA,KAA+B8b,EAAAA,GAAAA,QAChC,CAAC9b,EAAAA,GAAAA,YAAsCzd,EAAAA,GAAAA,kBAClB2B,EAAAA,GAAAA,OAClB3C,UAAUw6B,cACb,CAAC/b,EAAAA,GAAAA,UAAoCzd,EAAAA,GAAAA,kBAA8B2B,EAAAA,GAAAA,OAAyBzC,QAAQs6B,eAEtGC,gBAAiB,CACf,CAAChc,EAAAA,GAAAA,aAAuC9b,EAAAA,GAAAA,OAE1C+3B,oBAAqB,CACnB,CAACjc,EAAAA,GAAAA,MAAgCkc,EAAAA,GAAAA,UACjC,CAAClc,EAAAA,GAAAA,WAAqCmc,EAAAA,GAAAA,WACtC,CAACnc,EAAAA,GAAAA,OAAiC,IAClC,CAACA,EAAAA,GAAAA,QAAkC,GAErCoc,4BAA6B,CAC3B,CAACpc,EAAAA,GAAAA,MAAgCqc,EAAAA,GAAAA,gBACjC,CAACrc,EAAAA,GAAAA,WAAqCmc,EAAAA,GAAAA,WACtC,CAACnc,EAAAA,GAAAA,OAAiC,IAClC,CAACA,EAAAA,GAAAA,QAAkC,GAErCuc,oBAAqB,CACnB,CACEnc,QAAS,CACP,CACER,OAAQ4c,EAAAA,GAAAA,QACRjvB,KAAMmvB,EAAAA,qBAAAA,MACNlvB,OAAQmvB,EAAAA,qBAAAA,MACR1oB,MAAO0oB,EAAAA,qBAAAA,MACP7c,MAAO,CACL,CAACE,EAAAA,GAAAA,UAAoCkF,EAAAA,GAAAA,WAGzC,CACEtF,OAAQ4c,EAAAA,GAAAA,QACRjvB,KAAMixB,EAAAA,qBAAAA,MACNhxB,OAAQixB,EAAAA,qBAAAA,MACRxqB,MAAOwqB,EAAAA,qBAAAA,MACP3e,MAAO,CACL,CAACE,EAAAA,GAAAA,UAAoCkF,EAAAA,GAAAA,UAGzC,CACEtF,OAAQ4c,EAAAA,GAAAA,QACRjvB,KAAMk0B,EAAAA,uBAAAA,MACNj0B,OAAQk0B,EAAAA,uBAAAA,MACRztB,MAAOytB,EAAAA,uBAAAA,MACP5hB,MAAO,CACL,CAACE,EAAAA,GAAAA,UAAoCkF,EAAAA,GAAAA,QAGzC,CACEtF,OAAQ4c,EAAAA,GAAAA,QACRjvB,KAAMo0B,EAAAA,uBAAAA,MACNn0B,OAAQo0B,EAAAA,uBAAAA,MACR3tB,MAAO2tB,EAAAA,uBAAAA,MACP9hB,MAAO,CACL,CAACE,EAAAA,GAAAA,UAAoCkF,EAAAA,GAAAA,aAGzC,CACEtF,OAAQ4c,EAAAA,GAAAA,QACRpvB,UAAWE,EAAAA,iBAAAA,cAKnBsvB,qBAAsB,CACpBiF,uBAAuB,EACvB/E,QAAS,CACP,CACEr/B,GAAIuiB,EAAAA,GAAAA,YACJvC,SAAUxD,EAAAA,eAAAA,SAIhB8iB,qBAAsB,CACpB,CACEt/B,GAAIu/B,EAAAA,GAAAA,aACJtH,OAAQA,KAAMhyB,EAAAA,EAAAA,WAAU,6BAA8B,CAAEC,QAAS,CAAC,SAAUq5B,EAAAA,GAAAA,gBAC5ExG,KAAM,WAGD,IAFD,CAACwG,EAAAA,GAAAA,cAA+B1T,EAAc,CAAC,EAAG,CAAC0T,EAAAA,GAAAA,cAA+BC,EAAc,CAAC,GAAGhjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1GijC,EAAOjjC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEP,MAAQgjC,UAAWl2B,IAAei2B,aAAO,EAAPA,EAASj2B,aAAc,CAAC,EAE1D,GAAKg2B,UAAAA,EAAatkC,MAChB,OAAO2wB,aAAW,EAAXA,EAAa3wB,MAGtB,IAAIykC,EAAqB9T,EAAY3wB,OAASskC,EAAYtkC,MAe1D,OAbIsO,IACFm2B,EACEhkC,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR1U,KAAI,GAAAtH,OAAKnF,EAAAA,QAAAA,2BAAkC,wBAAAmF,OAAuB2+B,EAAYtkC,MAAK,MAElFykC,IAKAA,CACT,GAEF,CACE3/B,GAAIu/B,EAAAA,GAAAA,aACJ/E,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,UACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,WAA4BK,GAAUpjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAClDojC,aAAQ,EAARA,EAAU1kC,QAASS,IAAAA,cAACkkC,EAAAA,EAAU,CAACz+B,KAAMw+B,aAAQ,EAARA,EAAU1kC,SAAc,EAAE,EAClEs/B,UAAW,KAGfsF,wBAAyB,CACvB,CACE9/B,GAAIu/B,EAAAA,GAAAA,aACJxG,KAAMA,CAAAp+B,EAEJ8kC,KACG,IAFD,CAACF,EAAAA,GAAAA,cAA+B1T,EAAc,CAAC,EAAG,CAAC0T,EAAAA,GAAAA,aAA8BQ,EAAa,CAAC,GAAGplC,EAGpG,MAAQ+kC,UAAWl2B,IAAei2B,aAAO,EAAPA,EAASj2B,aAAc,CAAC,EAE1D,IAAKu2B,EAAW7kC,MACd,OAAO2wB,EAAY3wB,MAGrB,IAAIykC,EAAqB9T,EAAY3wB,OAAS6kC,EAAW7kC,MAezD,OAbIsO,IACFm2B,EACEhkC,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR1U,KAAI,GAAAtH,OAAKnF,EAAAA,QAAAA,2BAAkC,wBAAAmF,OAAuBk/B,EAAW7kC,MAAK,MAEjFykC,IAKAA,CAAkB,EAE3B3I,YAAY,GAEd,CACEh3B,GAAIu/B,EAAAA,GAAAA,iBACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,kBAAmCS,GAAgBxjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAKwjC,aAAc,EAAdA,EAAgB9kC,QAAS,IAAI,EACpG87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,SACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,gBAAiC8E,EAAe,CAAC9E,EAAAA,GAAAA,UAA2B+E,GAAU9nC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACnGb,IAAAA,cAACA,IAAAA,SAAc,MACZsK,EAAAA,EAAAA,WAAU,4BAA6B,CAAEC,QAAS,CAACq5B,EAAAA,GAAAA,SAA0B+E,aAAQ,EAARA,EAAUppC,SAAW,KACjGmpC,aAAa,EAAbA,EAAenpC,QACfS,IAAAA,cAACukC,EAAAA,MAAO,CAAC1pB,MAAM,WACZvQ,EAAAA,EAAAA,WAAU,4BAA6B,CACtCC,QAAS,CAACq5B,EAAAA,GAAAA,eAAgC8E,aAAa,EAAbA,EAAenpC,WAI7D,GACa,EAEnB87B,YAAY,EACZwD,UAAW,IAEb,CACEx6B,GAAI++B,EAAAA,GAAAA,QACJhG,KAAM,eAAG,CAACgG,EAAAA,GAAAA,SAAqCwF,GAAS/nC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAK+nC,aAAO,EAAPA,EAASrpC,QAAS,IAAI,EACxF87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,UACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,WAA4BK,GAAUpjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAClDojC,aAAQ,EAARA,EAAU1kC,QAASS,IAAAA,cAACkkC,EAAAA,EAAU,CAACz+B,KAAMw+B,aAAQ,EAARA,EAAU1kC,SAAc,EAAE,EAClE87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,KAGf+F,yBAA0B,CACxBC,aAAc,eACZ,CAACjB,EAAAA,GAAAA,kBAAmCS,EAAiB,CAAC,EACtD,CAACT,EAAAA,GAAAA,aAA8Bv/B,GAChCxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAMwjC,EAAiB,GAAKhgC,QAAOtD,CAAS,GAEpD+jC,qCAAsC,CACpC,CACEzgC,GAAI0gC,EAAAA,GAAAA,aACJ1J,YAAY,EACZsJ,aAAa,GAEf,CACEtgC,GAAI0gC,EAAAA,GAAAA,cACJ1J,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAI0gC,EAAAA,GAAAA,SACJ1J,YAAY,EACZwD,UAAW,GACX8F,aAAa,GAEf,CACEtgC,GAAI0gC,EAAAA,GAAAA,eACJzI,OAAQ,eAAG,CAACyI,EAAAA,GAAAA,KAAoCN,GAAK5jC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACxDyJ,EAAAA,EAAAA,WAAU,6BAA8B,CAAEC,QAAS,CAAC,gBAAiBk6B,aAAG,EAAHA,EAAKllC,QAAS,EACrF69B,KAAM,WAIK,IAHT,CAAC2H,EAAAA,GAAAA,uBAAsDC,EACvD,CAACD,EAAAA,GAAAA,gBAA+CE,EAChD,CAACF,EAAAA,GAAAA,KAAoCN,GACtC5jC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACH,IAAmC,KAA/BmkC,aAAmB,EAAnBA,EAAqBzlC,OAAgB,CACvC,MAAM6S,GAAU9H,EAAAA,EAAAA,WAAU,6BAADpF,OACM6/B,EAAAA,GAAAA,uBAC7B,CAAEx6B,QAASk6B,aAAG,EAAHA,EAAKllC,QAElB,OACES,IAAAA,cAAC8+B,EAAAA,QAAO,CAAC1sB,QAASA,GAChBpS,IAAAA,cAACyc,EAAAA,UAAS,CAACC,OAAO,WAAW,aAAYtK,IAG/C,CACA,OAAO6yB,aAAa,EAAbA,EAAe1lC,KACxB,EACA87B,YAAY,EACZwD,UAAW,GACX8F,aAAa,GAEf,CACEtgC,GAAI0gC,EAAAA,GAAAA,gBACJ3H,KAAM,eAAG,CAAC2H,EAAAA,GAAAA,iBAAgDG,GAAerkC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3EqkC,aAAa,EAAbA,EAAe3lC,QAASqI,IAAAA,IAAWs9B,aAAa,EAAbA,EAAe3lC,OAAOsK,OAAO,eAAkB,EAAE,EACvFwxB,YAAY,EACZsJ,aAAa,EACb9F,UAAW,KAGfsG,sBAAuB,CACrB,CACE9gC,GAAIuiB,EAAAA,GAAAA,KAEN,CACEviB,GAAIuiB,EAAAA,GAAAA,MACJ5E,UAAU,GAEZ,CACE3d,GAAIuiB,EAAAA,GAAAA,W,mTC3SV,MAAM8Q,EAAe4K,EAAAA,GAAAA,MAEf7b,EAAY6b,EAAAA,GAAAA,MAEZ9O,EAAe8O,EAAAA,GAAAA,MAEfhM,EAAS,CACbgK,QAAS,CAAC,uBAAwB,OAAQ,UAAW,OACrD5I,eACAjR,YACA+M,eACA4C,YAAasB,EAAattB,cAC1Bm4B,eAAgBC,EAAAA,GAAAA,OAChBhC,OAAQ,OAAFt7B,OAASwyB,GACfhR,MAAO,CACL,CAACE,EAAAA,GAAAA,YAAsCzd,EAAAA,GAAAA,uBAAmC,WAAW5J,MAAM4I,UAAUw6B,cACrG,CAAC/b,EAAAA,GAAAA,UAAoCzd,EAAAA,GAAAA,uBAAmC,WAAW5J,MAAM8I,QAAQs6B,eAEnGC,gBAAiB,CACf,CAAChc,EAAAA,GAAAA,aAAuC9b,EAAAA,GAAAA,OAE1C+3B,oBAAqB,CACnB,CAACjc,EAAAA,GAAAA,MAAgCkhB,EAAAA,GAAAA,UACjC,CAAClhB,EAAAA,GAAAA,WAAqCmc,EAAAA,GAAAA,WACtC,CAACnc,EAAAA,GAAAA,OAAiC,IAClC,CAACA,EAAAA,GAAAA,QAAkC,GAErCoc,4BAA6B,CAC3B,CAACpc,EAAAA,GAAAA,MAAgCmhB,EAAAA,GAAAA,gBACjC,CAACnhB,EAAAA,GAAAA,WAAqCmc,EAAAA,GAAAA,WACtC,CAACnc,EAAAA,GAAAA,OAAiC,IAClC,CAACA,EAAAA,GAAAA,QAAkC,GAErCuc,oBAAqB,CACnB,CACE3c,OAAQ4c,EAAAA,GAAAA,MACRjvB,KAAMmvB,EAAAA,qBAAAA,MACNlvB,OAAQmvB,EAAAA,qBAAAA,MACR1oB,MAAO0oB,EAAAA,qBAAAA,MACPvvB,UAAWE,EAAAA,iBAAAA,KACXO,WAAW,EACX/D,gBAAiB,eAAC,GAAErM,GAAIxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAKyJ,EAAAA,EAAAA,WAAU,8BAA+B,CAAEC,QAASlG,GAAK,IAG/Fm/B,qBAAsB,CACpBrb,MAAO,CACL,CACEmU,OAAQ,eAAA5hB,EAAA4qB,EAAA,IAAC,SAAEh1B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,oCAAqC,CAC7CC,QAAS,CAAC,aAAc+F,SAAa,QAALoK,EAARpK,EAAW,UAAE,IAAAoK,GAAS,QAAT4qB,EAAb5qB,EAAe/N,eAAO,IAAA24B,OAAd,EAARA,EAAwBC,SAChD/V,OAAQ,8BACR,EACJ3iB,KAAM,eAAA24B,EAAAC,EAAAC,EAAAC,EAAAjc,EAAAC,EAAAic,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,SAAE31B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3ByJ,EAAAA,EAAAA,WACE,iCACA,CACEC,QAAS,CAAC,SAAS+F,SAAa,QAALk1B,EAARl1B,EAAW,UAAE,IAAAk1B,GAAS,QAATC,EAAbD,EAAe74B,eAAO,IAAA84B,OAAd,EAARA,EAAwBra,gBAAgB9a,SAAa,QAALo1B,EAARp1B,EAAW,UAAE,IAAAo1B,GAAS,QAATC,EAAbD,EAAe/4B,eAAO,IAAAg5B,OAAd,EAARA,EAAwBJ,UACnF/V,OAAQ,2BACR0W,MACoD,QAD/Cxc,EAAE3pB,EAAAA,QAAAA,cACUuQ,SAAa,QAALs1B,EAARt1B,EAAW,UAAE,IAAAs1B,GAAS,QAATC,EAAbD,EAAej5B,eAAO,IAAAk5B,OAAd,EAARA,EAAwBxa,mBAAW,IAAA3B,GAMhD,QANgDC,EAD7CD,EAEH7f,OAAO,CACP+f,SAAS,EACTC,SAAU,EACVC,cAAc,EACdC,cAAc,WACd,IAAAJ,OANgD,EAD7CA,EAQHK,eAEN,CAAChqB,IAAAA,cAAA,UAAQgK,MAAOsG,SAAa,QAALw1B,EAARx1B,EAAW,UAAE,IAAAw1B,GAAS,QAATC,EAAbD,EAAen5B,eAAO,IAAAo5B,OAAd,EAARA,EAAwB1a,WAAY,aAAY/a,SAAa,QAAL01B,EAAR11B,EAAW,UAAE,IAAA01B,GAAS,QAATC,EAAbD,EAAer5B,eAAO,IAAAs5B,OAAd,EAARA,EAAwB5a,cACzF,EACH8a,OAAQ,eAAAC,EAAAC,EAAA,IAAC,SAAE/1B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,mCAAoC,CAC5C7E,KAAMmC,IAAAA,IACC0I,SAAa,QAAL81B,EAAR91B,EAAW,UAAE,IAAA81B,GAAS,QAATC,EAAbD,EAAez5B,eAAO,IAAA05B,OAAd,EAARA,EAAwBlb,WAC5BthB,OAAOV,EAAAA,GAAAA,wBAAAA,eACVqmB,OAAQ,8BACR,GAEN,CACE8M,OAAQ,eAAAgK,EAAAC,EAAA,IAAC,SAAEj2B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,oCAAqC,CAC7CC,QAAS,CAAC,eAAgB+F,SAAa,QAALg2B,EAARh2B,EAAW,UAAE,IAAAg2B,GAAS,QAATC,EAAbD,EAAe35B,eAAO,IAAA45B,OAAd,EAARA,EAAwBhB,SAClD/V,OAAQ,gCACR,EACJ3iB,KAAM,eAAA25B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,SAAE72B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3ByJ,EAAAA,EAAAA,WACE,iCACA,CACEC,QAAS,CAAC,SAAS+F,SAAa,QAALk2B,EAARl2B,EAAW,UAAE,IAAAk2B,GAAS,QAATC,EAAbD,EAAe75B,eAAO,IAAA85B,OAAd,EAARA,EAAwBzb,kBAAkB1a,SAAa,QAALo2B,EAARp2B,EAAW,UAAE,IAAAo2B,GAAS,QAATC,EAAbD,EAAe/5B,eAAO,IAAAg6B,OAAd,EAARA,EAAwBpB,UACrF/V,OAAQ,6BACR0W,MACsD,QADjDU,EAAE7mC,EAAAA,QAAAA,cACUuQ,SAAa,QAALw2B,EAARx2B,EAAW,UAAE,IAAAw2B,GAAS,QAATC,EAAbD,EAAen6B,eAAO,IAAAo6B,OAAd,EAARA,EAAwB7b,qBAAa,IAAA0b,GAMlD,QANkDC,EAD/CD,EAEH/8B,OAAO,CACP+f,SAAS,EACTC,SAAU,EACVC,cAAc,EACdC,cAAc,WACd,IAAA8c,OANkD,EAD/CA,EAQH7c,eAEN,CAAChqB,IAAAA,cAAA,UAAQgK,MAAOsG,SAAa,QAAL02B,EAAR12B,EAAW,UAAE,IAAA02B,GAAS,QAATC,EAAbD,EAAer6B,eAAO,IAAAs6B,OAAd,EAARA,EAAwB/b,aAAc,aAAY5a,SAAa,QAAL42B,EAAR52B,EAAW,UAAE,IAAA42B,GAAS,QAATC,EAAbD,EAAev6B,eAAO,IAAAw6B,OAAd,EAARA,EAAwBjc,gBAC3F,EACHib,OAAQ,eAAAiB,EAAAC,EAAA,IAAC,SAAE/2B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,mCAAoC,CAC5C7E,KAAMmC,IAAAA,IACC0I,SAAa,QAAL82B,EAAR92B,EAAW,UAAE,IAAA82B,GAAS,QAATC,EAAbD,EAAez6B,eAAO,IAAA06B,OAAd,EAARA,EAAwBvc,aAC5BjhB,OAAOV,EAAAA,GAAAA,wBAAAA,eACVqmB,OAAQ,gCACR,IAGRiU,wBAAwB,EACxBhzB,gBAAiBA,KAAMnG,EAAAA,EAAAA,WAAU,8BAA+B,CAAEC,QAASO,EAAAA,GAAAA,QAC3EgG,gBAAiB,WAAmB,IAAAw2B,EAAAC,EAAA,IAAlB,KAAElsB,GAAMxa,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACd,IAAA2mC,EAAAC,EAAd,OAAIpsB,EAAO,EAEa,QADtBmsB,EAAOznC,EAAAA,QAAAA,cACUsb,UAAK,IAAAmsB,GAC6D,QAD7DC,EADfD,EAEH39B,OAAO,CAAE+f,SAAS,EAAMC,SAAU,EAAGC,cAAc,EAAMC,cAAc,WAAQ,IAAA0d,OAD7D,EADfA,EAGHzd,cAGgB,QADtBsd,EAAOvnC,EAAAA,QAAAA,cACUsb,UAAK,IAAAisB,GAC4D,QAD5DC,EADfD,EAEHz9B,OAAO,CAAE+f,SAAS,EAAMC,SAAU,EAAGC,cAAc,EAAMC,cAAc,WAAO,IAAAwd,OAD5D,EADfA,EAGHvd,aACN,GAEFma,wBAAyB,CACvB,CACE9/B,GAAIu/B,EAAAA,GAAAA,aACJxG,KAAMp+B,IAA0G,IAAvG,CAAC4kC,EAAAA,GAAAA,cAA+B1T,EAAc,CAAC,EAAG,CAAC0T,EAAAA,GAAAA,aAA8BQ,EAAa,CAAC,GAAGplC,EAEzG,MAAQ+kC,UAAWl2B,GAAa,GAAU,CAAC,EAE3C,IAAKu2B,EAAW7kC,MACd,OAAO2wB,EAAY3wB,MAGrB,IAAIykC,EAAqB9T,EAAY3wB,OAAS6kC,EAAW7kC,MAezD,OAbIsO,IACFm2B,EACEhkC,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR1U,KAAI,GAAAtH,OAAKnF,EAAAA,QAAAA,2BAAkC,wBAAAmF,OAAuBk/B,EAAW7kC,MAAK,MAEjF2wB,EAAY3wB,OAAS6kC,EAAW7kC,QAKhCykC,CAAkB,EAE3B3I,YAAY,GAEd,CACEh3B,GAAIu/B,EAAAA,GAAAA,iBACJxG,KAAM39B,IAAA,IAAG,CAACmkC,EAAAA,GAAAA,kBAAmCoE,GAAUvoC,EAAA,OACrD6K,EAAAA,EAAAA,WAAU,6BAADpF,OAA8B0+B,EAAAA,GAAAA,kBAAoC,CACzEr5B,SAASy9B,aAAQ,EAARA,EAAUzoC,QAAS,QAC5B,EACJ87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAI++B,EAAAA,GAAAA,MACJhG,KAAMp4B,IAAA,IAAAijC,EAAA,IAAG,CAAC7E,EAAAA,GAAAA,OAAmC8C,GAAOlhC,EAAA,OAClDsF,EAAAA,EAAAA,WAAU,kCAAmC,CAC3CC,QAAS64B,EAAAA,GAAAA,MACT8C,OAA0C,QAAnC+B,EAAAloC,EAAAA,QAAAA,cAAsBmmC,aAAK,EAALA,EAAO3mC,cAAM,IAAA0oC,OAAA,EAAnCA,EAAqCp+B,OAAO,CAAEggB,SAAU,EAAGC,cAAc,MAAW,GAC3F,EACJuR,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,UACJxG,KAAMn4B,IAAA,IAAG,CAAC2+B,EAAAA,GAAAA,WAA4BK,GAAUh/B,EAAA,OAC7Cg/B,aAAQ,EAARA,EAAU1kC,QAASS,IAAAA,cAACkkC,EAAAA,EAAU,CAACz+B,KAAMw+B,aAAQ,EAARA,EAAU1kC,SAAc,EAAE,EAClE87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,KAGf+F,yBAA0B,CACxBC,aAAc,eACZ,CAACjB,EAAAA,GAAAA,kBAAmCS,EAAiB,CAAC,EACtD,CAACT,EAAAA,GAAAA,aAA8Bv/B,GAChCxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAMwjC,EAAiB,GAAKhgC,QAAOtD,CAAS,GAEpD+jC,qCAAsC,CACpC,CACEzgC,GAAI0gC,EAAAA,GAAAA,aACJ1J,YAAY,EACZsJ,aAAa,GAEf,CACEtgC,GAAI0gC,EAAAA,GAAAA,iBACJ3H,KAAM1R,IAAA,IAAG,CAACqZ,EAAAA,GAAAA,kBAAiDiD,GAAUtc,EAAA,OACnEphB,EAAAA,EAAAA,WAAU,4BAA6B,CACrCC,QAAS,CAACw6B,EAAAA,GAAAA,kBAAgDiD,aAAQ,EAARA,EAAUzoC,QAAS,SAC7E,EACJ87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAI0gC,EAAAA,GAAAA,cACJ1J,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAI0gC,EAAAA,GAAAA,SACJ1J,YAAY,EACZwD,UAAW,GACX8F,aAAa,GAEf,CACEtgC,GAAI6jC,EAAAA,GAAAA,kBACJ9K,KAAM,SAACx9B,EAAMkkC,GAAO,IAAI,CAACoE,EAAAA,GAAAA,mBAAuDC,GAAkBtnC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACrGyJ,EAAAA,EAAAA,WAAU,6BAADpF,OAA8BgjC,EAAAA,GAAAA,mBAAwD,CAC7F39B,QAAS49B,GAAoBxa,EAAAA,eAC7B,EACJ0N,YAAY,EACZwD,UAAW,GACX8F,aAAa,GAEf,CACEtgC,GAAI0gC,EAAAA,GAAAA,gBACJ3H,KAAM,eAAG,CAAC2H,EAAAA,GAAAA,iBAAgDG,GAAerkC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3EqkC,aAAa,EAAbA,EAAe3lC,QACdQ,EAAAA,QAAAA,OAAemlC,aAAa,EAAbA,EAAe3lC,QAC9BqI,IAAAA,IAAWs9B,aAAa,EAAbA,EAAe3lC,OAAOsK,OAAO,eAC1C,EAAE,EACJwxB,YAAY,EACZsJ,aAAa,EACb9F,UAAW,KAGfsG,sBAAuB,CACrB,CACE9gC,GAAIuiB,EAAAA,GAAAA,kBAEN,CACEviB,GAAI,gBACJwjC,aAAa,EACbxjB,SAAUxD,EAAAA,eAAAA,Q,kTCvPhB,MAAM6W,EAAe4K,EAAAA,GAAAA,KAEf7b,EAAY6b,EAAAA,GAAAA,KAEZ9O,EAAe8O,EAAAA,GAAAA,KAEfhM,EAAS,CACbgK,QAAS,GACT5I,eACAjR,YACA+M,eACA4C,YAAasB,EAAattB,cAC1Bm4B,eAAgBC,EAAAA,GAAAA,SAChBhC,OAAQ,OAAFt7B,OAASwyB,GACfhR,MAAO,CACL,CAACE,EAAAA,GAAAA,YAAsCzd,EAAAA,GAAAA,uBAAmC,WAAW5J,MAAM4I,UAAUw6B,cACrG,CAAC/b,EAAAA,GAAAA,UAAoCzd,EAAAA,GAAAA,uBAAmC,WAAW5J,MAAM8I,QAAQs6B,eAEnGC,gBAAiB,CACf,CAAChc,EAAAA,GAAAA,aAAuC9b,EAAAA,GAAAA,MACxC,CAAC8b,EAAAA,GAAAA,4BAAqD,GAExDic,oBAAqB,CACnB,CAACjc,EAAAA,GAAAA,MAAgCkc,EAAAA,GAAAA,UACjC,CAAClc,EAAAA,GAAAA,WAAqCmc,EAAAA,GAAAA,WACtC,CAACnc,EAAAA,GAAAA,OAAiC,IAClC,CAACA,EAAAA,GAAAA,QAAkC,GAErCoc,4BAA6B,CAC3B,CAACpc,EAAAA,GAAAA,MAAgCqc,EAAAA,GAAAA,gBACjC,CAACrc,EAAAA,GAAAA,WAAqCmc,EAAAA,GAAAA,WACtC,CAACnc,EAAAA,GAAAA,OAAiC,IAClC,CAACA,EAAAA,GAAAA,QAAkC,GAErCuc,oBAAqB,CACnB,CACEnc,QAAS,CACP,CACER,OAAQ4c,EAAAA,GAAAA,MACRjvB,KAAMmvB,EAAAA,qBAAAA,MACNlvB,OAAQmvB,EAAAA,qBAAAA,MACR1oB,MAAO0oB,EAAAA,qBAAAA,MACP7c,MAAO,CACL,CAACE,EAAAA,GAAAA,kBAA4CkF,EAAAA,GAAAA,UAGjD,CACEtF,OAAQ4c,EAAAA,GAAAA,MACRjvB,KAAM00B,EAAAA,qBAAAA,MACNz0B,OAAQ00B,EAAAA,qBAAAA,MACRjuB,MAAOiuB,EAAAA,qBAAAA,MACPpiB,MAAO,CACL,CAACE,EAAAA,GAAAA,kBAA4CkF,EAAAA,GAAAA,YAGjD,CACEtF,OAAQ4c,EAAAA,GAAAA,MACRpvB,UAAWE,EAAAA,iBAAAA,aAIjB,CACE8S,QAAS,CACP,CACER,OAAQ4c,EAAAA,GAAAA,eACRjvB,KAAMmvB,EAAAA,qBAAAA,MACNlvB,OAAQmvB,EAAAA,qBAAAA,MACR1oB,MAAO0oB,EAAAA,qBAAAA,MACP7c,MAAO,CACL,CAACE,EAAAA,GAAAA,kBAA4CkF,EAAAA,GAAAA,UAGjD,CACEtF,OAAQ4c,EAAAA,GAAAA,eACRjvB,KAAM00B,EAAAA,qBAAAA,MACNz0B,OAAQ00B,EAAAA,qBAAAA,MACRjuB,MAAOiuB,EAAAA,qBAAAA,MACPpiB,MAAO,CACL,CAACE,EAAAA,GAAAA,kBAA4CkF,EAAAA,GAAAA,YAGjD,CACEtF,OAAQ4c,EAAAA,GAAAA,eACRpvB,UAAWE,EAAAA,iBAAAA,cAKnBsvB,qBAAsB,CACpBrb,MAAO,CACL,CACEmU,OAAQ,eAAA5hB,EAAA4qB,EAAA,IAAC,SAAEh1B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,oCAAqC,CAC7CC,QAAS,CAAC,aAAc+F,SAAa,QAALoK,EAARpK,EAAW,UAAE,IAAAoK,GAAS,QAAT4qB,EAAb5qB,EAAe/N,eAAO,IAAA24B,OAAd,EAARA,EAAwBC,SAChD/V,OAAQ,8BACR,EACJ3iB,KAAM,eAAA24B,EAAAC,EAAAC,EAAAC,EAAAjc,EAAAC,EAAAic,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,SAAE31B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3ByJ,EAAAA,EAAAA,WACE,iCACA,CACEC,QAAS,CAAC,SAAS+F,SAAa,QAALk1B,EAARl1B,EAAW,UAAE,IAAAk1B,GAAS,QAATC,EAAbD,EAAe74B,eAAO,IAAA84B,OAAd,EAARA,EAAwBra,gBAAgB9a,SAAa,QAALo1B,EAARp1B,EAAW,UAAE,IAAAo1B,GAAS,QAATC,EAAbD,EAAe/4B,eAAO,IAAAg5B,OAAd,EAARA,EAAwBJ,UACnF/V,OAAQ,2BACR0W,MACoD,QAD/Cxc,EAAE3pB,EAAAA,QAAAA,cACUuQ,SAAa,QAALs1B,EAARt1B,EAAW,UAAE,IAAAs1B,GAAS,QAATC,EAAbD,EAAej5B,eAAO,IAAAk5B,OAAd,EAARA,EAAwBxa,mBAAW,IAAA3B,GAMhD,QANgDC,EAD7CD,EAEH7f,OAAO,CACP+f,SAAS,EACTC,SAAU,EACVC,cAAc,EACdC,cAAc,WACd,IAAAJ,OANgD,EAD7CA,EAQHK,eAEN,CAAChqB,IAAAA,cAAA,UAAQgK,MAAOsG,SAAa,QAALw1B,EAARx1B,EAAW,UAAE,IAAAw1B,GAAS,QAATC,EAAbD,EAAen5B,eAAO,IAAAo5B,OAAd,EAARA,EAAwB1a,WAAY,aAAY/a,SAAa,QAAL01B,EAAR11B,EAAW,UAAE,IAAA01B,GAAS,QAATC,EAAbD,EAAer5B,eAAO,IAAAs5B,OAAd,EAARA,EAAwB5a,cACzF,EACH8a,OAAQ,eAAAC,EAAAC,EAAA,IAAC,SAAE/1B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,mCAAoC,CAC5C7E,KAAMmC,IAAAA,IACC0I,SAAa,QAAL81B,EAAR91B,EAAW,UAAE,IAAA81B,GAAS,QAATC,EAAbD,EAAez5B,eAAO,IAAA05B,OAAd,EAARA,EAAwBlb,WAC5BthB,OAAOV,EAAAA,GAAAA,wBAAAA,eACVqmB,OAAQ,8BACR,GAEN,CACE8M,OAAQ,eAAAgK,EAAAC,EAAA,IAAC,SAAEj2B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,oCAAqC,CAC7CC,QAAS,CAAC,oBAAqB+F,SAAa,QAALg2B,EAARh2B,EAAW,UAAE,IAAAg2B,GAAS,QAATC,EAAbD,EAAe35B,eAAO,IAAA45B,OAAd,EAARA,EAAwBhB,SACvD/V,OAAQ,qCACR,EACJ3iB,KAAM,eAAA25B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAAC,SAAE72B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3ByJ,EAAAA,EAAAA,WACE,iCACA,CACEC,QAAS,CAAC,SAAS+F,SAAa,QAALk2B,EAARl2B,EAAW,UAAE,IAAAk2B,GAAS,QAATC,EAAbD,EAAe75B,eAAO,IAAA85B,OAAd,EAARA,EAAwBpa,4BAA4B/b,SAAa,QAALo2B,EAARp2B,EAAW,UAAE,IAAAo2B,GAAS,QAATC,EAAbD,EAAe/5B,eAAO,IAAAg6B,OAAd,EAARA,EAAwBpB,UAC/F/V,OAAQ,kCACR0W,MAC2D,QADtDU,EAAE7mC,EAAAA,QAAAA,cACUuQ,SAAa,QAALw2B,EAARx2B,EAAW,UAAE,IAAAw2B,GAAS,QAATC,EAAbD,EAAen6B,eAAO,IAAAo6B,OAAd,EAARA,EAAwBza,0BAAkB,IAAAsa,GAMvD,QANuDC,EADpDD,EAEH/8B,OAAO,CACP+f,SAAS,EACTC,SAAU,EACVC,cAAc,EACdC,cAAc,WACd,IAAA8c,OANuD,EADpDA,EAQH7c,eAEN,CACEhqB,IAAAA,cAAA,UACEgK,MAAOsG,SAAa,QAAL02B,EAAR12B,EAAW,UAAE,IAAA02B,GAAS,QAATC,EAAbD,EAAer6B,eAAO,IAAAs6B,OAAd,EAARA,EAAwB3a,kBAC/B,aAAYhc,SAAa,QAAL42B,EAAR52B,EAAW,UAAE,IAAA42B,GAAS,QAATC,EAAbD,EAAev6B,eAAO,IAAAw6B,OAAd,EAARA,EAAwB7a,qBAGzC,EACH6Z,OAAQ,eAAAiB,EAAAC,EAAA,IAAC,SAAE/2B,EAAW,IAAIzP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC7ByJ,EAAAA,EAAAA,WAAU,mCAAoC,CAC5C7E,KAAMmC,IAAAA,IACC0I,SAAa,QAAL82B,EAAR92B,EAAW,UAAE,IAAA82B,GAAS,QAATC,EAAbD,EAAez6B,eAAO,IAAA06B,OAAd,EAARA,EAAwBlc,WAC5BthB,OAAOV,EAAAA,GAAAA,wBAAAA,eACVqmB,OAAQ,qCACR,IAGRiU,wBAAwB,EACxB7yB,oBAAqB,EACrBH,gBAAiBA,KAAMnG,EAAAA,EAAAA,WAAU,8BAA+B,CAAEC,QAASO,EAAAA,GAAAA,QAC3E+F,gBAAiB7R,IAAA,IAAC,KAAEqc,GAAMrc,EAAA,OAAK6G,OAAO0D,SAAS8R,EAAM,IAAM,GAAKA,CAAI,EACpEvK,gBAAiB,WAAmB,IAAAw2B,EAAAC,EAAA,IAAlB,KAAElsB,GAAMxa,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACd,IAAA2mC,EAAAC,EAAd,OAAIpsB,EAAO,EAEa,QADtBmsB,EAAOznC,EAAAA,QAAAA,cACUsb,UAAK,IAAAmsB,GAC6D,QAD7DC,EADfD,EAEH39B,OAAO,CAAE+f,SAAS,EAAMC,SAAU,EAAGC,cAAc,EAAMC,cAAc,WAAQ,IAAA0d,OAD7D,EADfA,EAGHzd,cAGgB,QADtBsd,EAAOvnC,EAAAA,QAAAA,cACUsb,UAAK,IAAAisB,GAC4D,QAD5DC,EADfD,EAEHz9B,OAAO,CAAE+f,SAAS,EAAMC,SAAU,EAAGC,cAAc,EAAMC,cAAc,WAAO,IAAAwd,OAD5D,EADfA,EAGHvd,aACN,GAEF2Z,qBAAsB,CACpB,CACEt/B,GAAIu/B,EAAAA,GAAAA,aACJtH,OAAQA,KAAMhyB,EAAAA,EAAAA,WAAU,6BAA8B,CAAEC,QAAS,CAAC,SAAUq5B,EAAAA,GAAAA,gBAC5ExG,KAAM,WAGK,IAFT,CAACwG,EAAAA,GAAAA,cAA+B1T,EAAc,CAAC,EAC/C,CAAC0T,EAAAA,GAAAA,cAA+BC,EAAc,CAAC,GAChDhjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAEH,MAAQkjC,UAAWl2B,GAAa,GAAU,CAAC,EAE3C,GAAKg2B,UAAAA,EAAatkC,MAChB,OAAO2wB,aAAW,EAAXA,EAAa3wB,MAGtB,IAAIykC,EAAqB9T,EAAY3wB,OAASskC,EAAYtkC,MAe1D,OAbIsO,IACFm2B,EACEhkC,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR1U,KAAI,GAAAtH,OAAKnF,EAAAA,QAAAA,2BAAkC,wBAAAmF,OAAuB2+B,EAAYtkC,MAAK,MAElFykC,IAKAA,CACT,GAEF,CACE3/B,GAAIu/B,EAAAA,GAAAA,aACJ/E,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,UACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,WAA4BK,GAAUpjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAClDojC,aAAQ,EAARA,EAAU1kC,QAASS,IAAAA,cAACkkC,EAAAA,EAAU,CAACz+B,KAAMw+B,aAAQ,EAARA,EAAU1kC,SAAc,EAAE,EAClEs/B,UAAW,KAGfsF,wBAAyB,CACvB,CACE9/B,GAAIu/B,EAAAA,GAAAA,aACJxG,KAAM39B,IAA0G,IAAvG,CAACmkC,EAAAA,GAAAA,cAA+B1T,EAAc,CAAC,EAAG,CAAC0T,EAAAA,GAAAA,aAA8BQ,EAAa,CAAC,GAAG3kC,EAEzG,MAAQskC,UAAWl2B,GAAa,GAAU,CAAC,EAE3C,IAAKu2B,EAAW7kC,MACd,OAAO2wB,EAAY3wB,MAGrB,IAAIykC,EAAqB9T,EAAY3wB,OAAS6kC,EAAW7kC,MAezD,OAbIsO,IACFm2B,EACEhkC,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR1U,KAAI,GAAAtH,OAAKnF,EAAAA,QAAAA,2BAAkC,wBAAAmF,OAAuBk/B,EAAW7kC,MAAK,MAEjF2wB,EAAY3wB,OAAS6kC,EAAW7kC,QAKhCykC,CAAkB,EAE3B3I,YAAY,GAEd,CACEh3B,GAAI++B,EAAAA,GAAAA,MACJhG,KAAMp4B,IAAA,IAAG,CAACo+B,EAAAA,GAAAA,OAAmCsE,GAAO1iC,EAAA,MACzB,iBAAjB0iC,aAAK,EAALA,EAAOnoC,QAAsBsG,OAAO2W,WAAWkrB,aAAK,EAALA,EAAOnoC,OAAOooC,QAAQ,IAAO,IAAI,EAC1FtM,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAI++B,EAAAA,GAAAA,eACJhG,KAAM,eAAG,CAACgG,EAAAA,GAAAA,gBAA4CwE,GAAe/mC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MACvC,iBAAzB+mC,aAAa,EAAbA,EAAeroC,QAAsBsG,OAAO2W,WAAWorB,aAAa,EAAbA,EAAeroC,OAAOooC,QAAQ,IAAO,IAAI,EAC1GtM,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,UACJxG,KAAMn4B,IAAA,IAAG,CAAC2+B,EAAAA,GAAAA,WAA4BK,GAAUh/B,EAAA,OAC7Cg/B,aAAQ,EAARA,EAAU1kC,QAASS,IAAAA,cAACkkC,EAAAA,EAAU,CAACz+B,KAAMw+B,aAAQ,EAARA,EAAU1kC,SAAc,EAAE,EAClE87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,KAGf+F,yBAA0B,CACxBC,aAAc,eACZ,CAACjB,EAAAA,GAAAA,kBAAmCS,EAAiB,CAAC,EACtD,CAACT,EAAAA,GAAAA,aAA8Bv/B,GAChCxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAMwjC,EAAiB,GAAKhgC,QAAOtD,CAAS,GAEpD+jC,qCAAsC,CACpC,CACEzgC,GAAI0gC,EAAAA,GAAAA,aACJ1J,YAAY,EACZsJ,aAAa,GAEf,CACEtgC,GAAI0gC,EAAAA,GAAAA,SACJ1J,YAAY,EACZwD,UAAW,GACX8F,aAAa,GAEf,CACEtgC,GAAI0gC,EAAAA,GAAAA,gBACJ3H,KAAM,eAAG,CAAC2H,EAAAA,GAAAA,iBAAgDG,GAAerkC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAC3EqkC,aAAa,EAAbA,EAAe3lC,QAASqI,IAAAA,IAAWs9B,aAAa,EAAbA,EAAe3lC,OAAOsK,OAAO,eAAkB,EAAE,EACvFwxB,YAAY,EACZsJ,aAAa,EACb9F,UAAW,KAGfsG,sBAAuB,CACrB,CACE9gC,GAAI,gBACJwjC,aAAa,EACbxjB,SAAUxD,EAAAA,eAAAA,Q,oRC9ShB,MAAM6W,EAAe,OAEfjR,EAAY6b,EAAAA,GAAAA,iBAEZ9O,EAAe8O,EAAAA,GAAAA,UAUfhM,EAAS,CACbgK,QAAS,CAAC,MAAO,SAAU,WAC3B5I,eACAjR,YACA+M,eACA4C,YAAasB,EAAattB,cAC1Bm4B,eAAgBC,EAAAA,GAAAA,SAChBhC,OAAQ,OAAFt7B,OAASwyB,EAAY,KAAAxyB,OAAIuhB,GAC/B8Z,gBAAiB,IAAI99B,OAAOwR,OAAO80B,EAAAA,KACnCriB,MAAO,CACL,CAACE,EAAAA,GAAAA,YAAsCzd,EAAAA,GAAAA,kBAClB2B,EAAAA,GAAAA,OAClB3C,UAAUw6B,cACb,CAAC/b,EAAAA,GAAAA,UAAoCzd,EAAAA,GAAAA,kBAA8B2B,EAAAA,GAAAA,OAAyBzC,QAAQs6B,eAEtGC,gBAAiB,CACf,CAAChc,EAAAA,GAAAA,aAAuC9b,EAAAA,GAAAA,OAE1C+3B,oBAAqB,CACnB,CAACjc,EAAAA,GAAAA,MAAgCkc,EAAAA,GAAAA,UACjC,CAAClc,EAAAA,GAAAA,WAAqCmc,EAAAA,GAAAA,WACtC,CAACnc,EAAAA,GAAAA,OAAiC,IAClC,CAACA,EAAAA,GAAAA,QAAkC,GAErCoc,4BAA6B,CAC3B,CAACpc,EAAAA,GAAAA,MAAgCqc,EAAAA,GAAAA,gBACjC,CAACrc,EAAAA,GAAAA,WAAqCmc,EAAAA,GAAAA,WACtC,CAACnc,EAAAA,GAAAA,OAAiC,IAClC,CAACA,EAAAA,GAAAA,QAAkC,GAErCuc,oBAAqB,CACnB,CACEnc,QAAS,CACP,CACER,OAAQ4c,EAAAA,GAAAA,QACRjvB,KAAMmvB,EAAAA,qBAAAA,MACNlvB,OAAQmvB,EAAAA,qBAAAA,MACR1oB,MAAO0oB,EAAAA,qBAAAA,MACP7c,MAAO,CACL,CAACE,EAAAA,GAAAA,UAAoCkF,EAAAA,GAAAA,WAGzC,CACEtF,OAAQ4c,EAAAA,GAAAA,QACRjvB,KAAMixB,EAAAA,qBAAAA,MACNhxB,OAAQixB,EAAAA,qBAAAA,MACRxqB,MAAOwqB,EAAAA,qBAAAA,MACP3e,MAAO,CACL,CAACE,EAAAA,GAAAA,UAAoCkF,EAAAA,GAAAA,UAGzC,CACEtF,OAAQ4c,EAAAA,GAAAA,QACRjvB,KAAMk0B,EAAAA,uBAAAA,MACNj0B,OAAQk0B,EAAAA,uBAAAA,MACRztB,MAAOytB,EAAAA,uBAAAA,MACP5hB,MAAO,CACL,CAACE,EAAAA,GAAAA,UAAoCkF,EAAAA,GAAAA,WAM/C0X,qBAAsB,CACpBiF,uBAAuB,EACvB/E,QAAS,CACP,CACEr/B,GAAIuiB,EAAAA,GAAAA,YACJvC,SAAUxD,EAAAA,eAAAA,SAIhB8iB,qBAAsB,CACpB,CACEt/B,GAAIu/B,EAAAA,GAAAA,aACJtH,OAAQA,KAAMhyB,EAAAA,EAAAA,WAAU,6BAA8B,CAAEC,QAAS,CAAC,SAAUq5B,EAAAA,GAAAA,gBAC5ExG,KAAM,WAGD,IAFD,CAACwG,EAAAA,GAAAA,cAA+B1T,EAAc,CAAC,EAAG,CAAC0T,EAAAA,GAAAA,cAA+BC,EAAc,CAAC,GAAGhjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC1GijC,EAAOjjC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEP,MAAQgjC,UAAWl2B,IAAei2B,aAAO,EAAPA,EAASj2B,aAAc,CAAC,EAE1D,GAAKg2B,UAAAA,EAAatkC,MAChB,OAAO2wB,aAAW,EAAXA,EAAa3wB,MAGtB,IAAIykC,EAAqB9T,EAAY3wB,OAASskC,EAAYtkC,MAe1D,OAbIsO,IACFm2B,EACEhkC,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR1U,KAAI,GAAAtH,OAAKnF,EAAAA,QAAAA,2BAAkC,wBAAAmF,OAAuB2+B,EAAYtkC,MAAK,MAElFykC,IAKAA,CACT,GAEF,CACE3/B,GAAIu/B,EAAAA,GAAAA,aACJ/E,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,UACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,WAA4BK,GAAUpjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAClDojC,aAAQ,EAARA,EAAU1kC,QAASS,IAAAA,cAACkkC,EAAAA,EAAU,CAACz+B,KAAMw+B,aAAQ,EAARA,EAAU1kC,SAAc,EAAE,EAClEs/B,UAAW,KAGfsF,wBAAyB,CACvB,CACE9/B,GAAIu/B,EAAAA,GAAAA,aACJxG,KAAMA,CAAAp+B,EAEJ8kC,KACG,IAFD,CAACF,EAAAA,GAAAA,cAA+B1T,EAAc,CAAC,EAAG,CAAC0T,EAAAA,GAAAA,aAA8BQ,EAAa,CAAC,GAAGplC,EAGpG,MAAQ+kC,UAAWl2B,IAAei2B,aAAO,EAAPA,EAASj2B,aAAc,CAAC,EAE1D,IAAKu2B,EAAW7kC,MACd,OAAO2wB,EAAY3wB,MAGrB,IAAIykC,EAAqB9T,EAAY3wB,OAAS6kC,EAAW7kC,MAezD,OAbIsO,IACFm2B,EACEhkC,IAAAA,cAACwyB,EAAAA,OAAM,CACLxO,UAAQ,EACRhM,UAAU,IACVkJ,QAAQ,OACR1U,KAAI,GAAAtH,OAAKnF,EAAAA,QAAAA,2BAAkC,wBAAAmF,OAAuBk/B,EAAW7kC,MAAK,MAEjFykC,IAKAA,CAAkB,EAE3B3I,YAAY,GAEd,CACEh3B,GAAIu/B,EAAAA,GAAAA,iBACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,kBAAmCS,GAAgBxjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAKwjC,aAAc,EAAdA,EAAgB9kC,QAAS,IAAI,EACpG87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,SACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,gBAAiC8E,EAAe,CAAC9E,EAAAA,GAAAA,UAA2B+E,GAAU9nC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACnGb,IAAAA,cAACA,IAAAA,SAAc,MACZsK,EAAAA,EAAAA,WAAU,4BAA6B,CAAEC,QAAS,CAACq5B,EAAAA,GAAAA,SAA0B+E,aAAQ,EAARA,EAAUppC,SAAW,KACjGmpC,aAAa,EAAbA,EAAenpC,QACfS,IAAAA,cAACukC,EAAAA,MAAO,CAAC1pB,MAAM,WACZvQ,EAAAA,EAAAA,WAAU,4BAA6B,CACtCC,QAAS,CAACq5B,EAAAA,GAAAA,eAAgC8E,aAAa,EAAbA,EAAenpC,WAI7D,GACa,EAEnB87B,YAAY,EACZwD,UAAW,IAEb,CACEx6B,GAAI++B,EAAAA,GAAAA,QACJhG,KAAM,eAAG,CAACgG,EAAAA,GAAAA,SAAqCwF,GAAS/nC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAK+nC,aAAO,EAAPA,EAASrpC,QAAS,IAAI,EACxF87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,IAEb,CACEx6B,GAAIu/B,EAAAA,GAAAA,UACJxG,KAAM,eAAG,CAACwG,EAAAA,GAAAA,WAA4BK,GAAUpjC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAClDojC,aAAQ,EAARA,EAAU1kC,QAASS,IAAAA,cAACkkC,EAAAA,EAAU,CAACz+B,KAAMw+B,aAAQ,EAARA,EAAU1kC,SAAc,EAAE,EAClE87B,YAAY,EACZsJ,aAAa,EACb9F,UAAW,KAGf+F,yBAA0B,CACxBC,aAAc,eACZ,CAACjB,EAAAA,GAAAA,kBAAmCS,EAAiB,CAAC,EACtD,CAACT,EAAAA,GAAAA,aAA8Bv/B,GAChCxD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OAAMwjC,EAAiB,GAAKhgC,QAAOtD,CAAS,GAEpDokC,sBAAuB,CACrB,CACE9gC,GAAIuiB,EAAAA,GAAAA,KAEN,CACEviB,GAAIuiB,EAAAA,GAAAA,MACJ5E,UAAU,GAEZ,CACE3d,GAAIuiB,EAAAA,GAAAA,W,gGC1OV,MAAMlV,EAAoBsO,IACxB,MAAOgpB,EAAYC,IAAiB/3B,EAAAA,EAAAA,UAAS,CAAEM,MAAO,EAAGyD,OAAQ,IAqCjE,OAnCAtD,EAAAA,EAAAA,YAAU,KACR,MAAMu3B,EAAkBlpB,GAAUlc,OAAOqlC,iBAAkB,EACrDzU,EAAU1U,aAAM,EAANA,EAAQrV,QACxB,IACIy+B,EADAC,EAAiBtpC,EAAAA,QAAAA,KAGrB,GAAI20B,EAAS,CACX,MAAM4U,EAAUA,KACd,MAAM,aAAEC,EAAe,EAAC,YAAEC,EAAc,EAAC,YAAEC,EAAc,EAAC,WAAEC,EAAa,GAAMhV,GAAW,CAAC,EAE3F0U,EAAUtlC,OAAOkJ,YAAW,KAC1Bi8B,EAAc,CACZz3B,MAAO03B,EAAkBM,EAAcE,EACvCz0B,OAAQi0B,EAAkBK,EAAeE,GACzC,GACF,EAGJ,GAAIP,EAAiB,CACnB,MAAMS,EAAiB,IAAI7lC,OAAOqlC,eAAeG,GACjDK,EAAeC,QAAQlV,GACvB2U,EAAiBA,IAAMM,EAAeE,UAAUnV,EAClD,MACE4U,IACAxlC,OAAOgmC,iBAAiB,SAAUR,GAClCD,EAAiBA,IAAMvlC,OAAOimC,oBAAoB,SAAUT,EAEhE,CAEA,MAAO,KACLxlC,OAAOkmC,aAAaZ,GACpBC,GAAgB,CACjB,GACA,CAACrpB,IAEGgpB,CAAU,C,yPCrCnB,MAAMiB,EAAmB,WAAU,SAAA/kC,OAALrE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAc,eAQzCqpC,EAAiB,WAAU,SAAAhlC,OAALrE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAc,aAQvCspC,EAAkB,WAAU,SAAAjlC,OAALrE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAc,cA6CxCupC,EAAqB,eAAeC,EAAYxpC,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAAA,OAAnBF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IAC5BW,KAAI8oC,IACV,MAAMC,EAAY,CAAC,EAOnB,OANappC,MAAM6C,QAAQsmC,IAAWA,GAAW7nC,OAAOwR,OAAOq2B,IAE3DvnC,SAAQxD,IACVgrC,EAAUhrC,GAAS8qC,CAAY,IAG1BE,CAAS,GAChB,EAgGEC,EAAmCC,IACvC,MAAMC,EACHD,EAAQE,SAAWF,EAAQE,QAAQve,UAAaqe,EAAQE,SAAWF,EAAQre,UAAYqe,EACpFG,EACHH,EAAQE,SAAWF,EAAQE,QAAQjnC,SAAW,CAAEA,QAAS+mC,EAAQE,QAAQjnC,UACzE+mC,EAAQ/mC,SAAW,CAAEA,QAAS+mC,EAAQ/mC,SAEzC,GAAIvC,MAAM6C,QAAQ0mC,GAAiB,CACjC,MAAMG,EAAqBH,EAAe5oB,MAAKviB,GAASurC,IAAKvrC,EAAO,kBAAmBA,EAAMyQ,SAAW,MAClG+6B,EAAuBL,EAAe5oB,MAAKviB,GAASurC,IAAKvrC,EAAO,kBAAmBA,EAAMyQ,QAAU,MAEzG,OACG66B,GAAsB,IAAKA,KAAuBD,IAClDG,GAAwB,IAAKA,KAAyBH,EAE3D,CAEA,MAAO,IAAKF,KAAmBE,EAAuB,EASlDI,EAAwBP,IAC5B,MAAMC,EAAiBF,EAAiCC,GAExD,GAAI1qC,EAAAA,QAAAA,UAAkB2qC,GACpB,OAAO,KAGT,MAAM16B,EAAS06B,EAAe16B,QAAU,EAClCi7B,EAAiBP,EAAeQ,YAAc,GAC9CC,EAAkBT,EAAehnC,QACjC0nC,EAAeV,EAAe9qC,MAAQ,KACtCyrC,EAAmBr7B,GAAU,GAAJ9K,OAAO8K,EAAM,MAAQ,GAEpD,OAAIm7B,GAA8C,iBAApBA,EACrBA,EAAgBG,OAGrBF,GAAwC,iBAAjBA,EAClB,GAAAlmC,OAAGmmC,GAAenmC,OAAGkmC,GAAeE,OAGzCt7B,GAAU,KAAOtL,IAAe0mC,GAC3B,GAAPlmC,OAAUmmC,GAAenmC,OAAG5D,KAAKC,UAAU6pC,IAGrCH,GAAkBA,EAAeK,QAAW,IAAI,EASpDC,EAAqBd,IACzB,MAAMC,EAAiBF,EAAiCC,GAExD,OAAI1qC,EAAAA,QAAAA,UAAkB2qC,GACb,KAGFI,IAAKJ,EAAgB,eAAgB,KAAK,EAS7Cc,EAAuBf,IAC3B,MAAMC,EAAiBF,EAAiCC,GAExD,OAAI1qC,EAAAA,QAAAA,UAAkB2qC,GACb,GAGFA,aAAc,EAAdA,EAAgB16B,SAAU,CAAC,EAc9By7B,EAAeA,CAACzoC,EAAMpD,EAAMuE,KAChC,MAAM,MAAEu3B,EAAQ,CAAC,EAAC,aAAEgQ,EAAe,CAAC,EAAC,MAAEC,GAAQ,GAASxnC,EACxD,IAAI3B,EAAM,IAAKk5B,GAkCf,OAhCI37B,EAAAA,QAAAA,UAAoBiD,IAAS04B,EAAM14B,IACrCw8B,QAAQryB,MAAM,mBAADjI,OAAoBlC,EAAI,4CAA4C04B,GAG/E37B,EAAAA,QAAAA,UAAoB4rC,GAAS3oC,IAAS0oC,EAAa1oC,IACrDw8B,QAAQC,KAAK,qBAADv6B,OAAsBlC,EAAI,mDAAmD0oC,GAGvFC,GAAS3oC,EACXR,EAAIQ,GAAQ,IACP04B,EAAM14B,MACN0oC,EAAa1oC,MACbpD,GAEI+rC,IAAU3oC,EACnBR,EAAM,IACDk5B,KACAgQ,KACA9rC,GAEIoD,EACTR,EAAIQ,GAAQ,IACP04B,EAAM14B,MACNpD,GAGL4C,EAAM,IACDk5B,KACA97B,GAIA4C,CAAG,EASNopC,EAAqCnB,IACzC,MAAMC,EACHD,EAAQE,SAAWF,EAAQE,QAAQve,UAAaqe,EAAQE,SAAWF,EAAQre,UAAYqe,EAE1F,OAAItpC,MAAM6C,QAAQ0mC,GACTA,EAAelpC,KAAIjC,GAASA,EAAMK,MAAQ,CAAC,IAE7C8qC,EAAe9qC,MAAQ,CAAC,CAAC,EAmH5BisC,EAAe,CACnB5B,mBACAC,iBACAC,kBACA2B,kBA3ZwB97B,GAAU,GAAJ9K,OAAO8K,EAAM,iBA4Z3C+7B,YAlZkBA,CAAC93B,EAAQq2B,EAAQD,KACnC,MAAME,EAAY,CAAC,EAanB,OAZmBD,GAAU7nC,OAAOwR,OAAOq2B,IAAY,IAE7CvnC,SAAQxD,SACKwB,IAAjBspC,EACE9qC,KAAS0U,IACXs2B,EAAUhrC,GAAS0U,aAAM,EAANA,EAAS1U,IAG9BgrC,EAAUhrC,IAAS0U,aAAM,EAANA,EAAS1U,KAAU8qC,CACxC,IAGKE,CAAS,EAqYhBH,qBACA4B,sBAhW4B,WAC5B,MAAMC,EAAkB,GAAG,QAAAhrC,EAAAJ,UAAAC,OADK6O,EAAS,IAAAxO,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAATuO,EAASvO,GAAAP,UAAAO,GAuEzC,OApEAuO,EAAU5M,SACR/D,IAA2G,IAA1G,OAAEsrC,EAAS,CAAC,EAAC,KAAE1qC,EAAI,oBAAEssC,EAAmB,oBAAEC,EAAqBC,UAAWhnC,EAAM,QAAEinC,EAAU,SAASrtC,EACpG,MACMstC,EADUnrC,MAAM6C,QAAQpE,IACEA,GAAUA,GAAQ,CAACA,IAAU,IACtD2sC,EAAkB,CAAC,GAAKnC,EAAmB,CAACE,IAC7CkC,EAAiB,GAEvBF,EAAYvpC,SAAQ,CAACxD,EAAOwV,KACItV,KAOxB,IAPyB,QAC7BgtC,EAAO,UACPL,EAAY,GAAE,YACdM,EAAW,YACXC,EAAW,YACXC,EAAc,KAAI,OAClBC,EAAS9sC,EAAAA,QAAAA,MACVN,EACKqtC,EAAiB,CAAC,EAEtBrqC,OAAOkC,QAAQ8nC,GAAS1pC,SAAQiC,IAAgC,IAC1D+nC,GAD4BC,EAAYC,GAAajoC,EAGzD,OAAQ0nC,GACN,IAAK,QACHK,EAAkBG,IAAW,GAADhoC,OAAIknC,EAAS,KAAAlnC,OAAI8nC,IAAc1B,OAC3D,MACF,IAAK,QACHyB,EAAkBI,IAAW,GAADjoC,OAAIknC,EAAS,KAAAlnC,OAAI8nC,IAAc1B,OAC3D,MAEF,QACEyB,EAAkB,GAAA7nC,OAAG8nC,GAAa1B,OAItC,IAAI8B,EAAMH,EAES,iBAARG,IACTA,EAAOvnC,OAAOwnC,UAAUD,IAAQvnC,OAAO0D,SAAS6jC,EAAK,KAAQvnC,OAAO2W,WAAW4wB,IAAQA,GAIvFN,EAAeC,GADU,mBAAhBH,EACyBA,EAAY,CAAEhtC,KAAM6sC,EAASprC,IAAK2rC,EAAYztC,MAAO6tC,EAAKr4B,UAE1Dq4B,CACpC,IAGyB,mBAAhBT,IACTG,EAAiBH,EAAYG,EAAgB/3B,IAG/C83B,EAAOC,EAAe,EAGxBQ,CAAsB,CACpBlB,UAAWhnC,EACXqnC,QAAS,IAAKF,KAAoBhtC,GAClCmtC,YAAaL,EACbM,YAAaT,EACbU,YAAaT,EACbU,OAAQU,GAAiBf,EAAehiC,KAAK+iC,IAC7C,IAGJtB,EAAgBzhC,KAAKgiC,EAAe,IAIjCP,CACT,EAyREuB,8BAvGoC,WAAyC,IAAxCC,EAAK5sC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAI66B,EAAK76B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGyf,EAAMzf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvE,MAAM,KAAEuL,GAASkU,EACXotB,EAAgB,GAEtBD,EAAM1qC,SACJqqC,GACGjsC,MAAM6C,QAAQopC,EAAIhhC,OAASghC,EAAIhhC,KAAKrJ,SAAQ4qC,GAAUD,EAAcljC,KAAK,CAAEgJ,IAAK45B,EAAI55B,IAAKpH,KAAMuhC,OAChGD,EAAcljC,KAAK4iC,KAGvB,MAAOQ,GAAaF,EAAcz7B,QAAOm7B,GACvC,IAAIzhB,OAAO,KAADzmB,OACHilC,EAAgBiD,EAAIhhC,MAAQghC,GAAI,KAAAloC,OAAIglC,EAAekD,EAAIhhC,MAAQghC,GAAI,KAAAloC,OAAI+kC,EAAiBmD,EAAIhhC,MAAQghC,GAAI,OAC7GznC,KAAKyG,KAGT,IAAKwhC,EACH,OAAOlS,EAGT,MASMmS,EAAY,CAChB1gC,OAAO,EACP2gC,aAAc,GACdp+B,WAAW,EACX9B,SAAS,KAba,WAAe,IAAdgd,EAAI/pB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAG/B,MAAO,CACL+pB,KAAM,IAHY,IAAKA,OAIpBnoB,OAAOsrC,YAAYtrC,OAAOkC,QAAQimB,GAAMppB,KAAIyD,IAAA,IAAE5D,EAAK9B,GAAM0F,EAAA,MAAK,CAACioC,IAAW,QAADhoC,OAAS7D,IAAQ9B,EAAM,KAEvG,CAOKyuC,CAAgB1tB,EAAOsK,OAItBqjB,EAAQruC,IAAI,IAAAsuC,EAAAC,EAAA,MACY,iBAAT,QAAlBD,EAAO5tB,EAAOsK,YAAI,IAAAsjB,OAAA,EAAXA,EAAa7pC,MAA8B,QAAf8pC,EAAI7tB,EAAOsK,YAAI,IAAAujB,OAAA,EAAXA,EAAa9pC,KAAM,CAAE,CAACic,EAAOsK,KAAKvmB,IAAK,IAAKwpC,KAAcjuC,KAAa,IAC1GiuC,KACAjuC,EACJ,EAEH,OAAQwM,GACN,KAAK+9B,EAAgByD,EAAUxhC,MAAQwhC,GACrC,MAAME,EAAe9C,EAAsB1qB,GAC3C,IAAI8tB,EAeJ,OAZEA,EADmB,sBAAjBN,EACc,CACdroC,KAAM8lC,EAAmBjrB,GACzB+tB,WAAW,GAGG,CACdlhC,OAAO,EACP2gC,eACA99B,OAAQw7B,EAAqBlrB,IAI1BmrB,EAAamC,EAAUp6B,KAAO,KAAMy6B,EAAMG,GAAgB,CAC/D1S,UAEJ,KAAKwO,EAAe0D,EAAUxhC,MAAQwhC,GACpC,OAAOnC,EACLmC,EAAUp6B,KAAO,KACjBy6B,EAAM,CACJrgC,SAAS,IAEX,CACE8tB,UAIN,KAAKuO,EAAiB2D,EAAUxhC,MAAQwhC,GACtC,OAAOnC,EACLmC,EAAUp6B,KAAO,KACjBy6B,EAAM,CACJxoC,KAAM8lC,EAAmBjrB,GACzB1gB,KAAMgsC,EAAmCtrB,GACzC5Q,WAAW,EACXM,OAAQw7B,EAAqBlrB,KAE/B,CACEob,UAIN,QACE,OAAOA,EAEb,EAWE4S,mBAnHyB7D,GAAWmB,EAAmCnB,GAoHvEc,qBACAP,wBACAR,mCACAgB,uBACAC,eACAG,qC,wICzbF,MA8BMpV,EAAe,SACnB+X,EACAhvC,GAEG,IAAAivC,EAAA,IADH,SAAEC,EAAWC,EAAAA,aAActvC,YAAaC,EAAmBsvC,EAAAA,aAAuB9tC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAElF+tC,EAAmBztC,MAAM6C,QAAQuqC,GAAaA,EAAY,CAACA,GAC/D,MAAMM,EAAc,IAAIvmB,IAExBsmB,EAAmBA,EAAiBptC,KAAIoO,GAClCA,EAASA,UAAYA,EAASvL,IAChCwqC,EAAYxkC,IAAIuF,EAASvL,IAClBuL,EAASA,UAEXA,IAGT,MAAMk/B,GAAgBC,EAAAA,EAAAA,IAAeH,GAAkB,mBAAA3tC,EAAAJ,UAAAC,OAAI2pC,EAAO,IAAAtpC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAPqpC,EAAOrpC,GAAAP,UAAAO,GAAA,OAAKqpC,CAAO,IAE9E,IAAIuE,GAAsE,QAA1CR,EAACnvC,EAAiByvC,EAAeL,UAAS,IAAAD,EAAAA,EAAIjvC,IAAU,GACxF,MAAM0vC,EAAiCD,EAA0B/8B,QAAOma,QAAyBrrB,IAAbqrB,IAQpF,GALE4iB,EADEC,EAA+BnuC,SAAWkuC,EAA0BluC,OAC1C,GAEAsC,IAAW4rC,GAGrCH,EAAYtyB,MAAQsyB,EAAYtyB,OAASyyB,EAA0BluC,OAAQ,CAC7E,MAAMouC,EAA0B,CAAC,EAMjC,OAJA/tC,MAAM0nB,KAAKgmB,GAAa9rC,SAAQ,CAACsB,EAAI0Q,KACnCm6B,EAAwB7qC,GAAM2qC,EAA0Bj6B,EAAM,IAGzDm6B,CACT,CAEA,OAAOF,CACT,EAcMz/B,EAAuB,SAACg/B,GAAuF,IAA1E/X,aAAcC,EAAoBD,EAAY,eAAE2Y,GAAgBtuC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7G,MAAMuuC,EAAmB3Y,EAAkB8X,EAAW,IAChDc,EAA0BluC,MAAM6C,QAAQorC,GAExCE,EAAgB,CAAC,EACjBC,EAAkB,GAClBC,EAAoB,CAAC,EACrBC,EAAsB,GAEtBC,EAAc,GACdC,EAAY,CAAC,EACbC,EAAgB,CAAC,EACjBC,EAAkB,GAElBC,EAAkB,GAClBC,EAAgB,CAAC,EACjBC,EAAoB,CAAC,EACrBC,EAAsB,GAEtBC,EAAgB,GAEhBC,EAAgB,CAAC,EACjBC,EAAkB,GAClBC,EAAW,CAAC,EACZC,EAAa,GAEbC,EAAS,GAETC,EAA0BptC,IAC7BisC,GAA2BD,GAAqB3sC,OAAOkC,QAAQyqC,IAGlEoB,EAAwBztC,SAAQqpB,IAC9B,MAAM/nB,GAAOgrC,IAA2BjjB,aAAQ,EAARA,EAAW,KAAO,KAEpDqkB,EAAmBpB,GAA2BjjB,IAAaA,aAAQ,EAARA,EAAW,KAAMA,EAC5EskB,EACiC,kBAA9BD,EAAgBpC,WACU,kBAA1BoC,EAAgBtjC,OACc,kBAA9BsjC,EAAgB/gC,WACY,kBAA5B+gC,EAAgB7iC,SAEnB,QAAEA,EAAO,UAAE8B,EAAS,MAAEvC,EAAK,UAAEkhC,EAAS,QAAE3qC,GAAagtC,GAAqBD,GAAoB,CAAC,EAWlF,IAAAE,EAcAC,EAUAC,EAjCR,OAAPxsC,IACFksC,EAAO/lC,KAAKnG,GACZosC,EAAgBpsC,GAAKA,GAGnBgqC,IACFkB,EAAgB/kC,KAAKimC,GACrBhB,EAAoBjlC,MAAKimC,aAAe,EAAfA,EAAiB7wC,OAAQ6wC,GAEvC,OAAPpsC,IACFirC,EAAcjrC,GAAMkrC,EAAgBA,EAAgBzuC,OAAS,GAC7D0uC,EAAkBnrC,IAC2B,QAA3CssC,EAAApB,EAAgBA,EAAgBzuC,OAAS,UAAE,IAAA6vC,OAAA,EAA3CA,EAA6C/wC,OAAQ2vC,EAAgBA,EAAgBzuC,OAAS,KAIhGqM,IACFuiC,EAAYllC,KAAK,IACZimC,KACA,IAAI5sC,MAAMH,GAAW,iCAAJwB,OAAsCb,GAAM,KAAJa,OAASb,IAAS,OAEhFwrC,EAAgBrlC,MAAKimC,aAAe,EAAfA,EAAiB7wC,OAAQ6wC,GAEnC,OAAPpsC,IACFsrC,EAAUtrC,GAAMqrC,EAAYA,EAAY5uC,OAAS,GACjD8uC,EAAcvrC,IAAyC,QAAnCusC,EAAAlB,EAAYA,EAAY5uC,OAAS,UAAE,IAAA8vC,OAAA,EAAnCA,EAAqChxC,OAAQ8vC,EAAYA,EAAY5uC,OAAS,KAIlG4O,IACFogC,EAAgBtlC,KAAKimC,GACrBR,EAAoBzlC,MAAKimC,aAAe,EAAfA,EAAiB7wC,OAAQ6wC,GAEvC,OAAPpsC,IACF0rC,EAAc1rC,GAAMyrC,EAAgBA,EAAgBhvC,OAAS,GAC7DkvC,EAAkB3rC,IAC2B,QAA3CwsC,EAAAf,EAAgBA,EAAgBhvC,OAAS,UAAE,IAAA+vC,OAAA,EAA3CA,EAA6CjxC,OAAQkwC,EAAgBA,EAAgBhvC,OAAS,KAIhG8M,GACFsiC,EAAc1lC,KAAKimC,GAGV,OAAPpsC,IACF8rC,EAAc9rC,GAAMosC,EACpBJ,EAAShsC,IAAMosC,aAAe,EAAfA,EAAiB7wC,OAAQ6wC,GAG1CL,EAAgB5lC,KAAKimC,GACrBH,EAAW9lC,MAAKimC,aAAe,EAAfA,EAAiB7wC,OAAQ6wC,EAAgB,IAG3D,MAAMK,EAA2B,IAAlBP,EAAOzvC,QAAgByvC,EAAOzvC,SAAW0vC,EAAwB1vC,OAE1EsrB,EAAW,CACfzc,UAAW,CACTtL,GAAI8rC,EACJY,KAAMX,GAER/B,WAAW,EACXzuC,KAAOkxC,GAAU,CAAC,GAAM,GACxB3jC,OAAO,EACPuC,WAAW,EACXhM,QAAS,KACTkK,SAAS,GAGX,MAA8B,mBAAnBuhC,GACT1sC,OAAOk2B,OAAOvM,EAAU,IACnB+iB,EACD,IAAK/iB,EAAUzc,UAAW,IAAKyc,EAASzc,YACxC,CACE2/B,gBACAC,kBACAC,oBACAC,sBACAY,WACAC,aACAZ,cACAC,YACAC,gBACAC,kBACAC,kBACAC,gBACAC,oBACAC,sBACAM,SACAO,SACAZ,gBACAE,kBACAD,gBACAK,8BAKCpkB,GAGLsjB,EAAY5uC,QACdsrB,EAAS1oB,QAAU,IAAIG,OAAoB,QAAdmtC,EAAAtB,EAAY,UAAE,IAAAsB,OAAA,EAAdA,EAAgBttC,UAAO,yBAAAwB,OAA6B5D,KAAKC,UAAUmuC,EAAY,MAC5GtjB,EAASjf,OAAQ,EACjBif,EAASxsB,KAAQkxC,GAAUlB,GAAkBC,EACtCzjB,GAGL8jB,EAAcpvC,QAChBsrB,EAASxe,SAAU,EACZwe,GAGLmjB,EAAgBzuC,QAAUyuC,EAAgBzuC,SAAWsvC,EAAgBtvC,QACvEsrB,EAAS1oB,QAAU,IAAIG,MAAM,kCAC7BuoB,EAASiiB,WAAY,EACrBjiB,EAASxsB,KAAQkxC,GAAUxB,GAAkBC,EACtCnjB,KAIP0jB,EAAgBhvC,QACfgvC,EAAgBhvC,SAAWsvC,EAAgBtvC,QAC1CyuC,EAAgBzuC,OAASgvC,EAAgBhvC,SAAWsvC,EAAgBtvC,SAEtEsrB,EAAS1c,WAAY,EACrB0c,EAASxsB,KAAQkxC,GAAUT,GAAaC,GAInClkB,GA7BiB,IAAA4kB,CA8B1B,EA2MMC,EAAkB,CACtBvC,aAAY,eACZxvC,YA7ckBA,IAAMgyC,GAAiBthB,EAAAA,EAAAA,SAAeshB,GA8cxD9xC,YAlckB,SAClBwQ,GAAQ,IAAAuhC,EAAA,IACR5xC,EAAKsB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,MACR,SAAE4tC,EAAUrvC,YAAaC,EAAmBsvC,EAAAA,aAAuB9tC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACjC,QADiCswC,EACrE9xC,EAAiBuQ,EAAU6+B,UAAS,IAAA0C,EAAAA,EAAI5xC,CAAK,EA+bhDi3B,eACAjnB,uBACA6hC,+BAtMqC,SACrC7C,GAEG,IADDh/B,qBAAsBC,EAA4BD,GAAsB1O,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EA2B9E,OAAO2O,EAA0B++B,EAAW,CAAEY,eAzBvBA,CACrBkC,EAAYryC,KAET,IADH,gBAAEuwC,EAAe,YAAEG,EAAW,gBAAEI,EAAe,cAAEI,EAAa,SAAEG,EAAQ,WAAEC,EAAU,OAAEQ,GAAQ9xC,EAE9F,MAAMotB,EAAW,IAAKilB,GAEtB,OAAInB,SAAAA,EAAepvC,QACjBsrB,EAASxe,SAAU,EACZwe,IAIPsjB,aAAW,EAAXA,EAAa5uC,SAASgvC,aAAe,EAAfA,EAAiBhvC,SAASyuC,aAAe,EAAfA,EAAiBzuC,WAAWwvC,aAAU,EAAVA,EAAYxvC,UACxF4uC,aAAW,EAAXA,EAAa5uC,WAAWwvC,aAAU,EAAVA,EAAYxvC,UACpCgvC,aAAe,EAAfA,EAAiBhvC,WAAWwvC,aAAU,EAAVA,EAAYxvC,UACxCyuC,aAAe,EAAfA,EAAiBzuC,WAAWwvC,aAAU,EAAVA,EAAYxvC,SAExCsrB,EAAS1c,WAAY,EACrB0c,EAASxsB,KAAQkxC,GAAUT,GAAaC,EACjClkB,GAGFA,CAAQ,GAInB,EAyKEklB,wBA9J8B,SAC9B/C,GAEG,IADDh/B,qBAAsBC,EAA4BD,GAAsB1O,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EA4D9E,OAAO2O,EAA0B++B,EAAW,CAAEY,eA1DvBA,CACrBkC,EAAY5xC,KAeT,IAdH,gBACE8vC,EAAe,kBACfC,EAAiB,oBACjBC,EAAmB,YACnBC,EAAW,cACXE,EAAa,gBACbC,EAAe,gBACfC,EAAe,kBACfE,EAAiB,oBACjBC,EAAmB,cACnBC,EAAa,gBACbE,EAAe,OACfU,GACDrxC,EAED,MAAM2sB,EAAW,IAAKilB,GAEtB,GAAIvB,SAAAA,EAAiBhvC,OAAQ,CAC3B,IAAIlB,EAAOqwC,aAAmB,EAAnBA,EAAsB,GAEjC,GAAIa,EAAQ,CACV,MAAMS,EAAU9uC,OAAO2U,KAAK44B,GAC5BpwC,GAAQ2xC,aAAO,EAAPA,EAAU,KAAMvB,EAAkBuB,EAAQ,UAAQxwC,CAC5D,CAIA,OAFAqrB,EAAS1c,WAAY,EACrB0c,EAASxsB,KAAOA,EACTwsB,CACT,CAEA,OAAI8jB,SAAAA,EAAepvC,QACjBsrB,EAASxe,SAAU,EACZwe,GAIPsjB,UAAAA,EAAa5uC,SACZ4uC,aAAW,EAAXA,EAAa5uC,WAAWsvC,aAAe,EAAfA,EAAiBtvC,UACxCyuC,aAAe,EAAfA,EAAiBzuC,SAAS4uC,aAAW,EAAXA,EAAa5uC,WAAWsvC,aAAe,EAAfA,EAAiBtvC,QAQnEyuC,SAAAA,EAAiBzuC,SAAUyuC,aAAe,EAAfA,EAAiBzuC,WAAWsvC,aAAe,EAAfA,EAAiBtvC,SAC1EsrB,EAAS1oB,QAAU,IAAIG,MAAM,qCAC7BuoB,EAASiiB,WAAY,EACrBjiB,EAASxsB,KAAQkxC,GAAUtB,GAAsBC,EAC1CrjB,GAGFA,GAbLA,EAAS1oB,QAAU3D,EAAAA,QAAAA,gBAAwB2vC,EAAa,2BACxDtjB,EAASjf,OAAQ,EACjBif,EAASxsB,KAAQkxC,GAAUlB,GAAkBC,EACtCzjB,EAUM,GAInB,EAgGEolB,yBArF+B,SAC/BjD,GAEG,IADDh/B,qBAAsBC,EAA4BD,GAAsB1O,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAwE9E,OAAO2O,EAA0B++B,EAAW,CAAEY,eAtEvBA,CACrBkC,EAAYrsC,KAeT,IAdH,gBACEuqC,EAAe,kBACfC,EAAiB,oBACjBC,EAAmB,YACnBC,EAAW,cACXE,EAAa,gBACbC,EAAe,gBACfC,EAAe,kBACfE,EAAiB,oBACjBC,EAAmB,cACnBC,EAAa,gBACbE,EAAe,OACfU,GACD9rC,EAED,MAAMonB,EAAW,IAAKilB,GAEtB,GAAIvB,SAAAA,EAAiBhvC,OAAQ,CAC3B,IAAIlB,EAAOqwC,aAAmB,EAAnBA,EAAsB,GAEjC,GAAIa,EAAQ,CACV,MAAMS,EAAU9uC,OAAO2U,KAAK44B,GAC5BpwC,GAAQ2xC,aAAO,EAAPA,EAAU,KAAMvB,EAAkBuB,EAAQ,UAAQxwC,CAC5D,CAIA,OAFAqrB,EAAS1c,WAAY,EACrB0c,EAASxsB,KAAOA,EACTwsB,CACT,CAEA,GAAIsjB,SAAAA,EAAa5uC,OAAQ,KAAA2wC,EACvB,IAAI7xC,EAAOiwC,aAAe,EAAfA,EAAkB,GAE7B,GAAIiB,EAAQ,CACV,MAAMS,EAAU9uC,OAAO2U,KAAKw4B,GAC5BhwC,GAAQ2xC,aAAO,EAAPA,EAAU,KAAM3B,EAAc2B,EAAQ,UAAQxwC,CACxD,CAOA,OALAqrB,EAAS1oB,QAAU,IAAIG,OACP,QAAd4tC,EAAA/B,EAAY,UAAE,IAAA+B,OAAA,EAAdA,EAAgB/tC,UAAO,6BAAAwB,OAAiC5D,KAAKC,UAAUmuC,EAAY,MAErFtjB,EAASjf,OAAQ,EACjBif,EAASxsB,KAAOA,EACTwsB,CACT,CAEA,GAAI8jB,SAAAA,EAAepvC,OAEjB,OADAsrB,EAASxe,SAAU,EACZwe,EAGT,GAAImjB,SAAAA,EAAiBzuC,SAAUyuC,aAAe,EAAfA,EAAiBzuC,WAAWsvC,aAAe,EAAfA,EAAiBtvC,QAAQ,CAClF,IAAIlB,EAAO6vC,aAAmB,EAAnBA,EAAsB,GAEjC,GAAIqB,EAAQ,CACV,MAAMS,EAAU9uC,OAAO2U,KAAKo4B,GAC5B5vC,GAAQ2xC,aAAO,EAAPA,EAAU,KAAM/B,EAAkB+B,EAAQ,UAAQxwC,CAC5D,CAKA,OAHAqrB,EAAS1oB,QAAU,IAAIG,MAAM,sCAC7BuoB,EAASiiB,WAAY,EACrBjiB,EAASxsB,KAAOA,EACTwsB,CACT,CAEA,OAAOA,CAAQ,GAInB,GC7dM3rB,EAAa,CACjBixC,WAAYT,E,oTCSd,MAAM,aAAE3sC,GAAiBvE,EAAAA,QAuCnB4xC,EAAYnvC,IAChB,GAAIrB,MAAM6C,QAAQxB,GAChB,OAAOA,EAAIhB,IAAImwC,GAGjB,GAAIjtC,IAAelC,GAAM,CACvB,MAAMovC,EAAa,CAAC,EAMpB,OAJAnvC,OAAOkC,QAAQnC,GAAKO,SAAQ/D,IAAgB,IAAdqC,EAAK+rC,GAAIpuC,EACrC4yC,EAAW1E,IAAW7rC,IAAQswC,EAAUvE,EAAI,IAGvCwE,CACT,CAEA,OAAOpvC,CAAG,EAkCNqvC,EAAiB,WAAkE,IAAjE,OAAEC,EAAM,QAAEC,GAAU,EAAI,GAAE1tC,EAAK,KAAI,SAAE+nB,EAAQ,OAAEke,GAAQzpC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjF,MAAM,MAAEtB,EAAK,MAAE4N,EAAQ,CAAE6kC,QAAS,MAAS1H,aAAM,EAANA,EAAQ2H,SAAS7lB,EAAU,CAAE2lB,cAAc,CAAC,EAYvF,OAVI5kC,EAAM6kC,QAAQlxC,SAAWf,EAAAA,QAAAA,WAC3By/B,QAAQryB,MACN,IAAItJ,MAAM,+DAADqB,OACwDb,GAAM,MAAK,MAAAa,OAAKiI,EAAM6kC,QAClFxwC,KAAI/B,IAAA,IAAC,QAAE8K,EAAU,CAAC,EAAC,QAAE7G,EAAO,KAAE0I,GAAM3M,EAAA,SAAAyF,OAAQxB,EAAO,KAAAwB,OAAIkH,EAAI,MAAAlH,OAAK5D,KAAKC,UAAUgJ,GAAQ,IACvFue,KAAK,SAMP,UADCgpB,EAEGH,EAAUpyC,GAEVA,CAEb,EAEM2yC,EAAiB,CACrBP,UAAS,EACTrtC,eACA6tC,mBAhDyB,SAAC7oB,GAC1B,IAAInc,EAAM,QAAAlM,EAAAJ,UAAAC,OAD6BlB,EAAI,IAAAuB,MAAAF,EAAA,EAAAA,EAAA,KAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAJxB,EAAIwB,EAAA,GAAAP,UAAAO,GAE3C,IAAIkrC,EAAc1sC,EAElB,IACE0sC,EAAchjB,KAAY1pB,EAC5B,CAAE,MAAOyN,GACPF,EAAQE,CACV,CAEA,MAAO,CAAEzN,KAAM0sC,EAAan/B,QAC9B,EAsCE0kC,iBACAO,sBAvG4B,SAACzxC,GAAqE,IAC9F0xC,GAD+B,QAAEjJ,EAAU,IAAI,aAAE0E,EAAe,oBAAoBjtC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAmB5F,OAJEwB,QAAQiwC,KAAK,CAXb,IAAIjwC,SAAQ,CAACkwC,EAAGzmC,KACdumC,EAAavuC,OAAOkJ,WAAWlB,EAAQs9B,EAAS,IAAIvlC,MAAMiqC,GAAc,IAGxDviC,WAClB,MAAM6gB,QAAiBzrB,IAEvB,OADAmD,OAAOkmC,aAAaqI,GACbjmB,CAAQ,EAIQomB,KAAgBC,SAAQ,KAC7C3uC,OAAOkmC,aAAaqI,EAAW,GAIrC,GC3BMK,EAAmB7sC,OAAO0D,SAASjG,QAAoC,KAAO,IAO9EqvC,EAAqB,CAAC,EAOtBC,EAAsB,IAAIC,EAAAA,EAAS,CACvCC,IAAKjtC,OAAO0D,SAASjG,QAAkC,KAAO,IAC9D4V,IAAK,IACL65B,gBAAgB,IA0BZC,EAAmBznC,iBAGpB,IAFH+qB,EAAMz1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GACV,iBAAEoyC,EAAmB,oBAAmB,cAAEC,EAAgBN,EAAmB,WAAEO,EAAaT,GAAkB7xC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAElH,MAAMuyC,EAAgB,CACpBhK,QAAS+J,KACN7c,EACHt1B,WAAOD,EACPsyC,cAAe/c,EAAOt1B,MACtBwD,OAAQ8xB,EAAO9xB,QAAU,OAErB8uC,EAAuB,GACvBC,EAAgBC,IAAAA,SAGtBJ,EAAcC,eAAgD,IAAhCD,EAAcC,eAAmD,QAAzBD,EAAc5uC,OAGpF,MAAMivC,GAA2C,IAAhCL,EAAcC,eAA0BnB,EAAe5tC,aAAa8uC,IAAmB,KAOxG,IAJoC,IAAhCA,EAAcM,gBAChBN,EAAcK,QAAUA,IAGG,IAAzBL,EAAcO,OAAiB,CACjC,MAAMC,EACJR,EAAcS,UAAY3B,EAAe5tC,aAAa,IAAK8uC,EAAexzC,UAAMmB,EAAW+yC,YAAQ/yC,IAEjG4xC,EAAmBiB,UACfjB,EAAmBiB,GAAgBD,OAAOV,GAGlDN,EAAmBiB,GAAkBG,EAAAA,YAAAA,SACrCX,EAAcY,YAAcrB,EAAmBiB,GAAgBK,aAExDb,EAAcO,MACvB,CAEA,IAAoC,IAAhCP,EAAcC,cAAwB,CACxC,MAAMa,EAAiBhB,EAAciB,IAAIV,GAEzC,GAAIS,EASF,OARAd,EAAcgB,QAAUC,GACtBhyC,QAAQC,QAAQ,IACX4xC,EACHlkC,OAAQ,IACRk7B,WAAY,eACZ5U,OAAQ+d,IAGLd,EAAcH,EAEzB,CAkEA,GAhEIA,EAAc9I,QAChBgJ,EAAqB9oC,KAAK4oC,EAAc9I,QAGtC8I,EAAckB,WAChBhB,EAAqB9oC,KAAK4oC,EAAckB,WAG1ChB,EAAqBvwC,SAAQ/D,IAAwC,IAAtCu1C,EAAkBC,GAAex1C,EAC9D,MAAMy1C,EAAe,MAAC1zC,EAAWqrB,GAAY/pB,QAAQyJ,OAAOsgB,IAExDmoB,IACFE,EAAa,GAAKroB,IAChB,MAAMqkB,EAAkB,IAAKrkB,IACvB,KAAExsB,EAAMuN,MAAOunC,GAAmBxC,EAAeC,mBACrDoC,EACA9D,EAAgB7wC,KAChB6wC,EAAgBna,QAOlB,OAJKoe,IACHjE,EAAgB7wC,KAAOA,GAGlB6wC,CAAe,GAItB+D,IACFC,EAAa,GAAKroB,IAChB,MAAMqkB,EAAkB,IAAMrkB,EAASA,UAAYA,GAEnD,IAAIqkB,aAAe,EAAfA,EAAiB/sC,WAAYuvC,EAC/B,OAAO5wC,QAAQyJ,OAAO2kC,GAGxB,MAAM,KAAE7wC,EAAMuN,MAAOunC,GAAmBxC,EAAeC,mBACrDqC,GACA/D,aAAe,EAAfA,EAAiB7wC,QAAQ6wC,aAAe,EAAfA,EAAiB/sC,SAC1C+sC,EAAgBna,QAOlB,OAJKoe,IACHjE,EAAgBrkB,SAAW,IAAKqkB,EAAiB7wC,SAG5CyC,QAAQyJ,OAAO2kC,EAAgB,GAI1C8C,EAAcoB,aAAavoB,SAASa,OAAOwnB,EAAa,KAGtB,IAAhCrB,EAAcC,eAChBE,EAAcoB,aAAavoB,SAASa,KAClCb,IACE,MAAMqkB,EAAkB,IAAKrkB,GAE7B,OADA8mB,EAAc0B,IAAInB,EAAShD,GACpBA,CAAe,IAExBrkB,GAAY/pB,QAAQyJ,OAAOsgB,KAIE,mBAAtBgnB,EAAcyB,IAAoB,CAC3C,MAAMC,EAAkB1B,EAAcyB,IACtCzB,EAAcyB,IAAM,YAEpB,IACIE,EADArxC,EAAU,oBAEVsxC,GAAY,EAEhB,IACED,QAAyB7C,EAAeE,sBAAsB0C,EAAiB,CAAE1L,QAAS+J,GAC5F,CAAE,MAAO9lC,GACP2nC,GAAY,EACZtxC,EAAU2J,EAAE3J,SAAW2J,CACzB,CAGE+lC,EAAcgB,QADZY,EACsBX,GACtBhyC,QAAQC,QAAQ,CACd1C,KAAMm1C,EACN/kC,OAAQ,IACRk7B,WAAYxnC,EACZ4yB,OAAQ+d,IAGYA,GACtBhyC,QAAQyJ,OAAO,IACV,IAAIjI,MAAMH,GACbA,UACAsM,OAAQ,IACRsmB,OAAQ+d,GAGhB,CAEA,OAAOd,EAAcH,EACvB,E,4CCvMA,MAAM6B,EAAMC,IAAAA,OAAeC,KAOrBC,EAAqBH,EAAII,SAC5Bj+B,KAAK,CACJk+B,SAAUL,EAAII,OAAO,CACnB11C,KAAMs1C,EAAII,OAAO,CACfE,aAAcN,EAAIO,UAAUryB,SAAQ,KAEnCsyB,SAAQ,GACRtyB,QAAQ,CAAC,KAEXsyB,SAAQ,GACRtyB,QAAQ,CAAC,GACZuyB,aAAcT,EAAII,OAAO,CACvB,cAAiCJ,EAAII,OAAO,CAC1CM,YAAaV,EAAIO,UAAUryB,SAAQ,KAElCsyB,SAAQ,GACRtyB,QAAQ,CAAC,KAEXsyB,SAAQ,GACRtyB,QAAQ,CAAC,KAEbsyB,SAAQ,GACRtyB,QAAQ,CAAC,GAONyyB,EAAkBX,EAAII,OAAO,CACjCQ,WAAYZ,EAAIa,SAASC,WAAWC,MAAM,MAC1CC,oBAAqBhB,EAAIiB,QAAQH,WAAW5yB,QAAQ,MAEnDsyB,SAAQ,GACRtyB,UAOGgzB,EAA4BlB,EAAIiB,QAAQE,MAAMR,GAAiBzyB,QAAQ,IAEvEkzB,EAAkB,CACtB12C,KAAMysB,GAAYylB,EAAe,CAAEzlB,WAAUke,OAAQ8K,EAAoB/wC,GAAI,cAC7EiyC,YAAalqB,GAAYylB,EAAe,CAAEzlB,WAAUke,OAAQ6L,EAA2B9xC,GAAI,sB,eC7C7F,MA2EMkyC,EAAuB,CAC3B52C,KA5EWysB,IAAY,IAAAoqB,EAAAC,EACvB,MAAMhG,EAAkB,CAAC,GAEvB,CAACiG,EAAAA,GAAAA,qCAAwDpB,EAAW,CAAC,EACrE,CAACoB,EAAAA,GAAAA,yCAA4DhB,EAAe,CAAC,GAC3EtpB,GAAY,CAAC,EAWjB,OATAqkB,EAAgBkG,SACdrB,SAA4E,QAApEkB,EAARlB,EAAWoB,EAAAA,GAAAA,0CAAAA,aAAiE,IAAAF,OAApE,EAARA,EACEE,EAAAA,GAAAA,+CAAAA,cACG,EAEPjG,EAAgBmG,YACdlB,SAA+B,QAAnBe,EAAZf,EAAe31C,EAAAA,QAAAA,gBAAgB,IAAA02C,OAAnB,EAAZA,EAAkCC,EAAAA,GAAAA,kDAAAA,aAClC,EAEKjG,CAAe,EA6DtB6F,YAlDsB,SAAClqB,GAA2C,IAAjC,OAAEkK,EAASugB,EAAAA,IAAYh2C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC5D,MAAM4vC,EAAkB,CACtB6F,YAAa,CAAC,EACdzoC,WAAY,CAAC,GA0Cf,OAvCAue,SAAAA,EAAUrpB,SACR/D,IAGM,IAFJ,CAAC03C,EAAAA,GAAAA,4CAAAA,YAA2Eb,EAC5E,CAACa,EAAAA,GAAAA,4CAAAA,eAA8EI,EAAc,IAC9F93C,EACC,MAAO+Q,EAAM,GAAIgnC,EAAUC,IAAanB,aAAU,EAAVA,EAAY1nB,MAAM,OAAQ,GAapD,IAAA8oB,EAAAC,EAXTzG,EAAgB6F,YAAYvmC,KAC/B0gC,EAAgB6F,YAAYvmC,GAAO,CACjConC,KAAK,EACLC,UAAW,CAAC,IAIZL,IAAaM,EAAAA,GAAAA,KAAsBL,IAAcM,EAAAA,GAAAA,MACnD7G,EAAgB6F,YAAYvmC,GAAKonC,KAAM,GAGrCJ,IACkD,QAApDG,GAAAD,EAAAxG,EAAgB6F,YAAYvmC,GAAKqnC,WAAUL,UAAS,IAAAG,IAApDD,EAA2CF,GAAc,CAAC,GAEtDC,IACFvG,EAAgB6F,YAAYvmC,GAAKqnC,UAAUL,GAAUC,GAAaF,GAEtE,IAKJr0C,OAAOkC,QAAQ2xB,GAAQvzB,SAAQtD,IAAiD,IAAA83C,EAAA,IAA/Cl2C,GAAOi1C,YAAakB,IAAsB/3C,EACzEgxC,EAAgB5iC,WAAWxM,IAAuC,QAAhCk2C,EAAA9G,EAAgB6F,YAAYj1C,UAAI,IAAAk2C,OAAA,EAAhCA,EAAkCJ,OAAO,EAE3EK,EAAoBz0C,SAAQiC,IAAsC,IAAAyyC,EAAAC,EAAAC,EAAA,IAAnCZ,SAAUa,EAAKZ,UAAWa,GAAI7yC,EACvB,QAApCyyC,EAAIhH,EAAgB6F,YAAYj1C,UAAI,IAAAo2C,GAAW,QAAXC,EAAhCD,EAAkCL,iBAAS,IAAAM,GAAO,QAAPC,EAA3CD,EAA8CE,UAAI,IAAAD,GAAlDA,EAAqDE,KACvDpH,EAAgB5iC,WAAWxM,IAAO,EACpC,GACA,IAGGovC,CACT,GCgBMqH,EAtFUvsC,iBAAwB,IAAjBpH,EAAOtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChC,MAAM,OAAEypC,EAAS,CAAC+L,EAAgB12C,MAAK,UAAE20C,EAAY,CAACiC,EAAqB52C,OAAUwE,GAC/E,SAAE4zC,GAAaj0C,OACrB,OAAOkvC,EAAiB,CACtB6B,IAAKtpC,UACH,IACE,OACGxL,EAAAA,QAAAA,UACCi4C,IACE,CAAC,EACD,CACEtB,EAAAA,GAAAA,oCACAA,EAAAA,GAAAA,0CAAAA,KACAA,EAAAA,GAAAA,+CAAAA,WAEwC,SAA1CpzC,kBAAY20C,kCAETF,EAASG,OAAOroC,KAAKsoC,SAEhC,CAAE,MAAO9qC,GACP,MAAM,IAAIxJ,MAAM,uCAADqB,OAAwCmI,EAAE3J,SAC3D,GAEF4mC,SACAgK,aAEJ,EA4DMwD,EAnDqB,WAAqD,IAApDxqC,EAAOzM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG4B,OAAO2U,KAAKy/B,EAAAA,IAAa1yC,EAAOtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACxE,MAAM,OAAEypC,EAAS,CAAC+L,EAAgBC,aAAY,UAAEhC,EAAY,CAACiC,EAAqBD,cAAiBnyC,EAC7Fi0C,EAAkBj3C,MAAM6C,QAAQsJ,IAAYA,GAAY,CAACA,IACzD,SAAEyqC,GAAaj0C,OAYrB,OAAOkvC,EAAiB,CACtB6B,IAAKtpC,UACH,IAAI8sC,EAEJ,IACE,MAAMC,QAAuBj2C,QAAQ80C,IAAIiB,EAAe52C,KAAImC,GAhB3CA,IACpB5D,EAAAA,QAAAA,UAAoB,CACnB,CACE,CAACw4C,EAAAA,GAAAA,YAAmCj1C,kBAAYk1C,oCAElD,CACE,CAACD,EAAAA,GAAAA,YAAmCj1C,kBAAYm1C,sCAGpDV,EAASG,OAAOQ,mBAAmB/0C,GAOqCg1C,CAAeh1C,MAE/ExC,MAAM6C,QAAQs0C,KAChBD,EAAkB,IAAIC,EAAe5pB,QAEzC,CAAE,MAAOrhB,GACP,MAAM,IAAIxJ,MAAM,6CAADqB,OAA8CmI,EAAE3J,SACjE,CAEA,OAAO20C,CAAe,EAExB/N,SACAgK,aAEJ,EAiBMwD,EATmBvsC,iBAA2B,IAApBqtC,IAAQ/3C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACtC,MAAM,SAAEk3C,GAAaj0C,OACrB,UACQi0C,EAASG,OAAO9oC,iBAAiBwpC,EACzC,CAAE,MAAOvrC,GACP,MAAM,IAAIxJ,MAAM,6BAADqB,OAA8BmI,EAAE3J,SACjD,CACF,EC/CMm1C,EAAkB,CACtBC,gBAzCsBl5C,IAAQm5C,EAAAA,EAAAA,iBAAmBn5C,GA0CjDo5C,mBAlCyB30C,IAAM40C,EAAAA,EAAAA,oBAAsB50C,GAmCrD60C,mBA5ByBA,KAAMC,EAAAA,EAAAA,sBA6B/BhqC,cArBoB7B,GAAWhO,GAC/BA,EAAS,CACP8M,KAAMgtC,EAAAA,GAAAA,mBACNzO,QAAStoC,QAAQ80C,IAAI,CAACW,IAA4BA,EAAoCxqC,OAmBxF8B,iBAVuBwpC,IAAY,CACnCxsC,KAAMgtC,EAAAA,GAAAA,4BACNzO,QAASmN,EAAkCc,MCvBvCS,EAAc9tC,gBACZusC,IACC9E,EApBa,WAAkB,MAAM,CAC5CsG,QAAS,CAAC,KADuBz4C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAGtC,CAiByB04C,CAAcjjB,K,eCtBxC,MAAM2e,EAAMC,IAAAA,OAAeC,KAOrBqE,EAAYvE,EAAII,OAAO,CAC3BoE,KAAMxE,EAAIa,SAAS3yB,QAAQ,MAC3B8T,OAAQge,EAAIa,SAAS3yB,QAAQ,QAC5BsyB,SAAQ,GAOLiE,EAAsBzE,EAAII,SAC7Bj+B,KAAK,CACJ3T,OAAQwxC,EAAIiB,QAAQE,MAAMoD,GAAWr2B,QAAQ,MAE9CsyB,SAAQ,GAELkE,EAAc1E,EAAII,SAOlBuE,EAAqB3E,EAAII,SAC5Bj+B,KAAK,CACJktB,MAAO2Q,EAAI4E,SAASC,UAAU32B,QAAQ,GACtC4T,QAASke,EAAIa,SAASiE,SAASt3C,OAAOwR,OAAOxF,EAAAA,GAAAA,gCAE9CgnC,SAAQ,GAOLuE,EAAqBJ,EACxBxiC,KAAK,CACJ6iC,UAAWhF,EAAIa,SAASiE,SAASt3C,OAAOwR,OAAOxF,EAAAA,GAAAA,+BAEhDgnC,SAAQ,GAOLyE,EAAejF,EAAII,OAAO,CAC9B5vC,KAAMwvC,EAAIxvC,OAAO00C,MAAMnE,MAAM,MAC7BoE,SAAUnF,EAAIO,UAAUO,WAAWC,MAAM,MACzCqE,sBAAuBpF,EAAIO,UAAUO,WAAWC,MAAM,MACtDz2C,MAAO01C,EAAI4E,SAAS7D,MAAM,MAAM7yB,QAAQ,KAEvCsyB,SAAQ,GACRtyB,UAOGm3B,EAAyBrF,EAAII,SAASj+B,KAAK,CAC/CxX,KAAMq1C,EAAIiB,QAAQE,MAAM8D,GAAc/2B,QAAQ,IAC9Co3B,MAAOZ,EAAYx2B,QAAQ,CAAC,GAC5ByH,KAAMovB,EAAmB72B,QAAQ,CAAC,KAQ9Bq3B,EAAmBvF,EAAII,SAC1Bj+B,KAAK,CACJktB,MAAO2Q,EAAI4E,SAASC,UAAU32B,QAAQ,KAEvCsyB,SAAQ,GAOLgF,EAAaxF,EAAII,OAAO,CAC5BqF,aAAczF,EAAIa,SAASC,WAAWC,MAAM,MAC5C2E,aAAc1F,EAAIa,SAASC,WAAWC,MAAM,MAC5C4E,wBAAyB3F,EAAIa,SAASC,WAAWC,MAAM,MACvD6E,UAAW5F,EAAIxvC,OAAO00C,MAAMnE,MAAM,QAEjCP,SAAQ,GACRtyB,UAOG23B,EAAuB7F,EAAII,SAASj+B,KAAK,CAC7CxX,KAAMq1C,EAAIiB,QAAQE,MAAMqE,GAAYt3B,QAAQ,IAC5Co3B,MAAOZ,EAAYx2B,QAAQ,CAAC,GAC5ByH,KAAM4vB,EAAiBr3B,QAAQ,CAAC,KAQ5B43B,EAAkBnB,EAOlBoB,GAAY/F,EAAII,OAAO,CAC3B4F,eAAgBhG,EAAIa,SAASoF,YAAYnF,WAAWC,MAAM,MAC1D2E,aAAc1F,EAAIa,SAASC,WAAWC,MAAM,MAC5CmF,cAAelG,EAAIa,SAASoF,YAAYnF,WAAWC,MAAM,MACzD0E,aAAczF,EAAIa,SAASC,WAAWC,MAAM,MAC5CoF,iBAAkBnG,EAAIa,SAASoF,YAAYnF,WAAWC,MAAM,MAC5DqF,iBAAkBpG,EAAI4E,SAASC,UAAU32B,QAAQ,GACjDy3B,wBAAyB3F,EAAIa,SAASC,WAAWC,MAAM,MACvD6E,UAAW5F,EAAIxvC,OAAO00C,MAAMnE,MAAM,QAEjCP,SAAQ,GACRtyB,UAOGm4B,GAAsBrG,EAAII,SAASj+B,KAAK,CAC5CxX,KAAMq1C,EAAIiB,QAAQE,MAAM4E,IAAW73B,QAAQ,IAC3Co3B,MAAOZ,EAAYx2B,QAAQ,CAAC,GAC5ByH,KAAMmwB,EAAgB53B,QAAQ,CAAC,KAQ3Bo4B,GAAsB3B,EACzBxiC,KAAK,CACJokC,aAAcvG,EAAIiB,QACfE,MAAMnB,EAAIa,SAASiE,SAASt3C,OAAOwR,OAAOxF,EAAAA,GAAAA,8BAC1C0U,QAAQ,MAEZsyB,SAAQ,GAOLgG,GAAgBxG,EAAII,OAAO,CAC/BqG,YAAazG,EAAIa,SAASC,WAAWC,MAAM,MAC3CrN,SAAUsM,EAAIa,SAASoF,YAAYnF,WAAWC,MAAM,MACpDiF,eAAgBhG,EAAIa,SAASoF,YAAYnF,WAAWC,MAAM,KAAM,IAChE2E,aAAc1F,EAAIa,SAASC,WAAWC,MAAM,MAC5C2F,iBAAkB1G,EAAIa,SAASoF,YAAYnF,WAAWC,MAAM,KAAM,IAClE4F,mBAAoB3G,EAAIa,SAASC,WAAWC,MAAM,MAClDwF,aAAcvG,EAAIiB,QAAQ/yB,QAAQ,IAClCk4B,iBAAkBpG,EAAI4E,SAASC,UAAU32B,QAAQ,GACjDy3B,wBAAyB3F,EAAIa,SAASC,WAAWC,MAAM,MACvD6E,UAAW5F,EAAIxvC,OAAO00C,MAAMnE,MAAM,QAEjCP,SAAQ,GACRtyB,UAOG04B,GAA0B5G,EAAII,SAASj+B,KAAK,CAChDxX,KAAMq1C,EAAIiB,QAAQE,MAAMqF,IAAet4B,QAAQ,IAC/Co3B,MAAOZ,EAAYx2B,QAAQ,CAAC,GAC5ByH,KAAM2wB,GAAoBp4B,QAAQ,CAAC,KAQ/B24B,GAA0BlC,EAC7BxiC,KAAK,CACJ2kC,kBAAmB9G,EAAIa,SAASiE,MAAM,QAASt3C,OAAOwR,OAAOxF,EAAAA,GAAAA,yCAE9DgnC,SAAQ,GAOLuG,GAAoB/G,EAAII,OAAO,CACnCgF,sBAAuBpF,EAAIO,UAAUO,WAAWC,MAAM,MACtDiG,gBAAiBhH,EAAIxvC,OAAO00C,MAAMnE,MAAM,MACxCkG,aAAcjH,EAAIa,SAASC,WAAWC,MAAM,MAC5CmG,SAAUlH,EAAI4E,SAAS7D,MAAM,MAAM7yB,QAAQ,GAC3Ci5B,cAAenH,EAAIa,SAASiE,SAASt3C,OAAOwR,OAAOxF,EAAAA,GAAAA,8BACnD4tC,eAAgBpH,EAAI4E,SAAS7D,MAAM,MAAM7yB,QAAQ,GACjDshB,IAAKwQ,EAAIa,SACNoF,YACAnB,SAASt3C,OAAOwR,OAAOxF,EAAAA,GAAAA,gCAEzBgnC,SAAQ,GACRtyB,UAOGm5B,GAA8BrH,EAAII,SAASj+B,KAAK,CACpDxX,KAAMq1C,EAAIiB,QAAQE,MAAM4F,IAAmB74B,QAAQ,IACnDo3B,MAAOZ,EAAYx2B,QAAQ,CAAC,GAC5ByH,KAAMkxB,GAAwB34B,QAAQ,CAAC,KAQnCo5B,GAAYtH,EAAII,OAAO,CAC3B5vC,KAAMwvC,EAAIxvC,OAAO00C,MAAMnE,MAAM,MAC7BoE,SAAUnF,EAAIO,UAAUO,WAAWC,MAAM,MACzCz2C,MAAO01C,EAAI4E,SAAS7D,MAAM,MAAM7yB,QAAQ,KAEvCsyB,SAAQ,GACRtyB,UAOGq5B,GAAkB5C,EACrBxiC,KAAK,CACJqlC,qBAAsBxH,EAAIO,UAAUO,WAAWC,MAAM,MACrD0G,yBAA0BzH,EAAIO,UAAUO,WAAWC,MAAM,MACzDiE,UAAWhF,EAAIa,SAASiE,SAASt3C,OAAOwR,OAAOxF,EAAAA,GAAAA,6BAC/CkuC,cAAeJ,KAEhB9G,SAAQ,GAOLmH,GAAsB3H,EAAII,SAASj+B,KAAK,CAC5CxX,KAAMq1C,EAAIiB,QAAQE,MAAMmG,IAAWp5B,QAAQ,IAC3Co3B,MAAOZ,EAAYx2B,QAAQ,CAAC,GAC5ByH,KAAM4xB,GAAgBr5B,QAAQ,CAAC,KAG3B05B,GAAc,CAClBC,SAAU1wB,GAAYylB,EAAe,CAAEzlB,WAAUke,OAAQgQ,EAAwBj2C,GAAI,kBACrFZ,OAAQ2oB,GAAYylB,EAAe,CAAEzlB,WAAUke,OAAQoP,EAAqBr1C,GAAI,gBAChF04C,OAAQ3wB,GAAYylB,EAAe,CAAEzlB,WAAUke,OAAQwQ,EAAsBz2C,GAAI,gBACjF24C,MAAO5wB,GAAYylB,EAAe,CAAEzlB,WAAUke,OAAQgR,GAAqBj3C,GAAI,eAC/E44C,UAAW7wB,GAAYylB,EAAe,CAAEzlB,WAAUke,OAAQuR,GAAyBx3C,GAAI,mBACvF64C,cAAe9wB,GACbylB,EAAe,CAAEzlB,WAAUke,OAAQgS,GAA6Bj4C,GAAI,uBACtE84C,MAAO/wB,GAAYylB,EAAe,CAAEzlB,WAAUke,OAAQsS,GAAqBv4C,GAAI,gB,2BCxQjF,MAyKM+4C,GAAmB,CACvBJ,MA1KgB5wB,IAChB,MAAMqkB,EAAkB,CAAC,GACjB,CAAChiC,EAAAA,GAAAA,wBAAuC7O,EAAO,GAAI,CAAC6O,EAAAA,GAAAA,wBAAuCmc,EAAO,CAAC,GACzGwB,GAAY,CAAC,EAqBf,OAnBAqkB,EAAgB7wC,KAAOA,EAAK4B,KAC1BxC,IAAA,IACE,CAACq+C,EAAAA,GAAAA,kBAAoChZ,EACrC,CAACgZ,EAAAA,GAAAA,yBAA2CC,KACzClS,GACJpsC,EAAA,MAAM,CACL,CAACq+C,EAAAA,GAAAA,kBAAoChZ,EACrC,CAACgZ,EAAAA,GAAAA,yBAA2CC,EAC5CjZ,iBACAiZ,2BACGlS,EACJ,IAGHqF,EAAgB7lB,KAAO,CACrB0Z,MAAO1Z,EAAK2yB,EAAAA,GAAAA,OACZ92B,UAAWmE,EAAK2yB,EAAAA,GAAAA,UAGX9M,CAAe,EAmJtBwM,UAnIoB,SAAC7wB,GAA8B,IAAAoxB,EAAAC,EAAAC,EAAA,IAApB,OAAE5J,GAAQjzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7C,MAAM4vC,EAAkB,CAAC,GACjB,CAAChiC,EAAAA,GAAAA,wBAAuC7O,EAAO,GAAI,CAAC6O,EAAAA,GAAAA,wBAAuCmc,EAAO,CAAC,GACzGwB,GAAY,CAAC,EACTuxB,EAAmB/yB,EAAKgzB,EAAAA,GAAAA,cAE9BnN,EAAgB7wC,KAAOA,EAAK4B,KAC1B/B,IAIM,IAHJ,CAACo+C,EAAAA,GAAAA,cAAoCrC,EACrC,CAACqC,EAAAA,GAAAA,kBAAwCxZ,KACtC+G,GACJ3rC,EACC,MAAM6sC,EAAc,CAClB,CAACuR,EAAAA,GAAAA,kBAAwCxZ,EACzCA,oBACG+G,GAOL,OAJAuS,SAAAA,EAAkB56C,SAAQ,CAACkF,EAAa8M,KACtCu3B,EAAYrkC,GAAeuzC,EAAazmC,EAAM,IAGzCu3B,CAAW,IAItB,IAAIwR,EAAgD,QAAnCN,EAAG5yB,aAAI,EAAJA,EAAOgzB,EAAAA,GAAAA,YAAyB,IAAAJ,EAAAA,EAAI1J,aAAM,EAANA,EAAS8J,EAAAA,GAAAA,KAcjE,OAZiB,QAAbH,EAAAK,SAAa,IAAAL,OAAA,EAAbA,EAAerzC,iBAAkBg5B,EAAAA,GAAAA,QAAAA,cACnC0a,EAAgB1a,EAAAA,GAAAA,SACM,QAAbsa,EAAAI,SAAa,IAAAJ,OAAA,EAAbA,EAAetzC,iBAAkBg5B,EAAAA,GAAAA,MAAAA,gBAC1C0a,EAAgB1a,EAAAA,GAAAA,OAGlBqN,EAAgB7lB,KAAO,CACrB0Z,MAAO1Z,EAAKgzB,EAAAA,GAAAA,OACZnZ,IAAKqZ,EACLr3B,UAAWmE,EAAKgzB,EAAAA,GAAAA,UAGXnN,CACT,EA2FEsN,cA3EwB,SAAC3xB,GAA2C,IAAA4xB,EAAAC,EAAAC,EAAA,IAAjC,YAAEC,EAAW,OAAErK,GAAQjzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC9D,MAAM4vC,EAAkB,CAAC,GACjB,CAAChiC,EAAAA,GAAAA,wBAAuC7O,EAAO,GAAI,CAAC6O,EAAAA,GAAAA,wBAAuCmc,EAAO,CAAC,GACzGwB,GAAY,CAAC,EACThC,EAAcxiB,KAAAA,IAAWuB,EAAAA,GAAAA,kBACzBi1C,EAAiBx2C,KAAAA,IAAWuB,EAAAA,GAAAA,kBAA8BU,OAAO,aACvE,IAAIw0C,EAAkB,EA+DtB,OA7DA5N,EAAgB7wC,KAAOA,EAAK4B,KAC1B,CAAAwD,EAOE+P,KACG,IAND,CAACupC,EAAAA,GAAAA,MAAiC74C,EAClC,CAAC64C,EAAAA,GAAAA,OAAkC/+C,EACnC,CAAC++C,EAAAA,GAAAA,UAAqCvrC,EACtC,CAACurC,EAAAA,GAAAA,uBAAkDtZ,GACpDhgC,EAGD,MAAMu5C,EAAc32C,KAAAA,IAAWnC,GACzB8kB,EAAgBg0B,EAAY10C,OAAO,eAAiBu0C,EACpDI,EAAeD,EAAYE,KAAKr0B,GAAe,EAMrD,OAJIo0B,IAAiBj0B,IACnB8zB,GAAmB,GAGd,CACL1qC,EAAGoB,EACHnB,GACmB,IAAhBuqC,GAAwBK,IACR,IAAhBL,IAAgD,IAAxBnZ,IACvBmZ,IAA2B,IAAZprC,GAAqByrC,IACpCL,IAA2B,IAAZprC,GAAqBwX,EAClC,KACAhrB,EACNkG,OACAsN,UACAiyB,sBACAza,gBACAi0B,eACD,IAODH,IAAoB5N,EAAgB7wC,KAAKkB,OAAS,IACpD2vC,EAAgB7wC,KAAO,CACrB,IACK6wC,EAAgB7wC,KAAK,GACxB+T,EAAG,EACH4W,eAAe,MAEdkmB,EAAgB7wC,MACnB4B,KAAI,CAACuW,EAAOhD,KAAU,IAAMgD,EAAOpE,EAAGoB,OAG1C07B,EAAgB7lB,KAAO,CACrB+d,SAAUmL,aAAM,EAANA,EAASltB,EAAAA,GAAAA,UACnB0d,MAAO1Z,EAAK8zB,EAAAA,GAAAA,OACZC,uBAAwB/zB,aAAI,EAAJA,EAAO8zB,EAAAA,GAAAA,0BAC/BE,SAAUh0B,EAAK8zB,EAAAA,GAAAA,WACfj4B,UAAWmE,EAAK8zB,EAAAA,GAAAA,SAChB7zB,iBAAkBD,SAA+C,QAA3CozB,EAAJpzB,EAAO8zB,EAAAA,GAAAA,sBAAwC,IAAAV,OAA3C,EAAJA,EAAkDU,EAAAA,GAAAA,MACpE3zB,oBAAqBH,SAA+C,QAA3CqzB,EAAJrzB,EAAO8zB,EAAAA,GAAAA,sBAAwC,IAAAT,OAA3C,EAAJA,EAAkDS,EAAAA,GAAAA,UACvEzzB,kBAAmBL,SAA+C,QAA3CszB,EAAJtzB,EAAO8zB,EAAAA,GAAAA,sBAAwC,IAAAR,OAA3C,EAAJA,EAAkDQ,EAAAA,GAAAA,QAGhEjO,CACT,GCvKMoO,GAV4B,SAACx6C,GAAoB,IAAAy6C,EAAA,IAAhBhL,EAAMjzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/C,MAAMk+C,EAAY16C,EAElB,OAAIyvC,SAA0C,QAApCgL,EAANhL,EAASltB,EAAAA,GAAAA,gBAAiC,IAAAk4B,GAA1CA,EAA4Ch+C,OACvCgzC,aAAM,EAANA,EAASltB,EAAAA,GAAAA,SAGXm4B,CACT,ECs5FMC,GAAe,CACnBC,cAp3FoB,WAAkB,IAAjB96C,EAAOtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAChC,MAAM,MAAEG,GAAQ,EAAK,OAAE2yC,GAAS,EAAI,SAAEE,GAAa1vC,EACnD,OAAOk1C,EAAY,CACjBxE,IAAKvxC,qCACLtC,QACA2yC,SACAE,YAEJ,EA62FEqL,iBA7xBuB,SAAC76C,GAAkC,IAA9ByvC,EAAMjzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGsD,EAAOtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACpD,MAAM,MACJG,GAAQ,EAAI,OACZ2yC,GAAS,EAAI,SACbE,EAAQ,OACRvJ,EAAS,CAACuS,GAAYC,SAAUD,GAAYp5C,QAAO,UACnD6wC,EAAY,CAAC8I,GAAiBW,gBAC5B55C,EACE46C,EAA2B,iBAAP16C,GAAmB,CAACA,IAASlD,MAAM6C,QAAQK,IAAOA,GAAO,GAEnF,IAAIwwC,EAAM,GAAH3vC,OAAM5B,wDAUb,OATAy7C,EAAUh8C,SAAQ,CAACxD,EAAOwV,KACxB,IAAIgZ,EAAexuB,EACL,IAAVwV,IACFgZ,EAAe8wB,GAAsCt/C,EAAOu0C,IAG9De,EAAMA,EAAInpC,QAAQ,IAADxG,OAAK6P,EAAK,KAAKgZ,EAAa,IAGxCsrB,EAAY,CACjBxE,MACAf,SACA9yC,QACA2yC,SACAE,WACAvJ,SACAgK,YACA6J,aAAa,GAEjB,EAgwBEgB,gBA3rEsB,SAAC96C,GAAkC,IAA9ByvC,EAAMjzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGsD,EAAOtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACnD,MAAM,MAAEG,GAAQ,EAAI,OAAE2yC,GAAS,EAAI,SAAEE,GAAa1vC,EAC5C46C,EAAYF,GAAsCx6C,EAAIyvC,GAC5D,OAAOuF,EAAY,CACjBxE,IAAK,GAAF3vC,OAAK5B,8CAA0C4B,OAAG65C,GACrDjL,SACA9yC,QACA2yC,SACAE,YAEJ,EAkrEEuL,cA/jCoB,SAAC/6C,GAAkC,IAA9ByvC,EAAMjzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGsD,EAAOtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjD,MAAM,MACJG,GAAQ,EAAI,OACZ2yC,GAAS,EAAI,SACbE,EAAQ,OACRvJ,EAAS,CAACuS,GAAYM,MAAON,GAAYp5C,QAAO,UAChD6wC,EAAY,CAAC8I,GAAiBW,gBAC5B55C,EACE46C,EAA2B,iBAAP16C,GAAmB,CAACA,IAASlD,MAAM6C,QAAQK,IAAOA,GAAO,GAEnF,IAAIwwC,EAAM,GAAH3vC,OAAM5B,qDAUb,OATAy7C,EAAUh8C,SAAQ,CAACxD,EAAOwV,KACxB,IAAIgZ,EAAexuB,EACL,IAAVwV,IACFgZ,EAAe8wB,GAAsCt/C,EAAOu0C,IAG9De,EAAMA,EAAInpC,QAAQ,IAADxG,OAAK6P,EAAK,KAAKgZ,EAAa,IAGxCsrB,EAAY,CACjBxE,MACAf,SACA9yC,QACA2yC,SACAE,WACAvJ,SACAgK,aAEJ,EAmiCE+K,kBA7jBwB,SAACh7C,GAAkC,IAA9ByvC,EAAMjzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGsD,EAAOtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACrD,MAAM,MACJG,GAAQ,EAAI,OACZ2yC,GAAS,EAAI,SACbE,EAAQ,OACRvJ,EAAS,CAACuS,GAAYG,MAAOH,GAAYp5C,QAAO,UAChD6wC,EAAY,CAAC8I,GAAiBJ,QAC5B74C,EACE46C,EAAYF,GAAsCx6C,EAAIyvC,GAC5D,OAAOuF,EAAY,CACjBxE,IAAK,GAAF3vC,OAAK5B,8CAA6C4B,OAAG65C,GACxDjL,SACA9yC,QACA2yC,SACAE,WACAvJ,SACAgK,aAEJ,EA4iBEgL,wBAjb8B,SAACj7C,GAAkC,IAA9ByvC,EAAMjzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGsD,EAAOtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC3D,MAAM,MACJG,GAAQ,EAAI,OACZ2yC,GAAS,EAAK,SACdE,EAAQ,OACRvJ,EAAS,CAACuS,GAAYE,OAAQF,GAAYp5C,QAAO,UACjD6wC,EAAY,IACVnwC,EACE46C,EAAYF,GAAsCx6C,EAAIyvC,GAC5D,OAAOuF,EAAY,CACjBxE,IAAKvxC,8CAAqDoI,QAAQ,MAAOqzC,GACzEjL,SACA9yC,QACA2yC,SACAE,WACAvJ,SACAgK,aAEJ,EAgaEiL,sBAnJ4B,SAACl7C,GAAkC,IAA9ByvC,EAAMjzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGsD,EAAOtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EACzD,MAAM,MACJG,GAAQ,EAAI,OACZ2yC,GAAS,EAAI,SACbE,EAAQ,OACRvJ,EAAS,CAACuS,GAAYI,UAAWJ,GAAYp5C,QAAO,UACpD6wC,EAAY,CAAC8I,GAAiBH,YAC5B94C,EACE46C,EAAYF,GAAsCx6C,EAAIyvC,GAC5D,OAAOuF,EAAY,CACjBxE,IAAK,GAAF3vC,OAAK5B,kDAAuD4B,OAAG65C,GAClEjL,SACA9yC,QACA2yC,SACAE,WACAvJ,SACAgK,aAEJ,EAkIEkL,4BAvSkC,SAACn7C,GAAkC,IAA9ByvC,EAAMjzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGsD,EAAOtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC/D,MAAM,MACJG,GAAQ,EAAI,OACZ2yC,GAAS,EAAK,SACdE,EAAQ,OACRvJ,EAAS,CAACuS,GAAYE,OAAQF,GAAYp5C,QAAO,UACjD6wC,EAAY,IACVnwC,EACE46C,EAAYF,GAAsCx6C,EAAIyvC,GAC5D,OAAOuF,EAAY,CACjBxE,IAAKvxC,kDAA+DoI,QAAQ,MAAOqzC,GACnFjL,SACA9yC,QACA2yC,SACAE,WACAvJ,SACAgK,aAEJ,EAsREmL,0BA7BgC,SAACp7C,GAAkC,IAA9ByvC,EAAMjzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGsD,EAAOtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAC7D,MAAM,MACJG,GAAQ,EAAI,OACZ2yC,GAAS,EAAI,SACbE,EAAQ,OACRvJ,EAAS,CAACuS,GAAYK,cAAeL,GAAYp5C,QAAO,UACxD6wC,EAAY,IACVnwC,EACE46C,EAAYF,GAAsCx6C,EAAIyvC,GAC5D,OAAOuF,EAAY,CACjBxE,IAAK,GAAF3vC,OAAK5B,sDAA2D4B,OAAG65C,GACtEjL,SACA9yC,QACA2yC,SACAE,WACAvJ,SACAgK,aAEJ,GAiBAv0C,EAAAA,QAAAA,cAAsB,CAAEi/C,kB,gBC16FxB,MAuIMU,GAAc,CAClBC,gBAvIA,eAACC,EAAQ/+C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAG6lB,EAAK7lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGsD,EAAOtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACxCvB,IACE,MAAM,SAAEu0C,EAAW,cAAiB1vC,EAC9B07C,EAAe1+C,MAAM6C,QAAQ47C,IAAaA,GAAa,CAACA,GACxDE,EAAgB,GAyBtB,OAvBAD,EAAY98C,SAAQ/D,IAAoD,IAAnD,GAAEqF,EAAE,OAAEmiB,EAAM,WAAED,EAAYG,MAAOq5B,GAAa/gD,EACjE,MAAMghD,EAAgBz5B,EAAay4B,GAAaE,iBAAmBF,GAAaI,cAC1Ea,EAAa15B,EAAa25B,EAAAA,GAAAA,wBAAoCA,EAAAA,GAAAA,qBAC9DC,EAAiB55B,EAAa,gBAAkBstB,EAChDuM,GAAc95B,EAAAA,GAAAA,kBAAiB,CAAEC,aAAYC,SAAQC,UAAWpiB,EAAIqiB,MAAOq5B,IAEjFD,EAAct1C,KAAK,CACjB4B,KAAM6zC,EACNtV,QAASqV,EACP,CAAC37C,EAAImiB,GACL,IAAKE,KAAUq5B,GACf,CACElM,SAAU,GAAF3uC,OAAKi7C,EAAc,KAAAj7C,OAAIk7C,KAGnCx1B,KAAM,CACJvmB,GAAI+7C,EACJ15B,MAAO,IAAKA,KAAUq5B,GACtBM,cAAe,CAAC,IAElB,IAGGh+C,QAAQ80C,IAAI73C,EAASwgD,GAAe,CAC5C,EA0GDT,kBA/FA,eAACh7C,EAAExD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAM6lB,EAAK7lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACtBvB,GACEA,EAAS,CACP8M,KAAM8zC,EAAAA,GAAAA,yBACNvV,QAASqU,GAAaK,kBAAkBh7C,EAAIqiB,GAC5CkE,KAAM,CACJvmB,KACAqiB,QACA25B,cAAe,CAAC,IAElB,EAsFJf,wBA3EA,eAACj7C,EAAExD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAM6lB,EAAK7lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACtBvB,GACEA,EAAS,CACP8M,KAAM8zC,EAAAA,GAAAA,gCACNvV,QAASqU,GAAaM,wBAAwBj7C,EAAIqiB,GAClDkE,KAAM,CACJvmB,KACAqiB,QACA25B,cAAe,CAAC,IAElB,EAkEJd,sBAxDA,eAACl7C,EAAExD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAM6lB,EAAK7lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACtBvB,GACEA,EAAS,CACP8M,KAAM8zC,EAAAA,GAAAA,6BACNvV,QAASqU,GAAaO,sBAAsBl7C,EAAIqiB,GAChDkE,KAAM,CACJvmB,KACAqiB,QACA25B,cAAe,CAAC,IAElB,EA+CJb,4BArCA,eAACn7C,EAAExD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAM6lB,EAAK7lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACtBvB,GACEA,EAAS,CACP8M,KAAM8zC,EAAAA,GAAAA,oCACNvV,QAASqU,GAAaQ,4BAA4Bn7C,EAAIqiB,GACtDkE,KAAM,CACJvmB,KACAqiB,QACA25B,cAAe,CAAC,IAElB,EA4BJZ,0BAlBA,eAACp7C,EAAExD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,KAAM6lB,EAAK7lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACtBvB,GACEA,EAAS,CACP8M,KAAM8zC,EAAAA,GAAAA,iCACNvV,QAASqU,GAAaS,0BAA0Bp7C,EAAIqiB,GACpDkE,KAAM,CACJvmB,KACAqiB,QACA25B,cAAe,CAAC,IAElB,G,0BCpIN,MAkOMC,GAAe,CAAErhD,UAlOLA,KAChB,MAAMshD,EAAc,CAClBhhD,MAAOQ,EAAAA,QAAAA,kBACPsB,IAAKtB,EAAAA,QAAAA,wBAOP,OAAOs5C,EAAY,CACjBxE,IAAKtpC,SANWhM,KAChB,MAAM8B,EAAO9B,GAASihD,GAAAA,EAAAA,QAAmBjhD,EAAM4uB,MAAM,KAAK,KAAQ,KAClE,OAAQ9sB,GAAO,CAAE9B,QAAO8B,aAAUN,CAAS,EAUlC0/C,OALmBC,GAAAA,EAAAA,IAAYp9C,cAAwD,IAAIoI,QAChG,IACA,OAG8B60C,GAElC,EA+M8BI,mBArIPA,IACzBtH,EAAY,CACV70C,OAAQ,SACRqwC,IAAKvxC,sCAkI6Cs9C,gBAxE9B,WAAkB,IAAjBz8C,EAAOtD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClC,MAAM,OAAE8yC,GAAS,EAAI,SAAEE,GAAa1vC,EACpC,OAAOk1C,EAAY,CACjBxE,IAAKvxC,oCACLqwC,SACAE,YAEJ,EAiEuEpiB,mBAP5C,WAAY,OACrC4nB,EAAY,CACV70C,OAAQ,MACRqwC,IAAKvxC,oCACLwwC,OAJ8BjzC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,GAKlC,GAOJd,EAAAA,QAAAA,cAAsB,CAAEugD,kB,4BC3OxB,MAkEMO,GAAc,CAAE5hD,UAlEJA,IAAMK,GACtBA,EAAS,CACP8M,KAAM00C,EAAAA,GAAAA,YACNnW,QAAS2V,GAAarhD,cA+DO0hD,mBAvDNA,IAAMrhD,GAC/BA,EAAS,CACP8M,KAAM00C,EAAAA,GAAAA,kBACNnW,QAAS2V,GAAaK,qBACtB/1B,KAAM,CACJy1B,cAAe,CAAC,KAkD+BO,gBAzC7BA,IAAMthD,GAC5BA,EAAS,CACP8M,KAAM00C,EAAAA,GAAAA,eACNnW,QAAS2V,GAAaM,kBACtBh2B,KAAM,CACJy1B,cAAe,CAAC,KAoCgD5uB,mBAzBpE,eAAC/K,EAAK7lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACXvB,GACEA,EAAS,CACP8M,KAAM00C,EAAAA,GAAAA,kBACNnW,QAAS2V,GAAa7uB,mBAAmB/K,GACzCkE,KAAM,CACJlE,QACA25B,cAAe,CACbU,SAAU,CACR7/B,QAAS,SACTlX,OAAOM,EAAAA,GAAAA,WAAU,0CAA2C,CAAEgD,QAASvN,GAAAA,EAAAA,kBACvEqO,aAAa9D,EAAAA,GAAAA,WAAU,iDACvB02C,aAAa,GAEftxC,UAAW,CACTwR,QAAS,UACTlX,OAAOM,EAAAA,GAAAA,WAAU,4CAA6C,CAAEgD,QAASvN,GAAAA,EAAAA,kBACzEqO,aAAa9D,EAAAA,GAAAA,WAAU,mDACvB02C,aAAa,EACbC,aAAa,MAInB,GCvEAzgD,GAAe,CALnB0gD,SAAUrI,EACVsI,KAAMzB,GACN//C,KAAMkhD,I,qJCSR,MAAMnV,EAAe,CACnBoR,SAAU,CAAC,EACXsE,OAAQ,CAAC,EACTC,eAAgB,CAAC,EACjBlE,MAAO,CAAC,GAWJmE,EAAe,WAAkC,IAAjC5lB,EAAK76B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG6qC,EAAcprB,EAAMzf,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQuf,EAAOlU,OACRm1C,EAAAA,GAAAA,iBACI1V,EAAAA,EAAAA,aACL,SACA,CACE,CAACvrB,EAAOjc,IAAKic,EAAO/gB,OAEtB,CACEm8B,QACAiQ,OAAO,IAIJE,EAAAA,EAAAA,8BACL,CACE,CAAEr4B,IAAK,WAAYpH,KAAM8zC,EAAAA,GAAAA,yBACzB,CAAE1sC,IAAK,iBAAkBpH,KAAM8zC,EAAAA,GAAAA,gCAC/B,CAAE1sC,IAAK,QAASpH,KAAM8zC,EAAAA,GAAAA,uBAExBxkB,EACApb,EAGR,EAEAghC,EAAa5V,aAAeA,E,eCvC5B,MAAMA,EAAe,CACnB8V,eAAgB,CAAC,EACjBC,YAAa,CAAC,EACdC,mBAAoB,CAAC,EACrBC,gBAAiB,CAAC,EAClBC,uBAAwB,CAAC,EACzBC,KAAM,CAAC,GAWHC,EAAmB,WAAkC,IAAjCpmB,EAAK76B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG6qC,EAAcprB,EAAMzf,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpD,OAAQuf,EAAOlU,MACb,KAAK21C,EAAAA,GAAAA,kBACH,OAAOlW,EAAAA,EAAAA,aACL,OACA,IACKvrB,EAAOuhC,MAEZ,CACEnmB,QACAiQ,OAAO,IAGb,KAAKoW,EAAAA,GAAAA,uBACH,OAAOlW,EAAAA,EAAAA,aACL,kBACA,CACE,CAACvrB,EAAOjc,IAAK,CAAC,GAEhB,CACEq3B,QACAiQ,OAAO,IAGb,QACE,OAAOE,EAAAA,EAAAA,8BACL,CACE,CAAEr4B,IAAK,iBAAkBpH,KAAM8zC,EAAAA,GAAAA,0BAC/B,CAAE1sC,IAAK,cAAepH,KAAM8zC,EAAAA,GAAAA,iCAC5B,CAAE1sC,IAAK,qBAAsBpH,KAAM8zC,EAAAA,GAAAA,8BACnC,CAAE1sC,IAAK,kBAAmBpH,KAAM8zC,EAAAA,GAAAA,qCAChC,CAAE1sC,IAAK,yBAA0BpH,KAAM8zC,EAAAA,GAAAA,mCAEzCxkB,EACApb,GAGR,EAEAwhC,EAAiBpW,aAAeA,EC1DhC,MAAMA,EAAe,CACnBsW,eAAgB,CAAC,GAWbC,EAAkB,WAAkC,IAAjCvmB,EAAK76B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG6qC,EAAcprB,EAAMzf,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQuf,EAAOlU,OACRiqB,EAAAA,GAAAA,QAAAA,oBACIwV,EAAAA,EAAAA,aACL,iBACA,CACE,CAACvrB,EAAOkgB,QAASlgB,EAAO0hC,gBAE1B,CACEtmB,QACAiQ,OAAO,IAIJjQ,CAEb,EAEAumB,EAAgBvW,aAAeA,EC9B/B,MAAMA,EAAe,CACnB1kB,QAAS,CAAC,GAUNk7B,EAAiB,WAAkC,IAAjCxmB,EAAK76B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG6qC,EAAcprB,EAAMzf,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQuf,EAAOlU,MACb,KAAKiqB,EAAAA,GAAAA,QAAAA,mBACH,OAAOwV,EAAAA,EAAAA,aACL,UACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAM1U,QAAQ1G,EAAOkgB,QACxB2hB,cAAe7hC,EAAO6hC,gBAG1B,CACEzmB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,QAAAA,gBACH,OAAOwV,EAAAA,EAAAA,aACL,UACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAM1U,QAAQ1G,EAAOkgB,QACxB4hB,cAAe9hC,EAAO8hC,gBAG1B,CACE1mB,QACAiQ,OAAO,IAGb,QACE,OAAOjQ,EAEb,EAEAwmB,EAAexW,aAAeA,E,8CC5C9B,MAAMA,EAAe,CACnB77B,KAAM,CAAC,EACPpM,OAAQ,CAAC,EACTjE,OAAQ,CAAC,EACTmyB,MAAO,CAAC,GAUJ0wB,EAAc,WAAkC,IAAjC3mB,EAAK76B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG6qC,EAAcprB,EAAMzf,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,GAAQuf,EAAOlU,OACRy/B,EAAAA,EAAAA,kBAA+ByW,EAAAA,GAAAA,YAApC,CACE,MAAMC,EAAe1W,EAAAA,EAAAA,qBAAkCvrB,GAEvD,GAAqB,MAAjBiiC,GAAyC,MAAjBA,EAAsB,CAChD,MAAMz0C,EAAag9B,IAAKe,EAAAA,EAAAA,mBAAgCvrB,GAAS,CAAC7R,EAAAA,GAAAA,0BAAyC,IAE3G,OAAOo9B,EAAAA,EAAAA,aACL,SACA,CACE1+B,OAAO,EACP2gC,aAAcjC,EAAAA,EAAAA,sBAAmCvrB,GACjD1gB,KAAMkO,EAAWtM,KAAIjC,GAASA,EAAMkP,EAAAA,GAAAA,+BAAAA,QACpCuB,OAAQ67B,EAAAA,EAAAA,qBAAkCvrB,IAE5C,CACEob,QACAgQ,aAAYA,GAGlB,CAEA,OAAOhQ,CAAK,CAGZ,OAAOmQ,EAAAA,EAAAA,8BACL,CACE,CAAEr4B,IAAK,SAAUpH,KAAM00C,EAAAA,GAAAA,aACvB,CAAEttC,IAAK,QAASpH,KAAM00C,EAAAA,GAAAA,mBACtB,CAAEttC,IAAK,QAASpH,KAAM00C,EAAAA,GAAAA,gBACtB,CAAEttC,IAAK,QAASpH,KAAM00C,EAAAA,GAAAA,mBACtB,CAAEttC,IAAK,OAAQpH,KAAMgtC,EAAAA,GAAAA,qBAEvB1d,EACApb,EAGR,EAEA+hC,EAAY3W,aAAeA,E,eCrD3B,MAAMA,EAAe,CACnBhlB,MAAO,CAAC,EACRkc,gBAAiB,CAAC,EAClB4f,qBAAsB,CAAC,EACvB3f,oBAAqB,CAAC,EACtBG,4BAA6B,CAAC,EAC9BjM,QAAS,CAAC,EACVkB,cAAe,CAAC,GAUZwqB,EAAc,WAAkC,IAAAC,EAAA,IAAjChnB,EAAK76B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG6qC,EAAcprB,EAAMzf,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQuf,EAAOlU,MACb,KAAKiqB,EAAAA,GAAAA,IAAAA,oCACH,MAAMssB,EAA4B,WAAoB,IAAAC,EAAA,IAAnBl8B,EAAK7lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGwD,EAAExD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,MAAM8hD,GAC8C,QAAlDD,EAAA3qB,EAAAA,GAAAA,gBAA8B2J,iBAAiBv9B,UAAG,IAAAu+C,OAAA,EAAlDA,EAAoDphD,KAAIxC,IAAA,IAAC,OAAEwhC,GAAQxhC,EAAA,OAAKwhC,CAAM,MAAM9Z,EAAMriB,IAAO,CAACA,IAAQ,GACtGk0B,EAAe,IAAK7R,GAM1B,OAJAm8B,EAAS9/C,SAAQ+/C,WACRvqB,EAAauqB,EAAQ,IAGvBvqB,CACT,EAEA,OAAOsT,EAAAA,EAAAA,aACL,KACA,IACKnQ,EACHhV,MAAOi8B,EAA0BjnB,EAAMhV,MAAOpG,EAAOoX,cACrDkL,gBAAiB+f,EAA0BjnB,EAAMkH,gBAAiBtiB,EAAOoX,cACzE8qB,qBAAsBG,EAA0BjnB,EAAM8mB,qBAAsBliC,EAAOoX,cACnFmL,oBAAqB8f,EAA0BjnB,EAAMmH,oBAAqBviB,EAAOoX,cACjFsL,4BAA6B2f,EAA0BjnB,EAAMsH,4BAA6B1iB,EAAOoX,eAEnG,CACEgE,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,+BACH,MAAM0sB,EAAqB,WAAoB,IAAnBr8B,EAAK7lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGwD,EAAExD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxC,MAAM8hD,EAAW5qB,EAAAA,GAAAA,gBAA8BiK,UAAU79B,IAAQqiB,EAAMriB,IAAO,CAACA,IAAQ,GACjFk0B,EAAe,IAAK7R,GAa1B,OAXAm8B,EAAS9/C,SAAQ+/C,IACf,MAAME,EAAezqB,EAAauqB,IAAY,CAAC,EAEU,iBAA9CE,EAAaC,EAAAA,GAAAA,UACtBD,EAAaC,EAAAA,GAAAA,QAA+B,UAGvCD,EAAaC,EAAAA,GAAAA,kBACbD,EAAaC,EAAAA,GAAAA,KAA0B,IAGzC1qB,CACT,EAEA,OAAOsT,EAAAA,EAAAA,aACL,KACA,IACKnQ,EACHmH,oBAAqBkgB,EAAmBrnB,EAAMmH,oBAAqBviB,EAAOkgB,QAC1EwC,4BAA6B+f,EAAmBrnB,EAAMsH,4BAA6B1iB,EAAOkgB,SAE5F,CACE9E,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,+BACH,MAAM6sB,EAAqB,WAAoB,IAAnBx8B,EAAK7lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGwD,EAAExD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACxC,MAAM8hD,EAAW5qB,EAAAA,GAAAA,gBAA8BiK,UAAU79B,IAAQqiB,EAAMriB,IAAO,CAACA,IAAQ,GACjFk0B,EAAe,IAAK7R,GAU1B,OARAm8B,EAAS9/C,SAAQ+/C,IACf,MAAME,EAAezqB,EAAauqB,IAAY,CAAC,EAEU,iBAA9CE,EAAaC,EAAAA,GAAAA,UACtBD,EAAaC,EAAAA,GAAAA,QAA+B,EAC9C,IAGK1qB,CACT,EAEA,OAAOsT,EAAAA,EAAAA,aACL,KACA,IACKnQ,EACHmH,oBAAqBqgB,EAAmBxnB,EAAMmH,oBAAqBviB,EAAOkgB,QAC1EwC,4BAA6BkgB,EAAmBxnB,EAAMsH,4BAA6B1iB,EAAOkgB,SAE5F,CACE9E,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,sCACH,MAAM8sB,EAAwB,WAAoB,IAAnBz8B,EAAK7lB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAGwD,EAAExD,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,MAAM8hD,EAAW5qB,EAAAA,GAAAA,gBAA8BiK,UAAU79B,IAAQqiB,EAAMriB,IAAO,CAACA,IAAQ,GACjFk0B,EAAe,IAAK7R,GAU1B,OARAm8B,EAAS9/C,SAAQ+/C,IACf,MAAME,EAAezqB,EAAauqB,IAAY,CAAC,EAEU,iBAA9CE,EAAaC,EAAAA,GAAAA,UACtBD,EAAaC,EAAAA,GAAAA,QAA+B,EAC9C,IAGK1qB,CACT,EAEA,OAAOsT,EAAAA,EAAAA,aACL,KACA,IACKnQ,EACH8mB,qBAAsBW,EAAsBznB,EAAM8mB,qBAAsBliC,EAAOkgB,SAEjF,CACE9E,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,gBACH,OAAOwV,EAAAA,EAAAA,aACL,QACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMhV,MAAMpG,EAAOkgB,WACnBlgB,EAAO8iC,eAGd,CACE1nB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,UACH,OAAOwV,EAAAA,EAAAA,aACL,QACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMhV,MAAMpG,EAAOkgB,QACtB,CAAClgB,EAAOrO,QAASqO,EAAO/gB,QAG5B,CACEm8B,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,qBAAsC4sB,EAAAA,GAAAA,aACzC,OAAOpX,EAAAA,EAAAA,aACL,kBACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMkH,gBAAgBtiB,EAAOkgB,QAChC,CAACyiB,EAAAA,GAAAA,aAAmC3iC,EAAO2iC,EAAAA,GAAAA,eAG/C,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,qBAAsC4sB,EAAAA,GAAAA,YACzC,OAAOpX,EAAAA,EAAAA,aACL,QACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMhV,MAAMpG,EAAOkgB,QACtB,CAACyiB,EAAAA,GAAAA,YAAkC3iC,EAAO2iC,EAAAA,GAAAA,cAG9C,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,qBAAsC4sB,EAAAA,GAAAA,UACzC,OAAOpX,EAAAA,EAAAA,aACL,QACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMhV,MAAMpG,EAAOkgB,QACtB,CAACyiB,EAAAA,GAAAA,UAAgC3iC,EAAO2iC,EAAAA,GAAAA,YAG5C,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,qBAAsC4sB,EAAAA,GAAAA,kBACzC,OAAOpX,EAAAA,EAAAA,aACL,QACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMhV,MAAMpG,EAAOkgB,QACtB,CAACyiB,EAAAA,GAAAA,kBAAwC3iC,EAAO2iC,EAAAA,GAAAA,oBAGpD,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,qBAAsC4sB,EAAAA,GAAAA,KACzC,OAAOpX,EAAAA,EAAAA,aACL,QACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMhV,MAAMpG,EAAOkgB,QACtB,CAACyiB,EAAAA,GAAAA,KAA2B3iC,EAAO2iC,EAAAA,GAAAA,OAGvC,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,qBAAsC4sB,EAAAA,GAAAA,KACzC,OAAOpX,EAAAA,EAAAA,aACL,QACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMhV,MAAMpG,EAAOkgB,QACtB,CAACyiB,EAAAA,GAAAA,KAA2B3iC,EAAO2iC,EAAAA,GAAAA,OAGvC,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,qBAAsC4sB,EAAAA,GAAAA,OACzC,OAAOpX,EAAAA,EAAAA,aACL,QACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMhV,MAAMpG,EAAOkgB,QACtB,CAACyiB,EAAAA,GAAAA,OAA6B3iC,EAAO2iC,EAAAA,GAAAA,SAGzC,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,sCAAuD4sB,EAAAA,GAAAA,OAC1D,OAAOpX,EAAAA,EAAAA,aACL,uBACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAM8mB,qBAAqBliC,EAAOkgB,QACrC,CAACyiB,EAAAA,GAAAA,OAA6B3iC,EAAO2iC,EAAAA,GAAAA,SAGzC,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,sCAAuD4sB,EAAAA,GAAAA,QAC1D,OAAOpX,EAAAA,EAAAA,aACL,uBACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAM8mB,qBAAqBliC,EAAOkgB,QACrC,CAACyiB,EAAAA,GAAAA,QAA8B3iC,EAAO2iC,EAAAA,GAAAA,UAG1C,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,qCAAsD4sB,EAAAA,GAAAA,cACzD,OAAOpX,EAAAA,EAAAA,aACL,sBACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMmH,oBAAoBviB,EAAOkgB,QACpC,CAACyiB,EAAAA,GAAAA,cAAoC3iC,EAAO2iC,EAAAA,GAAAA,gBAGhD,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,qCAAsD4sB,EAAAA,GAAAA,OACzD,OAAOpX,EAAAA,EAAAA,aACL,sBACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMmH,oBAAoBviB,EAAOkgB,QACpC,CAACyiB,EAAAA,GAAAA,OAA6B3iC,EAAO2iC,EAAAA,GAAAA,SAGzC,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,qCAAsD4sB,EAAAA,GAAAA,QACzD,OAAOpX,EAAAA,EAAAA,aACL,sBACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMmH,oBAAoBviB,EAAOkgB,QACpC,CAACyiB,EAAAA,GAAAA,QAA8B3iC,EAAO2iC,EAAAA,GAAAA,UAG1C,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,qCAAsD4sB,EAAAA,GAAAA,WACzD,OAAOpX,EAAAA,EAAAA,aACL,sBACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMmH,oBAAoBviB,EAAOkgB,QACpC,CAACyiB,EAAAA,GAAAA,WAAiC3iC,EAAO2iC,EAAAA,GAAAA,aAG7C,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,qCAAsD4sB,EAAAA,GAAAA,MACzD,OAAOpX,EAAAA,EAAAA,aACL,sBACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMmH,oBAAoBviB,EAAOkgB,QACpC,CAACyiB,EAAAA,GAAAA,MAA4B3iC,EAAO2iC,EAAAA,GAAAA,QAGxC,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,6CAA8D4sB,EAAAA,GAAAA,OACjE,OAAOpX,EAAAA,EAAAA,aACL,8BACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMsH,4BAA4B1iB,EAAOkgB,QAC5C,CAACyiB,EAAAA,GAAAA,OAA6B3iC,EAAO2iC,EAAAA,GAAAA,SAGzC,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,6CAA8D4sB,EAAAA,GAAAA,QACjE,OAAOpX,EAAAA,EAAAA,aACL,8BACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMsH,4BAA4B1iB,EAAOkgB,QAC5C,CAACyiB,EAAAA,GAAAA,QAA8B3iC,EAAO2iC,EAAAA,GAAAA,UAG1C,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,6CAA8D4sB,EAAAA,GAAAA,WACjE,OAAOpX,EAAAA,EAAAA,aACL,8BACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMsH,4BAA4B1iB,EAAOkgB,QAC5C,CAACyiB,EAAAA,GAAAA,WAAiC3iC,EAAO2iC,EAAAA,GAAAA,aAG7C,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,MAAAA,6CAA8D4sB,EAAAA,GAAAA,MACjE,OAAOpX,EAAAA,EAAAA,aACL,8BACA,CACE,CAACvrB,EAAOkgB,QAAS,IACZ9E,EAAMsH,4BAA4B1iB,EAAOkgB,QAC5C,CAACyiB,EAAAA,GAAAA,MAA4B3iC,EAAO2iC,EAAAA,GAAAA,QAGxC,CACEvnB,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,IAAAA,YACH,OAAOwV,EAAAA,EAAAA,aACL,UACA,CACEvV,OAAQhW,EAAOgW,QAEjB,CACEoF,QACAiQ,OAAO,IAGb,KAAKtV,EAAAA,GAAAA,IAAAA,oBACH,OAAOwV,EAAAA,EAAAA,aACL,UACA,CACE3qB,QAAS,IACJwa,SAAc,QAATgnB,EAALhnB,EAAO3E,eAAO,IAAA2rB,OAAT,EAALA,EAAgBxhC,QACnB,CAACZ,EAAOoX,cAAepX,EAAOY,UAGlC,CACEwa,QACAiQ,OAAO,IAGb,QACE,OAAOjQ,EAEb,EAEA+mB,EAAY/W,aAAeA,ECrc3B,MAAM2X,EAAW,CACfhD,cAAa,gBACbiD,MAAOhC,EACPvd,UAAW+d,EACXyB,SAAUtB,EACVuB,QAAStB,EACTviD,KAAM0iD,EACNvrB,KAAM2rB,GAGFgB,GAAgBC,EAAAA,EAAAA,IAAgBL,E,6JCLtC,MCEMM,EAAuB,CAC3BC,wBAAwB,EACxBC,cAAehY,EAAAA,EAAAA,iBACfiY,gBAAiBjY,EAAAA,EAAAA,mBACjBkY,eAAgBlY,EAAAA,EAAAA,kBAChBoV,aAAa,EACb+C,aAAc,IACdC,cAAe,QACfC,oBAAqB,UAQjBC,EAAkB,CACtBC,EAAAA,ECduB,WAAiB,IAAhB9tB,EAAMz1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAClC,MAAMwjD,EAAe/tB,EAAO+tB,cAAgB,SACtCC,EAAchuB,EAAOguB,aAAe,eACpCC,EAAcjuB,EAAOiuB,aAAe,KACpCC,EAAkBluB,EAAOkuB,iBAAmB,IAC5CC,EAAgBnuB,EAAOouB,cAAe,EACtCC,EAAiBruB,EAAOquB,iBAAkB,EAEhD,OAAO/0B,IACL,MAAM,SAAEtwB,GAAaswB,EAErB,OAAOg1B,GAAQtkC,IACb,GAAIA,EAAOqqB,QAAS,CAClB,MAAMka,EAAahZ,EAAAA,EAAAA,qBAAkC,IAAKvrB,IAE1D,GAAIukC,EAAa,GAAI,CACnB,MAAMnhD,EAAUmoC,EAAAA,EAAAA,sBAAmC,IAAKvrB,IAClD1gB,EAAOisC,EAAAA,EAAAA,mBAAgC,IAAKvrB,IAC5CwkC,EAAgB,IAAMxkC,EAAOqqB,QAAQrU,QAAU,CAAC,GAChDyuB,EAAQ,GAAH7/C,OAAMG,KAAKuU,MAAMirC,EAAa,MAAI3/C,OAAGq/C,GAE5CE,GACFnlD,EAAS,CACP8M,KAAM,GAAFlH,OAAK6/C,GAAK7/C,OAAGs/C,GAAet/C,OAAGo/C,GACnChuB,OAAQwuB,EACRllD,OACA8D,UACAqhD,QACA/0C,OAAQ60C,IAIRF,GACFrlD,EAAS,CACP8M,KAAM,GAAFlH,OAAK2/C,GAAU3/C,OAAGs/C,GAAet/C,OAAGm/C,GACxC/tB,OAAQwuB,EACRllD,OACA8D,UACAqhD,QACA/0C,OAAQ60C,GAGd,CACF,CAEA,OAAOD,EAAKtkC,EAAO,CACpB,CAEL,CDjCE0kC,GEvB4Bp1B,GAASg1B,GAAQtkC,GAC5Cnf,MAAM6C,QAAQsc,IAAWA,EAAO9e,KAAIqD,GAAK+qB,EAAMtwB,SAASuF,MAAQ+/C,EAAKtkC,GFwBtE2kC,ID4FA,eAAC3uB,EAAMz1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,MACZ,IACA+jD,GACAtkC,IArCmB4kC,EAAC5kC,EAAMoL,KAA+B,IAA7B,GAAErnB,EAAE,MAAED,KAAUkyB,GAAQ5K,EACpD,MAAM,UAAE1f,EAAS,eAAER,GAAmB1H,OAChCsyC,EAtBW+O,EAAC9gD,EAAID,KAAU,IAAAa,EAAAmgD,EAChC,MAAM,eAAE55C,GAAmB1H,OACrB4X,EAAOlQ,EAAeI,QAAQvH,GACpC,IAAIghD,EAAe3pC,IAA+B,QAA3BzW,EAAK3D,KAAKqK,MAAM+P,IAAS,CAAC,SAAC,IAAAzW,OAAA,EAAvBA,EAA0By+B,UAAY,GAMjE,OAJe,QAAX0hB,EAAAC,SAAW,IAAAD,GAAXA,EAAatkD,QAAUsD,EAAQ,IACjCihD,EAAcA,EAAYlpC,OAAe,EAAT/X,IAG3BihD,CAAW,EAaJF,CAAW9gD,EAAID,IAAU,GACjCkhD,EAAYlP,EAAMA,EAAMt1C,OAAS,GACjCykD,EA9DavgD,KAAkC,IAAjC,KAAEoH,EAAI,QAAEu+B,KAAYrqB,GAAQtb,EAChD,MAAMwgD,EAAqBhjD,IAAO,IAAAijD,EAAAC,EAChC,GAAIljD,SAAS,QAANijD,EAAHjjD,EAAK5C,YAAI,IAAA6lD,GAAM,QAANC,EAATD,EAAW9lD,YAAI,IAAA+lD,GAAfA,EAAkBC,EAAAA,GAAAA,qCACpB,MAAO,IACFnjD,EACH5C,KAAM,IACD4C,EAAI5C,KACPD,KAAM,IACD6C,EAAI5C,KAAKD,KACZ,CAACgmD,EAAAA,GAAAA,qCAAuD,IACnDnjD,EAAI5C,KAAKD,KAAKgmD,EAAAA,GAAAA,qCACjB,CAACA,EAAAA,GAAAA,0CAAAA,MAAkE,CAAC,KAO9D,EAGZC,EAAiBJ,EAAmB7a,IAAYA,EAChD4a,EAAgBC,EAAmBllC,IAAWA,EAEpD,OAAIslC,EACK,CAAEx5C,OAAMu+B,QAASib,KAAmBL,GAGtC,CAAEn5C,UAASm5C,EAAe,EAkCXM,CApFM7mD,KAA4B,IAA3B,QAAE2rC,KAAYrqB,GAAQthB,EACnD,GAAI2rC,EAAS,CACX,IAAIib,EAAiB,IAAKjb,EAAS2O,QAAS,CAAC,GAM7C,OAJIn4C,MAAM6C,QAAQ2mC,KAChBib,EAAiBjb,EAAQnpC,KAAI/B,IAAA,IAAC,QAAE65C,KAAY92C,GAAK/C,EAAA,MAAM,IAAK+C,EAAK82C,QAAS,CAAC,EAAG,KAGzE,CAAE3O,QAASib,KAAmBtlC,EACvC,CAEA,MAAO,IAAKA,EAAQ,EAyEewlC,CAAsBxlC,IACnDylC,EAAY,CAChBtH,KAAM,EACNuH,UAAWlyC,KAAKmyC,MAChB3lC,OAAQilC,GAGND,GAAaA,EAAUU,YACzBD,EAAUtH,KAAOsH,EAAUC,UAAYV,EAAUU,WAGnD5P,EAAM5rC,KAAKu7C,GACXv6C,EAAe06C,QACb7hD,EACA/C,KAAKC,UAAU,CACb4kD,QAASn6C,EAAUo6C,UACnBJ,WAAW,IAAIlyC,MAAOuyC,oBACnB/vB,EACHoN,QAAS0S,IAEZ,EAcC8O,CAAa5kC,EAAQ,CACnBjc,GAAI,4BACJD,MAAO,OACJkyB,IAGEsuB,EAAKtkC,GACb,CCtGDgmC,CAAuB,CACrBjiD,GAAIf,YACJyM,IAAK,CAAEw2C,QAASjjD,oBAElBkjD,EAAAA,EAAAA,yBAAwB7C,I,eGxB1B,MAAM/zB,GAAQ62B,EAAAA,EAAAA,IAAYhD,EAAAA,IAAeiD,EAAAA,EAAAA,OAAmBvC,G,yNCZ5D,MAYM7B,EAAW,CACfqE,WAbiB,MAcjBC,WAbiB,MAcjBC,YAbkB,cAclBC,oBAb0B,sBAc1BC,oCAb0C,uCCGtCxF,EAAa,CACjByF,iBARuB,oBCQnBjF,EAAiB,CACrBkF,uBAT6B,yBAU7BC,kBATwB,qB,cCK1B,MAYM9N,EAAgB,CACpB+N,0BAbgCC,EAAAA,iBAchCC,6BAbmCC,EAAAA,oBAcnCC,6BAbmCC,EAAAA,oBAcnCC,4BAbkC,8BAclCC,mBAbyB,sB,eCR3B,MAwDMC,EAAa,CACjBC,UAzDgB,YA0DhBC,gBAzDsB,kBA0DtBC,+BAzDqC,iCA0DrCC,sCAzD4C,wCA0D5CC,+BAzDqC,iCA0DrCC,qBArD2B,CAC3B,CAAChF,EAAAA,GAAAA,kBAAwC,kBAAH/9C,OAAqB+9C,EAAAA,GAAAA,kBAC3D,CAACA,EAAAA,GAAAA,UAAgC,kBAAH/9C,OAAqB+9C,EAAAA,GAAAA,UACnD,CAACA,EAAAA,GAAAA,aAAmC,kBAAH/9C,OAAqB+9C,EAAAA,GAAAA,aACtD,CAACA,EAAAA,GAAAA,KAA2B,kBAAH/9C,OAAqB+9C,EAAAA,GAAAA,KAC9C,CAACA,EAAAA,GAAAA,YAAkC,kBAAH/9C,OAAqB+9C,EAAAA,GAAAA,YACrD,CAACA,EAAAA,GAAAA,KAA2B,kBAAH/9C,OAAqB+9C,EAAAA,GAAAA,KAC9C,CAACA,EAAAA,GAAAA,OAA6B,kBAAH/9C,OAAqB+9C,EAAAA,GAAAA,QA+ChDiF,sCAzC4C,CAC5C,CAACjF,EAAAA,GAAAA,OAA6B,mCAAH/9C,OAAsC+9C,EAAAA,GAAAA,OACjE,CAACA,EAAAA,GAAAA,QAA8B,mCAAH/9C,OAAsC+9C,EAAAA,GAAAA,SAwClEkF,qCAlC2C,CAC3C,CAAClF,EAAAA,GAAAA,WAAiC,kCAAH/9C,OAAqC+9C,EAAAA,GAAAA,WACpE,CAACA,EAAAA,GAAAA,cAAoC,kCAAH/9C,OAAqC+9C,EAAAA,GAAAA,cACvE,CAACA,EAAAA,GAAAA,MAA4B,kCAAH/9C,OAAqC+9C,EAAAA,GAAAA,MAC/D,CAACA,EAAAA,GAAAA,OAA6B,kCAAH/9C,OAAqC+9C,EAAAA,GAAAA,OAChE,CAACA,EAAAA,GAAAA,QAA8B,kCAAH/9C,OAAqC+9C,EAAAA,GAAAA,SA8BjEmF,6CAxBmD,CACnD,CAACnF,EAAAA,GAAAA,WAAiC,0CAAH/9C,OAA6C+9C,EAAAA,GAAAA,WAC5E,CAACA,EAAAA,GAAAA,MAA4B,0CAAH/9C,OAA6C+9C,EAAAA,GAAAA,MACvE,CAACA,EAAAA,GAAAA,OAA6B,0CAAH/9C,OAA6C+9C,EAAAA,GAAAA,OACxE,CAACA,EAAAA,GAAAA,QAA8B,0CAAH/9C,OAA6C+9C,EAAAA,GAAAA,U,eC/C3E,MCYMnC,EAAY,CAAEuH,kBAZM,oBAYaC,eAXhB,iBAWgCC,kBAV7B,oBAUgDC,YATtD,cASmEC,YARnE,eCCdpyB,EAAa,CACjBtmB,IAAKuyC,EACLgB,MAAO/B,EACPxd,UAAWge,EACXr+C,QCFmB,CAAEglD,oBAPK,uBDU1BxH,SAAU9H,EACV1yB,MAAOihC,EACPxG,KAAMjB,EAAAA,GACNsD,QFLmB,CACnBmF,mBATyB,qBAUzBC,gBATsB,mBEatBjpD,KAAMmhD,E,sEEdR,MAgBMZ,EAAY,CAChB2I,wBAjB8B,0BAkB9BC,+BAjBqC,iCAkBrCC,qBAjB2B,uBAkB3BC,yBAjB+B,2BAkB/BC,gCAjBsC,kCAkBtCC,6BAjBmC,+BAkBnCC,oCAjB0C,sCAkB1CC,iCAjBuC,mC,8ICFzC,MA6CMC,EAA8C,CAClDC,WAAY,aACZC,cAAe,uBAQXC,EAAuD,CAC3DC,IAAK,KAGDC,EAAwD,CAC5DD,IAAK,IACLE,KAAM,OACNC,MAAO,SAGHlT,EAAoB,CACxBmT,wCAlE8C,eAmE9CC,kDA3DwD,CACxDC,SAAU,eA2DVC,oCAnD0C,WAoD1CC,0CA5CgD,CAChDC,KAAM,QA4CNC,+CAnCqD,CACrDC,UAAW,gBAmCXf,8CACAgB,gDArBsD,CACtDC,cAAehnD,iBAqBfkmD,uDACAE,wD,soBC1EF,MAAMthB,EAA2C,CAC/CmiB,SAAU,eACVC,eAAgB,qBAChBC,WAAY,iBACZC,SAAU,gBAQN3hB,EAAgD,CACpD4hB,kBAAmB,oBACnBC,iBAAkB,oBAWdtoB,EAA8B,IAC/B8F,KACAW,EACH8hB,MAAO,QACPC,KAAM,OACNC,kBAAmB,oBACnBC,aAAc,eACdC,YAAa,cACbC,iBAAkB,mBAClBC,MAAO,QACPC,KAAM,OACNC,UAAW,+BACXC,kBAAmB,oBACnBC,4BAA6B,8BAC7BC,UAAW,aASPpoB,EAA6B,CACjCqoB,MAAO,QACPC,QAAS,UACTC,aAAc,eACdC,eAAgB,iBAChBC,kBAAmB,oBACnBC,wBAAyB,0BACzBC,mBAAoB,sBAsBhBC,EAA+B,CACnCC,MAAO,QACPC,QAAS,WAoCLC,EAAqC,CACzCC,WAAY,aACZX,MAAO,QACPY,eAAgB,iBAChBC,aAAc,eACdC,cAAe,gBACfX,eAAgB,iBAChBY,aAAc,eACdC,UAAW,YACXC,iBAAkB,mBAClBC,iBAAkB,mBAClBjB,QAAS,UACTkB,wBAAyB,2BAQrBC,EAAqC,IACtCb,GAeCc,EAAyC,CAC7CC,iBAAkB,mBAClBC,mBAAoB,qBACpBX,eAAgB,iBAChBY,SAAU,WACVX,aAAc,eACdY,YAAa,cACbV,aAAc,eACdC,UAAW,YACXU,aAAc,eACdR,iBAAkB,mBAClBC,wBAAyB,2BAQrBQ,EAAyC,IAC1CpB,EACHmB,aAAc,eACdE,IAAK,OAWDC,EAA6C,IAC9CR,EACHS,sBAAuB,wBACvBC,gBAAiB,kBACjBC,aAAc,eACdC,SAAU,WACVC,cAAe,gBACfC,eAAgB,iBAChBP,IAAK,OAQDQ,EAA6C,IAC9C7B,EACH8B,kBAAmB,qBAQfC,EAA8C,CAClDC,KAAM,OACNC,MAAO,QACPC,SAAU,WACVX,sBAAuB,yBASnBY,EAA8C,IAC/CnC,EACHgC,KAAM,OACNC,MAAO,QACPG,qBAAsB,uBACtBC,yBAA0B,2BAC1BH,SAAU,WACVI,UAAW,YACXC,cAAe,iBAQXC,EAAsC,CAC1CC,MAAO,QACPC,OAAQ,SACRC,QAAS,UACTC,UAAW,aAYPC,EAA2C,CAC/CC,QAAS,UACTC,IAAK,OAYDC,EAA8B,CAClCC,QAAS,UACTC,SAAU,WACVC,KAAM,eACNC,KAAM,IAkBFC,EAA8B,CAClC5D,MAAO,QACPC,QAAS,WAQL4D,EAAgC,CACpCC,WAAY,aACZC,YAAa,mBACbC,SAAU,oBACVC,YAAa,IAQTC,EAAgC,CACpCC,MAAO,QACPC,WAAY,aACZC,UAAW,YACXC,SAAU,WACVC,QAAS,UACTC,QAAS,WAGLC,EAAmC1B,EAYnC2B,EAA4C,CAChD1E,MAAO,QACPW,WAAY,aACZgE,SAAU,gBACVxE,eAAgB,iBAChBa,UAAW,YACX4D,YAAa,mBACbC,KAAM,eACN5E,QAAS,WAUL5jB,EAAsC,IACvC1E,EACH2pB,iBAAkB,mBAClBE,SAAU,WACVR,UAAW,YACX6D,KAAM,eACN3D,iBAAkB,oBAQd4D,EAAgD,CACpDC,UAAW,MACXC,WAAY,QASR1oB,EAAoD,CACxDylB,gBAAiB,kBACjBkD,gBAAiB,kBACjBjD,aAAc,eACdC,SAAU,WACViD,IAAK,MACLhD,cAAe,gBACfC,eAAgB,iBAChBgD,MAAO,SAGHC,EAAwChC,EAExCiC,EAA2B9B,EAE3BtsB,EAA2B2sB,EAE3B0B,EAA6BzB,EAS7B0B,EAAqC,CACzCjE,iBAAkB,mBAClBC,mBAAoB,qBACpBC,SAAU,WACVgE,UAAW,MACX3E,aAAc,wBACd4E,SAAU,SACVC,MAAO,QACPC,OAAQ,SACRC,IAAK,MACLC,KAAM,OACNC,WAAY,YACZlE,IAAK,MACLuD,MAAO,QACPY,QAAS,WAULC,EAA0C,CAC9CC,iBAAkB,mBAClB3E,iBAAkB,mBAClBE,SAAU,WACViE,SAAU,SACVS,YAAa,cACbN,IAAK,MACLE,WAAY,YACZX,MAAO,QACPgB,0BAA2B,4BAC3BJ,QAAS,WAWL5qC,EAA2B,IAC5BoqC,KACAS,GAQCI,EAAsC,CAC1CC,UAAW,YACXC,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,SAAU,YA0DNzjD,EAAgB,CACpB6zB,8BACA8F,2CACAW,gDACA3F,6BACA+uB,uBA/c6B,OAgd7BC,uBAzc6B,OA0c7BpG,+BACAqG,yBA1b+B,SA2b/BC,+BApbqC,CACrCC,KAAM,QAobNC,oCA5a0C,CAC1CC,QAAS,oBACTC,MAAO,qBA2aPvG,qCACAU,qCACAC,yCACAM,yCACAE,6CACAO,6CACAE,8CACAI,8CACAK,sCACAK,2CACAG,8BACA2D,qCAtQ2C,CAC3CC,OAAQ,SACR9C,UAAW,aAqQXT,8BACAC,gCACAK,gCACAO,mCACAC,4CACAroB,sCACAyoB,gDACAxoB,oDACA8oB,wCACAC,2BACApuB,2BACAquB,6BACAC,qCACAS,0CACA7qC,2BACAirC,sC,wBCzjBF,IAAIrwD,EAAM,CACT,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,MACX,aAAc,MACd,UAAW,KACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,WAAY,MACZ,cAAe,MACf,UAAW,MACX,aAAc,MACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,YAAa,MACb,eAAgB,MAChB,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,UAAW,KACX,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,QAAS,MACT,WAAY,MACZ,OAAQ,MACR,UAAW,MACX,QAAS,MACT,WAAY,MACZ,QAAS,MACT,aAAc,MACd,gBAAiB,MACjB,WAAY,MACZ,UAAW,KACX,aAAc,KACd,OAAQ,MACR,UAAW,MACX,OAAQ,MACR,UAAW,MACX,OAAQ,KACR,YAAa,MACb,eAAgB,MAChB,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,OAIf,SAASqxD,EAAeC,GACvB,IAAIzuD,EAAK0uD,EAAsBD,GAC/B,OAAOE,EAAoB3uD,EAC5B,CACA,SAAS0uD,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEzxD,EAAKsxD,GAAM,CACpC,IAAIzlD,EAAI,IAAIxJ,MAAM,uBAAyBivD,EAAM,KAEjD,MADAzlD,EAAEosC,KAAO,mBACHpsC,CACP,CACA,OAAO7L,EAAIsxD,EACZ,CACAD,EAAez7C,KAAO,WACrB,OAAO3U,OAAO2U,KAAK5V,EACpB,EACAqxD,EAAevwD,QAAUywD,EACzBl0D,EAAOC,QAAU+zD,EACjBA,EAAexuD,GAAK,K,wBCnSpB,IAAI7C,EAAM,CACT,qCAAsC,CACrC,OAED,4CAA6C,CAC5C,OAED,qCAAsC,CACrC,MACA,MAED,4CAA6C,CAC5C,MACA,MAED,mBAAoB,CACnB,OAED,4BAA6B,CAC5B,OAED,0BAA2B,CAC1B,OAED,2BAA4B,CAC3B,OAED,0BAA2B,CAC1B,OAED,uBAAwB,CACvB,MAED,yBAA0B,CACzB,OAED,0BAA2B,CAC1B,OAED,qBAAsB,CACrB,MACA,KACA,KACA,KACA,MAED,wBAAyB,CACxB,OAED,mBAAoB,CACnB,OAED,sBAAuB,CACtB,MACA,MAED,2BAA4B,CAC3B,MACA,KACA,IACA,KACA,MAED,gCAAiC,CAChC,MACA,KACA,IACA,KACA,MAED,sCAAuC,CACtC,MACA,KACA,IACA,MAED,4CAA6C,CAC5C,MACA,KACA,IACA,KAED,uCAAwC,CACvC,MACA,MAED,kCAAmC,CAClC,MACA,KACA,IACA,MAED,kCAAmC,CAClC,OAED,uCAAwC,CACvC,MACA,KACA,IACA,MAED,iBAAkB,CACjB,OAED,wBAAyB,CACxB,OAED,mCAAoC,CACnC,MACA,KACA,KACA,MAED,0CAA2C,CAC1C,MACA,MAED,0CAA2C,CAC1C,MACA,MAED,wCAAyC,CACxC,MACA,KACA,KACA,MAED,6DAA8D,CAC7D,MACA,KACA,KACA,MAED,oEAAqE,CACpE,MACA,MAED,uCAAwC,CACvC,MACA,KACA,MAED,8CAA+C,CAC9C,MACA,MAED,kCAAmC,CAClC,MACA,KAED,mCAAoC,CACnC,MACA,MAED,qBAAsB,CACrB,MAED,+BAAgC,CAC/B,OAED,2BAA4B,CAC3B,MACA,KAED,2BAA4B,CAC3B,KAED,8BAA+B,CAC9B,MAED,6BAA8B,CAC7B,OAED,6BAA8B,CAC7B,OAED,+BAAgC,CAC/B,OAED,8BAA+B,CAC9B,OAED,8BAA+B,CAC9B,OAED,6BAA8B,CAC7B,MACA,MAED,oCAAqC,CACpC,MACA,MAED,+BAAgC,CAC/B,MACA,KACA,IACA,KACA,KACA,KACA,MAED,sCAAuC,CACtC,MACA,MAED,sCAAuC,CACtC,MACA,MAED,oBAAqB,CACpB,OAED,qBAAsB,CACrB,OAED,4BAA6B,CAC5B,OAED,4BAA6B,CAC5B,OAED,mBAAoB,CACnB,OAED,wBAAyB,CACxB,OAED,2BAA4B,CAC3B,OAED,iBAAkB,CACjB,MACA,IAED,uBAAwB,CACvB,MACA,KACA,IACA,MAED,8BAA+B,CAC9B,MACA,KACA,IACA,MAED,2CAA4C,CAC3C,MACA,MAED,oCAAqC,CACpC,MACA,MAED,uCAAwC,CACvC,MACA,MAED,uCAAwC,CACvC,KACA,MAED,wCAAyC,CACxC,MACA,MAED,yCAA0C,CACzC,MACA,MAED,0CAA2C,CAC1C,MACA,KACA,KAED,+BAAgC,CAC/B,MACA,MAED,+BAAgC,CAC/B,MACA,MAED,iCAAkC,CACjC,MACA,MAED,mCAAoC,CACnC,MACA,MAED,uBAAwB,CACvB,OAGF,SAAS0xD,EAAoBJ,GAC5B,IAAIE,EAAoBC,EAAEzxD,EAAKsxD,GAC9B,OAAOzwD,QAAQC,UAAU6wD,MAAK,WAC7B,IAAI9lD,EAAI,IAAIxJ,MAAM,uBAAyBivD,EAAM,KAEjD,MADAzlD,EAAEosC,KAAO,mBACHpsC,CACP,IAGD,IAAI+lD,EAAM5xD,EAAIsxD,GAAMzuD,EAAK+uD,EAAI,GAC7B,OAAO/wD,QAAQ80C,IAAIic,EAAIj3C,MAAM,GAAG3a,IAAIwxD,EAAoB3lD,IAAI8lD,MAAK,WAChE,OAAOH,EAAoB3uD,EAC5B,GACD,CACA6uD,EAAoB97C,KAAO,WAAa,OAAO3U,OAAO2U,KAAK5V,EAAM,EACjE0xD,EAAoB7uD,GAAK,MACzBxF,EAAOC,QAAUo0D,C,wBCxTjB,IAAI1xD,EAAM,CACT,kCAAmC,MACnC,kCAAmC,KACnC,gCAAiC,MACjC,qBAAsB,MACtB,oBAAqB,MACrB,qBAAsB,MACtB,oBAAqB,KACrB,yBAA0B,OAI3B,SAASqxD,EAAeC,GACvB,IAAIzuD,EAAK0uD,EAAsBD,GAC/B,OAAOE,EAAoB3uD,EAC5B,CACA,SAAS0uD,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEzxD,EAAKsxD,GAAM,CACpC,IAAIzlD,EAAI,IAAIxJ,MAAM,uBAAyBivD,EAAM,KAEjD,MADAzlD,EAAEosC,KAAO,mBACHpsC,CACP,CACA,OAAO7L,EAAIsxD,EACZ,CACAD,EAAez7C,KAAO,WACrB,OAAO3U,OAAO2U,KAAK5V,EACpB,EACAqxD,EAAevwD,QAAUywD,EACzBl0D,EAAOC,QAAU+zD,EACjBA,EAAexuD,GAAK,K","sources":["webpack:///./config/build.empty.js","webpack:///./src/app.js","webpack:///./src/common/helpers.js","webpack:///./src/common/dateHelpers.js","webpack:///./src/common/downloadHelpers.js","webpack:///./src/components/authentication/authentication.js","webpack:///./src/components/authentication/authenticationContext.js","webpack:///./src/components/chart/chart.js","webpack:///./src/components/chart/chartAxisLabel.js","webpack:///./src/components/chart/chartContext.js","webpack:///./src/components/chart/chartElements.js","webpack:///./src/components/chart/chartHelpers.js","webpack:///./src/components/chart/chartIcon.js","webpack:///./src/components/chart/chartLegend.js","webpack:///./src/components/chart/chartTooltip.js","webpack:///./src/components/form/formHelpers.js","webpack:///./src/components/form/select.js","webpack:///./src/components/graphCard/graphCardHelpers.js","webpack:///./src/components/i18n/i18n.js","webpack:///./src/components/i18n/i18nHelpers.js","webpack:///./src/components/loader/loader.js","webpack:///./src/components/messageView/messageView.js","webpack:///./src/components/optinView/optinView.js","webpack:///./src/components/pageLayout/pageColumns.js","webpack:///./src/components/pageLayout/pageHeader.js","webpack:///./src/components/pageLayout/pageLayout.js","webpack:///./src/components/pageLayout/pageMessages.js","webpack:///./src/components/pageLayout/pageSection.js","webpack:///./src/components/pageLayout/pageToolbar.js","webpack:///./src/components/router/router.js","webpack:///./src/components/router/routerContext.js","webpack:///./src/components/router/routerHelpers.js","webpack:///./src/components/table/table.js","webpack:///./src/components/table/tableEmpty.js","webpack:///./src/components/table/tableSkeleton.js","webpack:///./src/components/tooltip/tooltip.js","webpack:///./src/config/products.js","webpack:///./src/config/routes.js","webpack:///./src/config/product.openshiftContainer.js","webpack:///./src/config/product.openshiftDedicated.js","webpack:///./src/config/product.openshiftMetrics.js","webpack:///./src/config/product.rhacs.js","webpack:///./src/config/product.rhel.js","webpack:///./src/config/product.rhods.js","webpack:///./src/config/product.rosa.js","webpack:///./src/config/product.satellite.js","webpack:///./src/hooks/useWindow.js","webpack:///./src/redux/common/reduxHelpers.js","webpack:///./src/redux/hooks/useReactRedux.js","webpack:///./src/redux/hooks/index.js","webpack:///./src/services/common/helpers.js","webpack:///./src/services/common/serviceConfig.js","webpack:///./src/services/platform/platformSchemas.js","webpack:///./src/services/platform/platformTransformers.js","webpack:///./src/services/platform/platformServices.js","webpack:///./src/redux/actions/platformActions.js","webpack:///./src/services/config.js","webpack:///./src/services/rhsm/rhsmSchemas.js","webpack:///./src/services/rhsm/rhsmTransformers.js","webpack:///./src/services/rhsm/rhsmHelpers.js","webpack:///./src/services/rhsm/rhsmServices.js","webpack:///./src/redux/actions/rhsmActions.js","webpack:///./src/services/user/userServices.js","webpack:///./src/redux/actions/userActions.js","webpack:///./src/redux/actions/index.js","webpack:///./src/redux/reducers/graphReducer.js","webpack:///./src/redux/reducers/inventoryReducer.js","webpack:///./src/redux/reducers/messagesReducer.js","webpack:///./src/redux/reducers/toolbarReducer.js","webpack:///./src/redux/reducers/userReducer.js","webpack:///./src/redux/reducers/viewReducer.js","webpack:///./src/redux/reducers/index.js","webpack:///./src/redux/middleware/actionRecordMiddleware.js","webpack:///./src/redux/middleware/index.js","webpack:///./src/redux/middleware/statusMiddleware.js","webpack:///./src/redux/middleware/multiActionMiddleware.js","webpack:///./src/redux/store.js","webpack:///./src/redux/types/appTypes.js","webpack:///./src/redux/types/graphTypes.js","webpack:///./src/redux/types/inventoryTypes.js","webpack:///./src/redux/types/platformTypes.js","webpack:///./src/redux/types/queryTypes.js","webpack:///./src/redux/types/toolbarTypes.js","webpack:///./src/redux/types/userTypes.js","webpack:///./src/redux/types/index.js","webpack:///./src/redux/types/messageTypes.js","webpack:///./src/redux/types/rhsmTypes.js","webpack:///./src/services/platform/platformConstants.js","webpack:///./src/services/rhsm/rhsmConstants.js","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/components/ lazy ^\\.\\/.*\\.js$ exclude: \\.test\\.js$ namespace object","webpack:///./src/config/ sync nonrecursive product\\.[\\d\\D]+\\.js$/"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMount } from 'react-use';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { reduxActions, storeHooks } from './redux';\nimport { I18n } from './components/i18n/i18n';\nimport { Router } from './components/router';\nimport Authentication from './components/authentication/authentication';\nimport { helpers } from './common';\n\n/**\n * @memberof Base\n * @module App\n */\n\n/**\n * ToDo: Investigate replacing NotificationsPortal\n * NotificationsPortal takes down the entire app when the parent Redux store is unavailable.\n */\n/**\n * Curiosity application start.\n * - Loads locale\n * - Provides authentication\n *\n * @param {object} props\n * @param {Function} props.getLocale\n * @param {Function} props.useDispatch\n * @param {Function} props.useSelector\n * @returns {React.ReactNode}\n */\nconst App = ({ getLocale, useDispatch: useAliasDispatch, useSelector: useAliasSelector }) => {\n  const dispatch = useAliasDispatch();\n  const { value: locale } = useAliasSelector(({ user }) => user?.locale?.data, {});\n  let platformNotifications = null;\n\n  useMount(() => {\n    if (!locale) {\n      dispatch(getLocale());\n    }\n  });\n\n  if (!helpers.UI_DISABLED_NOTIFICATIONS) {\n    platformNotifications = <NotificationsPortal />;\n  }\n\n  return (\n    <I18n locale={locale}>\n      {platformNotifications}\n      <Authentication>\n        <Router />\n      </Authentication>\n    </I18n>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelector: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: reduxActions.user.getLocale,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelector: storeHooks.reactRedux.useSelector\n};\n\nexport { App as default, App };\n","import numbro from 'numbro';\nimport cryptoSha1 from 'crypto-js/sha1';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isPlainObject from 'lodash/isPlainObject';\n\n/**\n * @memberof Helpers\n * @module General\n */\n\n/**\n * Fill for AggregatedError\n *\n * @param {Array|*} errors An array of errors\n * @param {string|*} message\n * @param {object} options\n * @param {string} options.name\n * @returns {Error|window.AggregateError<Error>}\n */\nconst aggregatedError = (errors, message, { name = 'AggregateError' } = {}) => {\n  const { AggregateError, Error } = window;\n  let err;\n\n  if (AggregateError) {\n    err = new AggregateError(errors, message);\n  } else {\n    err = new Error(message);\n    err.name = name;\n    err.errors = (Array.isArray(errors) && errors) || [errors];\n    err.isEmulated = true;\n  }\n  return err;\n};\n\n/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * Generate a consistent hash\n *\n * @param {*|object} anyValue\n * @param {object} options\n * @param {Function} options.method\n * @returns {*|string}\n */\nconst generateHash = (anyValue, { method = cryptoSha1 } = {}) =>\n  method(\n    JSON.stringify({\n      value:\n        (_isPlainObject(anyValue) &&\n          JSON.stringify(\n            Object.entries(anyValue).sort(([a], [b]) => a.localeCompare(b)),\n            (key, value) => {\n              if (value !== anyValue && _isPlainObject(value)) {\n                return JSON.stringify(Object.entries(value).sort(([a], [b]) => a.localeCompare(b)) || []);\n              }\n              if (typeof value === 'function') {\n                return value.toString();\n              }\n              return value;\n            }\n          )) ||\n        `${typeof anyValue}${anyValue?.toString() || anyValue}`\n    })\n  ).toString();\n\n/**\n * Simple memoize, cache based arguments with adjustable limit.\n *\n * @param {Function} func\n * @param {object} options\n * @param {number} options.cacheLimit\n * @returns {Function}\n */\nconst memo = (func, { cacheLimit = 1 } = {}) => {\n  // eslint-disable-next-line func-names\n  const ized = function () {\n    const cache = [];\n\n    return (...args) => {\n      const key = JSON.stringify({ value: [...args].map(arg => (typeof arg === 'function' && arg.toString()) || arg) });\n      const keyIndex = cache.indexOf(key);\n\n      if (keyIndex < 0) {\n        const result = func.call(null, ...args);\n        cache.unshift(key, result);\n        cache.length = cacheLimit * 2;\n        return cache[1];\n      }\n\n      return cache[keyIndex + 1];\n    };\n  };\n\n  return ized();\n};\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * ToDo: review adding \"locale\" for numbro\n */\n/**\n * Convenience wrapper for numbro. Numbro assumes all values passed to it conform as \"number\".\n * This allows us to optional chain the function results.\n *\n * @param {*} value\n * @returns {numbro.Numbro|*}\n */\nconst numberDisplay = value => {\n  if (typeof value !== 'number' || Number.isNaN(value)) {\n    return value;\n  }\n  return numbro(value);\n};\n\n/**\n * Recursive object and props freeze/immutable.\n * Used from deep-freeze-strict, an older npm package, license - public domain\n * https://bit.ly/3HR4XWP and https://bit.ly/3Ye4S6B\n *\n * @param {object} obj\n * @returns {*}\n */\nconst objFreeze = obj => {\n  Object.freeze(obj);\n\n  const oIsFunction = typeof obj === 'function';\n  const hasOwnProp = Object.prototype.hasOwnProperty;\n\n  Object.getOwnPropertyNames(obj).forEach(prop => {\n    if (\n      hasOwnProp.call(obj, prop) &&\n      (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true) &&\n      obj[prop] !== null &&\n      (typeof obj[prop] === 'object' || typeof obj[prop] === 'function') &&\n      !Object.isFrozen(obj[prop])\n    ) {\n      objFreeze(obj[prop]);\n    }\n  });\n\n  return obj;\n};\n\n/**\n * Quick set data as \"immutable-like\". Typically used to pass object and array data through configuration callbacks.\n *\n * @param {*} data\n * @param {object} options\n * @param {boolean} options.isClone Clone your data before mutating it.\n * @returns {*}\n */\nconst setImmutableData = memo(\n  (data, { isClone = false } = {}) => (isClone && objFreeze(_cloneDeep(data))) || objFreeze(data)\n);\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * FixMe: Replace, or alias towards UI_DEPLOY_PATH_PREFIX, this dotenv parameter if/when \"beta\" and \"preview\" are normalized.\n */\n/**\n * Patch for compensating for platform updates where a mismatch between \"beta\" and \"preview\" for redirects means\n * that the same prefix can no longer be used for both additional remote resources and links. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_LINK_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_LINK_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable platform notifications.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_NOTIFICATIONS = process.env.REACT_APP_UI_DISABLED_NOTIFICATIONS === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the current hosts inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_HOSTS = process.env.REACT_APP_UI_DISABLED_TABLE_HOSTS === 'true';\n\n/**\n * Disable the current instances inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_INSTANCES = process.env.REACT_APP_UI_DISABLED_TABLE_INSTANCES === 'true';\n\n/**\n * Disable the current subscriptions inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_SUBSCRIPTIONS = process.env.REACT_APP_UI_DISABLED_TABLE_SUBSCRIPTIONS === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * Disable the group variant filter aspect of the toolbar.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR_GROUP_VARIANT = process.env.REACT_APP_UI_DISABLED_TOOLBAR_GROUP_VARIANT === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * A url, or uri, for \"recommend actions\"\n *\n * @type {string}\n */\nconst UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS = process.env.REACT_APP_UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI state logging file name.\n *\n * @type {string}\n */\nconst UI_LOGGER_FILE = process.env.REACT_APP_UI_LOGGER_FILE || 'debug_log_{0}.json';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @param {boolean} options.limit\n * @param {string} options.id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  aggregatedError,\n  browserExpose,\n  generateHash,\n  generateId,\n  isDate,\n  isPromise,\n  memo,\n  noop,\n  noopPromise,\n  numberDisplay,\n  objFreeze,\n  setImmutableData,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DEPLOY_PATH_LINK_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_NOTIFICATIONS,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TABLE_HOSTS,\n  UI_DISABLED_TABLE_INSTANCES,\n  UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  UI_DISABLED_TOOLBAR,\n  UI_DISABLED_TOOLBAR_GROUP_VARIANT,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_LOGGER_FILE,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../services/rhsm/rhsmConstants';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * @memberof Helpers\n * @module Dates\n */\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && moment.utc('20190720').toDate()) ||\n  (helpers.DEV_MODE &&\n    process.env.REACT_APP_DEBUG_DEFAULT_DATETIME &&\n    moment.utc(process.env.REACT_APP_DEBUG_DEFAULT_DATETIME).toDate()) ||\n  moment.utc().toDate();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @param {string} params.endOfMeasurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement, endOfMeasurement = 'days' }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf(endOfMeasurement).toDate()\n});\n\nconst currentDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 1, measurement: 'days' });\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\nconst rangedYearDateTime = setRangedDateTime({\n  date: getCurrentDate(),\n  subtract: 11,\n  measurement: 'months',\n  endOfMeasurement: 'months'\n});\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case 'CURRENT':\n      return { ...currentDateTime };\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Generate a list of months for use in a select list.\n *\n * @param {string} month\n * @returns {{keyDateTimeRanges: {}, listDateTimeRanges: Array}|*|undefined}\n */\nconst getRangedMonthDateTime = month => {\n  const currentYear = Number.parseInt(moment.utc(getCurrentDate()).year(), 10);\n  const { startDate, endDate } = { ...rangedYearDateTime };\n  const keyDateTimeRanges = {};\n  let listDateTimeRanges = [];\n\n  const startDateUpdated = moment.utc(startDate);\n  const endDateUpdated = moment.utc(endDate);\n\n  while (endDateUpdated > startDateUpdated || startDateUpdated.format('M') === endDateUpdated.format('M')) {\n    const dateTime = {\n      value: {\n        startDate: startDateUpdated.toDate()\n      }\n    };\n\n    const titleYear = startDateUpdated.format('MMMM YYYY');\n    const title = startDateUpdated.format('MMMM');\n    const titleIndex = startDateUpdated.format('M');\n    const isNextYear = currentYear !== Number.parseInt(startDateUpdated.year(), 10);\n\n    dateTime.title = (isNextYear && titleYear) || title;\n    dateTime._title = title.toLowerCase();\n    dateTime.value.endDate = moment.utc(startDateUpdated).endOf('month').toDate();\n\n    startDateUpdated.add(1, 'month');\n\n    dateTime.title = translate('curiosity-toolbar.label', { context: ['granularityRangedMonthly', dateTime.title] });\n    keyDateTimeRanges[title.toLowerCase()] = { ...dateTime };\n    keyDateTimeRanges[titleIndex] = { ...dateTime };\n    listDateTimeRanges.push(dateTime);\n  }\n\n  listDateTimeRanges = listDateTimeRanges.reverse();\n  listDateTimeRanges[0] = {\n    ...listDateTimeRanges[0],\n    isCurrent: true,\n    _title: 'current',\n    title: translate('curiosity-toolbar.label', { context: ['granularityRangedMonthly', 'current'] })\n  };\n\n  keyDateTimeRanges.current = { ...listDateTimeRanges[0] };\n\n  if (month) {\n    return keyDateTimeRanges?.[month] || undefined;\n  }\n\n  return { keyDateTimeRanges, listDateTimeRanges };\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\n/**\n * Consistent timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampTimeFormats = {\n  timeLong: 'MMMM D h:mm:ss A',\n  yearTimeLong: 'MMMM D YYYY h:mm:ss A',\n  timeShort: 'MMM D h:mm A',\n  yearTimeShort: 'MMM D YYYY h:mm A'\n};\n\n/**\n * Consistent UTC timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampUTCTimeFormats = {\n  timeLong: 'DD MMMM HH:mm:ss UTC',\n  yearTimeLong: 'DD MMMM YYYY HH:mm:ss UTC',\n  timeShort: 'DD MMM HH:mm UTC',\n  yearTimeShort: 'DD MMM YYYY HH:mm UTC'\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { dateHelpers } from './dateHelpers';\n\n/**\n * @memberof Helpers\n * @module Downloads\n */\n\n/**\n * Download data to a file\n *\n * @param {object} options\n * @param {string} options.data\n * @param {string} options.fileName\n * @param {string} options.fileType\n * @returns {Promise}\n */\nconst downloadData = options => {\n  const { data = '', fileName = 'download.txt', fileType = 'text/plain' } = options || {};\n  return new Promise((resolve, reject) => {\n    try {\n      const { document, navigator, URL } = window;\n      const blob = new Blob([data], { type: fileType });\n\n      if (navigator?.msSaveBlob) {\n        navigator.msSaveBlob(blob, fileName);\n        resolve({ fileName, data });\n      } else {\n        const anchorTag = document.createElement('a');\n\n        anchorTag.href = URL.createObjectURL(blob);\n        anchorTag.style.display = 'none';\n        anchorTag.download = fileName;\n\n        document.body.appendChild(anchorTag);\n\n        anchorTag.click();\n\n        setTimeout(() => {\n          document.body.removeChild(anchorTag);\n          URL.revokeObjectURL(blob);\n          resolve({ fileName, data });\n        }, 250);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\n/**\n * Download the debug log file.\n */\nconst debugLog = async () => {\n  try {\n    const { sessionStorage } = window;\n    const fileName = `${helpers.UI_LOGGER_FILE}`.replace(\n      '{0}',\n      moment(dateHelpers.getCurrentDate()).format('YYYYMMDD_HHmmss')\n    );\n    const data = JSON.stringify(JSON.parse(sessionStorage.getItem(`${helpers.UI_LOGGER_ID}`)), null, 2);\n\n    await downloadData({ data, fileName, fileType: 'application/json' });\n  } catch (e) {\n    throw new Error(`debuglog error, ${e.message}`);\n  }\n};\n\nconst downloadHelpers = {\n  downloadData,\n  debugLog\n};\n\nhelpers.browserExpose({ debugLog }, { limit: false });\n\nexport { downloadHelpers as default, downloadHelpers, downloadData, debugLog };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { routerHelpers } from '../router';\nimport { rhsmConstants } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\nimport { MessageView } from '../messageView/messageView';\nimport { OptinView } from '../optinView/optinView';\nimport { translate } from '../i18n/i18n';\nimport { AuthenticationContext, useGetAuthorization } from './authenticationContext';\n\n/**\n * Authentication component wrapper.\n *\n * @memberof Components\n * @module Authentication\n * @property {module} AuthenticationContext\n */\n\n/**\n * An authentication pass-through component.\n *\n * @param {object} props\n * @param {string} props.appName\n * @param {React.ReactNode} props.children\n * @param {boolean} props.isDisabled\n * @param {Function} props.t\n * @param {Function} props.useGetAuthorization\n * @returns {React.ReactNode}\n */\nconst Authentication = ({ appName, children, isDisabled, t, useGetAuthorization: useAliasGetAuthorization }) => {\n  const { pending, data = {} } = useAliasGetAuthorization();\n  const { authorized = {}, errorCodes, errorStatus } = data;\n  const { [appName]: isAuthorized } = authorized;\n\n  const renderContent = () => {\n    if (isDisabled) {\n      return (\n        <MessageView>\n          <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n        </MessageView>\n      );\n    }\n\n    if (isAuthorized) {\n      return children;\n    }\n\n    if (pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (errorCodes && errorCodes.includes(rhsmConstants.RHSM_API_RESPONSE_ERRORS_CODE_TYPES.OPTIN)) ||\n      errorStatus === 418\n    ) {\n      return <OptinView />;\n    }\n\n    return (\n      <MessageView>\n        <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n      </MessageView>\n    );\n  };\n\n  return <AuthenticationContext.Provider value={data}>{renderContent()}</AuthenticationContext.Provider>;\n};\n\n/**\n * Prop types.\n *\n * @type {{useGetAuthorization: Function, children: React.ReactNode, appName: string, isDisabled: boolean}}\n */\nAuthentication.propTypes = {\n  appName: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  useGetAuthorization: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useGetAuthorization: Function, t: Function, appName: string, isDisabled: boolean}}\n */\nAuthentication.defaultProps = {\n  appName: routerHelpers.appName,\n  isDisabled: helpers.UI_DISABLED,\n  t: translate,\n  useGetAuthorization\n};\n\nexport { Authentication as default, Authentication };\n","import React, { useContext } from 'react';\nimport { useMount } from 'react-use';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { helpers } from '../../common';\nimport { routerHelpers } from '../router';\n\n/**\n * @memberof Authentication\n * @module AuthenticationContext\n */\n\n/**\n * Authentication context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst AuthenticationContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated authentication context.\n *\n * @returns {React.Context<{}>}\n */\nconst useAuthContext = () => useContext(AuthenticationContext);\n\n/**\n * Initialize an app, and return a combined state store that includes authorization, locale, and API errors\n *\n * @param {object} options\n * @param {string} options.appName\n * @param {Function} options.authorizeUser\n * @param {Function} options.hideGlobalFilter\n * @param {Function} options.useChrome\n * @param {Function} options.useDispatch\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: {errorCodes, errorStatus: *, locale}, pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetAuthorization = ({\n  appName = routerHelpers.appName,\n  authorizeUser = reduxActions.platform.authorizeUser,\n  hideGlobalFilter = reduxActions.platform.hideGlobalFilter,\n  useChrome: useAliasChrome = useChrome,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const dispatch = useAliasDispatch();\n  const { updateDocumentTitle = helpers.noop } = useAliasChrome();\n  const { data, error, fulfilled, pending, responses } = useAliasSelectorsResponse([\n    { id: 'auth', selector: ({ user }) => user?.auth },\n    { id: 'locale', selector: ({ user }) => user?.locale },\n    {\n      id: 'errors',\n      selector: ({ user }) => (user?.errors?.error === true && user.errors) || { fulfilled: true, data: [] }\n    }\n  ]);\n\n  useMount(async () => {\n    await dispatch(authorizeUser());\n    updateDocumentTitle(appName);\n    dispatch([hideGlobalFilter()]);\n  });\n\n  const [user = {}, app = {}] = (Array.isArray(data.auth) && data.auth) || [];\n  const errorStatus = (error && responses?.id?.errors?.status) || null;\n\n  return {\n    data: {\n      ...user,\n      ...app,\n      locale: data.locale,\n      errorCodes: data.errors,\n      errorStatus\n    },\n    error,\n    fulfilled,\n    pending\n  };\n};\n\n/**\n * Return session data from authentication context.\n *\n * @param {Function} useAliasAuthContext\n * @returns {{errorCodes, errorStatus: *, locale}}\n */\nconst useSession = ({ useAuthContext: useAliasAuthContext = useAuthContext } = {}) => {\n  const session = useAliasAuthContext();\n  return {\n    ...session\n  };\n};\n\nconst context = {\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useGetAuthorization,\n  useSession\n};\n\nexport {\n  context as default,\n  context,\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useGetAuthorization,\n  useSession\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ChartThemeColor } from '@patternfly/react-charts';\nimport { ChartContext } from './chartContext';\nimport { ChartElements } from './chartElements';\nimport { ChartLegend } from './chartLegend';\nimport { chartHelpers, ChartTypeVariant } from './chartHelpers';\nimport { useResizeObserver } from '../../hooks/useWindow';\n\n/**\n * PF Charts/Victory area, and line, charts generator.\n *\n * @memberof Components\n * @module Chart\n * @property {module} ChartAxisLabel\n * @property {module} ChartContext\n * @property {module} ChartElements\n * @property {module} ChartHelpers\n * @property {module} ChartIcon\n * @property {module} ChartLegend\n * @property {module} ChartTooltip\n */\n\n/**\n * Return a chart and elements with a context provider.\n *\n * @param {object} props\n * @param {React.ReactNode|Function} props.chartLegend\n * @param {React.ReactNode|Function} props.chartTooltip\n * @param {Array} props.dataSets\n * @param {object} props.padding\n * @param {string} props.themeColor\n * @param {React.ReactNode|Function} props.xAxisChartLabel\n * @param {React.ReactNode|Function} props.yAxisChartLabel\n * @param {boolean} props.xAxisFixLabelOverlap\n * @param {number} props.xAxisLabelIncrement\n * @param {Function} props.xAxisTickFormat\n * @param {Function} props.yAxisTickFormat\n * @param {Function} props.xValueFormat\n * @param {Function} props.yValueFormat\n * @returns {React.ReactNode}\n */\nconst Chart = ({\n  chartLegend,\n  chartTooltip,\n  dataSets,\n  padding,\n  themeColor,\n  xAxisChartLabel,\n  yAxisChartLabel,\n  xAxisFixLabelOverlap,\n  xAxisLabelIncrement,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  xValueFormat,\n  yValueFormat\n}) => {\n  const [context, setContext] = useState();\n  const [dataSetsToggle, setDataSetsToggle] = useState({});\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const { width: chartWidth } = useResizeObserver(containerRef);\n\n  useEffect(() => {\n    /**\n     * Aggregate chart related settings.\n     *\n     * @returns {{isMultiYAxis: boolean, padding: object, chartDomain: {domain: {y: Array}}, tooltipDataSetLookUp: {},\n     *     xAxisProps: object, themeColor: string, maxY: (object|number), hasData: boolean, maxX: number,\n     *     yAxisProps: Array, chartElementsProps: {elementsById: object, stackedElements: Array,\n     *     stackedElementsById: object, elements: Array}}}\n     */\n    const updateChartSettings = () => {\n      const toggledDataSets = dataSets.filter(({ id }) => !dataSetsToggle[id]);\n\n      const tooltipDataSetLookUp = chartHelpers.generateTooltipData({\n        content: chartTooltip,\n        dataSets: toggledDataSets\n      });\n\n      const { maxX, maxY } = chartHelpers.generateMaxXY({ dataSets: toggledDataSets });\n      const { individualMaxY } = chartHelpers.generateMaxXY({ dataSets });\n      const { xAxisProps, yAxisProps } = chartHelpers.generateAxisProps({\n        dataSets,\n        individualMaxY,\n        maxX,\n        maxY,\n        xAxisChartLabel,\n        yAxisChartLabel,\n        xAxisFixLabelOverlap,\n        xAxisLabelIncrement,\n        xAxisTickFormat,\n        yAxisTickFormat\n      });\n\n      const isMultiYAxis = yAxisProps.length > 1;\n      const chartElementsProps = chartHelpers.generateElementsProps({\n        dataSets: toggledDataSets,\n        maxX,\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        xValueFormat,\n        yValueFormat\n      });\n      const { domain, padding: domainPadding } = chartHelpers.generateDomains({\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        padding\n      });\n      const hasData = !!xAxisProps.tickValues;\n      const updatedPadding = { bottom: 0, left: 0, right: 0, top: 0, ...padding, ...domainPadding };\n\n      return {\n        xAxisProps,\n        yAxisProps,\n        chartDomain: { domain },\n        chartElementsProps,\n        hasData,\n        isMultiYAxis,\n        maxX,\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        padding: updatedPadding,\n        themeColor,\n        tooltipDataSetLookUp\n      };\n    };\n\n    const chartSettings = updateChartSettings();\n    const updatedSettings = {\n      chartContainerRef: () => containerRef,\n      chartSettings: { ...chartSettings, chartLegend, chartWidth, dataSets },\n      chartTooltipRef: () => tooltipRef,\n      dataSetsToggle: [dataSetsToggle, setDataSetsToggle]\n    };\n\n    setContext(updatedSettings);\n  }, [\n    chartLegend,\n    chartTooltip,\n    chartWidth,\n    dataSets,\n    dataSetsToggle,\n    padding,\n    setContext,\n    themeColor,\n    xAxisChartLabel,\n    yAxisChartLabel,\n    xAxisFixLabelOverlap,\n    xAxisLabelIncrement,\n    yAxisTickFormat,\n    xAxisTickFormat,\n    xValueFormat,\n    yValueFormat\n  ]);\n\n  return (\n    <ChartContext.Provider value={context}>\n      <div\n        className=\"curiosity-chartarea uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        data-test=\"curiosity-chartarea\"\n        ref={containerRef}\n      >\n        {chartWidth > 0 && (\n          <React.Fragment>\n            <ChartElements />\n            <ChartLegend />\n          </React.Fragment>\n        )}\n      </div>\n    </ChartContext.Provider>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{chartTooltip: React.ReactNode|Function, xValueFormat: Function, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: Function, themeColor: string, chartLegend: React.ReactNode|Function,\n *     yAxisTickFormat: Function, dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number,\n *     yValueFormat: Function}}\n */\nChart.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      chartType: PropTypes.oneOf([...Object.values(ChartTypeVariant)]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      xAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      yAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      xAxisUseDataSet: PropTypes.bool,\n      yAxisUseDataSet: PropTypes.bool\n    })\n  ),\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  yAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func,\n  xValueFormat: PropTypes.func,\n  yValueFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartTooltip: React.ReactNode|Function, xValueFormat: Function, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: Function, themeColor: string, chartLegend: React.ReactNode|Function,\n *     yAxisTickFormat: Function, dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number,\n *     yValueFormat: Function}}\n */\nChart.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  dataSets: [],\n  padding: {\n    bottom: 75,\n    left: 55,\n    right: 55,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisChartLabel: null,\n  yAxisChartLabel: null,\n  xAxisFixLabelOverlap: true,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null,\n  xValueFormat: null,\n  yValueFormat: null\n};\n\nexport { Chart as default, Chart, ChartTypeVariant };\n","import React from 'react';\n\n/**\n * @memberof Chart\n * @module ChartAxisLabel\n */\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * Allow, and return, SVG compatible HTML for axis labels.\n *\n * @param {object} params\n * @param {string} params.axis\n * @param {number} params.index\n * @returns {Function}\n */\nconst chartAxisLabel =\n  ({ axis, index = 0 } = {}) =>\n  ({ x, y, text }) => // eslint-disable-line\n    (\n      <g>\n        <foreignObject x={0} y={0} width=\"100%\" height=\"100%\">\n          <div\n            className={`curiosity-chartarea__axis-label-container curiosity-chartarea__axis-label-container-${axis} curiosity-chartarea__axis-label-container-${axis}-${index}`}\n            style={{ top: `${y ?? 0}px` }}\n            xmlns=\"http://www.w3.org/1999/xhtml\"\n          >\n            <div className=\"curiosity-chartarea__axis-label-container-content\">{text}</div>\n          </div>\n        </foreignObject>\n      </g>\n    );\n\nexport { chartAxisLabel as default, chartAxisLabel };\n","import React, { useCallback, useContext } from 'react';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Chart\n * @module ChartContext\n */\n\n/**\n * Chart context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { chartContainerRef: helpers.noop, chartSettings: {}, chartTooltipRef: helpers.noop, dataSetsToggle: [] },\n  helpers.noop\n];\n\nconst ChartContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated chart context.\n *\n * @returns {React.Context<{}>}\n */\nconst useChartContext = () => useContext(ChartContext);\n\n/**\n * ToDo: reevaluate this alternative pattern of passing hooks as options, helps testing\n */\n/**\n * Track, show, and hide chart data layers.\n *\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n * @param {object} options\n * @param {Function} options.useChartContext\n * @returns {{onRevert: Function, onToggle: Function, getIsToggled: Function, dataSetsToggle: object,\n *     onHide: Function}}\n */\nconst useToggleData = ({ useChartContext: useAliasChartContext = useChartContext } = {}) => {\n  const { dataSetsToggle: contextDataSetsToggle = [] } = useAliasChartContext();\n  const [dataSetsToggle, setDataSetsToggle] = contextDataSetsToggle;\n\n  /**\n   * Hide a graph layer.\n   *\n   * @event onHide\n   */\n  const onHide = useCallback(\n    id => {\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: true }));\n    },\n    [setDataSetsToggle]\n  );\n\n  /**\n   * Reset graph layers.\n   *\n   * @event onRevert\n   */\n  const onRevert = useCallback(() => {\n    setDataSetsToggle(() => ({}));\n  }, [setDataSetsToggle]);\n\n  /**\n   * Hide/show graph layers.\n   *\n   * @event onToggle\n   * @returns boolean;\n   */\n  const onToggle = useCallback(\n    id => {\n      const updatedToggle = !dataSetsToggle?.[id];\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: updatedToggle }));\n      return updatedToggle;\n    },\n    [dataSetsToggle, setDataSetsToggle]\n  );\n\n  /**\n   * Graph layer status.\n   *\n   * @callback getIsToggled\n   * @returns boolean|*\n   */\n  const getIsToggled = useCallback(id => dataSetsToggle?.[id] || false, [dataSetsToggle]);\n\n  return {\n    ...{ dataSetsToggle },\n    onHide,\n    onRevert,\n    onToggle,\n    getIsToggled\n  };\n};\n\nconst context = {\n  ChartContext,\n  DEFAULT_CONTEXT,\n  useChartContext,\n  useToggleData\n};\n\nexport { context as default, context, ChartContext, DEFAULT_CONTEXT, useChartContext, useToggleData };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VictoryStack as ChartStack, VictoryTooltip as ChartCursorTooltip } from 'victory';\nimport { createContainer } from 'victory-create-container';\nimport { Chart, ChartArea, ChartAxis, ChartContainer, ChartLine, ChartThreshold } from '@patternfly/react-charts';\nimport { useChartContext } from './chartContext';\nimport { chartTooltip } from './chartTooltip';\nimport { chartAxisLabel } from './chartAxisLabel';\nimport { ChartTypeVariant } from './chartHelpers';\n\n/**\n * @memberof Chart\n * @module ChartElements\n */\n\n/**\n * Aggregate, generate, a compatible Victory chart element/facet component.\n *\n * @param {object} props\n * @param {object} props.chartTypeDefaults\n * @returns {React.ReactNode}\n */\nconst ChartElements = ({ chartTypeDefaults }) => {\n  const { chartSettings = {}, chartContainerRef, chartTooltipRef } = useChartContext();\n  const {\n    chartDomain,\n    chartElementsProps,\n    chartWidth,\n    hasData,\n    padding,\n    themeColor,\n    xAxisProps = {},\n    yAxisProps = []\n  } = chartSettings;\n\n  let containerComponent = <ChartContainer />;\n  let xAxis = null;\n  let yAxis = null;\n  let chartElements = [];\n  let stackedChartElements = [];\n\n  if (hasData) {\n    /**\n     * Note: both cursor and voronoiDimension attrs required if the need is to have...\n     * the tooltip populate consistently without being \"near\" a chart element y axis point\n     */\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const TooltipLabelComponent = chartTooltip({ chartSettings, chartContainerRef, chartTooltipRef });\n\n    containerComponent = (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        voronoiDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={\n          <ChartCursorTooltip\n            dx={0}\n            dy={0}\n            centerOffset={{ x: 0, y: 0 }}\n            flyoutStyle={{ fill: 'transparent', stroke: 'transparent' }}\n            labelComponent={<TooltipLabelComponent />}\n          />\n        }\n        voronoiPadding={(padding && Object.values(padding).sort()?.[0]) || 0}\n        mouseFollowTooltips\n      />\n    );\n  }\n\n  /**\n   * Generate X Axis\n   */\n  if (Object.keys(xAxisProps).length) {\n    const updatedXAxisProps = {\n      ...xAxisProps\n    };\n\n    if (updatedXAxisProps.label) {\n      const AxisLabelComponent = chartAxisLabel({ axis: 'x' });\n      updatedXAxisProps.axisLabelComponent = <AxisLabelComponent />;\n    }\n\n    xAxis = <ChartAxis {...updatedXAxisProps} animate={false} />;\n  }\n\n  /**\n   * Generate Y Axis\n   */\n  if (Array.isArray(yAxisProps)) {\n    yAxis = yAxisProps.map((axisProps, index) => {\n      const updatedAxisProps = {\n        ...axisProps\n      };\n\n      if (updatedAxisProps.label) {\n        const AxisLabelComponent = chartAxisLabel({ axis: 'y', index });\n        updatedAxisProps.axisLabelComponent = <AxisLabelComponent />;\n      }\n\n      return <ChartAxis key={`yaxis-${axisProps.orientation}`} {...updatedAxisProps} animate={false} />;\n    });\n  }\n\n  const setChartElement = ({ chartType, props }) => {\n    const { component: Component, ...defaultProps } =\n      chartTypeDefaults[chartType] || chartTypeDefaults[ChartTypeVariant.area];\n    return <Component {...{ ...defaultProps, ...props }} />;\n  };\n\n  chartElements = chartElementsProps?.elements.map(setChartElement);\n  stackedChartElements = chartElementsProps?.stackedElements.map(setChartElement);\n\n  return (\n    <Chart\n      animate={{ duration: 0 }}\n      width={chartWidth}\n      themeColor={themeColor}\n      {...{ padding, containerComponent, ...chartDomain }}\n    >\n      {xAxis}\n      {yAxis}\n      {chartElements}\n      <ChartStack>{stackedChartElements}</ChartStack>\n    </Chart>\n  );\n};\n\n/**\n * Prop types\n *\n * @type {{chartTypeDefaults:{}}}\n */\nChartElements.propTypes = {\n  chartTypeDefaults: PropTypes.objectOf(\n    PropTypes.shape({\n      component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      interpolation: PropTypes.oneOf(['monotoneX', 'step'])\n    })\n  )\n};\n\n/**\n * Default props\n *\n * @type {{chartTypeDefaults:{}}}\n */\nChartElements.defaultProps = {\n  chartTypeDefaults: {\n    [ChartTypeVariant.area]: {\n      component: ChartArea,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    [ChartTypeVariant.line]: {\n      component: ChartLine,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    [ChartTypeVariant.threshold]: {\n      component: ChartThreshold,\n      animate: {\n        duration: 100,\n        onLoad: { duration: 100 }\n      },\n      interpolation: 'step'\n    }\n  }\n};\n\nexport { ChartElements as default, ChartElements };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Chart\n * @module ChartHelpers\n */\n\n/**\n * Available chart types\n *\n * @type {{area: string, line: string, threshold: string}}\n */\nconst ChartTypeVariant = {\n  area: 'area',\n  line: 'line',\n  threshold: 'threshold'\n};\n\n/**\n * Generate max X and Y values from datasets.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @returns {{individualMaxY: object, maxY: number, maxX: number}}\n */\nconst generateMaxXY = ({ dataSets = [] } = {}) => {\n  const individualDataSetsMaxY = {};\n  let combinedDataSetMaxX = 0;\n  let combinedDataSetsMaxY = 0;\n\n  dataSets\n    .filter(({ isStacked }) => isStacked === true)\n    .forEach(({ data }) => {\n      if (Array.isArray(data)) {\n        combinedDataSetsMaxY += Math.max(...data.map(value => value?.y ?? 0));\n      }\n    });\n\n  dataSets.forEach(({ id, data }) => {\n    let dataSetMaxY = 0;\n\n    if (Array.isArray(data)) {\n      combinedDataSetMaxX = data.length > combinedDataSetMaxX ? data.length : combinedDataSetMaxX;\n\n      dataSetMaxY = Math.max(...data.map(value => value?.y ?? 0));\n      combinedDataSetsMaxY = dataSetMaxY > combinedDataSetsMaxY ? dataSetMaxY : combinedDataSetsMaxY;\n    }\n\n    if (id) {\n      individualDataSetsMaxY[id] = dataSetMaxY;\n    }\n  });\n\n  return {\n    maxX: combinedDataSetMaxX,\n    maxY: combinedDataSetsMaxY,\n    individualMaxY: individualDataSetsMaxY\n  };\n};\n\n/**\n * Generate Y axis domain ranges from dataSets, ignore X axis.\n *\n * @param {object} params\n * @param {number|object} params.maxY\n * @param {object} params.padding\n * @returns {{ domain: { y: Array }, padding: {object} }}\n */\nconst generateDomains = ({ maxY, padding = {} } = {}) => {\n  const updatedChartDomain = {};\n  const updatedPadding = { ...padding };\n  const generatedDomain = {};\n\n  if (Object.values(maxY).length) {\n    generatedDomain.y = [0, 1.25];\n  } else if (maxY >= 0.1) {\n    const floored = Math.pow(10, Math.floor(Math.log10(maxY || 10)));\n    generatedDomain.y = [0, Math.ceil((maxY + 1) / floored) * floored];\n  } else if (maxY < 0.1) {\n    generatedDomain.y = [0, maxY + maxY / 4 || 10];\n  } else {\n    generatedDomain.y = [0, 10];\n  }\n\n  if (maxY < 0.01) {\n    updatedPadding.left += generatedDomain.y.toString().length;\n    updatedPadding.right += generatedDomain.y.toString().length;\n  }\n\n  if (Object.keys(generatedDomain).length) {\n    updatedChartDomain.domain = generatedDomain;\n  }\n\n  return {\n    ...updatedChartDomain,\n    padding: updatedPadding\n  };\n};\n\n/**\n * Generate chart element props.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {number} params.maxX\n * @param {number} params.maxY\n * @param {Function} params.xValueFormat\n * @param {Function} params.yValueFormat\n * @param {object} options\n * @param {object} options.chartTypeVariant\n * @returns {{elementsById: object, stackedElements: Array, stackedElementsById: object, elements: Array}}\n */\nconst generateElementsProps = (\n  { dataSets = [], maxX, maxY, xValueFormat, yValueFormat } = {},\n  { chartTypeVariant = ChartTypeVariant } = {}\n) => {\n  const elements = [];\n  const stackedElements = [];\n  const elementsById = {};\n  const stackedElementsById = {};\n\n  dataSets.forEach(dataSet => {\n    const { animate, chartType, data, fill, id, isStacked, interpolation, stroke, strokeDasharray, strokeWidth } =\n      dataSet;\n\n    if (data?.length) {\n      const dataColorStroke = {\n        data: {}\n      };\n\n      if (fill && chartType !== chartTypeVariant.line && chartType !== chartTypeVariant.threshold) {\n        dataColorStroke.data.fill = fill;\n      }\n\n      if (stroke) {\n        dataColorStroke.data.stroke = stroke;\n      }\n\n      if (strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = strokeDasharray;\n      }\n\n      if (strokeWidth) {\n        dataColorStroke.data.strokeWidth = strokeWidth;\n      }\n\n      const defaultProps = {};\n\n      if (animate) {\n        defaultProps.animate = animate;\n      }\n\n      if (interpolation) {\n        defaultProps.interpolation = interpolation;\n      }\n\n      const chartElementProps = {\n        ...defaultProps,\n        key: `chart-${dataSet.id}-${chartType || ''}`,\n        name: `chart-${dataSet.id}-${chartType || ''}`,\n        data: dataSet.data,\n        style: { ...(dataSet.style || {}), ...dataColorStroke },\n        themeColor: dataSet.themeColor,\n        themeVariant: dataSet.themeVariant,\n        x:\n          (xValueFormat &&\n            (datum => {\n              const xValue = xValueFormat({ datum, maxX });\n              return xValue === undefined || Number.isNaN(xValue) ? 0 : xValue;\n            })) ||\n          undefined,\n        y: datum => {\n          let yValue;\n\n          if (yValueFormat) {\n            yValue = yValueFormat({\n              datum,\n              isMultiAxis: typeof maxY !== 'number',\n              maxY: typeof maxY === 'number' ? maxY : maxY?.[dataSet.id]\n            });\n          } else {\n            yValue = typeof maxY === 'number' ? datum.y : datum.y / maxY?.[dataSet.id]; // eslint-disable-line\n          }\n\n          return yValue === undefined || Number.isNaN(yValue) ? 0 : yValue;\n        }\n      };\n\n      const props = { ...chartElementProps };\n      const updatedProps = { chartType, props };\n\n      if (isStacked) {\n        stackedElementsById[id] = updatedProps;\n        stackedElements.push(updatedProps);\n      } else {\n        elementsById[id] = updatedProps;\n        elements.push(updatedProps);\n      }\n    }\n  });\n\n  return {\n    elements,\n    elementsById,\n    stackedElements,\n    stackedElementsById\n  };\n};\n\n/**\n * Preprocess datasets for tooltips.\n *\n * @param {object} params\n * @param {React.ReactNode|Function} params.content\n * @param {Array} params.dataSets\n * @returns {{}}\n */\nconst generateTooltipData = ({ content = helpers.noop, dataSets = [] } = {}) => {\n  const tooltipDataSetLookUp = {};\n\n  if (content && Array.isArray(dataSets?.[0]?.data)) {\n    dataSets[0].data.forEach((dataSet, index) => {\n      const itemsByKey = {};\n\n      dataSets.forEach(data => {\n        if (data?.data?.[index]) {\n          itemsByKey[data.id] = {\n            color: data.stroke || data.fill || data.color || '',\n            chartType: data.chartType,\n            data: _cloneDeep(data.data[index])\n          };\n        }\n      });\n\n      const mockDatum = {\n        datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey }\n      };\n\n      tooltipDataSetLookUp[dataSet.x] = {\n        x: dataSet.x,\n        y: null,\n        itemsByKey,\n        tooltip:\n          (React.isValidElement(content) && React.cloneElement(content, { ...mockDatum })) || content({ ...mockDatum })\n      };\n    });\n  }\n\n  return tooltipDataSetLookUp;\n};\n\n/**\n * Generate X axis props, ticks, tick formatting.\n *\n * @param {object} params\n * @param {object} params.dataSet\n * @param {number} params.maxX\n * @param {number} params.xAxisLabelIncrement\n * @param {object} params.xAxisPropDefaults\n * @param {Function} params.xAxisTickFormat\n * @returns {{tickFormat: Function, tickValues: *}}\n */\nconst generateXAxisProps = ({\n  dataSet = {},\n  maxX,\n  xAxisLabelIncrement,\n  xAxisPropDefaults = {},\n  xAxisTickFormat\n} = {}) => {\n  const { data = [], xAxisChartLabel } = dataSet;\n  const axisProps = {\n    ...xAxisPropDefaults,\n    tickValues: data.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    ),\n    tickFormat: tick => data[tick]?.xAxisLabel || tick\n  };\n\n  if (typeof xAxisChartLabel === 'function') {\n    axisProps.label = xAxisChartLabel({ ...dataSet, xAxisChartLabel: undefined });\n  } else {\n    axisProps.label = xAxisChartLabel;\n  }\n\n  if (typeof xAxisTickFormat === 'function') {\n    axisProps.tickFormat = tick => {\n      const tickIndex = axisProps.tickValues.indexOf(tick);\n      const previousItem = { ...data[axisProps.tickValues[tickIndex - 1]] };\n      const nextItem = { ...data[axisProps.tickValues[tickIndex + 1]] };\n      const item = { ...data[tick] };\n\n      return xAxisTickFormat({ tick, previousItem, item, nextItem, maxX });\n    };\n  }\n\n  return axisProps;\n};\n\n/**\n * Generate Y axis props, ticks, tick formatting.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {number|object} params.maxY\n * @param {object} params.yAxisPropDefaults\n * @param {Function} params.yAxisTickFormat\n * @returns {Array}\n */\nconst generateYAxisProps = ({ dataSets = [], maxY, yAxisPropDefaults = {}, yAxisTickFormat } = {}) => {\n  const axisProps = [];\n  const isMultiAxis = dataSets.length > 1;\n\n  dataSets.forEach(({ yAxisChartLabel, id, stroke, strokeWidth, ...dataSet } = {}, index) => {\n    const updatedAxisProps = {\n      style: { axis: {}, tickLabels: {} },\n      tickFormat: tick => tick\n    };\n\n    if (isMultiAxis && stroke) {\n      updatedAxisProps.style.axis.stroke = stroke;\n    }\n\n    if (isMultiAxis && strokeWidth) {\n      updatedAxisProps.style.axis.strokeWidth = strokeWidth;\n    }\n\n    if (typeof yAxisChartLabel === 'function') {\n      updatedAxisProps.label = yAxisChartLabel({ id, stroke, strokeWidth, ...dataSet });\n    } else {\n      updatedAxisProps.label = yAxisChartLabel;\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      const updatedMaxY = (typeof maxY === 'number' && maxY) || maxY?.[id];\n\n      updatedAxisProps.tickFormat = tick => {\n        const normalizedTick = (isMultiAxis && tick * updatedMaxY) || tick;\n\n        return yAxisTickFormat({\n          tick: normalizedTick,\n          isMultiAxis,\n          maxY: updatedMaxY\n        });\n      };\n    }\n\n    axisProps.push({\n      ...yAxisPropDefaults,\n      ...updatedAxisProps,\n      orientation: (index === 0 && 'left') || 'right'\n    });\n  });\n\n  return axisProps;\n};\n\n/**\n * Generate x,y props.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {object} params.individualMaxY\n * @param {number} params.maxX\n * @param {number} params.maxY\n * @param {React.ReactNode|Function} params.xAxisChartLabel\n * @param {React.ReactNode|Function} params.yAxisChartLabel\n * @param {boolean} params.xAxisFixLabelOverlap\n * @param {number} params.xAxisLabelIncrement\n * @param {Function} params.xAxisTickFormat\n * @param {Function} params.yAxisTickFormat\n * @returns {{xAxisProps: object, yAxisProps: Array}}\n */\nconst generateAxisProps = ({\n  dataSets = [],\n  individualMaxY = {},\n  maxX,\n  maxY,\n  xAxisChartLabel,\n  yAxisChartLabel,\n  xAxisFixLabelOverlap = true,\n  xAxisLabelIncrement = 1,\n  xAxisTickFormat,\n  yAxisTickFormat\n} = {}) => {\n  const xAxisPropDefaults = {\n    fixLabelOverlap: xAxisFixLabelOverlap\n  };\n\n  const yAxisPropDefaults = {\n    dependentAxis: true,\n    showGrid: true\n  };\n\n  let yAxisDataSets = [];\n  let xAxisDataSet;\n\n  dataSets.forEach(dataSet => {\n    if (dataSet.yAxisUseDataSet) {\n      yAxisDataSets.push({\n        yAxisChartLabel,\n        ...dataSet\n      });\n    }\n    if (dataSet.xAxisUseDataSet) {\n      xAxisDataSet = {\n        xAxisChartLabel,\n        ...dataSet\n      };\n    }\n  });\n\n  if (!yAxisDataSets.length) {\n    yAxisDataSets.push({\n      yAxisChartLabel,\n      ...dataSets?.[0]\n    });\n  } else {\n    yAxisDataSets = yAxisDataSets.slice(0, 2);\n  }\n\n  if (!xAxisDataSet) {\n    xAxisDataSet = {\n      xAxisChartLabel,\n      ...dataSets?.[0]\n    };\n  }\n\n  const updatedMaxY = (yAxisDataSets.length > 1 && individualMaxY) || maxY;\n\n  return {\n    xAxisProps: generateXAxisProps({\n      dataSet: xAxisDataSet,\n      maxX,\n      xAxisLabelIncrement,\n      xAxisPropDefaults,\n      xAxisTickFormat\n    }),\n    yAxisProps: generateYAxisProps({ dataSets: yAxisDataSets, maxY: updatedMaxY, yAxisPropDefaults, yAxisTickFormat })\n  };\n};\n\nconst chartHelpers = {\n  ChartTypeVariant,\n  generateAxisProps,\n  generateDomains,\n  generateElementsProps,\n  generateMaxXY,\n  generateTooltipData,\n  generateXAxisProps,\n  generateYAxisProps\n};\n\nexport {\n  chartHelpers as default,\n  chartHelpers,\n  ChartTypeVariant,\n  generateAxisProps,\n  generateDomains,\n  generateElementsProps,\n  generateMaxXY,\n  generateTooltipData,\n  generateXAxisProps,\n  generateYAxisProps\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EyeIcon, EyeSlashIcon, SquareIcon, IconSize } from '@patternfly/react-icons';\n\n/**\n * @memberof Chart\n * @module ChartIcon\n */\n\n/**\n * Emulate pf icon sizing for custom SVGs\n *\n * @param {string} size\n * @returns {string} em measurement\n */\nconst getSize = size => {\n  if (!Number.isNaN(Number.parseFloat(size))) {\n    return size;\n  }\n\n  switch (size) {\n    case 'md':\n      return '1.5em';\n    case 'lg':\n      return '2em';\n    case 'xl':\n      return '3em';\n    case 'sm':\n    default:\n      return '1em';\n  }\n};\n\n/**\n * Render an icon for use outside of Victory charts.\n *\n * @param {object} props\n * @param {string} props.fill\n * @param {string} props.symbol\n * @param {string} props.size\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\nconst ChartIcon = ({ fill, symbol, size, title, ...props }) => {\n  const svgProps = { ...props };\n  const iconProps = { size, title, ...props };\n  const fontProps = { style: { fontSize: getSize(size) }, title, ...props };\n  const emSvgSize = getSize(size);\n\n  if (title) {\n    svgProps['aria-labelledby'] = title;\n  } else {\n    svgProps['aria-hidden'] = true;\n  }\n\n  if (fill) {\n    iconProps.color = fill;\n    fontProps.style.color = fill;\n  }\n\n  const setIcon = () => {\n    switch (symbol) {\n      case 'dash':\n        return (\n          <span\n            style={{\n              width: emSvgSize,\n              height: `${Number.parseFloat(emSvgSize) / 2}em`\n            }}\n          >\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 38 10\" role=\"img\" {...svgProps}>\n              <rect y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"14\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"28\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n            </svg>\n          </span>\n        );\n      case 'threshold':\n        return (\n          <span style={{ width: `${Number.parseFloat(emSvgSize) * 2}em`, height: emSvgSize }}>\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 18 10\" role=\"img\" {...svgProps}>\n              <line\n                x1={0}\n                y1={(Number.parseFloat(emSvgSize) * 16) / 2}\n                x2={Number.parseFloat(emSvgSize) * 16 * 3}\n                y2={(Number.parseFloat(emSvgSize) * 16) / 2}\n                stroke={fill}\n                strokeWidth={3}\n                strokeDasharray=\"4,3\"\n              />\n            </svg>\n          </span>\n        );\n      case 'eye':\n        return <EyeIcon {...iconProps} />;\n      case 'eyeSlash':\n        return <EyeSlashIcon {...iconProps} />;\n      case 'infinity':\n        return (\n          <span className=\"curiosity-icon__f-infinity\" {...fontProps}>\n            <span aria-hidden>&#x221e;</span>\n          </span>\n        );\n\n      case 'square':\n      default:\n        return <SquareIcon {...iconProps} />;\n    }\n  };\n\n  return <span className={`curiosity-chartarea__icon curiosity-chartarea__icon-${symbol}`}>{setIcon()}</span>;\n};\n\n/**\n * Prop types.\n *\n * @type {{symbol: string, size: string, fill: string, title: string}}\n */\nChartIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOf([...Object.keys(IconSize)]),\n  symbol: PropTypes.oneOf(['dash', 'eye', 'eyeSlash', 'infinity', 'square', 'threshold']),\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{symbol: string, size: string, fill: null, title: null}}\n */\nChartIcon.defaultProps = {\n  fill: null,\n  size: 'sm',\n  symbol: 'square',\n  title: null\n};\n\nexport { ChartIcon as default, ChartIcon };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { useChartContext, useToggleData } from './chartContext';\n\n/**\n * @memberof Chart\n * @module ChartLegend\n */\n\n/**\n * Wrapper for rendering an HTML based legend.\n *\n * @returns {React.ReactNode}\n */\nconst ChartLegend = () => {\n  const { getIsToggled, onHide, onRevert, onToggle } = useToggleData();\n  const { chartSettings = {} } = useChartContext();\n  const { chartLegend, dataSets, padding = {}, xAxisProps = {} } = chartSettings;\n\n  if (!chartLegend) {\n    return null;\n  }\n\n  const legendProps = {\n    datum: { dataSets: _cloneDeep(dataSets) },\n    chart: {\n      hide: onHide,\n      revert: onRevert,\n      toggle: onToggle,\n      isToggled: getIsToggled\n    }\n  };\n\n  return (\n    <div\n      className={`curiosity-chartarea__legend${(xAxisProps?.label && '-axis-label-active') || ''}`}\n      style={{\n        marginLeft: (padding?.left && `${padding.left}px`) || 0,\n        marginRight: (padding?.right && `${padding.right}px`) || 0\n      }}\n    >\n      {(React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n        chartLegend({ ...legendProps })}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n */\nChartLegend.propTypes = {};\n\n/**\n * Default props.\n */\nChartLegend.defaultProps = {};\n\nexport { ChartLegend as default, ChartLegend };\n","import React from 'react';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Chart\n * @module ChartTooltip\n */\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * FixMe: The right graph boundary for tooltips is dependent on Voronoi container padding.\n * A limitation exists where Voronoi containers can only have a single padding setting. This means we use\n * the lowest number value from the \"padding\" setting. The repercussion is the right boundary either has to\n * be the lowest padding value, or equal to the lowest padding from any of the other dimensions, ie. top,\n * bottom, left.\n */\n/**\n * Allow, and return, SVG compatible HTML for in graph tooltip.\n *\n * @param {object} params\n * @param {object} params.chartSettings\n * @param {Function} params.chartContainerRef\n * @param {Function} params.chartTooltipRef\n * @param {number} params.minChartWidth\n * @returns {Function}\n */\nconst chartTooltip = ({\n  chartSettings = {},\n  chartContainerRef = helpers.noop,\n  chartTooltipRef = helpers.noop,\n  minChartWidth = 500\n} = {}) => {\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip x coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getXCoordinate = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return x + padding - tooltipWidth / 2;\n    }\n\n    return x > width / 2 ? x - tooltipWidth + padding : x + padding;\n  };\n\n  /**\n   * Return a tooltip y coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.y\n   * @param {number} params.height\n   * @param {number} params.tooltipHeight\n   * @param {number} params.width\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getYCoordinate = ({ y, height, tooltipHeight, width, padding = 15, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth) {\n      return y > height / 2 ? y - tooltipHeight - padding : y + padding;\n    }\n\n    const updatedMultiplier = height / tooltipHeight / 10;\n    const heightMultiplier = (updatedMultiplier < 0.25 && updatedMultiplier) || 0.25;\n\n    return height * heightMultiplier;\n  };\n\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip tail position CSS class.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const tailPosition = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return 'middle';\n    }\n\n    return x > width / 2 ? 'right' : 'left';\n  };\n\n  return ({ x, y, datum = {} }) => { // eslint-disable-line\n    const { padding = {}, tooltipDataSetLookUp = {} } = chartSettings;\n\n    const containerRef = chartContainerRef();\n    const tooltipRef = chartTooltipRef();\n    const updatedPadding = { bottom: 0, left: 0, right: 0, top: 0, ...padding };\n    const content = tooltipDataSetLookUp?.[datum.x]?.tooltip || '';\n    const containerBounds = containerRef?.current?.querySelector('svg')?.getBoundingClientRect() || {\n      width: 0,\n      height: 0\n    };\n\n    const tooltipBounds = tooltipRef?.current?.getBoundingClientRect() || { width: 0, height: 0 };\n\n    if (content) {\n      const isOutsideGraphBottom = y > containerBounds.height - updatedPadding.bottom;\n      const isOutsideGraphLeft = x < updatedPadding.left;\n      const isOutsideGraphRight = x > containerBounds.width - updatedPadding.right;\n      const isOutsideGraphTop = y < updatedPadding.top;\n      const updatedClassName = `${(tooltipBounds.height <= 0 && 'fadein') || ''}`;\n\n      return (\n        <g>\n          <foreignObject\n            x={getXCoordinate({ x, width: containerBounds.width, tooltipWidth: tooltipBounds.width })}\n            y={getYCoordinate({\n              y,\n              height: containerBounds.height,\n              tooltipHeight: tooltipBounds.height,\n              width: containerBounds.width\n            })}\n            width=\"100%\"\n            height=\"100%\"\n          >\n            <div\n              className={`curiosity-chartarea__tooltip-container ${updatedClassName}`}\n              ref={tooltipRef}\n              style={{\n                display:\n                  ((isOutsideGraphBottom || isOutsideGraphLeft || isOutsideGraphRight || isOutsideGraphTop) &&\n                    'none') ||\n                  'inline-block'\n              }}\n              xmlns=\"http://www.w3.org/1999/xhtml\"\n            >\n              <div\n                className={`curiosity-chartarea__tooltip curiosity-chartarea__tooltip-${tailPosition({\n                  x,\n                  y,\n                  width: containerBounds.width,\n                  tooltipWidth: tooltipBounds.width\n                })}`}\n              >\n                {content}\n              </div>\n            </div>\n          </foreignObject>\n        </g>\n      );\n    }\n\n    return <g />;\n  };\n};\n\nexport { chartTooltip as default, chartTooltip };\n","import { helpers } from '../../common/helpers';\n\n/**\n * A consistent mock event object to enhance PF and testing.\n *\n * @memberof Form\n * @module FormHelpers\n */\n\n/**\n * Create a consistent mock event object modeled on JS behavior.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget: {}, name, checked: *, id: *, persist: Function, value, target: {}}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  let updatedCurrentTarget = currentTarget;\n  if (persistEvent) {\n    persist();\n  }\n\n  if (helpers.TEST_MODE) {\n    updatedCurrentTarget = target;\n  }\n\n  return {\n    checked: checked ?? updatedCurrentTarget?.checked,\n    currentTarget: updatedCurrentTarget,\n    keyCode,\n    id: updatedCurrentTarget.id || updatedCurrentTarget.name,\n    name: updatedCurrentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useShallowCompareEffect } from 'react-use';\nimport {\n  ButtonVariant as PfButtonVariant,\n  Dropdown,\n  DropdownDirection,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n  DropdownToggleAction,\n  DropdownToggleCheckbox,\n  Select as PfSelect,\n  SelectOption as PfSelectOption,\n  SelectVariant\n} from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _findIndex from 'lodash/findIndex';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _memoize from 'lodash/memoize';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A bundled wrapper for PF Select, Dropdown.\n *\n * @memberof Form\n * @module Select\n */\n\n/**\n * Dropdown split button variants\n *\n * @type {{action: string, checkbox: string}}\n */\nconst SplitButtonVariant = {\n  action: 'action',\n  checkbox: 'checkbox'\n};\n\n/**\n * Dropdown toggle button variants\n *\n * @type {{secondary: string, default: string, plain: string, text: string, primary: string}}\n */\nconst ButtonVariant = PfButtonVariant;\n\n/**\n * Pass button variant as a select component option.\n *\n * @type {{secondary: string, default: string, plain: string, text: string, primary: string}}\n */\nconst SelectButtonVariant = ButtonVariant;\n\n/**\n * Pass direction as select component variant option.\n *\n * @type {{down: string, up: string}}\n */\nconst SelectDirection = DropdownDirection;\n\n/**\n * Pass position as select component variant option.\n *\n * @type {{left: string, right: string}}\n */\nconst SelectPosition = DropdownPosition;\n\n/**\n * FixMe: attributes on PF select and dropdown components do not allow data- attributes being passed\n * FixMe: PF dropdown, select attempt to break the ref attribute?\n * Moving from a class to func wrapper exposes a PF \"special props warning\", https://bit.ly/2n0hzWo\n */\n/**\n * Format options into a consumable array of objects.\n * Note: It is understood that for line 83'ish around \"updatedOptions\" we dump all values regardless\n * of whether they are plain objects, or not, into updatedOptions. This has been done for speed only,\n * one less check to perform.\n *\n * @param {object} params\n * @param {*|React.ReactNode} params.selectField\n * @param {object|Array} params.options\n * @param {string|number|Array} params.selectedOptions\n * @param {string} params.variant\n * @param {object} params.props\n * @returns {{options: Array|any, selected: Array}}\n */\nconst formatOptions = ({ selectField = { current: null }, options, selectedOptions, variant, ...props } = {}) => {\n  const { current: domElement = {} } = selectField;\n  const dataAttributes = Object.entries(props).filter(([key]) => /^data-/i.test(key));\n  const updatedOptions =\n    (_isPlainObject(options) && Object.entries(options).map(([key, value]) => ({ ...value, title: key, value }))) ||\n    (options && _cloneDeep(options)) ||\n    [];\n  const isSelectedOptionsStringNumber = typeof selectedOptions === 'string' || typeof selectedOptions === 'number';\n  const activateOptions =\n    (Array.isArray(selectedOptions) && selectedOptions) || (isSelectedOptionsStringNumber && [selectedOptions]) || [];\n\n  updatedOptions.forEach((option, index) => {\n    let convertedOption = option;\n\n    if (typeof convertedOption === 'string') {\n      convertedOption = {\n        title: option,\n        value: option\n      };\n\n      updatedOptions[index] = convertedOption;\n    } else if (typeof convertedOption.title === 'function') {\n      convertedOption.title = convertedOption.title();\n    }\n\n    convertedOption.text = convertedOption.text || convertedOption.title;\n    convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n    convertedOption.label = convertedOption.label || convertedOption.title;\n\n    if (activateOptions.length) {\n      let isSelected;\n\n      if (_isPlainObject(convertedOption.value)) {\n        isSelected = _findIndex(activateOptions, convertedOption.value) > -1;\n\n        if (!isSelected) {\n          const tempSearch = activateOptions.find(activeOption =>\n            Object.values(convertedOption.value).includes(activeOption)\n          );\n          isSelected = !!tempSearch;\n        }\n      } else {\n        isSelected = activateOptions.includes(convertedOption.value);\n      }\n\n      if (!isSelected) {\n        isSelected = activateOptions.includes(convertedOption.title);\n      }\n\n      updatedOptions[index].selected = isSelected;\n    }\n  });\n\n  let updateSelected;\n\n  if (variant === SelectVariant.single) {\n    updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n  } else {\n    updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n  }\n\n  if (domElement?.firstChild) {\n    dataAttributes.forEach(([key, value]) => domElement?.firstChild.setAttribute(key, value));\n  }\n\n  return {\n    options: updatedOptions,\n    selected: updateSelected\n  };\n};\n\n/**\n * Return assumed/expected PF select props.\n *\n * @param {object} params\n * @param {boolean} params.isDisabled\n * @param {string} params.placeholder\n * @param {object|Array} params.options\n * @returns {{}}\n */\nconst formatSelectProps = _memoize(({ isDisabled, placeholder, options } = {}) => {\n  const updatedProps = {};\n\n  if (!options || !options.length || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n\n  if (typeof placeholder === 'string' && placeholder) {\n    updatedProps.hasPlaceholderStyle = true;\n  }\n\n  return updatedProps;\n});\n\n/**\n * Format consistent dropdown button props.\n *\n * @param {object} params\n * @param {boolean} params.isDisabled\n * @param {Array} params.options\n * @param {string} params.buttonVariant\n * @param {Function} params.onSplitButton\n * @param {string} params.splitButtonCopy\n * @param {string} params.splitButtonVariant\n * @returns {*}\n */\nconst formatButtonProps = _memoize(\n  ({ isDisabled, options, buttonVariant, onSplitButton, splitButtonCopy, splitButtonVariant } = {}) => {\n    const buttonVariantPropLookup = {\n      default: { toggleVariant: 'default' },\n      plain: { isPlain: true, toggleIndicator: null },\n      primary: { toggleVariant: 'primary' },\n      secondary: { toggleVariant: 'secondary' },\n      text: { isText: true }\n    };\n\n    const splitButtonVariantPropLookup = {\n      action: {\n        splitButtonVariant: 'action',\n        splitButtonItems: [\n          <DropdownToggleAction onClick={onSplitButton} key=\"toggle-action\">\n            {splitButtonCopy}\n          </DropdownToggleAction>\n        ]\n      },\n      checkbox: {\n        splitButtonVariant: 'checkbox',\n        splitButtonItems: [\n          <DropdownToggleCheckbox\n            id={`toggle-action-${splitButtonCopy}`}\n            key=\"toggle-action\"\n            onClick={onSplitButton}\n            aria-label={splitButtonCopy}\n            placeholder={splitButtonCopy}\n          />\n        ]\n      }\n    };\n\n    const updatedProps = {\n      ...buttonVariantPropLookup[buttonVariant],\n      ...splitButtonVariantPropLookup[splitButtonVariant]\n    };\n\n    if (!options || !options.length || isDisabled) {\n      updatedProps.isDisabled = true;\n    }\n\n    return updatedProps;\n  }\n);\n\n/**\n * FixMe: PF has an inconsistency in how it applies props for the dropdown\n * Sometimes those props are on the toggle, sometimes those props are on the parent, little bit of guesswork.\n * Additionally, it's not filtering props so you'll throw the \"[HTML doesn't recognize attribute]\" error.\n */\n/**\n * Fix pf props inconsistency for dropdown button props.\n *\n * @param {object} formattedButtonProps\n * @returns {*}\n */\nconst formatButtonParentProps = (formattedButtonProps = {}) => {\n  const updatedButtonProps = formatButtonProps(formattedButtonProps);\n  delete updatedButtonProps.isDisabled;\n  delete updatedButtonProps.toggleIndicator;\n\n  return updatedButtonProps;\n};\n\n/**\n * A wrapper for Pf Select, and emulator for Pf Dropdown. Provides consistent restructured event data for onSelect callback\n * for both select and dropdown.\n *\n * @fires onDropdownSelect\n * @fires onSplitButton\n * @fires onToggle\n * @param {object} props\n * @param {string} props.ariaLabel\n * @param {string} props.buttonVariant\n * @param {string} props.className\n * @param {string} props.direction\n * @param {string} props.id\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isDropdownButton\n * @param {boolean} props.isFlipEnabled\n * @param {boolean} props.isInline\n * @param {boolean} props.isToggleText\n * @param {number} props.maxHeight\n * @param {string} props.name\n * @param {Function} props.onSelect\n * @param {Function} props.onSplitButton\n * @param {object|Array} props.options\n * @param {string} props.placeholder\n * @param {string} props.position\n * @param {number|string|Array} props.selectedOptions\n * @param {string} props.splitButtonVariant\n * @param {React.ReactNode|Function} props.toggleIcon\n * @param {string} props.variant\n * @param {object} props.props\n * @returns {React.ReactNode}\n */\nconst Select = ({\n  ariaLabel,\n  buttonVariant,\n  className,\n  direction,\n  id,\n  isDisabled,\n  isDropdownButton,\n  isFlipEnabled,\n  isInline,\n  isToggleText,\n  maxHeight,\n  name,\n  onSelect,\n  onSplitButton,\n  options: baseOptions,\n  placeholder,\n  position,\n  selectedOptions,\n  splitButtonVariant,\n  toggleIcon,\n  variant,\n  ...props\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [options, setOptions] = useState(baseOptions);\n  const [selected, setSelected] = useState([]);\n  const selectField = useRef();\n\n  useShallowCompareEffect(() => {\n    const { options: updatedOptions, selected: updatedSelected } = formatOptions({\n      selectField,\n      options: baseOptions,\n      selectedOptions,\n      variant,\n      ...props\n    });\n\n    setOptions(updatedOptions);\n    setSelected(updatedSelected);\n  }, [baseOptions, props, selectField, selectedOptions, variant]);\n\n  /**\n   * Open/closed state.\n   *\n   * @event onToggle\n   * @param {boolean} expanded\n   */\n  const onToggle = expanded => {\n    setIsExpanded(expanded);\n  };\n\n  /**\n   * Split button event handler.\n   *\n   * @event onSplitButton\n   * @param {object} event\n   */\n  const onUpdatedSplitButton = event => {\n    const updatedOptions = _cloneDeep(options);\n    onSplitButton({ ...createMockEvent(event), options: updatedOptions }, -1, updatedOptions);\n  };\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onDropdownSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  const onDropdownSelect = (event, titleSelection) => {\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(\n      option =>\n        (titleSelection && option.title === titleSelection) ||\n        event.currentTarget.querySelector('[data-title]')?.getAttribute('data-title') === option.title ||\n        event.currentTarget.innerText === option.title\n    );\n\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n    const mockTarget = {\n      id,\n      name: name || id,\n      value: mockUpdatedOptions[optionsIndex].value,\n      selected: (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n      selectedIndex: optionsIndex,\n      type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n      options: mockUpdatedOptions\n    };\n\n    if (variant === SelectVariant.checkbox) {\n      mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n    }\n\n    const mockEvent = {\n      ...mockTarget,\n      target: { ...mockTarget },\n      currentTarget: { ...mockTarget },\n      persist: helpers.noop\n    };\n\n    setOptions(updatedOptions);\n    setSelected(updateSelected);\n\n    onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n    if (variant === SelectVariant.single) {\n      setIsExpanded(false);\n    }\n  };\n\n  /**\n   * Apply dropdown.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderDropdownButton = () => (\n    <Dropdown\n      direction={direction}\n      isFlipEnabled={isFlipEnabled}\n      isOpen={isExpanded}\n      position={position}\n      toggle={\n        <DropdownToggle\n          onToggle={onToggle}\n          {...formatButtonProps({\n            isDisabled,\n            onSplitButton: onUpdatedSplitButton,\n            options,\n            buttonVariant,\n            splitButtonCopy: placeholder || ariaLabel,\n            splitButtonVariant\n          })}\n        >\n          {(!splitButtonVariant && placeholder) || (!SplitButtonVariant && ariaLabel)}\n        </DropdownToggle>\n      }\n      dropdownItems={\n        options?.map(option => (\n          <DropdownItem\n            onClick={onDropdownSelect}\n            key={window.btoa(`${option.title}-${option.value}`)}\n            id={window.btoa(`${option.title}-${option.value}`)}\n            data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n            data-title={option.title}\n            data-description={option.description}\n            description={option.description}\n          >\n            {option.title}\n          </DropdownItem>\n        )) || []\n      }\n      {...formatButtonParentProps({ buttonVariant })}\n      {...props}\n    />\n  );\n\n  /**\n   * Apply select.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderSelect = () => (\n    <PfSelect\n      className={`curiosity-select-pf${(!isToggleText && '__no-toggle-text') || ''} ${\n        (direction === SelectDirection.down && 'curiosity-select-pf__position-down') || ''\n      } ${(position === SelectPosition.right && 'curiosity-select-pf__position-right') || ''} ${className}`}\n      variant={variant}\n      aria-label={ariaLabel}\n      onToggle={onToggle}\n      onSelect={onDropdownSelect}\n      selections={selected}\n      isFlipEnabled={isFlipEnabled}\n      isOpen={isExpanded}\n      toggleIcon={toggleIcon}\n      placeholderText={(typeof placeholder === 'string' && placeholder) || undefined}\n      {...{\n        direction,\n        maxHeight,\n        ...formatSelectProps({\n          isDisabled,\n          options: baseOptions,\n          placeholder\n        })\n      }}\n      {...props}\n    >\n      {options?.map(option => (\n        <PfSelectOption\n          key={window.btoa(`${option.title}-${option.value}`)}\n          id={window.btoa(`${option.title}-${option.value}`)}\n          value={option.title}\n          data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n          data-title={option.title}\n          data-description={option.description}\n        />\n      )) || []}\n    </PfSelect>\n  );\n\n  return (\n    <div\n      ref={selectField}\n      className={`curiosity-select${(isInline && ' curiosity-select__inline') || ' curiosity-select__not-inline'}`}\n    >\n      {(isDropdownButton && renderDropdownButton()) || renderSelect()}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{isFlipEnabled: boolean, toggleIcon: (React.ReactNode|Function), className: string, onSplitButton: Function, ariaLabel: string,\n *     onSelect: Function, isToggleText: boolean, isDropdownButton: boolean, maxHeight: number, buttonVariant: string, name: string,\n *     options: Array|object, selectedOptions: Array|number|string, variant: string, isInline: boolean, id: string, isDisabled: boolean,\n *     placeholder: string, position: string, splitButtonVariant: string, direction: string}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  buttonVariant: PropTypes.oneOf(Object.values(ButtonVariant)),\n  className: PropTypes.string,\n  direction: PropTypes.oneOf(Object.values(SelectDirection)),\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isDropdownButton: PropTypes.bool,\n  isFlipEnabled: PropTypes.bool,\n  isInline: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  maxHeight: PropTypes.number,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  onSplitButton: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        description: PropTypes.any,\n        selected: PropTypes.bool,\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired\n      })\n    ),\n    PropTypes.shape({\n      description: PropTypes.any,\n      selected: PropTypes.bool,\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.any]),\n  position: PropTypes.oneOf(Object.values(SelectPosition)),\n  selectedOptions: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]))\n  ]),\n  splitButtonVariant: PropTypes.oneOf(Object.values(SplitButtonVariant)),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{isFlipEnabled: boolean, toggleIcon: null, className: string, onSplitButton: Function, ariaLabel: string, onSelect: Function,\n *     isToggleText: boolean, isDropdownButton: boolean, maxHeight: null, buttonVariant: string, name: null, options: Array,\n *     selectedOptions: null, variant: SelectVariant.single, isInline: boolean, id: string, isDisabled: boolean, placeholder: string,\n *     position: string, splitButtonVariant: null, direction: string}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  buttonVariant: ButtonVariant.default,\n  className: '',\n  direction: SelectDirection.down,\n  id: helpers.generateId(),\n  isDisabled: false,\n  isDropdownButton: false,\n  isFlipEnabled: false,\n  isInline: true,\n  isToggleText: true,\n  maxHeight: null,\n  name: null,\n  onSelect: helpers.noop,\n  onSplitButton: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  position: SelectPosition.left,\n  selectedOptions: null,\n  splitButtonVariant: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport {\n  Select as default,\n  Select,\n  ButtonVariant,\n  formatOptions,\n  formatButtonProps,\n  formatSelectProps,\n  SelectDirection,\n  SelectPosition,\n  SelectVariant,\n  SelectButtonVariant,\n  SplitButtonVariant\n};\n","import moment from 'moment';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { ChartTypeVariant } from '../chart/chart';\nimport {\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * @memberof GraphCard\n * @module GraphCardHelpers\n */\n\n/**\n * Generate a consistent chart identifier from API.\n *\n * @param {object} params\n * @param {boolean} params.isCapacity\n * @param {string} params.metric\n * @param {string} params.productId\n * @param {object} params.query\n * @returns {string}\n */\nconst generateChartIds = ({ isCapacity, metric, productId, query = {} } = {}) => {\n  const metricCategory = query?.[RHSM_API_QUERY_SET_TYPES.CATEGORY] || undefined;\n  const billingCategory = query?.[RHSM_API_QUERY_SET_TYPES.BILLING_CATEGORY] || undefined;\n  return `${(isCapacity && 'threshold_') || ''}${metric}${(billingCategory && `_${billingCategory}`) || ''}${\n    (metricCategory && `_${metricCategory}`) || ''\n  }${(productId && `_${productId}`) || ''}`;\n};\n\n/**\n * Is metric associated with a toolbar filter\n *\n * @param {object} params\n * @param {object} params.query\n * @returns {boolean}\n */\nconst generateIsToolbarFilter = ({ query = {} } = {}) => (query?.[RHSM_API_QUERY_SET_TYPES.CATEGORY] && true) || false;\n\n/**\n * ToDo: clean up remaining isStandalone, metric props.\n * These two properties were used to distinguish the previous product config graph card\n * layouts.\n * - isStandalone: undefined,\n * - metric: undefined,\n */\n/**\n * Update chart/graph filters with core settings and styling.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.settings\n * @param {string} params.productId\n * @returns {{standaloneFilters: Array, groupedFilters: object}}\n */\nconst generateChartSettings = ({ filters = [], settings: graphCardSettings = {}, productId } = {}) => {\n  const filtersSettings = [];\n  const filter = ({ metric, settings: combinedSettings, ...filterSettings } = {}) => {\n    if (!metric) {\n      return;\n    }\n    const { isMultiMetric, isFirst, isLast, ...remainingCombinedSettings } = combinedSettings;\n    const updatedChartType = filterSettings?.chartType || ChartTypeVariant.area;\n    const isThreshold = filterSettings?.chartType === ChartTypeVariant.threshold;\n    const isAxisLabel =\n      remainingCombinedSettings?.yAxisChartLabel ||\n      remainingCombinedSettings?.xAxisChartLabel ||\n      filterSettings?.yAxisChartLabel ||\n      filterSettings?.xAxisChartLabel;\n    const baseFilterSettings = {\n      chartType: updatedChartType,\n      id: generateChartIds({ isCapacity: isThreshold, metric, productId, query: filterSettings?.query }),\n      isStacked: !isThreshold,\n      isThreshold,\n      isCapacity: isThreshold,\n      metric,\n      strokeWidth: 2,\n      isToolbarFilter: generateIsToolbarFilter({ query: filterSettings?.query })\n    };\n\n    if (isThreshold) {\n      baseFilterSettings.stroke = chartColorGreenDark.value;\n      baseFilterSettings.strokeDasharray = '4,3';\n      baseFilterSettings.strokeWidth = 3;\n    }\n\n    if (isFirst) {\n      filtersSettings.push({\n        settings: {\n          ...(isAxisLabel && {\n            padding: {\n              bottom: 75,\n              left: 75,\n              right: 45,\n              top: 45\n            }\n          }),\n          ...remainingCombinedSettings,\n          isMetricDisplay: remainingCombinedSettings?.isMetricDisplay ?? remainingCombinedSettings?.cards?.length > 0,\n          isMultiMetric,\n          isStandalone: undefined,\n          metric: undefined,\n          groupMetric: new Set([metric]),\n          metrics: [\n            {\n              ...baseFilterSettings,\n              ...filterSettings\n            }\n          ],\n          productId,\n          stringId: baseFilterSettings.id\n        }\n      });\n    } else {\n      const currentLastFiltersSettingsEntry = filtersSettings?.[filtersSettings.length - 1]?.settings;\n\n      if (currentLastFiltersSettingsEntry) {\n        currentLastFiltersSettingsEntry.groupMetric.add(metric);\n        currentLastFiltersSettingsEntry.metrics.push({\n          ...baseFilterSettings,\n          ...filterSettings\n        });\n      }\n    }\n\n    if (isLast) {\n      const lastFiltersSettingsEntry = filtersSettings?.[filtersSettings.length - 1]?.settings;\n      lastFiltersSettingsEntry.groupMetric = Array.from(lastFiltersSettingsEntry?.groupMetric).sort();\n\n      if (lastFiltersSettingsEntry.isMultiMetric) {\n        lastFiltersSettingsEntry.stringId = `${lastFiltersSettingsEntry.groupMetric.join('_')}_${\n          lastFiltersSettingsEntry.productId\n        }`;\n      }\n    }\n  };\n\n  filters.forEach(({ filters: groupedMetrics, settings: groupedMetricsSettings, ...remainingSettings }) => {\n    if (Array.isArray(groupedMetrics)) {\n      groupedMetrics.forEach((metricFilter, index) => {\n        filter({\n          ...remainingSettings,\n          ...metricFilter,\n          settings: {\n            ...graphCardSettings,\n            ...remainingSettings,\n            ...groupedMetricsSettings,\n            ...metricFilter,\n            isFirst: index === 0,\n            isLast: groupedMetrics.length - 1 === index,\n            isMultiMetric: groupedMetrics.length > 1\n          }\n        });\n      });\n      return;\n    }\n\n    filter({\n      ...remainingSettings,\n      settings: {\n        ...graphCardSettings,\n        ...remainingSettings,\n        isFirst: true,\n        isLast: true,\n        isMultiMetric: false\n      }\n    });\n  });\n\n  return {\n    filtersSettings\n  };\n};\n\n/**\n * Returns x-axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity } = {}) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x-axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ callback, date, granularity, tick, previousDate } = {}) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  if (callback) {\n    return callback({ callback, date, granularity, tick, previousDate });\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y-axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ callback, tick } = {}) => {\n  if (callback) {\n    return callback({ tick });\n  }\n\n  return helpers\n    .numberDisplay(tick)\n    ?.format({\n      average: true,\n      mantissa: 1,\n      trimMantissa: true,\n      lowPrecision: false\n    })\n    ?.toUpperCase();\n};\n\n/**\n * Generate base chart component props.\n *\n * @param {object} params\n * @param {object} params.settings\n * @param {string} params.granularity\n * @returns {object}\n */\nconst generateExtendedChartSettings = ({ settings, granularity } = {}) => ({\n  ...settings,\n  xAxisLabelIncrement: settings?.xAxisLabelIncrement ?? getChartXAxisLabelIncrement(granularity),\n  xAxisTickFormat: ({ item, previousItem, tick }) =>\n    xAxisTickFormat({\n      callback: settings?.xAxisTickFormat,\n      tick,\n      date: item.date,\n      previousDate: previousItem.date,\n      granularity\n    }),\n  yAxisTickFormat: ({ tick }) =>\n    yAxisTickFormat({\n      callback: settings?.yAxisTickFormat,\n      tick\n    })\n});\n\n/**\n * Get either the current or last date available data.\n *\n * @param {object} params\n * @param {Array} params.data\n * @param {boolean} params.isCurrent\n * @returns {{date: string, hasData: boolean, value: number}}\n */\nconst getMetricTotalCurrentOrLastData = helpers.memo(\n  ({ data, isCurrent = false } = {}) => {\n    const {\n      date: currentDate,\n      hasData: currentHasData,\n      y: currentValue\n    } = data.find(({ isCurrentDate }) => isCurrentDate === true) || {};\n    const { date: lastDate, hasData: lastHasData, y: lastValue } = data[data.length - 1] || {};\n\n    const date = isCurrent ? currentDate : lastDate;\n    const hasData = isCurrent ? currentHasData : lastHasData;\n    const value = isCurrent ? currentValue : lastValue;\n\n    return {\n      date,\n      hasData,\n      value\n    };\n  },\n  { cacheLimit: 3 }\n);\n\n/**\n * Get daily and monthly totals from a data set. A metric totals helper.\n *\n * @param {object} params\n * @param {object} params.dataSet\n * @param {boolean} params.isCurrent Is the current value the \"current month\". A proxy value passed through \"graphCardMetricTotals\"\n * @returns {{chartId: string, metricId: string, monthlyHasData: boolean, dailyValue: number, dailyDate: string,\n *     monthlyValue: number, monthlyDate: string, dailyHasData: boolean}}\n */\nconst getDailyMonthlyTotals = helpers.memo(\n  ({ dataSet, isCurrent = false } = {}) => {\n    const { data = [], meta = {} } = dataSet || {};\n    const {\n      totalMonthlyDate: monthlyDate,\n      totalMonthlyHasData: monthlyHasData,\n      totalMonthlyValue: monthlyValue\n    } = meta;\n\n    const {\n      date: dailyDate,\n      hasData: dailyHasData,\n      value: dailyValue\n    } = getMetricTotalCurrentOrLastData({ data, isCurrent });\n\n    return {\n      dailyDate,\n      dailyHasData,\n      dailyValue,\n      monthlyDate,\n      monthlyHasData,\n      monthlyValue\n    };\n  },\n  { cacheLimit: 3 }\n);\n\n/**\n * Get the first available prepaid Tally, Capacity data sets\n *\n * @param {object} params\n * @param {Array} params.data\n * @returns {{capacityData: object, tallyData: object}}\n */\nconst getPrepaidTallyCapacity = helpers.memo(\n  ({ data = [] } = {}) => ({\n    capacityData: data.find(({ chartType }) => new RegExp(ChartTypeVariant.threshold, 'i').test(chartType))?.data,\n    tallyData: data.find(({ id }) => new RegExp(CATEGORY_TYPES.PREPAID, 'i').test(id))?.data\n  }),\n  { cacheLimit: 3 }\n);\n\n/**\n * Get a remaining capacity from data sets. A metric totals helper.\n *\n * @param {object} params\n * @param {Array} params.capacityData\n * @param {Array} params.tallyData\n * @param {boolean} params.isCurrent Is the current value the \"current month\". A proxy value passed through \"graphCardMetricTotals\"\n * @returns {{remainingCapacityHasData: boolean, remainingCapacity: number}}\n */\nconst getRemainingCapacity = helpers.memo(\n  ({ capacityData = [], tallyData = [], isCurrent = false } = {}) => {\n    const { hasData: capacityHasData, value: capacityValue } = getMetricTotalCurrentOrLastData({\n      data: capacityData,\n      isCurrent\n    });\n    const { hasData: tallyHasData, value: tallyValue } = getMetricTotalCurrentOrLastData({\n      data: tallyData,\n      isCurrent\n    });\n    const response = {\n      remainingCapacityHasData: capacityHasData && tallyHasData,\n      remainingCapacity: null\n    };\n\n    if (response.remainingCapacityHasData) {\n      response.remainingCapacity = Number.parseInt(capacityValue, 10) - Number.parseInt(tallyValue, 10) || 0;\n\n      if (!(response.remainingCapacity >= 0)) {\n        response.remainingCapacity = 0;\n      }\n    }\n\n    return response;\n  },\n  { cacheLimit: 3 }\n);\n\n/**\n * Get a remaining overage from data sets. A metric totals helper.\n *\n * @param {object} params\n * @param {Array} params.capacityData\n * @param {Array} params.tallyData\n * @param {boolean} params.isCurrent Is the current value the \"current month\". A proxy value passed through \"graphCardMetricTotals\"\n * @returns {{remainingOverage: number, remainingOverageHasData: boolean}}\n */\nconst getRemainingOverage = helpers.memo(\n  ({ capacityData = [], tallyData = [], isCurrent = false } = {}) => {\n    const { hasData: capacityHasData, value: capacityValue } = getMetricTotalCurrentOrLastData({\n      data: capacityData,\n      isCurrent\n    });\n    const { hasData: tallyHasData, value: tallyValue } = getMetricTotalCurrentOrLastData({\n      data: tallyData,\n      isCurrent\n    });\n    const response = {\n      remainingOverageHasData: capacityHasData && tallyHasData,\n      remainingOverage: null\n    };\n\n    if (response.remainingOverageHasData) {\n      response.remainingOverage = Number.parseInt(tallyValue, 10) - Number.parseInt(capacityValue, 10) || 0;\n\n      if (!(response.remainingOverage >= 0)) {\n        response.remainingOverage = 0;\n      }\n    }\n\n    return response;\n  },\n  { cacheLimit: 3 }\n);\n\nconst graphCardHelpers = {\n  generateChartIds,\n  generateChartSettings,\n  generateExtendedChartSettings,\n  generateIsToolbarFilter,\n  getChartXAxisLabelIncrement,\n  getDailyMonthlyTotals,\n  getMetricTotalCurrentOrLastData,\n  getPrepaidTallyCapacity,\n  getRemainingCapacity,\n  getRemainingOverage,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  generateChartIds,\n  generateChartSettings,\n  generateExtendedChartSettings,\n  generateIsToolbarFilter,\n  getChartXAxisLabelIncrement,\n  getDailyMonthlyTotals,\n  getMetricTotalCurrentOrLastData,\n  getPrepaidTallyCapacity,\n  getRemainingCapacity,\n  getRemainingOverage,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\nimport { useMount } from 'react-use';\nimport { helpers } from '../../common/helpers';\nimport { EMPTY_CONTEXT, translate, translateComponent } from './i18nHelpers';\n\n/**\n * Populate, load, remote locale strings.\n *\n * @memberof Components\n * @module i18n\n * @property {module} i18nHelpers\n */\n\n/**\n * Load I18n.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.fallbackLng\n * @param {string} props.loadPath\n * @param {string} props.locale\n * @returns {React.ReactNode}\n */\nconst I18n = ({ children, fallbackLng, loadPath, locale }) => {\n  const [initialized, setInitialized] = useState(false);\n\n  /**\n   * Initialize i18next\n   */\n  useMount(async () => {\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: undefined,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      //\n    }\n\n    setInitialized(true);\n  });\n\n  /**\n   * Update locale.\n   */\n  useEffect(() => {\n    if (initialized && locale) {\n      try {\n        i18next.changeLanguage(locale);\n      } catch (e) {\n        //\n      }\n    }\n  }, [initialized, locale]);\n\n  // eslint-disable-next-line react/jsx-no-useless-fragment\n  return (initialized && children) || <React.Fragment />;\n};\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: React.ReactNode, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent, EMPTY_CONTEXT };\n","import React from 'react';\nimport i18next from 'i18next';\nimport { Trans } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\n/**\n * @memberof i18n\n * @module i18nHelpers\n */\n\n/**\n * Check to help provide an empty context.\n *\n * @type {string}\n */\nconst EMPTY_CONTEXT = 'LOCALE_EMPTY_CONTEXT';\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string|Array} key\n * @param {string|object|Array} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) => {\n  const updatedKey = (Array.isArray(key) && `[${key}]`) || key;\n  const updatedValue =\n    (typeof value === 'string' && value) ||\n    (Array.isArray(value) && `[${value}]`) ||\n    (Object.keys(value || '').length && JSON.stringify(value)) ||\n    '';\n  const updatedComponents = (components && `${components}`) || '';\n\n  return `t(${updatedKey}${(updatedValue && `, ${updatedValue}`) || ''}${\n    (updatedComponents && `, ${updatedComponents}`) || ''\n  })`;\n};\n\n/**\n * Split a string on underscore.\n *\n * @param {string} value\n * @param {object} settings\n * @param {string} settings.emptyContextValue\n * @returns {string|string[]}\n */\nconst splitContext = (value, { emptyContextValue = EMPTY_CONTEXT } = {}) => {\n  if (typeof value === 'string' && value !== emptyContextValue && /_/.test(value)) {\n    return value.split('_');\n  }\n  return value;\n};\n\n/**\n * Parse extend context arrays/lists, and apply values to a concatenated translate key.\n *\n * @param {string|Array} translateKey\n * @param {*|string|Array} context\n * @param {object} settings\n * @param {string} settings.emptyContextValue\n * @param {Function} settings.splitContext\n * @returns {{translateKey: string, context: (string|string[])}}\n */\nconst parseContext = (\n  translateKey,\n  context,\n  { emptyContextValue = EMPTY_CONTEXT, splitContext: aliasSplitContext = splitContext } = {}\n) => {\n  let updatedTranslateKey = translateKey;\n  let updatedContext = context;\n\n  if (updatedContext) {\n    updatedContext = aliasSplitContext(updatedContext);\n  }\n\n  if (Array.isArray(updatedContext)) {\n    const tempContext = updatedContext\n      .map(value => (value === emptyContextValue && ' ') || aliasSplitContext(value))\n      .flat()\n      .filter(value => typeof value === 'string' && value.length > 0);\n\n    if (tempContext?.length > 1) {\n      const lastContext = tempContext.pop();\n\n      if (Array.isArray(updatedTranslateKey)) {\n        updatedTranslateKey[0] = `${updatedTranslateKey[0]}_${tempContext.join('_')}`;\n      } else {\n        updatedTranslateKey = `${updatedTranslateKey}_${tempContext.join('_')}`;\n      }\n\n      updatedContext = lastContext;\n    } else {\n      updatedContext = tempContext.join('_');\n    }\n  } else if (updatedContext === emptyContextValue) {\n    updatedContext = ' ';\n  }\n\n  return {\n    context: updatedContext,\n    translateKey: updatedTranslateKey\n  };\n};\n\n/**\n * Parse a translation key. If an array, filter for defined strings.\n *\n * @param {*|string|Array} translateKey\n * @returns {*}\n */\nconst parseTranslateKey = translateKey => {\n  let updatedTranslateKey = translateKey;\n\n  if (Array.isArray(updatedTranslateKey)) {\n    updatedTranslateKey = updatedTranslateKey.filter(value => typeof value === 'string' && value.length > 0);\n  }\n\n  return updatedTranslateKey;\n};\n\n/**\n * Return a test element wrapper;\n *\n * @param {object} params\n * @param {string|Array} params.defaultTestId\n * @param {string} params.testId\n * @returns {null|React.ReactNode}\n */\nconst setI18nTestElement = ({ defaultTestId, testId }) => {\n  if (typeof testId === 'boolean' && defaultTestId) {\n    const updatedDataTest = (Array.isArray(defaultTestId) && defaultTestId[0]) || defaultTestId;\n    // eslint-disable-next-line\n    return function TestElementBool({ children }) {\n      return (\n        <span key={updatedDataTest} className=\"curiosity-translate__test-id\" data-test={updatedDataTest}>\n          {children}\n        </span>\n      );\n    };\n  }\n\n  if (typeof testId === 'string' && testId.length > 0) {\n    // eslint-disable-next-line\n    return function TestElementString({ children }) {\n      return (\n        <span key={testId} className=\"curiosity-translate__test-id\" data-test={testId}>\n          {children}\n        </span>\n      );\n    };\n  }\n\n  if (React.isValidElement(testId)) {\n    // eslint-disable-next-line\n    return function TestElementNode({ children }) {\n      return React.cloneElement(testId, {}, children);\n    };\n  }\n\n  return null;\n};\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string|Array} translateKey A key reference, or an array of a primary key with fallback keys.\n * @param {string|object|Array} values\n *     - A default string if the key can't be found.\n *     - An object with i18next settings. i.e. \"{ context: Array|string, testId: boolean|string|React.ReactNode }\"\n *     - An array of objects (key/value) pairs used to replace string tokens. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @param {object} settings\n * @param {*} settings.i18next\n * @param {Function} settings.isDebug\n * @param {Function} settings.noopTranslate\n * @param {Function} settings.parseContext\n * @param {Function} settings.parseTranslateKey\n * @returns {string|React.ReactNode}\n */\nconst translate = (\n  translateKey,\n  values = null,\n  components,\n  {\n    i18next: aliasI18next = i18next,\n    isDebug = helpers.TEST_MODE,\n    noopTranslate: aliasNoopTranslate = noopTranslate,\n    parseContext: aliasParseContext = parseContext,\n    parseTranslateKey: aliasParseTranslateKey = parseTranslateKey\n  } = {}\n) => {\n  const updatedValues = values || {};\n  const baseUpdatedTranslateKey = aliasParseTranslateKey(translateKey);\n  let updatedTranslateKey = baseUpdatedTranslateKey;\n  let TestElement;\n\n  if (updatedValues?.context) {\n    const { context: parsedContext, translateKey: parsedAgainTranslateKey } = aliasParseContext(\n      updatedTranslateKey,\n      updatedValues.context\n    );\n    updatedTranslateKey = parsedAgainTranslateKey;\n    updatedValues.context = parsedContext;\n  }\n\n  if (isDebug) {\n    return aliasNoopTranslate(updatedTranslateKey, updatedValues, components);\n  }\n\n  if (updatedValues?.testId) {\n    TestElement = setI18nTestElement({ defaultTestId: baseUpdatedTranslateKey, testId: updatedValues.testId });\n  }\n\n  if (components && aliasI18next.store) {\n    if (TestElement) {\n      return (\n        <TestElement>\n          <Trans i18nKey={updatedTranslateKey} values={updatedValues} components={components} />\n        </TestElement>\n      );\n    }\n\n    return <Trans i18nKey={updatedTranslateKey} values={updatedValues} components={components} />;\n  }\n\n  if (aliasI18next.store) {\n    if (TestElement) {\n      return <TestElement>{aliasI18next.t(updatedTranslateKey, updatedValues)}</TestElement>;\n    }\n\n    return aliasI18next.t(updatedTranslateKey, updatedValues);\n  }\n\n  return `t([${updatedTranslateKey}])`;\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {React.ReactNode} Component\n * @param {object} settings\n * @param {*} settings.i18next\n * @param {Function} settings.noopTranslate\n * @returns {React.ReactNode}\n */\nconst translateComponent = (\n  Component,\n  { i18next: aliasI18next = i18next, noopTranslate: aliasNoopTranslate = noopTranslate } = {}\n) => {\n  const withTranslation = ({ ...props }) => (\n    <Component\n      {...props}\n      t={(aliasI18next.store && translate) || aliasNoopTranslate}\n      i18n={(aliasI18next.store && aliasI18next) || helpers.noop}\n    />\n  );\n\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\nconst i18nHelpers = {\n  EMPTY_CONTEXT,\n  noopTranslate,\n  parseContext,\n  parseTranslateKey,\n  splitContext,\n  translate,\n  translateComponent\n};\n\nexport {\n  i18nHelpers as default,\n  i18nHelpers,\n  EMPTY_CONTEXT,\n  noopTranslate,\n  parseContext,\n  parseTranslateKey,\n  splitContext,\n  translate,\n  translateComponent\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Loading display for charts, copy, tables, etc.\n *\n * @memberof Components\n * @module Loader\n */\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    colWidth: PropTypes.array,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader, SkeletonSize };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * Page empty state message display.\n *\n * @memberof Components\n * @module MessageView\n */\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view, page empty state.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.ReactNode|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, icon: React.ReactNode|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Brand,\n  Button,\n  Card,\n  CardHeaderMain,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Flex,\n  FlexItem,\n  Form,\n  ActionGroup,\n  Spinner,\n  Title\n} from '@patternfly/react-core';\nimport { useSession } from '../authentication/authenticationContext';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { PageLayout } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport graphPng2x from '../../images/graph2x.png';\nimport graphPng4x from '../../images/graph4x.png';\n\n/**\n * Opt-in view\n *\n * @memberof Components\n * @module OptinView\n */\n\n/**\n * An account opt-in view.\n *\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.updateAccountOptIn\n * @param {Function} props.useDispatch\n * @param {Function} props.useSelectorsResponse\n * @param {Function} props.useSession\n * @fires onSubmitOptIn\n * @returns {React.ReactNode}\n */\nconst OptinView = ({\n  t,\n  updateAccountOptIn,\n  useDispatch: useAliasDispatch,\n  useSelectorsResponse: useAliasSelectorsResponse,\n  useSession: useAliasSession\n}) => {\n  const dispatch = useAliasDispatch();\n  const { errorStatus } = useAliasSession();\n  const { error, fulfilled, pending } = useAliasSelectorsResponse(({ user }) => user?.optin);\n\n  /**\n   * Submit and update account opt-in.\n   *\n   * @event onSubmitOptIn\n   * @returns {void}\n   */\n  const onSubmitOptIn = () => updateAccountOptIn()(dispatch);\n\n  /**\n   * Render opt-in form states.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderOptinForm = () => {\n    const disableButton = errorStatus !== 403;\n\n    if (pending) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              <Spinner size=\"sm\" /> {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n        </Form>\n      );\n    }\n\n    if (error) {\n      return (\n        <p>\n          {t('curiosity-optin.cardIsErrorDescription', { appName: helpers.UI_DISPLAY_NAME }, [\n            <Button isInline component=\"a\" variant=\"link\" target=\"_blank\" href={helpers.UI_LINK_CONTACT_US} />\n          ])}\n        </p>\n      );\n    }\n\n    if (disableButton || fulfilled) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button data-test=\"optinButtonSubmitDisabled\" variant=\"primary\" isDisabled>\n              {t('curiosity-optin.buttonIsActive', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n          {fulfilled && <p>{t('curiosity-optin.cardIsActiveDescription')}</p>}\n        </Form>\n      );\n    }\n\n    return (\n      <Form>\n        <ActionGroup>\n          <Button data-test=\"optinButtonSubmit\" variant=\"primary\" onClick={onSubmitOptIn}>\n            {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n          </Button>\n        </ActionGroup>\n      </Form>\n    );\n  };\n\n  /**\n   * Render tour copy and button.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderTour = () => (\n    <Card className=\"curiosity-optin-tour\">\n      <CardHeader>\n        <CardHeaderMain>\n          <Brand\n            srcSet={`${graphPng4x} 1064w, ${graphPng2x} 600w`}\n            src={graphPng4x}\n            alt={t('curiosity-optin.tourTitleImageAlt')}\n            aria-hidden\n            className=\"curiosity-optin-image\"\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <CardTitle>\n        <Title headingLevel=\"h3\" size=\"2xl\">\n          {t('curiosity-optin.tourTitle')}\n        </Title>\n      </CardTitle>\n      <CardBody>{t('curiosity-optin.tourDescription')}</CardBody>\n      <CardFooter>\n        <Button data-test=\"optinButtonTour\" variant=\"secondary\" className=\"uxui-curiosity__button-tour\">\n          {t('curiosity-optin.buttonTour')}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n\n  return (\n    <PageLayout>\n      <Card data-test=\"optinView\">\n        <Flex>\n          <Flex flex={{ default: 'flex_2' }}>\n            <FlexItem>\n              <CardTitle key=\"heading1Title\">\n                <Title headingLevel=\"h1\" size=\"2xl\">\n                  {t('curiosity-optin.cardTitle', { appName: helpers.UI_DISPLAY_NAME })}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading1Desc\">\n                {t('curiosity-optin.cardDescription', { appName: helpers.UI_DISPLAY_NAME })}\n              </CardBody>\n\n              <CardTitle key=\"heading2Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardSeeTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading2Desc\">{t('curiosity-optin.cardSeeDescription')}</CardBody>\n\n              <CardTitle key=\"heading3Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardReportTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading3Desc\">{t('curiosity-optin.cardReportDescription')}</CardBody>\n\n              <CardTitle key=\"heading4Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardFilterTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading4Desc\">{t('curiosity-optin.cardFilterDescription')}</CardBody>\n\n              <CardFooter>{renderOptinForm()}</CardFooter>\n            </FlexItem>\n          </Flex>\n          <Flex flex={{ default: 'flex_1' }} alignSelf={{ default: 'alignSelfCenter' }}>\n            <FlexItem>\n              <CardBody>{renderTour()}</CardBody>\n            </FlexItem>\n          </Flex>\n        </Flex>\n      </Card>\n    </PageLayout>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useSession: Function, t: Function, updateAccountOptIn: Function, useDispatch: Function, useSelectorsResponse: Function}}\n */\nOptinView.propTypes = {\n  t: PropTypes.func,\n  updateAccountOptIn: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelectorsResponse: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useSession: Function, t: Function, updateAccountOptIn: Function, useDispatch: Function, useSelectorsResponse: Function}}\n */\nOptinView.defaultProps = {\n  t: translate,\n  updateAccountOptIn: reduxActions.user.updateAccountOptIn,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelectorsResponse: storeHooks.reactRedux.useSelectorsResponse,\n  useSession\n};\n\nexport { OptinView as default, OptinView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { helpers } from '../../common';\n\n/**\n * @memberof PageLayout\n * @module PageColumns\n */\n\n/**\n * Render page columns based on children.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageColumns = ({ children, className }) => (\n  <Flex\n    alignItems={{ sm: 'alignItemsStretch' }}\n    spaceItems={{ sm: 'spaceItemsNone' }}\n    className={`curiosity-page-columns ${className}`}\n  >\n    {React.Children.toArray(children)\n      .filter(child => React.isValidElement(child))\n      .map(child => (\n        <FlexItem\n          key={(child.key && `page-column-${child.key}`) || helpers.generateId()}\n          grow={{ sm: 'grow' }}\n          className=\"curiosity-page-columns-column\"\n        >\n          {child}\n        </FlexItem>\n      ))}\n  </Flex>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageColumns.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageColumns.defaultProps = {\n  children: [],\n  className: ''\n};\n\nexport { PageColumns as default, PageColumns };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader as RcsPageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * @memberof PageLayout\n * @module PageHeader\n */\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {React.ReactNode}\n */\nconst PageHeader = ({ children, productLabel, t }) => (\n  <RcsPageHeader>\n    <Flex justifyContent={{ sm: 'justifyContentSpaceBetween' }}>\n      <FlexItem>\n        <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n      </FlexItem>\n    </Flex>\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, productLabel: string, t: Function}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{includeTour: boolean, productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageColumns } from './pageColumns';\nimport { PageMessages } from './pageMessages';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * Page layout, organize header, columns, messages, sections, and toolbar.\n *\n * @memberof Components\n * @module PageLayout\n * @property {module} PageColumns\n * @property {module} PageHeader\n * @property {module} PageMessages\n * @property {module} PageSection\n * @property {module} PageToolbar\n */\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageLayout = ({ children, className }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageMessages)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className={`curiosity ${className}`}>\n      {React.Children.toArray(children).filter(\n        child => child.type !== PageHeader && child.type !== PageMessages && child.type !== PageToolbar\n      )}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageLayout.defaultProps = {\n  className: ''\n};\n\nexport { PageLayout as default, PageLayout, PageColumns, PageHeader, PageMessages, PageSection, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * @memberof PageLayout\n * @module PageMessages\n */\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageMessages = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-messages ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageMessages.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageMessages.defaultProps = {\n  className: ''\n};\n\nexport { PageMessages as default, PageMessages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * @memberof PageLayout\n * @module PageSection\n */\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageSection = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-section ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageSection.defaultProps = {\n  className: ''\n};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * @memberof PageLayout\n * @module PageToolbar\n */\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageToolbar = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-toolbar ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageToolbar.defaultProps = {\n  className: ''\n};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Navigate, Routes, Route } from 'react-router-dom';\nimport { useSetRouteDetail } from './routerContext';\nimport { routerHelpers } from './routerHelpers';\nimport { Loader } from '../loader/loader';\n\n/**\n * Route component loader.\n *\n * @memberof Components\n * @module Router\n * @property {module} RouterContext\n * @property {module} RouterHelpers\n */\n\n/**\n * Create and load routes. Start cycle for loading product configuration via hook by setting route details.\n *\n * @param {object} props\n * @param {object} props.redirectRoute\n * @param {Array} props.routes\n * @param {Function} props.useSetRouteDetail\n * @returns {React.ReactNode}\n */\nconst Router = ({ redirectRoute, routes, useSetRouteDetail: useAliasSetRouteDetail } = {}) => {\n  useAliasSetRouteDetail();\n\n  const updatedRoutes = routes.map(item => {\n    const View = routerHelpers.importView(item.component);\n    return <Route key={item.path} path={item.path} element={<View />} />;\n  });\n\n  return (\n    <React.Suspense fallback={<Loader variant=\"title\" />}>\n      <Routes>\n        {updatedRoutes}\n        {redirectRoute?.path && redirectRoute?.redirect && (\n          <Route key=\"redirect\" path={redirectRoute.path} element={<Navigate replace to={redirectRoute.redirect} />} />\n        )}\n      </Routes>\n    </React.Suspense>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{routes: Array<{component: string, path: string}>, redirectRoute: { path: string, redirect: string },\n *     useSetRouteDetail: Function}}\n */\nRouter.propTypes = {\n  redirectRoute: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirect: PropTypes.string.isRequired\n  }),\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      component: PropTypes.string.isRequired,\n      disabled: PropTypes.bool,\n      path: PropTypes.string.isRequired\n    })\n  ),\n  useSetRouteDetail: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array, redirectRoute: object, useSetRouteDetail: Function}}\n */\nRouter.defaultProps = {\n  redirectRoute: routerHelpers.redirectRoute,\n  routes: routerHelpers.routes,\n  useSetRouteDetail\n};\n\nexport { Router as default, Router };\n","import { useCallback, useEffect, useState } from 'react';\nimport {\n  useLocation as useLocationRRD,\n  useNavigate as useRRDNavigate,\n  useSearchParams as useRRDSearchParams\n} from 'react-router-dom';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common/helpers';\nimport { storeHooks, reduxTypes } from '../../redux';\nimport { translate } from '../i18n/i18n';\n\n/**\n * @memberof Router\n * @module RouterContext\n */\n\n/**\n * Combine react-router-dom useLocation with actual window location.\n * Focused on exposing replace and href.\n *\n * @param {object} options\n * @param {Function} options.useLocation\n * @param {*} options.windowLocation\n * @returns {{_id, search, hash}}\n */\nconst useLocation = ({\n  useLocation: useAliasLocation = useLocationRRD,\n  windowLocation: aliasWindowLocation = window.location\n} = {}) => {\n  const location = useAliasLocation();\n  const windowLocation = aliasWindowLocation;\n  const [updatedLocation, setUpdatedLocation] = useState({});\n\n  useEffect(() => {\n    const _id = helpers.generateHash(windowLocation);\n    if (updatedLocation?._id !== _id) {\n      setUpdatedLocation({\n        ...location,\n        ...windowLocation,\n        _id,\n        hash: location?.hash || '',\n        search: location?.search || ''\n      });\n    }\n  }, [location, updatedLocation?._id, windowLocation]);\n\n  return updatedLocation;\n};\n\n/**\n * useNavigate wrapper. Leverage useNavigate for a modified router with parallel \"state\"\n * update. Dispatches the same type leveraged by the initialize hook, useSetRouteDetail.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useLocation\n * @param {Function} options.useNavigate\n * @returns {Function}\n */\nconst useNavigate = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useLocation: useAliasLocation = useLocation,\n  useNavigate: useAliasNavigate = useRRDNavigate\n} = {}) => {\n  const { search = '', hash = '' } = useAliasLocation();\n  const navigate = useAliasNavigate();\n  const dispatch = useAliasDispatch();\n\n  return useCallback(\n    (pathLocation, options) => {\n      const pathName = (typeof pathLocation === 'string' && pathLocation) || pathLocation?.pathname;\n      const { firstMatch } = routerHelpers.getRouteConfigByPath({ pathName });\n\n      if (firstMatch?.productPath) {\n        dispatch({\n          type: reduxTypes.app.SET_PRODUCT,\n          config: firstMatch?.productPath\n        });\n\n        return navigate(`${routerHelpers.pathJoin('.', firstMatch?.productPath)}${search}${hash}`, options);\n      }\n\n      return navigate((pathName && `${pathName}${search}${hash}`) || pathLocation, options);\n    },\n    [dispatch, hash, navigate, search]\n  );\n};\n\n/**\n * Get a route detail from \"state\". Consume useSetRouteDetail and set basis for product\n * configuration context.\n *\n * @param {object} options\n * @param {Function} options.t\n * @param {Function} options.useChrome\n * @param {Function} options.useSelectors\n * @returns {{baseName: string, errorRoute: object}}\n */\nconst useRouteDetail = ({\n  t = translate,\n  useChrome: useAliasChrome = useChrome,\n  useSelectors: useAliasSelectors = storeHooks.reactRedux.useSelectors\n} = {}) => {\n  const { getBundleData = helpers.noop, updateDocumentTitle = helpers.noop } = useAliasChrome();\n  const bundleData = getBundleData();\n  const [productPath, productVariant] = useAliasSelectors([\n    ({ view }) => view?.product?.config,\n    ({ view }) => view?.product?.variant\n  ]);\n  const [detail, setDetail] = useState({});\n\n  useEffect(() => {\n    const updatedVariantPath = productPath;\n    const hashPath = helpers.generateHash({ productPath, productVariant });\n\n    if (updatedVariantPath && detail?._passed !== hashPath) {\n      // Get base configuration match\n      let routeConfig = routerHelpers.getRouteConfigByPath({\n        pathName: updatedVariantPath\n      });\n\n      // Determine variant to display, if any\n      if (productVariant) {\n        const selectedVariant = productVariant?.[routeConfig?.firstMatch?.productGroup];\n\n        if (selectedVariant) {\n          routeConfig = routerHelpers.getRouteConfigByPath({\n            pathName: selectedVariant\n          });\n        }\n      }\n\n      const { allConfigs, availableVariants, configs, firstMatch, isClosest } = routeConfig;\n\n      // Set document title, remove pre-baked suffix\n      updateDocumentTitle(\n        `${t(`curiosity-view.title`, {\n          appName: helpers.UI_DISPLAY_NAME,\n          context: firstMatch?.productGroup\n        })} - ${helpers.UI_DISPLAY_NAME}${(bundleData?.bundleTitle && ` | ${bundleData?.bundleTitle}`) || ''}`,\n        true\n      );\n\n      // Set route detail\n      setDetail({\n        _passed: hashPath,\n        allConfigs,\n        availableVariants,\n        firstMatch,\n        errorRoute: routerHelpers.errorRoute,\n        isClosest,\n        productGroup: firstMatch?.productGroup,\n        productConfig: (configs?.length && configs) || [],\n        productPath,\n        productVariant\n      });\n    }\n  }, [bundleData?.bundleTitle, detail?._passed, productPath, productVariant, t, updateDocumentTitle]);\n\n  return detail;\n};\n\n/**\n * Search parameter, return\n *\n * @param {object} options\n * @param {Function} options.useLocation\n * @param {Function} options.useSearchParams\n * @returns {Array}\n */\nconst useSearchParams = ({\n  useSearchParams: useAliasSearchParams = useRRDSearchParams,\n  useLocation: useAliasLocation = useLocation\n} = {}) => {\n  const { search } = useAliasLocation();\n  const [, setAliasSearchParams] = useAliasSearchParams();\n\n  /**\n   * Alias returned React Router Dom useSearchParams hook to something expected.\n   * This hook defaults to merging search objects instead of overwriting them.\n   *\n   * @param {object} updatedQuery\n   * @param {object} options\n   * @param {boolean} options.isMerged Merge search with existing search, or don't\n   * @param {string|*} options.currentSearch search returned from useLocation\n   */\n  const setSearchParams = useCallback(\n    (updatedQuery, { isMerged = true, currentSearch = search } = {}) => {\n      let updatedSearch = {};\n\n      if (isMerged) {\n        Object.assign(updatedSearch, routerHelpers.parseSearchParams(currentSearch), updatedQuery);\n      } else {\n        updatedSearch = updatedQuery;\n      }\n\n      setAliasSearchParams(updatedSearch);\n    },\n    [search, setAliasSearchParams]\n  );\n\n  return [routerHelpers.parseSearchParams(search), setSearchParams];\n};\n\n/**\n * Initialize and store product path, parameter, in a \"state\" update parallel to routing.\n * We're opting to use \"window.location.pathname\" directly since it appears to be quicker,\n * and returns a similar structured value as useParam.\n *\n * @param {object} options\n * @param {Function} options.useSelector\n * @param {Function} options.useDispatch\n * @param {*} options.windowLocation\n * @returns {*|string}\n */\nconst useSetRouteDetail = ({\n  useSelector: useAliasSelector = storeHooks.reactRedux.useSelectors,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  windowLocation: aliasWindowLocation = window.location\n} = {}) => {\n  const dispatch = useAliasDispatch();\n  const [updatedPath] = useAliasSelector([({ view }) => view?.product?.config]);\n  const { pathname: productPath } = aliasWindowLocation;\n\n  useEffect(() => {\n    if (productPath && productPath !== updatedPath) {\n      dispatch({\n        type: reduxTypes.app.SET_PRODUCT,\n        config: productPath\n      });\n    }\n  }, [updatedPath, dispatch, productPath]);\n\n  return updatedPath;\n};\n\nconst context = {\n  useLocation,\n  useNavigate,\n  useRouteDetail,\n  useSearchParams,\n  useSetRouteDetail\n};\n\nexport { context as default, context, useLocation, useNavigate, useRouteDetail, useSearchParams, useSetRouteDetail };\n","import React from 'react';\nimport { closest } from 'fastest-levenshtein';\nimport { helpers } from '../../common/helpers';\nimport { routesConfig, productConfig } from '../../config';\n\n/**\n * @memberof Router\n * @module RouterHelpers\n */\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * The app baseName. Return an assumed route baseName directory based on existing app name.\n * App name is defined in dotenv and package.json/insights.appname\n * [environment]/[OPTIONAL]/[OPTIONAL]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  `${pathName.split(applicationName)[0]}${applicationName}`;\n\n/**\n * App basePath. Return a base path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBasePath = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  pathName.split(applicationName)[0];\n\n/**\n * The first redirect route.\n *\n * @type {object}\n */\nconst redirectRoute = routesConfig.find(({ disabled, redirect }) => !disabled && redirect);\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = routesConfig.filter(item => !item.disabled);\n\n/**\n * Match pre-sorted route config entries with a path, or match with a fallback.\n * This is the primary engine for curiosity routing. It can account for a full window.location.pathname\n * given the appropriate alias, group, product, and/or path identifiers provided with product configuration.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {Array} params.configs\n * @returns {{configs: *, firstMatch: *, isClosest: boolean, allConfigs: Array}}\n */\nconst getRouteConfigByPath = helpers.memo(({ pathName, configs = productConfig.sortedConfigs } = {}) => {\n  const { byAnything, byAnythingPathIds, byAnythingVariants, byProductIdConfigs } = configs();\n  const updatedPathName =\n    (/^http/i.test(pathName) && new URL(pathName).pathname) || (typeof pathName === 'string' && pathName) || undefined;\n  const trimmedPathName = updatedPathName\n    ?.toLowerCase()\n    ?.split('#')?.[0]\n    ?.split('?')?.[0]\n    ?.replace(/^\\/*|\\/*$/g, '')\n    ?.replace(new RegExp(helpers.UI_DISPLAY_NAME, 'i'), '')\n    ?.replace(/\\/\\//g, '/');\n\n  // Do a known comparison against alias, group, product, path identifiers\n  const focusedStr = byAnythingPathIds.find(value => value.toLowerCase() === trimmedPathName?.split('/')?.pop());\n\n  // Fallback attempt, match pathName with the closest string\n  const closestStr = trimmedPathName && closest(trimmedPathName, byAnythingPathIds);\n  const configsByAnything = byAnything?.[focusedStr || closestStr];\n  const availableVariants = byAnythingVariants?.[focusedStr || closestStr];\n\n  return {\n    isClosest: !focusedStr,\n    allConfigs: Object.values(byProductIdConfigs),\n    availableVariants,\n    configs: configsByAnything,\n    firstMatch: configsByAnything?.[0]\n  };\n});\n\n/**\n * Import a route component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst importView = component => {\n  if (!helpers.TEST_MODE) {\n    return React.lazy(() => import(/* webpackExclude: /\\.test\\.js$/ */ `../${component}.js`));\n  }\n\n  return p => <React.Fragment>{JSON.stringify({ ...p, component }, null, 2)}</React.Fragment>;\n};\n\n/**\n * Parse search parameters from a string, using a set for \"uniqueness\"\n *\n * @param {string} currentPathAndOrSearch\n * @returns {{}}\n */\nconst parseSearchParams = helpers.memo((currentPathAndOrSearch = window.location.search) => {\n  const { decodeURIComponent, URLSearchParams } = window;\n  const parsedSearch = {};\n\n  [\n    ...new Set(\n      [...new URLSearchParams(decodeURIComponent(currentPathAndOrSearch))].map(([param, value]) => `${param}~${value}`)\n    )\n  ].forEach(v => {\n    const [param, value] = v.split('~');\n    parsedSearch[param] = value;\n  });\n\n  return parsedSearch;\n});\n\n/**\n * Basic path join, minor emulation for path.join. Related to the webpack 5 migration.\n *\n * @param {object} paths\n * @returns {string}\n */\nconst pathJoin = helpers.memo((...paths) => {\n  let updatedPath = Array.from(paths);\n  const hasLead = /^\\/\\//.test(updatedPath[0]);\n  updatedPath = updatedPath\n    .join('/')\n    .replace(/(\\/\\/)+/g, '~')\n    .replace(/~/g, '/')\n    .replace(/\\/\\//g, '/');\n\n  if (hasLead) {\n    updatedPath = `/${updatedPath}`;\n  }\n\n  return updatedPath;\n});\n\nconst routerHelpers = {\n  appName,\n  dynamicBaseName,\n  dynamicBasePath,\n  redirectRoute,\n  getRouteConfigByPath,\n  importView,\n  parseSearchParams,\n  pathJoin,\n  routes\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  appName,\n  dynamicBaseName,\n  dynamicBasePath,\n  redirectRoute,\n  getRouteConfigByPath,\n  importView,\n  parseSearchParams,\n  pathJoin,\n  routes\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  Table as PfTable,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * PF table wrapper, normalize table use.\n *\n * @memberof Components\n * @module Table\n * @property {module} TableEmpty\n * @property {module} TableSkeleton\n */\n\n/**\n * FixMe: PF tables uses sequentially ordered lists/arrays to denote expandable sections\n * Ideal solution is to nest expandable sections within their respective parents. There\n * are scenarios where manipulating a sequentially ordered list/array can, and will,\n * lead to unintended results. And forces an equal, if not greater, amount of effort on\n * state tracking in the consuming GUI/app. Compounding the issue, the index is used/returned\n * during events for a particular row being \"expanded\". This ends up making after-the-fact\n * application of the expandable list/array items problematic since said index is\n * constantly updating/shifting as rows are dynamically added. Add in a \"not every row\n * needs to be expandable\" scenario, you can start to see the issues. All of that\n * effort means that in some cases it may actually be quicker to simply use PF styles and\n * a HTML table directly, bypassing PF-React entirely.\n *\n * Applying a React node as content in the sequentially ordered list/array appears to\n * automatically \"mount\" said node. How this handles in child components where subsequent\n * AJAX/XHR calls are called means you are potentially hitting an API with dozens of calls,\n * row dependent, even when a user may not expand the nested row/child. This could easily\n * be resolved by nesting and applying the expandable contents after-the-fact.\n */\n/**\n * FixMe: PF tables misalignment of the column headers list/array and row cells breaks the component\n * The related PF error for this is cryptic. An immediate solution would be to simply fix the error\n * messaging, or do a length check before consuming the lists/arrays. This happens when a consumer\n * places more or less column header cells than row cells.\n */\n/**\n * FixMe: PF tables break when an empty list/array is used for the column headers\n * This appears related to the mismatched column header and row cells. The solution is to simply not\n * render the header row instead of throwing an error. This is similar to how the empty rows\n * list/array is handled.\n */\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n * @fires onSort\n */\nclass Table extends React.Component {\n  state = {\n    isCollapsible: false,\n    isSortable: false,\n    sortBy: {},\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (\n      !_isEqualWith(prevProps.rows, rows, customizer) ||\n      !_isEqualWith(prevProps.columnHeaders, columnHeaders, customizer)\n    ) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * FixMe: PF table sort callback doesn't use a zero based index when expandable?\n   * Educated guess there's a cell count happening instead of \"[you have this many data/entry cells]\"\n   * This is really confusing to implement in a consuming application, especially on first\n   * implementation. Special \"collapsible index\" logic had to be implemented to compensate for this\n   * odd behavior.\n   */\n  /**\n   * On column sort\n   *\n   * @event onSort\n   * @param {object} params\n   * @param {number} params.index\n   * @param {string} params.direction\n   * @param {object} params.data\n   */\n  onSort = ({ index, direction, data = {} }) => {\n    const { isCollapsible, updatedColumnHeaders, updatedRows } = this.state;\n    const updatedIndex = isCollapsible ? index - 1 : index;\n\n    updatedRows.forEach(async ({ isOpen }, i) => {\n      if (isOpen === true) {\n        await this.onCollapse({ index: i, isOpen: false });\n      }\n    });\n\n    this.setState(\n      {\n        sortBy: {\n          index,\n          direction\n        }\n      },\n      () =>\n        updatedColumnHeaders[updatedIndex].onSort({\n          direction,\n          index: updatedIndex,\n          label: data?.column?.header?.label\n        })\n    );\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n    const updatedSort = {};\n    let isCollapsible = false;\n    let isSortable = false;\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        isCollapsible = true;\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell?.title !== undefined) {\n          const { title, ...settings } = cell;\n          rowObj.cells.push({ title, ...settings });\n        } else {\n          rowObj.cells.push({\n            title: (React.isValidElement(cell) && cell) || (typeof cell === 'object' && `${cell}`) || cell\n          });\n        }\n      });\n    });\n\n    columnHeaders.forEach((columnHeader, index) => {\n      if (columnHeader?.title !== undefined) {\n        const { onSort, sortActive, sortDirection, title, ...settings } = columnHeader;\n        const tempColumnHeader = {\n          title,\n          ...settings\n        };\n\n        if (onSort) {\n          isSortable = true;\n          tempColumnHeader.transforms = [...(tempColumnHeader?.transforms || []), sortable];\n          tempColumnHeader.onSort = onSort;\n\n          if (sortActive) {\n            updatedSort.sortBy = { index: isCollapsible ? index + 1 : index };\n            updatedSort.sortBy.direction = SortByDirection.asc;\n          }\n\n          if (sortDirection) {\n            updatedSort.sortBy = { ...updatedSort.sortBy, direction: sortDirection };\n          }\n        } else if (tempColumnHeader.transforms) {\n          tempColumnHeader.transforms = tempColumnHeader.transforms.filter(v => v !== sortable);\n        }\n\n        updatedColumnHeaders.push(tempColumnHeader);\n      } else {\n        updatedColumnHeaders.push({\n          title:\n            (React.isValidElement(columnHeader) && columnHeader) ||\n            (typeof columnHeader === 'object' && `${columnHeader}`) ||\n            columnHeader\n        });\n      }\n    });\n\n    this.setState({\n      isCollapsible,\n      isSortable,\n      updatedColumnHeaders,\n      updatedRows,\n      ...updatedSort\n    });\n  }\n\n  /**\n   * FixMe: PF Tables automatically applies an expandable className when using the \"onCollapse\" prop?\n   * Not every row may need to be expandable. In certain scenarios a table may have no expandable\n   * sections, however it appears the \"onCollapse\" styling, and additionally added \"table cells\" are still\n   * applied.\n   */\n  /**\n   * Apply props to table.\n   *\n   * @returns {React.ReactNode}\n   */\n  renderTable() {\n    const { isCollapsible, isSortable, sortBy, updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    const pfTableProps = {};\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    if (isCollapsible) {\n      pfTableProps.onCollapse = (event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data });\n    }\n\n    if (isSortable) {\n      pfTableProps.sortBy = sortBy;\n      pfTableProps.onSort = (event, index, direction, data) => this.onSort({ event, index, direction, data });\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n          {...pfTableProps}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {React.ReactNode}\n   */\n  render() {\n    return (\n      <Grid className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: React.ReactNode,\n *     isHeader: boolean, variant: string, className: string, rows: Array, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        onSort: PropTypes.func,\n        sortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)]),\n        title: PropTypes.node.isRequired\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.instanceOf(Date),\n          PropTypes.shape({\n            title: PropTypes.oneOfType([PropTypes.node, PropTypes.instanceOf(Date)]).isRequired\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\n/**\n * @memberof Table\n * @module TableEmpty\n */\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {React.ReactNode|Function} props.icon\n * @param {React.ReactNode} props.message\n * @param {string} props.tableHeading\n * @param {React.ReactNode} props.title\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: React.ReactNode|Function, variant: string, message: React.ReactNode, title: React.ReactNode,\n *     tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cellWidth, TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * @memberof Table\n * @module TableSkeleton\n */\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {Array} props.colWidth\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst TableSkeleton = ({ className, borders, colCount, colWidth, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map((value, index) => {\n    const updatedHeader = { title: <Skeleton size={SkeletonSize.md} /> };\n\n    if (typeof colWidth[index] === 'number') {\n      updatedHeader.transforms = [cellWidth(colWidth[index])];\n    }\n\n    return updatedHeader;\n  });\n\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />)\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: string,\n *     className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.arrayOf(PropTypes.number),\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: null,\n *     className: null, rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  colWidth: [],\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip as PfTooltip, TooltipPosition } from '@patternfly/react-core';\n\n/**\n * PF tooltip wrapper.\n *\n * @memberof Components\n * @module Tooltip\n */\n\n/**\n * PF tooltip wrapper component.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.ReactNode} props.content\n * @param {boolean} props.isNoWrap\n * @param {object} props.props\n * @returns {React.ReactNode}\n */\nconst Tooltip = ({ children, content, isNoWrap, ...props }) => (\n  <PfTooltip\n    className={`curiosity-tooltip${(isNoWrap && '__nowrap') || ''}`}\n    content={(React.isValidElement(content) && content) || <p>{content || ''}</p>}\n    {...props}\n  >\n    {(React.isValidElement(children) && children) || <span className=\"curiosity-tooltip-children\">{children}</span>}\n  </PfTooltip>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, content: React.ReactNode}}\n */\nTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n  content: PropTypes.node,\n  distance: PropTypes.number,\n  enableFlip: PropTypes.bool,\n  entryDelay: PropTypes.number,\n  exitDelay: PropTypes.number,\n  isNoWrap: PropTypes.bool,\n  position: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{content: string}}\n */\nTooltip.defaultProps = {\n  content: '...',\n  distance: 5,\n  enableFlip: false,\n  entryDelay: 100,\n  exitDelay: 0,\n  isNoWrap: false,\n  position: TooltipPosition.top\n};\n\nexport { Tooltip as default, Tooltip };\n","import { helpers } from '../common/helpers';\n\n/**\n * IIFE for generating a product configs listing via webpack\n *\n * @type {{aliases: string[], productGroup: string, productId: string, productLabel: string, productDisplay: string, viewId: string,\n *     productVariants: string[], query: object, graphTallyQuery: object, inventoryHostQuery: object,\n *     inventorySubscriptionsQuery: object, initialGraphFilters: {}[], initialGraphSettings: object, initialGuestsFilters: {}[],\n *     initialInventoryFilters: {}[], initialSubscriptionsInventoryFilters: {}[], initialToolbarFilters: {}[], }[]}\n */\nconst productConfigs = (() => {\n  try {\n    const path = require.context('./', false, /product\\.[\\d\\D]+\\.js$/i);\n    return path.keys().map(path);\n  } catch (e) {\n    /**\n     * Basic configuration for testing only.\n     */\n    if (process.env.REACT_APP_ENV === 'test' && require) {\n      return [\n        ...require('fs') // eslint-disable-line\n          ?.readdirSync('./src/config') // eslint-disable-line\n          ?.filter(file => /product\\.[a-z]+\\.js/i.test(file)) // eslint-disable-line\n          ?.map(file => require(`./${file}`)) // eslint-disable-line\n      ];\n    }\n\n    console.warn(`Product configuration failed to load: ${e.message}`);\n    return [];\n  }\n})()?.map(value => value.config);\n\n/**\n * Sorted/organized/grouped product configs.\n * - byAlias,object configurations associated with product aliases\n * - byAnything, object of all productGroups, productIds, productPaths, and aliases with lists of their related configurations\n * - byAnythingPathIds, list of identifiers associated with all productGroups, productIds, productPaths, and aliases\n * - byAnythingVariants, object of all productGroups, productIds, productPaths, and aliases associated with lists of their related variants\n * - byGroupIdConfigs, object of productGroup properties against an array of associated product configs\n * - byGroupIds, object of productGroup properties against an array of associated productId strings.\n * - byGroupIdVariants, object of productGroup properties against an array of associated product variants\n * - byProductIdConfigs, object of productId properties against a product config\n * - byProductIds, a unique array of all productId strings\n * - byProductPathConfigs, object of productPath properties against an array of associated product configs\n * - byViewIdConfigs, object of viewId properties against an array of associated product configs\n * - byViewIds, object of viewId properties against an array of associated productId strings. \"viewId\" was created because of the\n *     overlap with productIds and productGroups, this may be refactored in the future\n *\n * @param {productConfigs} configs\n * @returns {{byGroupIdVariants: {}, byProductPathConfigs: {}, byAnythingVariants: {}, byAnything: {},\n *     byAnythingPathIds: string[], byGroupIdConfigs: {}, byViewIds: {}, byProductIds: any[], byAlias: {},\n *     byGroupIds: {}, byViewIdConfigs: {}, byProductIdConfigs: {}}}\n */\nconst sortedProductConfigs = helpers.memo((configs = productConfigs) => {\n  const viewIdConfigs = {};\n  const productAliases = {};\n  const productIds = new Set();\n  const productIdConfigs = {};\n  const productPathConfigs = {};\n  const anything = {};\n  const anythingVariants = {};\n  const groupIdConfigs = {};\n  const groupedGroupIds = {};\n  const groupedVariants = {};\n  const groupedViewIds = {};\n\n  configs?.forEach(config => {\n    const { aliases, productGroup, productId, productLabel, productPath, productVariants, viewId } = config;\n\n    if (productGroup && productId) {\n      anything[productGroup] ??= {};\n      anything[productGroup][productId] = config;\n    }\n\n    if (productId) {\n      anything[productId] ??= {};\n      anything[productId][productId] = config;\n    }\n\n    if (productLabel && productId) {\n      anything[productLabel] ??= {};\n      anything[productLabel][productId] = config;\n    }\n\n    if (productPath && productId) {\n      anything[productPath] ??= {};\n      anything[productPath][productId] = config;\n    }\n\n    aliases?.forEach(alias => {\n      if (productId) {\n        anything[alias] ??= {};\n        anything[alias][productId] = config;\n      }\n\n      productAliases[alias] ??= [];\n      productAliases[alias].push(config);\n    });\n\n    productVariants?.forEach(variant => {\n      if (productId) {\n        anything[variant] ??= {};\n        anything[variant][productId] = config;\n        anything[variant][productId] = { ...config, productId: variant };\n      }\n\n      productAliases[variant] ??= [];\n      productAliases[variant].push({ ...config, productId: variant });\n    });\n\n    if (productId) {\n      productIdConfigs[productId] = config;\n      productIds.add(productId);\n    }\n\n    if (productPath) {\n      productPathConfigs[productPath] ??= [];\n      productPathConfigs[productPath].push(config);\n    }\n\n    if (productGroup) {\n      groupIdConfigs[productGroup] ??= [];\n      groupIdConfigs[productGroup].push(config);\n\n      if (Array.isArray(productVariants)) {\n        groupedVariants[productGroup] ??= [];\n        groupedVariants[productGroup].push(...productVariants);\n      }\n    }\n\n    if (productGroup && productId) {\n      groupedGroupIds[productGroup] ??= [];\n      groupedGroupIds[productGroup].push(productId);\n\n      if (!groupedVariants[productGroup]?.includes(productId)) {\n        groupedVariants[productGroup] ??= [];\n        groupedVariants[productGroup].push(productId);\n      }\n    }\n\n    if (viewId) {\n      viewIdConfigs[viewId] ??= [];\n      viewIdConfigs[viewId].push(config);\n    }\n\n    if (viewId && productId) {\n      groupedViewIds[viewId] ??= [];\n      groupedViewIds[viewId].push(productId);\n    }\n  });\n\n  Object.entries(anything).forEach(([key, value]) => {\n    anything[key] = Object.values(value);\n    anythingVariants[key] ??= [];\n\n    anything[key].forEach(({ productGroup }) => {\n      if (productGroup) {\n        anythingVariants[key] = Array.from(\n          new Set([...anythingVariants[key], ...groupedVariants[productGroup]])\n        ).sort();\n      }\n    });\n  });\n\n  return helpers.objFreeze({\n    byAlias: productAliases,\n    byAnything: anything,\n    byAnythingPathIds: Object.keys(anything).sort(),\n    byAnythingVariants: anythingVariants,\n    byGroupIdConfigs: groupIdConfigs,\n    byGroupIds: groupedGroupIds,\n    byGroupIdVariants: groupedVariants,\n    byProductPathConfigs: productPathConfigs,\n    byProductIdConfigs: productIdConfigs,\n    byProductIds: Array.from(productIds),\n    byViewIdConfigs: viewIdConfigs,\n    byViewIds: groupedViewIds\n  });\n});\n\nconst products = {\n  configs: productConfigs,\n  sortedConfigs: sortedProductConfigs\n};\n\nexport { products as default, products, productConfigs, sortedProductConfigs };\n","import { helpers } from '../common';\n\nconst routes = [\n  {\n    id: 'any',\n    path: ':productPath',\n    redirect: null,\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'missing',\n    path: '*',\n    redirect: './',\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: true,\n    component: 'productView/productViewMissing'\n  }\n];\n\nexport { routes as default, routes };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES as INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = 'openshift';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT;\n\n/**\n * OpenShift Container product config\n *\n * @type {{productLabel: string, productPath: string, initialOption: string, aliases: string[], productId: string,\n *     inventorySubscriptionsQuery: object, query: object, initialSubscriptionsInventoryFilters: {}[],\n *     initialInventorySettings: {}, viewId: string, initialToolbarFilters: {}[], productGroup: string,\n *     graphTallyQuery: object, inventoryHostsQuery: object, productDisplay: string, productContextFilterUom: boolean,\n *     initialGraphFilters: {}[], initialGuestsFilters: {}[], initialGraphSettings: object, initialInventoryFilters: {}[]}}\n */\nconst config = {\n  aliases: [RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT, 'openshift-container', 'container', 'platform', 'shift'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}`,\n  productContextFilterUom: true,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.CORES,\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialOption: RHSM_API_QUERY_UOM_TYPES.CORES,\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          isOptional: true,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          isOptional: true,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          chartType: ChartTypeVariant.threshold,\n          isOptional: true\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          chartType: ChartTypeVariant.threshold,\n          isOptional: true\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.UOM,\n        position: SelectPosition.right\n      },\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      header: () => translate('curiosity-inventory.header', { context: ['guests', INVENTORY_TYPES.DISPLAY_NAME] }),\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {} } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      }\n    },\n    {\n      id: INVENTORY_TYPES.INVENTORY_ID,\n      cellWidth: 40\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        {\n          [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n          [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {},\n          [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n        } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests?.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      header: (data, session, { [INVENTORY_META_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: [uom, productId] }),\n      cell: (data = {}, session, { [INVENTORY_META_TYPES.UOM]: uom } = {}) => data?.[uom]?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    }\n  ],\n  initialInventorySettings: {\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id) || undefined\n  },\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 20,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY,\n      header: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: ['subscriptions', uom?.value] }),\n      cell: ({\n        [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY]: totalCapacity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom\n      } = {}) => {\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate(\n            `curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY}`,\n            { context: uom?.value }\n          );\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value && moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment/moment';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\nconst productGroup = 'openshift';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\n/**\n * OpenShift Dedicated product config\n *\n * @type {{productLabel: string, productPath: string, aliases: string[], productId: string, query: object,\n *     viewId: string, initialToolbarFilters: undefined, productGroup: string, graphTallyQuery: object,\n *     inventoryHostsQuery: object, productDisplay: string, initialGraphFilters: {}[], initialGraphSettings: object,\n *     initialInventoryFilters: {}[]}}\n */\nconst config = {\n  aliases: ['openshift-dedicated', 'dedicated'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}-${productId}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.dailyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.dailyValue} aria-label={dataSets?.[0]?.display?.dailyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.dailyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.monthlyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.monthlyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.monthlyValue} aria-label={dataSets?.[0]?.display?.monthlyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.monthlyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialGuestsFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      header: () => translate('curiosity-inventory.header', { context: ['guests', INVENTORY_TYPES.DISPLAY_NAME] }),\n      cell: ({\n        [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n        [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {}\n      } = {}) => {\n        // FixMe: Disabled, see SWATCH-1209 for resolution\n        const { inventory: authorized = false } = {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      }\n    },\n    {\n      id: INVENTORY_TYPES.INVENTORY_ID,\n      cellWidth: 40\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({\n        [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n        [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {},\n        [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n      } = {}) => {\n        // FixMe: Disabled, see SWATCH-1209 for resolution\n        const { inventory: authorized = false } = {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests?.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: cores }) =>\n        (typeof cores?.value === 'number' && Number.parseFloat(cores?.value).toFixed(2)) || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS]: instanceHours } = {}) =>\n        (typeof instanceHours?.value === 'number' && Number.parseFloat(instanceHours?.value).toFixed(2)) || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id) || undefined\n  },\n  initialToolbarFilters: [\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chartHelpers';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = 'openshift';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS;\n\n/**\n * OpenShift Metrics product config\n *\n * @type {{productLabel: string, productPath: string, aliases: string[], productId: string, query: object,\n *     viewId: string, initialToolbarFilters: undefined, productGroup: string, graphTallyQuery: object,\n *     inventoryHostsQuery: object, productDisplay: string, initialGraphFilters: {}[], initialGraphSettings: object,\n *     initialInventoryFilters: {}[]}}\n */\nconst config = {\n  aliases: [RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS, 'metrics'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}-${productId}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.dailyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.dailyValue} aria-label={dataSets?.[0]?.display?.dailyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.dailyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.monthlyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.monthlyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.monthlyValue} aria-label={dataSets?.[0]?.display?.monthlyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.monthlyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialGuestsFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      header: () => translate('curiosity-inventory.header', { context: ['guests', INVENTORY_TYPES.DISPLAY_NAME] }),\n      cell: ({\n        [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n        [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {}\n      } = {}) => {\n        // FixMe: Disabled, see SWATCH-1209 for resolution\n        const { inventory: authorized = false } = {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      }\n    },\n    {\n      id: INVENTORY_TYPES.INVENTORY_ID,\n      cellWidth: 40\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({\n        [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n        [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {},\n        [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n      } = {}) => {\n        // FixMe: Disabled, see SWATCH-1209 for resolution\n        const { inventory: authorized = false } = {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests?.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: cores } = {}) =>\n        (typeof cores?.value === 'number' && Number.parseFloat(cores?.value).toFixed(2)) || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    }\n  ],\n  initialInventorySettings: {\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id) || undefined\n  },\n  initialToolbarFilters: [\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst config = {\n  aliases: ['advanced', 'cluster', 'security', 'kubernetes', 'acs'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.dailyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.dailyValue} aria-label={dataSets?.[0]?.display?.dailyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.dailyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.monthlyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.monthlyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.monthlyValue} aria-label={dataSets?.[0]?.display?.monthlyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.monthlyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/application-services/acs/instances/instance/${instanceId.value}`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id) || undefined\n  },\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label`, {\n          context: [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER, provider?.value || 'none']\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_orange_100 as chartColorOrangeLight,\n  chart_color_orange_300 as chartColorOrangeDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = 'rhel';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHEL_X86;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHEL;\n\n/**\n * RHEL product config\n *\n * @type {{aliases: string[], productGroup: string, productId: string, productLabel: string, productDisplay: string, viewId: string,\n *     productVariants: string[], query: object, graphTallyQuery: object, inventoryHostQuery: object, inventorySubscriptionsQuery: object,\n *     initialGraphFilters: {}[], initialGraphSettings: object, initialGuestsFilters: {}[], initialInventoryFilters: {}[],\n *     initialSubscriptionsInventoryFilters: {}[], initialToolbarFilters: {}[]}}\n */\nconst config = {\n  aliases: ['insights', 'enterprise', 'linux', 'el', 'x86', 'ibm', 'power'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}`,\n  productVariants: [...Object.values(RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES)],\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.SOCKETS,\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.PHYSICAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorCyanLight.value,\n          stroke: chartColorCyanDark.value,\n          color: chartColorCyanDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.VIRTUAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorPurpleLight.value,\n          stroke: chartColorPurpleDark.value,\n          color: chartColorPurpleDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.CLOUD\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorOrangeLight.value,\n          stroke: chartColorOrangeDark.value,\n          color: chartColorOrangeDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.HYPERVISOR\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          chartType: ChartTypeVariant.threshold\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    isDisabledLegendClick: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      header: () => translate('curiosity-inventory.header', { context: ['guests', INVENTORY_TYPES.DISPLAY_NAME] }),\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {} } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      }\n    },\n    {\n      id: INVENTORY_TYPES.INVENTORY_ID,\n      cellWidth: 40\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.NUMBER_OF_GUESTS,\n      cell: ({ [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests } = {}) => numberOfGuests?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.CATEGORY,\n      cell: ({ [INVENTORY_TYPES.CLOUD_PROVIDER]: cloudProvider, [INVENTORY_TYPES.CATEGORY]: category } = {}) => (\n        <React.Fragment>\n          {translate('curiosity-inventory.label', { context: [INVENTORY_TYPES.CATEGORY, category?.value] })}{' '}\n          {(cloudProvider?.value && (\n            <PfLabel color=\"purple\">\n              {translate('curiosity-inventory.label', {\n                context: [INVENTORY_TYPES.CLOUD_PROVIDER, cloudProvider?.value]\n              })}\n            </PfLabel>\n          )) ||\n            ''}\n        </React.Fragment>\n      ),\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.SOCKETS]: sockets } = {}) => sockets?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id) || undefined\n  },\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY,\n      header: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: ['subscriptions', uom?.value] }),\n      cell: ({\n        [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY]: totalCapacity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom\n      } = {}) => {\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate(\n            `curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY}`,\n            { context: uom?.value }\n          );\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value && moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.USAGE,\n      selected: true\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.CATEGORY\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst config = {\n  aliases: ['application-services', 'data', 'science', 'ods'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id } = {}) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.dailyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.dailyValue} aria-label={dataSets?.[0]?.display?.dailyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.dailyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.monthlyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.monthlyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.monthlyValue} aria-label={dataSets?.[0]?.display?.monthlyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.monthlyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({ [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} }) => {\n        // FixMe: Disabled, see SWATCH-1209 for resolution\n        const { inventory: authorized = false } = {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id) || undefined\n  },\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label`, {\n          context: [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER, provider?.value || 'none']\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_gold_400 as chartColorGoldLight,\n  chart_color_gold_400 as chartColorGoldDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment/moment';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { ChartTypeVariant } from '../components/chart/chartHelpers';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.ROSA;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.ROSA;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.ROSA;\n\nconst config = {\n  aliases: [],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY,\n    [RHSM_API_QUERY_SET_TYPES.USE_RUNNING_TOTALS_FORMAT]: true\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.BILLING_CATEGORY]: CATEGORY_TYPES.PREPAID\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          fill: chartColorGoldLight.value,\n          stroke: chartColorGoldDark.value,\n          color: chartColorGoldDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.BILLING_CATEGORY]: CATEGORY_TYPES.ON_DEMAND\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          chartType: ChartTypeVariant.threshold\n        }\n      ]\n    },\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.BILLING_CATEGORY]: CATEGORY_TYPES.PREPAID\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n          fill: chartColorGoldLight.value,\n          stroke: chartColorGoldDark.value,\n          color: chartColorGoldDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.BILLING_CATEGORY]: CATEGORY_TYPES.ON_DEMAND\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n          chartType: ChartTypeVariant.threshold\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', dataSets?.[0]?.display?.chartId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.dailyHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dataSets?.[0]?.display?.dailyValue} aria-label={dataSets?.[0]?.display?.dailyValue} />]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.dailyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['remainingCapacity', dataSets?.[0]?.display?.chartId],\n            testId: 'graphRemainingCapacityCard-header'\n          }),\n        body: ({ dataSets = [] } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dataSets?.[0]?.display?.remainingCapacityHasData && dataSets?.[0]?.display?.chartId],\n              testId: 'graphRemainingCapacityCard-body',\n              total: helpers\n                .numberDisplay(dataSets?.[0]?.display?.remainingCapacity)\n                ?.format({\n                  average: true,\n                  mantissa: 2,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [\n              <strong\n                title={dataSets?.[0]?.display?.remainingCapacity}\n                aria-label={dataSets?.[0]?.display?.remainingCapacity}\n              />\n            ]\n          ),\n        footer: ({ dataSets = [] } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment\n              .utc(dataSets?.[0]?.display?.dailyDate)\n              .format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphRemainingCapacityCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisLabelIncrement: 1,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    xAxisTickFormat: ({ tick }) => Number.parseInt(tick, 10) + 1 || tick,\n    yAxisTickFormat: ({ tick } = {}) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialGuestsFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      header: () => translate('curiosity-inventory.header', { context: ['guests', INVENTORY_TYPES.DISPLAY_NAME] }),\n      cell: ({\n        [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n        [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {}\n      } = {}) => {\n        // FixMe: Disabled, see SWATCH-1209 for resolution\n        const { inventory: authorized = false } = {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      }\n    },\n    {\n      id: INVENTORY_TYPES.INVENTORY_ID,\n      cellWidth: 40\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({ [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} }) => {\n        // FixMe: Disabled, see SWATCH-1209 for resolution\n        const { inventory: authorized = false } = {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: cores }) =>\n        (typeof cores?.value === 'number' && Number.parseFloat(cores?.value).toFixed(2)) || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS]: instanceHours } = {}) =>\n        (typeof instanceHours?.value === 'number' && Number.parseFloat(instanceHours?.value).toFixed(2)) || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id) || undefined\n  },\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value && moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = 'rhel';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.SATELLITE_SERVER;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.SATELLITE;\n\n/**\n * Satellite product config\n *\n * @type {{aliases: string[], productGroup: string, productId: string, productLabel: string, productDisplay: string, viewId: string,\n *     productVariants: string[], query: object, graphTallyQuery: object, inventoryHostQuery: object,\n *     inventorySubscriptionsQuery: object, initialGraphFilters: {}[], initialGraphSettings: object, initialGuestsFilters: {}[],\n *     initialInventoryFilters: {}[], initialToolbarFilters: {}[]}}\n */\nconst config = {\n  aliases: ['sat', 'server', 'capsule'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}-${productId}`,\n  productVariants: [...Object.values(RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES)],\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.PHYSICAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorCyanLight.value,\n          stroke: chartColorCyanDark.value,\n          color: chartColorCyanDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.VIRTUAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorPurpleLight.value,\n          stroke: chartColorPurpleDark.value,\n          color: chartColorPurpleDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.CLOUD\n          }\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    isDisabledLegendClick: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      header: () => translate('curiosity-inventory.header', { context: ['guests', INVENTORY_TYPES.DISPLAY_NAME] }),\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {} } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      }\n    },\n    {\n      id: INVENTORY_TYPES.INVENTORY_ID,\n      cellWidth: 40\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_LINK_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {updatedDisplayName}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.NUMBER_OF_GUESTS,\n      cell: ({ [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests } = {}) => numberOfGuests?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.CATEGORY,\n      cell: ({ [INVENTORY_TYPES.CLOUD_PROVIDER]: cloudProvider, [INVENTORY_TYPES.CATEGORY]: category } = {}) => (\n        <React.Fragment>\n          {translate('curiosity-inventory.label', { context: [INVENTORY_TYPES.CATEGORY, category?.value] })}{' '}\n          {(cloudProvider?.value && (\n            <PfLabel color=\"purple\">\n              {translate('curiosity-inventory.label', {\n                context: [INVENTORY_TYPES.CLOUD_PROVIDER, cloudProvider?.value]\n              })}\n            </PfLabel>\n          )) ||\n            ''}\n        </React.Fragment>\n      ),\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.SOCKETS]: sockets } = {}) => sockets?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {\n    guestContent: ({\n      [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {},\n      [INVENTORY_TYPES.INSTANCE_ID]: id\n    } = {}) => (numberOfGuests > 0 && id) || undefined\n  },\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.USAGE,\n      selected: true\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.CATEGORY\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import { useEffect, useState } from 'react';\nimport { helpers } from '../common';\n\n/**\n * Global window related hooks.\n *\n * @memberof Hooks\n * @module UseWindow\n */\n\n/**\n * Apply a resize observer to an element.\n *\n * @param {*} target\n * @returns {{width: number, height: number}}\n */\nconst useResizeObserver = target => {\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    const isElementResize = target && window.ResizeObserver && true;\n    const element = target?.current;\n    let removeObserver = helpers.noop;\n    let timeout;\n\n    if (element) {\n      const handler = () => {\n        const { clientHeight = 0, clientWidth = 0, innerHeight = 0, innerWidth = 0 } = element || {};\n\n        timeout = window.setTimeout(() => {\n          setDimensions({\n            width: isElementResize ? clientWidth : innerWidth,\n            height: isElementResize ? clientHeight : innerHeight\n          });\n        });\n      };\n\n      if (isElementResize) {\n        const resizeObserver = new window.ResizeObserver(handler);\n        resizeObserver.observe(element);\n        removeObserver = () => resizeObserver.unobserve(element);\n      } else {\n        handler();\n        window.addEventListener('resize', handler);\n        removeObserver = () => window.removeEventListener('resize', handler);\n      }\n    }\n\n    return () => {\n      window.clearTimeout(timeout);\n      removeObserver();\n    };\n  }, [target]);\n\n  return dimensions;\n};\n\nconst windowHooks = {\n  useResizeObserver\n};\n\nexport { windowHooks as default, windowHooks, useResizeObserver };\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport _snakeCase from 'lodash/snakeCase';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Helpers\n * @module ReduxHelpers\n */\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {string} responses.response.keyCase\n * @param {Function} responses.response.customResponseEntry\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(\n    ({ schema = {}, data, customResponseEntry, customResponseValue, keyPrefix: prefix, keyCase = 'camel' }) => {\n      const isArray = Array.isArray(data);\n      const updatedData = (isArray && data) || (data && [data]) || [];\n      const [generatedSchema = {}] = setResponseSchemas([schema]);\n      const parsedResponse = [];\n\n      updatedData.forEach((value, index) => {\n        const generateReflectedData = ({\n          dataObj,\n          keyPrefix = '',\n          keyCaseType,\n          customEntry,\n          customValue = null,\n          update = helpers.noop\n        }) => {\n          let updatedDataObj = {};\n\n          Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n            let casedDataObjKey;\n\n            switch (keyCaseType) {\n              case 'camel':\n                casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'snake':\n                casedDataObjKey = _snakeCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'default':\n              default:\n                casedDataObjKey = `${dataObjKey}`.trim();\n                break;\n            }\n\n            let val = dataObjValue;\n\n            if (typeof val === 'number') {\n              val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n            }\n\n            if (typeof customValue === 'function') {\n              updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n            } else {\n              updatedDataObj[casedDataObjKey] = val;\n            }\n          });\n\n          if (typeof customEntry === 'function') {\n            updatedDataObj = customEntry(updatedDataObj, index);\n          }\n\n          update(updatedDataObj);\n        };\n\n        generateReflectedData({\n          keyPrefix: prefix,\n          dataObj: { ...generatedSchema, ...value },\n          keyCaseType: keyCase,\n          customEntry: customResponseEntry,\n          customValue: customResponseValue,\n          update: generatedData => parsedResponse.push(generatedData)\n        });\n      });\n\n      parsedResponses.push(parsedResponse);\n    }\n  );\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 400 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults?.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @param {object} options.state\n * @param {object} options.initialState\n * @param {boolean} options.reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    return {\n      meta: { ...updatedMeta },\n      ...Object.fromEntries(Object.entries(meta).map(([key, value]) => [_camelCase(`meta ${key}`), value]))\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (typeof action.meta?.id === 'string' && action.meta?.id && { [action.meta.id]: { ...baseState, ...data } }) || {\n      ...baseState,\n      ...data\n    };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","/* eslint-disable no-unsafe-optional-chaining */\nimport { useSelector as useReactReduxSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { store } from '../store';\nimport { helpers } from '../../common';\n\n/**\n * State hooks for dispatch and selectors.\n *\n * @memberof Hooks\n * @module UseReactRedux\n */\n\n/**\n * FixMe: Appears to be an issue in trying to use Redux Promise with the default \"useDispatch\"\n */\n/**\n * Wrapper for store.dispatch, emulating useDispatch.\n *\n * @returns {Function}\n */\nconst useDispatch = () => dispatchEvent => store.dispatch(dispatchEvent);\n\n/**\n * Wrapper for Redux hook, useSelector. Applies test mode and a fallback value.\n *\n * @param {Function} selector\n * @param {*} value\n * @param {object} options\n * @param {*} options.equality\n * @param {Function} options.useSelector\n * @returns {*}\n */\nconst useSelector = (\n  selector,\n  value = null,\n  { equality, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => useAliasSelector(selector, equality) ?? value;\n\n/**\n * Generate a selector from multiple selectors for use in \"useSelector\".\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {*} value Pass-through value similar to charging the response.\n * @param {object} options\n * @param {Function} options.useSelector\n * @param {*} options.equality\n * @returns {Array|object}\n */\nconst useSelectors = (\n  selectors,\n  value,\n  { equality = shallowEqual, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => {\n  let updatedSelectors = Array.isArray(selectors) ? selectors : [selectors];\n  const selectorIds = new Set();\n\n  updatedSelectors = updatedSelectors.map(selector => {\n    if (selector.selector && selector.id) {\n      selectorIds.add(selector.id);\n      return selector.selector;\n    }\n    return selector;\n  });\n\n  const multiSelector = createSelector(updatedSelectors, (...results) => results);\n\n  let listMultiSelectorResponse = (useAliasSelector(multiSelector, equality) ?? value) || [];\n  const undefinedMultiSelectorResponse = listMultiSelectorResponse.filter(response => response === undefined);\n\n  if (undefinedMultiSelectorResponse.length === listMultiSelectorResponse.length) {\n    listMultiSelectorResponse = [];\n  } else {\n    listMultiSelectorResponse = _cloneDeep(listMultiSelectorResponse);\n  }\n\n  if (selectorIds.size && selectorIds.size === listMultiSelectorResponse.length) {\n    const idMultiSelectorResponse = {};\n\n    Array.from(selectorIds).forEach((id, index) => {\n      idMultiSelectorResponse[id] = listMultiSelectorResponse[index];\n    });\n\n    return idMultiSelectorResponse;\n  }\n\n  return listMultiSelectorResponse;\n};\n\n/**\n * Return a combined selector response using a \"Promise.all\" like response.\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {object} options\n * @param {Function} options.useSelectors\n * @param {Function} options.customResponse Callback for customizing your own response\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsResponse = (selectors, { useSelectors: useAliasSelectors = useSelectors, customResponse } = {}) => {\n  const selectorResponse = useAliasSelectors(selectors, []);\n  const isSelectorResponseArray = Array.isArray(selectorResponse);\n\n  const cancelledById = {};\n  const cancelledByList = [];\n  const cancelledDataById = {};\n  const cancelledDataByList = [];\n\n  const errorByList = [];\n  const errorById = {};\n  const errorDataById = {};\n  const errorDataByList = [];\n\n  const fulfilledByList = [];\n  const fulfilledById = {};\n  const fulfilledDataById = {};\n  const fulfilledDataByList = [];\n\n  const pendingByList = [];\n\n  const responsesById = {};\n  const responsesByList = [];\n  const dataById = {};\n  const dataByList = [];\n\n  const idList = [];\n\n  const updatedSelectorResponse = _cloneDeep(\n    (isSelectorResponseArray && selectorResponse) || Object.entries(selectorResponse)\n  );\n\n  updatedSelectorResponse.forEach(response => {\n    const id = (!isSelectorResponseArray && response?.[0]) || null;\n\n    const updatedResponse = (isSelectorResponseArray && response) || response?.[1] || response;\n    const isServiceResponse =\n      typeof updatedResponse.cancelled === 'boolean' ||\n      typeof updatedResponse.error === 'boolean' ||\n      typeof updatedResponse.fulfilled === 'boolean' ||\n      typeof updatedResponse.pending === 'boolean';\n\n    const { pending, fulfilled, error, cancelled, message } = (isServiceResponse && updatedResponse) || {};\n\n    if (id !== null) {\n      idList.push(id);\n      updatedResponse.id = id;\n    }\n\n    if (cancelled) {\n      cancelledByList.push(updatedResponse);\n      cancelledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        cancelledById[id] = cancelledByList[cancelledByList.length - 1];\n        cancelledDataById[id] =\n          cancelledByList[cancelledByList.length - 1]?.data || cancelledByList[cancelledByList.length - 1];\n      }\n    }\n\n    if (error) {\n      errorByList.push({\n        ...updatedResponse,\n        ...new Error(message || `Error: useSelectorsAllResponse${(id && `, ${id}`) || ''}`)\n      });\n      errorDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        errorById[id] = errorByList[errorByList.length - 1];\n        errorDataById[id] = errorByList[errorByList.length - 1]?.data || errorByList[errorByList.length - 1];\n      }\n    }\n\n    if (fulfilled) {\n      fulfilledByList.push(updatedResponse);\n      fulfilledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        fulfilledById[id] = fulfilledByList[fulfilledByList.length - 1];\n        fulfilledDataById[id] =\n          fulfilledByList[fulfilledByList.length - 1]?.data || fulfilledByList[fulfilledByList.length - 1];\n      }\n    }\n\n    if (pending) {\n      pendingByList.push(updatedResponse);\n    }\n\n    if (id !== null) {\n      responsesById[id] = updatedResponse;\n      dataById[id] = updatedResponse?.data || updatedResponse;\n    }\n\n    responsesByList.push(updatedResponse);\n    dataByList.push(updatedResponse?.data || updatedResponse);\n  });\n\n  const isById = idList.length !== 0 && idList.length === updatedSelectorResponse.length;\n\n  const response = {\n    responses: {\n      id: responsesById,\n      list: responsesByList\n    },\n    cancelled: false,\n    data: (isById && {}) || [],\n    error: false,\n    fulfilled: false,\n    message: null,\n    pending: false\n  };\n\n  if (typeof customResponse === 'function') {\n    Object.assign(response, {\n      ...customResponse(\n        { ...response, responses: { ...response.responses } },\n        {\n          cancelledById,\n          cancelledByList,\n          cancelledDataById,\n          cancelledDataByList,\n          dataById,\n          dataByList,\n          errorByList,\n          errorById,\n          errorDataById,\n          errorDataByList,\n          fulfilledByList,\n          fulfilledById,\n          fulfilledDataById,\n          fulfilledDataByList,\n          idList,\n          isById,\n          pendingByList,\n          responsesByList,\n          responsesById,\n          updatedSelectorResponse\n        }\n      )\n    });\n\n    return response;\n  }\n\n  if (errorByList.length) {\n    response.message = new Error(errorByList[0]?.message || `useSelectorsResponse, ${JSON.stringify(errorByList[0])}`);\n    response.error = true;\n    response.data = (isById && errorDataById) || errorDataByList;\n    return response;\n  }\n\n  if (pendingByList.length) {\n    response.pending = true;\n    return response;\n  }\n\n  if (cancelledByList.length && cancelledByList.length === responsesByList.length) {\n    response.message = new Error('Cancelled useSelectorsResponse');\n    response.cancelled = true;\n    response.data = (isById && cancelledById) || cancelledByList;\n    return response;\n  }\n\n  if (\n    fulfilledByList.length &&\n    (fulfilledByList.length === responsesByList.length ||\n      cancelledByList.length + fulfilledByList.length === responsesByList.length)\n  ) {\n    response.fulfilled = true;\n    response.data = (isById && dataById) || dataByList;\n    return response;\n  }\n\n  return response;\n};\n\n/**\n * Return a combined selector response using a \"Promise.allSettled\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAllSettledResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    { cancelledByList, errorByList, fulfilledByList, pendingByList, dataById, dataByList, isById }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length + fulfilledByList?.length + cancelledByList?.length === dataByList?.length ||\n      errorByList?.length === dataByList?.length ||\n      fulfilledByList?.length === dataByList?.length ||\n      cancelledByList?.length === dataByList?.length\n    ) {\n      response.fulfilled = true;\n      response.data = (isById && dataById) || dataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.any\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAnyResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length &&\n      (errorByList?.length === responsesByList?.length ||\n        cancelledByList?.length + errorByList?.length === responsesByList?.length)\n    ) {\n      response.message = helpers.aggregatedError(errorByList, 'useSelectorsAnyResponse');\n      response.error = true;\n      response.data = (isById && errorDataById) || errorDataByList;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      response.message = new Error('Cancelled useSelectorsAnyResponse');\n      response.cancelled = true;\n      response.data = (isById && cancelledDataById) || cancelledDataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.race\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsRaceResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (errorByList?.length) {\n      let data = errorDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(errorDataById);\n        data = (keyList?.[0] && errorDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error(\n        errorByList[0]?.message || `useSelectorsRaceResponse, ${JSON.stringify(errorByList[0])}`\n      );\n      response.error = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      let data = cancelledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(cancelledDataById);\n        data = (keyList?.[0] && cancelledDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error('Cancelled useSelectorsRaceResponse');\n      response.cancelled = true;\n      response.data = data;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\nconst reactReduxHooks = {\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n\nexport {\n  reactReduxHooks as default,\n  reactReduxHooks,\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n","import { reactReduxHooks } from './useReactRedux';\n\nconst storeHooks = {\n  reactRedux: reactReduxHooks\n};\n\nexport { storeHooks as default, storeHooks, reactReduxHooks };\n","import _camelCase from 'lodash/camelCase';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Helpers\n * @module ServiceHelpers\n */\n\n/**\n * Pass through generate hash\n */\nconst { generateHash } = helpers;\n\n/**\n * A timeout cancel for function calls.\n *\n * @param {Function} func Callback to be executed or cancelled\n * @param {object} options\n * @param {number} options.timeout Function timeout in milliseconds\n * @param {string} options.errorMessage What the error message will read\n * @returns {Promise<*>}\n */\nconst timeoutFunctionCancel = (func, { timeout = 3000, errorMessage = 'function timeout' } = {}) => {\n  let clearTimer;\n\n  const timer = () =>\n    new Promise((_, reject) => {\n      clearTimer = window.setTimeout(reject, timeout, new Error(errorMessage));\n    });\n\n  const updatedFunc = async () => {\n    const response = await func();\n    window.clearTimeout(clearTimer);\n    return response;\n  };\n\n  const execFunction = () =>\n    Promise.race([timer(), updatedFunc()]).finally(() => {\n      window.clearTimeout(clearTimer);\n    });\n\n  return execFunction();\n};\n\n/**\n * Return objects with the keys camelCased. Normally applied to an array of objects.\n *\n * @param {object|Array|*} obj\n * @returns {object|Array|*}\n */\nconst camelCase = obj => {\n  if (Array.isArray(obj)) {\n    return obj.map(camelCase);\n  }\n\n  if (_isPlainObject(obj)) {\n    const updatedObj = {};\n\n    Object.entries(obj).forEach(([key, val]) => {\n      updatedObj[_camelCase(key)] = camelCase(val);\n    });\n\n    return updatedObj;\n  }\n\n  return obj;\n};\n\n/**\n * Apply data to a callback, pass original data on error.\n *\n * @param {Function} callback\n * @param {Array} data\n * @returns {{data: *, error}}\n */\nconst passDataToCallback = (callback, ...data) => {\n  let error;\n  let updatedData = data;\n\n  try {\n    updatedData = callback(...data);\n  } catch (e) {\n    error = e;\n  }\n\n  return { data: updatedData, error };\n};\n\n/**\n * A callback for schema validation, and after-the-fact casing adjustments.\n *\n * @param {object} options\n * @param {string} options.casing\n * @param {boolean} options.convert\n * @param {string} options.id\n * @param {object|Array} options.response\n * @param {*} options.schema\n * @returns {*|{}}\n */\nconst schemaResponse = ({ casing, convert = true, id = null, response, schema } = {}) => {\n  const { value, error = { details: [] } } = schema?.validate(response, { convert }) || {};\n\n  if (error.details.length && !helpers.TEST_MODE) {\n    console.error(\n      new Error(\n        `Passing original API response. Schema validation failed for ${id || '...'}: ${error.details\n          .map(({ context = {}, message, type }) => `${message}:${type}, ${JSON.stringify(context)}`)\n          .join(', ')}`\n      )\n    );\n  }\n\n  switch (casing) {\n    case 'camel':\n      return camelCase(value);\n    default:\n      return value;\n  }\n};\n\nconst serviceHelpers = {\n  camelCase,\n  generateHash,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n\nexport {\n  serviceHelpers as default,\n  serviceHelpers,\n  camelCase,\n  generateHash,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n","import axios, { CancelToken } from 'axios';\nimport LruCache from 'lru-cache';\nimport { serviceHelpers } from './helpers';\n\n/**\n * Axios config for cancelling, caching, and emulated service calls.\n *\n * @memberof Helpers\n * @module ServiceConfig\n */\n\n/**\n * Set Axios XHR default timeout.\n *\n * @type {number}\n */\nconst globalXhrTimeout = Number.parseInt(process.env.REACT_APP_AJAX_TIMEOUT, 10) || 60000;\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @type {object}\n */\nconst globalCancelTokens = {};\n\n/**\n * Cache Axios service call responses.\n *\n * @type {object}\n */\nconst globalResponseCache = new LruCache({\n  ttl: Number.parseInt(process.env.REACT_APP_AJAX_CACHE, 10) || 30000,\n  max: 100,\n  updateAgeOnGet: true\n});\n\n// ToDo: consider another way of hashing cacheIDs. base64 could get a little large depending on settings, i.e. md5\n/**\n * Set Axios configuration. This includes response schema validation and caching.\n * Call platform \"getUser\" auth method, and apply service config. Service configuration\n * includes the ability to cancel all and specific calls, cache and normalize a response\n * based on both a provided schema and a successful API response. The cache will refresh\n * its timeout on continuous calls. To reset it a user will either need to refresh the\n * page or wait the \"maxAge\".\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @param {object} options\n * @param {string} options.cancelledMessage\n * @param {object} options.responseCache\n * @param {number} options.xhrTimeout\n * @returns {Promise<*>}\n */\nconst axiosServiceCall = async (\n  config = {},\n  { cancelledMessage = 'cancelled request', responseCache = globalResponseCache, xhrTimeout = globalXhrTimeout } = {}\n) => {\n  const updatedConfig = {\n    timeout: xhrTimeout,\n    ...config,\n    cache: undefined,\n    cacheResponse: config.cache,\n    method: config.method || 'get'\n  };\n  const responseTransformers = [];\n  const axiosInstance = axios.create();\n\n  // don't cache responses if \"get\" isn't used\n  updatedConfig.cacheResponse = updatedConfig.cacheResponse === true && updatedConfig.method === 'get';\n\n  // account for alterations to transforms, and other config props\n  const cacheId = (updatedConfig.cacheResponse === true && serviceHelpers.generateHash(updatedConfig)) || null;\n\n  // simple check to place responsibility on consumer, primarily used for testing\n  if (updatedConfig.exposeCacheId === true) {\n    updatedConfig.cacheId = cacheId;\n  }\n\n  if (updatedConfig.cancel === true) {\n    const cancelTokensId =\n      updatedConfig.cancelId || serviceHelpers.generateHash({ ...updatedConfig, data: undefined, params: undefined });\n\n    if (globalCancelTokens[cancelTokensId]) {\n      await globalCancelTokens[cancelTokensId].cancel(cancelledMessage);\n    }\n\n    globalCancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = globalCancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  if (updatedConfig.cacheResponse === true) {\n    const cachedResponse = responseCache.get(cacheId);\n\n    if (cachedResponse) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          ...cachedResponse,\n          status: 304,\n          statusText: 'Not Modified',\n          config: adapterConfig\n        });\n\n      return axiosInstance(updatedConfig);\n    }\n  }\n\n  if (updatedConfig.schema) {\n    responseTransformers.push(updatedConfig.schema);\n  }\n\n  if (updatedConfig.transform) {\n    responseTransformers.push(updatedConfig.transform);\n  }\n\n  responseTransformers.forEach(([successTransform, errorTransform]) => {\n    const transformers = [undefined, response => Promise.reject(response)];\n\n    if (successTransform) {\n      transformers[0] = response => {\n        const updatedResponse = { ...response };\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          successTransform,\n          updatedResponse.data,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.data = data;\n        }\n\n        return updatedResponse;\n      };\n    }\n\n    if (errorTransform) {\n      transformers[1] = response => {\n        const updatedResponse = { ...(response.response || response) };\n\n        if (updatedResponse?.message === cancelledMessage) {\n          return Promise.reject(updatedResponse);\n        }\n\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          errorTransform,\n          updatedResponse?.data || updatedResponse?.message,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.response = { ...updatedResponse, data };\n        }\n\n        return Promise.reject(updatedResponse);\n      };\n    }\n\n    axiosInstance.interceptors.response.use(...transformers);\n  });\n\n  if (updatedConfig.cacheResponse === true) {\n    axiosInstance.interceptors.response.use(\n      response => {\n        const updatedResponse = { ...response };\n        responseCache.set(cacheId, updatedResponse);\n        return updatedResponse;\n      },\n      response => Promise.reject(response)\n    );\n  }\n\n  if (typeof updatedConfig.url === 'function') {\n    const emulateCallback = updatedConfig.url;\n    updatedConfig.url = '/emulated';\n\n    let message = 'success, emulated';\n    let emulatedResponse;\n    let isSuccess = true;\n\n    try {\n      emulatedResponse = await serviceHelpers.timeoutFunctionCancel(emulateCallback, { timeout: xhrTimeout });\n    } catch (e) {\n      isSuccess = false;\n      message = e.message || e;\n    }\n\n    if (isSuccess) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          data: emulatedResponse,\n          status: 200,\n          statusText: message,\n          config: adapterConfig\n        });\n    } else {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.reject({ // eslint-disable-line\n          ...new Error(message),\n          message,\n          status: 418,\n          config: adapterConfig\n        });\n    }\n  }\n\n  return axiosInstance(updatedConfig);\n};\n\nconst serviceConfig = { axiosServiceCall, globalXhrTimeout, globalCancelTokens, globalResponseCache };\n\nexport {\n  serviceConfig as default,\n  serviceConfig,\n  axiosServiceCall,\n  globalXhrTimeout,\n  globalCancelTokens,\n  globalResponseCache\n};\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\n\n/**\n * @memberof Platform\n * @module PlatformSchemas\n */\n\n/**\n * Extend Joi with date.\n *\n * @type {*}\n */\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * User response item.\n *\n * @type {*} Joi schema\n */\nconst userResponseSchema = Joi.object()\n  .keys({\n    identity: Joi.object({\n      user: Joi.object({\n        is_org_admin: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({}),\n    entitlements: Joi.object({\n      [process.env.REACT_APP_UI_NAME]: Joi.object({\n        is_entitled: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({})\n  })\n  .unknown(true)\n  .default({});\n\n/**\n * Permissions response item.\n *\n * @type {*} Joi schema\n */\nconst permissionsItem = Joi.object({\n  permission: Joi.string().optional().allow(null),\n  resourceDefinitions: Joi.array().optional().default([])\n})\n  .unknown(true)\n  .default();\n\n/**\n * Authorize response.\n *\n * @type {*} Joi schema\n */\nconst permissionsResponseSchema = Joi.array().items(permissionsItem).default([]);\n\nconst platformSchemas = {\n  user: response => schemaResponse({ response, schema: userResponseSchema, id: 'User auth' }),\n  permissions: response => schemaResponse({ response, schema: permissionsResponseSchema, id: 'Permissions auth' })\n};\n\nexport { platformSchemas as default, platformSchemas };\n","import { rbacConfig } from '../../config';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES\n} from './platformConstants';\nimport { helpers } from '../../common';\n\n/**\n * Transform platform responses. Replaces selector usage.\n *\n * @memberof Platform\n * @module PlatformTransformers\n */\n\n/**\n * Parse platform getUser response.\n *\n * @param {object} response\n * @returns {object}\n */\nconst user = response => {\n  const updatedResponse = {};\n  const {\n    [platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY]: identity = {},\n    [platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]: entitlements = {}\n  } = response || {};\n\n  updatedResponse.isAdmin =\n    identity?.[platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]?.[\n      platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n    ] || false;\n\n  updatedResponse.isEntitled =\n    entitlements?.[helpers.UI_NAME]?.[platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED] ||\n    false;\n\n  return updatedResponse;\n};\n\n/**\n * Parse platform getUserPermissions response.\n *\n * @param {object} response\n * @param {object} options\n * @param {object} options.config Pass in a configuration object, RBAC\n * @returns {object}\n */\nconst userPermissions = (response, { config = rbacConfig } = {}) => {\n  const updatedResponse = {\n    permissions: {},\n    authorized: {}\n  };\n\n  response?.forEach(\n    ({\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n    }) => {\n      const [app = '', resource, operation] = permission?.split(':') || [];\n\n      if (!updatedResponse.permissions[app]) {\n        updatedResponse.permissions[app] = {\n          all: false,\n          resources: {}\n        };\n      }\n\n      if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n        updatedResponse.permissions[app].all = true;\n      }\n\n      if (resource) {\n        updatedResponse.permissions[app].resources[resource] ??= {};\n\n        if (operation) {\n          updatedResponse.permissions[app].resources[resource][operation] = definitions;\n        }\n      }\n    }\n  );\n\n  // Alias specific app permissions checks\n  Object.entries(config).forEach(([key, { permissions: resourcePermissions }]) => {\n    updatedResponse.authorized[key] = updatedResponse.permissions[key]?.all || false;\n\n    resourcePermissions.forEach(({ resource: res, operation: op }) => {\n      if (updatedResponse.permissions[key]?.resources?.[res]?.[op]) {\n        updatedResponse.authorized[key] = true;\n      }\n    });\n  });\n\n  return updatedResponse;\n};\n\nconst platformTransformers = {\n  user,\n  permissions: userPermissions\n};\n\nexport { platformTransformers as default, platformTransformers, user, userPermissions };\n","import _set from 'lodash/set';\nimport { rbacConfig } from '../../config';\nimport { axiosServiceCall } from '../common/serviceConfig';\nimport { platformSchemas } from './platformSchemas';\nimport { platformTransformers } from './platformTransformers';\nimport { helpers } from '../../common';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES\n} from './platformConstants';\n\n/**\n * Emulated service calls for platform globals.\n *\n * @memberof Platform\n * @module PlatformServices\n */\n\n/**\n * Basic user authentication.\n *\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUser = async (options = {}) => {\n  const { schema = [platformSchemas.user], transform = [platformTransformers.user] } = options;\n  const { insights } = window;\n  return axiosServiceCall({\n    url: async () => {\n      try {\n        return (\n          (helpers.DEV_MODE &&\n            _set(\n              {},\n              [\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n              ],\n              process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n            )) ||\n          (await insights.chrome.auth.getUser())\n        );\n      } catch (e) {\n        throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n      }\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUserPermissions = (appName = Object.keys(rbacConfig), options = {}) => {\n  const { schema = [platformSchemas.permissions], transform = [platformTransformers.permissions] } = options;\n  const updatedAppName = (Array.isArray(appName) && appName) || [appName];\n  const { insights } = window;\n  const platformMethod = name =>\n    (helpers.DEV_MODE && [\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_ONE\n      },\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_TWO\n      }\n    ]) ||\n    insights.chrome.getUserPermissions(name);\n\n  return axiosServiceCall({\n    url: async () => {\n      let userPermissions;\n\n      try {\n        const allPermissions = await Promise.all(updatedAppName.map(name => platformMethod(name)));\n\n        if (Array.isArray(allPermissions)) {\n          userPermissions = [...allPermissions.flat()];\n        }\n      } catch (e) {\n        throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n      }\n\n      return userPermissions;\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Disables the Platform's global filter display.\n *\n * @param {boolean} isHidden\n * @returns {Promise<*>}\n */\nconst hideGlobalFilter = async (isHidden = true) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.hideGlobalFilter(isHidden);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = {\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter\n};\n\nexport { platformServices as default, platformServices, getUser, getUserPermissions, hideGlobalFilter };\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platform/platformServices';\n\n/**\n * Platform service wrappers for dispatch, state update.\n *\n * @memberof Actions\n * @module PlatformActions\n */\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Get an emulated and combined API response from the platforms \"getUser\" and \"getUserPermissions\" global methods.\n *\n * @param {string|Array} appName\n * @returns {Function}\n */\nconst authorizeUser = appName => dispatch =>\n  dispatch({\n    type: platformTypes.PLATFORM_USER_AUTH,\n    payload: Promise.all([platformServices.getUser(), platformServices.getUserPermissions(appName)])\n  });\n\n/**\n * Hide platform global filter.\n *\n * @param {boolean} isHidden\n * @returns {{Function}}\n */\nconst hideGlobalFilter = isHidden => ({\n  type: platformTypes.PLATFORM_GLOBAL_FILTER_HIDE,\n  payload: platformServices.hideGlobalFilter(isHidden)\n});\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter\n};\n","import { axiosServiceCall } from './common/serviceConfig';\nimport { platformServices } from './platform/platformServices';\n\n/**\n * @namespace Services\n * @property {module} Helpers\n * @property {module} Platform\n * @property {module} Rhsm\n * @property {module} User\n */\n\n/**\n * Apply a global custom service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  ...passedConfig\n});\n\n/**\n * Use a global Axios configuration.\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n  return axiosServiceCall(serviceConfig(config));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\nimport { rhsmConstants } from './rhsmConstants';\n\n/**\n * @memberof Rhsm\n * @module RhsmSchemas\n */\n\n/**\n * Extend Joi with date.\n *\n * @type {*}\n */\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * Error response item.\n *\n * @type {*} Joi schema\n */\nconst errorItem = Joi.object({\n  code: Joi.string().default(null),\n  detail: Joi.string().default(null)\n}).unknown(true);\n\n/**\n * Error response.\n *\n * @type {*} Joi schema\n */\nconst errorResponseSchema = Joi.object()\n  .keys({\n    errors: Joi.array().items(errorItem).default([])\n  })\n  .unknown(true);\n\nconst linksSchema = Joi.object();\n\n/**\n * RHSM base response meta field.\n *\n * @type {*} Joi schema\n */\nconst metaResponseSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0),\n    product: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_PRODUCT_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Capacity response meta field.\n *\n * @type {*} Joi schema\n */\nconst capacityMetaSchema = metaResponseSchema\n  .keys({\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Capacity response item.\n *\n * @type {*} Joi schema\n */\nconst capacityItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  has_infinite_quantity: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Capacity response.\n *\n * @type {*} Joi schema\n */\nconst capacityResponseSchema = Joi.object().keys({\n  data: Joi.array().items(capacityItem).default([]),\n  links: linksSchema.default({}),\n  meta: capacityMetaSchema.default({})\n});\n\n/**\n * Guests response meta field.\n *\n * @type {*} Joi schema\n */\nconst guestsMetaSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0)\n  })\n  .unknown(true);\n\n/**\n * Guests response item.\n *\n * @type {*} Joi schema\n */\nconst guestsItem = Joi.object({\n  inventory_id: Joi.string().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Guests response.\n *\n * @type {*} Joi schema\n */\nconst guestsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(guestsItem).default([]),\n  links: linksSchema.default({}),\n  meta: guestsMetaSchema.default({})\n});\n\n/**\n * Hosts response meta field.\n *\n * @type {*} Joi schema\n */\nconst hostsMetaSchema = metaResponseSchema;\n\n/**\n * Hosts response item.\n *\n * @type {*} Joi schema\n */\nconst hostsItem = Joi.object({\n  cloud_provider: Joi.string().lowercase().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  hardware_type: Joi.string().lowercase().optional().allow(null),\n  inventory_id: Joi.string().optional().allow(null),\n  measurement_type: Joi.string().lowercase().optional().allow(null),\n  number_of_guests: Joi.number().integer().default(0),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Hosts response.\n *\n * @type {*} Joi schema\n */\nconst hostsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(hostsItem).default([]),\n  links: linksSchema.default({}),\n  meta: hostsMetaSchema.default({})\n});\n\n/**\n * Instances response meta field.\n *\n * @type {*} Joi schema\n */\nconst instancesMetaSchema = metaResponseSchema\n  .keys({\n    measurements: Joi.array()\n      .items(Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)))\n      .default([])\n  })\n  .unknown(true);\n\n/**\n * Instances response item.\n *\n * @type {*} Joi schema\n */\nconst instancesItem = Joi.object({\n  instance_id: Joi.string().optional().allow(null),\n  category: Joi.string().lowercase().optional().allow(null),\n  cloud_provider: Joi.string().lowercase().optional().allow(null, ''),\n  display_name: Joi.string().optional().allow(null),\n  billing_provider: Joi.string().lowercase().optional().allow(null, ''),\n  billing_account_id: Joi.string().optional().allow(null),\n  measurements: Joi.array().default([]),\n  number_of_guests: Joi.number().integer().default(0),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Instances response.\n *\n * @type {*} Joi schema\n */\nconst instancesResponseSchema = Joi.object().keys({\n  data: Joi.array().items(instancesItem).default([]),\n  links: linksSchema.default({}),\n  meta: instancesMetaSchema.default({})\n});\n\n/**\n * Subscriptions response meta field.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsMetaSchema = metaResponseSchema\n  .keys({\n    subscription_type: Joi.string().valid(null, ...Object.values(rhsmConstants.RHSM_API_RESPONSE_SUBSCRIPTION_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Subscriptions response item.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsItem = Joi.object({\n  has_infinite_quantity: Joi.boolean().optional().allow(null),\n  next_event_date: Joi.date().utc().allow(null),\n  product_name: Joi.string().optional().allow(null),\n  quantity: Joi.number().allow(null).default(0),\n  service_level: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_SLA_TYPES)),\n  total_capacity: Joi.number().allow(null).default(0),\n  uom: Joi.string()\n    .lowercase()\n    .valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_UOM_TYPES))\n})\n  .unknown(true)\n  .default();\n\n/**\n * Subscriptions response.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(subscriptionsItem).default([]),\n  links: linksSchema.default({}),\n  meta: subscriptionsMetaSchema.default({})\n});\n\n/**\n * Tally and capacity metric response item.\n *\n * @type {*} Joi schema\n */\nconst tallyItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Tally response meta field.\n *\n * @type {*} Joi schema\n */\nconst tallyMetaSchema = metaResponseSchema\n  .keys({\n    has_cloudigrade_data: Joi.boolean().optional().allow(null),\n    has_cloudigrade_mismatch: Joi.boolean().optional().allow(null),\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)),\n    total_monthly: tallyItem\n  })\n  .unknown(true);\n\n/**\n * Tally response.\n *\n * @type {*} Joi schema\n */\nconst tallyResponseSchema = Joi.object().keys({\n  data: Joi.array().items(tallyItem).default([]),\n  links: linksSchema.default({}),\n  meta: tallyMetaSchema.default({})\n});\n\nconst rhsmSchemas = {\n  capacity: response => schemaResponse({ response, schema: capacityResponseSchema, id: 'RHSM capacity' }),\n  errors: response => schemaResponse({ response, schema: errorResponseSchema, id: 'RHSM errors' }),\n  guests: response => schemaResponse({ response, schema: guestsResponseSchema, id: 'RHSM guests' }),\n  hosts: response => schemaResponse({ response, schema: hostsResponseSchema, id: 'RHSM hosts' }),\n  instances: response => schemaResponse({ response, schema: instancesResponseSchema, id: 'RHSM instances' }),\n  subscriptions: response =>\n    schemaResponse({ response, schema: subscriptionsResponseSchema, id: 'RHSM subscriptions' }),\n  tally: response => schemaResponse({ response, schema: tallyResponseSchema, id: 'RHSM tally' })\n};\n\nexport { rhsmSchemas as default, rhsmSchemas };\n","import moment from 'moment';\nimport {\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES as HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES as INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES as TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES as TALLY_CAPACITY_META_TYPES,\n  rhsmConstants\n} from './rhsmConstants';\nimport { dateHelpers } from '../../common';\n\n/**\n * Transform RHSM responses. Replaces selector usage.\n *\n * @memberof Rhsm\n * @module RhsmTransformers\n */\n\n/**\n * Parse RHSM hosts response for caching.\n *\n * @param {object} response\n * @returns {object}\n */\nconst rhsmHosts = response => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n\n  updatedResponse.data = data.map(\n    ({\n      [HOSTS_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      [HOSTS_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      ...dataResponse\n    }) => ({\n      [HOSTS_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      [HOSTS_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      numberOfGuests,\n      subscriptionManagerId,\n      ...dataResponse\n    })\n  );\n\n  updatedResponse.meta = {\n    count: meta[HOSTS_META_TYPES.COUNT],\n    productId: meta[HOSTS_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * ToDO: remove the UOM fallback if/when the API supports returning some form of the UOM in the response\n * This is a temporary fix that passes the selected _uom from params in the event the API doesn't\n * include it.\n */\n/**\n * Parse RHSM instances response for caching.\n *\n * @param {object} response\n * @param {object} config\n * @param {object} config.params\n * @returns {object}\n */\nconst rhsmInstances = (response, { params } = {}) => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const metaMeasurements = meta[INSTANCES_META_TYPES.MEASUREMENTS];\n\n  updatedResponse.data = data.map(\n    ({\n      [INSTANCES_DATA_TYPES.MEASUREMENTS]: measurements,\n      [INSTANCES_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      ...dataResponse\n    }) => {\n      const updatedData = {\n        [INSTANCES_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n        numberOfGuests,\n        ...dataResponse\n      };\n\n      metaMeasurements?.forEach((measurement, index) => {\n        updatedData[measurement] = measurements[index];\n      });\n\n      return updatedData;\n    }\n  );\n\n  let normalizedUom = meta?.[INSTANCES_META_TYPES.UOM] ?? params?.[INSTANCES_META_TYPES.UOM];\n\n  if (normalizedUom?.toLowerCase() === RHSM_API_PATH_METRIC_TYPES.SOCKETS.toLowerCase()) {\n    normalizedUom = RHSM_API_PATH_METRIC_TYPES.SOCKETS;\n  } else if (normalizedUom?.toLowerCase() === RHSM_API_PATH_METRIC_TYPES.CORES.toLowerCase()) {\n    normalizedUom = RHSM_API_PATH_METRIC_TYPES.CORES;\n  }\n\n  updatedResponse.meta = {\n    count: meta[INSTANCES_META_TYPES.COUNT],\n    uom: normalizedUom,\n    productId: meta[INSTANCES_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * ToDo: Confirm category meta response for Capacity\n * We're temporarily applying category from submitted params. API docs indicate\n * category only comes through on metric capacity?\n */\n/**\n * Parse RHSM tally response for caching.\n *\n * @param {object} response\n * @param {object} config\n * @param {boolean} config._isCapacity\n * @param {object} config.params\n * @returns {object}\n */\nconst rhsmTallyCapacity = (response, { _isCapacity, params } = {}) => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const currentDate = moment.utc(dateHelpers.getCurrentDate());\n  const currentDateStr = moment.utc(dateHelpers.getCurrentDate()).format('MM-D-YYYY');\n  let futureDateCount = 0;\n\n  updatedResponse.data = data.map(\n    (\n      {\n        [TALLY_CAPACITY_DATA_TYPES.DATE]: date,\n        [TALLY_CAPACITY_DATA_TYPES.VALUE]: value,\n        [TALLY_CAPACITY_DATA_TYPES.HAS_DATA]: hasData,\n        [TALLY_CAPACITY_DATA_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity\n      },\n      index\n    ) => {\n      const updatedDate = moment.utc(date);\n      const isCurrentDate = updatedDate.format('MM-D-YYYY') === currentDateStr;\n      const isFutureDate = updatedDate.diff(currentDate) > 0;\n\n      if (isFutureDate && !isCurrentDate) {\n        futureDateCount += 1;\n      }\n\n      return {\n        x: index,\n        y:\n          (_isCapacity === true && isFutureDate) ||\n          (_isCapacity === true && hasInfiniteQuantity === true) ||\n          (!_isCapacity && hasData === false && isFutureDate) ||\n          (!_isCapacity && hasData === false && isCurrentDate)\n            ? null\n            : value,\n        date,\n        hasData,\n        hasInfiniteQuantity,\n        isCurrentDate,\n        isFutureDate\n      };\n    }\n  );\n\n  /**\n   * Add an extra date to the first entry of the range to help Victory charts display.\n   */\n  if (futureDateCount === updatedResponse.data.length - 1) {\n    updatedResponse.data = [\n      {\n        ...updatedResponse.data[0],\n        x: 0,\n        isCurrentDate: false\n      },\n      ...updatedResponse.data\n    ].map((props, index) => ({ ...props, x: index }));\n  }\n\n  updatedResponse.meta = {\n    category: params?.[RHSM_API_QUERY_SET_TYPES.CATEGORY],\n    count: meta[TALLY_CAPACITY_META_TYPES.COUNT],\n    cloudigradeHasMismatch: meta?.[TALLY_CAPACITY_META_TYPES.HAS_CLOUDIGRADE_MISMATCH],\n    metricId: meta[TALLY_CAPACITY_META_TYPES.METRIC_ID],\n    productId: meta[TALLY_CAPACITY_META_TYPES.PRODUCT],\n    totalMonthlyDate: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.DATE],\n    totalMonthlyHasData: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.HAS_DATA],\n    totalMonthlyValue: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.VALUE]\n  };\n\n  return updatedResponse;\n};\n\nconst rhsmTransformers = {\n  hosts: rhsmHosts,\n  instances: rhsmInstances,\n  tallyCapacity: rhsmTallyCapacity\n};\n\nexport { rhsmTransformers as default, rhsmTransformers, rhsmHosts, rhsmInstances, rhsmTallyCapacity };\n","import { RHSM_API_QUERY_SET_TYPES } from './rhsmConstants';\n\n/**\n * @memberof Rhsm\n * @module RhsmHelpers\n */\n\n/**\n * ToDo: remove filterArchitectureVariant when the API supports architecture, variant params\n */\n/**\n * Patch for returning a made up API architecture, variant param as a product ID\n *\n * @param {string} id\n * @param {object} params\n * @returns {string}\n */\nconst filterArchitectureVariant = (id, params = {}) => {\n  const updatedId = id;\n\n  if (params?.[RHSM_API_QUERY_SET_TYPES.VARIANT]?.length) {\n    return params?.[RHSM_API_QUERY_SET_TYPES.VARIANT];\n  }\n\n  return updatedId;\n};\n\nconst rhsmHelpers = {\n  filterArchitectureVariant\n};\n\nexport { rhsmHelpers as default, rhsmHelpers, filterArchitectureVariant };\n","import { serviceCall } from '../config';\nimport { rhsmSchemas } from './rhsmSchemas';\nimport { helpers } from '../../common';\nimport { rhsmTransformers } from './rhsmTransformers';\nimport { rhsmHelpers } from './rhsmHelpers';\n\n/**\n * RHSM API service calls.\n *\n * @memberof Rhsm\n * @module RhsmServices\n */\n\n/**\n * ToDo: remove rhsmHelpers.filterArchitectureVariant\n * We're using a temporary helper to emulate a param for architectures and/or variants.\n * When the api supports architecture and variant query params this needs to be refactored.\n */\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getApiVersion = (options = {}) => {\n  const { cache = false, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {string} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {string} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {object} links\n * @apiSuccess {object} meta\n * @apiSuccess {string} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {string} meta.product\n * - RHEL\n * @apiSuccess {number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 12\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 4\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000.057890,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"has_cloudigrade_data\": true,\n *           \"has_cloudigrade_mismatch\": true,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\",\n *         \"total_core_hours\": 30500.04,\n *         \"total_instance_hours\": 35\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.20,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.15,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.11,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.32,\n *           \"instance_hours\": 23\n *         },\n *         {\n *           \"date\": \"2020-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.42,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 999.06,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\",\n *         \"total_core_hours\": 200.03,\n *         \"total_instance_hours\": 26\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 400,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\",\n *         \"total_core_hours\": 2050.04\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @deprecated The graph reports Tally call is replaced by independent Tally and Capacity metric calls.\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Sockets Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Sockets\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Cores Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Cores\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Transfer-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Transfer-gibibytes\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 1024,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibyte\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibyte-months Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibyte-months\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Instance-hours Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 1000000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 1000000,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Instance-hours\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2000,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n */\n/* Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of identifiers to update a dotenv url path\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getGraphTally = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.tally, rhsmSchemas.errors],\n    transform = [rhsmTransformers.tallyCapacity]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_TALLY}`;\n  updatedId.forEach((value, index) => {\n    let updatedValue = value;\n    if (index === 0) {\n      updatedValue = rhsmHelpers.filterArchitectureVariant(value, params);\n    }\n\n    url = url.replace(`{${index}}`, updatedValue);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id/:metric_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 100,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 100,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"product\": \"RHEL\",\n *         \"metric_id\": \"Sockets\",\n *         \"granularity\": \"daily\",\n *         \"service_level\": \"\",\n *         \"usage\": \"\",\n *         \"category\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of identifiers to update a dotenv url path\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.capacity, rhsmSchemas.errors],\n    transform = [rhsmTransformers.tallyCapacity]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}`;\n  updatedId.forEach((value, index) => {\n    let updatedValue = value;\n    if (index === 0) {\n      updatedValue = rhsmHelpers.filterArchitectureVariant(value, params);\n    }\n\n    url = url.replace(`{${index}}`, updatedValue);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform,\n    _isCapacity: true\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 500\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-123456789012\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.05,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 70,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6N\",\n *           \"cloud_provider\": \"AZURE\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.00,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"CLOUD\",\n *           \"measurement_type\": \"CLOUD\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6M\",\n *           \"cores\": 4,\n *           \"core_hours\": 1000.20,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 10,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"display_name\": \"dolor.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6L\",\n *           \"cores\": 4,\n *           \"core_hours\": 1001.60,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 1,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"display_name\": \"lorem.test.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YX\",\n *           \"cores\": 4,\n *           \"core_hours\": 999.60,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"display_name\": \"lorem.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YZ\",\n *           \"cores\": 0,\n *           \"core_hours\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"display_name\": \"lorem.another.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YA\",\n *           \"cores\": 0,\n *           \"core_hours\": 0.01,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-21T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YB\",\n *           \"cores\": 0,\n *           \"core_hours\": 999.61,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-22T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YC\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-23T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YD\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-24T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YEE\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-26T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YF\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-29T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 11\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @deprecated The Hosts inventory response is being replaced in favor of the Instances inventory response.\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.hosts, rhsmSchemas.errors],\n    transform = [rhsmTransformers.hosts]\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @deprecated The Hosts inventory guest response is being replaced in favor of the Instances inventory guest response.\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = false,\n    cancelId,\n    schema = [rhsmSchemas.guests, rhsmSchemas.errors],\n    transform = []\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', updatedId),\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/instances/:instance_id/guests Get RHSM instances/systems table/inventory guests data\n * @apiDescription Retrieve instances/systems table/inventory guests data.\n *\n * Reference [RHSM for instances guests](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/instances/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/instances/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/instances/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API instances table/inventory guests data.\n *\n * @param {string} id Instance ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getInstancesInventoryGuests = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = false,\n    cancelId,\n    schema = [rhsmSchemas.guests, rhsmSchemas.errors],\n    transform = []\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_INSTANCES_GUESTS.replace('{0}', updatedId),\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 750\n * @api {get} /api/rhsm-subscriptions/v1/instances/products/:product_id Get RHSM instances table/inventory data\n * @apiDescription Retrieve instances table/inventory data.\n *\n * Reference [RHSM for instances table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"category\": \"physical\",\n *           \"billing_account_id\": \"xxxxx-xxxx-CCCCC-xxxx-xxxx10\",\n *           \"instance_id\": \"CCCCC-b344-4778-831c-CCCCCCC\",\n *           \"subscription_manager_id\": \"CCCCC-5b00-42fa-CCCCC-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              200,\n *              10,\n *              500.0000345678,\n *              200\n *           ],\n *           \"last_seen\": \"2022-12-03T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"virtual\",\n *           \"billing_account_id\": \"xxxxx-xxxx-FFFFF-xxxx-xxxx40\",\n *           \"instance_id\": \"FFFFF-b344-4778-831c-FFFFF\",\n *           \"subscription_manager_id\": \"FFFFF-5b00-42fa-FFFFF-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              200,\n *              10,\n *              500.0000345678,\n *              200\n *           ],\n *           \"last_seen\": \"2022-10-03T00:00:00Z\"\n *         },\n *         {\n *           \"number_of_guests\": 70,\n *           \"category\": \"cloud\",\n *           \"billing_provider\": \"red hat\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx01\",\n *           \"instance_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"display_name\": \"rhv.example.com\",\n *           \"measurements\": [\n *              42,\n *              10,\n *              0.000003563,\n *              1\n *           ],\n *           \"last_seen\": \"2022-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"cloud\",\n *           \"billing_provider\": \"azure\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx02\",\n *           \"instance_id\": \"XXXXXX-b344-4778-831c-XXXXXXXX\",\n *           \"subscription_manager_id\": \"XXXXXX-5b00-42fa-XXXX-75801d45cc6d\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"measurements\": [\n *              20,\n *              100,\n *              null,\n *              1000\n *           ],\n *           \"last_seen\": \"2022-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"physical\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx03\",\n *           \"instance_id\": \"BBBBB-b344-4778-831c-BBBBBBB\",\n *           \"subscription_manager_id\": \"BBBBB-5b00-42fa-BBBBB-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              4000,\n *              50,\n *              10000.0000345678,\n *              3000\n *           ],\n *           \"last_seen\": \"2022-04-03T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 5,\n *         \"measurements\": [\n *           \"Instance-hours\",\n *           \"Sockets\",\n *           \"Storage-gibibyte-months\",\n *           \"Transfer-gibibytes\"\n *         ],\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"Premium\",\n *         \"usage\": \"Production\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API instances data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getInstancesInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.instances, rhsmSchemas.errors],\n    transform = [rhsmTransformers.instances]\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_INSTANCES}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 0\n * @api {get} /api/rhsm-subscriptions/v1/subscriptions/products/:product_id Get RHSM subscriptions table/inventory data\n * @apiDescription Retrieve subscriptions table/inventory data.\n *\n * Reference [RHSM for subscriptions table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"sku\": \"RH00011\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)\",\n *           \"billing_provider\": \"red hat\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" },\n *              { \"id\": \"ipsum\", \"number\": \"1234567890\" },\n *              { \"id\": \"lorem\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 1,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"sku\": \"RH00010\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server\",\n *           \"billing_provider\": \"azure\",\n *           \"service_level\": \"Self-Support\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [],\n *           \"next_event_date\": \"2020-04-02T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 15,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"sku\": \"RH00009\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium\",\n *           \"billing_provider\": \"Unknown\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription End\",\n *           \"quantity\": 3000,\n *           \"physical_capacity\": 2,\n *           \"virtual_capacity\": 2,\n *           \"total_capacity\": 4,\n *           \"uom\": \"Cores\",\n *           \"has_infinite_quantity\": false\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3,\n *         \"subscription_type\": \"On-demand\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API subscriptions data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getSubscriptionsInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.subscriptions, rhsmSchemas.errors],\n    transform = []\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_SUBSCRIPTIONS}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\nconst rhsmServices = {\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getInstancesInventoryGuests,\n  getSubscriptionsInventory\n};\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getInstancesInventoryGuests,\n  getSubscriptionsInventory\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsm/rhsmServices';\nimport { generateChartIds } from '../../components/graphCard/graphCardHelpers';\n\n/**\n * RHSM service wrappers for dispatch, state update.\n *\n * @memberof Actions\n * @module RhsmActions\n */\n\n/**\n * Get a RHSM response from multiple Tally, or Capacity, IDs and metrics.\n *\n * @param {object|Array} idMetric An object, or an Array of objects, in the form of { id: PRODUCT_ID, metric: METRIC_ID, isCapacity: boolean }\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphMetrics =\n  (idMetric = {}, query = {}, options = {}) =>\n  dispatch => {\n    const { cancelId = 'graphTally' } = options;\n    const multiMetric = (Array.isArray(idMetric) && idMetric) || [idMetric];\n    const multiDispatch = [];\n\n    multiMetric.forEach(({ id, metric, isCapacity, query: metricQuery }) => {\n      const methodService = isCapacity ? rhsmServices.getGraphCapacity : rhsmServices.getGraphTally;\n      const methodType = isCapacity ? rhsmTypes.GET_GRAPH_CAPACITY_RHSM : rhsmTypes.GET_GRAPH_TALLY_RHSM;\n      const methodCancelId = isCapacity ? 'graphCapacity' : cancelId;\n      const generatedId = generateChartIds({ isCapacity, metric, productId: id, query: metricQuery });\n\n      multiDispatch.push({\n        type: methodType,\n        payload: methodService(\n          [id, metric],\n          { ...query, ...metricQuery },\n          {\n            cancelId: `${methodCancelId}_${generatedId}`\n          }\n        ),\n        meta: {\n          id: generatedId,\n          query: { ...query, ...metricQuery },\n          notifications: {}\n        }\n      });\n    });\n\n    return Promise.all(dispatch(multiDispatch));\n  };\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @deprecated The Hosts API is being replaced in favor of the Instances API response.\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n      payload: rhsmServices.getHostsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @deprecated The Hosts API is being replaced in favor of the Instances API response.\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n      payload: rhsmServices.getHostsInventoryGuests(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get an instances response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getInstancesInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM,\n      payload: rhsmServices.getInstancesInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get an instance guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getInstancesInventoryGuests =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_INSTANCES_INVENTORY_GUESTS_RHSM,\n      payload: rhsmServices.getInstancesInventoryGuests(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a subscriptions response from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getSubscriptionsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM,\n      payload: rhsmServices.getSubscriptionsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\nconst rhsmActions = {\n  getGraphMetrics,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getInstancesInventoryGuests,\n  getSubscriptionsInventory\n};\n\nexport {\n  rhsmActions as default,\n  rhsmActions,\n  getGraphMetrics,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getInstancesInventoryGuests,\n  getSubscriptionsInventory\n};\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'iso-639-1';\nimport { serviceCall } from '../config';\nimport { helpers } from '../../common';\n\n/**\n * User, and RHSM, calls for locale and Opt-In.\n *\n * @memberof User\n * @module UserServices\n */\n\n/**\n * ToDo: Review moving the getLocale function under platformServices.\n * Also review using window.navigator.language as the primary pull for language.\n */\n/**\n * Return a browser locale, or fallback towards the platform locale cookie\n *\n * @returns {Promise<*>}\n */\nconst getLocale = () => {\n  const defaultLang = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n  const parseLang = value => {\n    const key = (value && LocaleCode.getName(value.split('-')[0])) || null;\n    return (key && { value, key }) || undefined;\n  };\n\n  return serviceCall({\n    url: async () => {\n      const cookieLang = await (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace(\n        '_',\n        '-'\n      );\n\n      return parseLang(cookieLang) || defaultLang;\n    }\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = (options = {}) => {\n  const { cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport { userServices as default, userServices, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/user/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * User, and RHSM, service wrappers for dispatch, state update.\n *\n * @memberof Actions\n * @module UserActions\n */\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_LOCALE,\n    payload: userServices.getLocale()\n  });\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn =\n  (query = {}) =>\n  dispatch =>\n    dispatch({\n      type: userTypes.UPDATE_USER_OPTIN,\n      payload: userServices.updateAccountOptIn(query),\n      meta: {\n        query,\n        notifications: {\n          rejected: {\n            variant: 'danger',\n            title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsErrorDescription'),\n            dismissable: true\n          },\n          fulfilled: {\n            variant: 'success',\n            title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsSuccessDescription'),\n            dismissable: true,\n            autoDismiss: false\n          }\n        }\n      }\n    });\n\nconst userActions = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport { userActions as default, userActions, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Graph/Chart related API and user state reducer.\n *\n * @memberof Reducers\n * @module GraphReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}, tally: {}, capacity: {}}}\n */\nconst initialState = {\n  capacity: {},\n  legend: {},\n  reportCapacity: {},\n  tally: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          [action.id]: action.value\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'capacity', type: rhsmTypes.GET_GRAPH_CAPACITY_RHSM },\n          { ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM },\n          { ref: 'tally', type: rhsmTypes.GET_GRAPH_TALLY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { inventoryTypes } from '../types';\n\n/**\n * Inventory, and tabs, related API and user state reducer.\n *\n * @memberof Reducers\n * @module InventoryReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{subscriptionsInventory: {}, instancesGuests: {}, instancesInventory: {}, tabs: {}, hostsInventory: {},\n *     hostsGuests: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {},\n  instancesInventory: {},\n  instancesGuests: {},\n  subscriptionsInventory: {},\n  tabs: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system and subscriptions inventory to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inventoryTypes.SET_INVENTORY_TAB:\n      return reduxHelpers.setStateProp(\n        'tabs',\n        {\n          ...action.tabs\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case inventoryTypes.CLEAR_INVENTORY_GUESTS:\n      return reduxHelpers.setStateProp(\n        'instancesGuests',\n        {\n          [action.id]: {}\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n          { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM },\n          { ref: 'instancesInventory', type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM },\n          { ref: 'instancesGuests', type: rhsmTypes.GET_INSTANCES_INVENTORY_GUESTS_RHSM },\n          { ref: 'subscriptionsInventory', type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Banner messages related API state reducer.\n *\n * @memberof Reducers\n * @module MessagesReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{report: {}}}\n */\nconst initialState = {\n  bannerMessages: {}\n};\n\n/**\n * Generated daily observer/reducer for messages to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst messagesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.message.SET_BANNER_MESSAGES:\n      return reduxHelpers.setStateProp(\n        'bannerMessages',\n        {\n          [action.viewId]: action.bannerMessages\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nmessagesReducer.initialState = initialState;\n\nexport { messagesReducer as default, initialState, messagesReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Toolbar related user state reducer.\n *\n * @memberof Reducers\n * @module ToolbarReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, platformTypes, userTypes } from '../types';\nimport { rhsmConstants } from '../../services/rhsm/rhsmConstants';\nimport { reduxHelpers } from '../common';\n\n/**\n * User related API, platform and user state reducer.\n *\n * @memberof Reducers\n * @module UserReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{auth: {}, optin: {}, locale: null, errors: {}}}\n */\nconst initialState = {\n  auth: {},\n  errors: {},\n  locale: {},\n  optin: {}\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(reduxHelpers.getDataFromResults(action), [rhsmConstants.RHSM_API_RESPONSE_ERRORS], []);\n\n        return reduxHelpers.setStateProp(\n          'errors',\n          {\n            error: true,\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            data: errorCodes.map(value => value[rhsmConstants.RHSM_API_RESPONSE_ERRORS_TYPES.CODE]),\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'locale', type: userTypes.USER_LOCALE },\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'auth', type: platformTypes.PLATFORM_USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { productConfig } from '../../config';\nimport { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * View query related user state reducer.\n *\n * @memberof Reducers\n * @module ViewReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{product: {}, graphTallyQuery: {}, inventoryHostsQuery: {}, inventorySubscriptionsQuery: {},\n *     query: {}, productConfig: {}, inventoryGuestsQuery: {}}}\n */\nconst initialState = {\n  query: {},\n  graphTallyQuery: {},\n  inventoryGuestsQuery: {},\n  inventoryHostsQuery: {},\n  inventorySubscriptionsQuery: {},\n  product: {},\n  productConfig: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.app.SET_PRODUCT_VARIANT_QUERY_RESET_ALL:\n      const updateVariantResetQueries = (query = {}, id) => {\n        const queryIds =\n          productConfig.sortedConfigs().byGroupIdConfigs[id]?.map(({ viewId }) => viewId) || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          delete updatedQuery[queryId];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          query: updateVariantResetQueries(state.query, action.productGroup),\n          graphTallyQuery: updateVariantResetQueries(state.graphTallyQuery, action.productGroup),\n          inventoryGuestsQuery: updateVariantResetQueries(state.inventoryGuestsQuery, action.productGroup),\n          inventoryHostsQuery: updateVariantResetQueries(state.inventoryHostsQuery, action.productGroup),\n          inventorySubscriptionsQuery: updateVariantResetQueries(state.inventorySubscriptionsQuery, action.productGroup)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST:\n      const updateResetQueries = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n\n          delete productQuery[RHSM_API_QUERY_TYPES.DIRECTION];\n          delete productQuery[RHSM_API_QUERY_TYPES.SORT];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateResetQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateResetQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updateClearQueries = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateClearQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateClearQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST:\n      const updateClearGuestQuery = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryGuestsQuery: updateClearGuestQuery(state.inventoryGuestsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [action.filter]: action.value\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'graphTallyQuery',\n        {\n          [action.viewId]: {\n            ...state.graphTallyQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.START_DATE]: action[RHSM_API_QUERY_TYPES.START_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.END_DATE]: action[RHSM_API_QUERY_TYPES.END_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.BILLING_PROVIDER]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: action[RHSM_API_QUERY_TYPES.BILLING_PROVIDER]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: action[RHSM_API_QUERY_TYPES.DISPLAY_NAME]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.app.SET_PRODUCT:\n      return reduxHelpers.setStateProp(\n        'product',\n        {\n          config: action.config\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.app.SET_PRODUCT_VARIANT:\n      return reduxHelpers.setStateProp(\n        'product',\n        {\n          variant: {\n            ...state?.product?.variant,\n            [action.productGroup]: action.variant\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport messagesReducer from './messagesReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  messages: messagesReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  messagesReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { platformConstants as platformApiTypes } from '../../services/platform/platformConstants';\n\n/**\n * @memberof Middleware\n * @module ActionRecordMiddleware\n */\n\n/**\n * Modify actions' payload for privacy.\n *\n * @param {object} action\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeActionHeaders = ({ payload, ...action }) => {\n  if (payload) {\n    let updatedPayload = { ...payload, headers: {} };\n\n    if (Array.isArray(payload)) {\n      updatedPayload = payload.map(({ headers, ...obj }) => ({ ...obj, headers: {} }));\n    }\n\n    return { payload: updatedPayload, ...action };\n  }\n\n  return { ...action };\n};\n\n/**\n * Modify actions' payload data for privacy.\n *\n * @param {object} action\n * @param {string} action.type\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeData = ({ type, payload, ...action }) => {\n  const removeUserIdentity = obj => {\n    if (obj?.data?.user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]) {\n      return {\n        ...obj,\n        data: {\n          ...obj.data,\n          user: {\n            ...obj.data.user,\n            [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]: {\n              ...obj.data.user[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY],\n              [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]: {}\n            }\n          }\n        }\n      };\n    }\n\n    return undefined;\n  };\n\n  const updatedPayload = removeUserIdentity(payload) || payload;\n  const updatedAction = removeUserIdentity(action) || action;\n\n  if (updatedPayload) {\n    return { type, payload: updatedPayload, ...updatedAction };\n  }\n\n  return { type, ...updatedAction };\n};\n\n/**\n * Return existing sessionStorage log.\n *\n * @param {string} id\n * @param {number} limit\n * @returns {Array}\n */\nconst getActions = (id, limit) => {\n  const { sessionStorage } = window;\n  const item = sessionStorage.getItem(id);\n  let parsedItems = (item && (JSON.parse(item) || {})?.actions) || [];\n\n  if (parsedItems?.length && limit > 0) {\n    parsedItems = parsedItems.slice(limit * -1);\n  }\n\n  return parsedItems;\n};\n\n/**\n * Store actions against an id in sessionStorage.\n *\n * @param {object} action\n * @param {object} config\n * @param {number} config.id\n * @param {number} config.limit\n */\nconst recordAction = (action, { id, limit, ...config }) => {\n  const { navigator, sessionStorage } = window;\n  const items = getActions(id, limit) || [];\n  const priorItem = items[items.length - 1];\n  const updatedAction = sanitizeData(sanitizeActionHeaders(action));\n  const actionObj = {\n    diff: 0,\n    timestamp: Date.now(),\n    action: updatedAction\n  };\n\n  if (priorItem && priorItem.timestamp) {\n    actionObj.diff = actionObj.timestamp - priorItem.timestamp;\n  }\n\n  items.push(actionObj);\n  sessionStorage.setItem(\n    id,\n    JSON.stringify({\n      browser: navigator.userAgent,\n      timestamp: new Date().toLocaleString(),\n      ...config,\n      actions: items\n    })\n  );\n};\n\n/**\n * Expose settings and record middleware.\n *\n * @param {object} config\n * @returns {Function}\n */\nconst actionRecordMiddleware =\n  (config = {}) =>\n  () =>\n  next =>\n  action => {\n    recordAction(action, {\n      id: 'actionRecordMiddleware/v1',\n      limit: 100,\n      ...config\n    });\n\n    return next(action);\n  };\n\nexport { actionRecordMiddleware as default, actionRecordMiddleware };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { actionRecordMiddleware } from './actionRecordMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  actionRecordMiddleware({\n    id: process.env.REACT_APP_UI_LOGGER_ID,\n    app: { version: process.env.REACT_APP_UI_VERSION }\n  }),\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * @memberof Middleware\n * @module StatusMiddleware\n */\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @param {string} config.statusSuffix\n * @param {string} config.rangeSuffix\n * @param {string} config.rangeFiller\n * @param {string} config.statusDelimiter\n * @param {boolean} config.statusRange\n * @param {boolean} config.dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * @memberof Middleware\n * @module MultiActionMiddleware\n */\n\n/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Redux store setup.\n *\n * @memberof Redux State\n * @module Store\n */\n\n/**\n * Create a Redux store.\n *\n * @type {{graph: object, notifications: Array, toolbar: object, inventory: object, user: object, view: object,\n *     messages: object}}\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","/**\n * @memberof Types\n * @module AppTypes\n */\n\nconst STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\nconst SET_PRODUCT = 'SET_PRODUCT';\nconst SET_PRODUCT_VARIANT = 'SET_PRODUCT_VARIANT';\nconst SET_PRODUCT_VARIANT_QUERY_RESET_ALL = 'SET_PRODUCT_VARIANT_QUERY_RESET_ALL';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, SET_PRODUCT_VARIANT: string, SET_PRODUCT_VARIANT_QUERY_RESET_ALL: string,\n *     SET_PRODUCT: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX,\n  SET_PRODUCT,\n  SET_PRODUCT_VARIANT,\n  SET_PRODUCT_VARIANT_QUERY_RESET_ALL\n};\n\nexport {\n  appTypes as default,\n  appTypes,\n  STATUS_4XX,\n  STATUS_5XX,\n  SET_PRODUCT,\n  SET_PRODUCT_VARIANT,\n  SET_PRODUCT_VARIANT_QUERY_RESET_ALL\n};\n","/**\n * @memberof Types\n * @module GraphTypes\n */\n\nconst SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","/**\n * @memberof Types\n * @module InventoryTypes\n */\n\nconst CLEAR_INVENTORY_GUESTS = 'CLEAR_INVENTORY_GUESTS';\nconst SET_INVENTORY_TAB = 'SET_INVENTORY_TAB';\n\n/**\n * Inventory action, reducer types.\n *\n * @type {{CLEAR_INVENTORY_GUESTS: string, SET_INVENTORY_TAB: string}}\n */\nconst inventoryTypes = {\n  CLEAR_INVENTORY_GUESTS,\n  SET_INVENTORY_TAB\n};\n\nexport { inventoryTypes as default, inventoryTypes, CLEAR_INVENTORY_GUESTS, SET_INVENTORY_TAB };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\n/**\n * @memberof Types\n * @module PlatformTypes\n */\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_GLOBAL_FILTER_HIDE = 'PLATFORM_GLOBAL_FILTER_HIDE';\nconst PLATFORM_USER_AUTH = 'PLATFORM_USER_AUTH';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_USER_AUTH: string, PLATFORM_GLOBAL_FILTER_HIDE: string, PLATFORM_CLEAR_NOTIFICATIONS: string,\n *     PLATFORM_ADD_NOTIFICATION: string, PLATFORM_REMOVE_NOTIFICATION: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_USER_AUTH\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_USER_AUTH\n};\n","import { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * @memberof Types\n * @module QueryTypes\n */\n\nconst SET_QUERY = 'SET_QUERY';\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\nconst SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST = 'SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST';\nconst SET_QUERY_RESET_INVENTORY_LIST = 'SET_QUERY_RESET_INVENTORY_LIST';\n\n/**\n * Query types associated with across ALL queries.\n */\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.BILLING_PROVIDER}`,\n  [RHSM_API_QUERY_TYPES.END_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.END_DATE}`,\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.START_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.START_DATE}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\n/**\n * Inventory query types associated with only GUESTS' queries.\n */\nconst SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Inventory query types associated with only HOSTS' and INSTANCES' queries.\n */\nconst SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DISPLAY_NAME}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Inventory query types associated with only SUBSCRIPTIONS' queries.\n */\nconst SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES: object, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES: object, SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string,\n *     SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES: object, SET_QUERY: string, SET_QUERY_RESET_INVENTORY_LIST: string,\n *     SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST: string}}\n */\nconst queryTypes = {\n  SET_QUERY,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n","/**\n * @memberof Types\n * @module ToolbarTypes\n */\n\nconst SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","/**\n * @memberof Types\n * @module UserTypes\n */\n\nconst DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_LOCALE: string, GET_USER_OPTIN: string,\n *     UPDATE_USER_OPTIN: string, DELETE_USER_OPTIN: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { inventoryTypes } from './inventoryTypes';\nimport { messageTypes } from './messageTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  inventory: inventoryTypes,\n  message: messageTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  inventoryTypes,\n  messageTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","/**\n * @memberof Types\n * @module MessageTypes\n */\n\nconst SET_BANNER_MESSAGES = 'SET_BANNER_MESSAGES';\n\n/**\n * User action, reducer types.\n *\n * @type {{SET_BANNER_MESSAGES: string}}\n */\nconst messageTypes = { SET_BANNER_MESSAGES };\n\nexport { messageTypes as default, messageTypes, SET_BANNER_MESSAGES };\n","/**\n * @memberof Types\n * @module RhsmTypes\n */\n\nconst GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_GRAPH_TALLY_RHSM = 'GET_GRAPH_TALLY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\nconst GET_INSTANCES_INVENTORY_RHSM = 'GET_INSTANCES_INVENTORY_RHSM';\nconst GET_INSTANCES_INVENTORY_GUESTS_RHSM = 'GET_INSTANCES_INVENTORY_GUESTS_RHSM';\nconst GET_SUBSCRIPTIONS_INVENTORY_RHSM = 'GET_SUBSCRIPTIONS_INVENTORY_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_HOSTS_INVENTORY_GUESTS_RHSM: string,\n *     GET_GRAPH_CAPACITY_RHSM: string, GET_INSTANCES_INVENTORY_GUESTS_RHSM: string, GET_SUBSCRIPTIONS_INVENTORY_RHSM: string,\n *     GET_HOSTS_INVENTORY_RHSM: string, GET_INSTANCES_INVENTORY_RHSM: string, GET_GRAPH_TALLY_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_INSTANCES_INVENTORY_GUESTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_INSTANCES_INVENTORY_GUESTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n","/**\n * @memberof Platform\n * @module PlatformConstants\n */\n\n/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string, RESOURCE_DEFS: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\n// ToDo: clean up this app name piece, these facets come through the helpers and src/config/rbac.json\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\nconst platformConstants = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformConstants as default,\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","/**\n * @memberof Rhsm\n * @module RhsmConstants\n */\n\n/**\n * RHSM path IDs for product RHEL variants.\n *\n * @type {{RHEL_ARM: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string, RHEL_X86: string}}\n */\nconst RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES = {\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86'\n};\n\n/**\n * RHSM path IDs for product Satellite variants.\n *\n * @type {{SATELLITE_SERVER: string, SATELLITE_CAPSULE: string}}\n */\nconst RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES = {\n  SATELLITE_CAPSULE: 'Satellite Capsule',\n  SATELLITE_SERVER: 'Satellite Server'\n};\n\n/**\n * RHSM path IDs for products.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string, RHODS: string, ROSA: string,\n *     RHEL_X86: string, RHEL_COMPUTE_NODE: string, OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string,\n *     RHEL_DESKTOP: string, SATELLITE_CAPSULE: string, RHEL: string, RHEL_SERVER: string, RHEL_IBM_Z: string,\n *     RHEL_IBM_POWER: string, RHACS: string}}\n */\nconst RHSM_API_PATH_PRODUCT_TYPES = {\n  ...RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES,\n  ...RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHACS: 'rhacs',\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHODS: 'rhods',\n  ROSA: 'rosa',\n  OPENSHIFT: 'OpenShift Container Platform',\n  OPENSHIFT_METRICS: 'OpenShift-metrics',\n  OPENSHIFT_DEDICATED_METRICS: 'OpenShift-dedicated-metrics',\n  SATELLITE: 'Satellite'\n};\n\n/**\n * RHSM path IDs for metrics.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     TRANSFER_GIBIBYTES: string, CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string}}\n */\nconst RHSM_API_PATH_METRIC_TYPES = {\n  CORES: 'Cores',\n  SOCKETS: 'Sockets',\n  CORE_SECONDS: 'Core-seconds',\n  INSTANCE_HOURS: 'Instance-hours',\n  STORAGE_GIBIBYTES: 'Storage-gibibytes',\n  STORAGE_GIBIBYTE_MONTHS: 'Storage-gibibyte-months',\n  TRANSFER_GIBIBYTES: 'Transfer-gibibytes'\n};\n\n/**\n * RHSM response data type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_DATA = 'data';\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response general meta types.\n *\n * @type {{PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  PRODUCT: 'product'\n};\n\n/**\n * RHSM response errors type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERRORS = 'errors';\n\n/**\n * RHSM response errors types.\n *\n * @type {{CODE: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_TYPES = {\n  CODE: 'code'\n};\n\n/**\n * RHSM response error codes.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response Hosts DATA types.\n *\n * @type {{MEASUREMENT_TYPE: string, CORES: string, CORE_HOURS: string, HARDWARE_TYPE: string,\n *     SUBSCRIPTION_MANAGER_ID: string, INSTANCE_HOURS: string, SOCKETS: string, INVENTORY_ID: string, NUMBER_OF_GUESTS: string,\n *     DISPLAY_NAME: string, CLOUD_PROVIDER: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_HOSTS_DATA_TYPES = {\n  CORE_HOURS: 'core_hours',\n  CORES: 'cores',\n  CLOUD_PROVIDER: 'cloud_provider',\n  DISPLAY_NAME: 'display_name',\n  HARDWARE_TYPE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT_TYPE: 'measurement_type',\n  NUMBER_OF_GUESTS: 'number_of_guests',\n  SOCKETS: 'sockets',\n  SUBSCRIPTION_MANAGER_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response Hosts META types.\n *\n * @type {{PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_HOSTS_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES\n};\n\n/**\n * FixMe: Appears we combined future guests used with instances. Investigate moving \"INVENTORY_ID\" and \"SUBSCRIPTION_MANAGER_ID\".\n * They're current associated with \"hosts\" guests. Need to also determine if this is something that needs to be added to \"instances\"\n * or if keeping them added to guests only is enough.\n */\n/**\n * RHSM response Instance DATA types.\n *\n * @type {{MEASUREMENTS: string, BILLING_ACCOUNT_ID: string, CATEGORY: string, SUBSCRIPTION_MANAGER_ID: string,\n *     INVENTORY_ID: string, NUMBER_OF_GUESTS: string, BILLING_PROVIDER: string, DISPLAY_NAME: string, CLOUD_PROVIDER: string,\n *     INSTANCE_ID: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_DATA_TYPES = {\n  BILLING_PROVIDER: 'billing_provider',\n  BILLING_ACCOUNT_ID: 'billing_account_id',\n  CLOUD_PROVIDER: 'cloud_provider',\n  CATEGORY: 'category',\n  DISPLAY_NAME: 'display_name',\n  INSTANCE_ID: 'instance_id',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENTS: 'measurements',\n  NUMBER_OF_GUESTS: 'number_of_guests',\n  SUBSCRIPTION_MANAGER_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response Instances META types.\n *\n * @type {{MEASUREMENTS: string, UOM: string, PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  MEASUREMENTS: 'measurements',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Subscriptions DATA types.\n *\n * @type {{BILLING_ACCOUNT_ID: string, QUANTITY: string, SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string,\n *     NUMBER_OF_GUESTS: string, HAS_INFINITE_QUANTITY: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string, DISPLAY_NAME: string, MEASUREMENTS: string, UOM: string, CATEGORY: string,\n *     NEXT_EVENT_DATE: string, BILLING_PROVIDER: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES = {\n  ...RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  HAS_INFINITE_QUANTITY: 'has_infinite_quantity',\n  NEXT_EVENT_DATE: 'next_event_date',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Subscriptions META types.\n *\n * @type {{PRODUCT: string, SUBSCRIPTION_TYPE: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  SUBSCRIPTION_TYPE: 'subscription_type'\n};\n\n/**\n * RHSM response Tally DATA types.\n *\n * @type {{DATE: string, HAS_DATA: string, VALUE: string, HAS_INFINITE_QUANTITY: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES = {\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_DATA: 'has_data',\n  HAS_INFINITE_QUANTITY: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response Tally META types.\n *\n * @type {{TOTAL_MONTHLY: string, DATE: string, PRODUCT: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string, VALUE: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data',\n  METRIC_ID: 'metric_id',\n  TOTAL_MONTHLY: 'total_monthly'\n};\n\n/**\n * RHSM response, query parameters for GRANULARITY.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_RESPONSE_GRANULARITY_TYPES = {\n  DAILY: 'Daily',\n  WEEKLY: 'Weekly',\n  MONTHLY: 'Monthly',\n  QUARTERLY: 'Quarterly'\n};\n\n/**\n * ToDo: Activate available provider type as it becomes available 202205\n * (just uncomment)\n */\n/**\n * RHSM response, query parameters for BILLING_PROVIDER\n *\n * @type {{AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string, ORACLE: string}}\n */\nconst RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES = {\n  RED_HAT: 'red hat',\n  AWS: 'aws'\n  // GCP: 'gcp',\n  // AZURE: 'azure',\n  // ORACLE: 'oracle',\n  // NONE: ''\n};\n\n/**\n * RHSM response, query parameters for SLA.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_RESPONSE_SLA_TYPES = {\n  PREMIUM: 'Premium',\n  STANDARD: 'Standard',\n  SELF: 'Self-Support',\n  NONE: ''\n};\n\n/**\n * RHSM response, general parameters for subscription types\n *\n * @type {{ANNUAL: string, ON_DEMAND: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTION_TYPES = {\n  ANNUAL: 'Annual',\n  ON_DEMAND: 'On-demand'\n};\n\n/**\n * RHSM response, query parameters for UOM.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_RESPONSE_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM response, query parameters for USAGE.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_RESPONSE_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\n/**\n * RHSM query/search parameter CATEGORY type values for TALLY/CAPACITY.\n *\n * @type {{CLOUD: string, PHYSICAL: string, ON_DEMAND: string, HYPERVISOR: string, PREPAID: string, VIRTUAL: string}}\n */\nconst RHSM_API_QUERY_CATEGORY_TYPES = {\n  CLOUD: 'cloud',\n  HYPERVISOR: 'hypervisor',\n  ON_DEMAND: 'on-demand',\n  PHYSICAL: 'physical',\n  PREPAID: 'prepaid',\n  VIRTUAL: 'virtual'\n};\n\nconst RHSM_API_QUERY_GRANULARITY_TYPES = RHSM_API_RESPONSE_GRANULARITY_TYPES;\n\n/**\n * ToDo: Remove RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES once hosts is fully deprecated\n * These sort params are focused on the hosts api.\n */\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, INSTANCE_HOURS: string, SOCKETS: string, MEASUREMENT: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES = {\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  HARDWARE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for general inventory displays.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, CATEGORY: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     NUMBER_OF_GUESTS: string, TRANSFER_GIBIBYTES: string, BILLING_PROVIDER: string, CORE_SECONDS: string,\n *     STORAGE_GIBIBYTE_MONTHS: string, LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_TYPES = {\n  ...RHSM_API_PATH_METRIC_TYPES,\n  BILLING_PROVIDER: 'billing_provider',\n  CATEGORY: 'category',\n  LAST_SEEN: 'last_seen',\n  NAME: 'display_name',\n  NUMBER_OF_GUESTS: 'number_of_guests'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string,\n *     TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES = {\n  NEXT_EVENT_DATE: 'next_event_date',\n  NEXT_EVENT_TYPE: 'next_event_type',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SKU: 'sku',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  USAGE: 'usage'\n};\n\nconst RHSM_API_QUERY_BILLING_PROVIDER_TYPES = RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES;\n\nconst RHSM_API_QUERY_SLA_TYPES = RHSM_API_RESPONSE_SLA_TYPES;\n\nconst RHSM_API_QUERY_UOM_TYPES = RHSM_API_RESPONSE_UOM_TYPES;\n\nconst RHSM_API_QUERY_USAGE_TYPES = RHSM_API_RESPONSE_USAGE_TYPES;\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{BILLING_ACCOUNT_ID: string, DIRECTION: string, END_DATE: string, SLA: string, LIMIT: string, START_DATE: string,\n *     VARIANT: string, DISPLAY_NAME: string, UOM: string, USAGE: string, CATEGORY: string, SORT: string, OFFSET: string,\n *     BILLING_PROVIDER: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  BILLING_PROVIDER: 'billing_provider',\n  BILLING_ACCOUNT_ID: 'billing_account_id',\n  CATEGORY: 'category',\n  DIRECTION: 'dir',\n  DISPLAY_NAME: 'display_name_contains',\n  END_DATE: 'ending',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  START_DATE: 'beginning',\n  UOM: 'uom',\n  USAGE: 'usage',\n  VARIANT: 'variant'\n};\n\n/**\n * RHSM query parameter options for TALLY, CAPACITY endpoints.\n *\n * @type {{GRANULARITY: string, USAGE: string, CATEGORY: string, END_DATE: string, SLA: string,\n *     START_DATE: string, BILLING_PROVIDER: string, VARIANT: string, USE_RUNNING_TOTALS_FORMAT: string,\n *     BILLING_CATEGORY: string}}\n */\nconst RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES = {\n  BILLING_CATEGORY: 'billing_category',\n  BILLING_PROVIDER: 'billing_provider',\n  CATEGORY: 'category',\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage',\n  USE_RUNNING_TOTALS_FORMAT: 'use_running_totals_format',\n  VARIANT: 'variant'\n};\n\n/**\n * Aggregate all query set types.\n *\n * @type {{GRANULARITY: string, BILLING_ACCOUNT_ID: string, DIRECTION: string, END_DATE: string, SLA: string,\n *     LIMIT: string, START_DATE: string, VARIANT: string, DISPLAY_NAME: string, USE_RUNNING_TOTALS_FORMAT: string,\n *     BILLING_CATEGORY: string, UOM: string, USAGE: string, CATEGORY: string, SORT: string, OFFSET: string,\n *     BILLING_PROVIDER: string}}\n */\nconst RHSM_API_QUERY_SET_TYPES = {\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES\n};\n\n/**\n * Product display types.\n *\n * @type {{CAPACITY: string, LEGACY: string, DUAL_AXES: string, PARTIAL: string, HOURLY: string}}\n */\nconst RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES = {\n  DUAL_AXES: 'dual-axes',\n  HOURLY: 'hourly',\n  LEGACY: 'legacy',\n  PARTIAL: 'partial',\n  CAPACITY: 'capacity'\n};\n\n/**\n * RHSM constants.\n *\n * @type {{RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, CATEGORY: string, END_DATE: string,\n *     SLA: string, START_DATE: string, BILLING_PROVIDER: string, VARIANT: string, USE_RUNNING_TOTALS_FORMAT: string,\n *     BILLING_CATEGORY: string}, RHSM_API_RESPONSE_DATA: string, RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES: {PRODUCT: string,\n *     SUBSCRIPTION_TYPE: string, COUNT: string}, RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES: {SATELLITE_SERVER: string,\n *     SATELLITE_CAPSULE: string}, RHSM_API_PATH_METRIC_TYPES: {CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string,\n *     INSTANCE_HOURS: string, TRANSFER_GIBIBYTES: string, CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string},\n *     RHSM_API_RESPONSE_INSTANCES_META_TYPES: {MEASUREMENTS: string, UOM: string, PRODUCT: string, COUNT: string},\n *     RHSM_API_RESPONSE_INSTANCES_DATA_TYPES: {MEASUREMENTS: string, BILLING_ACCOUNT_ID: string, CATEGORY: string,\n *     SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string, NUMBER_OF_GUESTS: string, BILLING_PROVIDER: string, DISPLAY_NAME: string,\n *     CLOUD_PROVIDER: string, INSTANCE_ID: string, LAST_SEEN: string}, RHSM_API_RESPONSE_SLA_TYPES: {PREMIUM: string, SELF: string,\n *     NONE: string, STANDARD: string}, RHSM_API_RESPONSE_HOSTS_META_TYPES: {PRODUCT: string, COUNT: string},\n *     RHSM_API_RESPONSE_META_TYPES: {PRODUCT: string, COUNT: string}, RHSM_API_RESPONSE_ERRORS_CODE_TYPES: {GENERIC: string,\n *     OPTIN: string}, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *     RHSM_API_RESPONSE_UOM_TYPES: {CORES: string, SOCKETS: string}, RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES: {RHEL_ARM: string,\n *     RHEL_IBM_Z: string, RHEL_IBM_POWER: string, RHEL_X86: string},\n *     RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES: {BILLING_ACCOUNT_ID: string, QUANTITY: string, SUBSCRIPTION_MANAGER_ID: string,\n *     INVENTORY_ID: string, NUMBER_OF_GUESTS: string, HAS_INFINITE_QUANTITY: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string, DISPLAY_NAME: string, MEASUREMENTS: string, UOM: string, CATEGORY: string, NEXT_EVENT_DATE: string,\n *     BILLING_PROVIDER: string, LAST_SEEN: string}, RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES: {ASCENDING: string,\n *     DESCENDING: string}, RHSM_API_RESPONSE_SUBSCRIPTION_TYPES: {ANNUAL: string, ON_DEMAND: string},\n *     RHSM_API_QUERY_INVENTORY_SORT_TYPES: {CORES: string, STORAGE_GIBIBYTES: string, CATEGORY: string, SOCKETS: string,\n *     INSTANCE_HOURS: string, NUMBER_OF_GUESTS: string, TRANSFER_GIBIBYTES: string, BILLING_PROVIDER: string, CORE_SECONDS: string,\n *     STORAGE_GIBIBYTE_MONTHS: string, LAST_SEEN: string, NAME: string}, RHSM_API_PATH_PRODUCT_TYPES: {RHEL_ARM: string,\n *     OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string, RHODS: string, ROSA: string, RHEL_X86: string,\n *     RHEL_COMPUTE_NODE: string, OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string,\n *     RHEL_DESKTOP: string, SATELLITE_CAPSULE: string, RHEL: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string,\n *     RHACS: string}, RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES: {AZURE: string, GCP: string, RED_HAT: string, NONE: string,\n *     AWS: string, ORACLE: string}, RHSM_API_RESPONSE_ERRORS_TYPES: {CODE: string},\n *     RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES: {DATE: string, HAS_DATA: string, VALUE: string, HAS_INFINITE_QUANTITY: string},\n *     RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES: {TOTAL_MONTHLY: string, DATE: string, PRODUCT: string,\n *     HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string,\n *     VALUE: string}, RHSM_API_QUERY_BILLING_PROVIDER_TYPES: {AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string,\n *     ORACLE: string}, RHSM_API_QUERY_CATEGORY_TYPES: {CLOUD: string, PHYSICAL: string, ON_DEMAND: string, HYPERVISOR: string,\n *     PREPAID: string, VIRTUAL: string}, RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string,\n *     PRODUCTION: string}, RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_SET_INVENTORY_TYPES: {BILLING_ACCOUNT_ID: string, DIRECTION: string, END_DATE: string, SLA: string, LIMIT: string,\n *     START_DATE: string, VARIANT: string, DISPLAY_NAME: string, UOM: string, USAGE: string, CATEGORY: string, SORT: string,\n *     OFFSET: string, BILLING_PROVIDER: string}, RHSM_API_RESPONSE_HOSTS_DATA_TYPES: {MEASUREMENT_TYPE: string, CORES: string,\n *     CORE_HOURS: string, HARDWARE_TYPE: string, SUBSCRIPTION_MANAGER_ID: string, INSTANCE_HOURS: string, SOCKETS: string,\n *     INVENTORY_ID: string, NUMBER_OF_GUESTS: string, DISPLAY_NAME: string, CLOUD_PROVIDER: string, LAST_SEEN: string},\n *     RHSM_API_RESPONSE_ERRORS: string, RHSM_API_QUERY_UOM_TYPES: {CORES: string, SOCKETS: string}, RHSM_API_RESPONSE_META: string,\n *     RHSM_API_RESPONSE_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *     RHSM_API_QUERY_SET_TYPES: {GRANULARITY: string, BILLING_ACCOUNT_ID: string, DIRECTION: string, END_DATE: string, SLA: string,\n *     LIMIT: string, START_DATE: string, VARIANT: string, DISPLAY_NAME: string, USE_RUNNING_TOTALS_FORMAT: string,\n *     BILLING_CATEGORY: string, UOM: string, USAGE: string, CATEGORY: string, SORT: string, OFFSET: string, BILLING_PROVIDER: string},\n *     RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES: {QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string,\n *     NEXT_EVENT_DATE: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string},\n *     RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES: {CAPACITY: string, LEGACY: string, DUAL_AXES: string, PARTIAL: string, HOURLY: string},\n *     RHSM_API_RESPONSE_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string, INSTANCE_HOURS: string,\n *     SOCKETS: string, MEASUREMENT: string, LAST_SEEN: string, NAME: string}}}\n */\nconst rhsmConstants = {\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTION_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES\n};\n\nexport {\n  rhsmConstants as default,\n  rhsmConstants,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTION_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES\n};\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var map = {\n\t\"./authentication/authentication.js\": [\n\t\t67719\n\t],\n\t\"./authentication/authenticationContext.js\": [\n\t\t98944\n\t],\n\t\"./bannerMessages/bannerMessages.js\": [\n\t\t87585,\n\t\t7585\n\t],\n\t\"./bannerMessages/bannerMessagesContext.js\": [\n\t\t31824,\n\t\t1824\n\t],\n\t\"./chart/chart.js\": [\n\t\t30211\n\t],\n\t\"./chart/chartAxisLabel.js\": [\n\t\t76395\n\t],\n\t\"./chart/chartContext.js\": [\n\t\t98326\n\t],\n\t\"./chart/chartElements.js\": [\n\t\t54096\n\t],\n\t\"./chart/chartHelpers.js\": [\n\t\t61026\n\t],\n\t\"./chart/chartIcon.js\": [\n\t\t1138\n\t],\n\t\"./chart/chartLegend.js\": [\n\t\t52902\n\t],\n\t\"./chart/chartTooltip.js\": [\n\t\t78213\n\t],\n\t\"./form/checkbox.js\": [\n\t\t34467,\n\t\t6170,\n\t\t7235,\n\t\t2181,\n\t\t1302\n\t],\n\t\"./form/formHelpers.js\": [\n\t\t44044\n\t],\n\t\"./form/select.js\": [\n\t\t49844\n\t],\n\t\"./form/textInput.js\": [\n\t\t18710,\n\t\t8710\n\t],\n\t\"./graphCard/graphCard.js\": [\n\t\t10608,\n\t\t3597,\n\t\t136,\n\t\t1799,\n\t\t5925\n\t],\n\t\"./graphCard/graphCardChart.js\": [\n\t\t91799,\n\t\t3597,\n\t\t136,\n\t\t1799,\n\t\t1339\n\t],\n\t\"./graphCard/graphCardChartLegend.js\": [\n\t\t64418,\n\t\t3597,\n\t\t136,\n\t\t4418\n\t],\n\t\"./graphCard/graphCardChartTitleTooltip.js\": [\n\t\t99171,\n\t\t3597,\n\t\t136,\n\t\t939\n\t],\n\t\"./graphCard/graphCardChartTooltip.js\": [\n\t\t44024,\n\t\t4024\n\t],\n\t\"./graphCard/graphCardContext.js\": [\n\t\t25394,\n\t\t3597,\n\t\t136,\n\t\t5394\n\t],\n\t\"./graphCard/graphCardHelpers.js\": [\n\t\t78139\n\t],\n\t\"./graphCard/graphCardMetricTotals.js\": [\n\t\t29407,\n\t\t3597,\n\t\t136,\n\t\t9407\n\t],\n\t\"./i18n/i18n.js\": [\n\t\t83109\n\t],\n\t\"./i18n/i18nHelpers.js\": [\n\t\t32643\n\t],\n\t\"./inventoryCard/inventoryCard.js\": [\n\t\t76587,\n\t\t5242,\n\t\t6587,\n\t\t2005\n\t],\n\t\"./inventoryCard/inventoryCardContext.js\": [\n\t\t42896,\n\t\t2896\n\t],\n\t\"./inventoryCard/inventoryCardHelpers.js\": [\n\t\t12243,\n\t\t2243\n\t],\n\t\"./inventoryCard/inventoryCardHosts.js\": [\n\t\t83341,\n\t\t5242,\n\t\t6587,\n\t\t9659\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptions.js\": [\n\t\t16696,\n\t\t5242,\n\t\t6587,\n\t\t4629\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptionsContext.js\": [\n\t\t62881,\n\t\t2881\n\t],\n\t\"./inventoryGuests/inventoryGuests.js\": [\n\t\t15242,\n\t\t5242,\n\t\t1858\n\t],\n\t\"./inventoryGuests/inventoryGuestsContext.js\": [\n\t\t23385,\n\t\t3385\n\t],\n\t\"./inventoryTabs/inventoryTab.js\": [\n\t\t80931,\n\t\t931\n\t],\n\t\"./inventoryTabs/inventoryTabs.js\": [\n\t\t69051,\n\t\t9051\n\t],\n\t\"./loader/loader.js\": [\n\t\t1797\n\t],\n\t\"./messageView/messageView.js\": [\n\t\t79719\n\t],\n\t\"./minHeight/minHeight.js\": [\n\t\t91339,\n\t\t353\n\t],\n\t\"./optinView/optinView.js\": [\n\t\t649\n\t],\n\t\"./pageLayout/pageColumns.js\": [\n\t\t5937\n\t],\n\t\"./pageLayout/pageHeader.js\": [\n\t\t58816\n\t],\n\t\"./pageLayout/pageLayout.js\": [\n\t\t52422\n\t],\n\t\"./pageLayout/pageMessages.js\": [\n\t\t54803\n\t],\n\t\"./pageLayout/pageSection.js\": [\n\t\t99781\n\t],\n\t\"./pageLayout/pageToolbar.js\": [\n\t\t89484\n\t],\n\t\"./pagination/pagination.js\": [\n\t\t68900,\n\t\t8900\n\t],\n\t\"./pagination/paginationHelpers.js\": [\n\t\t65020,\n\t\t5020\n\t],\n\t\"./productView/productView.js\": [\n\t\t29175,\n\t\t3597,\n\t\t136,\n\t\t5242,\n\t\t6587,\n\t\t1799,\n\t\t2582\n\t],\n\t\"./productView/productViewContext.js\": [\n\t\t51858,\n\t\t9942\n\t],\n\t\"./productView/productViewMissing.js\": [\n\t\t91233,\n\t\t1233\n\t],\n\t\"./router/index.js\": [\n\t\t94976\n\t],\n\t\"./router/router.js\": [\n\t\t27097\n\t],\n\t\"./router/routerContext.js\": [\n\t\t43301\n\t],\n\t\"./router/routerHelpers.js\": [\n\t\t97712\n\t],\n\t\"./table/table.js\": [\n\t\t78697\n\t],\n\t\"./table/tableEmpty.js\": [\n\t\t30817\n\t],\n\t\"./table/tableSkeleton.js\": [\n\t\t62540\n\t],\n\t\"./tabs/tabs.js\": [\n\t\t70031,\n\t\t31\n\t],\n\t\"./toolbar/toolbar.js\": [\n\t\t92227,\n\t\t3597,\n\t\t136,\n\t\t2227\n\t],\n\t\"./toolbar/toolbarContext.js\": [\n\t\t83280,\n\t\t3597,\n\t\t136,\n\t\t3280\n\t],\n\t\"./toolbar/toolbarFieldBillingProvider.js\": [\n\t\t31663,\n\t\t1663\n\t],\n\t\"./toolbar/toolbarFieldCategory.js\": [\n\t\t93597,\n\t\t3597\n\t],\n\t\"./toolbar/toolbarFieldDisplayName.js\": [\n\t\t89517,\n\t\t9517\n\t],\n\t\"./toolbar/toolbarFieldGranularity.js\": [\n\t\t2738,\n\t\t2738\n\t],\n\t\"./toolbar/toolbarFieldGroupVariant.js\": [\n\t\t12258,\n\t\t2258\n\t],\n\t\"./toolbar/toolbarFieldRangedMonthly.js\": [\n\t\t65876,\n\t\t5876\n\t],\n\t\"./toolbar/toolbarFieldSelectCategory.js\": [\n\t\t70136,\n\t\t3597,\n\t\t136\n\t],\n\t\"./toolbar/toolbarFieldSla.js\": [\n\t\t33267,\n\t\t3267\n\t],\n\t\"./toolbar/toolbarFieldUom.js\": [\n\t\t74097,\n\t\t4097\n\t],\n\t\"./toolbar/toolbarFieldUsage.js\": [\n\t\t49928,\n\t\t9928\n\t],\n\t\"./toolbar/toolbarFieldVariant.js\": [\n\t\t22622,\n\t\t2622\n\t],\n\t\"./tooltip/tooltip.js\": [\n\t\t3969\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 58908;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./product.openshiftContainer.js\": 74925,\n\t\"./product.openshiftDedicated.js\": 1816,\n\t\"./product.openshiftMetrics.js\": 33092,\n\t\"./product.rhacs.js\": 22624,\n\t\"./product.rhel.js\": 79326,\n\t\"./product.rhods.js\": 43016,\n\t\"./product.rosa.js\": 9362,\n\t\"./product.satellite.js\": 36272\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 25264;"],"names":["module","exports","App","_ref","getLocale","useDispatch","useAliasDispatch","useSelector","useAliasSelector","dispatch","value","locale","_ref2","_user$locale","user","data","platformNotifications","useMount","helpers","React","NotificationsPortal","I18n","Authentication","Router","propTypes","PropTypes","defaultProps","reduxActions","storeHooks","memo","func","cacheLimit","arguments","length","undefined","cache","_len","args","Array","_key","key","JSON","stringify","map","arg","toString","keyIndex","indexOf","result","call","unshift","ized","noop","Function","prototype","noopPromise","Promise","resolve","objFreeze","obj","Object","freeze","oIsFunction","hasOwnProp","hasOwnProperty","getOwnPropertyNames","forEach","prop","isFrozen","setImmutableData","isClone","_cloneDeep","PROD_MODE","process","UI_WINDOW_ID","aggregatedError","errors","message","name","AggregateError","Error","window","err","isArray","isEmulated","browserExpose","options","limit","id","generateHash","anyValue","method","cryptoSha1","_isPlainObject","entries","sort","a","b","localeCompare","_ref3","_ref4","concat","generateId","prefix","Math","ceil","random","isDate","date","isPromise","test","numberDisplay","Number","isNaN","numbro","DEV_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DEPLOY_PATH_LINK_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_NOTIFICATIONS","UI_DISABLED_TABLE","UI_DISABLED_TABLE_HOSTS","UI_DISABLED_TABLE_INSTANCES","UI_DISABLED_TABLE_SUBSCRIPTIONS","UI_DISABLED_TOOLBAR","UI_DISABLED_TOOLBAR_GROUP_VARIANT","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_LEARN_MORE","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_LOGGER_FILE","UI_NAME","UI_PATH","UI_VERSION","getCurrentDate","moment","toDate","REACT_APP_DEBUG_DEFAULT_DATETIME","setRangedDateTime","subtract","measurement","endOfMeasurement","startDate","startOf","endDate","endOf","currentDateTime","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","rangedYearDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedMonthDateTime","month","currentYear","parseInt","year","keyDateTimeRanges","listDateTimeRanges","startDateUpdated","endDateUpdated","format","dateTime","titleYear","title","titleIndex","isNextYear","_title","toLowerCase","add","translate","context","push","reverse","isCurrent","current","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","timestampTimeFormats","timeLong","yearTimeLong","timeShort","yearTimeShort","timestampUTCTimeFormats","debugLog","async","sessionStorage","fileName","replace","parse","getItem","fileType","reject","document","navigator","URL","blob","Blob","type","msSaveBlob","anchorTag","createElement","href","createObjectURL","style","display","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","error","downloadData","e","appName","children","isDisabled","t","useGetAuthorization","useAliasGetAuthorization","pending","authorized","errorCodes","errorStatus","isAuthorized","AuthenticationContext","MessageView","Maintenance","description","pageTitle","icon","BinocularsIcon","includes","rhsmConstants","OptinView","NotAuthorized","serviceName","routerHelpers","DEFAULT_CONTEXT","useAuthContext","useContext","_responses$id","_responses$id$errors","authorizeUser","hideGlobalFilter","useChrome","useAliasChrome","useSelectorsResponse","useAliasSelectorsResponse","updateDocumentTitle","fulfilled","responses","selector","auth","_user$errors","app","status","useSession","useAliasAuthContext","Chart","chartLegend","chartTooltip","dataSets","padding","themeColor","xAxisChartLabel","yAxisChartLabel","xAxisFixLabelOverlap","xAxisLabelIncrement","xAxisTickFormat","yAxisTickFormat","xValueFormat","yValueFormat","setContext","useState","dataSetsToggle","setDataSetsToggle","containerRef","useRef","tooltipRef","width","chartWidth","useResizeObserver","useEffect","updatedSettings","chartContainerRef","chartSettings","updateChartSettings","toggledDataSets","filter","tooltipDataSetLookUp","chartHelpers","content","maxX","maxY","individualMaxY","xAxisProps","yAxisProps","isMultiYAxis","chartElementsProps","domain","domainPadding","chartDomain","hasData","tickValues","bottom","left","right","top","chartTooltipRef","ChartContext","className","ref","ChartElements","ChartLegend","x","y","xAxisLabel","Date","animate","chartType","values","ChartTypeVariant","fill","stroke","strokeWidth","strokeDasharray","themeVariant","interpolation","isStacked","xAxisUseDataSet","yAxisUseDataSet","ChartThemeColor","chartAxisLabel","axis","index","text","height","xmlns","useChartContext","useToggleData","useAliasChartContext","contextDataSetsToggle","onHide","useCallback","prevState","onRevert","onToggle","updatedToggle","getIsToggled","chartTypeDefaults","containerComponent","ChartContainer","xAxis","yAxis","chartElements","stackedChartElements","_Object$values$sort","VictoryVoronoiCursorContainer","createContainer","TooltipLabelComponent","cursorDimension","voronoiDimension","labels","labelComponent","ChartCursorTooltip","dx","dy","centerOffset","flyoutStyle","voronoiPadding","mouseFollowTooltips","keys","updatedXAxisProps","label","AxisLabelComponent","axisLabelComponent","ChartAxis","_extends","axisProps","updatedAxisProps","orientation","setChartElement","props","component","Component","elements","stackedElements","duration","ChartStack","isRequired","ChartArea","onLoad","ChartLine","ChartThreshold","area","line","threshold","generateMaxXY","individualDataSetsMaxY","combinedDataSetMaxX","combinedDataSetsMaxY","max","_value$y","dataSetMaxY","_value$y2","generateDomains","updatedChartDomain","updatedPadding","generatedDomain","floored","pow","floor","log10","generateElementsProps","chartTypeVariant","elementsById","stackedElementsById","dataSet","dataColorStroke","updatedProps","datum","xValue","yValue","isMultiAxis","generateTooltipData","_dataSets$","itemsByKey","_data$data","color","mockDatum","tooltip","generateXAxisProps","xAxisPropDefaults","reduce","acc","tickFormat","tick","_data$tick","tickIndex","previousItem","nextItem","item","generateYAxisProps","yAxisPropDefaults","tickLabels","updatedMaxY","generateAxisProps","fixLabelOverlap","xAxisDataSet","yAxisDataSets","slice","dependentAxis","showGrid","getSize","size","parseFloat","ChartIcon","symbol","svgProps","iconProps","fontProps","fontSize","emSvgSize","setIcon","viewBox","role","x1","y1","x2","y2","EyeIcon","EyeSlashIcon","SquareIcon","IconSize","legendProps","chart","hide","revert","toggle","isToggled","marginLeft","marginRight","minChartWidth","getXCoordinate","tooltipWidth","minWidth","getYCoordinate","tooltipHeight","updatedMultiplier","tailPosition","_tooltipDataSetLookUp","_containerRef$current","_containerRef$current2","_tooltipRef$current","containerBounds","querySelector","getBoundingClientRect","tooltipBounds","isOutsideGraphBottom","isOutsideGraphLeft","isOutsideGraphRight","isOutsideGraphTop","updatedClassName","createMockEvent","event","_updatedCurrentTarget","persistEvent","checked","currentTarget","keyCode","persist","target","updatedCurrentTarget","doesNotHaveMinimumCharacters","characters","formHelpers","SplitButtonVariant","action","checkbox","ButtonVariant","PfButtonVariant","SelectButtonVariant","SelectDirection","DropdownDirection","SelectPosition","DropdownPosition","formatOptions","selectField","selectedOptions","variant","domElement","dataAttributes","updatedOptions","isSelectedOptionsStringNumber","activateOptions","updateSelected","option","convertedOption","textContent","isSelected","_findIndex","find","activeOption","selected","SelectVariant","opt","firstChild","setAttribute","formatSelectProps","_memoize","placeholder","hasPlaceholderStyle","formatButtonProps","buttonVariant","onSplitButton","splitButtonCopy","splitButtonVariant","splitButtonVariantPropLookup","splitButtonItems","DropdownToggleAction","onClick","DropdownToggleCheckbox","default","toggleVariant","plain","isPlain","toggleIndicator","primary","secondary","isText","Select","ariaLabel","direction","isDropdownButton","isFlipEnabled","isInline","isToggleText","maxHeight","onSelect","baseOptions","position","toggleIcon","isExpanded","setIsExpanded","setOptions","setSelected","useShallowCompareEffect","updatedSelected","expanded","onDropdownSelect","titleSelection","optionsIndex","findIndex","_event$currentTarget$","getAttribute","innerText","mockUpdatedOptions","mockTarget","selectedIndex","mockEvent","Dropdown","isOpen","DropdownToggle","dropdownItems","DropdownItem","btoa","updatedButtonProps","formatButtonParentProps","PfSelect","down","selections","placeholderText","PfSelectOption","generateChartIds","isCapacity","metric","productId","query","metricCategory","RHSM_API_QUERY_SET_TYPES","billingCategory","generateIsToolbarFilter","generateChartSettings","filters","settings","graphCardSettings","filtersSettings","combinedSettings","filterSettings","isMultiMetric","isFirst","isLast","remainingCombinedSettings","updatedChartType","isThreshold","isAxisLabel","baseFilterSettings","isToolbarFilter","chartColorGreenDark","_remainingCombinedSet","_remainingCombinedSet2","isMetricDisplay","cards","isStandalone","groupMetric","Set","metrics","stringId","_filtersSettings","currentLastFiltersSettingsEntry","_filtersSettings2","lastFiltersSettingsEntry","from","join","groupedMetrics","groupedMetricsSettings","remainingSettings","metricFilter","getChartXAxisLabelIncrement","getTooltipDate","momentDate","callback","previousDate","isNewYear","formattedDate","_helpers$numberDispla","_helpers$numberDispla2","average","mantissa","trimMantissa","lowPrecision","toUpperCase","generateExtendedChartSettings","_settings$xAxisLabelI","getMetricTotalCurrentOrLastData","currentDate","currentHasData","currentValue","isCurrentDate","lastDate","lastHasData","lastValue","getDailyMonthlyTotals","meta","totalMonthlyDate","monthlyDate","totalMonthlyHasData","monthlyHasData","totalMonthlyValue","monthlyValue","dailyDate","dailyHasData","dailyValue","getPrepaidTallyCapacity","_data$find","_data$find2","capacityData","_ref5","RegExp","tallyData","_ref6","CATEGORY_TYPES","getRemainingCapacity","capacityHasData","capacityValue","tallyHasData","tallyValue","response","remainingCapacityHasData","remainingCapacity","getRemainingOverage","remainingOverageHasData","remainingOverage","graphCardHelpers","fallbackLng","loadPath","initialized","setInitialized","i18next","XHR","use","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","EMPTY_CONTEXT","noopTranslate","components","updatedKey","updatedValue","updatedComponents","splitContext","emptyContextValue","split","parseContext","translateKey","aliasSplitContext","updatedTranslateKey","updatedContext","tempContext","flat","lastContext","pop","parseTranslateKey","aliasI18next","isDebug","aliasNoopTranslate","aliasParseContext","aliasParseTranslateKey","updatedValues","baseUpdatedTranslateKey","TestElement","parsedContext","parsedAgainTranslateKey","testId","defaultTestId","updatedDataTest","setI18nTestElement","store","Trans","i18nKey","translateComponent","withTranslation","i18n","displayName","i18nHelpers","Loader","skeletonProps","tableProps","Skeleton","SkeletonSize","TableSkeleton","PageLayout","PageHeader","Spinner","borders","colCount","colWidth","rowCount","TableVariant","PageSection","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","updateAccountOptIn","useAliasSession","optin","onSubmitOptIn","Card","Flex","flex","FlexItem","CardTitle","CardBody","CardFooter","renderOptinForm","disableButton","Form","ActionGroup","Button","alignSelf","CardHeader","CardHeaderMain","Brand","srcSet","graphPng4x","graphPng2x","src","alt","PageColumns","alignItems","sm","spaceItems","child","grow","productLabel","RcsPageHeader","justifyContent","PageHeaderTitle","ExternalLinkAltIcon","iconPosition","PageMessages","PageToolbar","Main","Section","redirectRoute","routes","useSetRouteDetail","useAliasSetRouteDetail","updatedRoutes","View","Route","path","element","fallback","Routes","redirect","Navigate","to","disabled","useLocation","useAliasLocation","useLocationRRD","windowLocation","aliasWindowLocation","location","updatedLocation","setUpdatedLocation","_id","hash","search","useNavigate","useAliasNavigate","useRRDNavigate","navigate","pathLocation","pathName","pathname","firstMatch","productPath","reduxTypes","config","useRouteDetail","useSelectors","useAliasSelectors","getBundleData","bundleData","productVariant","_view$product","view","product","_view$product2","detail","setDetail","updatedVariantPath","hashPath","_passed","routeConfig","_routeConfig","_routeConfig$firstMat","selectedVariant","productGroup","allConfigs","availableVariants","configs","isClosest","bundleTitle","errorRoute","productConfig","useSearchParams","useAliasSearchParams","useRRDSearchParams","setAliasSearchParams","setSearchParams","updatedQuery","isMerged","currentSearch","updatedSearch","assign","updatedPath","_view$product3","dynamicBaseName","applicationName","dynamicBasePath","routesConfig","getRouteConfigByPath","_updatedPathName$toLo","_updatedPathName$toLo2","_updatedPathName$toLo3","_updatedPathName$toLo4","_updatedPathName$toLo5","_updatedPathName$toLo6","_updatedPathName$toLo7","byAnything","byAnythingPathIds","byAnythingVariants","byProductIdConfigs","updatedPathName","trimmedPathName","focusedStr","_trimmedPathName$spli","closestStr","closest","configsByAnything","importView","p","parseSearchParams","currentPathAndOrSearch","decodeURIComponent","URLSearchParams","parsedSearch","param","v","pathJoin","paths","hasLead","Table","constructor","_defineProperty","isCollapsible","isSortable","sortBy","updatedColumnHeaders","updatedRows","this","state","fullWidth","cells","expandedContent","setState","updatedIndex","i","onCollapse","_data$column","_data$column$header","onSort","column","header","componentDidMount","setRowData","componentDidUpdate","prevProps","columnHeaders","rows","customizer","valueA","valueB","_isEqualWith","updatedSort","rowObj","parent","cell","columnHeader","sortActive","sortDirection","tempColumnHeader","transforms","sortable","SortByDirection","renderTable","isHeader","summary","pfTableProps","emptyTable","TableEmpty","SearchIcon","PfTable","TableHeader","TableBody","render","Grid","GridItem","span","tableHeading","PlatformEmptyTableWrapper","updatedHeader","cellWidth","Tooltip","isNoWrap","PfTooltip","distance","enableFlip","entryDelay","exitDelay","TooltipPosition","productConfigs","require","console","warn","sortedProductConfigs","viewIdConfigs","productAliases","productIds","productIdConfigs","productPathConfigs","anything","anythingVariants","groupIdConfigs","groupedGroupIds","groupedVariants","groupedViewIds","aliases","productVariants","viewId","_anything$productGrou","_anything$productId","_anything$productLabe","_anything$productPath","_productPathConfigs$p","_groupIdConfigs$produ","_groupedVariants$prod","_groupedGroupIds$prod","_groupedVariants$prod2","_groupedVariants$prod3","_viewIdConfigs$viewId","_groupedViewIds$viewI","alias","_productAliases$alias","_anything$alias","_productAliases$varia","_anything$variant","_anythingVariants$key","byAlias","byGroupIdConfigs","byGroupIds","byGroupIdVariants","byProductPathConfigs","byProductIds","byViewIdConfigs","byViewIds","products","sortedConfigs","activateOnError","RHSM_API_PATH_PRODUCT_TYPES","productDisplay","DISPLAY_TYPES","productContextFilterUom","RHSM_API_QUERY_UOM_TYPES","toISOString","graphTallyQuery","inventoryHostsQuery","INVENTORY_SORT_TYPES","SORT_DIRECTION_TYPES","inventorySubscriptionsQuery","SUBSCRIPTIONS_SORT_TYPES","initialOption","initialGraphFilters","RHSM_API_PATH_METRIC_TYPES","isOptional","chartColorBlueLight","chartColorBlueDark","initialGraphSettings","isCardTitleDescription","actions","initialGuestsFilters","INVENTORY_TYPES","inventoryId","session","inventory","updatedDisplayName","lastSeen","DateFormat","initialInventoryFilters","instanceId","numberOfGuests","count","PfLabel","INVENTORY_META_TYPES","uom","_data$uom","isWrappable","initialInventorySettings","guestContent","initialSubscriptionsInventoryFilters","SUBSCRIPTIONS_INVENTORY_TYPES","hasInfiniteQuantity","totalCapacity","nextEventDate","initialToolbarFilters","chartColorCyanLight","chartColorCyanDark","_dataSets$$display","chartId","_dataSets$2","_dataSets$2$display","_dataSets$3","_dataSets$3$display","_dataSets$4","_dataSets$4$display","_dataSets$5","_dataSets$5$display","_dataSets$6","_dataSets$6$display","total","footer","_dataSets$7","_dataSets$7$display","_dataSets$8","_dataSets$8$display","_dataSets$9","_dataSets$9$display","_dataSets$10","_dataSets$10$display","_helpers$numberDispla3","_helpers$numberDispla4","_dataSets$11","_dataSets$11$display","_dataSets$12","_dataSets$12$display","_dataSets$13","_dataSets$13$display","_dataSets$14","_dataSets$14$display","_helpers$numberDispla7","_helpers$numberDispla8","_helpers$numberDispla5","_helpers$numberDispla6","cores","toFixed","instanceHours","isSecondary","RHSM_API_QUERY_INVENTORY_SORT_TYPES","RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES","provider","_helpers$numberDispla9","SUBSCRIPTIONS_INVENTORY_META_TYPES","subscriptionType","RHSM_API_PATH_PRODUCT_VARIANT_RHEL_TYPES","chartColorPurpleLight","chartColorPurpleDark","chartColorOrangeLight","chartColorOrangeDark","isDisabledLegendClick","cloudProvider","category","sockets","chartColorGoldLight","chartColorGoldDark","RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES","dimensions","setDimensions","isElementResize","ResizeObserver","timeout","removeObserver","handler","clientHeight","clientWidth","innerHeight","innerWidth","resizeObserver","observe","unobserve","addEventListener","removeEventListener","clearTimeout","FULFILLED_ACTION","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","initialValue","schema","generated","getSingleResponseFromResultArray","results","updatedResults","payload","updatedResultsMessage","firstErrorResponse","_get","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","getDateFromResults","getStatusFromResults","setStateProp","initialState","reset","singlePromiseDataResponseFromArray","reduxHelpers","HTTP_STATUS_RANGE","setApiQuery","setNormalizedResponse","parsedResponses","customResponseEntry","customResponseValue","keyPrefix","keyCase","updatedData","generatedSchema","parsedResponse","dataObj","keyCaseType","customEntry","customValue","update","updatedDataObj","casedDataObjKey","dataObjKey","dataObjValue","_camelCase","_snakeCase","val","isInteger","generateReflectedData","generatedData","generatedPromiseActionReducer","types","expandedTypes","subVal","whichType","baseState","errorMessage","fromEntries","expandMetaTypes","setId","_action$meta","_action$meta2","errorResponse","cancelled","getDataFromResults","selectors","_useAliasSelector2","equality","shallowEqual","useReactReduxSelector","updatedSelectors","selectorIds","multiSelector","createSelector","listMultiSelectorResponse","undefinedMultiSelectorResponse","idMultiSelectorResponse","customResponse","selectorResponse","isSelectorResponseArray","cancelledById","cancelledByList","cancelledDataById","cancelledDataByList","errorByList","errorById","errorDataById","errorDataByList","fulfilledByList","fulfilledById","fulfilledDataById","fulfilledDataByList","pendingByList","responsesById","responsesByList","dataById","dataByList","idList","updatedSelectorResponse","updatedResponse","isServiceResponse","_cancelledByList","_errorByList","_fulfilledByList","isById","list","_errorByList$","reactReduxHooks","dispatchEvent","_useAliasSelector","useSelectorsAllSettledResponse","baseResponse","useSelectorsAnyResponse","keyList","useSelectorsRaceResponse","_errorByList$2","reactRedux","camelCase","updatedObj","schemaResponse","casing","convert","details","validate","serviceHelpers","passDataToCallback","timeoutFunctionCancel","clearTimer","race","_","updatedFunc","finally","globalXhrTimeout","globalCancelTokens","globalResponseCache","LruCache","ttl","updateAgeOnGet","axiosServiceCall","cancelledMessage","responseCache","xhrTimeout","updatedConfig","cacheResponse","responseTransformers","axiosInstance","axios","cacheId","exposeCacheId","cancel","cancelTokensId","cancelId","params","CancelToken","cancelToken","token","cachedResponse","get","adapter","adapterConfig","transform","successTransform","errorTransform","transformers","normalizeError","interceptors","set","url","emulateCallback","emulatedResponse","isSuccess","Joi","JoiBase","JoiDate","userResponseSchema","object","identity","is_org_admin","boolean","unknown","entitlements","is_entitled","permissionsItem","permission","string","optional","allow","resourceDefinitions","array","permissionsResponseSchema","items","platformSchemas","permissions","platformTransformers","_identity$platformCon","_entitlements$helpers","platformConstants","isAdmin","isEntitled","rbacConfig","definitions","resource","operation","_updatedResponse$perm","_updatedResponse$perm2","all","resources","RESOURCE_TYPES","OPERATION_TYPES","_updatedResponse$perm3","resourcePermissions","_updatedResponse$perm4","_updatedResponse$perm5","_updatedResponse$perm6","res","op","platformServices","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","getUser","updatedAppName","userPermissions","allPermissions","USER_PERMISSION_TYPES","REACT_APP_DEBUG_PERMISSION_APP_ONE","REACT_APP_DEBUG_PERMISSION_APP_TWO","getUserPermissions","platformMethod","isHidden","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","platformTypes","serviceCall","headers","serviceConfig","errorItem","code","errorResponseSchema","linksSchema","metaResponseSchema","number","integer","valid","capacityMetaSchema","metric_id","capacityItem","utc","has_data","has_infinite_quantity","capacityResponseSchema","links","guestsMetaSchema","guestsItem","inventory_id","display_name","subscription_manager_id","last_seen","guestsResponseSchema","hostsMetaSchema","hostsItem","cloud_provider","lowercase","hardware_type","measurement_type","number_of_guests","hostsResponseSchema","instancesMetaSchema","measurements","instancesItem","instance_id","billing_provider","billing_account_id","instancesResponseSchema","subscriptionsMetaSchema","subscription_type","subscriptionsItem","next_event_date","product_name","quantity","service_level","total_capacity","subscriptionsResponseSchema","tallyItem","tallyMetaSchema","has_cloudigrade_data","has_cloudigrade_mismatch","total_monthly","tallyResponseSchema","rhsmSchemas","capacity","guests","hosts","instances","subscriptions","tally","rhsmTransformers","HOSTS_DATA_TYPES","subscriptionManagerId","HOSTS_META_TYPES","_meta$INSTANCES_META_","_normalizedUom","_normalizedUom2","metaMeasurements","INSTANCES_META_TYPES","INSTANCES_DATA_TYPES","normalizedUom","tallyCapacity","_meta$TALLY_CAPACITY_","_meta$TALLY_CAPACITY_2","_meta$TALLY_CAPACITY_3","_isCapacity","currentDateStr","futureDateCount","TALLY_CAPACITY_DATA_TYPES","updatedDate","isFutureDate","diff","TALLY_CAPACITY_META_TYPES","cloudigradeHasMismatch","metricId","rhsmHelpers","_params$RHSM_API_QUER","updatedId","rhsmServices","getApiVersion","getGraphCapacity","getGraphReports","getGraphTally","getHostsInventory","getHostsInventoryGuests","getInstancesInventory","getInstancesInventoryGuests","getSubscriptionsInventory","rhsmActions","getGraphMetrics","idMetric","multiMetric","multiDispatch","metricQuery","methodService","methodType","rhsmTypes","methodCancelId","generatedId","notifications","userServices","defaultLang","LocaleCode","parseLang","Cookies","deleteAccountOptIn","getAccountOptIn","userActions","userTypes","rejected","dismissable","autoDismiss","platform","rhsm","legend","reportCapacity","graphReducer","graphTypes","hostsInventory","hostsGuests","instancesInventory","instancesGuests","subscriptionsInventory","tabs","inventoryReducer","inventoryTypes","bannerMessages","messagesReducer","toolbarReducer","activeFilters","currentFilter","userReducer","appTypes","actionStatus","inventoryGuestsQuery","viewReducer","_state$product","updateVariantResetQueries","_productConfig$sorted","queryIds","queryId","updateResetQueries","productQuery","RHSM_API_QUERY_TYPES","updateClearQueries","updateClearGuestQuery","clearFilters","reducers","graph","messages","toolbar","reduxReducers","combineReducers","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","next","httpStatus","payloadConfig","range","statusMiddleware","promiseMiddleware","recordAction","getActions","_parsedItems","parsedItems","priorItem","updatedAction","removeUserIdentity","_obj$data","_obj$data$user","platformApiTypes","updatedPayload","sanitizeData","sanitizeActionHeaders","actionObj","timestamp","now","setItem","browser","userAgent","toLocaleString","actionRecordMiddleware","version","notificationsMiddleware","createStore","applyMiddleware","STATUS_4XX","STATUS_5XX","SET_PRODUCT","SET_PRODUCT_VARIANT","SET_PRODUCT_VARIANT_QUERY_RESET_ALL","SET_GRAPH_LEGEND","CLEAR_INVENTORY_GUESTS","SET_INVENTORY_TAB","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_GLOBAL_FILTER_HIDE","PLATFORM_USER_AUTH","queryTypes","SET_QUERY","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST","SET_QUERY_RESET_INVENTORY_LIST","SET_QUERY_RHSM_TYPES","SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_LOCALE","USER_LOGOUT","SET_BANNER_MESSAGES","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_GRAPH_TALLY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","GET_INSTANCES_INVENTORY_RHSM","GET_INSTANCES_INVENTORY_GUESTS_RHSM","GET_SUBSCRIPTIONS_INVENTORY_RHSM","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES","ALL","PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES","READ","WRITE","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES","SUBSCRIPTIONS","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","SATELLITE_CAPSULE","SATELLITE_SERVER","RHACS","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHODS","ROSA","OPENSHIFT","OPENSHIFT_METRICS","OPENSHIFT_DEDICATED_METRICS","SATELLITE","CORES","SOCKETS","CORE_SECONDS","INSTANCE_HOURS","STORAGE_GIBIBYTES","STORAGE_GIBIBYTE_MONTHS","TRANSFER_GIBIBYTES","RHSM_API_RESPONSE_META_TYPES","COUNT","PRODUCT","RHSM_API_RESPONSE_HOSTS_DATA_TYPES","CORE_HOURS","CLOUD_PROVIDER","DISPLAY_NAME","HARDWARE_TYPE","INVENTORY_ID","LAST_SEEN","MEASUREMENT_TYPE","NUMBER_OF_GUESTS","SUBSCRIPTION_MANAGER_ID","RHSM_API_RESPONSE_HOSTS_META_TYPES","RHSM_API_RESPONSE_INSTANCES_DATA_TYPES","BILLING_PROVIDER","BILLING_ACCOUNT_ID","CATEGORY","INSTANCE_ID","MEASUREMENTS","RHSM_API_RESPONSE_INSTANCES_META_TYPES","UOM","RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES","HAS_INFINITE_QUANTITY","NEXT_EVENT_DATE","PRODUCT_NAME","QUANTITY","SERVICE_LEVEL","TOTAL_CAPACITY","RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES","SUBSCRIPTION_TYPE","RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES","DATE","VALUE","HAS_DATA","RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES","HAS_CLOUDIGRADE_DATA","HAS_CLOUDIGRADE_MISMATCH","METRIC_ID","TOTAL_MONTHLY","RHSM_API_RESPONSE_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES","RED_HAT","AWS","RHSM_API_RESPONSE_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_RESPONSE_UOM_TYPES","RHSM_API_RESPONSE_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_CATEGORY_TYPES","CLOUD","HYPERVISOR","ON_DEMAND","PHYSICAL","PREPAID","VIRTUAL","RHSM_API_QUERY_GRANULARITY_TYPES","RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES","HARDWARE","MEASUREMENT","NAME","RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","NEXT_EVENT_TYPE","SKU","USAGE","RHSM_API_QUERY_BILLING_PROVIDER_TYPES","RHSM_API_QUERY_SLA_TYPES","RHSM_API_QUERY_USAGE_TYPES","RHSM_API_QUERY_SET_INVENTORY_TYPES","DIRECTION","END_DATE","LIMIT","OFFSET","SLA","SORT","START_DATE","VARIANT","RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES","BILLING_CATEGORY","GRANULARITY","USE_RUNNING_TOTALS_FORMAT","RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES","DUAL_AXES","HOURLY","LEGACY","PARTIAL","CAPACITY","RHSM_API_RESPONSE_DATA","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_ERRORS","RHSM_API_RESPONSE_ERRORS_TYPES","CODE","RHSM_API_RESPONSE_ERRORS_CODE_TYPES","GENERIC","OPTIN","RHSM_API_RESPONSE_SUBSCRIPTION_TYPES","ANNUAL","webpackContext","req","webpackContextResolve","__webpack_require__","o","webpackAsyncContext","then","ids"],"sourceRoot":""}
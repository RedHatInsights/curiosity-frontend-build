{"version":3,"file":"js/3385.27f107c00b86169e2209.js","mappings":"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","sources":["webpack:///./src/components/inventoryGuests/inventoryGuestsContext.js","webpack:///./node_modules/react-use/esm/useUnmount.js","webpack:///./src/components/productView/productViewContext.js","webpack:///./node_modules/fast-deep-equal/react.js","webpack:///./node_modules/react-use/esm/misc/isDeepEqual.js","webpack:///./node_modules/react-use/esm/useDeepCompareEffect.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDeepCompareEffect, useUnmount, useShallowCompareEffect } from 'react-use';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProductInventoryGuestsQuery } from '../productView/productViewContext';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * @memberof InventoryGuests\n * @module InventoryGuestsContext\n */\n\n/**\n * Guests inventory selector response.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}), pending: (*|boolean), fulfilled, error}}\n */\nconst useSelectorsGuestsInventory = (\n  id,\n  { useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse } = {}\n) => {\n  const { error, cancelled, fulfilled, pending, data } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.instancesGuests?.[id]\n  );\n\n  return {\n    error,\n    fulfilled,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * Combined Redux RHSM Actions, getInstancesInventoryGuests, and inventory selector response.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsInventory\n * @returns {Function}\n */\nconst useGetGuestsInventory = (\n  id,\n  {\n    getInventory = reduxActions.rhsm.getInstancesInventoryGuests,\n    useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n    useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryGuestsQuery,\n    useSelectorsInventory: useAliasSelectorsInventory = useSelectorsGuestsInventory\n  } = {}\n) => {\n  const [updatedData, setUpdatedData] = useState([]);\n  const query = useAliasProductInventoryQuery({ options: { overrideId: id } });\n  const dispatch = useAliasDispatch();\n  const { data = {}, fulfilled = false, ...response } = useAliasSelectorsInventory(id);\n  const { data: listData = [] } = data;\n\n  useShallowCompareEffect(() => {\n    getInventory(id, query)(dispatch);\n  }, [dispatch, id, query]);\n\n  useDeepCompareEffect(() => {\n    if (fulfilled) {\n      setUpdatedData(prevState => [...prevState, ...listData]);\n    }\n  }, [fulfilled, listData]);\n\n  return {\n    data: updatedData,\n    fulfilled,\n    ...response\n  };\n};\n\n/**\n * Use paging as onScroll event for guests inventory.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useSelectorsInventory\n * @param {Function} options.useProductInventoryQuery\n * @returns {Function}\n */\nconst useOnScroll = (\n  id,\n  {\n    useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n    useSelectorsInventory: useAliasSelectorsInventory = useSelectorsGuestsInventory,\n    useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryGuestsQuery\n  } = {}\n) => {\n  const dispatch = useAliasDispatch();\n  const { pending, data = {} } = useAliasSelectorsInventory(id);\n  const { count: numberOfGuests } = data?.meta || {};\n\n  const query = useAliasProductInventoryQuery({ options: { overrideId: id } });\n  const { [RHSM_API_QUERY_SET_TYPES.LIMIT]: limit, [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage } = query;\n\n  /**\n   * Reset paging in scenarios where inventory is filtered, or guests is collapsed.\n   */\n  useUnmount(() => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n        viewId: id\n      },\n      {\n        type: reduxTypes.inventory.CLEAR_INVENTORY_GUESTS,\n        id\n      }\n    ]);\n  });\n\n  /**\n   * On scroll, dispatch type.\n   *\n   * @event onScroll\n   * @param {object} event\n   * @returns {void}\n   */\n  return event => {\n    const { target } = event;\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > currentPage + limit && bottom && !pending) {\n      dispatch([\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n          viewId: id,\n          [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage + limit\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n          viewId: id,\n          [RHSM_API_QUERY_SET_TYPES.LIMIT]: limit\n        }\n      ]);\n    }\n  };\n};\n\nconst context = {\n  useGetGuestsInventory,\n  useOnScroll,\n  useSelectorsGuestsInventory\n};\n\nexport { context as default, context, useGetGuestsInventory, useOnScroll, useSelectorsGuestsInventory };\n","import { useRef } from 'react';\nimport useEffectOnce from './useEffectOnce';\nvar useUnmount = function (fn) {\n    var fnRef = useRef(fn);\n    // update the ref each render so if it change the newest callback will be invoked\n    fnRef.current = fn;\n    useEffectOnce(function () { return function () { return fnRef.current(); }; });\n};\nexport default useUnmount;\n","import React, { useCallback, useContext } from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { reduxHelpers } from '../../redux/common';\nimport { storeHooks } from '../../redux/hooks';\nimport { rhsmConstants, RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common/helpers';\n\n/**\n * @memberof ProductView\n * @module ProductViewContext\n */\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst ProductViewContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated product view context.\n *\n * @returns {React.Context<{}>}\n */\nconst useProductViewContext = () => useContext(ProductViewContext);\n\n/**\n * Return a query object from initial product config and Redux store.\n *\n * @param {string} queryType An identifier used to pull from both config and Redux, they should named the same.\n * @param {object} options\n * @param {string} options.overrideId A custom identifier, used for scenarios like the Guest inventory IDs\n * @param {object} options.useProductViewContext\n * @param {Function} options.useSelectors\n * @returns {object}\n */\nconst useProductQueryFactory = (\n  queryType,\n  {\n    overrideId,\n    useProductViewContext: useAliasProductViewContext = useProductViewContext,\n    useSelectors: useAliasSelectors = storeHooks.reactRedux.useSelectors\n  } = {}\n) => {\n  const { [queryType]: initialQuery, productId, viewId } = useAliasProductViewContext();\n  const [queryOverride, queryProduct, queryView] = useAliasSelectors([\n    ({ view }) => view?.[queryType]?.[overrideId],\n    ({ view }) => view?.[queryType]?.[productId],\n    ({ view }) => view?.[queryType]?.[viewId]\n  ]);\n\n  return {\n    ...initialQuery,\n    ...queryOverride,\n    ...queryProduct,\n    ...queryView\n  };\n};\n\n/**\n * Return a base product query\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductQuery = ({\n  queryType = 'query',\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) => useAliasProductQueryFactory(queryType, options);\n\n/**\n * Return the graph query based off of tally and capacity.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductGraphTallyQuery = ({\n  queryType = 'graphTallyQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return the inventory query for guests. Use fallback/defaults for guests offset, limit.\n *\n * @param {object} options\n * @param {number} options.defaultLimit\n * @param {number} options.defaultOffset\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryGuestsQuery = ({\n  defaultLimit = 100,\n  defaultOffset = 0,\n  queryType = 'inventoryGuestsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      [RHSM_API_QUERY_SET_TYPES.LIMIT]: defaultLimit,\n      [RHSM_API_QUERY_SET_TYPES.OFFSET]: defaultOffset,\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for hosts.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryHostsQuery = ({\n  queryType = 'inventoryHostsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for subscriptions.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventorySubscriptionsQuery = ({\n  queryType = 'inventorySubscriptionsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return a unified query for toolbars\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductGraphTallyQuery\n * @param {Function} options.useProductInventoryHostsQuery\n * @param {Function} options.useProductInventorySubscriptionsQuery\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductToolbarQuery = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery = useProductGraphTallyQuery,\n  useProductInventoryHostsQuery: useAliasProductInventoryHostsQuery = useProductInventoryHostsQuery,\n  useProductInventorySubscriptionsQuery:\n    useAliasProductInventorySubscriptionsQuery = useProductInventorySubscriptionsQuery,\n  options\n} = {}) => ({\n  ...useAliasProductQuery({ options }),\n  ...useAliasProductGraphTallyQuery({ options }),\n  ...useAliasProductInventoryHostsQuery({ options }),\n  ...useAliasProductInventorySubscriptionsQuery({ options })\n});\n\n/**\n * Get a filtered product configuration context.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductViewContext\n * @returns {object}\n */\nconst useProductContext = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductViewContext: useAliasProductViewContext = useProductViewContext\n} = {}) => {\n  const { [RHSM_API_QUERY_SET_TYPES.UOM]: uomFilter } = useAliasProductQuery();\n  const {\n    initialGraphFilters = [],\n    initialInventoryFilters = [],\n    initialSubscriptionsInventoryFilters = [],\n    productContextFilterUom,\n    ...config\n  } = useAliasProductViewContext();\n\n  const applyUomFilter = useCallback(() => {\n    if (productContextFilterUom === true) {\n      const filterFilters = ({ id, metric, isOptional }) => {\n        if (!isOptional) {\n          return true;\n        }\n        return new RegExp(uomFilter, 'i').test(metric) || new RegExp(uomFilter, 'i').test(id);\n      };\n\n      /**\n       * Allowing nested filters beside normal filters we take the quick path, just run the loop twice.\n       * Make sure to set \"isOptional\" false when it comes to nested filters in the event someone\n       * combined a config setting in the subsequent loop.\n       */\n      const updatedGraphFilters = _cloneDeep(initialGraphFilters)\n        .map(({ filters, ...rest }) => ({\n          ...rest,\n          filters: filters.filter(filterFilters),\n          isOptional: false\n        }))\n        .filter(filterFilters);\n\n      return {\n        ...config,\n        initialGraphFilters: updatedGraphFilters,\n        initialInventoryFilters: initialInventoryFilters.filter(filterFilters),\n        initialSubscriptionsInventoryFilters: initialSubscriptionsInventoryFilters.filter(filterFilters)\n      };\n    }\n\n    return {\n      ...config,\n      initialGraphFilters,\n      initialInventoryFilters,\n      initialSubscriptionsInventoryFilters\n    };\n  }, [\n    config,\n    initialGraphFilters,\n    initialInventoryFilters,\n    initialSubscriptionsInventoryFilters,\n    productContextFilterUom,\n    uomFilter\n  ]);\n\n  return applyUomFilter();\n};\n\n/**\n * Return product identifiers.\n *\n * @param {object} options\n * @param {Function} options.useProductViewContext\n * @returns {{productLabel, viewId, productId, productGroup, productVariants}}\n */\nconst useProduct = ({ useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}) => {\n  const { productGroup, productId, productLabel, productVariants, viewId } = useAliasProductViewContext();\n  return {\n    productGroup,\n    productId,\n    productLabel,\n    productVariants,\n    viewId\n  };\n};\n\n/**\n * Return graph configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductGraphConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialGraphFilters, initialGraphSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGraphFilters,\n    settings: initialGraphSettings\n  };\n};\n\n/**\n * Return guests inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryGuestsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { inventoryGuestsQuery = {}, initialGuestsFilters, initialGuestsSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGuestsFilters,\n    initialQuery: inventoryGuestsQuery,\n    settings: initialGuestsSettings\n  };\n};\n\n/**\n * Return inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryHostsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialInventoryFilters, initialInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialInventoryFilters,\n    settings: initialInventorySettings\n  };\n};\n\n/**\n * Return subscriptions inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventorySubscriptionsConfig = ({\n  useProductContext: useAliasProductContext = useProductContext\n} = {}) => {\n  const { initialSubscriptionsInventoryFilters, initialSubscriptionsInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialSubscriptionsInventoryFilters,\n    settings: initialSubscriptionsInventorySettings\n  };\n};\n\n/**\n * Return primary toolbar configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductToolbarConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialToolbarFilters, initialToolbarSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialToolbarFilters,\n    settings: initialToolbarSettings\n  };\n};\n\nconst context = {\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useQuery: useProductQuery,\n  useQueryFactory: useProductQueryFactory,\n  useGraphTallyQuery: useProductGraphTallyQuery,\n  useInventoryGuestsQuery: useProductInventoryGuestsQuery,\n  useInventoryHostsQuery: useProductInventoryHostsQuery,\n  useInventorySubscriptionsQuery: useProductInventorySubscriptionsQuery,\n  useProduct,\n  useGraphConfig: useProductGraphConfig,\n  useInventoryGuestsConfig: useProductInventoryGuestsConfig,\n  useInventoryHostsConfig: useProductInventoryHostsConfig,\n  useInventorySubscriptionsConfig: useProductInventorySubscriptionsConfig,\n  useToolbarConfig: useProductToolbarConfig,\n  useToolbarQuery: useProductToolbarQuery\n};\n\nexport {\n  context as default,\n  context,\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useProductQuery,\n  useProductQueryFactory,\n  useProductGraphTallyQuery,\n  useProductInventoryGuestsQuery,\n  useProductInventoryHostsQuery,\n  useProductInventorySubscriptionsQuery,\n  useProduct,\n  useProductGraphConfig,\n  useProductInventoryGuestsConfig,\n  useProductInventoryHostsConfig,\n  useProductInventorySubscriptionsConfig,\n  useProductToolbarConfig,\n  useProductToolbarQuery\n};\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        continue;\n      }\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import isDeepEqualReact from 'fast-deep-equal/react';\nexport default isDeepEqualReact;\n","import useCustomCompareEffect from './useCustomCompareEffect';\nimport isDeepEqual from './misc/isDeepEqual';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useDeepCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useDeepCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useDeepCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, isDeepEqual);\n};\nexport default useDeepCompareEffect;\n"],"names":["useSelectorsGuestsInventory","id","useSelectorsResponse","useAliasSelectorsResponse","storeHooks","arguments","length","undefined","error","cancelled","fulfilled","pending","data","_ref","_inventory$instancesG","inventory","instancesGuests","useGetGuestsInventory","getInventory","reduxActions","useDispatch","useAliasDispatch","useProductInventoryQuery","useAliasProductInventoryQuery","useProductInventoryGuestsQuery","useSelectorsInventory","useAliasSelectorsInventory","updatedData","setUpdatedData","useState","query","options","overrideId","dispatch","response","listData","useShallowCompareEffect","useDeepCompareEffect","prevState","useOnScroll","count","numberOfGuests","meta","RHSM_API_QUERY_SET_TYPES","limit","currentPage","fn","type","reduxTypes","viewId","fnRef","useRef","current","useEffectOnce","event","target","bottom","scrollHeight","scrollTop","clientHeight","context","DEFAULT_CONTEXT","helpers","ProductViewContext","React","useProductViewContext","useContext","useProductQueryFactory","queryType","useAliasProductViewContext","useSelectors","useAliasSelectors","initialQuery","productId","queryOverride","queryProduct","queryView","_view$queryType","view","_ref2","_view$queryType2","_ref3","_view$queryType3","useProductQuery","useAliasProductQueryFactory","useProductGraphTallyQuery","schemaCheck","rhsmConstants","useAliasProductQuery","reduxHelpers","defaultLimit","defaultOffset","useProductInventoryHostsQuery","useProductInventorySubscriptionsQuery","useProductToolbarQuery","useAliasProductGraphTallyQuery","useAliasProductInventoryHostsQuery","useAliasProductInventorySubscriptionsQuery","useProductContext","uomFilter","initialGraphFilters","initialInventoryFilters","initialSubscriptionsInventoryFilters","productContextFilterUom","config","useCallback","filterFilters","_ref4","metric","isOptional","RegExp","test","updatedGraphFilters","_cloneDeep","map","_ref5","filters","rest","filter","applyUomFilter","useProduct","productGroup","productLabel","productVariants","useProductGraphConfig","useAliasProductContext","initialGraphSettings","settings","useProductInventoryGuestsConfig","inventoryGuestsQuery","initialGuestsFilters","initialGuestsSettings","useProductInventoryHostsConfig","initialInventorySettings","useProductInventorySubscriptionsConfig","initialSubscriptionsInventorySettings","useProductToolbarConfig","initialToolbarFilters","initialToolbarSettings","useQuery","useQueryFactory","useGraphTallyQuery","useInventoryGuestsQuery","useInventoryHostsQuery","useInventorySubscriptionsQuery","useGraphConfig","useInventoryGuestsConfig","useInventoryHostsConfig","useInventorySubscriptionsConfig","useToolbarConfig","useToolbarQuery","module","exports","equal","a","b","constructor","i","keys","Array","isArray","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","$$typeof","effect","deps","useCustomCompareEffect","isDeepEqual"],"sourceRoot":""}
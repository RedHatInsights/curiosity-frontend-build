{"version":3,"file":"js/2902.1648500712711.c39c96ee5df1bf0460a5.js","mappings":"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","sources":["webpack:///./src/components/chart/chartContext.js","webpack:///./src/components/chart/chartLegend.js","webpack:///./node_modules/lodash/_arrayEach.js","webpack:///./node_modules/lodash/_baseAssign.js","webpack:///./node_modules/lodash/_baseAssignIn.js","webpack:///./node_modules/lodash/_baseClone.js","webpack:///./node_modules/lodash/_baseIsMap.js","webpack:///./node_modules/lodash/_baseIsSet.js","webpack:///./node_modules/lodash/_cloneDataView.js","webpack:///./node_modules/lodash/_cloneRegExp.js","webpack:///./node_modules/lodash/_cloneSymbol.js","webpack:///./node_modules/lodash/_copySymbols.js","webpack:///./node_modules/lodash/_copySymbolsIn.js","webpack:///./node_modules/lodash/_getAllKeysIn.js","webpack:///./node_modules/lodash/_getSymbolsIn.js","webpack:///./node_modules/lodash/_initCloneArray.js","webpack:///./node_modules/lodash/_initCloneByTag.js","webpack:///./node_modules/lodash/cloneDeep.js","webpack:///./node_modules/lodash/isMap.js","webpack:///./node_modules/lodash/isSet.js"],"sourcesContent":["import React, { useCallback, useContext } from 'react';\nimport { helpers } from '../../common';\n\n/**\n * Chart context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { chartContainerRef: helpers.noop, chartSettings: {}, chartTooltipRef: helpers.noop, dataSetsToggle: [] },\n  helpers.noop\n];\n\nconst ChartContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated chart context.\n *\n * @returns {React.Context<{}>}\n */\nconst useChartContext = () => useContext(ChartContext);\n\n/**\n * ToDo: reevaluate this alternative pattern of passing hooks as options, helps testing\n */\n/**\n * Track, show, and hide chart data layers.\n *\n * @param {object} options\n * @param {Function} options.useChartContext\n * @returns {{onRevert: Function, onToggle: Function, getIsToggled: Function, dataSetsToggle: object,\n *     onHide: Function}}\n */\nconst useToggleData = ({ useChartContext: useAliasChartContext = useChartContext } = {}) => {\n  const { dataSetsToggle: contextDataSetsToggle = [] } = useAliasChartContext();\n  const [dataSetsToggle, setDataSetsToggle] = contextDataSetsToggle;\n\n  /**\n   * Hide a graph layer.\n   *\n   * @type {(function(*): void)|*}\n   */\n  const onHide = useCallback(\n    id => {\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: true }));\n    },\n    [setDataSetsToggle]\n  );\n\n  // ToDo: re-evaluate useCallback here.\n  /**\n   * Reset graph layers.\n   *\n   * @type {(function(): void)|*}\n   */\n  const onRevert = useCallback(() => {\n    setDataSetsToggle(() => ({}));\n  }, [setDataSetsToggle]);\n\n  /**\n   * Hide/show graph layers.\n   *\n   * @type {function(*): boolean}\n   */\n  const onToggle = useCallback(\n    id => {\n      const updatedToggle = !dataSetsToggle?.[id];\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: updatedToggle }));\n      return updatedToggle;\n    },\n    [dataSetsToggle, setDataSetsToggle]\n  );\n\n  // ToDo: review return undefined if doesn't exist\n  /**\n   * Graph layer status.\n   *\n   * @type {function(*): boolean}\n   */\n  const getIsToggled = useCallback(id => dataSetsToggle?.[id] || false, [dataSetsToggle]);\n\n  return {\n    ...{ dataSetsToggle },\n    onHide,\n    onRevert,\n    onToggle,\n    getIsToggled\n  };\n};\n\nconst context = {\n  ChartContext,\n  DEFAULT_CONTEXT,\n  useChartContext,\n  useToggleData\n};\n\nexport { context as default, context, ChartContext, DEFAULT_CONTEXT, useChartContext, useToggleData };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { useChartContext, useToggleData } from './chartContext';\n\n/**\n * Wrapper for rendering an HTML based legend.\n *\n * @returns {Node}\n */\nconst ChartLegend = () => {\n  const { getIsToggled, onHide, onRevert, onToggle } = useToggleData();\n  const { chartSettings = {} } = useChartContext();\n  const { chartLegend, dataSets, padding = {}, xAxisProps = {} } = chartSettings;\n\n  if (!chartLegend) {\n    return null;\n  }\n\n  const legendProps = {\n    datum: { dataSets: _cloneDeep(dataSets) },\n    chart: {\n      hide: onHide,\n      revert: onRevert,\n      toggle: onToggle,\n      isToggled: getIsToggled\n    }\n  };\n\n  return (\n    <div\n      className={`curiosity-chartarea__legend${(xAxisProps?.label && '-axis-label-active') || ''}`}\n      style={{\n        marginLeft: (padding?.left && `${padding.left}px`) || 0,\n        marginRight: (padding?.right && `${padding.right}px`) || 0\n      }}\n    >\n      {(React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n        chartLegend({ ...legendProps })}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n */\nChartLegend.propTypes = {};\n\n/**\n * Default props.\n */\nChartLegend.defaultProps = {};\n\nexport { ChartLegend as default, ChartLegend };\n","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys'),\n    keysIn = require('./keysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;\n","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n","var Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n","var baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;\n","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nmodule.exports = isMap;\n","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nmodule.exports = isSet;\n"],"names":["DEFAULT_CONTEXT","chartContainerRef","helpers","chartSettings","chartTooltipRef","dataSetsToggle","ChartContext","React","useChartContext","useContext","useToggleData","useAliasChartContext","contextDataSetsToggle","setDataSetsToggle","onHide","useCallback","id","prevState","onRevert","onToggle","updatedToggle","getIsToggled","context","ChartLegend","chartLegend","dataSets","padding","xAxisProps","legendProps","datum","_cloneDeep","chart","hide","revert","toggle","isToggled","className","label","style","marginLeft","left","marginRight","right","defaultProps","module","exports","array","iteratee","index","length","copyObject","keys","object","source","keysIn","Stack","arrayEach","assignValue","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","getTag","initCloneArray","initCloneByTag","initCloneObject","isArray","isBuffer","isMap","isObject","isSet","argsTag","funcTag","objectTag","cloneableTags","baseClone","value","bitmask","customizer","key","stack","result","isDeep","isFlat","isFull","undefined","isArr","tag","isFunc","stacked","get","set","forEach","subValue","add","props","isObjectLike","cloneArrayBuffer","dataView","buffer","constructor","byteOffset","byteLength","reFlags","regexp","exec","lastIndex","Symbol","symbolProto","prototype","symbolValueOf","valueOf","symbol","Object","call","getSymbols","getSymbolsIn","baseGetAllKeys","arrayPush","getPrototype","stubArray","getOwnPropertySymbols","hasOwnProperty","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","Ctor","CLONE_DEEP_FLAG","baseIsMap","baseUnary","nodeUtil","nodeIsMap","baseIsSet","nodeIsSet"],"sourceRoot":""}
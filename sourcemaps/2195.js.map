{"version":3,"file":"js/2195.1668012320183.3055cd403684971ee96e.js","mappings":"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","sources":["webpack:///./src/components/inventoryCard/inventoryCard.js","webpack:///./src/components/inventoryCard/inventoryCardContext.js","webpack:///./src/components/inventoryGuests/inventoryGuests.js","webpack:///./src/components/inventoryGuests/inventoryGuestsContext.js","webpack:///./node_modules/fast-shallow-equal/index.js","webpack:///./node_modules/react-use/esm/useShallowCompareEffect.js","webpack:///./node_modules/react-use/esm/useCustomCompareEffect.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader, CardHeaderMain } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { useSession } from '../authentication/authenticationContext';\nimport { useProductInventoryHostsConfig, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport { helpers } from '../../common';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport InventoryGuests from '../inventoryGuests/inventoryGuests';\nimport { inventoryCardHelpers } from './inventoryCardHelpers';\nimport Pagination from '../pagination/pagination';\nimport { ToolbarFieldDisplayName } from '../toolbar/toolbarFieldDisplayName';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\nimport { useGetInstancesInventory, useOnPageInstances, useOnColumnSortInstances } from './inventoryCardContext';\n\n/**\n * Set up inventory cards. Expand filters with base settings.\n *\n * @param {object} props\n * @param {Node} props.cardActions\n * @param {boolean} props.isDisabled\n * @param {number} props.perPageDefault\n * @param {Function} props.t\n * @param {Function} props.useGetInventory\n * @param {Function} props.useOnPage\n * @param {Function} props.useOnColumnSort\n * @param {Function} props.useProductInventoryConfig\n * @param {Function} props.useProductInventoryQuery\n * @param {Function} props.useSession\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n * @returns {Node}\n */\nconst InventoryCard = ({\n  cardActions,\n  isDisabled,\n  perPageDefault,\n  t,\n  useGetInventory: useAliasGetInventory,\n  useOnPage: useAliasOnPage,\n  useOnColumnSort: useAliasOnColumnSort,\n  useProductInventoryConfig: useAliasProductInventoryConfig,\n  useProductInventoryQuery: useAliasProductInventoryQuery,\n  useSession: useAliasSession\n}) => {\n  const sessionData = useAliasSession();\n  const query = useAliasProductInventoryQuery();\n  const onPage = useAliasOnPage();\n  const onColumnSort = useAliasOnColumnSort();\n  const { filters: filterInventoryData, settings } = useAliasProductInventoryConfig();\n  const { error, fulfilled, pending, data = {} } = useAliasGetInventory({ isDisabled });\n  const { data: listData = [], meta = {} } = data;\n\n  if (isDisabled) {\n    return (\n      <Card className=\"curiosity-inventory-card__disabled\">\n        <CardBody>\n          <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n        </CardBody>\n      </Card>\n    );\n  }\n\n  const itemCount = meta?.count;\n  const updatedPerPage = query[RHSM_API_QUERY_SET_TYPES.LIMIT] || perPageDefault;\n  const updatedOffset = query[RHSM_API_QUERY_SET_TYPES.OFFSET];\n  const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n  // Set an updated key to force refresh minHeight\n  const minHeightContentRefreshKey =\n    (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    `bodyMinHeight-${updatedPerPage}`;\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  const renderTable = () => {\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryCardHelpers.parseRowCellsListData({\n        filters: inventoryCardHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: onColumnSort,\n          query\n        }),\n        cellData,\n        meta,\n        session: sessionData\n      });\n\n      updatedColumnHeaders = columnHeaders;\n      const subscriptionManagerId = cellData?.subscriptionManagerId;\n      const numberOfGuests = cellData?.numberOfGuests;\n      let isSubTable;\n\n      // Is there a subTable, callback, or attempt to determine, return boolean\n      if (typeof settings?.hasSubTable === 'function') {\n        isSubTable = settings.hasSubTable({ ...cellData }, { ...sessionData });\n      } else {\n        isSubTable = numberOfGuests > 0 && subscriptionManagerId;\n      }\n\n      return {\n        cells,\n        expandedContent:\n          (isSubTable && <InventoryGuests numberOfGuests={numberOfGuests} id={subscriptionManagerId} />) || undefined\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  };\n\n  return (\n    <Card className=\"curiosity-inventory-card\">\n      <MinHeight key=\"headerMinHeight\" updateOnContent>\n        <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n          {cardActions}\n          <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n            <Pagination\n              isCompact\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              offset={updatedOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={updatedPerPage}\n            />\n          </CardActions>\n        </CardHeader>\n      </MinHeight>\n      <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n        <CardBody>\n          <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n            {pending && (\n              <Loader\n                variant=\"table\"\n                tableProps={{\n                  className: 'curiosity-inventory-list',\n                  colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                  colWidth:\n                    (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                  rowCount: listData?.length || updatedPerPage,\n                  variant: TableVariant.compact\n                }}\n              />\n            )}\n            {!pending && renderTable()}\n          </div>\n        </CardBody>\n      </MinHeight>\n      <MinHeight key=\"footerMinHeight\" updateOnContent>\n        <CardFooter\n          className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n          aria-hidden={error || !itemCount || false}\n        >\n          <TableToolbar isFooter>\n            <Pagination\n              dropDirection=\"up\"\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              offset={updatedOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={updatedPerPage}\n            />\n          </TableToolbar>\n        </CardFooter>\n      </MinHeight>\n    </Card>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{cardActions: React.ReactNode, useSession: Function, useOnPage: Function, t: Function, perPageDefault: number,\n *     isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function, useOnColumnSort: Function,\n *     useProductInventoryQuery: Function}}\n */\nInventoryCard.propTypes = {\n  cardActions: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  t: PropTypes.func,\n  useGetInventory: PropTypes.func,\n  useOnPage: PropTypes.func,\n  useOnColumnSort: PropTypes.func,\n  useProductInventoryConfig: PropTypes.func,\n  useProductInventoryQuery: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{cardActions: React.ReactNode, useSession: Function, useOnPage: Function, t: Function, perPageDefault: number,\n *     isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function, useOnColumnSort: Function,\n *     useProductInventoryQuery: Function}}\n */\nInventoryCard.defaultProps = {\n  cardActions: (\n    <CardHeaderMain>\n      <ToolbarFieldDisplayName />\n    </CardHeaderMain>\n  ),\n  isDisabled: helpers.UI_DISABLED_TABLE_INSTANCES,\n  perPageDefault: 10,\n  t: translate,\n  useGetInventory: useGetInstancesInventory,\n  useOnPage: useOnPageInstances,\n  useOnColumnSort: useOnColumnSortInstances,\n  useProductInventoryConfig: useProductInventoryHostsConfig,\n  useProductInventoryQuery: useProductInventoryHostsQuery,\n  useSession\n};\n\nexport { InventoryCard as default, InventoryCard };\n","import { useShallowCompareEffect } from 'react-use';\nimport _camelCase from 'lodash/camelCase';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\n\n/**\n * Combined Redux RHSM Actions, getHostsInventory, and inventory selector response.\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}|*[]|{}), pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetHostsInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getHostsInventory,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryHostsQuery,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductInventoryQuery();\n  const dispatch = useAliasDispatch();\n  const { error, cancelled, fulfilled, pending, data } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.hostsInventory?.[productId]\n  );\n\n  useShallowCompareEffect(() => {\n    if (!isDisabled) {\n      getInventory(productId, query)(dispatch);\n    }\n  }, [dispatch, isDisabled, productId, query]);\n\n  return {\n    error,\n    fulfilled,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * Combined Redux RHSM Actions, getInstancesInventory, and inventory selector response.\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}|*[]|{}), pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetInstancesInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getInstancesInventory,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryHostsQuery,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductInventoryQuery();\n  const dispatch = useAliasDispatch();\n  const { error, cancelled, fulfilled, pending, data } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.instancesInventory?.[productId]\n  );\n\n  useShallowCompareEffect(() => {\n    if (!isDisabled) {\n      getInventory(productId, query)(dispatch);\n    }\n  }, [dispatch, isDisabled, productId, query]);\n\n  return {\n    error,\n    fulfilled,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * An onPage callback for instances inventory.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnPageInstances = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for instances inventory.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   * @returns {void}\n   */\n  return ({ offset, perPage }) => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n};\n\n/**\n * An onColumnSort callback for instances inventory.\n *\n * @param {object} options\n * @param {object} options.sortColumns\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnColumnSortInstances = ({\n  sortColumns = SORT_TYPES,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for instances inventory.\n   *\n   * @event onColumnSort\n   * @param {*} _data\n   * @param {object} params\n   * @param {string} params.direction\n   * @param {string} params.id\n   * @returns {void}\n   */\n  return (_data, { direction, id }) => {\n    const updatedSortColumn = Object.values(sortColumns).find(value => value === id || _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n};\n\nconst context = {\n  useGetHostsInventory,\n  useGetInstancesInventory,\n  useOnPageInstances,\n  useOnColumnSortInstances\n};\n\nexport {\n  context as default,\n  context,\n  useGetHostsInventory,\n  useGetInstancesInventory,\n  useOnPageInstances,\n  useOnColumnSortInstances\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { useSession } from '../authentication/authenticationContext';\nimport { useProductInventoryGuestsConfig, useProductInventoryGuestsQuery } from '../productView/productViewContext';\nimport { Loader } from '../loader/loader';\nimport { inventoryCardHelpers } from '../inventoryCard/inventoryCardHelpers';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { Table } from '../table/table';\nimport { useGetGuestsInventory, useOnScroll } from './inventoryGuestsContext';\n\n/**\n * A system inventory guests component.\n *\n * @param {object} props\n * @param {number} props.defaultPerPage\n * @param {string} props.id\n * @param {number} props.numberOfGuests\n * @param {Function} props.useGetGuestsInventory\n * @param {Function} props.useOnScroll\n * @param {Function} props.useProductInventoryGuestsQuery\n * @param {Function} props.useProductInventoryGuestsConfig\n * @param {Function} props.useSession\n * @fires onScroll\n * @returns {Node}\n */\nconst InventoryGuests = ({\n  defaultPerPage,\n  id,\n  numberOfGuests,\n  useGetGuestsInventory: useAliasGetGuestsInventory,\n  useOnScroll: useAliasOnScroll,\n  useProductInventoryGuestsQuery: useAliasProductInventoryGuestsQuery,\n  useProductInventoryGuestsConfig: useAliasProductInventoryGuestsConfig,\n  useSession: useAliasSession\n}) => {\n  const [previousData, setPreviousData] = useState([]);\n  const sessionData = useAliasSession();\n  const { filters: filterGuestsData } = useAliasProductInventoryGuestsConfig();\n\n  const query = useAliasProductInventoryGuestsQuery({ options: { overrideId: id } });\n  const { [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage } = query;\n\n  const { error, pending, data = {} } = useAliasGetGuestsInventory(id);\n  const { data: listData = [] } = data;\n\n  const onScroll = useAliasOnScroll(id, () => {\n    const updatedData = [...previousData, ...(listData || [])];\n    setPreviousData(updatedData);\n  });\n\n  /**\n   * Render a scroll table loader.\n   *\n   * @returns {Node}\n   */\n  const renderLoader = () => {\n    if (currentPage > 0 && pending) {\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n            rowCount: 0,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  };\n\n  /**\n   * Render a guests table.\n   *\n   * @returns {Node}\n   */\n  const renderTable = () => {\n    let updatedColumnHeaders = [];\n\n    const updatedRows = [...previousData, ...(listData || [])].map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryCardHelpers.parseRowCellsListData({\n        filters: filterGuestsData,\n        cellData,\n        session: sessionData\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    // ToDo: Review having the height be a calc value\n    // Include the table header\n    let updatedHeight = (numberOfGuests + 1) * 42;\n    updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n    return (\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={onScroll}\n        >\n          {renderLoader()}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className={`fadein ${(error && 'blur') || ''}`}>\n      {pending && currentPage === 0 && (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            className: 'curiosity-guests-list',\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n            rowCount: numberOfGuests < defaultPerPage ? numberOfGuests : defaultPerPage,\n            variant: TableVariant.compact\n          }}\n        />\n      )}\n      {((!pending && currentPage === 0) || currentPage > 0) && renderTable()}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProductInventoryGuestsConfig: Function, useSession: Function, numberOfGuests: number, id: string,\n *     useOnScroll: Function, useGetGuestsInventory: Function, useProductInventoryGuestsQuery: Function,\n *     defaultPerPage: number}}\n */\nInventoryGuests.propTypes = {\n  defaultPerPage: PropTypes.number,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  useGetGuestsInventory: PropTypes.func,\n  useOnScroll: PropTypes.func,\n  useProductInventoryGuestsConfig: PropTypes.func,\n  useProductInventoryGuestsQuery: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProductInventoryGuestsConfig: Function, useSession: Function, useOnScroll: Function,\n *     useGetGuestsInventory: Function, useProductInventoryGuestsQuery: Function, defaultPerPage: number}}\n */\nInventoryGuests.defaultProps = {\n  defaultPerPage: 5,\n  useGetGuestsInventory,\n  useOnScroll,\n  useProductInventoryGuestsConfig,\n  useProductInventoryGuestsQuery,\n  useSession\n};\n\nexport { InventoryGuests as default, InventoryGuests };\n","import { useUnmount, useShallowCompareEffect } from 'react-use';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProductInventoryGuestsQuery } from '../productView/productViewContext';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * Guests inventory selector response.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}), pending: (*|boolean), fulfilled, error}}\n */\nconst useSelectorsGuestsInventory = (\n  id,\n  { useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse } = {}\n) => {\n  const { error, cancelled, fulfilled, pending, data } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.hostsGuests?.[id]\n  );\n\n  return {\n    error,\n    fulfilled,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * Combined Redux RHSM Actions, getHostsInventoryGuests, and inventory selector response.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsInventory\n * @returns {Function}\n */\nconst useGetGuestsInventory = (\n  id,\n  {\n    getInventory = reduxActions.rhsm.getHostsInventoryGuests,\n    useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n    useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryGuestsQuery,\n    useSelectorsInventory: useAliasSelectorsInventory = useSelectorsGuestsInventory\n  } = {}\n) => {\n  const query = useAliasProductInventoryQuery({ options: { overrideId: id } });\n  const dispatch = useAliasDispatch();\n  const response = useAliasSelectorsInventory(id);\n\n  useShallowCompareEffect(() => {\n    getInventory(id, query)(dispatch);\n  }, [dispatch, id, query]);\n\n  return {\n    ...response\n  };\n};\n\n/**\n * Use paging as onScroll event for guests inventory.\n *\n * @param {string} id\n * @param {Function} successCallback\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useSelectorsInventory\n * @param {Function} options.useProductInventoryQuery\n * @returns {Function}\n */\nconst useOnScroll = (\n  id,\n  successCallback,\n  {\n    useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n    useSelectorsInventory: useAliasSelectorsInventory = useSelectorsGuestsInventory,\n    useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryGuestsQuery\n  } = {}\n) => {\n  const dispatch = useAliasDispatch();\n  const { pending, data = {} } = useAliasSelectorsInventory(id);\n  const { count: numberOfGuests } = data?.meta || {};\n\n  const query = useAliasProductInventoryQuery({ options: { overrideId: id } });\n  const { [RHSM_API_QUERY_SET_TYPES.LIMIT]: limit, [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage } = query;\n\n  /**\n   * Reset paging in scenarios where inventory is filtered, or guests is collapsed.\n   */\n  useUnmount(() => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n        viewId: id\n      }\n    ]);\n  });\n\n  /**\n   * On scroll, dispatch type.\n   *\n   * @event onScroll\n   * @param {object} event\n   * @returns {void}\n   */\n  return event => {\n    const { target } = event;\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > (currentPage + 1) * limit && bottom && !pending) {\n      if (typeof successCallback === 'function') {\n        successCallback(event);\n      }\n\n      dispatch([\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n          viewId: id,\n          [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage + 1\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n          viewId: id,\n          [RHSM_API_QUERY_SET_TYPES.LIMIT]: limit\n        }\n      ]);\n    }\n  };\n};\n\nconst context = {\n  useGetGuestsInventory,\n  useOnScroll,\n  useSelectorsGuestsInventory\n};\n\nexport { context as default, context, useGetGuestsInventory, useOnScroll, useSelectorsGuestsInventory };\n","var keyList = Object.keys;\n\nexports.equal = function equal (a, b) {\n  if (a === b) return true;\n  if (!(a instanceof Object) || !(b instanceof Object)) return false;\n\n  var keys = keyList(a);\n  var length = keys.length;\n\n  for (var i = 0; i < length; i++)\n    if (!(keys[i] in b)) return false;\n\n  for (var i = 0; i < length; i++)\n    if (a[keys[i]] !== b[keys[i]]) return false;\n\n  return length === keyList(b).length;\n};\n","import { equal as isShallowEqual } from 'fast-shallow-equal';\nimport useCustomCompareEffect from './useCustomCompareEffect';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar shallowEqualDepsList = function (prevDeps, nextDeps) {\n    return prevDeps.every(function (dep, index) { return isShallowEqual(dep, nextDeps[index]); });\n};\nvar useShallowCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useShallowCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useShallowCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, shallowEqualDepsList);\n};\nexport default useShallowCompareEffect;\n","import { useEffect, useRef } from 'react';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useCustomCompareEffect = function (effect, deps, depsEqual) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useCustomCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useCustomCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n        if (typeof depsEqual !== 'function') {\n            console.warn('`useCustomCompareEffect` should be used with depsEqual callback for comparing deps list');\n        }\n    }\n    var ref = useRef(undefined);\n    if (!ref.current || !depsEqual(deps, ref.current)) {\n        ref.current = deps;\n    }\n    useEffect(effect, ref.current);\n};\nexport default useCustomCompareEffect;\n"],"names":["InventoryCard","cardActions","isDisabled","perPageDefault","t","useAliasGetInventory","useGetInventory","useAliasOnPage","useOnPage","useAliasOnColumnSort","useOnColumnSort","useAliasProductInventoryConfig","useProductInventoryConfig","useAliasProductInventoryQuery","useProductInventoryQuery","sessionData","useAliasSession","useSession","query","onPage","onColumnSort","filterInventoryData","filters","settings","error","fulfilled","pending","data","listData","meta","Card","className","CardBody","Bullseye","context","updatedColumnHeaders","updatedRows","itemCount","count","updatedPerPage","RHSM_API_QUERY_SET_TYPES","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","MinHeight","key","updateOnContent","CardHeader","CardActions","isCompact","offset","onPerPage","perPage","Loader","variant","tableProps","colCount","length","Object","keys","colWidth","map","cellWidth","rowCount","TableVariant","cellData","inventoryCardHelpers","onSort","session","columnHeaders","cells","subscriptionManagerId","numberOfGuests","expandedContent","hasSubTable","id","undefined","borders","rows","CardFooter","isFooter","dropDirection","defaultProps","CardHeaderMain","ToolbarFieldDisplayName","helpers","translate","useGetInstancesInventory","useOnPageInstances","useOnColumnSortInstances","useProductInventoryHostsConfig","useProductInventoryHostsQuery","useGetHostsInventory","getInventory","reduxActions","useDispatch","useAliasDispatch","storeHooks","useProduct","useAliasProduct","useSelectorsResponse","useAliasSelectorsResponse","productId","dispatch","inventory","hostsInventory","cancelled","useShallowCompareEffect","instancesInventory","type","reduxTypes","viewId","sortColumns","SORT_TYPES","_data","updatedDirection","direction","updatedSortColumn","values","find","value","_camelCase","SortByDirection","SORT_DIRECTION_TYPES","console","warn","InventoryGuests","updatedHeight","defaultPerPage","useAliasGetGuestsInventory","useGetGuestsInventory","useAliasOnScroll","useOnScroll","useAliasProductInventoryGuestsQuery","useProductInventoryGuestsQuery","useAliasProductInventoryGuestsConfig","useProductInventoryGuestsConfig","useState","previousData","setPreviousData","filterGuestsData","currentPage","options","overrideId","onScroll","updatedData","style","height","scrollLoader","renderLoader","Table","useSelectorsGuestsInventory","hostsGuests","useSelectorsInventory","useAliasSelectorsInventory","response","successCallback","limit","useUnmount","event","target","bottom","scrollHeight","scrollTop","clientHeight","keyList","exports","a","b","i","shallowEqualDepsList","prevDeps","nextDeps","every","dep","index","effect","deps","depsEqual","ref","useRef","current","useEffect"],"sourceRoot":""}
{"version":3,"file":"js/2195.1669670579179.11b1bbfe0e6f5132d371.js","mappings":"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","sources":["webpack:///./src/components/inventoryCard/inventoryCard.js","webpack:///./src/components/inventoryCard/inventoryCardContext.js","webpack:///./src/components/inventoryGuests/inventoryGuests.js","webpack:///./src/components/inventoryGuests/inventoryGuestsContext.js","webpack:///./node_modules/fast-deep-equal/react.js","webpack:///./node_modules/fast-shallow-equal/index.js","webpack:///./node_modules/react-use/esm/useCustomCompareEffect.js","webpack:///./node_modules/react-use/esm/misc/isDeepEqual.js","webpack:///./node_modules/react-use/esm/useDeepCompareEffect.js","webpack:///./node_modules/react-use/esm/useShallowCompareEffect.js"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDeepCompareEffect } from 'react-use';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader, CardHeaderMain } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { useSession } from '../authentication/authenticationContext';\nimport {\n  useProduct,\n  useProductInventoryHostsConfig,\n  useProductInventoryHostsQuery\n} from '../productView/productViewContext';\nimport { helpers } from '../../common';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { InventoryGuests } from '../inventoryGuests/inventoryGuests';\nimport { inventoryCardHelpers } from './inventoryCardHelpers';\nimport Pagination from '../pagination/pagination';\nimport { ToolbarFieldDisplayName } from '../toolbar/toolbarFieldDisplayName';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\nimport { useGetInstancesInventory, useOnPageInstances, useOnColumnSortInstances } from './inventoryCardContext';\n\n/**\n * ToDo: Update table component and review the deep comparison use on data\n * The newer table wrapper should remove the need to use the deep comparison,\n * temporarily using to allow the move from the deprecated inventory.\n */\n/**\n * Set up inventory cards. Expand filters with base settings.\n *\n * @param {object} props\n * @param {Node} props.cardActions\n * @param {boolean} props.isDisabled\n * @param {number} props.perPageDefault\n * @param {Function} props.t\n * @param {Function} props.useGetInventory\n * @param {Function} props.useOnPage\n * @param {Function} props.useOnColumnSort\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryConfig\n * @param {Function} props.useProductInventoryQuery\n * @param {Function} props.useSession\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n * @returns {Node}\n */\nconst InventoryCard = ({\n  cardActions,\n  isDisabled,\n  perPageDefault,\n  t,\n  useGetInventory: useAliasGetInventory,\n  useOnPage: useAliasOnPage,\n  useOnColumnSort: useAliasOnColumnSort,\n  useProduct: useAliasProduct,\n  useProductInventoryConfig: useAliasProductInventoryConfig,\n  useProductInventoryQuery: useAliasProductInventoryQuery,\n  useSession: useAliasSession\n}) => {\n  const [updatedColumnsRows, setUpdatedColumnsRows] = useState({ columnHeaders: [], rows: [] });\n  const sessionData = useAliasSession();\n  const query = useAliasProductInventoryQuery();\n  const onPage = useAliasOnPage();\n  const onColumnSort = useAliasOnColumnSort();\n  const { productId } = useAliasProduct();\n  const { filters: filterInventoryData, settings } = useAliasProductInventoryConfig();\n  const { error, fulfilled, pending, data = {} } = useAliasGetInventory({ isDisabled });\n  const { data: listData = [], meta = {} } = data;\n\n  useDeepCompareEffect(() => {\n    let updatedColumnHeaders = [];\n    let updatedRows = [];\n\n    if (fulfilled && listData.length) {\n      updatedRows = listData.map(({ ...cellData }) => {\n        const { columnHeaders, cells } = inventoryCardHelpers.parseRowCellsListData({\n          filters: inventoryCardHelpers.parseInventoryFilters({\n            filters: filterInventoryData,\n            onSort: onColumnSort,\n            query\n          }),\n          cellData,\n          meta,\n          session: sessionData,\n          productId\n        });\n\n        updatedColumnHeaders = columnHeaders;\n        const subscriptionManagerId = cellData?.subscriptionManagerId;\n        const numberOfGuests = cellData?.numberOfGuests;\n        let isSubTable;\n\n        // Is there a subTable, callback, or attempt to determine, return boolean\n        if (typeof settings?.hasSubTable === 'function') {\n          isSubTable = settings.hasSubTable({ ...cellData }, { ...sessionData });\n        } else {\n          isSubTable = numberOfGuests > 0 && subscriptionManagerId;\n        }\n\n        return {\n          cells,\n          expandedContent:\n            (isSubTable && (\n              <InventoryGuests\n                key={`guests-${subscriptionManagerId}`}\n                numberOfGuests={numberOfGuests}\n                id={subscriptionManagerId}\n              />\n            )) ||\n            undefined\n        };\n      });\n    }\n\n    setUpdatedColumnsRows(() => ({\n      columnHeaders: updatedColumnHeaders,\n      rows: updatedRows\n    }));\n  }, [filterInventoryData, fulfilled, listData]);\n\n  if (isDisabled) {\n    return (\n      <Card className=\"curiosity-inventory-card__disabled\">\n        <CardBody>\n          <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n        </CardBody>\n      </Card>\n    );\n  }\n\n  const itemCount = meta?.count;\n  const updatedPerPage = query[RHSM_API_QUERY_SET_TYPES.LIMIT] || perPageDefault;\n  const updatedOffset = query[RHSM_API_QUERY_SET_TYPES.OFFSET];\n  const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n  // Set an updated key to force refresh minHeight\n  const minHeightContentRefreshKey =\n    (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    `bodyMinHeight-${updatedPerPage}`;\n\n  return (\n    <Card className=\"curiosity-inventory-card\">\n      <MinHeight key=\"headerMinHeight\" updateOnContent>\n        <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n          {cardActions}\n          <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n            <Pagination\n              isCompact\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              offset={updatedOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={updatedPerPage}\n            />\n          </CardActions>\n        </CardHeader>\n      </MinHeight>\n      <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n        <CardBody>\n          <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n            {pending && (\n              <Loader\n                variant=\"table\"\n                tableProps={{\n                  className: 'curiosity-inventory-list',\n                  colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                  colWidth:\n                    (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                  rowCount: listData?.length || updatedPerPage,\n                  variant: TableVariant.compact\n                }}\n              />\n            )}\n            {!pending && (\n              <Table\n                borders\n                variant={TableVariant.compact}\n                className=\"curiosity-inventory-list\"\n                columnHeaders={updatedColumnsRows.columnHeaders}\n                rows={updatedColumnsRows.rows}\n              />\n            )}\n          </div>\n        </CardBody>\n      </MinHeight>\n      <MinHeight key=\"footerMinHeight\" updateOnContent>\n        <CardFooter\n          className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n          aria-hidden={error || !itemCount || false}\n        >\n          <TableToolbar isFooter>\n            <Pagination\n              dropDirection=\"up\"\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              offset={updatedOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={updatedPerPage}\n            />\n          </TableToolbar>\n        </CardFooter>\n      </MinHeight>\n    </Card>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{cardActions: React.ReactNode, useSession: Function, useOnPage: Function, useProduct: Function, t: Function,\n *     perPageDefault: number, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCard.propTypes = {\n  cardActions: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  t: PropTypes.func,\n  useGetInventory: PropTypes.func,\n  useOnPage: PropTypes.func,\n  useOnColumnSort: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryConfig: PropTypes.func,\n  useProductInventoryQuery: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{cardActions: React.ReactNode, useSession: Function, useOnPage: Function, useProduct: Function, t: translate,\n *     perPageDefault: number, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCard.defaultProps = {\n  cardActions: (\n    <CardHeaderMain>\n      <ToolbarFieldDisplayName />\n    </CardHeaderMain>\n  ),\n  isDisabled: helpers.UI_DISABLED_TABLE_INSTANCES,\n  perPageDefault: 10,\n  t: translate,\n  useGetInventory: useGetInstancesInventory,\n  useOnPage: useOnPageInstances,\n  useOnColumnSort: useOnColumnSortInstances,\n  useProduct,\n  useProductInventoryConfig: useProductInventoryHostsConfig,\n  useProductInventoryQuery: useProductInventoryHostsQuery,\n  useSession\n};\n\nexport { InventoryCard as default, InventoryCard };\n","import { useShallowCompareEffect } from 'react-use';\nimport _camelCase from 'lodash/camelCase';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport {\n  RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES as HOSTS_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\n\n/**\n * Combined Redux RHSM Actions, getHostsInventory, and inventory selector response.\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}|*[]|{}), pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetHostsInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getHostsInventory,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryHostsQuery,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductInventoryQuery();\n  const dispatch = useAliasDispatch();\n  const { cancelled, pending, data, ...response } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.hostsInventory?.[productId]\n  );\n\n  useShallowCompareEffect(() => {\n    if (!isDisabled) {\n      getInventory(productId, query)(dispatch);\n    }\n  }, [dispatch, isDisabled, productId, query]);\n\n  return {\n    ...response,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * Combined Redux RHSM Actions, getInstancesInventory, and inventory selector response.\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}|*[]|{}), pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetInstancesInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getInstancesInventory,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryHostsQuery,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductInventoryQuery();\n  const dispatch = useAliasDispatch();\n  const { cancelled, pending, data, ...response } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.instancesInventory?.[productId]\n  );\n\n  useShallowCompareEffect(() => {\n    if (!isDisabled) {\n      getInventory(productId, query)(dispatch);\n    }\n  }, [dispatch, isDisabled, productId, query]);\n\n  return {\n    ...response,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * An onPage callback for instances inventory.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnPageInstances = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for instances inventory.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   * @returns {void}\n   */\n  return ({ offset, perPage }) => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n};\n\n/**\n * An onColumnSort callback for hosts inventory.\n *\n * @param {object} options\n * @param {object} options.sortColumns\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnColumnSortHosts = ({\n  sortColumns = HOSTS_SORT_TYPES,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for hosts inventory.\n   *\n   * @event onColumnSort\n   * @param {*} _data\n   * @param {object} params\n   * @param {string} params.direction\n   * @param {string} params.id\n   * @returns {void}\n   */\n  return (_data, { direction, id }) => {\n    const updatedSortColumn = Object.values(sortColumns).find(value => value === id || _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n};\n\n/**\n * An onColumnSort callback for instances inventory.\n *\n * @param {object} options\n * @param {object} options.sortColumns\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnColumnSortInstances = ({\n  sortColumns = SORT_TYPES,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for instances inventory.\n   *\n   * @event onColumnSort\n   * @param {*} _data\n   * @param {object} params\n   * @param {string} params.direction\n   * @param {string} params.id\n   * @returns {void}\n   */\n  return (_data, { direction, id }) => {\n    const updatedSortColumn = Object.values(sortColumns).find(value => value === id || _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n};\n\nconst context = {\n  useGetHostsInventory,\n  useGetInstancesInventory,\n  useOnPageInstances,\n  useOnColumnSortHosts,\n  useOnColumnSortInstances\n};\n\nexport {\n  context as default,\n  context,\n  useGetHostsInventory,\n  useGetInstancesInventory,\n  useOnPageInstances,\n  useOnColumnSortHosts,\n  useOnColumnSortInstances\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { useSession } from '../authentication/authenticationContext';\nimport { useProductInventoryGuestsConfig, useProductInventoryGuestsQuery } from '../productView/productViewContext';\nimport { Loader } from '../loader/loader';\nimport { inventoryCardHelpers } from '../inventoryCard/inventoryCardHelpers';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { Table } from '../table/table';\nimport { useGetGuestsInventory, useOnScroll } from './inventoryGuestsContext';\n\n/**\n * A system inventory guests component.\n *\n * @param {object} props\n * @param {number} props.defaultPerPage\n * @param {string} props.id\n * @param {number} props.numberOfGuests\n * @param {Function} props.useGetGuestsInventory\n * @param {Function} props.useOnScroll\n * @param {Function} props.useProductInventoryGuestsQuery\n * @param {Function} props.useProductInventoryGuestsConfig\n * @param {Function} props.useSession\n * @fires onScroll\n * @returns {Node}\n */\nconst InventoryGuests = ({\n  defaultPerPage,\n  id,\n  numberOfGuests,\n  useGetGuestsInventory: useAliasGetGuestsInventory,\n  useOnScroll: useAliasOnScroll,\n  useProductInventoryGuestsQuery: useAliasProductInventoryGuestsQuery,\n  useProductInventoryGuestsConfig: useAliasProductInventoryGuestsConfig,\n  useSession: useAliasSession\n}) => {\n  const sessionData = useAliasSession();\n  const { filters: filterGuestsData } = useAliasProductInventoryGuestsConfig();\n  const { pending, data: listData = [] } = useAliasGetGuestsInventory(id);\n  const onScroll = useAliasOnScroll(id);\n  const query = useAliasProductInventoryGuestsQuery({ options: { overrideId: id } });\n  const { [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage } = query;\n\n  /**\n   * Render a scroll table loader.\n   *\n   * @param {boolean} isFirstPage\n   * @returns {Node}\n   */\n  const renderLoader = isFirstPage => {\n    if (pending) {\n      let updatedRowCount = 0;\n\n      if (isFirstPage) {\n        if (numberOfGuests < defaultPerPage) {\n          updatedRowCount = numberOfGuests;\n        } else {\n          updatedRowCount = defaultPerPage;\n        }\n      }\n\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            className: (isFirstPage && 'curiosity-guests-list') || undefined,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n            rowCount: updatedRowCount,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  };\n\n  let updatedColumnHeaders = [];\n  const updatedRows = listData.map(({ ...cellData }) => {\n    const { columnHeaders, cells } = inventoryCardHelpers.parseRowCellsListData({\n      filters: filterGuestsData,\n      cellData,\n      session: sessionData\n    });\n\n    updatedColumnHeaders = columnHeaders;\n\n    return {\n      cells\n    };\n  });\n\n  // ToDo: Review having the height be a calc value\n  // Include the table header\n  let updatedHeight = (numberOfGuests + 1) * 42;\n  updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n  return (\n    <div className=\"fadein\">\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={onScroll}\n        >\n          {renderLoader(currentPage === 0)}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProductInventoryGuestsConfig: Function, useSession: Function, numberOfGuests: number, id: string,\n *     useOnScroll: Function, useGetGuestsInventory: Function, useProductInventoryGuestsQuery: Function,\n *     defaultPerPage: number}}\n */\nInventoryGuests.propTypes = {\n  defaultPerPage: PropTypes.number,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  useGetGuestsInventory: PropTypes.func,\n  useOnScroll: PropTypes.func,\n  useProductInventoryGuestsConfig: PropTypes.func,\n  useProductInventoryGuestsQuery: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProductInventoryGuestsConfig: Function, useSession: Function, useOnScroll: Function,\n *     useGetGuestsInventory: Function, useProductInventoryGuestsQuery: Function, defaultPerPage: number}}\n */\nInventoryGuests.defaultProps = {\n  defaultPerPage: 5,\n  useGetGuestsInventory,\n  useOnScroll,\n  useProductInventoryGuestsConfig,\n  useProductInventoryGuestsQuery,\n  useSession\n};\n\nexport { InventoryGuests as default, InventoryGuests };\n","import { useState } from 'react';\nimport { useDeepCompareEffect, useUnmount, useShallowCompareEffect } from 'react-use';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProductInventoryGuestsQuery } from '../productView/productViewContext';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * Guests inventory selector response.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}), pending: (*|boolean), fulfilled, error}}\n */\nconst useSelectorsGuestsInventory = (\n  id,\n  { useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse } = {}\n) => {\n  const { error, cancelled, fulfilled, pending, data } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.hostsGuests?.[id]\n  );\n\n  return {\n    error,\n    fulfilled,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * Combined Redux RHSM Actions, getHostsInventoryGuests, and inventory selector response.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsInventory\n * @returns {Function}\n */\nconst useGetGuestsInventory = (\n  id,\n  {\n    getInventory = reduxActions.rhsm.getHostsInventoryGuests,\n    useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n    useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryGuestsQuery,\n    useSelectorsInventory: useAliasSelectorsInventory = useSelectorsGuestsInventory\n  } = {}\n) => {\n  const [updatedData, setUpdatedData] = useState([]);\n  const query = useAliasProductInventoryQuery({ options: { overrideId: id } });\n  const dispatch = useAliasDispatch();\n  const { data = {}, fulfilled = false, ...response } = useAliasSelectorsInventory(id);\n  const { data: listData = [] } = data;\n\n  useShallowCompareEffect(() => {\n    getInventory(id, query)(dispatch);\n  }, [dispatch, id, query]);\n\n  useDeepCompareEffect(() => {\n    if (fulfilled) {\n      setUpdatedData(prevState => [...prevState, ...listData]);\n    }\n  }, [fulfilled, listData]);\n\n  return {\n    data: updatedData,\n    fulfilled,\n    ...response\n  };\n};\n\n/**\n * Use paging as onScroll event for guests inventory.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useSelectorsInventory\n * @param {Function} options.useProductInventoryQuery\n * @returns {Function}\n */\nconst useOnScroll = (\n  id,\n  {\n    useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n    useSelectorsInventory: useAliasSelectorsInventory = useSelectorsGuestsInventory,\n    useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryGuestsQuery\n  } = {}\n) => {\n  const dispatch = useAliasDispatch();\n  const { pending, data = {} } = useAliasSelectorsInventory(id);\n  const { count: numberOfGuests } = data?.meta || {};\n\n  const query = useAliasProductInventoryQuery({ options: { overrideId: id } });\n  const { [RHSM_API_QUERY_SET_TYPES.LIMIT]: limit, [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage } = query;\n\n  /**\n   * Reset paging in scenarios where inventory is filtered, or guests is collapsed.\n   */\n  useUnmount(() => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n        viewId: id\n      },\n      {\n        type: reduxTypes.inventory.CLEAR_INVENTORY_GUESTS,\n        id\n      }\n    ]);\n  });\n\n  /**\n   * On scroll, dispatch type.\n   *\n   * @event onScroll\n   * @param {object} event\n   * @returns {void}\n   */\n  return event => {\n    const { target } = event;\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > currentPage + limit && bottom && !pending) {\n      dispatch([\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n          viewId: id,\n          [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage + limit\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n          viewId: id,\n          [RHSM_API_QUERY_SET_TYPES.LIMIT]: limit\n        }\n      ]);\n    }\n  };\n};\n\nconst context = {\n  useGetGuestsInventory,\n  useOnScroll,\n  useSelectorsGuestsInventory\n};\n\nexport { context as default, context, useGetGuestsInventory, useOnScroll, useSelectorsGuestsInventory };\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        continue;\n      }\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","var keyList = Object.keys;\n\nexports.equal = function equal (a, b) {\n  if (a === b) return true;\n  if (!(a instanceof Object) || !(b instanceof Object)) return false;\n\n  var keys = keyList(a);\n  var length = keys.length;\n\n  for (var i = 0; i < length; i++)\n    if (!(keys[i] in b)) return false;\n\n  for (var i = 0; i < length; i++)\n    if (a[keys[i]] !== b[keys[i]]) return false;\n\n  return length === keyList(b).length;\n};\n","import { useEffect, useRef } from 'react';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useCustomCompareEffect = function (effect, deps, depsEqual) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useCustomCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useCustomCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n        if (typeof depsEqual !== 'function') {\n            console.warn('`useCustomCompareEffect` should be used with depsEqual callback for comparing deps list');\n        }\n    }\n    var ref = useRef(undefined);\n    if (!ref.current || !depsEqual(deps, ref.current)) {\n        ref.current = deps;\n    }\n    useEffect(effect, ref.current);\n};\nexport default useCustomCompareEffect;\n","import isDeepEqualReact from 'fast-deep-equal/react';\nexport default isDeepEqualReact;\n","import useCustomCompareEffect from './useCustomCompareEffect';\nimport isDeepEqual from './misc/isDeepEqual';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useDeepCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useDeepCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useDeepCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, isDeepEqual);\n};\nexport default useDeepCompareEffect;\n","import { equal as isShallowEqual } from 'fast-shallow-equal';\nimport useCustomCompareEffect from './useCustomCompareEffect';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar shallowEqualDepsList = function (prevDeps, nextDeps) {\n    return prevDeps.every(function (dep, index) { return isShallowEqual(dep, nextDeps[index]); });\n};\nvar useShallowCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useShallowCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useShallowCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, shallowEqualDepsList);\n};\nexport default useShallowCompareEffect;\n"],"names":["InventoryCard","cardActions","isDisabled","perPageDefault","t","useAliasGetInventory","useGetInventory","useAliasOnPage","useOnPage","useAliasOnColumnSort","useOnColumnSort","useAliasProduct","useProduct","useAliasProductInventoryConfig","useProductInventoryConfig","useAliasProductInventoryQuery","useProductInventoryQuery","useAliasSession","useSession","useState","columnHeaders","rows","updatedColumnsRows","setUpdatedColumnsRows","sessionData","query","onPage","onColumnSort","productId","filterInventoryData","filters","settings","error","fulfilled","pending","data","listData","meta","useDeepCompareEffect","updatedColumnHeaders","updatedRows","length","map","cellData","inventoryCardHelpers","onSort","session","cells","subscriptionManagerId","numberOfGuests","expandedContent","hasSubTable","InventoryGuests","key","id","undefined","Card","className","CardBody","Bullseye","context","itemCount","count","updatedPerPage","RHSM_API_QUERY_SET_TYPES","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","MinHeight","updateOnContent","CardHeader","CardActions","isCompact","offset","onPerPage","perPage","Loader","variant","tableProps","colCount","Object","keys","colWidth","cellWidth","rowCount","TableVariant","borders","CardFooter","isFooter","dropDirection","defaultProps","CardHeaderMain","ToolbarFieldDisplayName","helpers","translate","useGetInstancesInventory","useOnPageInstances","useOnColumnSortInstances","useProductInventoryHostsConfig","useProductInventoryHostsQuery","useGetHostsInventory","getInventory","reduxActions","useDispatch","useAliasDispatch","storeHooks","useSelectorsResponse","useAliasSelectorsResponse","dispatch","inventory","hostsInventory","cancelled","response","useShallowCompareEffect","instancesInventory","type","reduxTypes","viewId","useOnColumnSortHosts","sortColumns","HOSTS_SORT_TYPES","_data","updatedDirection","direction","updatedSortColumn","values","find","value","_camelCase","SortByDirection","SORT_DIRECTION_TYPES","console","warn","SORT_TYPES","defaultPerPage","useAliasGetGuestsInventory","useGetGuestsInventory","useAliasOnScroll","useOnScroll","useAliasProductInventoryGuestsQuery","useProductInventoryGuestsQuery","useAliasProductInventoryGuestsConfig","useProductInventoryGuestsConfig","filterGuestsData","onScroll","currentPage","options","overrideId","updatedHeight","style","height","isFirstPage","updatedRowCount","scrollLoader","renderLoader","Table","useSelectorsGuestsInventory","hostsGuests","useSelectorsInventory","useAliasSelectorsInventory","updatedData","setUpdatedData","prevState","limit","useUnmount","event","target","bottom","scrollHeight","scrollTop","clientHeight","module","exports","equal","a","b","constructor","i","Array","isArray","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","call","$$typeof","keyList","effect","deps","depsEqual","ref","useRef","current","useEffect","useCustomCompareEffect","isDeepEqual","shallowEqualDepsList","prevDeps","nextDeps","every","dep","index"],"sourceRoot":""}
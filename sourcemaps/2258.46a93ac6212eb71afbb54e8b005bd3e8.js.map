{"version":3,"file":"js/2258.d11ae1a26c4021530ba6.js","mappings":"2YAuBMA,EAAyB,WAAiF,IAALC,GAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,CAAC,GAAxEG,eAChCC,QADmE,IAAAL,EAAGM,EAAAA,cAAAA,eAA4BN,KAC1FO,EAAiBF,EAAjBE,kBAAmBC,EAAUH,EAAVG,WACrBC,EAAU,GAMhB,OAJAF,SAAAA,EAAmBG,SAAQ,SAAAC,GACzBF,EAAQG,KAAK,CAAEC,MAAOF,EAASG,MAAOH,EAASI,SAAUJ,KAAYH,aAAU,EAAVA,EAAYQ,YACnF,IAEOP,CACT,EAUMQ,EAAc,WAGT,IAAAC,EAAAjB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,CAAC,EAACkB,EAAAD,EAFJE,YAAaC,OAAgB,IAAAF,EAAGG,EAAAA,GAAAA,WAAAA,YAAiCH,EAAAI,EAAAL,EACjEM,WAEQC,QAFmB,IAAAF,EAAGC,EAAAA,WAAUD,KAEhCE,aACFC,EAAWL,IAEjB,OAAO,WAA2B,IAALM,GAAK1B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,CAAC,GAAlBa,MAAAA,OAAK,IAAAa,EAAG,KAAIA,EACpBD,EAAS,CACP,CACEE,KAAMC,EAAAA,GAAAA,IAAAA,oCACNJ,aAAAA,GAEF,CACEG,KAAMC,EAAAA,GAAAA,IAAAA,oBACNlB,QAASG,EACTW,aAAAA,IAGN,CACF,EAiBMK,EAA2B,SAAHC,GASxB,IARJC,EAAQD,EAARC,SACAC,EAAYF,EAAZE,aACAC,EAAQH,EAARG,SACAC,EAACJ,EAADI,EACaC,EAAgBL,EAA7Bd,YACYoB,EAAeN,EAA3BP,WACac,EAAgBP,EAA7BQ,YACwBC,EAA2BT,EAAnDhC,uBAEQ0B,EAAiBY,IAAjBZ,aACFgB,EAAeH,GAAiB,SAAAI,GAAA,IAAAC,EAAAC,EAAGC,EAAIH,EAAJG,KAAI,OAAOA,SAAa,QAATF,EAAJE,EAAMC,eAAO,IAAAH,GAAS,QAATC,EAAbD,EAAehC,eAAO,IAAAiC,OAAlB,EAAJA,EAAyBnB,EAAa,GAAE,MACtFsB,EAAWX,IACX3B,EAAU+B,IACVQ,EAAiBvC,EAAQwC,KAAI,SAAAC,GAAM,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpCD,GAAM,IACTnC,SAAW0B,GAAgBS,EAAOpC,QAAU2B,IAAiBS,aAAM,EAANA,EAAQnC,WAAQ,IAG/E,IAAIN,aAAO,EAAPA,EAASP,SAAU,EACrB,OAAO,KAGT,IAAMkD,EACJC,IAAAA,cAACC,EAAAA,eAAc,KACbD,IAAAA,cAACE,EAAAA,YAAW,CAAC5C,QAAS6C,EAAAA,mBAAAA,OACnBrB,EAAE,0BAA2B,CAAEsB,QAAS,CAAC,kBAAoB,KAEhEJ,IAAAA,cAACK,EAAAA,OAAM,CACL,aAAYvB,EAAE,gCAAiC,CAAEsB,QAAS,CAACzB,GAAY,SAAU,kBACjFe,SAAUA,EACVtC,QAASuC,EACTW,gBAAiBlB,EACjBmB,YAAazB,EAAE,gCAAiC,CAAEsB,QAAS,CAACzB,GAAY,SAAU,kBAClFE,SAAUA,EACV,YAAU,8BAKhB,OACGD,GACCoB,IAAAA,cAACQ,EAAAA,QAAS,CACRC,GAAG,oBACHC,UAAU,sEACVC,gCAAgC,MAE/BZ,IAGLA,CAEJ,EAyBAtB,EAAyBmC,aAAe,CACtCjC,UAAU,EACVC,cAAc,EACdC,SAAUgC,EAAAA,eAAAA,KACV/B,EAAGgC,EAAAA,UACHlD,YAAAA,EACAO,WAAAA,EAAAA,WACAe,YAAajB,EAAAA,GAAAA,WAAAA,YACbvB,uBAAAA,E","sources":["webpack:///./src/components/toolbar/toolbarFieldGroupVariant.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Toolbar as PfToolbar, ToolbarContent, ToolbarItem, ToolbarItemVariant } from '@patternfly/react-core';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct } from '../productView/productViewContext';\nimport { Select, SelectPosition } from '../form/select';\nimport { translate } from '../i18n/i18n';\nimport { routerContext } from '../router';\n\n/**\n * A toolbar product configuration select filter requiring a toolbar component parent.\n *\n * @memberof Toolbar\n * @module ToolbarFieldGroupVariant\n */\n\n/**\n * Generate select field options from config\n *\n * @param {object} options\n * @param {Function} options.useRouteDetail\n * @returns {Function}\n */\nconst useToolbarFieldOptions = ({ useRouteDetail: useAliasRouteDetail = routerContext.useRouteDetail } = {}) => {\n  const { availableVariants, firstMatch } = useAliasRouteDetail();\n  const options = [];\n\n  availableVariants?.forEach(variant => {\n    options.push({ title: variant, value: variant, selected: variant === firstMatch?.productId });\n  });\n\n  return options;\n};\n\n/**\n * On select update.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnSelect = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productGroup } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  return ({ value = null } = {}) => {\n    dispatch([\n      {\n        type: reduxTypes.app.SET_PRODUCT_VARIANT_QUERY_RESET_ALL,\n        productGroup\n      },\n      {\n        type: reduxTypes.app.SET_PRODUCT_VARIANT,\n        variant: value,\n        productGroup\n      }\n    ]);\n  };\n};\n\n/**\n * Display a product configuration field with generated options.\n *\n * @fires onSelect\n * @param {object} props\n * @param {boolean} props.isFilter\n * @param {boolean} props.isStandalone\n * @param {string} props.position\n * @param {Function} props.t\n * @param {Function} props.useOnSelect\n * @param {Function} props.useProduct\n * @param {Function} props.useSelector\n * @param {Function} props.useToolbarFieldOptions\n * @returns {React.ReactNode}\n */\nconst ToolbarFieldGroupVariant = ({\n  isFilter,\n  isStandalone,\n  position,\n  t,\n  useOnSelect: useAliasOnSelect,\n  useProduct: useAliasProduct,\n  useSelector: useAliasSelector,\n  useToolbarFieldOptions: useAliasToolbarFieldOptions\n}) => {\n  const { productGroup } = useAliasProduct();\n  const updatedValue = useAliasSelector(({ view }) => view?.product?.variant?.[productGroup], null);\n  const onSelect = useAliasOnSelect();\n  const options = useAliasToolbarFieldOptions();\n  const updatedOptions = options.map(option => ({\n    ...option,\n    selected: (updatedValue && option.value === updatedValue) || option?.selected\n  }));\n\n  if (options?.length <= 1) {\n    return null;\n  }\n\n  const element = (\n    <ToolbarContent>\n      <ToolbarItem variant={ToolbarItemVariant.label}>\n        {t('curiosity-toolbar.label', { context: ['groupVariant'] })}{' '}\n      </ToolbarItem>\n      <Select\n        aria-label={t('curiosity-toolbar.placeholder', { context: [isFilter && 'filter', 'groupVariant'] })}\n        onSelect={onSelect}\n        options={updatedOptions}\n        selectedOptions={updatedValue}\n        placeholder={t('curiosity-toolbar.placeholder', { context: [isFilter && 'filter', 'groupVariant'] })}\n        position={position}\n        data-test=\"toolbarFieldGroupVariant\"\n      />\n    </ToolbarContent>\n  );\n\n  return (\n    (isStandalone && (\n      <PfToolbar\n        id=\"curiosity-toolbar\"\n        className=\"curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar\"\n        collapseListedFiltersBreakpoint=\"sm\"\n      >\n        {element}\n      </PfToolbar>\n    )) ||\n    element\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useOnSelect: Function, useProduct: Function, t: Function, useSelector: Function, isFilter: boolean,\n *     isStandalone: boolean, position: string, useToolbarFieldOptions: Function}}\n */\nToolbarFieldGroupVariant.propTypes = {\n  isFilter: PropTypes.bool,\n  isStandalone: PropTypes.bool,\n  position: PropTypes.string,\n  t: PropTypes.func,\n  useOnSelect: PropTypes.func,\n  useProduct: PropTypes.func,\n  useSelector: PropTypes.func,\n  useToolbarFieldOptions: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useOnSelect: Function, useProduct: Function, t: translate, useSelector: Function, isFilter: boolean,\n *     isStandalone: boolean, position: string, useToolbarFieldOptions: Function}}\n */\nToolbarFieldGroupVariant.defaultProps = {\n  isFilter: false,\n  isStandalone: false,\n  position: SelectPosition.left,\n  t: translate,\n  useOnSelect,\n  useProduct,\n  useSelector: storeHooks.reactRedux.useSelector,\n  useToolbarFieldOptions\n};\n\nexport { ToolbarFieldGroupVariant as default, ToolbarFieldGroupVariant, useOnSelect, useToolbarFieldOptions };\n"],"names":["useToolbarFieldOptions","_ref$useRouteDetail","arguments","length","undefined","useRouteDetail","_useAliasRouteDetail","routerContext","availableVariants","firstMatch","options","forEach","variant","push","title","value","selected","productId","useOnSelect","_ref2","_ref2$useDispatch","useDispatch","useAliasDispatch","storeHooks","_ref2$useProduct","useProduct","productGroup","dispatch","_ref3$value","type","reduxTypes","ToolbarFieldGroupVariant","_ref4","isFilter","isStandalone","position","t","useAliasOnSelect","useAliasProduct","useAliasSelector","useSelector","useAliasToolbarFieldOptions","updatedValue","_ref5","_view$product","_view$product$variant","view","product","onSelect","updatedOptions","map","option","_objectSpread","element","React","ToolbarContent","ToolbarItem","ToolbarItemVariant","context","Select","selectedOptions","placeholder","PfToolbar","id","className","collapseListedFiltersBreakpoint","defaultProps","SelectPosition","translate"],"sourceRoot":""}
{"version":3,"file":"js/1009.1670823099076.23f44c561b747d70a2f3.js","mappings":"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","sources":["webpack:///./src/components/toolbar/toolbarContext.js","webpack:///./node_modules/fast-shallow-equal/index.js","webpack:///./node_modules/react-use/esm/useCustomCompareEffect.js","webpack:///./node_modules/react-use/esm/useShallowCompareEffect.js"],"sourcesContent":["import React from 'react';\nimport { ToolbarItem } from '@patternfly/react-core';\nimport { useProductQuery, useProductToolbarConfig } from '../productView/productViewContext';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { useOnSelect as useSelectCategoryOnSelect, toolbarFieldOptions } from './toolbarFieldSelectCategory';\nimport { useOnSelect as useArchitectureOnSelect } from './toolbarFieldArchitecture';\nimport { useOnSelect as useBillingProviderOnSelect } from './toolbarFieldBillingProvider';\nimport { useOnSelect as useCategoryOnSelect } from './toolbarFieldCategory';\nimport { useOnSelect as useSlaOnSelect } from './toolbarFieldSla';\nimport { useOnSelect as useUsageOnSelect } from './toolbarFieldUsage';\nimport { useOnSelect as useVariantOnSelect } from './toolbarFieldVariant';\nimport { SelectPosition } from '../form/select';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Clear a specific toolbar category using a select component's OnSelect hook.\n *\n * @param {object} options\n * @param {Function} options.useArchitectureOnSelect\n * @param {Function} options.useBillingProviderOnSelect\n * @param {Function} options.useCategoryOnSelect\n * @param {Function} options.useSlaOnSelect\n * @param {Function} options.useUsageOnSelect\n * @param {Function} options.useVariantOnSelect\n * @returns {Function}\n */\nconst useToolbarFieldClear = ({\n  useArchitectureOnSelect: useAliasArchitectureOnSelect = useArchitectureOnSelect,\n  useBillingProviderOnSelect: useAliasBillingProviderOnSelect = useBillingProviderOnSelect,\n  useCategoryOnSelect: useAliasCategoryOnSelect = useCategoryOnSelect,\n  useSlaOnSelect: useAliasSlaOnSelect = useSlaOnSelect,\n  useUsageOnSelect: useAliasUsageOnSelect = useUsageOnSelect,\n  useVariantOnSelect: useAliasVariantOnSelect = useVariantOnSelect\n} = {}) => {\n  const architectureOnSelect = useAliasArchitectureOnSelect();\n  const billingOnSelect = useAliasBillingProviderOnSelect();\n  const categoryOnSelect = useAliasCategoryOnSelect();\n  const slaOnSelect = useAliasSlaOnSelect();\n  const usageOnSelect = useAliasUsageOnSelect();\n  const variantOnSelect = useAliasVariantOnSelect();\n\n  return field => {\n    switch (field) {\n      case RHSM_API_QUERY_SET_TYPES.ARCHITECTURE:\n        architectureOnSelect();\n        break;\n      case RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER:\n        billingOnSelect();\n        break;\n      case RHSM_API_QUERY_SET_TYPES.CATEGORY:\n        categoryOnSelect();\n        break;\n      case RHSM_API_QUERY_SET_TYPES.SLA:\n        slaOnSelect();\n        break;\n      case RHSM_API_QUERY_SET_TYPES.USAGE:\n        usageOnSelect();\n        break;\n      case RHSM_API_QUERY_SET_TYPES.VARIANT:\n        variantOnSelect();\n        break;\n      default:\n        break;\n    }\n  };\n};\n\n/**\n * Clear all available toolbar categories.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useArchitectureOnSelect\n * @param {Function} options.useSelectCategoryOnSelect\n * @param {Function} options.useBillingProviderOnSelect\n * @param {Function} options.useCategoryOnSelect\n * @param {Function} options.useSlaOnSelect\n * @param {Function} options.useUsageOnSelect\n * @param {Function} options.useVariantOnSelect\n * @returns {Function}\n */\nconst useToolbarFieldClearAll = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useArchitectureOnSelect: useAliasArchitectureOnSelect = useArchitectureOnSelect,\n  useSelectCategoryOnSelect: useAliasSelectCategoryOnSelect = useSelectCategoryOnSelect,\n  useBillingProviderOnSelect: useAliasBillingProviderOnSelect = useBillingProviderOnSelect,\n  useCategoryOnSelect: useAliasCategoryOnSelect = useCategoryOnSelect,\n  useSlaOnSelect: useAliasSlaOnSelect = useSlaOnSelect,\n  useUsageOnSelect: useAliasUsageOnSelect = useUsageOnSelect,\n  useVariantOnSelect: useAliasVariantOnSelect = useVariantOnSelect\n} = {}) => {\n  const {\n    [RHSM_API_QUERY_SET_TYPES.ARCHITECTURE]: architecture,\n    [RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER]: billingProvider,\n    [RHSM_API_QUERY_SET_TYPES.CATEGORY]: category,\n    [RHSM_API_QUERY_SET_TYPES.SLA]: sla,\n    [RHSM_API_QUERY_SET_TYPES.USAGE]: usage,\n    [RHSM_API_QUERY_SET_TYPES.VARIANT]: variant\n  } = useAliasProductQuery();\n  const architectureOnSelect = useAliasArchitectureOnSelect();\n  const billingOnSelect = useAliasBillingProviderOnSelect();\n  const categoryOnSelect = useAliasCategoryOnSelect();\n  const slaOnSelect = useAliasSlaOnSelect();\n  const usageOnSelect = useAliasUsageOnSelect();\n  const selectCategoryOnSelect = useAliasSelectCategoryOnSelect();\n  const variantOnSelect = useAliasVariantOnSelect();\n\n  return hardFilterReset => {\n    if (typeof architecture === 'string') {\n      architectureOnSelect();\n    }\n\n    if (typeof billingProvider === 'string') {\n      billingOnSelect();\n    }\n\n    if (typeof category === 'string') {\n      categoryOnSelect();\n    }\n\n    if (typeof sla === 'string') {\n      slaOnSelect();\n    }\n\n    if (typeof usage === 'string') {\n      usageOnSelect();\n    }\n\n    if (typeof variant === 'string') {\n      variantOnSelect();\n    }\n\n    if (hardFilterReset) {\n      selectCategoryOnSelect();\n    }\n  };\n};\n\n/**\n * Return list of secondary toolbar fields for display.\n *\n * @param {object} options\n * @param {Array} options.categoryOptions\n * @param {Function} options.useProductToolbarConfig\n * @returns {Array}\n */\nconst useToolbarSecondaryFields = ({\n  categoryOptions = toolbarFieldOptions,\n  useProductToolbarConfig: useAliasProductToolbarConfig = useProductToolbarConfig\n} = {}) => {\n  const { secondaryFilters = [] } = useAliasProductToolbarConfig();\n\n  return secondaryFilters.map(({ id, content }) => {\n    const option = categoryOptions.find(({ value: categoryOptionValue }) => id === categoryOptionValue);\n    const { component: OptionComponent } = option || {};\n\n    return (\n      (OptionComponent && (\n        <ToolbarItem key={`option-${id}`}>\n          <OptionComponent isFilter={false} position={SelectPosition.right} />\n        </ToolbarItem>\n      )) || <ToolbarItem key={helpers.generateId()}>{content}</ToolbarItem> ||\n      null\n    );\n  });\n};\n\nconst context = {\n  useToolbarFieldClear,\n  useToolbarFieldClearAll,\n  useToolbarSecondaryFields\n};\n\nexport { context as default, context, useToolbarFieldClear, useToolbarFieldClearAll, useToolbarSecondaryFields };\n","var keyList = Object.keys;\n\nexports.equal = function equal (a, b) {\n  if (a === b) return true;\n  if (!(a instanceof Object) || !(b instanceof Object)) return false;\n\n  var keys = keyList(a);\n  var length = keys.length;\n\n  for (var i = 0; i < length; i++)\n    if (!(keys[i] in b)) return false;\n\n  for (var i = 0; i < length; i++)\n    if (a[keys[i]] !== b[keys[i]]) return false;\n\n  return length === keyList(b).length;\n};\n","import { useEffect, useRef } from 'react';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useCustomCompareEffect = function (effect, deps, depsEqual) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useCustomCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useCustomCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n        if (typeof depsEqual !== 'function') {\n            console.warn('`useCustomCompareEffect` should be used with depsEqual callback for comparing deps list');\n        }\n    }\n    var ref = useRef(undefined);\n    if (!ref.current || !depsEqual(deps, ref.current)) {\n        ref.current = deps;\n    }\n    useEffect(effect, ref.current);\n};\nexport default useCustomCompareEffect;\n","import { equal as isShallowEqual } from 'fast-shallow-equal';\nimport useCustomCompareEffect from './useCustomCompareEffect';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar shallowEqualDepsList = function (prevDeps, nextDeps) {\n    return prevDeps.every(function (dep, index) { return isShallowEqual(dep, nextDeps[index]); });\n};\nvar useShallowCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useShallowCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useShallowCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, shallowEqualDepsList);\n};\nexport default useShallowCompareEffect;\n"],"names":["useToolbarFieldClear","useArchitectureOnSelect","useAliasArchitectureOnSelect","useBillingProviderOnSelect","useAliasBillingProviderOnSelect","useCategoryOnSelect","useAliasCategoryOnSelect","useSlaOnSelect","useAliasSlaOnSelect","useUsageOnSelect","useAliasUsageOnSelect","useVariantOnSelect","useAliasVariantOnSelect","architectureOnSelect","billingOnSelect","categoryOnSelect","slaOnSelect","usageOnSelect","variantOnSelect","field","RHSM_API_QUERY_SET_TYPES","useToolbarFieldClearAll","useProductQuery","useAliasProductQuery","useSelectCategoryOnSelect","useAliasSelectCategoryOnSelect","architecture","billingProvider","category","sla","usage","variant","selectCategoryOnSelect","hardFilterReset","useToolbarSecondaryFields","categoryOptions","toolbarFieldOptions","useProductToolbarConfig","useAliasProductToolbarConfig","secondaryFilters","map","id","content","OptionComponent","find","categoryOptionValue","value","component","ToolbarItem","key","isFilter","position","SelectPosition","helpers","context","keyList","Object","keys","exports","a","b","length","i","effect","deps","depsEqual","ref","useRef","undefined","current","useEffect","shallowEqualDepsList","prevDeps","nextDeps","every","dep","index"],"sourceRoot":""}
{"version":3,"file":"js/1203.c35bb19b48097e90a2b5.js","mappings":"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","sources":["webpack:///./src/components/inventoryCardSubscriptions/inventoryCardSubscriptions.js","webpack:///./src/components/inventoryCardSubscriptions/inventoryCardSubscriptionsContext.js","webpack:///./src/components/minHeight/minHeight.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  useProductInventorySubscriptionsConfig,\n  useProductInventorySubscriptionsQuery\n} from '../productView/productViewContext';\nimport {\n  useGetSubscriptionsInventory,\n  useOnPageSubscriptions,\n  useOnColumnSortSubscriptions\n} from './inventoryCardSubscriptionsContext';\nimport InventoryCard from '../inventoryCard/inventoryCard';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Components\n * @module InventoryCardSubscriptions\n * @property {module} InventoryCardSubscriptionsContext\n */\n\n/**\n * A subscriptions' system inventory component.\n *\n * @param {object} props\n * @param {boolean} props.isDisabled\n * @param {Function} props.useGetInventory\n * @param {Function} props.useOnPage\n * @param {Function} props.useOnColumnSort\n * @param {Function} props.useProductInventoryConfig\n * @param {Function} props.useProductInventoryQuery\n * @fires onColumnSort\n * @fires onPage\n * @returns {React.ReactNode}\n */\nconst InventoryCardSubscriptions = ({ ...props }) => <InventoryCard cardActions={null} {...props} />;\n\n/**\n * Prop types.\n *\n * @type {{useOnPage: Function, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCardSubscriptions.propTypes = {\n  isDisabled: PropTypes.bool,\n  useGetInventory: PropTypes.func,\n  useOnPage: PropTypes.func,\n  useOnColumnSort: PropTypes.func,\n  useProductInventoryConfig: PropTypes.func,\n  useProductInventoryQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useOnPage: Function, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCardSubscriptions.defaultProps = {\n  isDisabled: helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  useGetInventory: useGetSubscriptionsInventory,\n  useOnPage: useOnPageSubscriptions,\n  useOnColumnSort: useOnColumnSortSubscriptions,\n  useProductInventoryConfig: useProductInventorySubscriptionsConfig,\n  useProductInventoryQuery: useProductInventorySubscriptionsQuery\n};\n\nexport { InventoryCardSubscriptions as default, InventoryCardSubscriptions };\n","import { useShallowCompareEffect } from 'react-use';\nimport _camelCase from 'lodash/camelCase';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventorySubscriptionsQuery } from '../productView/productViewContext';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\n\n/**\n * @memberof InventoryCardSubscriptions\n * @module InventoryCardSubscriptionsContext\n */\n\n/**\n * Combined Redux RHSM Actions, getSubscriptionsInventory, and inventory selector response.\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsResponse\n * @returns {Function}\n */\nconst useGetSubscriptionsInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getSubscriptionsInventory,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventorySubscriptionsQuery,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductInventoryQuery();\n  const dispatch = useAliasDispatch();\n  const { cancelled, pending, data, ...response } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.subscriptionsInventory?.[productId]\n  );\n\n  useShallowCompareEffect(() => {\n    if (!isDisabled) {\n      getInventory(productId, query)(dispatch);\n    }\n  }, [dispatch, isDisabled, productId, query]);\n\n  return {\n    ...response,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * An onPage callback for subscriptions inventory.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnPageSubscriptions = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for subscriptions inventory.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   * @returns {void}\n   */\n  return ({ offset, perPage }) => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n};\n\n/**\n * An onColumnSort callback for subscriptions inventory.\n *\n * @param {object} options\n * @param {object} options.sortColumns\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnColumnSortSubscriptions = ({\n  sortColumns = SORT_TYPES,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for subscriptions inventory.\n   *\n   * @event onColumnSort\n   * @param {*} _data\n   * @param {object} params\n   * @param {string} params.direction\n   * @param {string} params.id\n   * @returns {void}\n   */\n  return (_data, { direction, id }) => {\n    const updatedSortColumn = Object.values(sortColumns).find(value => value === id || _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n};\n\nconst context = {\n  useGetSubscriptionsInventory,\n  useOnPageSubscriptions,\n  useOnColumnSortSubscriptions\n};\n\nexport {\n  context as default,\n  context,\n  useGetSubscriptionsInventory,\n  useOnPageSubscriptions,\n  useOnColumnSortSubscriptions\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useResizeObserver } from '../../hooks/useWindow';\n\n/**\n * Normalize component height on page loads and updates.\n *\n * @memberof Components\n * @module MinHeight\n */\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {boolean} props.isOnLoad\n * @param {number} props.minHeight\n * @param {Function} props.useResizeObserver\n * @returns {React.ReactNode}\n */\nconst MinHeight = ({ children, isOnLoad, minHeight, useResizeObserver: useAliasResizeObserver }) => {\n  const [tracking, setTracking] = useState({ containerWidth: undefined, isLoaded: false });\n  const containerRef = useRef(null);\n  const innerContainerRef = useRef(null);\n  const { height: containerHeight, width: containerWidth } = useAliasResizeObserver(containerRef);\n\n  useEffect(() => {\n    if (!isOnLoad || (isOnLoad && !tracking.isLoaded)) {\n      const { current: domElement = {} } = containerRef;\n      const { current: innerDomElement = {} } = innerContainerRef;\n\n      if (domElement?.style) {\n        let updatedHeight = innerDomElement?.clientHeight || 0;\n\n        if (minHeight > containerHeight) {\n          updatedHeight = minHeight;\n        }\n\n        domElement.style.minHeight = `${updatedHeight}px`;\n        setTracking(() => ({\n          containerWidth,\n          isLoaded: isOnLoad,\n          updatedHeight\n        }));\n      }\n    }\n  }, [containerHeight, containerWidth, containerRef, innerContainerRef, isOnLoad, minHeight, tracking.isLoaded]);\n\n  return (\n    <div className=\"curiosity-minheight\" ref={containerRef}>\n      <div className=\"curiosity-minheight__inner\" ref={innerContainerRef}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, useResizeObserver: Function, children: React.ReactNode, isOnLoad: boolean}}\n */\nMinHeight.propTypes = {\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number,\n  isOnLoad: PropTypes.bool,\n  useResizeObserver: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, useResizeObserver: Function, isOnLoad: boolean}}\n */\nMinHeight.defaultProps = {\n  isOnLoad: false,\n  minHeight: 0,\n  useResizeObserver\n};\n\nexport { MinHeight as default, MinHeight };\n"],"names":["InventoryCardSubscriptions","_ref","props","React","InventoryCard","_extends","cardActions","propTypes","isDisabled","PropTypes","useGetInventory","useOnPage","useOnColumnSort","useProductInventoryConfig","useProductInventoryQuery","defaultProps","helpers","useGetSubscriptionsInventory","useOnPageSubscriptions","useOnColumnSortSubscriptions","useProductInventorySubscriptionsConfig","useProductInventorySubscriptionsQuery","getInventory","reduxActions","useDispatch","useAliasDispatch","storeHooks","useProduct","useAliasProduct","useAliasProductInventoryQuery","useSelectorsResponse","useAliasSelectorsResponse","arguments","length","undefined","productId","query","dispatch","cancelled","pending","data","response","_inventory$subscripti","inventory","subscriptionsInventory","useShallowCompareEffect","_ref2","offset","perPage","type","reduxTypes","RHSM_API_QUERY_SET_TYPES","viewId","sortColumns","SORT_TYPES","_data","_ref3","direction","id","updatedSortColumn","Object","values","find","value","_camelCase","updatedDirection","SortByDirection","SORT_DIRECTION_TYPES","console","warn","concat","context","MinHeight","children","isOnLoad","minHeight","useResizeObserver","useAliasResizeObserver","tracking","setTracking","useState","containerWidth","isLoaded","containerRef","useRef","innerContainerRef","height","containerHeight","width","useEffect","current","domElement","innerDomElement","style","updatedHeight","clientHeight","className","ref"],"sourceRoot":""}
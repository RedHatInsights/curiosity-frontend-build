{"version":3,"file":"js/7780.1663082440251.af7a0e4d8be961606fe7.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/OUIA/ouia.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./src/components/form/formHelpers.js","webpack:///./src/components/form/textInput.js","webpack:///./src/components/inventoryCard/inventoryCardHelpers.js","webpack:///./src/components/minHeight/minHeight.js","webpack:///./src/components/pagination/pagination.js","webpack:///./src/components/pagination/paginationHelpers.js","webpack:///./src/components/toolbar/toolbarFieldDisplayName.js"],"sourcesContent":["import { useMemo } from 'react';\nlet uid = 0;\nconst ouiaPrefix = 'OUIA-Generated-';\nconst ouiaIdByRoute = {};\n/** Get props to conform to OUIA spec\n *\n * For functional components, use the useOUIAProps function instead\n *\n * In class based components, create a state variable ouiaStateId to create a static generated ID:\n * state = {\n *  ouiaStateId: getDefaultOUIAId(Chip.displayName)\n * }\n * This generated ID should remain alive as long as the component is not unmounted.\n *\n * Then add the attributes to the component\n * {...getOUIAProps('OverflowChip', this.props.ouiaId !== undefined ? this.props.ouiaId : this.state.ouiaStateId)}\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n */\nexport function getOUIAProps(componentType, id, ouiaSafe = true) {\n    return {\n        'data-ouia-component-type': `PF4/${componentType}`,\n        'data-ouia-safe': ouiaSafe,\n        'data-ouia-component-id': id\n    };\n}\n/**\n * Hooks version of the getOUIAProps function that also memoizes the generated ID\n * Can only be used in functional components\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAProps = (componentType, id, ouiaSafe = true, variant) => ({\n    'data-ouia-component-type': `PF4/${componentType}`,\n    'data-ouia-safe': ouiaSafe,\n    'data-ouia-component-id': useOUIAId(componentType, id, variant)\n});\n/**\n * Returns the ID or the memoized generated ID\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAId = (componentType, id, variant) => {\n    if (id !== undefined) {\n        return id;\n    }\n    return useMemo(() => getDefaultOUIAId(componentType, variant), [componentType, variant]);\n};\n/**\n * Returns a generated id based on the URL location\n *\n * @param {string} componentType OUIA component type\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport function getDefaultOUIAId(componentType, variant) {\n    /*\n    ouiaIdByRoute = {\n      [route+componentType]: [number]\n    }\n    */\n    try {\n        let key;\n        if (typeof window !== 'undefined') {\n            // browser environments\n            key = `${window.location.href}-${componentType}-${variant || ''}`;\n        }\n        else {\n            // node/SSR environments\n            key = `${componentType}-${variant || ''}`;\n        }\n        if (!ouiaIdByRoute[key]) {\n            ouiaIdByRoute[key] = 0;\n        }\n        return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++ouiaIdByRoute[key]}`;\n    }\n    catch (exception) {\n        return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++uid}`;\n    }\n}\n//# sourceMappingURL=ouia.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Fragment } from 'react';\nimport { Toolbar } from '@patternfly/react-core';\nimport { useOUIAId } from '@patternfly/react-core/';\nimport classNames from 'classnames';\nimport '../TableToolbar/TableToolbar.css';\nfunction generateCount(results) {\n    if (results > 1 || results < 1) {\n        return \"\".concat(results, \" Results\");\n    }\n    else {\n        return \"\".concat(results, \" Result\");\n    }\n}\nvar TableToolbar = function (_a) {\n    var _b;\n    var _c = _a.isFooter, isFooter = _c === void 0 ? false : _c, results = _a.results, className = _a.className, selected = _a.selected, children = _a.children, ouiaId = _a.ouiaId, _d = _a.ouiaSafe, ouiaSafe = _d === void 0 ? true : _d, props = __rest(_a, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n    var tableToolbarClasses = classNames('ins-c-table__toolbar', (_b = {}, _b[\"ins-m-footer\"] = isFooter, _b), className);\n    var ouiaComponentType = 'RHI/TableToolbar';\n    var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n    return (React.createElement(Fragment, null,\n        React.createElement(Toolbar, __assign({ className: tableToolbarClasses, \"data-ouia-component-type\": ouiaComponentType, \"data-ouia-component-id\": ouiaFinalId, \"data-ouia-safe\": ouiaSafe }, props), children),\n        ((results && results >= 0) || (selected && selected >= 0)) && (React.createElement(\"div\", { className: \"ins-c-table__toolbar-results\" },\n            results && results >= 0 && React.createElement(\"span\", { className: \"ins-c-table__toolbar-results-count\" },\n                \" \",\n                generateCount(results),\n                \" \"),\n            selected && selected >= 0 && React.createElement(\"span\", { className: \"ins-c-table__toolbar-results-selected\" },\n                \" \",\n                selected,\n                \" Selected \")))));\n};\nexport default TableToolbar;\n//# sourceMappingURL=TableToolbar.js.map","import { helpers } from '../../common/helpers';\n\n/**\n * Create a consistent mock event object.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget, name, id: *, persist: Function, value, target}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput as PfTextInput } from '@patternfly/react-core';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly TextInput. Provides restructured event data,\n * and an onClear event for the search type.\n *\n * @augments React.Component\n * @fires onKeyUp\n * @fires onMouseUp\n * @fires onChange\n */\nclass TextInput extends React.Component {\n  state = {\n    updatedValue: null\n  };\n\n  /**\n   * onKeyUp event, provide additional functionality for onClear event.\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  onKeyUp = event => {\n    const { onClear, onKeyUp, type } = this.props;\n    const { currentTarget, keyCode } = event;\n    const clonedEvent = { ...event };\n\n    onKeyUp(createMockEvent(event, true));\n\n    if (keyCode === 27) {\n      if (type === 'search' && currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      } else {\n        this.setState({ updatedValue: '' }, () => {\n          onClear(\n            createMockEvent({ ...clonedEvent, ...{ currentTarget: { ...clonedEvent.currentTarget, value: '' } } })\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * onMouseUp event, provide additional functionality for onClear event.\n   *\n   * @event onMouseUp\n   * @param {object} event\n   */\n  onMouseUp = event => {\n    const { onClear, onMouseUp, type } = this.props;\n    const { currentTarget } = event;\n    const clonedEvent = { ...event };\n\n    onMouseUp(createMockEvent(event, true));\n\n    if (type !== 'search' || currentTarget.value === '') {\n      return;\n    }\n\n    setTimeout(() => {\n      if (currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      }\n    });\n  };\n\n  /**\n   * onChange event, provide restructured event.\n   *\n   * @param {string} value\n   * @param {object} event\n   */\n  onChange = (value, event) => {\n    const { onChange } = this.props;\n    const clonedEvent = { ...event };\n\n    this.setState({ updatedValue: value }, () => {\n      onChange(createMockEvent(clonedEvent));\n    });\n  };\n\n  /**\n   * Render a text input.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedValue } = this.state;\n    const {\n      className,\n      id,\n      isDisabled,\n      name,\n      onChange,\n      onClear,\n      onKeyUp,\n      onMouseUp,\n      isReadOnly,\n      type,\n      value,\n      ...props\n    } = this.props;\n    const updatedName = name || helpers.generateId();\n    const updatedId = id || updatedName;\n\n    return (\n      <PfTextInput\n        id={updatedId}\n        name={updatedName}\n        className={`curiosity-text-input ${className}`}\n        isDisabled={isDisabled || false}\n        onChange={this.onChange}\n        onKeyUp={this.onKeyUp}\n        onMouseUp={this.onMouseUp}\n        isReadOnly={isReadOnly || false}\n        type={type}\n        value={updatedValue ?? value ?? ''}\n        {...props}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.defaultProps = {\n  className: '',\n  id: null,\n  isDisabled: false,\n  isReadOnly: false,\n  name: null,\n  onChange: helpers.noop,\n  onClear: helpers.noop,\n  onKeyUp: helpers.noop,\n  onMouseUp: helpers.noop,\n  type: 'text',\n  value: ''\n};\n\nexport { TextInput as default, TextInput };\n","import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { Tooltip } from '../tooltip/tooltip';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { helpers } from '../../common';\n\n/**\n * ToDo: review setting up a transformed cell cache for already transformed cells.\n * - review using a simple state and key memoized component\n * - review using lru cache in a inventoryCardContext custom hook\n */\n\n/**\n * Apply product inventory config properties consistently.\n *\n * @param {Function|string|number} prop\n * @param {object} options\n * @param {*[]|*} options.params\n * @returns {React.ReactNode}\n */\nconst applyConfigProperty = (prop, { params = [] } = {}) => {\n  let updatedProp = prop;\n\n  if (typeof prop === 'function') {\n    updatedProp = prop(...((Array.isArray(params) && params) || [params]));\n  }\n\n  if (typeof updatedProp === 'string' || typeof updatedProp === 'number' || React.isValidElement(updatedProp)) {\n    return updatedProp;\n  }\n\n  return undefined;\n};\n\n/**\n * Generate header and row cell configuration from filters.\n *\n * @param {object} params\n * @param {Array<{id: string, isStandalone: boolean, cell:React.ReactNode|{ title: string }, cellWidth: number,\n *     header:React.ReactNode|{ title: string }, onSort: Function, showEmptyCell: boolean, sortId: string,\n *     sortActive: boolean, sortDirection: string, transforms: Array}>} params.filters\n * @param {object} params.cellData\n * @param {object} params.meta\n * @param {object} params.session\n * @returns {{bodyCells: { title: React.ReactNode }[], headerCells: { title: React.ReactNode }[]}}\n */\nconst applyHeaderRowCellFilters = ({ filters = [], cellData = {}, meta = {}, session = {} } = {}) => {\n  const headerCells = [];\n  const bodyCells = [];\n\n  filters.forEach(\n    ({\n      isStandalone,\n      id,\n      cell,\n      cellWidth,\n      header,\n      onSort,\n      showEmptyCell = true,\n      sortId,\n      sortActive,\n      sortDirection,\n      transforms\n    }) => {\n      const headerCellUpdated = { title: translate('curiosity-inventory.header', { context: id }), transforms: [] };\n      const bodyCellUpdated = { title: '' };\n\n      // set filtered base header and body cells, or if filter doesn't exist skip\n      if (cellData[id]) {\n        headerCellUpdated.title = cellData[id]?.title ?? id;\n        bodyCellUpdated.title = cellData[id]?.value ?? '';\n      } else if (isStandalone === true) {\n        headerCellUpdated.title = '';\n        bodyCellUpdated.title = '';\n      } else {\n        if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n          console.warn(`Warning: Filter \"${id}\" not found in \"table row\" response data.`, cellData);\n        }\n        if (showEmptyCell === false) {\n          return;\n        }\n      }\n\n      // set header cell title\n      if (header) {\n        const updatedHeaderCellTitle = applyConfigProperty(header, {\n          params: [{ ...cellData }, { ...session }, { ...meta }]\n        });\n        if (updatedHeaderCellTitle) {\n          headerCellUpdated.title = updatedHeaderCellTitle;\n        } else if (_isPlainObject(header)) {\n          Object.assign(headerCellUpdated, { ...header });\n        }\n\n        // set header cell tooltip\n        if (header.tooltip && headerCellUpdated.title) {\n          const updatedHeaderCellTooltip = applyConfigProperty(header.tooltip, {\n            params: [{ ...cellData }, { ...session }, { ...meta }]\n          });\n          if (updatedHeaderCellTooltip) {\n            headerCellUpdated.title = <Tooltip content={updatedHeaderCellTooltip}>{headerCellUpdated.title}</Tooltip>;\n          }\n\n          delete headerCellUpdated.tooltip;\n        }\n      }\n\n      // set header cell transforms\n      if (Array.isArray(headerCellUpdated.transforms)) {\n        if (Array.isArray(transforms)) {\n          headerCellUpdated.transforms = headerCellUpdated.transforms.concat([...transforms]);\n        }\n\n        if (typeof cellWidth === 'number') {\n          headerCellUpdated.transforms.push(PfCellWidth(cellWidth));\n        }\n      }\n\n      // set header cell onSort\n      if (typeof onSort === 'function') {\n        headerCellUpdated.onSort = obj => onSort({ ...cellData }, { ...obj, id: sortId || id });\n        headerCellUpdated.sortActive = sortActive;\n        headerCellUpdated.sortDirection = sortDirection;\n      }\n\n      // set body cell title\n      if (cell) {\n        const updatedBodyCellTitle = applyConfigProperty(cell, {\n          params: [{ ...cellData }, { ...session }, { ...meta }]\n        });\n        if (updatedBodyCellTitle) {\n          bodyCellUpdated.title = updatedBodyCellTitle;\n        } else if (_isPlainObject(cell)) {\n          Object.assign(bodyCellUpdated, { ...cell });\n        }\n\n        // set body cell tooltip\n        if (cell.tooltip && bodyCellUpdated.title) {\n          const updatedBodyCellTooltip = applyConfigProperty(cell.tooltip, {\n            params: [{ ...cellData }, { ...session }, { ...meta }]\n          });\n          if (updatedBodyCellTooltip) {\n            bodyCellUpdated.title = <Tooltip content={updatedBodyCellTooltip}>{bodyCellUpdated.title}</Tooltip>;\n          }\n\n          delete bodyCellUpdated.tooltip;\n        }\n      }\n\n      headerCells.push(headerCellUpdated);\n      bodyCells.push(bodyCellUpdated);\n    }\n  );\n\n  return {\n    headerCells,\n    bodyCells\n  };\n};\n\n/**\n * Shallow clone filter, and apply a column sort filter.\n *\n * @param {object} params\n * @param {{onSort: Function, sortActive: boolean, sortDirection: string, isSortDefault: boolean,\n *     sortDefaultInitialDirection: string}} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {{}}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} } = {}) => {\n  const { id, sortId } = filter;\n  const updatedId = sortId || id;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    (query?.[RHSM_API_QUERY_TYPES.SORT] === updatedId || _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === updatedId)\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  if (\n    hasSort &&\n    !updatedFilter.sortActive &&\n    !query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    updatedFilter.isSortDefault === true\n  ) {\n    updatedFilter.sortActive = true;\n\n    if (updatedFilter.sortDefaultInitialDirection) {\n      updatedFilter.sortDirection = updatedFilter.sortDefaultInitialDirection;\n    }\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Shallow clone and apply a consistent PF \"wrappable\" transformation config allowing column content to wrap.\n *\n * @param {object} params\n * @param {object} params.filter\n * @returns {{}}\n */\nconst applyWrappableFilters = ({ filter = {} } = {}) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Shallow clone and apply, sequence specific, additional properties to filters.\n *\n * @param {object} params\n * @param {Array<{id: string, cell:*, cellWidth: number, header:*, onSort: Function,\n *     showEmptyCell: boolean, sortId: string, sortActive: boolean,\n *     sortDirection: string, transforms: Array, isSortDefault: boolean,\n *     sortDefaultInitialDirection: string}>} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {*[]}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} } = {}) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array<{id: string, cell:React.ReactNode|{ title: string }, cellWidth: number,\n *     header:React.ReactNode|{ title: string }, onSort: Function, showEmptyCell: boolean,\n *     sortId: string, sortActive: boolean, sortDirection: string,\n *     transforms: Array}>} params.filters\n * @param {object} params.cellData\n * @param {object} params.meta\n * @param {object} params.session\n * @returns {{columnHeaders: { title: React.ReactNode }[], cells: { title: React.ReactNode }[], data: {}}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, meta = {}, session = {} } = {}) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value = '']) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value || '...');\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length && Object.keys(allCells).length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    const { headerCells = [], bodyCells = [] } = applyHeaderRowCellFilters({\n      filters,\n      cellData: allCells,\n      meta,\n      session\n    });\n\n    updatedColumnHeaders.push(...headerCells);\n    updatedCells.push(...bodyCells);\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryCardHelpers = {\n  applyConfigProperty,\n  applyHeaderRowCellFilters,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryCardHelpers as default,\n  inventoryCardHelpers,\n  applyConfigProperty,\n  applyHeaderRowCellFilters,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup } from '@patternfly/react-core';\nimport _debounce from 'lodash/debounce';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport { TextInput } from '../form/textInput';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: evaluate the debounce milliseconds, currently based off platforms default 800 ms\n */\n/**\n * Display a display name input field for search.\n *\n * @fires onSubmit\n * @fires onClear\n * @fires onKeyUp\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.useDispatch\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryHostsQuery\n * @returns {Node}\n */\nconst ToolbarFieldDisplayName = ({\n  t,\n  useDispatch: useAliasDispatch,\n  useProduct: useAliasProduct,\n  useProductInventoryHostsQuery: useAliasProductInventoryHostsQuery\n}) => {\n  const { viewId } = useAliasProduct();\n  const { [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: currentValue } = useAliasProductInventoryHostsQuery();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On submit, dispatch type.\n   *\n   * @event onSubmit\n   * @param {string} submitValue\n   * @returns {void}\n   */\n  const onSubmit = submitValue =>\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: submitValue?.trim() || null\n      }\n    ]);\n\n  /**\n   * On clear, dispatch type.\n   *\n   * @event onClear\n   * @returns {void}\n   */\n  const onClear = () => {\n    if (currentValue === '' || !currentValue) {\n      return;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: null\n      }\n    ]);\n  };\n\n  /**\n   * Set up submit debounce event to allow for bypass.\n   */\n  const debounced = _debounce(onSubmit, 700);\n\n  /**\n   * On enter submit value, on type submit value, and on esc ignore (clear value at component level).\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 13:\n        onSubmit(event.value);\n        break;\n      case 27:\n        break;\n      default:\n        debounced(event.value);\n        break;\n    }\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        aria-label={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        className=\"curiosity-input__display-name\"\n        iconVariant=\"search\"\n        maxLength={255}\n        onClear={onClear}\n        onKeyUp={onKeyUp}\n        value={currentValue}\n        placeholder={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        data-test=\"toolbarFieldDisplayName\"\n      />\n    </InputGroup>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.propTypes = {\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryHostsQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.defaultProps = {\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useProduct,\n  useProductInventoryHostsQuery\n};\n\nexport { ToolbarFieldDisplayName as default, ToolbarFieldDisplayName };\n"],"names":["uid","ouiaPrefix","ouiaIdByRoute","getOUIAProps","componentType","id","ouiaSafe","useOUIAProps","variant","useOUIAId","undefined","useMemo","getDefaultOUIAId","key","window","location","href","exception","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_a","_b","_c","isFooter","results","className","selected","children","ouiaId","_d","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","tableToolbarClasses","ouiaComponentType","ouiaFinalId","Fragment","Toolbar","concat","generateCount","createMockEvent","event","persistEvent","checked","currentTarget","keyCode","persist","helpers","target","name","value","doesNotHaveMinimumCharacters","characters","formHelpers","TextInput","state","updatedValue","onKeyUp","onClear","type","clonedEvent","setState","onMouseUp","setTimeout","onChange","isDisabled","isReadOnly","updatedName","updatedId","React","defaultProps","applyConfigProperty","prop","params","updatedProp","Array","isArray","applyHeaderRowCellFilters","filters","cellData","meta","session","headerCells","bodyCells","forEach","isStandalone","cell","cellWidth","header","onSort","showEmptyCell","sortId","sortActive","sortDirection","transforms","headerCellUpdated","title","translate","context","bodyCellUpdated","console","warn","updatedHeaderCellTitle","_isPlainObject","tooltip","updatedHeaderCellTooltip","Tooltip","content","push","PfCellWidth","obj","updatedBodyCellTitle","updatedBodyCellTooltip","applySortFilters","filter","query","updatedFilter","hasSort","RHSM_API_QUERY_TYPES","_camelCase","SORT_DIRECTION_TYPES","SortByDirection","isSortDefault","sortDefaultInitialDirection","applyWrappableFilters","wrappable","parseInventoryFilters","map","isSortable","isWrappable","parseRowCellsListData","updatedColumnHeaders","updatedCells","allCells","entries","keys","columnHeaders","cells","data","inventoryCardHelpers","MinHeight","containerRef","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","clientWidth","current","setMinHeight","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","ref","Pagination","dropDirection","isCompact","itemCount","offset","onPage","onPerPage","perPage","onSetPage","page","limit","paginationHelpers","onPerPageSelect","calculateOffsetFromPage","calculatePageFromOffset","isLastPage","Math","ceil","ToolbarFieldDisplayName","useAliasDispatch","useDispatch","useAliasProduct","useProduct","useAliasProductInventoryHostsQuery","useProductInventoryHostsQuery","viewId","currentValue","dispatch","onSubmit","submitValue","reduxTypes","trim","debounced","_debounce","InputGroup","iconVariant","maxLength","placeholder","storeHooks"],"sourceRoot":""}
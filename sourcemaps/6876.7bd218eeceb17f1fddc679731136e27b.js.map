{"version":3,"file":"js/6876.1643133385890.308e73071abdbf78f55e.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/OUIA/ouia.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./src/components/form/formHelpers.js","webpack:///./src/components/form/textInput.js","webpack:///./src/components/inventoryList/inventoryList.js","webpack:///./src/components/minHeight/minHeight.js","webpack:///./src/components/pagination/pagination.js","webpack:///./src/components/pagination/paginationHelpers.js","webpack:///./src/components/productView/productViewContext.js","webpack:///./src/components/toolbar/toolbarFieldDisplayName.js","webpack:///./node_modules/lodash/_baseTrim.js","webpack:///./node_modules/lodash/_trimmedEndIndex.js","webpack:///./node_modules/lodash/debounce.js","webpack:///./node_modules/lodash/now.js","webpack:///./node_modules/lodash/toNumber.js"],"sourcesContent":["import { useMemo } from 'react';\nlet uid = 0;\nconst ouiaPrefix = 'OUIA-Generated-';\nconst ouiaIdByRoute = {};\n/** Get props to conform to OUIA spec\n *\n * For functional components, use the useOUIAProps function instead\n *\n * In class based components, create a state variable ouiaStateId to create a static generated ID:\n * state = {\n *  ouiaStateId: getDefaultOUIAId(Chip.displayName)\n * }\n * This generated ID should remain alive as long as the component is not unmounted.\n *\n * Then add the attributes to the component\n * {...getOUIAProps('OverflowChip', this.props.ouiaId !== undefined ? this.props.ouiaId : this.state.ouiaStateId)}\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n */\nexport function getOUIAProps(componentType, id, ouiaSafe = true) {\n    return {\n        'data-ouia-component-type': `PF4/${componentType}`,\n        'data-ouia-safe': ouiaSafe,\n        'data-ouia-component-id': id\n    };\n}\n/**\n * Hooks version of the getOUIAProps function that also memoizes the generated ID\n * Can only be used in functional components\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAProps = (componentType, id, ouiaSafe = true, variant) => ({\n    'data-ouia-component-type': `PF4/${componentType}`,\n    'data-ouia-safe': ouiaSafe,\n    'data-ouia-component-id': useOUIAId(componentType, id, variant)\n});\n/**\n * Returns the ID or the memoized generated ID\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAId = (componentType, id, variant) => {\n    if (id !== undefined) {\n        return id;\n    }\n    return useMemo(() => getDefaultOUIAId(componentType, variant), [componentType, variant]);\n};\n/**\n * Returns a generated id based on the URL location\n *\n * @param {string} componentType OUIA component type\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport function getDefaultOUIAId(componentType, variant) {\n    /*\n    ouiaIdByRoute = {\n      [route+componentType]: [number]\n    }\n    */\n    try {\n        let key;\n        if (typeof window !== 'undefined') {\n            // browser environments\n            key = `${window.location.href}-${componentType}-${variant || ''}`;\n        }\n        else {\n            // node/SSR environments\n            key = `${componentType}-${variant || ''}`;\n        }\n        if (!ouiaIdByRoute[key]) {\n            ouiaIdByRoute[key] = 0;\n        }\n        return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++ouiaIdByRoute[key]}`;\n    }\n    catch (exception) {\n        return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++uid}`;\n    }\n}\n//# sourceMappingURL=ouia.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Fragment } from 'react';\nimport { Toolbar } from '@patternfly/react-core';\nimport { useOUIAId } from '@patternfly/react-core/';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\nimport './TableToolbar.css';\nfunction generateCount(results) {\n    if (results > 1 || results < 1) {\n        return (\"\".concat(results, \" Results\"));\n    }\n    else {\n        return (\"\".concat(results, \" Result\"));\n    }\n}\nvar TableToolbar = function (_a) {\n    var _b;\n    var isFooter = _a.isFooter, results = _a.results, className = _a.className, selected = _a.selected, children = _a.children, ouiaId = _a.ouiaId, _c = _a.ouiaSafe, ouiaSafe = _c === void 0 ? true : _c, props = __rest(_a, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n    var tableToolbarClasses = classNames('ins-c-table__toolbar', (_b = {}, _b[\"ins-m-footer\"] = isFooter, _b), className);\n    var ouiaComponentType = 'RHI/TableToolbar';\n    var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n    return (React.createElement(Fragment, null,\n        React.createElement(Toolbar, __assign({ className: tableToolbarClasses, \"data-ouia-component-type\": ouiaComponentType, \"data-ouia-component-id\": ouiaFinalId, \"data-ouia-safe\": ouiaSafe }, props), children),\n        (results >= 0 || selected >= 0) &&\n            React.createElement(\"div\", { className: 'ins-c-table__toolbar-results' },\n                results >= 0 &&\n                    React.createElement(\"span\", { className: 'ins-c-table__toolbar-results-count' },\n                        \" \",\n                        generateCount(results),\n                        \" \"),\n                selected >= 0 &&\n                    React.createElement(\"span\", { className: 'ins-c-table__toolbar-results-selected' },\n                        \" \",\n                        selected,\n                        \" Selected \"))));\n};\nexport default TableToolbar;\nTableToolbar.propTypes = {\n    isFooter: propTypes.bool,\n    results: propTypes.number,\n    children: propTypes.any,\n    className: propTypes.string,\n    selected: propTypes.number,\n    ouiaId: propTypes.string,\n    ouiaSafe: propTypes.bool\n};\nTableToolbar.defaultProps = {\n    isFooter: false\n};\n//# sourceMappingURL=TableToolbar.js.map","import { helpers } from '../../common/helpers';\n\n/**\n * Create a consistent mock event object.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget, name, id: *, persist: Function, value, target}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput as PfTextInput } from '@patternfly/react-core';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly TextInput. Provides restructured event data,\n * and an onClear event for the search type.\n *\n * @augments React.Component\n * @fires onKeyUp\n * @fires onMouseUp\n * @fires onChange\n */\nclass TextInput extends React.Component {\n  state = {\n    updatedValue: null\n  };\n\n  /**\n   * onKeyUp event, provide additional functionality for onClear event.\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  onKeyUp = event => {\n    const { onClear, onKeyUp, type } = this.props;\n    const { currentTarget, keyCode } = event;\n    const clonedEvent = { ...event };\n\n    onKeyUp(createMockEvent(event, true));\n\n    if (keyCode === 27) {\n      if (type === 'search' && currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      } else {\n        this.setState({ updatedValue: '' }, () => {\n          onClear(\n            createMockEvent({ ...clonedEvent, ...{ currentTarget: { ...clonedEvent.currentTarget, value: '' } } })\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * onMouseUp event, provide additional functionality for onClear event.\n   *\n   * @event onMouseUp\n   * @param {object} event\n   */\n  onMouseUp = event => {\n    const { onClear, onMouseUp, type } = this.props;\n    const { currentTarget } = event;\n    const clonedEvent = { ...event };\n\n    onMouseUp(createMockEvent(event, true));\n\n    if (type !== 'search' || currentTarget.value === '') {\n      return;\n    }\n\n    setTimeout(() => {\n      if (currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      }\n    });\n  };\n\n  /**\n   * onChange event, provide restructured event.\n   *\n   * @param {string} value\n   * @param {object} event\n   */\n  onChange = (value, event) => {\n    const { onChange } = this.props;\n    const clonedEvent = { ...event };\n\n    this.setState({ updatedValue: value }, () => {\n      onChange(createMockEvent(clonedEvent));\n    });\n  };\n\n  /**\n   * Render a text input.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedValue } = this.state;\n    const {\n      className,\n      id,\n      isDisabled,\n      name,\n      onChange,\n      onClear,\n      onKeyUp,\n      onMouseUp,\n      isReadOnly,\n      type,\n      value,\n      ...props\n    } = this.props;\n    const updatedName = name || helpers.generateId();\n    const updatedId = id || updatedName;\n\n    return (\n      <PfTextInput\n        id={updatedId}\n        name={updatedName}\n        className={`curiosity-text-input ${className}`}\n        isDisabled={isDisabled || false}\n        onChange={this.onChange}\n        onKeyUp={this.onKeyUp}\n        onMouseUp={this.onMouseUp}\n        isReadOnly={isReadOnly || false}\n        type={type}\n        value={updatedValue ?? value ?? ''}\n        {...props}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.defaultProps = {\n  className: '',\n  id: null,\n  isDisabled: false,\n  isReadOnly: false,\n  name: null,\n  onChange: helpers.noop,\n  onClear: helpers.noop,\n  onKeyUp: helpers.noop,\n  onMouseUp: helpers.noop,\n  type: 'text',\n  value: ''\n};\n\nexport { TextInput as default, TextInput };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader, CardHeaderMain } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport GuestsList from '../guestsList/guestsList';\nimport { inventoryListHelpers } from './inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { ToolbarFieldDisplayName } from '../toolbar/toolbarFieldDisplayName';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: refactor this component towards hooks.\n * This base component was copied from the original hosts component in order to speed\n * deliver the RHOSAK product views. This is an interim component and needs to be refactored.\n * Refactor will include\n * - Auth component, hook conversion.\n *    - Mock service updates for regular promise/platform calls\n *    - Mock service transform or hook for RBAC perms\n * - Auth context with \"useAuthContext\" for grabbing session object\n * - InventoryCard component\n * - Display name toolbar filter, and filter/query context\n */\n/**\n * An instances interim inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventoryList extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => value === id || _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getInstancesInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getInstancesInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterGuestsData, filterInventoryData, data: listData, query, session, settings } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      const guestsId = cellData?.subscriptionManagerId;\n      let hasGuests = cellData?.numberOfGuests > 0 && guestsId;\n\n      // Apply hasGuests callback, return boolean\n      if (typeof settings?.hasGuests === 'function') {\n        hasGuests = settings.hasGuests({ ...cellData }, { ...session });\n      }\n\n      return {\n        cells,\n        expandedContent:\n          (hasGuests && (\n            <GuestsList\n              key={guestsId}\n              filterGuestsData={filterGuestsData}\n              numberOfGuests={cellData?.numberOfGuests}\n              id={guestsId}\n              query={query}\n            />\n          )) ||\n          undefined\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      data: listData,\n      meta,\n      pending,\n      perPageDefault,\n      query,\n      t,\n      viewId\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const itemCount = meta?.count;\n    const updatedPerPage = query[RHSM_API_QUERY_SET_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_SET_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n            <CardHeaderMain>\n              <ToolbarFieldDisplayName viewId={viewId} />\n            </CardHeaderMain>\n            <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter\n            className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n            aria-hidden={error || !itemCount || false}\n          >\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{settings: object, data: Array, productId: string, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, error: boolean, getInstancesInventory: Function, viewId: string, t: Function,\n *     filterInventoryData: Array, meta: object, filterGuestsData: Array, perPageDefault: number,\n *     isDisabled: boolean}}\n */\nInventoryList.propTypes = {\n  data: PropTypes.array,\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterGuestsData: PropTypes.array,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getInstancesInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  meta: PropTypes.shape({ count: PropTypes.number }),\n  pending: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  productId: PropTypes.string.isRequired,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  settings: PropTypes.shape({\n    hasGuests: PropTypes.func\n  }),\n  t: PropTypes.func,\n  viewId: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{settings: object, data: Array, session: object, pending: boolean, fulfilled: boolean, error: boolean,\n *     getInstancesInventory: Function, viewId: string, t: Function, filterInventoryData: Array, meta: object,\n *     filterGuestsData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventoryList.defaultProps = {\n  data: [],\n  error: false,\n  fulfilled: false,\n  filterGuestsData: [],\n  filterInventoryData: [],\n  getInstancesInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_INSTANCES,\n  meta: {\n    count: 0\n  },\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  settings: {},\n  t: translate,\n  viewId: 'inventoryInstancesList'\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getInstancesInventory: (id, query) => dispatch(reduxActions.rhsm.getInstancesInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.instancesList.makeInstancesList();\n\nconst ConnectedInventoryList = connect(makeMapStateToProps, mapDispatchToProps)(InventoryList);\n\nexport { ConnectedInventoryList as default, ConnectedInventoryList, InventoryList };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n","import React, { useCallback, useContext } from 'react';\nimport { reduxHelpers } from '../../redux/common';\nimport { storeHooks } from '../../redux/hooks';\nimport { RHSM_API_QUERY_TYPES, rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst ProductViewContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated product view context.\n *\n * @returns {React.Context<{}>}\n */\nconst useProductViewContext = () => useContext(ProductViewContext);\n\n/**\n * Return a query object from initial product config and Redux store.\n *\n * @param {string} queryType An identifier used to pull from both config and Redux, they should named the same.\n * @param {object} options\n * @param {object} options.useProductViewContext\n * @returns {object}\n */\nconst useProductQueryFactory = (\n  queryType,\n  { useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}\n) => {\n  const { [queryType]: initialQuery, productId, viewId } = useAliasProductViewContext();\n  const queryProduct = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[productId], undefined);\n  const queryView = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[viewId], undefined);\n\n  return {\n    ...initialQuery,\n    ...queryProduct,\n    ...queryView\n  };\n};\n\n/**\n * Return a base product query\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductQuery = ({ queryType = 'query', options } = {}) => useProductQueryFactory(queryType, options);\n\n/**\n * Return the graph query based off of tally and capacity.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductGraphTallyQuery = ({\n  queryType = 'graphTallyQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return the inventory query for guests.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryGuestsQuery = ({\n  queryType = 'inventoryGuestsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for hosts.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryHostsQuery = ({\n  queryType = 'inventoryHostsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for subscriptions.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventorySubscriptionsQuery = ({\n  queryType = 'inventorySubscriptionsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Get a filtered product configuration context.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductViewContext\n * @returns {object}\n */\nconst useProductContext = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductViewContext: useAliasProductViewContext = useProductViewContext\n} = {}) => {\n  const { [RHSM_API_QUERY_TYPES.UOM]: uomFilter } = useAliasProductQuery();\n  const {\n    initialGraphFilters = [],\n    initialInventoryFilters = [],\n    initialSubscriptionsInventoryFilters = [],\n    productContextFilterUom,\n    ...config\n  } = useAliasProductViewContext();\n\n  const applyUomFilter = useCallback(() => {\n    if (productContextFilterUom === true) {\n      const filterFilters = ({ id, isOptional }) => {\n        if (!isOptional) {\n          return true;\n        }\n        return new RegExp(uomFilter, 'i').test(id);\n      };\n\n      return {\n        ...config,\n        initialGraphFilters: initialGraphFilters.filter(filterFilters),\n        initialInventoryFilters: initialInventoryFilters.filter(filterFilters),\n        initialSubscriptionsInventoryFilters: initialSubscriptionsInventoryFilters.filter(filterFilters)\n      };\n    }\n\n    return {\n      ...config,\n      initialGraphFilters,\n      initialInventoryFilters,\n      initialSubscriptionsInventoryFilters\n    };\n  }, [\n    config,\n    initialGraphFilters,\n    initialInventoryFilters,\n    initialSubscriptionsInventoryFilters,\n    productContextFilterUom,\n    uomFilter\n  ]);\n\n  return applyUomFilter();\n};\n\n/**\n * Return product identifiers.\n *\n * @param {object} options\n * @param {Function} options.useProductViewContext\n * @returns {{productLabel: string, viewId: string, productId: string, productGroup: string}}\n */\nconst useProduct = ({ useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}) => {\n  const { productGroup, productId, productLabel, viewId } = useAliasProductViewContext();\n  return {\n    productGroup,\n    productId,\n    productLabel,\n    viewId\n  };\n};\n\n/**\n * Return graph configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductGraphConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialGraphFilters, initialGraphSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGraphFilters,\n    settings: initialGraphSettings\n  };\n};\n\n/**\n * Return hosts inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryHostsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialInventoryFilters, initialInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialInventoryFilters,\n    settings: initialInventorySettings\n  };\n};\n\n/**\n * Return subscriptions inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventorySubscriptionsConfig = ({\n  useProductContext: useAliasProductContext = useProductContext\n} = {}) => {\n  const { initialSubscriptionsInventoryFilters, initialSubscriptionsInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialSubscriptionsInventoryFilters,\n    settings: initialSubscriptionsInventorySettings\n  };\n};\n\n/**\n * Return primary toolbar configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductToolbarConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialToolbarFilters, initialToolbarSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialToolbarFilters,\n    settings: initialToolbarSettings\n  };\n};\n\nconst context = {\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useQuery: useProductQuery,\n  useQueryFactory: useProductQueryFactory,\n  useGraphTallyQuery: useProductGraphTallyQuery,\n  useInventoryGuestsQuery: useProductInventoryGuestsQuery,\n  useInventoryHostsQuery: useProductInventoryHostsQuery,\n  useInventorySubscriptionsQuery: useProductInventorySubscriptionsQuery,\n  useProduct,\n  useGraphConfig: useProductGraphConfig,\n  useInventoryHostsConfig: useProductInventoryHostsConfig,\n  useInventorySubscriptionsConfig: useProductInventorySubscriptionsConfig,\n  useToolbarConfig: useProductToolbarConfig\n};\n\nexport {\n  context as default,\n  context,\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useProductQuery,\n  useProductQueryFactory,\n  useProductGraphTallyQuery,\n  useProductInventoryGuestsQuery,\n  useProductInventoryHostsQuery,\n  useProductInventorySubscriptionsQuery,\n  useProduct,\n  useProductGraphConfig,\n  useProductInventoryHostsConfig,\n  useProductInventorySubscriptionsConfig,\n  useProductToolbarConfig\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup } from '@patternfly/react-core';\nimport _debounce from 'lodash/debounce';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport { TextInput } from '../form/textInput';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: evaluate the debounce milliseconds, currently based off platforms default 800 ms\n */\n/**\n * Display a display name input field for search.\n *\n * @fires onSubmit\n * @fires onClear\n * @fires onKeyUp\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.useDispatch\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryHostsQuery\n * @returns {Node}\n */\nconst ToolbarFieldDisplayName = ({\n  t,\n  useDispatch: useAliasDispatch,\n  useProduct: useAliasProduct,\n  useProductInventoryHostsQuery: useAliasProductInventoryHostsQuery\n}) => {\n  const { viewId } = useAliasProduct();\n  const { [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: currentValue } = useAliasProductInventoryHostsQuery();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On submit, dispatch type.\n   *\n   * @event onSubmit\n   * @param {string} submitValue\n   * @returns {void}\n   */\n  const onSubmit = submitValue =>\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: submitValue?.trim() || null\n      }\n    ]);\n\n  /**\n   * On clear, dispatch type.\n   *\n   * @event onClear\n   * @returns {void}\n   */\n  const onClear = () => {\n    if (currentValue === '' || !currentValue) {\n      return;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: null\n      }\n    ]);\n  };\n\n  /**\n   * Set up submit debounce event to allow for bypass.\n   */\n  const debounced = _debounce(onSubmit, 700);\n\n  /**\n   * On enter submit value, on type submit value, and on esc ignore (clear value at component level).\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 13:\n        onSubmit(event.value);\n        break;\n      case 27:\n        break;\n      default:\n        debounced(event.value);\n        break;\n    }\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        aria-label={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        className=\"curiosity-input__display-name\"\n        iconVariant=\"search\"\n        maxLength={255}\n        onClear={onClear}\n        onKeyUp={onKeyUp}\n        value={currentValue}\n        placeholder={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        data-test=\"toolbarFieldDisplayName\"\n      />\n    </InputGroup>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.propTypes = {\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryHostsQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.defaultProps = {\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useProduct,\n  useProductInventoryHostsQuery\n};\n\nexport { ToolbarFieldDisplayName as default, ToolbarFieldDisplayName };\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n"],"names":["uid","ouiaPrefix","ouiaIdByRoute","getOUIAProps","componentType","id","ouiaSafe","useOUIAProps","variant","useOUIAId","undefined","useMemo","getDefaultOUIAId","key","window","location","href","exception","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","TableToolbar","_a","_b","isFooter","results","className","selected","children","ouiaId","_c","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","tableToolbarClasses","ouiaComponentType","ouiaFinalId","Fragment","Toolbar","concat","generateCount","propTypes","defaultProps","createMockEvent","event","persistEvent","checked","currentTarget","keyCode","persist","helpers","target","name","value","doesNotHaveMinimumCharacters","characters","formHelpers","TextInput","state","updatedValue","onKeyUp","onClear","type","clonedEvent","setState","onMouseUp","setTimeout","onChange","isDisabled","isReadOnly","updatedName","updatedId","React","InventoryList","onColumnSort","data","updatedDirection","direction","productId","updatedSortColumn","values","SORT_TYPES","find","_camelCase","SortByDirection","SORT_DIRECTION_TYPES","store","reduxTypes","RHSM_API_QUERY_SET_TYPES","viewId","console","warn","onPage","offset","perPage","onUpdateInventoryData","getInstancesInventory","query","prevProps","_isEqual","filterGuestsData","filterInventoryData","listData","session","settings","updatedColumnHeaders","updatedRows","map","cellData","inventoryListHelpers","filters","onSort","columnHeaders","cells","guestsId","subscriptionManagerId","hasGuests","numberOfGuests","expandedContent","borders","TableVariant","rows","error","fulfilled","meta","pending","perPageDefault","Card","CardBody","Bullseye","context","itemCount","count","updatedPerPage","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","MinHeight","updateOnContent","CardHeader","CardHeaderMain","ToolbarFieldDisplayName","CardActions","isCompact","onPerPage","Loader","tableProps","colCount","keys","colWidth","cellWidth","rowCount","renderTable","CardFooter","dropDirection","translate","makeMapStateToProps","reduxSelectors","ConnectedInventoryList","connect","dispatch","reduxActions","containerRef","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","clientWidth","current","setMinHeight","setResizeObserver","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","ref","Pagination","onSetPage","page","limit","onPerPageSelect","calculateOffsetFromPage","calculatePageFromOffset","Math","ceil","DEFAULT_CONTEXT","ProductViewContext","useProductViewContext","useContext","useProductQueryFactory","queryType","useAliasProductViewContext","initialQuery","queryProduct","storeHooks","view","queryView","useProductQuery","options","useProductGraphTallyQuery","schemaCheck","rhsmApiTypes","reduxHelpers","useProductInventoryGuestsQuery","useProductInventoryHostsQuery","useProductInventorySubscriptionsQuery","useProductContext","useAliasProductQuery","uomFilter","RHSM_API_QUERY_TYPES","initialGraphFilters","initialInventoryFilters","initialSubscriptionsInventoryFilters","productContextFilterUom","config","applyUomFilter","useCallback","filterFilters","isOptional","RegExp","test","filter","useProduct","productGroup","productLabel","useProductGraphConfig","useAliasProductContext","initialGraphSettings","useProductInventoryHostsConfig","initialInventorySettings","useProductInventorySubscriptionsConfig","initialSubscriptionsInventorySettings","useProductToolbarConfig","initialToolbarFilters","initialToolbarSettings","useQuery","useQueryFactory","useGraphTallyQuery","useInventoryGuestsQuery","useInventoryHostsQuery","useInventorySubscriptionsQuery","useGraphConfig","useInventoryHostsConfig","useInventorySubscriptionsConfig","useToolbarConfig","useAliasDispatch","useDispatch","useAliasProduct","useAliasProductInventoryHostsQuery","currentValue","onSubmit","submitValue","trim","debounced","_debounce","InputGroup","iconVariant","maxLength","placeholder","trimmedEndIndex","reTrimStart","module","exports","string","slice","replace","reWhitespace","index","charAt","isObject","now","toNumber","nativeMax","max","nativeMin","min","func","wait","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","isInvoking","clearTimeout","cancel","flush","root","Date","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary"],"sourceRoot":""}
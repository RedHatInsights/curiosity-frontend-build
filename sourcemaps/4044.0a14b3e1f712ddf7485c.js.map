{"version":3,"file":"js/4044.a0ec3ddfea30948f9ee8.js","mappings":"4PASMA,EAAkB,SAACC,GAAgC,IAAzBC,EAAyB,qEACoCD,GAAnFE,EAD+C,EAC/CA,QAD+C,IACtCC,cAAAA,OADsC,MACtB,GADsB,EAClBC,EADkB,EAClBA,QADkB,IACTC,QAAAA,OADS,MACCC,EAAAA,EAAAA,KADD,MACeC,OAAAA,OADf,MACwB,GADxB,EAMvD,OAJIN,GACFI,IAGK,CACLH,QAAAA,EACAC,cAAAA,EACAC,QAAAA,EACAI,GAAIL,EAAcK,IAAML,EAAcM,KACtCA,KAAMN,EAAcM,KACpBJ,QAAAA,EACAK,MAAOP,EAAcO,MACrBH,OAAAA,IAWEI,EAA+B,SAACD,GAAD,IAAQE,EAAR,uDAAqB,EAArB,MACjB,iBAAVF,GAAsBA,EAAMG,OAASD,GAAgC,iBAAVF,GAE/DI,EAAc,CAClBf,gBAAAA,EACAY,6BAAAA","sources":["webpack:///./src/components/form/formHelpers.js"],"sourcesContent":["import { helpers } from '../../common/helpers';\n\n/**\n * Create a consistent mock event object.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget, name, id: *, persist: Function, value, target}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n"],"names":["createMockEvent","event","persistEvent","checked","currentTarget","keyCode","persist","helpers","target","id","name","value","doesNotHaveMinimumCharacters","characters","length","formHelpers"],"sourceRoot":""}
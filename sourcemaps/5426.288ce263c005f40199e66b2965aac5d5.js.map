{"version":3,"file":"js/5426.1677211222992.9e8f6502f6f82c473c4d.js","mappings":"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CA,MAED,4CAA6C,CAC5C,MACA,KACA,MAED,mBAAoB,CACnB,OAED,4BAA6B,CAC5B,OAED,0BAA2B,CAC1B,OAED,2BAA4B,CAC3B,OAED,0BAA2B,CAC1B,OAED,uBAAwB,CACvB,MAED,yBAA0B,CACzB,OAED,0BAA2B,CAC1B,OAED,qBAAsB,CACrB,MACA,KACA,KACA,KACA,MAED,wBAAyB,CACxB,OAED,sBAAuB,CACtB,MACA,KAED,mBAAoB,CACnB,OAED,sBAAuB,CACtB,MACA,MAED,2BAA4B,CAC3B,MACA,KACA,IACA,KACA,MAED,gCAAiC,CAChC,MACA,KACA,IACA,KACA,MAED,sCAAuC,CACtC,MACA,KACA,IACA,MAED,4CAA6C,CAC5C,MACA,KACA,IACA,KAED,uCAAwC,CACvC,MACA,KACA,MAED,kCAAmC,CAClC,MACA,KACA,IACA,MAED,kCAAmC,CAClC,OAED,uCAAwC,CACvC,MACA,KACA,IACA,MAED,iBAAkB,CACjB,OAED,wBAAyB,CACxB,OAED,mCAAoC,CACnC,MACA,KACA,KACA,KACA,MAED,0CAA2C,CAC1C,MACA,KACA,MAED,0CAA2C,CAC1C,MACA,MAED,wCAAyC,CACxC,MACA,KACA,KACA,KACA,KAED,6DAA8D,CAC7D,MACA,KACA,KACA,KACA,MAED,oEAAqE,CACpE,MACA,KACA,MAED,uCAAwC,CACvC,MACA,KACA,MAED,8CAA+C,CAC9C,MACA,KACA,MAED,kCAAmC,CAClC,MACA,KAED,mCAAoC,CACnC,MACA,KACA,MAED,qBAAsB,CACrB,MAED,+BAAgC,CAC/B,OAED,2BAA4B,CAC3B,MACA,KAED,2BAA4B,CAC3B,KAED,8BAA+B,CAC9B,MAED,6BAA8B,CAC7B,OAED,6BAA8B,CAC7B,OAED,+BAAgC,CAC/B,OAED,8BAA+B,CAC9B,OAED,8BAA+B,CAC9B,OAED,6BAA8B,CAC7B,MACA,MAED,oCAAqC,CACpC,MACA,MAED,+BAAgC,CAC/B,MACA,KACA,IACA,KACA,KACA,KACA,MAED,sCAAuC,CACtC,MACA,MAED,sCAAuC,CACtC,MACA,MAED,oBAAqB,CACpB,OAED,qBAAsB,CACrB,OAED,4BAA6B,CAC5B,OAED,4BAA6B,CAC5B,OAED,mBAAoB,CACnB,OAED,wBAAyB,CACxB,OAED,2BAA4B,CAC3B,OAED,iBAAkB,CACjB,MACA,IAED,uBAAwB,CACvB,MACA,KACA,IACA,MAED,8BAA+B,CAC9B,MACA,KACA,IACA,MAED,wCAAyC,CACxC,MACA,KACA,MAED,2CAA4C,CAC3C,MACA,KACA,MAED,oCAAqC,CACpC,MACA,KACA,MAED,uCAAwC,CACvC,MACA,KACA,MAED,uCAAwC,CACvC,KACA,KACA,MAED,yCAA0C,CACzC,MACA,KACA,MAED,0CAA2C,CAC1C,MACA,KACA,KAED,+BAAgC,CAC/B,MACA,KACA,MAED,+BAAgC,CAC/B,MACA,KACA,MAED,iCAAkC,CACjC,MACA,KACA,MAED,mCAAoC,CACnC,MACA,KACA,MAED,uBAAwB,CACvB,OAGF,SAASkgD,EAAoBJ,GAC5B,IAAIE,EAAoBC,EAAEjgD,EAAK8/C,GAC9B,OAAOjjD,QAAQC,UAAUqjD,MAAK,WAC7B,IAAIt7B,EAAI,IAAIpnB,MAAM,uBAAyBqiD,EAAM,KAEjD,MADAj7B,EAAE2iB,KAAO,mBACH3iB,CACP,IAGD,IAAIu7B,EAAMpgD,EAAI8/C,GAAM7hD,EAAKmiD,EAAI,GAC7B,OAAOvjD,QAAQwoC,IAAI+a,EAAIroC,MAAM,GAAG/X,IAAIggD,EAAoBn7B,IAAIs7B,MAAK,WAChE,OAAOH,EAAoB/hD,EAC5B,GACD,CACAiiD,EAAoBv/C,KAAO,WAAa,OAAOlC,OAAOkC,KAAKX,EAAM,EACjEkgD,EAAoBjiD,GAAK,MACzBjD,EAAOC,QAAUilD,C,wBChVjB,IAAIlgD,EAAM,CACT,kCAAmC,MACnC,kCAAmC,KACnC,gCAAiC,MACjC,qBAAsB,MACtB,oBAAqB,MACrB,qBAAsB,MACtB,sBAAuB,MACvB,yBAA0B,OAI3B,SAAS6/C,EAAeC,GACvB,IAAI7hD,EAAK8hD,EAAsBD,GAC/B,OAAOE,EAAoB/hD,EAC5B,CACA,SAAS8hD,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEjgD,EAAK8/C,GAAM,CACpC,IAAIj7B,EAAI,IAAIpnB,MAAM,uBAAyBqiD,EAAM,KAEjD,MADAj7B,EAAE2iB,KAAO,mBACH3iB,CACP,CACA,OAAO7kB,EAAI8/C,EACZ,CACAD,EAAel/C,KAAO,WACrB,OAAOlC,OAAOkC,KAAKX,EACpB,EACA6/C,EAAe/iD,QAAUijD,EACzB/kD,EAAOC,QAAU4kD,EACjBA,EAAe5hD,GAAK,K","sources":["webpack:///./config/build.empty.js","webpack:///./src/app.js","webpack:///./src/common/helpers.js","webpack:///./src/common/dateHelpers.js","webpack:///./src/common/downloadHelpers.js","webpack:///./src/components/authentication/authentication.js","webpack:///./src/components/authentication/authenticationContext.js","webpack:///./src/components/chart/chart.js","webpack:///./src/hooks/useWindow.js","webpack:///./src/components/chart/chartAxisLabel.js","webpack:///./src/components/chart/chartContext.js","webpack:///./src/components/chart/chartElements.js","webpack:///./src/components/chart/chartHelpers.js","webpack:///./src/components/chart/chartIcon.js","webpack:///./src/components/chart/chartLegend.js","webpack:///./src/components/chart/chartTooltip.js","webpack:///./src/components/form/formHelpers.js","webpack:///./src/components/form/select.js","webpack:///./src/components/graphCard/graphCardHelpers.js","webpack:///./src/components/i18n/i18n.js","webpack:///./src/components/i18n/i18nHelpers.js","webpack:///./src/components/loader/loader.js","webpack:///./src/components/messageView/messageView.js","webpack:///./src/components/optinView/optinView.js","webpack:///./src/components/pageLayout/pageColumns.js","webpack:///./src/components/pageLayout/pageHeader.js","webpack:///./src/components/pageLayout/pageLayout.js","webpack:///./src/components/pageLayout/pageMessages.js","webpack:///./src/components/pageLayout/pageSection.js","webpack:///./src/components/pageLayout/pageToolbar.js","webpack:///./src/components/router/router.js","webpack:///./src/components/router/routerContext.js","webpack:///./src/components/router/routerHelpers.js","webpack:///./src/components/table/table.js","webpack:///./src/components/table/tableEmpty.js","webpack:///./src/components/table/tableSkeleton.js","webpack:///./src/components/tooltip/tooltip.js","webpack:///./src/config/products.js","webpack:///./src/config/routes.js","webpack:///./src/config/product.openshiftContainer.js","webpack:///./src/config/product.openshiftDedicated.js","webpack:///./src/config/product.openshiftMetrics.js","webpack:///./src/config/product.rhacs.js","webpack:///./src/config/product.rhel.js","webpack:///./src/config/product.rhods.js","webpack:///./src/config/product.rhosak.js","webpack:///./src/config/product.satellite.js","webpack:///./src/redux/common/reduxHelpers.js","webpack:///./src/redux/hooks/useReactRedux.js","webpack:///./src/redux/hooks/index.js","webpack:///./src/services/common/helpers.js","webpack:///./src/services/common/serviceConfig.js","webpack:///./src/services/platform/platformSchemas.js","webpack:///./src/services/platform/platformTransformers.js","webpack:///./src/services/platform/platformServices.js","webpack:///./src/redux/actions/platformActions.js","webpack:///./src/services/config.js","webpack:///./src/services/rhsm/rhsmSchemas.js","webpack:///./src/services/rhsm/rhsmTransformers.js","webpack:///./src/services/rhsm/rhsmHelpers.js","webpack:///./src/services/rhsm/rhsmServices.js","webpack:///./src/redux/actions/rhsmActions.js","webpack:///./src/services/user/userServices.js","webpack:///./src/redux/actions/userActions.js","webpack:///./src/redux/actions/index.js","webpack:///./src/redux/reducers/graphReducer.js","webpack:///./src/redux/reducers/inventoryReducer.js","webpack:///./src/redux/reducers/messagesReducer.js","webpack:///./src/redux/reducers/toolbarReducer.js","webpack:///./src/redux/reducers/userReducer.js","webpack:///./src/redux/reducers/viewReducer.js","webpack:///./src/redux/reducers/index.js","webpack:///./src/redux/middleware/actionRecordMiddleware.js","webpack:///./src/redux/middleware/index.js","webpack:///./src/redux/middleware/statusMiddleware.js","webpack:///./src/redux/middleware/multiActionMiddleware.js","webpack:///./src/redux/store.js","webpack:///./src/redux/types/appTypes.js","webpack:///./src/redux/types/graphTypes.js","webpack:///./src/redux/types/inventoryTypes.js","webpack:///./src/redux/types/platformTypes.js","webpack:///./src/redux/types/queryTypes.js","webpack:///./src/redux/types/userTypes.js","webpack:///./src/redux/types/index.js","webpack:///./src/redux/types/toolbarTypes.js","webpack:///./src/redux/types/rhsmTypes.js","webpack:///./src/services/platform/platformConstants.js","webpack:///./src/services/rhsm/rhsmConstants.js","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/components/ lazy ^\\.\\/.*\\.js$ exclude: \\.test\\.js$ namespace object","webpack:///./src/config/ sync nonrecursive product\\.[\\d\\D]+\\.js$/"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMount } from 'react-use';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { reduxActions, storeHooks } from './redux';\nimport { I18n } from './components/i18n/i18n';\nimport { Router } from './components/router';\nimport Authentication from './components/authentication/authentication';\nimport { helpers } from './common';\n\n/**\n * ToDo: Investigate replacing NotificationsPortal\n * NotificationsPortal takes down the entire app when the parent Redux store is unavailable.\n */\n/**\n * Application\n *\n * @param {object} props\n * @param {Function} props.getLocale\n * @param {Function} props.useDispatch\n * @param {Function} props.useSelector\n * @returns {Node}\n */\nconst App = ({ getLocale, useDispatch: useAliasDispatch, useSelector: useAliasSelector }) => {\n  const dispatch = useAliasDispatch();\n  const { value: locale } = useAliasSelector(({ user }) => user?.locale?.data, {});\n  let platformNotifications = null;\n  console.log('>>> APP load', locale);\n  useMount(() => {\n    console.log('>>> APP mount comp', locale);\n    if (!locale) {\n      dispatch(getLocale());\n    }\n  });\n\n  if (!helpers.UI_DISABLED_NOTIFICATIONS) {\n    platformNotifications = <NotificationsPortal />;\n  }\n\n  return (\n    <I18n locale={locale}>\n      {platformNotifications}\n      <Authentication key={`auth-${locale}`}>\n        <Router key={`route-${locale}`} />\n      </Authentication>\n    </I18n>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelector: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: reduxActions.user.getLocale,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelector: storeHooks.reactRedux.useSelector\n};\n\nexport { App as default, App };\n","import numbro from 'numbro';\nimport cryptoSha1 from 'crypto-js/sha1';\nimport _isPlainObject from 'lodash/isPlainObject';\n\n/**\n * Fill for AggregatedError\n *\n * @param {Array|*} errors An array of errors\n * @param {string|*} message\n * @param {object} options\n * @param {string} options.name\n * @returns {Error|window.AggregateError<Error>}\n */\nconst aggregatedError = (errors, message, { name = 'AggregateError' } = {}) => {\n  const { AggregateError, Error } = window;\n  let err;\n\n  if (AggregateError) {\n    err = new AggregateError(errors, message);\n  } else {\n    err = new Error(message);\n    err.name = name;\n    err.errors = (Array.isArray(errors) && errors) || [errors];\n    err.isEmulated = true;\n  }\n  return err;\n};\n\n/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * Generate a consistent hash\n *\n * @param {*|object} anyValue\n * @param {object} options\n * @param {Function} options.method\n * @returns {*|string}\n */\nconst generateHash = (anyValue, { method = cryptoSha1 } = {}) =>\n  method(\n    JSON.stringify({\n      value:\n        (_isPlainObject(anyValue) &&\n          JSON.stringify(\n            Object.entries(anyValue).sort(([a], [b]) => a.localeCompare(b)),\n            (key, value) => {\n              if (value !== anyValue && _isPlainObject(value)) {\n                return JSON.stringify(Object.entries(value).sort(([a], [b]) => a.localeCompare(b)) || []);\n              }\n              if (typeof value === 'function') {\n                return value.toString();\n              }\n              return value;\n            }\n          )) ||\n        `${typeof anyValue}${anyValue?.toString() || anyValue}`\n    })\n  ).toString();\n\n/**\n * Simple memoize, cache based arguments with adjustable limit.\n *\n * @param {Function} func\n * @param {object} options\n * @param {number} options.cacheLimit\n * @returns {Function}\n */\nconst memo = (func, { cacheLimit = 1 } = {}) => {\n  const ized = function () {\n    const cache = [];\n\n    return (...args) => {\n      const key = JSON.stringify({ value: [...args].map(arg => (typeof arg === 'function' && arg.toString()) || arg) });\n      const keyIndex = cache.indexOf(key);\n\n      if (keyIndex < 0) {\n        const result = func.call(null, ...args);\n        cache.unshift(key, result);\n        cache.length = cacheLimit * 2;\n        return cache[1];\n      }\n\n      return cache[keyIndex + 1];\n    };\n  };\n\n  return ized();\n};\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string|Array} key\n * @param {string|object|Array} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) => {\n  const updatedKey = (Array.isArray(key) && `[${key}]`) || key;\n  const updatedValue =\n    (typeof value === 'string' && value) ||\n    (Array.isArray(value) && `[${value}]`) ||\n    (Object.keys(value || '').length && JSON.stringify(value)) ||\n    '';\n  const updatedComponents = (components && `${components}`) || '';\n\n  return `t(${updatedKey}${(updatedValue && `, ${updatedValue}`) || ''}${\n    (updatedComponents && `, ${updatedComponents}`) || ''\n  })`;\n};\n\n/**\n * ToDo: review adding \"locale\" for numbro\n */\n/**\n * Convenience wrapper for numbro. Numbro assumes all values passed to it conform as \"number\".\n * This allows us to optional chain the function results.\n *\n * @param {*} value\n * @returns {numbro.Numbro|*}\n */\nconst numberDisplay = value => {\n  if (typeof value !== 'number' || Number.isNaN(value)) {\n    return value;\n  }\n  return numbro(value);\n};\n\n/**\n * Recursive object and props freeze/immutable.\n * Used from deep-freeze-strict, an older npm package, license - public domain\n * https://bit.ly/3HR4XWP and https://bit.ly/3Ye4S6B\n *\n * @param {object} obj\n * @returns {*}\n */\nconst objFreeze = obj => {\n  Object.freeze(obj);\n\n  const oIsFunction = typeof obj === 'function';\n  const hasOwnProp = Object.prototype.hasOwnProperty;\n\n  Object.getOwnPropertyNames(obj).forEach(prop => {\n    if (\n      hasOwnProp.call(obj, prop) &&\n      (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true) &&\n      obj[prop] !== null &&\n      (typeof obj[prop] === 'object' || typeof obj[prop] === 'function') &&\n      !Object.isFrozen(obj[prop])\n    ) {\n      objFreeze(obj[prop]);\n    }\n  });\n\n  return obj;\n};\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable platform notifications.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_NOTIFICATIONS = process.env.REACT_APP_UI_DISABLED_NOTIFICATIONS === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the current hosts inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_HOSTS = process.env.REACT_APP_UI_DISABLED_TABLE_HOSTS === 'true';\n\n/**\n * Disable the current instances inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_INSTANCES = process.env.REACT_APP_UI_DISABLED_TABLE_INSTANCES === 'true';\n\n/**\n * Disable the current subscriptions inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_SUBSCRIPTIONS = process.env.REACT_APP_UI_DISABLED_TABLE_SUBSCRIPTIONS === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * A url, or uri, for \"recommend actions\"\n *\n * @type {string}\n */\nconst UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS = process.env.REACT_APP_UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI state logging file name.\n *\n * @type {string}\n */\nconst UI_LOGGER_FILE = process.env.REACT_APP_UI_LOGGER_FILE || 'debug_log_{0}.json';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  aggregatedError,\n  browserExpose,\n  generateHash,\n  generateId,\n  isDate,\n  isPromise,\n  memo,\n  noop,\n  noopPromise,\n  noopTranslate,\n  numberDisplay,\n  objFreeze,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_NOTIFICATIONS,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TABLE_HOSTS,\n  UI_DISABLED_TABLE_INSTANCES,\n  UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_LOGGER_FILE,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../services/rhsm/rhsmConstants';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && moment.utc('20190720').toDate()) ||\n  (helpers.DEV_MODE &&\n    process.env.REACT_APP_DEBUG_DEFAULT_DATETIME &&\n    moment.utc(process.env.REACT_APP_DEBUG_DEFAULT_DATETIME).toDate()) ||\n  moment.utc().toDate();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @param {string} params.endOfMeasurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement, endOfMeasurement = 'days' }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf(endOfMeasurement).toDate()\n});\n\nconst currentDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 1, measurement: 'days' });\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\nconst rangedYearDateTime = setRangedDateTime({\n  date: getCurrentDate(),\n  subtract: 11,\n  measurement: 'months',\n  endOfMeasurement: 'months'\n});\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case 'CURRENT':\n      return { ...currentDateTime };\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Generate a list of months for use in a select list.\n *\n * @param {string} month\n * @returns {{keyDateTimeRanges: {}, listDateTimeRanges: *[]}|*}\n */\nconst getRangedMonthDateTime = month => {\n  const currentYear = Number.parseInt(moment.utc(getCurrentDate()).year(), 10);\n  const { startDate, endDate } = { ...rangedYearDateTime };\n  const keyDateTimeRanges = {};\n  let listDateTimeRanges = [];\n\n  const startDateUpdated = moment.utc(startDate);\n  const endDateUpdated = moment.utc(endDate);\n\n  while (endDateUpdated > startDateUpdated || startDateUpdated.format('M') === endDateUpdated.format('M')) {\n    const dateTime = {\n      value: {\n        startDate: startDateUpdated.toDate()\n      }\n    };\n\n    const titleYear = startDateUpdated.format('MMMM YYYY');\n    const title = startDateUpdated.format('MMMM');\n    const titleIndex = startDateUpdated.format('M');\n    const isNextYear = currentYear !== Number.parseInt(startDateUpdated.year(), 10);\n\n    dateTime.title = (isNextYear && titleYear) || title;\n    dateTime._title = title.toLowerCase();\n    dateTime.value.endDate = moment.utc(startDateUpdated).endOf('month').toDate();\n\n    startDateUpdated.add(1, 'month');\n\n    dateTime.title = translate('curiosity-toolbar.label', { context: ['granularityRangedMonthly', dateTime.title] });\n    keyDateTimeRanges[title.toLowerCase()] = { ...dateTime };\n    keyDateTimeRanges[titleIndex] = { ...dateTime };\n    listDateTimeRanges.push(dateTime);\n  }\n\n  listDateTimeRanges = listDateTimeRanges.reverse();\n  listDateTimeRanges[0] = {\n    ...listDateTimeRanges[0],\n    isCurrent: true,\n    _title: 'current',\n    title: translate('curiosity-toolbar.label', { context: ['granularityRangedMonthly', 'current'] })\n  };\n\n  keyDateTimeRanges.current = { ...listDateTimeRanges[0] };\n\n  if (month) {\n    return keyDateTimeRanges?.[month] || undefined;\n  }\n\n  return { keyDateTimeRanges, listDateTimeRanges };\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\n/**\n * Consistent timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampTimeFormats = {\n  timeLong: 'MMMM D h:mm:ss A',\n  yearTimeLong: 'MMMM D YYYY h:mm:ss A',\n  timeShort: 'MMM D h:mm A',\n  yearTimeShort: 'MMM D YYYY h:mm A'\n};\n\n/**\n * Consistent UTC timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampUTCTimeFormats = {\n  timeLong: 'DD MMMM HH:mm:ss UTC',\n  yearTimeLong: 'DD MMMM YYYY HH:mm:ss UTC',\n  timeShort: 'DD MMM HH:mm UTC',\n  yearTimeShort: 'DD MMM YYYY HH:mm UTC'\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { dateHelpers } from './dateHelpers';\n\n/**\n * Download data to a file\n *\n * @param {object} options\n * @param {string} options.data\n * @param {string} options.fileName\n * @param {string} options.fileType\n * @returns {Promise}\n */\nconst downloadData = options => {\n  const { data = '', fileName = 'download.txt', fileType = 'text/plain' } = options || {};\n  return new Promise((resolve, reject) => {\n    try {\n      const { document, navigator, URL } = window;\n      const blob = new Blob([data], { type: fileType });\n\n      if (navigator?.msSaveBlob) {\n        navigator.msSaveBlob(blob, fileName);\n        resolve({ fileName, data });\n      } else {\n        const anchorTag = document.createElement('a');\n\n        anchorTag.href = URL.createObjectURL(blob);\n        anchorTag.style.display = 'none';\n        anchorTag.download = fileName;\n\n        document.body.appendChild(anchorTag);\n\n        anchorTag.click();\n\n        setTimeout(() => {\n          document.body.removeChild(anchorTag);\n          URL.revokeObjectURL(blob);\n          resolve({ fileName, data });\n        }, 250);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\n/**\n * Download the debug log file.\n */\nconst debugLog = async () => {\n  try {\n    const { sessionStorage } = window;\n    const fileName = `${helpers.UI_LOGGER_FILE}`.replace(\n      '{0}',\n      moment(dateHelpers.getCurrentDate()).format('YYYYMMDD_HHmmss')\n    );\n    const data = JSON.stringify(JSON.parse(sessionStorage.getItem(`${helpers.UI_LOGGER_ID}`)), null, 2);\n\n    await downloadData({ data, fileName, fileType: 'application/json' });\n  } catch (e) {\n    throw new Error(`debuglog error, ${e.message}`);\n  }\n};\n\nconst downloadHelpers = {\n  downloadData,\n  debugLog\n};\n\nhelpers.browserExpose({ debugLog }, { limit: false });\n\nexport { downloadHelpers as default, downloadHelpers, downloadData, debugLog };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { routerHelpers } from '../router';\nimport { rhsmConstants } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\nimport { MessageView } from '../messageView/messageView';\nimport { OptinView } from '../optinView/optinView';\nimport { translate } from '../i18n/i18n';\nimport { AuthenticationContext, useGetAuthorization } from './authenticationContext';\n\n/**\n * An authentication pass-through component.\n *\n * @param {object} props\n * @param {string} props.appName\n * @param {React.ReactNode} props.children\n * @param {boolean} props.isDisabled\n * @param {Function} props.t\n * @param {Function} props.useGetAuthorization\n * @returns {React.ReactNode}\n */\nconst Authentication = ({ appName, children, isDisabled, t, useGetAuthorization: useAliasGetAuthorization }) => {\n  const { pending, data = {} } = useAliasGetAuthorization();\n  const { authorized = {}, errorCodes, errorStatus } = data;\n  const { [appName]: isAuthorized } = authorized;\n\n  const renderContent = () => {\n    if (isDisabled) {\n      return (\n        <MessageView>\n          <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n        </MessageView>\n      );\n    }\n\n    if (isAuthorized) {\n      return children;\n    }\n\n    if (pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (errorCodes && errorCodes.includes(rhsmConstants.RHSM_API_RESPONSE_ERRORS_CODE_TYPES.OPTIN)) ||\n      errorStatus === 418\n    ) {\n      return <OptinView />;\n    }\n\n    return (\n      <MessageView>\n        <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n      </MessageView>\n    );\n  };\n\n  return <AuthenticationContext.Provider value={data}>{renderContent()}</AuthenticationContext.Provider>;\n};\n\n/**\n * Prop types.\n *\n * @type {{useGetAuthorization: Function, children: React.ReactNode, appName: string, isDisabled: boolean}}\n */\nAuthentication.propTypes = {\n  appName: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  useGetAuthorization: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useGetAuthorization: Function, t: Function, appName: string, isDisabled: boolean}}\n */\nAuthentication.defaultProps = {\n  appName: routerHelpers.appName,\n  isDisabled: helpers.UI_DISABLED,\n  t: translate,\n  useGetAuthorization\n};\n\nexport { Authentication as default, Authentication };\n","import React, { useContext } from 'react';\nimport { useMount } from 'react-use';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { helpers } from '../../common';\nimport { routerHelpers } from '../router';\n\n/**\n * Base context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst AuthenticationContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated authentication context.\n *\n * @returns {React.Context<{}>}\n */\nconst useAuthContext = () => useContext(AuthenticationContext);\n\n/**\n * Initialize an app, and return a combined state store that includes authorization, locale, and API errors\n *\n * @param {object} options\n * @param {string} options.appName\n * @param {Function} options.authorizeUser\n * @param {Function} options.hideGlobalFilter\n * @param {Function} options.useChrome\n * @param {Function} options.useDispatch\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: {errorCodes, errorStatus: *, locale}, pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetAuthorization = ({\n  appName = routerHelpers.appName,\n  authorizeUser = reduxActions.platform.authorizeUser,\n  hideGlobalFilter = reduxActions.platform.hideGlobalFilter,\n  useChrome: useAliasChrome = useChrome,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const dispatch = useAliasDispatch();\n  const { updateDocumentTitle = helpers.noop } = useAliasChrome();\n  const { data, error, fulfilled, pending, responses } = useAliasSelectorsResponse([\n    { id: 'auth', selector: ({ user }) => user?.auth },\n    { id: 'locale', selector: ({ user }) => user?.locale },\n    {\n      id: 'errors',\n      selector: ({ user }) => (user?.errors?.error === true && user.errors) || { fulfilled: true, data: [] }\n    }\n  ]);\n\n  useMount(async () => {\n    await dispatch(authorizeUser());\n    updateDocumentTitle(appName);\n    dispatch([hideGlobalFilter()]);\n  });\n\n  const [user = {}, app = {}] = (Array.isArray(data.auth) && data.auth) || [];\n  const errorStatus = (error && responses?.id?.errors?.status) || null;\n\n  return {\n    data: {\n      ...user,\n      ...app,\n      locale: data.locale,\n      errorCodes: data.errors,\n      errorStatus\n    },\n    error,\n    fulfilled,\n    pending\n  };\n};\n\n/**\n * Return session data from authentication context.\n *\n * @param {Function} useAliasAuthContext\n * @returns {{errorCodes, errorStatus: *, locale}}\n */\nconst useSession = ({ useAuthContext: useAliasAuthContext = useAuthContext } = {}) => {\n  const session = useAliasAuthContext();\n  return {\n    ...session\n  };\n};\n\nconst context = {\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useGetAuthorization,\n  useSession\n};\n\nexport {\n  context as default,\n  context,\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useGetAuthorization,\n  useSession\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ChartThemeColor } from '@patternfly/react-charts';\nimport { ChartContext } from './chartContext';\nimport { ChartElements } from './chartElements';\nimport { ChartLegend } from './chartLegend';\nimport { chartHelpers, ChartTypeVariant } from './chartHelpers';\nimport { useResizeObserver } from '../../hooks/useWindow';\n\n/**\n * Return a chart and elements with a context provider.\n *\n * @param {object} props\n * @param {Node|Function} props.chartLegend\n * @param {Node|Function} props.chartTooltip\n * @param {Array} props.dataSets\n * @param {object} props.padding\n * @param {string} props.themeColor\n * @param {Node|Function} props.xAxisChartLabel\n * @param {Node|Function} props.yAxisChartLabel\n * @param {boolean} props.xAxisFixLabelOverlap\n * @param {number} props.xAxisLabelIncrement\n * @param {Function} props.xAxisTickFormat\n * @param {Function} props.yAxisTickFormat\n * @param {Function} props.xValueFormat\n * @param {Function} props.yValueFormat\n * @returns {Node}\n */\nconst Chart = ({\n  chartLegend,\n  chartTooltip,\n  dataSets,\n  padding,\n  themeColor,\n  xAxisChartLabel,\n  yAxisChartLabel,\n  xAxisFixLabelOverlap,\n  xAxisLabelIncrement,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  xValueFormat,\n  yValueFormat\n}) => {\n  const [context, setContext] = useState();\n  const [dataSetsToggle, setDataSetsToggle] = useState({});\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const { width: chartWidth } = useResizeObserver(containerRef);\n\n  useEffect(() => {\n    /**\n     * Aggregate chart related settings.\n     *\n     * @returns {{isMultiYAxis: boolean, padding: object, chartDomain: {domain: {y: Array}}, tooltipDataSetLookUp: {},\n     *     xAxisProps: object, themeColor: string, maxY: (object|number), hasData: boolean, maxX: number,\n     *     yAxisProps: Array, chartElementsProps: {elementsById: object, stackedElements: Array,\n     *     stackedElementsById: object, elements: Array}}}\n     */\n    const updateChartSettings = () => {\n      const toggledDataSets = dataSets.filter(({ id }) => !dataSetsToggle[id]);\n\n      const tooltipDataSetLookUp = chartHelpers.generateTooltipData({\n        content: chartTooltip,\n        dataSets: toggledDataSets\n      });\n\n      const { maxX, maxY } = chartHelpers.generateMaxXY({ dataSets: toggledDataSets });\n      const { individualMaxY } = chartHelpers.generateMaxXY({ dataSets });\n      const { xAxisProps, yAxisProps } = chartHelpers.generateAxisProps({\n        dataSets,\n        individualMaxY,\n        maxX,\n        maxY,\n        xAxisChartLabel,\n        yAxisChartLabel,\n        xAxisFixLabelOverlap,\n        xAxisLabelIncrement,\n        xAxisTickFormat,\n        yAxisTickFormat\n      });\n\n      const isMultiYAxis = yAxisProps.length > 1;\n      const chartElementsProps = chartHelpers.generateElementsProps({\n        dataSets: toggledDataSets,\n        maxX,\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        xValueFormat,\n        yValueFormat\n      });\n      const { domain, padding: domainPadding } = chartHelpers.generateDomains({\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        padding\n      });\n      const hasData = !!xAxisProps.tickValues;\n      const updatedPadding = { bottom: 0, left: 0, right: 0, top: 0, ...padding, ...domainPadding };\n\n      return {\n        xAxisProps,\n        yAxisProps,\n        chartDomain: { domain },\n        chartElementsProps,\n        hasData,\n        isMultiYAxis,\n        maxX,\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        padding: updatedPadding,\n        themeColor,\n        tooltipDataSetLookUp\n      };\n    };\n\n    const chartSettings = updateChartSettings();\n    const updatedSettings = {\n      chartContainerRef: () => containerRef,\n      chartSettings: { ...chartSettings, chartLegend, chartWidth, dataSets },\n      chartTooltipRef: () => tooltipRef,\n      dataSetsToggle: [dataSetsToggle, setDataSetsToggle]\n    };\n\n    setContext(updatedSettings);\n  }, [\n    chartLegend,\n    chartTooltip,\n    chartWidth,\n    dataSets,\n    dataSetsToggle,\n    padding,\n    setContext,\n    themeColor,\n    xAxisChartLabel,\n    yAxisChartLabel,\n    xAxisFixLabelOverlap,\n    xAxisLabelIncrement,\n    yAxisTickFormat,\n    xAxisTickFormat,\n    xValueFormat,\n    yValueFormat\n  ]);\n\n  return (\n    <ChartContext.Provider value={context}>\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"curiosity-chartarea uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={containerRef}\n      >\n        {chartWidth > 0 && (\n          <React.Fragment>\n            <ChartElements />\n            <ChartLegend />\n          </React.Fragment>\n        )}\n      </div>\n    </ChartContext.Provider>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{chartTooltip: Node|Function, xValueFormat: Function, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: Function, themeColor: string, chartLegend: Node|Function,\n *     yAxisTickFormat: Function, dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number,\n *     yValueFormat: Function}}\n */\nChart.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      chartType: PropTypes.oneOf([...Object.values(ChartTypeVariant)]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      xAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      yAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      xAxisUseDataSet: PropTypes.bool,\n      yAxisUseDataSet: PropTypes.bool\n    })\n  ),\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  yAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func,\n  xValueFormat: PropTypes.func,\n  yValueFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartTooltip: Node|Function, xValueFormat: Function, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: Function, themeColor: string, chartLegend: Node|Function,\n *     yAxisTickFormat: Function, dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number,\n *     yValueFormat: Function}}\n */\nChart.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  dataSets: [],\n  padding: {\n    bottom: 75,\n    left: 55,\n    right: 55,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisChartLabel: null,\n  yAxisChartLabel: null,\n  xAxisFixLabelOverlap: true,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null,\n  xValueFormat: null,\n  yValueFormat: null\n};\n\nexport { Chart as default, Chart, ChartTypeVariant };\n","import { useEffect, useState } from 'react';\nimport { helpers } from '../common';\n\n/**\n * Apply a resize observer to an element.\n *\n * @param {*} target\n * @returns {{width: number, height: number}}\n */\nconst useResizeObserver = target => {\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    const isElementResize = target && window.ResizeObserver && true;\n    const element = target?.current;\n    let removeObserver = helpers.noop;\n\n    if (element) {\n      const handler = () => {\n        const { clientHeight = 0, clientWidth = 0, innerHeight = 0, innerWidth = 0 } = element || {};\n\n        setDimensions({\n          width: isElementResize ? clientWidth : innerWidth,\n          height: isElementResize ? clientHeight : innerHeight\n        });\n      };\n\n      if (isElementResize) {\n        const resizeObserver = new window.ResizeObserver(handler);\n        resizeObserver.observe(element);\n        removeObserver = () => resizeObserver.unobserve(element);\n      } else {\n        handler();\n        window.addEventListener('resize', handler);\n        removeObserver = () => window.removeEventListener('resize', handler);\n      }\n    }\n\n    return () => {\n      removeObserver();\n    };\n  }, [target]);\n\n  return dimensions;\n};\n\nconst windowHooks = {\n  useResizeObserver\n};\n\nexport { windowHooks as default, windowHooks, useResizeObserver };\n","import React from 'react';\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * Return a compatible Victory tooltip component.\n *\n * @param {object} params\n * @param {string} params.axis\n * @param {number} params.index\n * @returns {Function}\n */\nconst chartAxisLabel =\n  ({ axis, index = 0 } = {}) =>\n  ({ x, y, text }) => // eslint-disable-line\n    (\n      <g>\n        <foreignObject x={0} y={0} width=\"100%\" height=\"100%\">\n          <div\n            className={`curiosity-chartarea__axis-label-container curiosity-chartarea__axis-label-container-${axis} curiosity-chartarea__axis-label-container-${axis}-${index}`}\n            style={{ top: `${y ?? 0}px` }}\n            xmlns=\"http://www.w3.org/1999/xhtml\"\n          >\n            <div className=\"curiosity-chartarea__axis-label-container-content\">{text}</div>\n          </div>\n        </foreignObject>\n      </g>\n    );\n\nexport { chartAxisLabel as default, chartAxisLabel };\n","import React, { useCallback, useContext } from 'react';\nimport { helpers } from '../../common';\n\n/**\n * Chart context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { chartContainerRef: helpers.noop, chartSettings: {}, chartTooltipRef: helpers.noop, dataSetsToggle: [] },\n  helpers.noop\n];\n\nconst ChartContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated chart context.\n *\n * @returns {React.Context<{}>}\n */\nconst useChartContext = () => useContext(ChartContext);\n\n/**\n * ToDo: reevaluate this alternative pattern of passing hooks as options, helps testing\n */\n/**\n * Track, show, and hide chart data layers.\n *\n * @param {object} options\n * @param {Function} options.useChartContext\n * @returns {{onRevert: Function, onToggle: Function, getIsToggled: Function, dataSetsToggle: object,\n *     onHide: Function}}\n */\nconst useToggleData = ({ useChartContext: useAliasChartContext = useChartContext } = {}) => {\n  const { dataSetsToggle: contextDataSetsToggle = [] } = useAliasChartContext();\n  const [dataSetsToggle, setDataSetsToggle] = contextDataSetsToggle;\n\n  /**\n   * Hide a graph layer.\n   *\n   * @type {(function(*): void)|*}\n   */\n  const onHide = useCallback(\n    id => {\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: true }));\n    },\n    [setDataSetsToggle]\n  );\n\n  // ToDo: re-evaluate useCallback here.\n  /**\n   * Reset graph layers.\n   *\n   * @type {(function(): void)|*}\n   */\n  const onRevert = useCallback(() => {\n    setDataSetsToggle(() => ({}));\n  }, [setDataSetsToggle]);\n\n  /**\n   * Hide/show graph layers.\n   *\n   * @type {function(*): boolean}\n   */\n  const onToggle = useCallback(\n    id => {\n      const updatedToggle = !dataSetsToggle?.[id];\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: updatedToggle }));\n      return updatedToggle;\n    },\n    [dataSetsToggle, setDataSetsToggle]\n  );\n\n  // ToDo: review return undefined if doesn't exist\n  /**\n   * Graph layer status.\n   *\n   * @type {function(*): boolean}\n   */\n  const getIsToggled = useCallback(id => dataSetsToggle?.[id] || false, [dataSetsToggle]);\n\n  return {\n    ...{ dataSetsToggle },\n    onHide,\n    onRevert,\n    onToggle,\n    getIsToggled\n  };\n};\n\nconst context = {\n  ChartContext,\n  DEFAULT_CONTEXT,\n  useChartContext,\n  useToggleData\n};\n\nexport { context as default, context, ChartContext, DEFAULT_CONTEXT, useChartContext, useToggleData };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VictoryStack as ChartStack, VictoryTooltip as ChartCursorTooltip } from 'victory';\nimport { createContainer } from 'victory-create-container';\nimport { Chart, ChartArea, ChartAxis, ChartContainer, ChartLine, ChartThreshold } from '@patternfly/react-charts';\nimport { useChartContext } from './chartContext';\nimport { chartTooltip } from './chartTooltip';\nimport { chartAxisLabel } from './chartAxisLabel';\nimport { ChartTypeVariant } from './chartHelpers';\n\n/**\n * Generate a compatible Victory chart element/facet component.\n *\n * @param {object} props\n * @param {object} props.chartTypeDefaults\n * @returns {Node}\n */\nconst ChartElements = ({ chartTypeDefaults }) => {\n  const { chartSettings = {}, chartContainerRef, chartTooltipRef } = useChartContext();\n  const {\n    chartDomain,\n    chartElementsProps,\n    chartWidth,\n    hasData,\n    padding,\n    themeColor,\n    xAxisProps = {},\n    yAxisProps = []\n  } = chartSettings;\n\n  let containerComponent = <ChartContainer />;\n  let xAxis = null;\n  let yAxis = null;\n  let chartElements = [];\n  let stackedChartElements = [];\n\n  if (hasData) {\n    /**\n     * Note: both cursor and voronoiDimension attrs required if the need is to have...\n     * the tooltip populate consistently without being \"near\" a chart element y axis point\n     */\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const TooltipLabelComponent = chartTooltip({ chartSettings, chartContainerRef, chartTooltipRef });\n\n    containerComponent = (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        voronoiDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={\n          <ChartCursorTooltip\n            dx={0}\n            dy={0}\n            centerOffset={{ x: 0, y: 0 }}\n            flyoutStyle={{ fill: 'transparent', stroke: 'transparent' }}\n            labelComponent={<TooltipLabelComponent />}\n          />\n        }\n        voronoiPadding={(padding && Object.values(padding).sort()?.[0]) || 0}\n        mouseFollowTooltips\n      />\n    );\n  }\n\n  /**\n   * Generate X Axis\n   */\n  if (Object.keys(xAxisProps).length) {\n    const updatedXAxisProps = {\n      ...xAxisProps\n    };\n\n    if (updatedXAxisProps.label) {\n      const AxisLabelComponent = chartAxisLabel({ axis: 'x' });\n      updatedXAxisProps.axisLabelComponent = <AxisLabelComponent />;\n    }\n\n    xAxis = <ChartAxis {...updatedXAxisProps} animate={false} />;\n  }\n\n  /**\n   * Generate Y Axis\n   */\n  if (Array.isArray(yAxisProps)) {\n    yAxis = yAxisProps.map((axisProps, index) => {\n      const updatedAxisProps = {\n        ...axisProps\n      };\n\n      if (updatedAxisProps.label) {\n        const AxisLabelComponent = chartAxisLabel({ axis: 'y', index });\n        updatedAxisProps.axisLabelComponent = <AxisLabelComponent />;\n      }\n\n      return <ChartAxis key={`yaxis-${axisProps.orientation}`} {...updatedAxisProps} animate={false} />;\n    });\n  }\n\n  const setChartElement = ({ chartType, props }) => {\n    const { component: Component, ...defaultProps } =\n      chartTypeDefaults[chartType] || chartTypeDefaults[ChartTypeVariant.area];\n    return <Component {...{ ...defaultProps, ...props }} />;\n  };\n\n  chartElements = chartElementsProps?.elements.map(setChartElement);\n  stackedChartElements = chartElementsProps?.stackedElements.map(setChartElement);\n\n  return (\n    <Chart\n      animate={{ duration: 0 }}\n      width={chartWidth}\n      themeColor={themeColor}\n      {...{ padding, containerComponent, ...chartDomain }}\n    >\n      {xAxis}\n      {yAxis}\n      {chartElements}\n      <ChartStack>{stackedChartElements}</ChartStack>\n    </Chart>\n  );\n};\n\nChartElements.propTypes = {\n  chartTypeDefaults: PropTypes.objectOf(\n    PropTypes.shape({\n      component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      interpolation: PropTypes.oneOf(['monotoneX', 'step'])\n    })\n  )\n};\n\nChartElements.defaultProps = {\n  chartTypeDefaults: {\n    [ChartTypeVariant.area]: {\n      component: ChartArea,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    [ChartTypeVariant.line]: {\n      component: ChartLine,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    [ChartTypeVariant.threshold]: {\n      component: ChartThreshold,\n      animate: {\n        duration: 100,\n        onLoad: { duration: 100 }\n      },\n      interpolation: 'step'\n    }\n  }\n};\n\nexport { ChartElements as default, ChartElements };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * Available chart types\n *\n * @type {{area: string, line: string, threshold: string}}\n */\nconst ChartTypeVariant = {\n  area: 'area',\n  line: 'line',\n  threshold: 'threshold'\n};\n\n/**\n * Generate max X and Y values from datasets.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @returns {{individualMaxY: object, maxY: number, maxX: number}}\n */\nconst generateMaxXY = ({ dataSets = [] } = {}) => {\n  const individualDataSetsMaxY = {};\n  let combinedDataSetMaxX = 0;\n  let combinedDataSetsMaxY = 0;\n\n  dataSets\n    .filter(({ isStacked }) => isStacked === true)\n    .forEach(({ data }) => {\n      if (Array.isArray(data)) {\n        combinedDataSetsMaxY += Math.max(...data.map(value => value?.y ?? 0));\n      }\n    });\n\n  dataSets.forEach(({ id, data }) => {\n    let dataSetMaxY = 0;\n\n    if (Array.isArray(data)) {\n      combinedDataSetMaxX = data.length > combinedDataSetMaxX ? data.length : combinedDataSetMaxX;\n\n      dataSetMaxY = Math.max(...data.map(value => value?.y ?? 0));\n      combinedDataSetsMaxY = dataSetMaxY > combinedDataSetsMaxY ? dataSetMaxY : combinedDataSetsMaxY;\n    }\n\n    if (id) {\n      individualDataSetsMaxY[id] = dataSetMaxY;\n    }\n  });\n\n  return {\n    maxX: combinedDataSetMaxX,\n    maxY: combinedDataSetsMaxY,\n    individualMaxY: individualDataSetsMaxY\n  };\n};\n\n/**\n * Generate Y axis domain ranges from dataSets, ignore X axis.\n *\n * @param {object} params\n * @param {number|object} params.maxY\n * @param {object} params.padding\n * @returns {{ domain: { y: Array }, padding: {object} }}\n */\nconst generateDomains = ({ maxY, padding = {} } = {}) => {\n  const updatedChartDomain = {};\n  const updatedPadding = { ...padding };\n  const generatedDomain = {};\n\n  if (Object.values(maxY).length) {\n    generatedDomain.y = [0, 1.25];\n  } else if (maxY >= 0.1) {\n    const floored = Math.pow(10, Math.floor(Math.log10(maxY || 10)));\n    generatedDomain.y = [0, Math.ceil((maxY + 1) / floored) * floored];\n  } else if (maxY < 0.1) {\n    generatedDomain.y = [0, maxY + maxY / 4 || 10];\n  } else {\n    generatedDomain.y = [0, 10];\n  }\n\n  if (maxY < 0.01) {\n    updatedPadding.left += generatedDomain.y.toString().length;\n    updatedPadding.right += generatedDomain.y.toString().length;\n  }\n\n  if (Object.keys(generatedDomain).length) {\n    updatedChartDomain.domain = generatedDomain;\n  }\n\n  return {\n    ...updatedChartDomain,\n    padding: updatedPadding\n  };\n};\n\n/**\n * Generate chart element props.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {number} params.maxX\n * @param {number} params.maxY\n * @param {Function} params.xValueFormat\n * @param {Function} params.yValueFormat\n * @param {object} options\n * @param {object} options.chartTypeVariant\n * @returns {{elementsById: object, stackedElements: Array, stackedElementsById: object, elements: Array}}\n */\nconst generateElementsProps = (\n  { dataSets = [], maxX, maxY, xValueFormat, yValueFormat } = {},\n  { chartTypeVariant = ChartTypeVariant } = {}\n) => {\n  const elements = [];\n  const stackedElements = [];\n  const elementsById = {};\n  const stackedElementsById = {};\n\n  dataSets.forEach(dataSet => {\n    const { animate, chartType, data, fill, id, isStacked, interpolation, stroke, strokeDasharray, strokeWidth } =\n      dataSet;\n\n    if (data?.length) {\n      const dataColorStroke = {\n        data: {}\n      };\n\n      if (fill && chartType !== chartTypeVariant.line && chartType !== chartTypeVariant.threshold) {\n        dataColorStroke.data.fill = fill;\n      }\n\n      if (stroke) {\n        dataColorStroke.data.stroke = stroke;\n      }\n\n      if (strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = strokeDasharray;\n      }\n\n      if (strokeWidth) {\n        dataColorStroke.data.strokeWidth = strokeWidth;\n      }\n\n      const defaultProps = {};\n\n      if (animate) {\n        defaultProps.animate = animate;\n      }\n\n      if (interpolation) {\n        defaultProps.interpolation = interpolation;\n      }\n\n      const chartElementProps = {\n        ...defaultProps,\n        key: `chart-${dataSet.id}-${chartType || ''}`,\n        name: `chart-${dataSet.id}-${chartType || ''}`,\n        data: dataSet.data,\n        style: { ...(dataSet.style || {}), ...dataColorStroke },\n        themeColor: dataSet.themeColor,\n        themeVariant: dataSet.themeVariant,\n        x:\n          (xValueFormat &&\n            (datum => {\n              const xValue = xValueFormat({ datum, maxX });\n              return xValue === undefined || Number.isNaN(xValue) ? 0 : xValue;\n            })) ||\n          undefined,\n        y: datum => {\n          let yValue;\n\n          if (yValueFormat) {\n            yValue = yValueFormat({\n              datum,\n              isMultiAxis: typeof maxY !== 'number',\n              maxY: typeof maxY === 'number' ? maxY : maxY?.[dataSet.id]\n            });\n          } else {\n            yValue = typeof maxY === 'number' ? datum.y : datum.y / maxY?.[dataSet.id]; // eslint-disable-line\n          }\n\n          return yValue === undefined || Number.isNaN(yValue) ? 0 : yValue;\n        }\n      };\n\n      const props = { ...chartElementProps };\n      const updatedProps = { chartType, props };\n\n      if (isStacked) {\n        stackedElementsById[id] = updatedProps;\n        stackedElements.push(updatedProps);\n      } else {\n        elementsById[id] = updatedProps;\n        elements.push(updatedProps);\n      }\n    }\n  });\n\n  return {\n    elements,\n    elementsById,\n    stackedElements,\n    stackedElementsById\n  };\n};\n\n/**\n * Preprocess datasets for tooltips.\n *\n * @param {object} params\n * @param {Node|Function} params.content\n * @param {Array} params.dataSets\n * @returns {{}}\n */\nconst generateTooltipData = ({ content = helpers.noop, dataSets = [] } = {}) => {\n  const tooltipDataSetLookUp = {};\n\n  if (content && Array.isArray(dataSets?.[0]?.data)) {\n    dataSets[0].data.forEach((dataSet, index) => {\n      const itemsByKey = {};\n\n      dataSets.forEach(data => {\n        if (data?.data?.[index]) {\n          itemsByKey[data.id] = {\n            color: data.stroke || data.fill || data.color || '',\n            chartType: data.chartType,\n            data: _cloneDeep(data.data[index])\n          };\n        }\n      });\n\n      const mockDatum = {\n        datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey }\n      };\n\n      tooltipDataSetLookUp[dataSet.x] = {\n        x: dataSet.x,\n        y: null,\n        itemsByKey,\n        tooltip:\n          (React.isValidElement(content) && React.cloneElement(content, { ...mockDatum })) || content({ ...mockDatum })\n      };\n    });\n  }\n\n  return tooltipDataSetLookUp;\n};\n\n/**\n * Generate X axis props, ticks, tick formatting.\n *\n * @param {object} params\n * @param {object} params.dataSet\n * @param {number} params.maxX\n * @param {number} params.xAxisLabelIncrement\n * @param {object} params.xAxisPropDefaults\n * @param {Function} params.xAxisTickFormat\n * @returns {{tickFormat: (function(*)), tickValues: *}}\n */\nconst generateXAxisProps = ({\n  dataSet = {},\n  maxX,\n  xAxisLabelIncrement,\n  xAxisPropDefaults = {},\n  xAxisTickFormat\n} = {}) => {\n  const { data = [], xAxisChartLabel } = dataSet;\n  const axisProps = {\n    ...xAxisPropDefaults,\n    tickValues: data.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    ),\n    tickFormat: tick => data[tick]?.xAxisLabel || tick\n  };\n\n  if (typeof xAxisChartLabel === 'function') {\n    axisProps.label = xAxisChartLabel({ ...dataSet, xAxisChartLabel: undefined });\n  } else {\n    axisProps.label = xAxisChartLabel;\n  }\n\n  if (typeof xAxisTickFormat === 'function') {\n    axisProps.tickFormat = tick => {\n      const tickIndex = axisProps.tickValues.indexOf(tick);\n      const previousItem = { ...data[axisProps.tickValues[tickIndex - 1]] };\n      const nextItem = { ...data[axisProps.tickValues[tickIndex + 1]] };\n      const item = { ...data[tick] };\n\n      return xAxisTickFormat({ tick, previousItem, item, nextItem, maxX });\n    };\n  }\n\n  return axisProps;\n};\n\n/**\n * Generate Y axis props, ticks, tick formatting.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {number|object} params.maxY\n * @param {object} params.yAxisPropDefaults\n * @param {Function} params.yAxisTickFormat\n * @returns {Array}\n */\nconst generateYAxisProps = ({ dataSets = [], maxY, yAxisPropDefaults = {}, yAxisTickFormat } = {}) => {\n  const axisProps = [];\n  const isMultiAxis = dataSets.length > 1;\n\n  dataSets.forEach(({ yAxisChartLabel, id, stroke, strokeWidth, ...dataSet } = {}, index) => {\n    const updatedAxisProps = {\n      style: { axis: {}, tickLabels: {} },\n      tickFormat: tick => tick\n    };\n\n    if (isMultiAxis && stroke) {\n      updatedAxisProps.style.axis.stroke = stroke;\n    }\n\n    if (isMultiAxis && strokeWidth) {\n      updatedAxisProps.style.axis.strokeWidth = strokeWidth;\n    }\n\n    if (typeof yAxisChartLabel === 'function') {\n      updatedAxisProps.label = yAxisChartLabel({ id, stroke, strokeWidth, ...dataSet });\n    } else {\n      updatedAxisProps.label = yAxisChartLabel;\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      const updatedMaxY = (typeof maxY === 'number' && maxY) || maxY?.[id];\n\n      updatedAxisProps.tickFormat = tick => {\n        const normalizedTick = (isMultiAxis && tick * updatedMaxY) || tick;\n\n        return yAxisTickFormat({\n          tick: normalizedTick,\n          isMultiAxis,\n          maxY: updatedMaxY\n        });\n      };\n    }\n\n    axisProps.push({\n      ...yAxisPropDefaults,\n      ...updatedAxisProps,\n      orientation: (index === 0 && 'left') || 'right'\n    });\n  });\n\n  return axisProps;\n};\n\n/**\n * Generate x,y props.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {object} params.individualMaxY\n * @param {number} params.maxX\n * @param {number} params.maxY\n * @param {Node|Function} params.xAxisChartLabel\n * @param {Node|Function} params.yAxisChartLabel\n * @param {boolean} params.xAxisFixLabelOverlap\n * @param {number} params.xAxisLabelIncrement\n * @param {Function} params.xAxisTickFormat\n * @param {Function} params.yAxisTickFormat\n * @returns {{xAxisProps: object, yAxisProps: Array}}\n */\nconst generateAxisProps = ({\n  dataSets = [],\n  individualMaxY = {},\n  maxX,\n  maxY,\n  xAxisChartLabel,\n  yAxisChartLabel,\n  xAxisFixLabelOverlap = true,\n  xAxisLabelIncrement = 1,\n  xAxisTickFormat,\n  yAxisTickFormat\n} = {}) => {\n  const xAxisPropDefaults = {\n    fixLabelOverlap: xAxisFixLabelOverlap\n  };\n\n  const yAxisPropDefaults = {\n    dependentAxis: true,\n    showGrid: true\n  };\n\n  let yAxisDataSets = [];\n  let xAxisDataSet;\n\n  dataSets.forEach(dataSet => {\n    if (dataSet.yAxisUseDataSet) {\n      yAxisDataSets.push({\n        yAxisChartLabel,\n        ...dataSet\n      });\n    }\n    if (dataSet.xAxisUseDataSet) {\n      xAxisDataSet = {\n        xAxisChartLabel,\n        ...dataSet\n      };\n    }\n  });\n\n  if (!yAxisDataSets.length) {\n    yAxisDataSets.push({\n      yAxisChartLabel,\n      ...dataSets?.[0]\n    });\n  } else {\n    yAxisDataSets = yAxisDataSets.slice(0, 2);\n  }\n\n  if (!xAxisDataSet) {\n    xAxisDataSet = {\n      xAxisChartLabel,\n      ...dataSets?.[0]\n    };\n  }\n\n  const updatedMaxY = (yAxisDataSets.length > 1 && individualMaxY) || maxY;\n\n  return {\n    xAxisProps: generateXAxisProps({\n      dataSet: xAxisDataSet,\n      maxX,\n      xAxisLabelIncrement,\n      xAxisPropDefaults,\n      xAxisTickFormat\n    }),\n    yAxisProps: generateYAxisProps({ dataSets: yAxisDataSets, maxY: updatedMaxY, yAxisPropDefaults, yAxisTickFormat })\n  };\n};\n\nconst chartHelpers = {\n  ChartTypeVariant,\n  generateAxisProps,\n  generateDomains,\n  generateElementsProps,\n  generateMaxXY,\n  generateTooltipData,\n  generateXAxisProps,\n  generateYAxisProps\n};\n\nexport {\n  chartHelpers as default,\n  chartHelpers,\n  ChartTypeVariant,\n  generateAxisProps,\n  generateDomains,\n  generateElementsProps,\n  generateMaxXY,\n  generateTooltipData,\n  generateXAxisProps,\n  generateYAxisProps\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EyeIcon, EyeSlashIcon, SquareIcon, IconSize } from '@patternfly/react-icons';\n\n/**\n * Emulate pf icon sizing for custom SVGs\n *\n * @param {string} size\n * @returns {string} em measurement\n */\nconst getSize = size => {\n  if (!Number.isNaN(Number.parseFloat(size))) {\n    return size;\n  }\n\n  switch (size) {\n    case 'md':\n      return '1.5em';\n    case 'lg':\n      return '2em';\n    case 'xl':\n      return '3em';\n    case 'sm':\n    default:\n      return '1em';\n  }\n};\n\n/**\n * Render an icon for use outside of Victory charts.\n *\n * @param {object} props\n * @param {string} props.fill\n * @param {string} props.symbol\n * @param {string} props.size\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\nconst ChartIcon = ({ fill, symbol, size, title, ...props }) => {\n  const svgProps = { ...props };\n  const iconProps = { size, title, ...props };\n  const fontProps = { style: { fontSize: getSize(size) }, title, ...props };\n  const emSvgSize = getSize(size);\n\n  if (title) {\n    svgProps['aria-labelledby'] = title;\n  } else {\n    svgProps['aria-hidden'] = true;\n  }\n\n  if (fill) {\n    iconProps.color = fill;\n    fontProps.style.color = fill;\n  }\n\n  const setIcon = () => {\n    switch (symbol) {\n      case 'dash':\n        return (\n          <span\n            style={{\n              width: emSvgSize,\n              height: `${Number.parseFloat(emSvgSize) / 2}em`\n            }}\n          >\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 38 10\" role=\"img\" {...svgProps}>\n              <rect y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"14\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"28\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n            </svg>\n          </span>\n        );\n      case 'threshold':\n        return (\n          <span style={{ width: `${Number.parseFloat(emSvgSize) * 2}em`, height: emSvgSize }}>\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 18 10\" role=\"img\" {...svgProps}>\n              <line\n                x1={0}\n                y1={(Number.parseFloat(emSvgSize) * 16) / 2}\n                x2={Number.parseFloat(emSvgSize) * 16 * 3}\n                y2={(Number.parseFloat(emSvgSize) * 16) / 2}\n                stroke={fill}\n                strokeWidth={3}\n                strokeDasharray=\"4,3\"\n              />\n            </svg>\n          </span>\n        );\n      case 'eye':\n        return <EyeIcon {...iconProps} />;\n      case 'eyeSlash':\n        return <EyeSlashIcon {...iconProps} />;\n      case 'infinity':\n        return (\n          <span className=\"curiosity-icon__f-infinity\" {...fontProps}>\n            <span aria-hidden>&#x221e;</span>\n          </span>\n        );\n\n      case 'square':\n      default:\n        return <SquareIcon {...iconProps} />;\n    }\n  };\n\n  return <span className={`curiosity-chartarea__icon curiosity-chartarea__icon-${symbol}`}>{setIcon()}</span>;\n};\n\n/**\n * Prop types.\n *\n * @type {{symbol: string, size: string, fill: string, title: string}}\n */\nChartIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOf([...Object.keys(IconSize)]),\n  symbol: PropTypes.oneOf(['dash', 'eye', 'eyeSlash', 'infinity', 'square', 'threshold']),\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{symbol: string, size: string, fill: null, title: null}}\n */\nChartIcon.defaultProps = {\n  fill: null,\n  size: 'sm',\n  symbol: 'square',\n  title: null\n};\n\nexport { ChartIcon as default, ChartIcon };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { useChartContext, useToggleData } from './chartContext';\n\n/**\n * Wrapper for rendering an HTML based legend.\n *\n * @returns {Node}\n */\nconst ChartLegend = () => {\n  const { getIsToggled, onHide, onRevert, onToggle } = useToggleData();\n  const { chartSettings = {} } = useChartContext();\n  const { chartLegend, dataSets, padding = {}, xAxisProps = {} } = chartSettings;\n\n  if (!chartLegend) {\n    return null;\n  }\n\n  const legendProps = {\n    datum: { dataSets: _cloneDeep(dataSets) },\n    chart: {\n      hide: onHide,\n      revert: onRevert,\n      toggle: onToggle,\n      isToggled: getIsToggled\n    }\n  };\n\n  return (\n    <div\n      className={`curiosity-chartarea__legend${(xAxisProps?.label && '-axis-label-active') || ''}`}\n      style={{\n        marginLeft: (padding?.left && `${padding.left}px`) || 0,\n        marginRight: (padding?.right && `${padding.right}px`) || 0\n      }}\n    >\n      {(React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n        chartLegend({ ...legendProps })}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n */\nChartLegend.propTypes = {};\n\n/**\n * Default props.\n */\nChartLegend.defaultProps = {};\n\nexport { ChartLegend as default, ChartLegend };\n","import React from 'react';\nimport { helpers } from '../../common';\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * FixMe: The right graph boundary for tooltips is dependent on Voronoi container padding.\n * A limitation exists where Voronoi containers can only have a single padding setting. This means we use\n * the lowest number value from the \"padding\" setting. The repercussion is the right boundary either has to\n * be the lowest padding value, or equal to the lowest padding from any of the other dimensions, ie. top,\n * bottom, left.\n */\n/**\n * Return a compatible Victory tooltip component.\n *\n * @param {object} params\n * @param {object} params.chartSettings\n * @param {Function} params.chartContainerRef\n * @param {Function} params.chartTooltipRef\n * @param {number} params.minChartWidth\n * @returns {Function}\n */\nconst chartTooltip = ({\n  chartSettings = {},\n  chartContainerRef = helpers.noop,\n  chartTooltipRef = helpers.noop,\n  minChartWidth = 500\n} = {}) => {\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip x coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getXCoordinate = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return x + padding - tooltipWidth / 2;\n    }\n\n    return x > width / 2 ? x - tooltipWidth + padding : x + padding;\n  };\n\n  /**\n   * Return a tooltip y coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.y\n   * @param {number} params.height\n   * @param {number} params.tooltipHeight\n   * @param {number} params.width\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getYCoordinate = ({ y, height, tooltipHeight, width, padding = 15, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth) {\n      return y > height / 2 ? y - tooltipHeight - padding : y + padding;\n    }\n\n    const updatedMultiplier = height / tooltipHeight / 10;\n    const heightMultiplier = (updatedMultiplier < 0.25 && updatedMultiplier) || 0.25;\n\n    return height * heightMultiplier;\n  };\n\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip tail position CSS class.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const tailPosition = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return 'middle';\n    }\n\n    return x > width / 2 ? 'right' : 'left';\n  };\n\n  return ({ x, y, datum = {} }) => { // eslint-disable-line\n    const { padding = {}, tooltipDataSetLookUp = {} } = chartSettings;\n\n    const containerRef = chartContainerRef();\n    const tooltipRef = chartTooltipRef();\n    const updatedPadding = { bottom: 0, left: 0, right: 0, top: 0, ...padding };\n    const content = tooltipDataSetLookUp?.[datum.x]?.tooltip || '';\n    const containerBounds = containerRef?.current?.querySelector('svg')?.getBoundingClientRect() || {\n      width: 0,\n      height: 0\n    };\n\n    const tooltipBounds = tooltipRef?.current?.getBoundingClientRect() || { width: 0, height: 0 };\n\n    if (content) {\n      const isOutsideGraphBottom = y > containerBounds.height - updatedPadding.bottom;\n      const isOutsideGraphLeft = x < updatedPadding.left;\n      const isOutsideGraphRight = x > containerBounds.width - updatedPadding.right;\n      const isOutsideGraphTop = y < updatedPadding.top;\n      const updatedClassName = `${(tooltipBounds.height <= 0 && 'fadein') || ''}`;\n\n      return (\n        <g>\n          <foreignObject\n            x={getXCoordinate({ x, width: containerBounds.width, tooltipWidth: tooltipBounds.width })}\n            y={getYCoordinate({\n              y,\n              height: containerBounds.height,\n              tooltipHeight: tooltipBounds.height,\n              width: containerBounds.width\n            })}\n            width=\"100%\"\n            height=\"100%\"\n          >\n            <div\n              className={`curiosity-chartarea__tooltip-container ${updatedClassName}`}\n              ref={tooltipRef}\n              style={{\n                display:\n                  ((isOutsideGraphBottom || isOutsideGraphLeft || isOutsideGraphRight || isOutsideGraphTop) &&\n                    'none') ||\n                  'inline-block'\n              }}\n              xmlns=\"http://www.w3.org/1999/xhtml\"\n            >\n              <div\n                className={`curiosity-chartarea__tooltip curiosity-chartarea__tooltip-${tailPosition({\n                  x,\n                  y,\n                  width: containerBounds.width,\n                  tooltipWidth: tooltipBounds.width\n                })}`}\n              >\n                {content}\n              </div>\n            </div>\n          </foreignObject>\n        </g>\n      );\n    }\n\n    return <g />;\n  };\n};\n\nexport { chartTooltip as default, chartTooltip };\n","import { helpers } from '../../common/helpers';\n\n/**\n * Create a consistent mock event object.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget: {}, name, checked: *, id: *, persist: Function, value, target: {}}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked: checked ?? currentTarget?.checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useShallowCompareEffect } from 'react-use';\nimport {\n  ButtonVariant as PfButtonVariant,\n  Dropdown,\n  DropdownDirection,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n  DropdownToggleAction,\n  DropdownToggleCheckbox,\n  Select as PfSelect,\n  SelectOption as PfSelectOption,\n  SelectVariant\n} from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _findIndex from 'lodash/findIndex';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _memoize from 'lodash/memoize';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * Dropdown split button variants\n *\n * @type {{action: string, checkbox: string}}\n */\nconst SplitButtonVariant = {\n  action: 'action',\n  checkbox: 'checkbox'\n};\n\n/**\n * Dropdown toggle button variants\n *\n * @type {{secondary: string, default: string, plain: string, text: string, primary: string}}\n */\nconst ButtonVariant = PfButtonVariant;\n\n/**\n * Pass button variant as a select component option.\n *\n * @type {{secondary: string, default: string, plain: string, text: string, primary: string}}\n */\nconst SelectButtonVariant = ButtonVariant;\n\n/**\n * Pass direction as select component variant option.\n *\n * @type {{down: string, up: string}}\n */\nconst SelectDirection = DropdownDirection;\n\n/**\n * Pass position as select component variant option.\n *\n * @type {{left: string, right: string}}\n */\nconst SelectPosition = DropdownPosition;\n\n/**\n * FixMe: attributes on PF select and dropdown components do not allow data- attributes being passed\n * FixMe: PF dropdown, select attempt to break the ref attribute?\n * Moving from a class to func wrapper exposes a PF \"special props warning\", https://bit.ly/2n0hzWo\n */\n/**\n * Format options into a consumable array of objects.\n * Note: It is understood that for line 83'ish around \"updatedOptions\" we dump all values regardless\n * of whether they are plain objects, or not, into updatedOptions. This has been done for speed only,\n * one less check to perform.\n *\n * @param {object} params\n * @param {*|React.ReactNode} params.selectField\n * @param {object|Array} params.options\n * @param {string|number|Array} params.selectedOptions\n * @param {string} params.variant\n * @param {object} params.props\n * @returns {{options: *[]|*, selected: *[]}}\n */\nconst formatOptions = ({ selectField = { current: null }, options, selectedOptions, variant, ...props } = {}) => {\n  const { current: domElement = {} } = selectField;\n  const dataAttributes = Object.entries(props).filter(([key]) => /^data-/i.test(key));\n  const updatedOptions =\n    (_isPlainObject(options) && Object.entries(options).map(([key, value]) => ({ ...value, title: key, value }))) ||\n    (options && _cloneDeep(options)) ||\n    [];\n  const isSelectedOptionsStringNumber = typeof selectedOptions === 'string' || typeof selectedOptions === 'number';\n  const activateOptions =\n    (Array.isArray(selectedOptions) && selectedOptions) || (isSelectedOptionsStringNumber && [selectedOptions]) || [];\n\n  updatedOptions.forEach((option, index) => {\n    let convertedOption = option;\n\n    if (typeof convertedOption === 'string') {\n      convertedOption = {\n        title: option,\n        value: option\n      };\n\n      updatedOptions[index] = convertedOption;\n    } else if (typeof convertedOption.title === 'function') {\n      convertedOption.title = convertedOption.title();\n    }\n\n    convertedOption.text = convertedOption.text || convertedOption.title;\n    convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n    convertedOption.label = convertedOption.label || convertedOption.title;\n\n    if (activateOptions.length) {\n      let isSelected;\n\n      if (_isPlainObject(convertedOption.value)) {\n        isSelected = _findIndex(activateOptions, convertedOption.value) > -1;\n\n        if (!isSelected) {\n          const tempSearch = activateOptions.find(activeOption =>\n            Object.values(convertedOption.value).includes(activeOption)\n          );\n          isSelected = !!tempSearch;\n        }\n      } else {\n        isSelected = activateOptions.includes(convertedOption.value);\n      }\n\n      if (!isSelected) {\n        isSelected = activateOptions.includes(convertedOption.title);\n      }\n\n      updatedOptions[index].selected = isSelected;\n    }\n  });\n\n  let updateSelected;\n\n  if (variant === SelectVariant.single) {\n    updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n  } else {\n    updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n  }\n\n  if (domElement?.firstChild) {\n    dataAttributes.forEach(([key, value]) => domElement?.firstChild.setAttribute(key, value));\n  }\n\n  return {\n    options: updatedOptions,\n    selected: updateSelected\n  };\n};\n\n/**\n * Return assumed/expected PF select props.\n *\n * @param {object} params\n * @param {boolean} params.isDisabled\n * @param {string} params.placeholder\n * @param {object|Array} params.options\n * @returns {{}}\n */\nconst formatSelectProps = _memoize(({ isDisabled, placeholder, options } = {}) => {\n  const updatedProps = {};\n\n  if (!options || !options.length || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n\n  if (typeof placeholder === 'string' && placeholder) {\n    updatedProps.hasPlaceholderStyle = true;\n  }\n\n  return updatedProps;\n});\n\n/**\n * Format consistent dropdown button props.\n *\n * @param {object} params\n * @param {boolean} params.isDisabled\n * @param {Array} params.options\n * @param {string} params.buttonVariant\n * @param {Function} params.onSplitButton\n * @param {string} params.splitButtonCopy\n * @param {string} params.splitButtonVariant\n * @returns {*}\n */\nconst formatButtonProps = _memoize(\n  ({ isDisabled, options, buttonVariant, onSplitButton, splitButtonCopy, splitButtonVariant } = {}) => {\n    const buttonVariantPropLookup = {\n      default: { toggleVariant: 'default' },\n      plain: { isPlain: true, toggleIndicator: null },\n      primary: { toggleVariant: 'primary' },\n      secondary: { toggleVariant: 'secondary' },\n      text: { isText: true }\n    };\n\n    const splitButtonVariantPropLookup = {\n      action: {\n        splitButtonVariant: 'action',\n        splitButtonItems: [\n          <DropdownToggleAction onClick={onSplitButton} key=\"toggle-action\">\n            {splitButtonCopy}\n          </DropdownToggleAction>\n        ]\n      },\n      checkbox: {\n        splitButtonVariant: 'checkbox',\n        splitButtonItems: [\n          <DropdownToggleCheckbox\n            id={`toggle-action-${splitButtonCopy}`}\n            key=\"toggle-action\"\n            onClick={onSplitButton}\n            aria-label={splitButtonCopy}\n            placeholder={splitButtonCopy}\n          />\n        ]\n      }\n    };\n\n    const updatedProps = {\n      ...buttonVariantPropLookup[buttonVariant],\n      ...splitButtonVariantPropLookup[splitButtonVariant]\n    };\n\n    if (!options || !options.length || isDisabled) {\n      updatedProps.isDisabled = true;\n    }\n\n    return updatedProps;\n  }\n);\n\n/**\n * FixMe: PF has an inconsistency in how it applies props for the dropdown\n * Sometimes those props are on the toggle, sometimes those props are on the parent, little bit of guesswork.\n * Additionally, it's not filtering props so you'll throw the \"[HTML doesn't recognize attribute]\" error.\n */\n/**\n * Fix pf props inconsistency for dropdown button props.\n *\n * @param {object} formattedButtonProps\n * @returns {*}\n */\nconst formatButtonParentProps = (formattedButtonProps = {}) => {\n  const updatedButtonProps = formatButtonProps(formattedButtonProps);\n  delete updatedButtonProps.isDisabled;\n  delete updatedButtonProps.toggleIndicator;\n\n  return updatedButtonProps;\n};\n\n/**\n * A wrapper for Pf Select, and emulator for Pf Dropdown. Provides consistent restructured event data for onSelect callback\n * for both select and dropdown.\n *\n * @fires onDropdownSelect\n * @fires onSplitButton\n * @fires onToggle\n * @param {object} props\n * @param {string} props.ariaLabel\n * @param {string} props.buttonVariant\n * @param {string} props.className\n * @param {string} props.direction\n * @param {string} props.id\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isDropdownButton\n * @param {boolean} props.isFlipEnabled\n * @param {boolean} props.isInline\n * @param {boolean} props.isToggleText\n * @param {number} props.maxHeight\n * @param {string} props.name\n * @param {Function} props.onSelect\n * @param {Function} props.onSplitButton\n * @param {object|Array} props.options\n * @param {string} props.placeholder\n * @param {string} props.position\n * @param {number|string|Array} props.selectedOptions\n * @param {string} props.splitButtonVariant\n * @param {React.ReactNode|Function} props.toggleIcon\n * @param {string} props.variant\n * @param {object} props.props\n * @returns {React.ReactNode}\n */\nconst Select = ({\n  ariaLabel,\n  buttonVariant,\n  className,\n  direction,\n  id,\n  isDisabled,\n  isDropdownButton,\n  isFlipEnabled,\n  isInline,\n  isToggleText,\n  maxHeight,\n  name,\n  onSelect,\n  onSplitButton,\n  options: baseOptions,\n  placeholder,\n  position,\n  selectedOptions,\n  splitButtonVariant,\n  toggleIcon,\n  variant,\n  ...props\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [options, setOptions] = useState(baseOptions);\n  const [selected, setSelected] = useState([]);\n  const selectField = useRef();\n\n  useShallowCompareEffect(() => {\n    const { options: updatedOptions, selected: updatedSelected } = formatOptions({\n      selectField,\n      options: baseOptions,\n      selectedOptions,\n      variant,\n      ...props\n    });\n\n    setOptions(updatedOptions);\n    setSelected(updatedSelected);\n  }, [baseOptions, props, selectField, selectedOptions, variant]);\n\n  /**\n   * Open/closed state.\n   *\n   * @event onToggle\n   * @param {boolean} expanded\n   */\n  const onToggle = expanded => {\n    setIsExpanded(expanded);\n  };\n\n  /**\n   * Split button event handler.\n   *\n   * @event onSplitButton\n   * @param {object} event\n   */\n  const onUpdatedSplitButton = event => {\n    const updatedOptions = _cloneDeep(options);\n    onSplitButton({ ...createMockEvent(event), options: updatedOptions }, -1, updatedOptions);\n  };\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onDropdownSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  const onDropdownSelect = (event, titleSelection) => {\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(\n      option =>\n        (titleSelection && option.title === titleSelection) ||\n        event.currentTarget.querySelector('[data-title]')?.getAttribute('data-title') === option.title ||\n        event.currentTarget.innerText === option.title\n    );\n\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n    const mockTarget = {\n      id,\n      name: name || id,\n      value: mockUpdatedOptions[optionsIndex].value,\n      selected: (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n      selectedIndex: optionsIndex,\n      type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n      options: mockUpdatedOptions\n    };\n\n    if (variant === SelectVariant.checkbox) {\n      mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n    }\n\n    const mockEvent = {\n      ...mockTarget,\n      target: { ...mockTarget },\n      currentTarget: { ...mockTarget },\n      persist: helpers.noop\n    };\n\n    setOptions(updatedOptions);\n    setSelected(updateSelected);\n\n    onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n    if (variant === SelectVariant.single) {\n      setIsExpanded(false);\n    }\n  };\n\n  /**\n   * Apply dropdown.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderDropdownButton = () => (\n    <Dropdown\n      direction={direction}\n      isFlipEnabled={isFlipEnabled}\n      isOpen={isExpanded}\n      position={position}\n      toggle={\n        <DropdownToggle\n          onToggle={onToggle}\n          {...formatButtonProps({\n            isDisabled,\n            onSplitButton: onUpdatedSplitButton,\n            options,\n            buttonVariant,\n            splitButtonCopy: placeholder || ariaLabel,\n            splitButtonVariant\n          })}\n        >\n          {(!splitButtonVariant && placeholder) || (!SplitButtonVariant && ariaLabel)}\n        </DropdownToggle>\n      }\n      dropdownItems={\n        options?.map(option => (\n          <DropdownItem\n            onClick={onDropdownSelect}\n            key={window.btoa(`${option.title}-${option.value}`)}\n            id={window.btoa(`${option.title}-${option.value}`)}\n            data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n            data-title={option.title}\n            data-description={option.description}\n            description={option.description}\n          >\n            {option.title}\n          </DropdownItem>\n        )) || []\n      }\n      {...formatButtonParentProps({ buttonVariant })}\n      {...props}\n    />\n  );\n\n  /**\n   * Apply select.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderSelect = () => (\n    <PfSelect\n      className={`curiosity-select-pf${(!isToggleText && '__no-toggle-text') || ''} ${\n        (direction === SelectDirection.down && 'curiosity-select-pf__position-down') || ''\n      } ${(position === SelectPosition.right && 'curiosity-select-pf__position-right') || ''} ${className}`}\n      variant={variant}\n      aria-label={ariaLabel}\n      onToggle={onToggle}\n      onSelect={onDropdownSelect}\n      selections={selected}\n      isFlipEnabled={isFlipEnabled}\n      isOpen={isExpanded}\n      toggleIcon={toggleIcon}\n      placeholderText={(typeof placeholder === 'string' && placeholder) || undefined}\n      {...{\n        direction,\n        maxHeight,\n        ...formatSelectProps({\n          isDisabled,\n          options: baseOptions,\n          placeholder\n        })\n      }}\n      {...props}\n    >\n      {options?.map(option => (\n        <PfSelectOption\n          key={window.btoa(`${option.title}-${option.value}`)}\n          id={window.btoa(`${option.title}-${option.value}`)}\n          value={option.title}\n          data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n          data-title={option.title}\n          data-description={option.description}\n        />\n      )) || []}\n    </PfSelect>\n  );\n\n  return (\n    <div\n      ref={selectField}\n      className={`curiosity-select${(isInline && ' curiosity-select__inline') || ' curiosity-select__not-inline'}`}\n    >\n      {(isDropdownButton && renderDropdownButton()) || renderSelect()}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{isFlipEnabled: boolean, toggleIcon: (React.ReactNode|Function), className: string, onSplitButton: Function, ariaLabel: string,\n *     onSelect: Function, isToggleText: boolean, isDropdownButton: boolean, maxHeight: number, buttonVariant: string, name: string,\n *     options: Array|object, selectedOptions: Array|number|string, variant: string, isInline: boolean, id: string, isDisabled: boolean,\n *     placeholder: string, position: string, splitButtonVariant: string, direction: string}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  buttonVariant: PropTypes.oneOf(Object.values(ButtonVariant)),\n  className: PropTypes.string,\n  direction: PropTypes.oneOf(Object.values(SelectDirection)),\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isDropdownButton: PropTypes.bool,\n  isFlipEnabled: PropTypes.bool,\n  isInline: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  maxHeight: PropTypes.number,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  onSplitButton: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        description: PropTypes.any,\n        selected: PropTypes.bool,\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired\n      })\n    ),\n    PropTypes.shape({\n      description: PropTypes.any,\n      selected: PropTypes.bool,\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.any]),\n  position: PropTypes.oneOf(Object.values(SelectPosition)),\n  selectedOptions: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]))\n  ]),\n  splitButtonVariant: PropTypes.oneOf(Object.values(SplitButtonVariant)),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{isFlipEnabled: boolean, toggleIcon: null, className: string, onSplitButton: Function, ariaLabel: string, onSelect: Function,\n *     isToggleText: boolean, isDropdownButton: boolean, maxHeight: null, buttonVariant: string, name: null, options: *[],\n *     selectedOptions: null, variant: SelectVariant.single, isInline: boolean, id: string, isDisabled: boolean, placeholder: string,\n *     position: string, splitButtonVariant: null, direction: string}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  buttonVariant: ButtonVariant.default,\n  className: '',\n  direction: SelectDirection.down,\n  id: helpers.generateId(),\n  isDisabled: false,\n  isDropdownButton: false,\n  isFlipEnabled: false,\n  isInline: true,\n  isToggleText: true,\n  maxHeight: null,\n  name: null,\n  onSelect: helpers.noop,\n  onSplitButton: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  position: SelectPosition.left,\n  selectedOptions: null,\n  splitButtonVariant: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport {\n  Select as default,\n  Select,\n  ButtonVariant,\n  formatOptions,\n  formatButtonProps,\n  formatSelectProps,\n  SelectDirection,\n  SelectPosition,\n  SelectVariant,\n  SelectButtonVariant,\n  SplitButtonVariant\n};\n","import moment from 'moment';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { ChartTypeVariant } from '../chart/chart';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Generate a consistent chart identifier from API.\n *\n * @param {object} params\n * @param {boolean} params.isCapacity\n * @param {string} params.metric\n * @param {string} params.productId\n * @param {object} params.query\n * @returns {string}\n */\nconst generateChartIds = ({ isCapacity, metric, productId, query = {} } = {}) => {\n  const metricCategory = query?.[RHSM_API_QUERY_SET_TYPES.CATEGORY] || undefined;\n  return `${(isCapacity && 'threshold_') || ''}${metric}${(metricCategory && `_${metricCategory}`) || ''}${\n    (productId && `_${productId}`) || ''\n  }`;\n};\n\n/**\n * Is metric associated with a toolbar filter\n *\n * @param {object} params\n * @param {object} params.query\n * @returns {boolean}\n */\nconst generateIsToolbarFilter = ({ query = {} } = {}) => (query?.[RHSM_API_QUERY_SET_TYPES.CATEGORY] && true) || false;\n\n/**\n * Update chart/graph filters with core settings and styling.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.settings\n * @param {string} params.productId\n * @returns {{standaloneFilters: Array, groupedFilters: object}}\n */\nconst generateChartSettings = ({ filters = [], settings: graphCardSettings = {}, productId } = {}) => {\n  const standaloneFiltersSettings = [];\n  const groupedFiltersSettings = [];\n\n  filters.forEach(({ metric, isStandalone = false, actions, ...filterSettings }) => {\n    if (!metric) {\n      return;\n    }\n    const updatedChartType = filterSettings?.chartType || ChartTypeVariant.area;\n    const isThreshold = filterSettings?.chartType === ChartTypeVariant.threshold;\n    const baseFilterSettings = {\n      chartType: updatedChartType,\n      id: generateChartIds({ isCapacity: isThreshold, metric, productId, query: filterSettings?.query }),\n      isStacked: !isThreshold,\n      isStandalone,\n      isThreshold,\n      isCapacity: isThreshold,\n      metric,\n      strokeWidth: 2,\n      isToolbarFilter: generateIsToolbarFilter({ query: filterSettings?.query })\n    };\n\n    if (isThreshold) {\n      baseFilterSettings.stroke = chartColorGreenDark.value;\n      baseFilterSettings.strokeDasharray = '4,3';\n      baseFilterSettings.strokeWidth = 3;\n    }\n\n    if (isStandalone) {\n      standaloneFiltersSettings.push({\n        settings: {\n          padding: {\n            bottom: 75,\n            left: 75,\n            right: 45,\n            top: 45\n          },\n          ...graphCardSettings,\n          actions,\n          isStandalone: true,\n          metric: {\n            ...baseFilterSettings,\n            ...filterSettings\n          },\n          metrics: [\n            {\n              ...baseFilterSettings,\n              ...filterSettings\n            }\n          ]\n        }\n      });\n    } else {\n      groupedFiltersSettings.push({\n        ...baseFilterSettings,\n        ...filterSettings\n      });\n    }\n  });\n\n  const updatedGroupedFiltersSettings =\n    (groupedFiltersSettings.length && {\n      settings: {\n        ...graphCardSettings,\n        isStandalone: false,\n        metric: undefined,\n        metrics: groupedFiltersSettings\n      }\n    }) ||\n    undefined;\n\n  return {\n    standaloneFiltersSettings,\n    groupedFiltersSettings: updatedGroupedFiltersSettings\n  };\n};\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity } = {}) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ callback, date, granularity, tick, previousDate } = {}) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  if (callback) {\n    return callback({ callback, date, granularity, tick, previousDate });\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ callback, tick } = {}) => {\n  if (callback) {\n    return callback({ tick });\n  }\n\n  return helpers\n    .numberDisplay(tick)\n    ?.format({\n      average: true,\n      mantissa: 1,\n      trimMantissa: true,\n      lowPrecision: false\n    })\n    ?.toUpperCase();\n};\n\n/**\n * Generate base chart component props.\n *\n * @param {object} params\n * @param {object} params.settings\n * @param {string} params.granularity\n * @returns {object}\n */\nconst generateExtendedChartSettings = ({ settings, granularity } = {}) => ({\n  ...settings,\n  xAxisLabelIncrement: getChartXAxisLabelIncrement(granularity),\n  xAxisTickFormat: ({ item, previousItem, tick }) =>\n    xAxisTickFormat({\n      callback: settings?.xAxisTickFormat,\n      tick,\n      date: item.date,\n      previousDate: previousItem.date,\n      granularity\n    }),\n  yAxisTickFormat: ({ tick }) =>\n    yAxisTickFormat({\n      callback: settings?.yAxisTickFormat,\n      tick\n    })\n});\n\nconst graphCardHelpers = {\n  generateChartIds,\n  generateChartSettings,\n  generateExtendedChartSettings,\n  generateIsToolbarFilter,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  generateChartIds,\n  generateChartSettings,\n  generateExtendedChartSettings,\n  generateIsToolbarFilter,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\nimport { useMount } from 'react-use';\nimport { helpers } from '../../common/helpers';\nimport { EMPTY_CONTEXT, translate, translateComponent } from './i18nHelpers';\n\n/**\n * Load I18n.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.fallbackLng\n * @param {string} props.loadPath\n * @param {string} props.locale\n * @returns {React.ReactNode}\n */\nconst I18n = ({ children, fallbackLng, loadPath, locale }) => {\n  const [initialized, setInitialized] = useState(false);\n\n  /**\n   * Initialize i18next\n   */\n  useMount(async () => {\n    console.log('>>> mount i18n');\n    if (!initialized) {\n      try {\n        await i18next\n          .use(XHR)\n          .use(initReactI18next)\n          .init({\n            backend: {\n              loadPath\n            },\n            fallbackLng,\n            lng: undefined,\n            debug: !helpers.PROD_MODE,\n            ns: ['default'],\n            defaultNS: 'default',\n            react: {\n              useSuspense: false\n            }\n          });\n      } catch (e) {\n        //\n      }\n\n      setInitialized(true);\n    }\n  });\n\n  /**\n   * Update locale.\n   */\n  useEffect(() => {\n    if (initialized && locale) {\n      try {\n        i18next.changeLanguage(locale);\n      } catch (e) {\n        //\n      }\n    }\n  }, [initialized, locale]);\n\n  return (initialized && children) || <React.Fragment />;\n};\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: React.ReactNode, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent, EMPTY_CONTEXT };\n","import React from 'react';\nimport i18next from 'i18next';\nimport { Trans } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Check to help provide an empty context.\n *\n * @type {string}\n */\nconst EMPTY_CONTEXT = 'LOCALE_EMPTY_CONTEXT';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string|Array} translateKey A key reference, or an array of a primary key with fallback keys.\n * @param {string|object|Array} values A default string if the key can't be found. An object with i18next settings. Or an array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @param {object} options\n * @param {string} options.emptyContextValue Check to allow an empty context value.\n * @returns {string|React.ReactNode}\n */\nconst translate = (translateKey, values = null, components, { emptyContextValue = EMPTY_CONTEXT } = {}) => {\n  const updatedValues = values || {};\n  let updatedTranslateKey = translateKey;\n  const splitContext = value => {\n    if (typeof value === 'string' && value !== emptyContextValue && /_/.test(value)) {\n      return value.split('_');\n    }\n    return value;\n  };\n\n  if (Array.isArray(updatedTranslateKey)) {\n    updatedTranslateKey = updatedTranslateKey.filter(value => typeof value === 'string' && value.length > 0);\n  }\n\n  if (updatedValues?.context) {\n    updatedValues.context = splitContext(updatedValues.context);\n  }\n\n  if (Array.isArray(updatedValues?.context)) {\n    const updatedContext = updatedValues.context\n      .map(value => (value === emptyContextValue && ' ') || splitContext(value))\n      .flat()\n      .filter(value => typeof value === 'string' && value.length > 0);\n\n    if (updatedContext?.length > 1) {\n      const lastContext = updatedContext.pop();\n\n      if (Array.isArray(updatedTranslateKey)) {\n        updatedTranslateKey[0] = `${updatedTranslateKey[0]}_${updatedContext.join('_')}`;\n      } else {\n        updatedTranslateKey = `${updatedTranslateKey}_${updatedContext.join('_')}`;\n      }\n\n      updatedValues.context = lastContext;\n    } else {\n      updatedValues.context = updatedContext.join('_');\n    }\n  } else if (updatedValues?.context === emptyContextValue) {\n    updatedValues.context = ' ';\n  }\n\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(updatedTranslateKey, updatedValues, components);\n  }\n\n  if (components) {\n    return (\n      (i18next.store && <Trans i18nKey={updatedTranslateKey} values={updatedValues} components={components} />) || (\n        <React.Fragment>t({updatedTranslateKey})</React.Fragment>\n      )\n    );\n  }\n\n  return (i18next.store && i18next.t(updatedTranslateKey, updatedValues)) || `t([${updatedTranslateKey}])`;\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {React.ReactNode} Component\n * @returns {React.ReactNode}\n */\nconst translateComponent = Component => {\n  const withTranslation = ({ ...props }) => (\n    <Component\n      {...props}\n      t={(i18next.store && translate) || helpers.noopTranslate}\n      i18n={(i18next.store && i18next) || helpers.noop}\n    />\n  );\n\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\nconst i18nHelpers = {\n  EMPTY_CONTEXT,\n  translate,\n  translateComponent\n};\n\nexport { i18nHelpers as default, i18nHelpers, EMPTY_CONTEXT, translate, translateComponent };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    colWidth: PropTypes.array,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader, SkeletonSize };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {Node|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {Node}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, icon: Node|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Brand,\n  Button,\n  Card,\n  CardHeaderMain,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Flex,\n  FlexItem,\n  Form,\n  ActionGroup,\n  Spinner,\n  Title\n} from '@patternfly/react-core';\nimport { useSession } from '../authentication/authenticationContext';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { PageLayout } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport graphPng2x from '../../images/graph2x.png';\nimport graphPng4x from '../../images/graph4x.png';\n\n/**\n * An account opt-in view.\n *\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.updateAccountOptIn\n * @param {Function} props.useDispatch\n * @param {Function} props.useSelectorsResponse\n * @param {Function} props.useSession\n * @fires onSubmitOptIn\n * @returns {Node}\n */\nconst OptinView = ({\n  t,\n  updateAccountOptIn,\n  useDispatch: useAliasDispatch,\n  useSelectorsResponse: useAliasSelectorsResponse,\n  useSession: useAliasSession\n}) => {\n  const dispatch = useAliasDispatch();\n  const { errorStatus } = useAliasSession();\n  const { error, fulfilled, pending } = useAliasSelectorsResponse(({ user }) => user?.optin);\n\n  /**\n   * Submit and update account opt-in.\n   *\n   * @event onSubmitOptIn\n   * @returns {void}\n   */\n  const onSubmitOptIn = () => updateAccountOptIn()(dispatch);\n\n  /**\n   * Render opt-in form states.\n   *\n   * @returns {Node}\n   */\n  const renderOptinForm = () => {\n    const disableButton = errorStatus !== 403;\n\n    if (pending) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              <Spinner size=\"sm\" /> {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n        </Form>\n      );\n    }\n\n    if (error) {\n      return (\n        <p>\n          {t('curiosity-optin.cardIsErrorDescription', { appName: helpers.UI_DISPLAY_NAME }, [\n            <Button isInline component=\"a\" variant=\"link\" target=\"_blank\" href={helpers.UI_LINK_CONTACT_US} />\n          ])}\n        </p>\n      );\n    }\n\n    if (disableButton || fulfilled) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button data-test=\"optinButtonSubmitDisabled\" variant=\"primary\" isDisabled>\n              {t('curiosity-optin.buttonIsActive', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n          {fulfilled && <p>{t('curiosity-optin.cardIsActiveDescription')}</p>}\n        </Form>\n      );\n    }\n\n    return (\n      <Form>\n        <ActionGroup>\n          <Button data-test=\"optinButtonSubmit\" variant=\"primary\" onClick={onSubmitOptIn}>\n            {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n          </Button>\n        </ActionGroup>\n      </Form>\n    );\n  };\n\n  /**\n   * Render tour copy and button.\n   *\n   * @returns {Node}\n   */\n  const renderTour = () => (\n    <Card className=\"curiosity-optin-tour\">\n      <CardHeader>\n        <CardHeaderMain>\n          <Brand\n            srcSet={`${graphPng4x} 1064w, ${graphPng2x} 600w`}\n            src={graphPng4x}\n            alt={t('curiosity-optin.tourTitleImageAlt')}\n            aria-hidden\n            className=\"curiosity-optin-image\"\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <CardTitle>\n        <Title headingLevel=\"h3\" size=\"2xl\">\n          {t('curiosity-optin.tourTitle')}\n        </Title>\n      </CardTitle>\n      <CardBody>{t('curiosity-optin.tourDescription')}</CardBody>\n      <CardFooter>\n        <Button data-test=\"optinButtonTour\" variant=\"secondary\" className=\"uxui-curiosity__button-tour\">\n          {t('curiosity-optin.buttonTour')}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n\n  return (\n    <PageLayout>\n      <Card data-test=\"optinView\">\n        <Flex>\n          <Flex flex={{ default: 'flex_2' }}>\n            <FlexItem>\n              <CardTitle key=\"heading1Title\">\n                <Title headingLevel=\"h1\" size=\"2xl\">\n                  {t('curiosity-optin.cardTitle', { appName: helpers.UI_DISPLAY_NAME })}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading1Desc\">\n                {t('curiosity-optin.cardDescription', { appName: helpers.UI_DISPLAY_NAME })}\n              </CardBody>\n\n              <CardTitle key=\"heading2Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardSeeTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading2Desc\">{t('curiosity-optin.cardSeeDescription')}</CardBody>\n\n              <CardTitle key=\"heading3Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardReportTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading3Desc\">{t('curiosity-optin.cardReportDescription')}</CardBody>\n\n              <CardTitle key=\"heading4Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardFilterTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading4Desc\">{t('curiosity-optin.cardFilterDescription')}</CardBody>\n\n              <CardFooter>{renderOptinForm()}</CardFooter>\n            </FlexItem>\n          </Flex>\n          <Flex flex={{ default: 'flex_1' }} alignSelf={{ default: 'alignSelfCenter' }}>\n            <FlexItem>\n              <CardBody>{renderTour()}</CardBody>\n            </FlexItem>\n          </Flex>\n        </Flex>\n      </Card>\n    </PageLayout>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useSession: Function, t: Function, updateAccountOptIn: Function, useDispatch: Function, useSelectorsResponse: Function}}\n */\nOptinView.propTypes = {\n  t: PropTypes.func,\n  updateAccountOptIn: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelectorsResponse: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useSession: Function, t: Function, updateAccountOptIn: Function, useDispatch: Function, useSelectorsResponse: Function}}\n */\nOptinView.defaultProps = {\n  t: translate,\n  updateAccountOptIn: reduxActions.user.updateAccountOptIn,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelectorsResponse: storeHooks.reactRedux.useSelectorsResponse,\n  useSession\n};\n\nexport { OptinView as default, OptinView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { helpers } from '../../common';\n\n/**\n * Render page columns based on children.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageColumns = ({ children, className }) => (\n  <Flex\n    alignItems={{ sm: 'alignItemsStretch' }}\n    spaceItems={{ sm: 'spaceItemsNone' }}\n    className={`curiosity-page-columns ${className}`}\n  >\n    {React.Children.toArray(children)\n      .filter(child => React.isValidElement(child))\n      .map(child => (\n        <FlexItem\n          key={(child.key && `page-column-${child.key}`) || helpers.generateId()}\n          grow={{ sm: 'grow' }}\n          className=\"curiosity-page-columns-column\"\n        >\n          {child}\n        </FlexItem>\n      ))}\n  </Flex>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageColumns.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageColumns.defaultProps = {\n  className: ''\n};\n\nexport { PageColumns as default, PageColumns };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader as RcsPageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst PageHeader = ({ children, productLabel, t }) => (\n  <RcsPageHeader>\n    <Flex justifyContent={{ sm: 'justifyContentSpaceBetween' }}>\n      <FlexItem>\n        <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n      </FlexItem>\n    </Flex>\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, productLabel: string, t: Function}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{includeTour: boolean, productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageColumns } from './pageColumns';\nimport { PageMessages } from './pageMessages';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageLayout = ({ children, className }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageMessages)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className={`curiosity ${className}`}>\n      {React.Children.toArray(children).filter(\n        child => child.type !== PageHeader && child.type !== PageMessages && child.type !== PageToolbar\n      )}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageLayout.defaultProps = {\n  className: ''\n};\n\nexport { PageLayout as default, PageLayout, PageColumns, PageHeader, PageMessages, PageSection, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageMessages = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-messages ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageMessages.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageMessages.defaultProps = {\n  className: ''\n};\n\nexport { PageMessages as default, PageMessages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageSection = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-section ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageSection.defaultProps = {\n  className: ''\n};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageToolbar = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-toolbar ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageToolbar.defaultProps = {\n  className: ''\n};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Navigate, Routes, Route } from 'react-router-dom';\nimport { useSetRouteDetail } from './routerContext';\nimport { routerHelpers } from './routerHelpers';\nimport { Loader } from '../loader/loader';\n\n/**\n * Create and load routes. Start cycle for loading product configuration via hook by setting route details.\n *\n * @param {object} props\n * @param {object} props.redirectRoute\n * @param {Array} props.routes\n * @param {Function} props.useSetRouteDetail\n * @returns {React.ReactNode}\n */\nconst Router = ({ redirectRoute, routes, useSetRouteDetail: useAliasSetRouteDetail } = {}) => {\n  useAliasSetRouteDetail();\n\n  const updatedRoutes = routes.map(item => {\n    const View = routerHelpers.importView(item.component);\n    return <Route key={item.path} path={item.path} element={<View />} />;\n  });\n\n  return (\n    <React.Suspense fallback={<Loader variant=\"title\" />}>\n      <Routes>\n        {updatedRoutes}\n        {redirectRoute?.path && redirectRoute?.redirect && (\n          <Route key=\"redirect\" path={redirectRoute.path} element={<Navigate replace to={redirectRoute.redirect} />} />\n        )}\n      </Routes>\n    </React.Suspense>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{routes: Array, redirectRoute: object, useSetRouteDetail: Function}}\n */\nRouter.propTypes = {\n  redirectRoute: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirect: PropTypes.string.isRequired\n  }),\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      component: PropTypes.string.isRequired,\n      disabled: PropTypes.bool,\n      path: PropTypes.string.isRequired\n    })\n  ),\n  useSetRouteDetail: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array, redirectRoute: object, useSetRouteDetail: Function}}\n */\nRouter.defaultProps = {\n  redirectRoute: routerHelpers.redirectRoute,\n  routes: routerHelpers.routes,\n  useSetRouteDetail\n};\n\nexport { Router as default, Router };\n","import { useCallback, useEffect, useState } from 'react';\nimport {\n  useLocation as useLocationRRD,\n  useNavigate as useRRDNavigate,\n  useSearchParams as useRRDSearchParams\n} from 'react-router-dom';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common/helpers';\nimport { storeHooks, reduxTypes } from '../../redux';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Combine react-router-dom useLocation with actual window location.\n * Focused on exposing replace and href.\n *\n * @param {object} options\n * @param {Function} options.useLocation\n * @param {*} options.windowLocation\n * @returns {{_id, search, hash}}\n */\nconst useLocation = ({\n  useLocation: useAliasLocation = useLocationRRD,\n  windowLocation: aliasWindowLocation = window.location\n} = {}) => {\n  const location = useAliasLocation();\n  const windowLocation = aliasWindowLocation;\n  const [updatedLocation, setUpdatedLocation] = useState({});\n\n  useEffect(() => {\n    const _id = helpers.generateHash(windowLocation);\n    if (updatedLocation?._id !== _id) {\n      setUpdatedLocation({\n        ...location,\n        ...windowLocation,\n        _id,\n        hash: location?.hash || '',\n        search: location?.search || ''\n      });\n    }\n  }, [location, updatedLocation?._id, windowLocation]);\n\n  return updatedLocation;\n};\n\n/**\n * useNavigate wrapper, apply application config context routing\n *\n * @param {object} options\n * @param {Function} options.useLocation\n * @param {Function} options.useNavigate\n * @returns {Function}\n */\nconst useNavigate = ({\n  useLocation: useAliasLocation = useLocation,\n  useNavigate: useAliasNavigate = useRRDNavigate\n} = {}) => {\n  const { search = '', hash = '' } = useAliasLocation();\n  const navigate = useAliasNavigate();\n  console.log('>>>>>> useNavigate SETUP', search, hash, navigate);\n\n  return useCallback(\n    (pathLocation, options) => {\n      const pathName = (typeof pathLocation === 'string' && pathLocation) || pathLocation?.pathname;\n      const { firstMatch } = routerHelpers.getRouteConfigByPath({ pathName });\n\n      console.log('>>>>>> useNavigate 001', pathLocation);\n      console.log(\n        '>>>>>> useNavigate 002',\n        firstMatch?.productPath,\n        routerHelpers.pathJoin('.', firstMatch?.productPath),\n        (firstMatch?.productPath && `${routerHelpers.pathJoin('.', firstMatch?.productPath)}${search}${hash}`) ||\n          undefined\n      );\n      console.log('>>>>>> useNavigate 003', (pathName && `${pathName}${search}${hash}`) || undefined);\n      // console.log('>>>>>> useNavigate', firstMatch);\n\n      return navigate(\n        (firstMatch?.productPath && `${routerHelpers.pathJoin('.', firstMatch?.productPath)}${search}${hash}`) ||\n          (pathName && `${pathName}${search}${hash}`) ||\n          pathLocation,\n        options\n      );\n    },\n    [hash, navigate, search]\n  );\n};\n\n/**\n * Get a route detail configuration from state.\n *\n * @param {object} options\n * @param {Function} options.t\n * @param {Function} options.useChrome\n * @param {Function} options.useSelector\n * @returns {{baseName: string, errorRoute: object}}\n */\nconst useRouteDetail = ({\n  t = translate,\n  useChrome: useAliasChrome = useChrome,\n  useSelector: useAliasSelector = storeHooks.reactRedux.useSelectors\n} = {}) => {\n  const { updateDocumentTitle = helpers.noop } = useAliasChrome();\n  const [productPath] = useAliasSelector([({ view }) => view?.product?.config]);\n  const [detail, setDetail] = useState({});\n  console.log('>>> use route detail', productPath);\n\n  useEffect(() => {\n    console.log('>>> ATTEMPT TO SET ROUTE DETAIL', productPath);\n    console.log('>>> ATTEMPT TO SET ROUTE DETAIL', detail?._passed !== productPath, detail?._passed, productPath);\n    if (productPath && detail?._passed !== productPath) {\n      const { allConfigs, configs, firstMatch, isClosest } = routerHelpers.getRouteConfigByPath({\n        pathName: productPath\n      });\n      console.log('>>> SET ROUTE DETAIL', firstMatch?.productGroup, detail?._passed, productPath);\n\n      // Set document title\n      updateDocumentTitle(\n        `${helpers.UI_DISPLAY_NAME}: ${t(`curiosity-view.title`, {\n          appName: helpers.UI_DISPLAY_NAME,\n          context: firstMatch?.productGroup\n        })}`\n      );\n      // Set route detail\n      setDetail({\n        _passed: productPath,\n        allConfigs,\n        firstMatch,\n        errorRoute: routerHelpers.errorRoute,\n        isClosest,\n        productGroup: firstMatch?.productGroup,\n        productConfig: (configs?.length && configs) || [],\n        productPath\n      });\n    }\n  }, [detail?._passed, productPath, t, updateDocumentTitle]);\n\n  return detail;\n};\n\n/**\n * Search parameter, return\n *\n * @param {object} options\n * @param {Function} options.useLocation\n * @param {Function} options.useSearchParams\n * @returns {Array}\n */\nconst useSearchParams = ({\n  useSearchParams: useAliasSearchParams = useRRDSearchParams,\n  useLocation: useAliasLocation = useLocation\n} = {}) => {\n  const { search } = useAliasLocation();\n  const [, setAliasSearchParams] = useAliasSearchParams();\n\n  /**\n   * Alias returned React Router Dom useSearchParams hook to something expected.\n   * This hook defaults to merging search objects instead of overwriting them.\n   *\n   * @param {object} updatedQuery\n   * @param {object} options\n   * @param {boolean} options.isMerged Merge search with existing search, or don't\n   * @param {string|*} options.currentSearch search returned from useLocation\n   */\n  const setSearchParams = useCallback(\n    (updatedQuery, { isMerged = true, currentSearch = search } = {}) => {\n      let updatedSearch = {};\n\n      if (isMerged) {\n        Object.assign(updatedSearch, routerHelpers.parseSearchParams(currentSearch), updatedQuery);\n      } else {\n        updatedSearch = updatedQuery;\n      }\n\n      setAliasSearchParams(updatedSearch);\n      // return updatedSearch;\n    },\n    [search, setAliasSearchParams]\n  );\n\n  return [routerHelpers.parseSearchParams(search), setSearchParams];\n};\n\n/**\n * Store product path, parameter, in state. We're opting to use \"window.location.pathname\"\n * directly since it appears to be quicker, and returns a similar structured value as useParam.\n *\n * @param {object} options\n * @param {Function} options.useSelector\n * @param {Function} options.useDispatch\n * @returns {*|string}\n */\nconst useSetRouteDetail = ({\n  useSelector: useAliasSelector = storeHooks.reactRedux.useSelectors,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  windowLocation: aliasWindowLocation = window.location\n} = {}) => {\n  const dispatch = useAliasDispatch();\n  const [updatedPath] = useAliasSelector([({ view }) => view?.product?.config]);\n  const { pathname: productPath } = aliasWindowLocation;\n\n  useEffect(() => {\n    if (productPath && updatedPath !== productPath) {\n      dispatch({\n        type: reduxTypes.app.SET_PRODUCT,\n        config: productPath\n      });\n    }\n  }, [updatedPath, dispatch, productPath]);\n\n  return updatedPath;\n};\n\nconst context = {\n  useLocation,\n  useNavigate,\n  useRouteDetail,\n  useSearchParams,\n  useSetRouteDetail\n};\n\nexport { context as default, context, useLocation, useNavigate, useRouteDetail, useSearchParams, useSetRouteDetail };\n","import React from 'react';\nimport { closest } from 'fastest-levenshtein';\nimport { helpers } from '../../common/helpers';\nimport { routesConfig, productConfig } from '../../config';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * The app baseName. Return an assumed route baseName directory based on existing app name.\n * App name is defined in dotenv and package.json/insights.appname\n * [environment]/[OPTIONAL]/[OPTIONAL]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  `${pathName.split(applicationName)[0]}${applicationName}`;\n\n/**\n * App basePath. Return a base path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBasePath = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  pathName.split(applicationName)[0];\n\n/**\n * The first redirect route.\n *\n * @type {object}\n */\nconst redirectRoute = routesConfig.find(({ disabled, redirect }) => !disabled && redirect);\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = routesConfig.filter(item => !item.disabled);\n\n/**\n * Match pre-sorted route config entries with a path, or match with a fallback.\n * This is the primary engine for curiosity routing. It can account for a full window.location.pathname\n * given the appropriate alias, group, product, and/or path identifiers provided with product configuration.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {Array} params.config\n * @param {boolean} params.isFailureAcceptable\n * @returns {{configs: Array, configFirstMatch: object, configsById: object}}\n */\nconst getRouteConfigByPath = helpers.memo(({ pathName, configs = productConfig.sortedConfigs } = {}) => {\n  const { byGroup, byAliasGroupProductPathIds, byProductIdConfigs } = configs();\n  const updatedPathName = (/^http/i.test(pathName) && new URL(pathName).pathname) || pathName;\n  const trimmedPathName = updatedPathName\n    ?.toLowerCase()\n    ?.split('#')?.[0]\n    ?.split('?')?.[0]\n    ?.replace(/^\\/*|\\/*$/g, '')\n    ?.replace(new RegExp(helpers.UI_DISPLAY_NAME, 'i'), '')\n    ?.replace(/\\/\\//g, '/');\n\n  // Do a known comparison against alias, group, product, path identifiers\n  const focusedStr = byAliasGroupProductPathIds.find(\n    value => value.toLowerCase() === trimmedPathName?.split('/')?.pop()\n  );\n\n  // Fallback attempt, match pathName with the closest string\n  const closestStr = trimmedPathName && closest(trimmedPathName, byAliasGroupProductPathIds);\n  const configsByGroup = byGroup?.[focusedStr || closestStr];\n\n  return {\n    isClosest: !focusedStr,\n    allConfigs: Object.values(byProductIdConfigs),\n    configs: configsByGroup,\n    firstMatch: configsByGroup?.[0]\n  };\n});\n\n/**\n * Import a route component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst importView = component => {\n  if (!helpers.TEST_MODE) {\n    return React.lazy(() => import(/* webpackExclude: /\\.test\\.js$/ */ `../${component}.js`));\n  }\n\n  return p => <React.Fragment>{JSON.stringify({ ...p, component }, null, 2)}</React.Fragment>;\n};\n\n/**\n * Parse search parameters from a string, using a set for \"uniqueness\"\n *\n * @param {string} currentPathAndOrSearch\n * @returns {{}}\n */\nconst parseSearchParams = helpers.memo((currentPathAndOrSearch = window.location.search) => {\n  const { decodeURIComponent, URLSearchParams } = window;\n  const parsedSearch = {};\n\n  [\n    ...new Set(\n      [...new URLSearchParams(decodeURIComponent(currentPathAndOrSearch))].map(([param, value]) => `${param}~${value}`)\n    )\n  ].forEach(v => {\n    const [param, value] = v.split('~');\n    parsedSearch[param] = value;\n  });\n\n  return parsedSearch;\n});\n\n/**\n * Basic path join, minor emulation for path.join. Related to the webpack 5 migration.\n *\n * @param {object} paths\n * @returns {string}\n */\nconst pathJoin = helpers.memo((...paths) => {\n  let updatedPath = Array.from(paths);\n  const hasLead = /^\\/\\//.test(updatedPath[0]);\n  updatedPath = updatedPath\n    .join('/')\n    .replace(/(\\/\\/)+/g, '~')\n    .replace(/~/g, '/')\n    .replace(/\\/\\//g, '/');\n\n  if (hasLead) {\n    updatedPath = `/${updatedPath}`;\n  }\n\n  return updatedPath;\n});\n\nconst routerHelpers = {\n  appName,\n  dynamicBaseName,\n  dynamicBasePath,\n  redirectRoute,\n  getRouteConfigByPath,\n  importView,\n  parseSearchParams,\n  pathJoin,\n  routes\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  appName,\n  dynamicBaseName,\n  dynamicBasePath,\n  redirectRoute,\n  getRouteConfigByPath,\n  importView,\n  parseSearchParams,\n  pathJoin,\n  routes\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  Table as PfTable,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * FixMe: PF tables uses sequentially ordered lists/arrays to denote expandable sections\n * Ideal solution is to nest expandable sections within their respective parents. There\n * are scenarios where manipulating a sequentially ordered list/array can, and will,\n * lead to unintended results. And forces an equal, if not greater, amount of effort on\n * state tracking in the consuming GUI/app. Compounding the issue, the index is used/returned\n * during events for a particular row being \"expanded\". This ends up making after-the-fact\n * application of the expandable list/array items problematic since said index is\n * constantly updating/shifting as rows are dynamically added. Add in a \"not every row\n * needs to be expandable\" scenario, you can start to see the issues. All of that\n * effort means that in some cases it may actually be quicker to simply use PF styles and\n * a HTML table directly, bypassing PF-React entirely.\n *\n * Applying a React node as content in the sequentially ordered list/array appears to\n * automatically \"mount\" said node. How this handles in child components where subsequent\n * AJAX/XHR calls are called means you are potentially hitting an API with dozens of calls,\n * row dependent, even when a user may not expand the nested row/child. This could easily\n * be resolved by nesting and applying the expandable contents after-the-fact.\n */\n/**\n * FixMe: PF tables misalignment of the column headers list/array and row cells breaks the component\n * The related PF error for this is cryptic. An immediate solution would be to simply fix the error\n * messaging, or do a length check before consuming the lists/arrays. This happens when a consumer\n * places more or less column header cells than row cells.\n */\n/**\n * FixMe: PF tables break when an empty list/array is used for the column headers\n * This appears related to the mismatched column header and row cells. The solution is to simply not\n * render the header row instead of throwing an error. This is similar to how the empty rows\n * list/array is handled.\n */\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n * @fires onSort\n */\nclass Table extends React.Component {\n  state = {\n    isCollapsible: false,\n    isSortable: false,\n    sortBy: {},\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (\n      !_isEqualWith(prevProps.rows, rows, customizer) ||\n      !_isEqualWith(prevProps.columnHeaders, columnHeaders, customizer)\n    ) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * FixMe: PF table sort callback doesn't use a zero based index when expandable?\n   * Educated guess there's a cell count happening instead of \"[you have this many data/entry cells]\"\n   * This is really confusing to implement in a consuming application, especially on first\n   * implementation. Special \"collapsible index\" logic had to be implemented to compensate for this\n   * odd behavior.\n   */\n  /**\n   * On column sort\n   *\n   * @event onSort\n   * @param {object} params\n   * @param {number} params.index\n   * @param {string} params.direction\n   * @param {object} params.data\n   */\n  onSort = ({ index, direction, data = {} }) => {\n    const { isCollapsible, updatedColumnHeaders, updatedRows } = this.state;\n    const updatedIndex = isCollapsible ? index - 1 : index;\n\n    updatedRows.forEach(async ({ isOpen }, i) => {\n      if (isOpen === true) {\n        await this.onCollapse({ index: i, isOpen: false });\n      }\n    });\n\n    this.setState(\n      {\n        sortBy: {\n          index,\n          direction\n        }\n      },\n      () =>\n        updatedColumnHeaders[updatedIndex].onSort({\n          direction,\n          index: updatedIndex,\n          label: data?.column?.header?.label\n        })\n    );\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n    const updatedSort = {};\n    let isCollapsible = false;\n    let isSortable = false;\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        isCollapsible = true;\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell?.title !== undefined) {\n          const { title, ...settings } = cell;\n          rowObj.cells.push({ title, ...settings });\n        } else {\n          rowObj.cells.push({\n            title: (React.isValidElement(cell) && cell) || (typeof cell === 'object' && `${cell}`) || cell\n          });\n        }\n      });\n    });\n\n    columnHeaders.forEach((columnHeader, index) => {\n      if (columnHeader?.title !== undefined) {\n        const { onSort, sortActive, sortDirection, title, ...settings } = columnHeader;\n        const tempColumnHeader = {\n          title,\n          ...settings\n        };\n\n        if (onSort) {\n          isSortable = true;\n          tempColumnHeader.transforms = [...(tempColumnHeader?.transforms || []), sortable];\n          tempColumnHeader.onSort = onSort;\n\n          if (sortActive) {\n            updatedSort.sortBy = { index: isCollapsible ? index + 1 : index };\n            updatedSort.sortBy.direction = SortByDirection.asc;\n          }\n\n          if (sortDirection) {\n            updatedSort.sortBy = { ...updatedSort.sortBy, direction: sortDirection };\n          }\n        } else if (tempColumnHeader.transforms) {\n          tempColumnHeader.transforms = tempColumnHeader.transforms.filter(v => v !== sortable);\n        }\n\n        updatedColumnHeaders.push(tempColumnHeader);\n      } else {\n        updatedColumnHeaders.push({\n          title:\n            (React.isValidElement(columnHeader) && columnHeader) ||\n            (typeof columnHeader === 'object' && `${columnHeader}`) ||\n            columnHeader\n        });\n      }\n    });\n\n    this.setState({\n      isCollapsible,\n      isSortable,\n      updatedColumnHeaders,\n      updatedRows,\n      ...updatedSort\n    });\n  }\n\n  /**\n   * FixMe: PF Tables automatically applies an expandable className when using the \"onCollapse\" prop?\n   * Not every row may need to be expandable. In certain scenarios a table may have no expandable\n   * sections, however it appears the \"onCollapse\" styling, and additionally added \"table cells\" are still\n   * applied.\n   */\n  /**\n   * Apply props to table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { isCollapsible, isSortable, sortBy, updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    const pfTableProps = {};\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    if (isCollapsible) {\n      pfTableProps.onCollapse = (event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data });\n    }\n\n    if (isSortable) {\n      pfTableProps.sortBy = sortBy;\n      pfTableProps.onSort = (event, index, direction, data) => this.onSort({ event, index, direction, data });\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n          {...pfTableProps}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: Node,\n *     isHeader: boolean, variant: string, className: string, rows: Array, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        onSort: PropTypes.func,\n        sortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)]),\n        title: PropTypes.node.isRequired\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.instanceOf(Date),\n          PropTypes.shape({\n            title: PropTypes.oneOfType([PropTypes.node, PropTypes.instanceOf(Date)]).isRequired\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {Node|Function} props.icon\n * @param {Node} props.message\n * @param {string} props.tableHeading\n * @param {Node} props.title\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, variant: string, message: Node, title: Node, tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cellWidth, TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {Array} props.colWidth\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableSkeleton = ({ className, borders, colCount, colWidth, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map((value, index) => {\n    const updatedHeader = { title: <Skeleton size={SkeletonSize.md} /> };\n\n    if (typeof colWidth[index] === 'number') {\n      updatedHeader.transforms = [cellWidth(colWidth[index])];\n    }\n\n    return updatedHeader;\n  });\n\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />)\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: string,\n *     className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.arrayOf(PropTypes.number),\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: null,\n *     className: null, rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  colWidth: [],\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip as PfTooltip, TooltipProps, TooltipPosition } from '@patternfly/react-core';\n\n/**\n * PF tooltip wrapper component.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.ReactNode} props.content\n * @param {boolean} props.isNoWrap\n * @param {TooltipProps} props.props\n * @returns {React.ReactNode}\n */\nconst Tooltip = ({ children, content, isNoWrap, ...props }) => (\n  <PfTooltip\n    className={`curiosity-tooltip${(isNoWrap && '__nowrap') || ''}`}\n    content={(React.isValidElement(content) && content) || <p>{content || ''}</p>}\n    {...props}\n  >\n    {(React.isValidElement(children) && children) || <span className=\"curiosity-tooltip-children\">{children}</span>}\n  </PfTooltip>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, content: React.ReactNode}}\n */\nTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n  content: PropTypes.node,\n  distance: PropTypes.number,\n  enableFlip: PropTypes.bool,\n  entryDelay: PropTypes.number,\n  exitDelay: PropTypes.number,\n  isNoWrap: PropTypes.bool,\n  position: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{content: string}}\n */\nTooltip.defaultProps = {\n  content: '...',\n  distance: 5,\n  enableFlip: false,\n  entryDelay: 100,\n  exitDelay: 0,\n  isNoWrap: false,\n  position: TooltipPosition.top\n};\n\nexport { Tooltip as default, Tooltip };\n","import { helpers } from '../common/helpers';\n\n/**\n * IIFE for generating a product configs listing via webpack\n *\n * @type {{aliases: string[], productGroup: string, productId: string, productLabel: string, productDisplay: string, viewId: string,\n *     productArchitectures: string[], productVariants: string[], query: object, graphTallyQuery: object, inventoryHostQuery: object,\n *     inventorySubscriptionsQuery: object, initialGraphFilters: {}[], initialGraphSettings: object, initialGuestsFilters: {}[],\n *     initialInventoryFilters: {}[], initialSubscriptionsInventoryFilters: {}[], initialToolbarFilters: {}[], }[]}\n */\nconst productConfigs = (() => {\n  try {\n    const path = require.context('./', false, /product\\.[\\d\\D]+\\.js$/i);\n    return path.keys().map(path);\n  } catch (e) {\n    /**\n     * Basic configuration for testing only.\n     */\n    if (process.env.REACT_APP_ENV === 'test' && require) {\n      return [\n        ...require('fs') // eslint-disable-line\n          ?.readdirSync('./src/config') // eslint-disable-line\n          ?.filter(file => /product\\.[a-z]+\\.js/i.test(file)) // eslint-disable-line\n          ?.map(file => require(`./${file}`)) // eslint-disable-line\n      ];\n    }\n\n    console.warn(`Product configuration failed to load: ${e.message}`);\n    return [];\n  }\n})()?.map(value => value.config);\n\n/**\n * Sorted/organized/grouped product configs.\n * - byProductPathConfigs, object configurations associated with productPaths\n * - byGroup, object configurations associated with all productGroups, productIds, productPaths, and aliases\n * - byGroupIdConfigs, object of productGroup properties against an array of associated product configs\n * - byViewIds, object of viewId properties against an array of associated productId strings. \"viewId\" was created because of the\n *     overlap with productIds and productGroups, this may be refactored in the future\n * - byProductIds, a unique array of all productId strings\n * - byAlias,object configurations associated with product aliases\n * - byAliasGroupProductPathIds, list of identifiers associated with all productGroups, productIds, productPaths, and aliases\n * - byGroupIds, object of productGroup properties against an array of associated productId strings.\n * - byViewIdConfigs, object of viewId properties against an array of associated product configs\n * - byProductIdConfigs, object of productId properties against a product config\n *\n * @param {productConfigs} configs\n * @returns {{byProductPathConfigs: {}, byGroup: {}, byGroupIdConfigs: {}, byViewIds: {}, byProductIds: any[], byAlias: {}, byAliasGroupProductPathIds: string[], byGroupIds: {}, byViewIdConfigs: {}, byProductIdConfigs: {}}}\n */\nconst sortedProductConfigs = helpers.memo((configs = productConfigs) => {\n  const viewIdConfigs = {};\n  const productAliases = {};\n  const productIds = new Set();\n  const productIdConfigs = {};\n  const productPathConfigs = {};\n  const grouped = {};\n  const groupIdConfigs = {};\n  const groupedGroupIds = {};\n  const groupedViewIds = {};\n\n  configs?.forEach(config => {\n    const {\n      aliases,\n      productArchitectures,\n      productGroup,\n      productId,\n      productLabel,\n      productPath,\n      productVariants,\n      viewId\n    } = config;\n\n    if (productGroup && productId) {\n      grouped[productGroup] ??= {};\n      grouped[productGroup][productId] = config;\n    }\n\n    if (productId) {\n      grouped[productId] ??= {};\n      grouped[productId][productId] = config;\n    }\n\n    if (productLabel && productId) {\n      grouped[productLabel] ??= {};\n      grouped[productLabel][productId] = config;\n    }\n\n    if (productPath && productId) {\n      grouped[productPath] ??= {};\n      grouped[productPath][productId] = config;\n    }\n\n    aliases?.forEach(alias => {\n      if (productId) {\n        grouped[alias] ??= {};\n        grouped[alias][productId] = config;\n      }\n\n      productAliases[alias] ??= [];\n      productAliases[alias].push(config);\n    });\n\n    productArchitectures?.forEach(architecture => {\n      if (productId) {\n        grouped[architecture] ??= {};\n        grouped[architecture][productId] = config;\n      }\n\n      productAliases[architecture] ??= [];\n      productAliases[architecture].push(config);\n    });\n\n    productVariants?.forEach(variant => {\n      if (productId) {\n        grouped[variant] ??= {};\n        grouped[variant][productId] = config;\n      }\n\n      productAliases[variant] ??= [];\n      productAliases[variant].push(config);\n    });\n\n    if (productId) {\n      productIdConfigs[productId] = config;\n      productIds.add(productId);\n    }\n\n    if (productPath) {\n      productPathConfigs[productPath] ??= [];\n      productPathConfigs[productPath].push(config);\n    }\n\n    if (productGroup) {\n      groupIdConfigs[productGroup] ??= [];\n      groupIdConfigs[productGroup].push(config);\n    }\n\n    if (productGroup && productId) {\n      groupedGroupIds[productGroup] ??= [];\n      groupedGroupIds[productGroup].push(productId);\n    }\n\n    if (viewId) {\n      viewIdConfigs[viewId] ??= [];\n      viewIdConfigs[viewId].push(config);\n    }\n\n    if (viewId && productId) {\n      groupedViewIds[viewId] ??= [];\n      groupedViewIds[viewId].push(productId);\n    }\n  });\n\n  Object.entries(grouped).forEach(([key, value]) => {\n    grouped[key] = Object.values(value);\n  });\n\n  return helpers.objFreeze({\n    byAlias: productAliases,\n    byGroup: grouped,\n    byAliasGroupProductPathIds: Object.keys(grouped).sort(),\n    byGroupIdConfigs: groupIdConfigs,\n    byGroupIds: groupedGroupIds,\n    byProductPathConfigs: productPathConfigs,\n    byProductIdConfigs: productIdConfigs,\n    byProductIds: Array.from(productIds),\n    byViewIdConfigs: viewIdConfigs,\n    byViewIds: groupedViewIds\n  });\n});\n\nconst products = {\n  configs: productConfigs,\n  sortedConfigs: sortedProductConfigs\n};\n\nexport { products as default, products, productConfigs, sortedProductConfigs };\n","import { helpers } from '../common';\n\nconst routes = [\n  {\n    id: 'any',\n    path: ':productPath',\n    redirect: null,\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'missing',\n    path: '*',\n    redirect: './',\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: true,\n    component: 'productView/productViewMissing'\n  }\n];\n\nexport { routes as default, routes };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = 'openshift-container';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT;\n\nconst config = {\n  aliases: [RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT, 'openshift', 'container', 'platform', 'shift'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.PARTIAL,\n  viewId: `view${productGroup}`,\n  productContextFilterUom: true,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.CORES,\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialOption: RHSM_API_QUERY_UOM_TYPES.CORES,\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      isOptional: true,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      isOptional: true,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      chartType: ChartTypeVariant.threshold,\n      isOptional: true\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      chartType: ChartTypeVariant.threshold,\n      isOptional: true\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.UOM,\n        position: SelectPosition.right\n      },\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        {\n          [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n          [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {},\n          [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n        } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.SOCKETS,\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.CORES,\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 20,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY,\n      header: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: ['subscriptions', uom?.value] }),\n      cell: ({\n        [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY]: totalCapacity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom\n      } = {}) => {\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate(\n            `curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY}`,\n            { context: uom?.value }\n          );\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value && moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst config = {\n  aliases: ['openshift-dedicated', 'dedicated'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.DUAL_AXES,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisUseDataSet: true\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisUseDataSet: true\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    actions: [\n      {\n        content: ({ data = [] } = {}) => {\n          const { id, meta = {} } = data.find(({ metric }) => metric === RHSM_API_PATH_METRIC_TYPES.CORES) || {};\n          const { totalMonthlyValue } = meta;\n          let displayContent;\n\n          if (totalMonthlyValue) {\n            displayContent = translate('curiosity-graph.cardActionTotal', {\n              context: id,\n              total: helpers\n                .numberDisplay(totalMonthlyValue)\n                ?.format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n                ?.toUpperCase()\n            });\n          }\n\n          return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n        }\n      },\n      {\n        id: 'rangedMonthly',\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({\n        [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n        [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {},\n        [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n      } = {}) => {\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate(\n                'curiosity-inventory.label',\n                { context: INVENTORY_TYPES.NUMBER_OF_GUESTS, count: numberOfGuests.value },\n                [<PfLabel color=\"blue\" />]\n              )) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.CORE_HOURS,\n      cell: ({ [INVENTORY_TYPES.CORE_HOURS]: coreHours }) =>\n        (typeof coreHours?.value === 'number' && Number.parseFloat(coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.INSTANCE_HOURS,\n      cell: ({ [INVENTORY_TYPES.INSTANCE_HOURS]: instanceHours } = {}) =>\n        (typeof instanceHours?.value === 'number' && Number.parseFloat(instanceHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = 'openshift-container';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS;\n\nconst config = {\n  aliases: [RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS, 'openshift', 'metrics'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.PARTIAL,\n  viewId: `view${productGroup}-${productId}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      isStacked: false\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    actions: [\n      {\n        content: ({ data = [] } = {}) => {\n          const { id, meta = {} } = data.find(({ metric }) => metric === RHSM_API_PATH_METRIC_TYPES.CORES) || {};\n          const { totalMonthlyValue } = meta;\n          let displayContent;\n\n          if (totalMonthlyValue) {\n            displayContent = translate('curiosity-graph.cardActionTotal', {\n              context: id,\n              total: helpers\n                .numberDisplay(totalMonthlyValue)\n                ?.format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n                ?.toUpperCase()\n            });\n          }\n\n          return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n        }\n      },\n      {\n        id: 'rangedMonthly',\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({\n        [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n        [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {},\n        [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n      } = {}) => {\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.CORE_HOURS,\n      cell: ({ [INVENTORY_TYPES.CORE_HOURS]: coreHours } = {}) =>\n        (typeof coreHours?.value === 'number' && Number.parseFloat(coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst config = {\n  aliases: ['advanced', 'cluster', 'security', 'kubernetes', 'acs'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick }) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label`, {\n          context: [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER, provider?.value || 'none']\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_orange_100 as chartColorOrangeLight,\n  chart_color_orange_300 as chartColorOrangeDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHEL;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHEL;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHEL;\n\n/**\n * RHEL product config\n *\n * @type {{aliases: string[], productGroup: string, productId: string, productLabel: string, productDisplay: string, viewId: string,\n *     productArchitectures: string[], query: object, graphTallyQuery: object, inventoryHostQuery: object, inventorySubscriptionsQuery: object,\n *     initialGraphFilters: {}[], initialGraphSettings: object, initialGuestsFilters: {}[], initialInventoryFilters: {}[],\n *     initialSubscriptionsInventoryFilters: {}[], initialToolbarFilters: {}[], }}\n */\nconst config = {\n  aliases: ['insights', 'enterprise', 'linux', 'el', 'x86'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}`,\n  productArchitectures: [...Object.values(RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES)],\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.SOCKETS,\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      query: {\n        [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.PHYSICAL\n      }\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      query: {\n        [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.VIRTUAL\n      }\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value,\n      query: {\n        [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.CLOUD\n      }\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      fill: chartColorOrangeLight.value,\n      stroke: chartColorOrangeDark.value,\n      color: chartColorOrangeDark.value,\n      query: {\n        [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.HYPERVISOR\n      }\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      chartType: ChartTypeVariant.threshold\n    }\n  ],\n  initialGraphSettings: {\n    isDisabledLegendClick: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.NUMBER_OF_GUESTS,\n      cell: ({ [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests } = {}) => numberOfGuests?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.CATEGORY,\n      cell: ({ [INVENTORY_TYPES.CLOUD_PROVIDER]: cloudProvider, [INVENTORY_TYPES.CATEGORY]: category } = {}) => (\n        <React.Fragment>\n          {translate('curiosity-inventory.label', { context: [INVENTORY_TYPES.CATEGORY, category?.value] })}{' '}\n          {(cloudProvider?.value && (\n            <PfLabel color=\"purple\">\n              {translate('curiosity-inventory.label', {\n                context: [INVENTORY_TYPES.CLOUD_PROVIDER, cloudProvider?.value]\n              })}\n            </PfLabel>\n          )) ||\n            ''}\n        </React.Fragment>\n      ),\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.SOCKETS]: sockets } = {}) => sockets?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY,\n      header: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: ['subscriptions', uom?.value] }),\n      cell: ({\n        [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY]: totalCapacity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom\n      } = {}) => {\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate(\n            `curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY}`,\n            { context: uom?.value }\n          );\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value && moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.USAGE,\n      selected: true\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.CATEGORY\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.ARCHITECTURE\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst config = {\n  aliases: ['openshift', 'data', 'science', 'ods'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick }) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label`, {\n          context: [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER, provider?.value || 'none']\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst config = {\n  aliases: ['streams', 'apache', 'kafka'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick }) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n      header: {\n        tooltip: () =>\n          translate('curiosity-inventory.header', {\n            context: ['tooltip', RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES]\n          })\n      },\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n      header: {\n        tooltip: () =>\n          translate('curiosity-inventory.header', {\n            context: ['tooltip', RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS]\n          })\n      },\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label`, {\n          context: [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER, provider?.value || 'none']\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.SATELLITE;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.SATELLITE;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.SATELLITE;\n\n/**\n * Satellite product config\n *\n * @type {{aliases: string[], productGroup: string, productId: string, productLabel: string, productDisplay: string, viewId: string,\n *     productVariants: string[], query: object, graphTallyQuery: object, inventoryHostQuery: object,\n *     inventorySubscriptionsQuery: object, initialGraphFilters: {}[], initialGraphSettings: object, initialGuestsFilters: {}[],\n *     initialInventoryFilters: {}[], initialToolbarFilters: {}[], }[]}\n */\nconst config = {\n  aliases: ['sat', 'capsule'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}`,\n  productVariants: [...Object.values(RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES)],\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      query: {\n        [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.PHYSICAL\n      }\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      query: {\n        [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.VIRTUAL\n      }\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value,\n      query: {\n        [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.CLOUD\n      }\n    }\n  ],\n  initialGraphSettings: {\n    isDisabledLegendClick: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.NUMBER_OF_GUESTS,\n      cell: ({ [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests } = {}) => numberOfGuests?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.CATEGORY,\n      cell: ({ [INVENTORY_TYPES.CLOUD_PROVIDER]: cloudProvider, [INVENTORY_TYPES.CATEGORY]: category } = {}) => (\n        <React.Fragment>\n          {translate('curiosity-inventory.label', { context: [INVENTORY_TYPES.CATEGORY, category?.value] })}{' '}\n          {(cloudProvider?.value && (\n            <PfLabel color=\"purple\">\n              {translate('curiosity-inventory.label', {\n                context: [INVENTORY_TYPES.CLOUD_PROVIDER, cloudProvider?.value]\n              })}\n            </PfLabel>\n          )) ||\n            ''}\n        </React.Fragment>\n      ),\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.SOCKETS]: sockets } = {}) => sockets?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.USAGE,\n      selected: true\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.CATEGORY\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.VARIANT\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport _snakeCase from 'lodash/snakeCase';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {string} responses.response.keyCase\n * @param {Function} responses.response.customResponseEntry\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(\n    ({ schema = {}, data, customResponseEntry, customResponseValue, keyPrefix: prefix, keyCase = 'camel' }) => {\n      const isArray = Array.isArray(data);\n      const updatedData = (isArray && data) || (data && [data]) || [];\n      const [generatedSchema = {}] = setResponseSchemas([schema]);\n      const parsedResponse = [];\n\n      updatedData.forEach((value, index) => {\n        const generateReflectedData = ({\n          dataObj,\n          keyPrefix = '',\n          keyCaseType,\n          customEntry,\n          customValue = null,\n          update = helpers.noop\n        }) => {\n          let updatedDataObj = {};\n\n          Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n            let casedDataObjKey;\n\n            switch (keyCaseType) {\n              case 'camel':\n                casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'snake':\n                casedDataObjKey = _snakeCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'default':\n              default:\n                casedDataObjKey = `${dataObjKey}`.trim();\n                break;\n            }\n\n            let val = dataObjValue;\n\n            if (typeof val === 'number') {\n              val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n            }\n\n            if (typeof customValue === 'function') {\n              updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n            } else {\n              updatedDataObj[casedDataObjKey] = val;\n            }\n          });\n\n          if (typeof customEntry === 'function') {\n            updatedDataObj = customEntry(updatedDataObj, index);\n          }\n\n          update(updatedDataObj);\n        };\n\n        generateReflectedData({\n          keyPrefix: prefix,\n          dataObj: { ...generatedSchema, ...value },\n          keyCaseType: keyCase,\n          customEntry: customResponseEntry,\n          customValue: customResponseValue,\n          update: generatedData => parsedResponse.push(generatedData)\n        });\n      });\n\n      parsedResponses.push(parsedResponse);\n    }\n  );\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 400 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults?.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    return {\n      meta: { ...updatedMeta },\n      ...Object.fromEntries(Object.entries(meta).map(([key, value]) => [_camelCase(`meta ${key}`), value]))\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (typeof action.meta?.id === 'string' && action.meta?.id && { [action.meta.id]: { ...baseState, ...data } }) || {\n      ...baseState,\n      ...data\n    };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { useSelector as useReactReduxSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { store } from '../store';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Appears to be an issue in trying to use Redux Promise with the default \"useDispatch\"\n */\n/**\n * Wrapper for store.dispatch, emulating useDispatch.\n *\n * @returns {Function}\n */\nconst useDispatch = () => dispatchEvent => store.dispatch(dispatchEvent);\n\n/**\n * Wrapper for Redux hook, useSelector. Applies test mode and a fallback value.\n *\n * @param {Function} selector\n * @param {*} value\n * @param {object} options\n * @param {*} options.equality\n * @param {Function} options.useSelector\n * @returns {*}\n */\nconst useSelector = (\n  selector,\n  value = null,\n  { equality, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => useAliasSelector(selector, equality) ?? value;\n\n/**\n * Generate a selector from multiple selectors for use in \"useSelector\".\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {*} value Pass-through value similar to charging the response.\n * @param {object} options\n * @param {Function} options.useSelector\n * @param {*} options.equality\n * @returns {Array|object}\n */\nconst useSelectors = (\n  selectors,\n  value,\n  { equality = shallowEqual, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => {\n  let updatedSelectors = Array.isArray(selectors) ? selectors : [selectors];\n  const selectorIds = new Set();\n\n  updatedSelectors = updatedSelectors.map(selector => {\n    if (selector.selector && selector.id) {\n      selectorIds.add(selector.id);\n      return selector.selector;\n    }\n    return selector;\n  });\n\n  const multiSelector = createSelector(updatedSelectors, (...results) => results);\n\n  let listMultiSelectorResponse = (useAliasSelector(multiSelector, equality) ?? value) || [];\n  const undefinedMultiSelectorResponse = listMultiSelectorResponse.filter(response => response === undefined);\n\n  if (undefinedMultiSelectorResponse.length === listMultiSelectorResponse.length) {\n    listMultiSelectorResponse = [];\n  } else {\n    listMultiSelectorResponse = _cloneDeep(listMultiSelectorResponse);\n  }\n\n  if (selectorIds.size && selectorIds.size === listMultiSelectorResponse.length) {\n    const idMultiSelectorResponse = {};\n\n    Array.from(selectorIds).forEach((id, index) => {\n      idMultiSelectorResponse[id] = listMultiSelectorResponse[index];\n    });\n\n    return idMultiSelectorResponse;\n  }\n\n  return listMultiSelectorResponse;\n};\n\n/**\n * Return a combined selector response using a \"Promise.all\" like response.\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {object} options\n * @param {Function} options.useSelectors\n * @param {Function} options.customResponse Callback for customizing your own response\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsResponse = (selectors, { useSelectors: useAliasSelectors = useSelectors, customResponse } = {}) => {\n  const selectorResponse = useAliasSelectors(selectors, []);\n  const isSelectorResponseArray = Array.isArray(selectorResponse);\n\n  const cancelledById = {};\n  const cancelledByList = [];\n  const cancelledDataById = {};\n  const cancelledDataByList = [];\n\n  const errorByList = [];\n  const errorById = {};\n  const errorDataById = {};\n  const errorDataByList = [];\n\n  const fulfilledByList = [];\n  const fulfilledById = {};\n  const fulfilledDataById = {};\n  const fulfilledDataByList = [];\n\n  const pendingByList = [];\n\n  const responsesById = {};\n  const responsesByList = [];\n  const dataById = {};\n  const dataByList = [];\n\n  const idList = [];\n\n  const updatedSelectorResponse = _cloneDeep(\n    (isSelectorResponseArray && selectorResponse) || Object.entries(selectorResponse)\n  );\n\n  updatedSelectorResponse.forEach(response => {\n    const id = (!isSelectorResponseArray && response?.[0]) || null;\n\n    const updatedResponse = (isSelectorResponseArray && response) || response?.[1] || response;\n    const isServiceResponse =\n      typeof updatedResponse.cancelled === 'boolean' ||\n      typeof updatedResponse.error === 'boolean' ||\n      typeof updatedResponse.fulfilled === 'boolean' ||\n      typeof updatedResponse.pending === 'boolean';\n\n    const { pending, fulfilled, error, cancelled, message } = (isServiceResponse && updatedResponse) || {};\n\n    if (id !== null) {\n      idList.push(id);\n      updatedResponse.id = id;\n    }\n\n    if (cancelled) {\n      cancelledByList.push(updatedResponse);\n      cancelledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        cancelledById[id] = cancelledByList[cancelledByList.length - 1];\n        cancelledDataById[id] =\n          cancelledByList[cancelledByList.length - 1]?.data || cancelledByList[cancelledByList.length - 1];\n      }\n    }\n\n    if (error) {\n      errorByList.push({\n        ...updatedResponse,\n        ...new Error(message || `Error: useSelectorsAllResponse${(id && `, ${id}`) || ''}`)\n      });\n      errorDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        errorById[id] = errorByList[errorByList.length - 1];\n        errorDataById[id] = errorByList[errorByList.length - 1]?.data || errorByList[errorByList.length - 1];\n      }\n    }\n\n    if (fulfilled) {\n      fulfilledByList.push(updatedResponse);\n      fulfilledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        fulfilledById[id] = fulfilledByList[fulfilledByList.length - 1];\n        fulfilledDataById[id] =\n          fulfilledByList[fulfilledByList.length - 1]?.data || fulfilledByList[fulfilledByList.length - 1];\n      }\n    }\n\n    if (pending) {\n      pendingByList.push(updatedResponse);\n    }\n\n    if (id !== null) {\n      responsesById[id] = updatedResponse;\n      dataById[id] = updatedResponse?.data || updatedResponse;\n    }\n\n    responsesByList.push(updatedResponse);\n    dataByList.push(updatedResponse?.data || updatedResponse);\n  });\n\n  const isById = idList.length !== 0 && idList.length === updatedSelectorResponse.length;\n\n  const response = {\n    responses: {\n      id: responsesById,\n      list: responsesByList\n    },\n    cancelled: false,\n    data: (isById && {}) || [],\n    error: false,\n    fulfilled: false,\n    message: null,\n    pending: false\n  };\n\n  if (typeof customResponse === 'function') {\n    Object.assign(response, {\n      ...customResponse(\n        { ...response, responses: { ...response.responses } },\n        {\n          cancelledById,\n          cancelledByList,\n          cancelledDataById,\n          cancelledDataByList,\n          dataById,\n          dataByList,\n          errorByList,\n          errorById,\n          errorDataById,\n          errorDataByList,\n          fulfilledByList,\n          fulfilledById,\n          fulfilledDataById,\n          fulfilledDataByList,\n          idList,\n          isById,\n          pendingByList,\n          responsesByList,\n          responsesById,\n          updatedSelectorResponse\n        }\n      )\n    });\n\n    return response;\n  }\n\n  if (errorByList.length) {\n    response.message = new Error(errorByList[0]?.message || `useSelectorsResponse, ${JSON.stringify(errorByList[0])}`);\n    response.error = true;\n    response.data = (isById && errorDataById) || errorDataByList;\n    return response;\n  }\n\n  if (pendingByList.length) {\n    response.pending = true;\n    return response;\n  }\n\n  if (cancelledByList.length && cancelledByList.length === responsesByList.length) {\n    response.message = new Error('Cancelled useSelectorsResponse');\n    response.cancelled = true;\n    response.data = (isById && cancelledById) || cancelledByList;\n    return response;\n  }\n\n  if (\n    fulfilledByList.length &&\n    (fulfilledByList.length === responsesByList.length ||\n      cancelledByList.length + fulfilledByList.length === responsesByList.length)\n  ) {\n    response.fulfilled = true;\n    response.data = (isById && dataById) || dataByList;\n    return response;\n  }\n\n  return response;\n};\n\n/**\n * Return a combined selector response using a \"Promise.allSettled\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAllSettledResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    { cancelledByList, errorByList, fulfilledByList, pendingByList, dataById, dataByList, isById }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length + fulfilledByList?.length + cancelledByList?.length === dataByList?.length ||\n      errorByList?.length === dataByList?.length ||\n      fulfilledByList?.length === dataByList?.length ||\n      cancelledByList?.length === dataByList?.length\n    ) {\n      response.fulfilled = true;\n      response.data = (isById && dataById) || dataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.any\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAnyResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length &&\n      (errorByList?.length === responsesByList?.length ||\n        cancelledByList?.length + errorByList?.length === responsesByList?.length)\n    ) {\n      response.message = helpers.aggregatedError(errorByList, 'useSelectorsAnyResponse');\n      response.error = true;\n      response.data = (isById && errorDataById) || errorDataByList;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      response.message = new Error('Cancelled useSelectorsAnyResponse');\n      response.cancelled = true;\n      response.data = (isById && cancelledDataById) || cancelledDataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.race\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsRaceResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (errorByList?.length) {\n      let data = errorDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(errorDataById);\n        data = (keyList?.[0] && errorDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error(\n        errorByList[0]?.message || `useSelectorsRaceResponse, ${JSON.stringify(errorByList[0])}`\n      );\n      response.error = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      let data = cancelledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(cancelledDataById);\n        data = (keyList?.[0] && cancelledDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error('Cancelled useSelectorsRaceResponse');\n      response.cancelled = true;\n      response.data = data;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\nconst reactReduxHooks = {\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n\nexport {\n  reactReduxHooks as default,\n  reactReduxHooks,\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n","import { reactReduxHooks } from './useReactRedux';\n\nconst storeHooks = {\n  reactRedux: reactReduxHooks\n};\n\nexport { storeHooks as default, storeHooks, reactReduxHooks };\n","import _camelCase from 'lodash/camelCase';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\n/**\n * Pass through generate hash\n */\nconst { generateHash } = helpers;\n\n/**\n * A timeout cancel for function calls.\n *\n * @param {Function} func Callback to be executed or cancelled\n * @param {object} options\n * @param {number} options.timeout Function timeout in milliseconds\n * @param {string} options.errorMessage What the error message will read\n * @returns {Promise<*>}\n */\nconst timeoutFunctionCancel = (func, { timeout = 3000, errorMessage = 'function timeout' } = {}) => {\n  let clearTimer;\n\n  const timer = () =>\n    new Promise((_, reject) => {\n      clearTimer = window.setTimeout(reject, timeout, new Error(errorMessage));\n    });\n\n  const updatedFunc = async () => {\n    const response = await func();\n    window.clearTimeout(clearTimer);\n    return response;\n  };\n\n  const execFunction = () =>\n    Promise.race([timer(), updatedFunc()]).finally(() => {\n      window.clearTimeout(clearTimer);\n    });\n\n  return execFunction();\n};\n\n/**\n * Return objects with the keys camelCased. Normally applied to an array of objects.\n *\n * @param {object|Array|*} obj\n * @returns {object|Array|*}\n */\nconst camelCase = obj => {\n  if (Array.isArray(obj)) {\n    return obj.map(camelCase);\n  }\n\n  if (_isPlainObject(obj)) {\n    const updatedObj = {};\n\n    Object.entries(obj).forEach(([key, val]) => {\n      updatedObj[_camelCase(key)] = camelCase(val);\n    });\n\n    return updatedObj;\n  }\n\n  return obj;\n};\n\n/**\n * Apply data to a callback, pass original data on error.\n *\n * @param {Function} callback\n * @param {Array} data\n * @returns {{data: *, error}}\n */\nconst passDataToCallback = (callback, ...data) => {\n  let error;\n  let updatedData = data;\n\n  try {\n    updatedData = callback(...data);\n  } catch (e) {\n    error = e;\n  }\n\n  return { data: updatedData, error };\n};\n\n/**\n * A callback for schema validation, and after-the-fact casing adjustments.\n *\n * @param {object} options\n * @param {string} options.casing\n * @param {boolean} options.convert\n * @param {string} options.id\n * @param {object|Array} options.response\n * @param {*} options.schema\n * @returns {*|{}}\n */\nconst schemaResponse = ({ casing, convert = true, id = null, response, schema } = {}) => {\n  const { value, error = { details: [] } } = schema?.validate(response, { convert }) || {};\n\n  if (error.details.length && !helpers.TEST_MODE) {\n    console.error(\n      new Error(\n        `Passing original API response. Schema validation failed for ${id || '...'}: ${error.details\n          .map(({ context = {}, message, type }) => `${message}:${type}, ${JSON.stringify(context)}`)\n          .join(', ')}`\n      )\n    );\n  }\n\n  switch (casing) {\n    case 'camel':\n      return camelCase(value);\n    default:\n      return value;\n  }\n};\n\nconst serviceHelpers = {\n  camelCase,\n  generateHash,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n\nexport {\n  serviceHelpers as default,\n  serviceHelpers,\n  camelCase,\n  generateHash,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n","import axios, { CancelToken } from 'axios';\nimport LruCache from 'lru-cache';\nimport { serviceHelpers } from './helpers';\n\n/**\n * Set Axios XHR default timeout.\n */\nconst globalXhrTimeout = Number.parseInt(process.env.REACT_APP_AJAX_TIMEOUT, 10) || 60000;\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {{}}\n */\nconst globalCancelTokens = {};\n\n/**\n * Cache Axios service call responses.\n *\n * @type {object}\n */\nconst globalResponseCache = new LruCache({\n  ttl: Number.parseInt(process.env.REACT_APP_AJAX_CACHE, 10) || 30000,\n  max: 100,\n  updateAgeOnGet: true\n});\n\n// ToDo: consider another way of hashing cacheIDs. base64 could get a little large depending on settings, i.e. md5\n/**\n * Set Axios configuration. This includes response schema validation and caching.\n * Call platform \"getUser\" auth method, and apply service config. Service configuration\n * includes the ability to cancel all and specific calls, cache and normalize a response\n * based on both a provided schema and a successful API response. The cache will refresh\n * its timeout on continuous calls. To reset it a user will either need to refresh the\n * page or wait the \"maxAge\".\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @param {object} options\n * @param {string} options.cancelledMessage\n * @param {object} options.responseCache\n * @param {number} options.xhrTimeout\n * @returns {Promise<*>}\n */\nconst axiosServiceCall = async (\n  config = {},\n  { cancelledMessage = 'cancelled request', responseCache = globalResponseCache, xhrTimeout = globalXhrTimeout } = {}\n) => {\n  const updatedConfig = {\n    timeout: xhrTimeout,\n    ...config,\n    cache: undefined,\n    cacheResponse: config.cache,\n    method: config.method || 'get'\n  };\n  const responseTransformers = [];\n  const axiosInstance = axios.create();\n\n  // don't cache responses if \"get\" isn't used\n  updatedConfig.cacheResponse = updatedConfig.cacheResponse === true && updatedConfig.method === 'get';\n\n  // account for alterations to transforms, and other config props\n  const cacheId = (updatedConfig.cacheResponse === true && serviceHelpers.generateHash(updatedConfig)) || null;\n\n  // simple check to place responsibility on consumer, primarily used for testing\n  if (updatedConfig.exposeCacheId === true) {\n    updatedConfig.cacheId = cacheId;\n  }\n\n  if (updatedConfig.cancel === true) {\n    const cancelTokensId =\n      updatedConfig.cancelId || serviceHelpers.generateHash({ ...updatedConfig, data: undefined, params: undefined });\n\n    if (globalCancelTokens[cancelTokensId]) {\n      await globalCancelTokens[cancelTokensId].cancel(cancelledMessage);\n    }\n\n    globalCancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = globalCancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  if (updatedConfig.cacheResponse === true) {\n    const cachedResponse = responseCache.get(cacheId);\n\n    if (cachedResponse) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          ...cachedResponse,\n          status: 304,\n          statusText: 'Not Modified',\n          config: adapterConfig\n        });\n\n      return axiosInstance(updatedConfig);\n    }\n  }\n\n  if (updatedConfig.schema) {\n    responseTransformers.push(updatedConfig.schema);\n  }\n\n  if (updatedConfig.transform) {\n    responseTransformers.push(updatedConfig.transform);\n  }\n\n  responseTransformers.forEach(([successTransform, errorTransform]) => {\n    const transformers = [undefined, response => Promise.reject(response)];\n\n    if (successTransform) {\n      transformers[0] = response => {\n        const updatedResponse = { ...response };\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          successTransform,\n          updatedResponse.data,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.data = data;\n        }\n\n        return updatedResponse;\n      };\n    }\n\n    if (errorTransform) {\n      transformers[1] = response => {\n        const updatedResponse = { ...(response.response || response) };\n\n        if (updatedResponse?.message === cancelledMessage) {\n          return Promise.reject(updatedResponse);\n        }\n\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          errorTransform,\n          updatedResponse?.data || updatedResponse?.message,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.response = { ...updatedResponse, data };\n        }\n\n        return Promise.reject(updatedResponse);\n      };\n    }\n\n    axiosInstance.interceptors.response.use(...transformers);\n  });\n\n  if (updatedConfig.cacheResponse === true) {\n    axiosInstance.interceptors.response.use(\n      response => {\n        const updatedResponse = { ...response };\n        responseCache.set(cacheId, updatedResponse);\n        return updatedResponse;\n      },\n      response => Promise.reject(response)\n    );\n  }\n\n  if (typeof updatedConfig.url === 'function') {\n    const emulateCallback = updatedConfig.url;\n    updatedConfig.url = '/emulated';\n\n    let message = 'success, emulated';\n    let emulatedResponse;\n    let isSuccess = true;\n\n    try {\n      emulatedResponse = await serviceHelpers.timeoutFunctionCancel(emulateCallback, { timeout: xhrTimeout });\n    } catch (e) {\n      isSuccess = false;\n      message = e.message || e;\n    }\n\n    if (isSuccess) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          data: emulatedResponse,\n          status: 200,\n          statusText: message,\n          config: adapterConfig\n        });\n    } else {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.reject({ // eslint-disable-line\n          ...new Error(message),\n          message,\n          status: 418,\n          config: adapterConfig\n        });\n    }\n  }\n\n  return axiosInstance(updatedConfig);\n};\n\nconst serviceConfig = { axiosServiceCall, globalXhrTimeout, globalCancelTokens, globalResponseCache };\n\nexport {\n  serviceConfig as default,\n  serviceConfig,\n  axiosServiceCall,\n  globalXhrTimeout,\n  globalCancelTokens,\n  globalResponseCache\n};\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\n\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * User response item.\n *\n * @type {*} Joi schema\n */\nconst userResponseSchema = Joi.object()\n  .keys({\n    identity: Joi.object({\n      user: Joi.object({\n        is_org_admin: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({}),\n    entitlements: Joi.object({\n      [process.env.REACT_APP_UI_NAME]: Joi.object({\n        is_entitled: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({})\n  })\n  .unknown(true)\n  .default({});\n\n/**\n * Permissions response item.\n *\n * @type {*} Joi schema\n */\nconst permissionsItem = Joi.object({\n  permission: Joi.string().optional().allow(null),\n  resourceDefinitions: Joi.array().optional().default([])\n})\n  .unknown(true)\n  .default();\n\n/**\n * Authorize response.\n *\n * @type {*} Joi schema\n */\nconst permissionsResponseSchema = Joi.array().items(permissionsItem).default([]);\n\nconst platformSchemas = {\n  user: response => schemaResponse({ response, schema: userResponseSchema, id: 'User auth' }),\n  permissions: response => schemaResponse({ response, schema: permissionsResponseSchema, id: 'Permissions auth' })\n};\n\nexport { platformSchemas as default, platformSchemas };\n","import { rbacConfig } from '../../config';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES\n} from './platformConstants';\nimport { helpers } from '../../common';\n\n/**\n * Parse platform getUser response.\n *\n * @param {object} response\n * @returns {object}\n */\nconst user = response => {\n  const updatedResponse = {};\n  const {\n    [platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY]: identity = {},\n    [platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]: entitlements = {}\n  } = response || {};\n\n  updatedResponse.isAdmin =\n    identity?.[platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]?.[\n      platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n    ] || false;\n\n  updatedResponse.isEntitled =\n    entitlements?.[helpers.UI_NAME]?.[platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED] ||\n    false;\n\n  return updatedResponse;\n};\n\n/**\n * Parse platform getUserPermissions response.\n *\n * @param {object} response\n * @param {object} options\n * @param {object} options.config Pass in a configuration object, RBAC\n * @returns {object}\n */\nconst userPermissions = (response, { config = rbacConfig } = {}) => {\n  const updatedResponse = {\n    permissions: {},\n    authorized: {}\n  };\n\n  response?.forEach(\n    ({\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n    }) => {\n      const [app = '', resource, operation] = permission?.split(':') || [];\n\n      if (!updatedResponse.permissions[app]) {\n        updatedResponse.permissions[app] = {\n          all: false,\n          resources: {}\n        };\n      }\n\n      if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n        updatedResponse.permissions[app].all = true;\n      }\n\n      if (!updatedResponse.permissions[app].resources[resource]) {\n        updatedResponse.permissions[app].resources[resource] = {};\n      }\n\n      updatedResponse.permissions[app].resources[resource][operation] = definitions;\n    }\n  );\n\n  // Alias specific app permissions checks\n  Object.entries(config).forEach(([key, { permissions: resourcePermissions }]) => {\n    updatedResponse.authorized[key] = updatedResponse.permissions[key]?.all || false;\n\n    resourcePermissions.forEach(({ resource: res, operation: op }) => {\n      if (updatedResponse.permissions[key]?.resources?.[res]?.[op]) {\n        updatedResponse.authorized[key] = true;\n      }\n    });\n  });\n\n  return updatedResponse;\n};\n\nconst platformTransformers = {\n  user,\n  permissions: userPermissions\n};\n\nexport { platformTransformers as default, platformTransformers, user, userPermissions };\n","import _set from 'lodash/set';\nimport { rbacConfig } from '../../config';\nimport { axiosServiceCall } from '../common/serviceConfig';\nimport { platformSchemas } from './platformSchemas';\nimport { platformTransformers } from './platformTransformers';\nimport { helpers } from '../../common';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES\n} from './platformConstants';\n\n/**\n * Basic user authentication.\n *\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUser = async (options = {}) => {\n  const { schema = [platformSchemas.user], transform = [platformTransformers.user] } = options;\n  const { insights } = window;\n  return axiosServiceCall({\n    url: async () => {\n      try {\n        return (\n          (helpers.DEV_MODE &&\n            _set(\n              {},\n              [\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n              ],\n              process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n            )) ||\n          (await insights.chrome.auth.getUser())\n        );\n      } catch (e) {\n        throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n      }\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUserPermissions = (appName = Object.keys(rbacConfig), options = {}) => {\n  const { schema = [platformSchemas.permissions], transform = [platformTransformers.permissions] } = options;\n  const updatedAppName = (Array.isArray(appName) && appName) || [appName];\n  const { insights } = window;\n  const platformMethod = name =>\n    (helpers.DEV_MODE && [\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_ONE\n      },\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_TWO\n      }\n    ]) ||\n    insights.chrome.getUserPermissions(name);\n\n  return axiosServiceCall({\n    url: async () => {\n      let userPermissions;\n\n      try {\n        const allPermissions = await Promise.all(updatedAppName.map(name => platformMethod(name)));\n\n        if (Array.isArray(allPermissions)) {\n          userPermissions = [...allPermissions.flat()];\n        }\n      } catch (e) {\n        throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n      }\n\n      return userPermissions;\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Disables the Platform's global filter display.\n *\n * @param {boolean} isHidden\n * @returns {Promise<*>}\n */\nconst hideGlobalFilter = async (isHidden = true) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.hideGlobalFilter(isHidden);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = {\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter\n};\n\nexport { platformServices as default, platformServices, getUser, getUserPermissions, hideGlobalFilter };\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platform/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Get an emulated and combined API response from the platforms \"getUser\" and \"getUserPermissions\" global methods.\n *\n * @param {string|Array} appName\n * @returns {Function}\n */\nconst authorizeUser = appName => dispatch =>\n  dispatch({\n    type: platformTypes.PLATFORM_USER_AUTH,\n    payload: Promise.all([platformServices.getUser(), platformServices.getUserPermissions(appName)])\n  });\n\n/**\n * Hide platform global filter.\n *\n * @param {boolean} isHidden\n * @returns {{Function}}\n */\nconst hideGlobalFilter = isHidden => ({\n  type: platformTypes.PLATFORM_GLOBAL_FILTER_HIDE,\n  payload: platformServices.hideGlobalFilter(isHidden)\n});\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter\n};\n","import { axiosServiceCall } from './common/serviceConfig';\nimport { platformServices } from './platform/platformServices';\n\n/**\n * Apply a global custom service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  ...passedConfig\n});\n\n/**\n * Use a global Axios configuration.\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n  return axiosServiceCall(serviceConfig(config));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\nimport { rhsmConstants } from './rhsmConstants';\n\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * Error response item.\n *\n * @type {*} Joi schema\n */\nconst errorItem = Joi.object({\n  code: Joi.string().default(null),\n  detail: Joi.string().default(null)\n}).unknown(true);\n\n/**\n * Error response.\n *\n * @type {*} Joi schema\n */\nconst errorResponseSchema = Joi.object()\n  .keys({\n    errors: Joi.array().items(errorItem).default([])\n  })\n  .unknown(true);\n\nconst linksSchema = Joi.object();\n\n/**\n * RHSM base response meta field.\n *\n * @type {*} Joi schema\n */\nconst metaResponseSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0),\n    product: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_PRODUCT_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Capacity response meta field.\n *\n * @type {*} Joi schema\n */\nconst capacityMetaSchema = metaResponseSchema\n  .keys({\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Capacity response item.\n *\n * @type {*} Joi schema\n */\nconst capacityItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  has_infinite_quantity: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Capacity response.\n *\n * @type {*} Joi schema\n */\nconst capacityResponseSchema = Joi.object().keys({\n  data: Joi.array().items(capacityItem).default([]),\n  links: linksSchema.default({}),\n  meta: capacityMetaSchema.default({})\n});\n\n/**\n * Guests response meta field.\n *\n * @type {*} Joi schema\n */\nconst guestsMetaSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0)\n  })\n  .unknown(true);\n\n/**\n * Guests response item.\n *\n * @type {*} Joi schema\n */\nconst guestsItem = Joi.object({\n  inventory_id: Joi.string().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Guests response.\n *\n * @type {*} Joi schema\n */\nconst guestsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(guestsItem).default([]),\n  links: linksSchema.default({}),\n  meta: guestsMetaSchema.default({})\n});\n\n/**\n * Hosts response meta field.\n *\n * @type {*} Joi schema\n */\nconst hostsMetaSchema = metaResponseSchema;\n\n/**\n * Hosts response item.\n *\n * @type {*} Joi schema\n */\nconst hostsItem = Joi.object({\n  cloud_provider: Joi.string().lowercase().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  hardware_type: Joi.string().lowercase().optional().allow(null),\n  inventory_id: Joi.string().optional().allow(null),\n  measurement_type: Joi.string().lowercase().optional().allow(null),\n  number_of_guests: Joi.number().integer().default(0),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Hosts response.\n *\n * @type {*} Joi schema\n */\nconst hostsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(hostsItem).default([]),\n  links: linksSchema.default({}),\n  meta: hostsMetaSchema.default({})\n});\n\n/**\n * Instances response meta field.\n *\n * @type {*} Joi schema\n */\nconst instancesMetaSchema = metaResponseSchema\n  .keys({\n    measurements: Joi.array()\n      .items(Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)))\n      .default([])\n  })\n  .unknown(true);\n\n/**\n * Instances response item.\n *\n * @type {*} Joi schema\n */\nconst instancesItem = Joi.object({\n  instance_id: Joi.string().optional().allow(null),\n  category: Joi.string().lowercase().optional().allow(null),\n  cloud_provider: Joi.string().lowercase().optional().allow(null, ''),\n  display_name: Joi.string().optional().allow(null),\n  billing_provider: Joi.string().lowercase().optional().allow(null, ''),\n  billing_account_id: Joi.string().optional().allow(null),\n  measurements: Joi.array().default([]),\n  number_of_guests: Joi.number().integer().default(0),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Instances response.\n *\n * @type {*} Joi schema\n */\nconst instancesResponseSchema = Joi.object().keys({\n  data: Joi.array().items(instancesItem).default([]),\n  links: linksSchema.default({}),\n  meta: instancesMetaSchema.default({})\n});\n\n/**\n * Subscriptions response meta field.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsMetaSchema = metaResponseSchema\n  .keys({\n    subscription_type: Joi.string().valid(null, ...Object.values(rhsmConstants.RHSM_API_RESPONSE_SUBSCRIPTION_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Subscriptions response item.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsItem = Joi.object({\n  has_infinite_quantity: Joi.boolean().optional().allow(null),\n  next_event_date: Joi.date().utc().allow(null),\n  product_name: Joi.string().optional().allow(null),\n  quantity: Joi.number().allow(null).default(0),\n  service_level: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_SLA_TYPES)),\n  total_capacity: Joi.number().allow(null).default(0),\n  uom: Joi.string()\n    .lowercase()\n    .valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_UOM_TYPES))\n})\n  .unknown(true)\n  .default();\n\n/**\n * Subscriptions response.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(subscriptionsItem).default([]),\n  links: linksSchema.default({}),\n  meta: subscriptionsMetaSchema.default({})\n});\n\n/**\n * Tally and capacity metric response item.\n *\n * @type {*} Joi schema\n */\nconst tallyItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Tally response meta field.\n *\n * @type {*} Joi schema\n */\nconst tallyMetaSchema = metaResponseSchema\n  .keys({\n    has_cloudigrade_data: Joi.boolean().optional().allow(null),\n    has_cloudigrade_mismatch: Joi.boolean().optional().allow(null),\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)),\n    total_monthly: tallyItem\n  })\n  .unknown(true);\n\n/**\n * Tally response.\n *\n * @type {*} Joi schema\n */\nconst tallyResponseSchema = Joi.object().keys({\n  data: Joi.array().items(tallyItem).default([]),\n  links: linksSchema.default({}),\n  meta: tallyMetaSchema.default({})\n});\n\nconst rhsmSchemas = {\n  capacity: response => schemaResponse({ response, schema: capacityResponseSchema, id: 'RHSM capacity' }),\n  errors: response => schemaResponse({ response, schema: errorResponseSchema, id: 'RHSM errors' }),\n  guests: response => schemaResponse({ response, casing: 'camel', schema: guestsResponseSchema, id: 'RHSM guests' }),\n  hosts: response => schemaResponse({ response, schema: hostsResponseSchema, id: 'RHSM hosts' }),\n  instances: response => schemaResponse({ response, schema: instancesResponseSchema, id: 'RHSM instances' }),\n  subscriptions: response =>\n    schemaResponse({ response, schema: subscriptionsResponseSchema, id: 'RHSM subscriptions' }),\n  tally: response => schemaResponse({ response, schema: tallyResponseSchema, id: 'RHSM tally' })\n};\n\nexport { rhsmSchemas as default, rhsmSchemas };\n","import moment from 'moment';\nimport {\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES as HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES as INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES as TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES as TALLY_CAPACITY_META_TYPES,\n  rhsmConstants\n} from './rhsmConstants';\nimport { dateHelpers } from '../../common';\n\n/**\n * Parse RHSM hosts response for caching.\n *\n * @param {object} response\n * @returns {object}\n */\nconst rhsmHosts = response => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n\n  updatedResponse.data = data.map(\n    ({\n      [HOSTS_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      [HOSTS_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      ...dataResponse\n    }) => ({\n      [HOSTS_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      [HOSTS_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      numberOfGuests,\n      subscriptionManagerId,\n      ...dataResponse\n    })\n  );\n\n  updatedResponse.meta = {\n    count: meta[HOSTS_META_TYPES.COUNT],\n    productId: meta[HOSTS_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * FixMe: If RHSM Instances is deprecating Hosts we're missing a property, number_of_guests\n */\n/**\n * Parse RHSM instances response for caching.\n *\n * @param {object} response\n * @returns {object}\n */\nconst rhsmInstances = response => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const metaMeasurements = meta[INSTANCES_META_TYPES.MEASUREMENTS];\n\n  updatedResponse.data = data.map(\n    ({\n      [INSTANCES_DATA_TYPES.MEASUREMENTS]: measurements,\n      [INSTANCES_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      [INSTANCES_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      ...dataResponse\n    }) => {\n      const updatedData = {\n        [INSTANCES_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n        numberOfGuests,\n        [INSTANCES_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n        subscriptionManagerId,\n        ...dataResponse\n      };\n\n      metaMeasurements?.forEach((measurement, index) => {\n        updatedData[measurement] = measurements[index];\n      });\n\n      return updatedData;\n    }\n  );\n\n  updatedResponse.meta = {\n    count: meta[INSTANCES_META_TYPES.COUNT],\n    productId: meta[INSTANCES_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * ToDo: Confirm category meta response for Capacity\n * We're temporarily applying category from submitted params. API docs indicate\n * category only comes through on metric capacity?\n */\n/**\n * Parse RHSM tally response for caching.\n *\n * @param {object} response\n * @param {object} config\n * @param {boolean} config._isCapacity\n * @param {string} config.params\n * @returns {object}\n */\nconst rhsmTallyCapacity = (response, { _isCapacity, params } = {}) => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const currentDate = moment.utc(dateHelpers.getCurrentDate());\n  const currentDateStr = moment.utc(dateHelpers.getCurrentDate()).format('MM-D-YYYY');\n  let futureDateCount = 0;\n\n  updatedResponse.data = data.map(\n    (\n      {\n        [TALLY_CAPACITY_DATA_TYPES.DATE]: date,\n        [TALLY_CAPACITY_DATA_TYPES.VALUE]: value,\n        [TALLY_CAPACITY_DATA_TYPES.HAS_DATA]: hasData,\n        [TALLY_CAPACITY_DATA_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity\n      },\n      index\n    ) => {\n      const updatedDate = moment.utc(date);\n      const isCurrentDate = updatedDate.format('MM-D-YYYY') === currentDateStr;\n      const isFutureDate = updatedDate.diff(currentDate) > 0;\n\n      if (isFutureDate && !isCurrentDate) {\n        futureDateCount += 1;\n      }\n\n      return {\n        x: index,\n        y:\n          (_isCapacity === true && isFutureDate) ||\n          (_isCapacity === true && hasInfiniteQuantity === true) ||\n          (!_isCapacity && hasData === false && isFutureDate) ||\n          (!_isCapacity && hasData === false && isCurrentDate)\n            ? null\n            : value,\n        date,\n        hasData,\n        hasInfiniteQuantity,\n        isCurrentDate,\n        isFutureDate\n      };\n    }\n  );\n\n  /**\n   * Add an extra date to the first entry of the range to help Victory charts display.\n   */\n  if (futureDateCount === updatedResponse.data.length - 1) {\n    updatedResponse.data = [\n      {\n        ...updatedResponse.data[0],\n        x: 0,\n        isCurrentDate: false\n      },\n      ...updatedResponse.data\n    ].map((props, index) => ({ ...props, x: index }));\n  }\n\n  updatedResponse.meta = {\n    category: params?.[RHSM_API_QUERY_SET_TYPES.CATEGORY],\n    count: meta[TALLY_CAPACITY_META_TYPES.COUNT],\n    cloudigradeHasMismatch: meta?.[TALLY_CAPACITY_META_TYPES.HAS_CLOUDIGRADE_MISMATCH],\n    metricId: meta[TALLY_CAPACITY_META_TYPES.METRIC_ID],\n    productId: meta[TALLY_CAPACITY_META_TYPES.PRODUCT],\n    totalMonthlyDate: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.DATE],\n    totalMonthlyHasData: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.HAS_DATA],\n    totalMonthlyValue: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.VALUE]\n  };\n\n  return updatedResponse;\n};\n\nconst rhsmTransformers = {\n  hosts: rhsmHosts,\n  instances: rhsmInstances,\n  tallyCapacity: rhsmTallyCapacity\n};\n\nexport { rhsmTransformers as default, rhsmTransformers, rhsmHosts, rhsmInstances, rhsmTallyCapacity };\n","import { RHSM_API_QUERY_SET_TYPES } from './rhsmConstants';\n\n/**\n * ToDo: remove filterArchitectureVariant when the API supports architecture, variant params\n */\n/**\n * Patch for returning a made up API architecture, variant param as a product ID\n *\n * @param {string} id\n * @param {object} params\n * @returns {string}\n */\nconst filterArchitectureVariant = (id, params = {}) => {\n  const updatedId = id;\n\n  if (params?.[RHSM_API_QUERY_SET_TYPES.ARCHITECTURE]?.length) {\n    return params?.[RHSM_API_QUERY_SET_TYPES.ARCHITECTURE];\n  }\n\n  if (params?.[RHSM_API_QUERY_SET_TYPES.VARIANT]?.length) {\n    return params?.[RHSM_API_QUERY_SET_TYPES.VARIANT];\n  }\n\n  return updatedId;\n};\n\nconst rhsmHelpers = {\n  filterArchitectureVariant\n};\n\nexport { rhsmHelpers as default, rhsmHelpers, filterArchitectureVariant };\n","import { serviceCall } from '../config';\nimport { rhsmSchemas } from './rhsmSchemas';\nimport { helpers } from '../../common';\nimport { rhsmTransformers } from './rhsmTransformers';\nimport { rhsmHelpers } from './rhsmHelpers';\n\n/**\n * ToDo: remove rhsmHelpers.filterArchitectureVariant\n * We're using a temporary helper to emulate a param for architectures and/or variants.\n * When the api supports architecture and variant query params this needs to be refactored.\n */\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getApiVersion = (options = {}) => {\n  const { cache = false, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {string} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {string} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {object} links\n * @apiSuccess {object} meta\n * @apiSuccess {string} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {string} meta.product\n * - RHEL\n * @apiSuccess {number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 12\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 4\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000.057890,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"has_cloudigrade_data\": true,\n *           \"has_cloudigrade_mismatch\": true,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\",\n *         \"total_core_hours\": 30500.04,\n *         \"total_instance_hours\": 35\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.20,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.15,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.11,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.32,\n *           \"instance_hours\": 23\n *         },\n *         {\n *           \"date\": \"2020-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.42,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 999.06,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\",\n *         \"total_core_hours\": 200.03,\n *         \"total_instance_hours\": 26\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 400,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\",\n *         \"total_core_hours\": 2050.04\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Sockets Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Sockets\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Cores Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Cores\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Transfer-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Transfer-gibibytes\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 1024,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibyte\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibyte-months Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibyte-months\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Instance-hours Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Instance-hours\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2000,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n */\n/* Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of identifiers to update a dotenv url path\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getGraphTally = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.tally, rhsmSchemas.errors],\n    transform = [rhsmTransformers.tallyCapacity]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_TALLY}`;\n  updatedId.forEach((value, index) => {\n    let updatedValue = value;\n    if (index === 0) {\n      updatedValue = rhsmHelpers.filterArchitectureVariant(value, params);\n    }\n\n    url = url.replace(`{${index}}`, updatedValue);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id/:metric_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 100,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 100,\n *           \"has_data\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"product\": \"RHEL\",\n *         \"metric_id\": \"Sockets\",\n *         \"granularity\": \"daily\",\n *         \"service_level\": \"\",\n *         \"usage\": \"\",\n *         \"category\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of identifiers to update a dotenv url path\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.capacity, rhsmSchemas.errors],\n    transform = [rhsmTransformers.tallyCapacity]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}`;\n  updatedId.forEach((value, index) => {\n    let updatedValue = value;\n    if (index === 0) {\n      updatedValue = rhsmHelpers.filterArchitectureVariant(value, params);\n    }\n\n    url = url.replace(`{${index}}`, updatedValue);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform,\n    _isCapacity: true\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 500\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-123456789012\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.05,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 70,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6N\",\n *           \"cloud_provider\": \"AZURE\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.00,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"CLOUD\",\n *           \"measurement_type\": \"CLOUD\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6M\",\n *           \"cores\": 4,\n *           \"core_hours\": 1000.20,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 10,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"display_name\": \"dolor.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6L\",\n *           \"cores\": 4,\n *           \"core_hours\": 1001.60,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 1,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"display_name\": \"lorem.test.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YX\",\n *           \"cores\": 4,\n *           \"core_hours\": 999.60,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"display_name\": \"lorem.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YZ\",\n *           \"cores\": 0,\n *           \"core_hours\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"display_name\": \"lorem.another.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YA\",\n *           \"cores\": 0,\n *           \"core_hours\": 0.01,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-21T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YB\",\n *           \"cores\": 0,\n *           \"core_hours\": 999.61,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-22T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YC\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-23T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YD\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-24T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YEE\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-26T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YF\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-29T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 11\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.hosts, rhsmSchemas.errors],\n    transform = [rhsmTransformers.hosts]\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = false,\n    cancelId,\n    schema = [rhsmSchemas.guests, rhsmSchemas.errors],\n    transform = []\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', updatedId),\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 750\n * @api {get} /api/rhsm-subscriptions/v1/instances/products/:product_id Get RHSM instances table/inventory data\n * @apiDescription Retrieve instances table/inventory data.\n *\n * Reference [RHSM for instances table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"category\": \"physical\",\n *           \"billing_account_id\": \"xxxxx-xxxx-CCCCC-xxxx-xxxx10\",\n *           \"instance_id\": \"CCCCC-b344-4778-831c-CCCCCCC\",\n *           \"subscription_manager_id\": \"CCCCC-5b00-42fa-CCCCC-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              200,\n *              10,\n *              500.0000345678,\n *              200\n *           ],\n *           \"last_seen\": \"2022-12-03T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"virtual\",\n *           \"billing_account_id\": \"xxxxx-xxxx-FFFFF-xxxx-xxxx40\",\n *           \"instance_id\": \"FFFFF-b344-4778-831c-FFFFF\",\n *           \"subscription_manager_id\": \"FFFFF-5b00-42fa-FFFFF-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              200,\n *              10,\n *              500.0000345678,\n *              200\n *           ],\n *           \"last_seen\": \"2022-10-03T00:00:00Z\"\n *         },\n *         {\n *           \"number_of_guests\": 70,\n *           \"category\": \"cloud\",\n *           \"billing_provider\": \"red hat\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx01\",\n *           \"instance_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"display_name\": \"rhv.example.com\",\n *           \"measurements\": [\n *              42,\n *              10,\n *              0.000003563,\n *              1\n *           ],\n *           \"last_seen\": \"2022-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"cloud\",\n *           \"billing_provider\": \"azure\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx02\",\n *           \"instance_id\": \"XXXXXX-b344-4778-831c-XXXXXXXX\",\n *           \"subscription_manager_id\": \"XXXXXX-5b00-42fa-XXXX-75801d45cc6d\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"measurements\": [\n *              20,\n *              100,\n *              null,\n *              1000\n *           ],\n *           \"last_seen\": \"2022-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"physical\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx03\",\n *           \"instance_id\": \"BBBBB-b344-4778-831c-BBBBBBB\",\n *           \"subscription_manager_id\": \"BBBBB-5b00-42fa-BBBBB-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              4000,\n *              50,\n *              10000.0000345678,\n *              3000\n *           ],\n *           \"last_seen\": \"2022-04-03T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 5,\n *         \"measurements\": [\n *           \"Instance-hours\",\n *           \"Sockets\",\n *           \"Storage-gibibyte-months\",\n *           \"Transfer-gibibytes\"\n *         ],\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"Premium\",\n *         \"usage\": \"Production\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API instances data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getInstancesInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.instances, rhsmSchemas.errors],\n    transform = [rhsmTransformers.instances]\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_INSTANCES}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 0\n * @api {get} /api/rhsm-subscriptions/v1/subscriptions/products/:product_id Get RHSM subscriptions table/inventory data\n * @apiDescription Retrieve subscriptions table/inventory data.\n *\n * Reference [RHSM for subscriptions table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"sku\": \"RH00011\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)\",\n *           \"billing_provider\": \"red hat\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" },\n *              { \"id\": \"ipsum\", \"number\": \"1234567890\" },\n *              { \"id\": \"lorem\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 1,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"sku\": \"RH00010\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server\",\n *           \"billing_provider\": \"azure\",\n *           \"service_level\": \"Self-Support\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [],\n *           \"next_event_date\": \"2020-04-02T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 15,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"sku\": \"RH00009\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium\",\n *           \"billing_provider\": \"Unknown\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription End\",\n *           \"quantity\": 3000,\n *           \"physical_capacity\": 2,\n *           \"virtual_capacity\": 2,\n *           \"total_capacity\": 4,\n *           \"uom\": \"Cores\",\n *           \"has_infinite_quantity\": false\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3,\n *         \"subscription_type\": \"On-demand\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API subscriptions data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getSubscriptionsInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.subscriptions, rhsmSchemas.errors],\n    transform = []\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_SUBSCRIPTIONS}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\nconst rhsmServices = {\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsm/rhsmServices';\nimport { generateChartIds } from '../../components/graphCard/graphCardHelpers';\n\n/**\n * Get a RHSM response from multiple Tally, or Capacity, IDs and metrics.\n *\n * @param {object|Array} idMetric An object, or an Array of objects, in the form of { id: PRODUCT_ID, metric: METRIC_ID, isCapacity: boolean }\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphMetrics =\n  (idMetric = {}, query = {}, options = {}) =>\n  dispatch => {\n    const { cancelId = 'graphTally' } = options;\n    const multiMetric = (Array.isArray(idMetric) && idMetric) || [idMetric];\n    const multiDispatch = [];\n\n    multiMetric.forEach(({ id, metric, isCapacity, query: metricQuery }) => {\n      const methodService = isCapacity ? rhsmServices.getGraphCapacity : rhsmServices.getGraphTally;\n      const methodType = isCapacity ? rhsmTypes.GET_GRAPH_CAPACITY_RHSM : rhsmTypes.GET_GRAPH_TALLY_RHSM;\n      const methodCancelId = isCapacity ? 'graphCapacity' : cancelId;\n      const generatedId = generateChartIds({ isCapacity, metric, productId: id, query: metricQuery });\n\n      multiDispatch.push({\n        type: methodType,\n        payload: methodService(\n          [id, metric],\n          { ...query, ...metricQuery },\n          {\n            cancelId: `${methodCancelId}_${generatedId}`\n          }\n        ),\n        meta: {\n          id: generatedId,\n          query: { ...query, ...metricQuery },\n          notifications: {}\n        }\n      });\n    });\n\n    return Promise.all(dispatch(multiDispatch));\n  };\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n      payload: rhsmServices.getHostsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n      payload: rhsmServices.getHostsInventoryGuests(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get an instances response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getInstancesInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM,\n      payload: rhsmServices.getInstancesInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a RHSM response from message reporting.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getMessageReports =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM,\n      payload: rhsmServices.getGraphReports(id, query, { cancelId: 'messageReport' }),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a subscriptions response from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getSubscriptionsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM,\n      payload: rhsmServices.getSubscriptionsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\nconst rhsmActions = {\n  getGraphMetrics,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n\nexport {\n  rhsmActions as default,\n  rhsmActions,\n  getGraphMetrics,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'iso-639-1';\nimport { serviceCall } from '../config';\nimport { helpers } from '../../common';\n\n/**\n * ToDo: Review moving the getLocale function under platformServices.\n * Also review using window.navigator.language as the primary pull for language.\n */\n/**\n * Return a browser locale, or fallback towards the platform locale cookie\n *\n * @returns {Promise<*>}\n */\nconst getLocale = () => {\n  const defaultLang = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n  const parseLang = value => {\n    const key = (value && LocaleCode.getName(value.split('-')[0])) || null;\n    return (key && { value, key }) || undefined;\n  };\n\n  return serviceCall({\n    url: async () => {\n      const cookieLang = await (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace(\n        '_',\n        '-'\n      );\n\n      return parseLang(cookieLang) || defaultLang;\n    }\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = (options = {}) => {\n  const { cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport { userServices as default, userServices, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/user/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_LOCALE,\n    payload: userServices.getLocale()\n  });\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn =\n  (query = {}) =>\n  dispatch =>\n    dispatch({\n      type: userTypes.UPDATE_USER_OPTIN,\n      payload: userServices.updateAccountOptIn(query),\n      meta: {\n        query,\n        notifications: {\n          rejected: {\n            variant: 'danger',\n            title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsErrorDescription'),\n            dismissable: true\n          },\n          fulfilled: {\n            variant: 'success',\n            title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsSuccessDescription'),\n            dismissable: true,\n            autoDismiss: false\n          }\n        }\n      }\n    });\n\nconst userActions = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport { userActions as default, userActions, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}, tally: {}, capacity: {}}}\n */\nconst initialState = {\n  capacity: {},\n  legend: {},\n  reportCapacity: {},\n  tally: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          [action.id]: action.value\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'capacity', type: rhsmTypes.GET_GRAPH_CAPACITY_RHSM },\n          { ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM },\n          { ref: 'tally', type: rhsmTypes.GET_GRAPH_TALLY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { inventoryTypes } from '../types';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{subscriptionsInventory: {}, instancesInventory: {}, tabs: {}, hostsInventory: {}, hostsGuests: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {},\n  instancesInventory: {},\n  subscriptionsInventory: {},\n  tabs: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system and subscriptions inventory to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inventoryTypes.SET_INVENTORY_TAB:\n      return reduxHelpers.setStateProp(\n        'tabs',\n        {\n          ...action.tabs\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case inventoryTypes.CLEAR_INVENTORY_GUESTS:\n      return reduxHelpers.setStateProp(\n        'hostsGuests',\n        {\n          [action.id]: {}\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n          { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM },\n          { ref: 'instancesInventory', type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM },\n          { ref: 'subscriptionsInventory', type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{report: {}}}\n */\nconst initialState = {\n  report: {}\n};\n\n/**\n * Generated daily observer/reducer for report to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst messagesReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [{ ref: 'report', type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM }],\n    state,\n    action\n  );\n\nmessagesReducer.initialState = initialState;\n\nexport { messagesReducer as default, initialState, messagesReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, platformTypes, userTypes } from '../types';\nimport { rhsmConstants } from '../../services/rhsm/rhsmConstants';\nimport { reduxHelpers } from '../common';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{auth: {}, optin: {}, locale: null, errors: {}}}\n */\nconst initialState = {\n  auth: {},\n  errors: {},\n  locale: {},\n  optin: {}\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(reduxHelpers.getDataFromResults(action), [rhsmConstants.RHSM_API_RESPONSE_ERRORS], []);\n\n        return reduxHelpers.setStateProp(\n          'errors',\n          {\n            error: true,\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            data: errorCodes.map(value => value[rhsmConstants.RHSM_API_RESPONSE_ERRORS_TYPES.CODE]),\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'locale', type: userTypes.USER_LOCALE },\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'auth', type: platformTypes.PLATFORM_USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { productConfig } from '../../config';\nimport { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphTallyQuery: {}, inventoryHostsQuery: {}, inventorySubscriptionsQuery: {}, query: {},\n *     inventoryGuestsQuery: {}}}\n */\nconst initialState = {\n  query: {},\n  graphTallyQuery: {},\n  inventoryGuestsQuery: {},\n  inventoryHostsQuery: {},\n  inventorySubscriptionsQuery: {},\n  product: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST:\n      const updateResetQueries = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n\n          delete productQuery[RHSM_API_QUERY_TYPES.DIRECTION];\n          delete productQuery[RHSM_API_QUERY_TYPES.SORT];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateResetQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateResetQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updateClearQueries = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateClearQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateClearQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST:\n      const updateClearGuestQuery = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryGuestsQuery: updateClearGuestQuery(state.inventoryGuestsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [action.filter]: action.value\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'graphTallyQuery',\n        {\n          [action.viewId]: {\n            ...state.graphTallyQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.START_DATE]: action[RHSM_API_QUERY_TYPES.START_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.END_DATE]: action[RHSM_API_QUERY_TYPES.END_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.BILLING_PROVIDER]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: action[RHSM_API_QUERY_TYPES.BILLING_PROVIDER]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: action[RHSM_API_QUERY_TYPES.DISPLAY_NAME]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.app.SET_PRODUCT:\n      return reduxHelpers.setStateProp(\n        'product',\n        {\n          config: action.config\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport messagesReducer from './messagesReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  messages: messagesReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  messagesReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { platformConstants as platformApiTypes } from '../../services/platform/platformConstants';\n\n/**\n * Modify actions' payload for privacy.\n *\n * @param {object} action\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeActionHeaders = ({ payload, ...action }) => {\n  if (payload) {\n    let updatedPayload = { ...payload, headers: {} };\n\n    if (Array.isArray(payload)) {\n      updatedPayload = payload.map(({ headers, ...obj }) => ({ ...obj, headers: {} }));\n    }\n\n    return { payload: updatedPayload, ...action };\n  }\n\n  return { ...action };\n};\n\n/**\n * Modify actions' payload data for privacy.\n *\n * @param {object} action\n * @param {string} action.type\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeData = ({ type, payload, ...action }) => {\n  const removeUserIdentity = obj => {\n    if (obj?.data?.user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]) {\n      return {\n        ...obj,\n        data: {\n          ...obj.data,\n          user: {\n            ...obj.data.user,\n            [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]: {\n              ...obj.data.user[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY],\n              [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]: {}\n            }\n          }\n        }\n      };\n    }\n\n    return undefined;\n  };\n\n  const updatedPayload = removeUserIdentity(payload) || payload;\n  const updatedAction = removeUserIdentity(action) || action;\n\n  if (updatedPayload) {\n    return { type, payload: updatedPayload, ...updatedAction };\n  }\n\n  return { type, ...updatedAction };\n};\n\n/**\n * Return existing sessionStorage log.\n *\n * @param {string} id\n * @param {number} limit\n * @returns {Array}\n */\nconst getActions = (id, limit) => {\n  const { sessionStorage } = window;\n  const item = sessionStorage.getItem(id);\n  let parsedItems = (item && (JSON.parse(item) || {})?.actions) || [];\n\n  if (parsedItems?.length && limit > 0) {\n    parsedItems = parsedItems.slice(limit * -1);\n  }\n\n  return parsedItems;\n};\n\n/**\n * Store actions against an id in sessionStorage.\n *\n * @param {object} action\n * @param {object} config\n * @param {number} config.id\n * @param {number} config.limit\n */\nconst recordAction = (action, { id, limit, ...config }) => {\n  const { navigator, sessionStorage } = window;\n  const items = getActions(id, limit) || [];\n  const priorItem = items[items.length - 1];\n  const updatedAction = sanitizeData(sanitizeActionHeaders(action));\n  const actionObj = {\n    diff: 0,\n    timestamp: Date.now(),\n    action: updatedAction\n  };\n\n  if (priorItem && priorItem.timestamp) {\n    actionObj.diff = actionObj.timestamp - priorItem.timestamp;\n  }\n\n  items.push(actionObj);\n  sessionStorage.setItem(\n    id,\n    JSON.stringify({\n      browser: navigator.userAgent,\n      timestamp: new Date().toLocaleString(),\n      ...config,\n      actions: items\n    })\n  );\n};\n\n/**\n * Expose settings and record middleware.\n *\n * @param {object} config\n * @returns {Function}\n */\nconst actionRecordMiddleware =\n  (config = {}) =>\n  () =>\n  next =>\n  action => {\n    recordAction(action, {\n      id: 'actionRecordMiddleware/v1',\n      limit: 100,\n      ...config\n    });\n\n    return next(action);\n  };\n\nexport { actionRecordMiddleware as default, actionRecordMiddleware };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { actionRecordMiddleware } from './actionRecordMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  actionRecordMiddleware({\n    id: process.env.REACT_APP_UI_LOGGER_ID,\n    app: { version: process.env.REACT_APP_UI_VERSION }\n  }),\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\nconst SET_PRODUCT = 'SET_PRODUCT';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX,\n  SET_PRODUCT\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX, SET_PRODUCT };\n","const SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","const CLEAR_INVENTORY_GUESTS = 'CLEAR_INVENTORY_GUESTS';\nconst SET_INVENTORY_TAB = 'SET_INVENTORY_TAB';\n\n/**\n * Inventory action, reducer types.\n *\n * @type {{CLEAR_INVENTORY_GUESTS: string, SET_INVENTORY_TAB: string}}\n */\nconst inventoryTypes = {\n  CLEAR_INVENTORY_GUESTS,\n  SET_INVENTORY_TAB\n};\n\nexport { inventoryTypes as default, inventoryTypes, CLEAR_INVENTORY_GUESTS, SET_INVENTORY_TAB };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_GLOBAL_FILTER_HIDE = 'PLATFORM_GLOBAL_FILTER_HIDE';\nconst PLATFORM_USER_AUTH = 'PLATFORM_USER_AUTH';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_USER_AUTH: string, PLATFORM_GLOBAL_FILTER_HIDE: string, PLATFORM_CLEAR_NOTIFICATIONS: string,\n *     PLATFORM_ADD_NOTIFICATION: string, PLATFORM_REMOVE_NOTIFICATION: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_USER_AUTH\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_USER_AUTH\n};\n","import { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\n\nconst SET_QUERY = 'SET_QUERY';\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\nconst SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST = 'SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST';\nconst SET_QUERY_RESET_INVENTORY_LIST = 'SET_QUERY_RESET_INVENTORY_LIST';\n\n/**\n * Query types associated with across ALL queries.\n */\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.BILLING_PROVIDER}`,\n  [RHSM_API_QUERY_TYPES.END_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.END_DATE}`,\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.START_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.START_DATE}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\n/**\n * Inventory query types associated with only GUESTS' queries.\n */\nconst SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Inventory query types associated with only HOSTS' and INSTANCES' queries.\n */\nconst SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DISPLAY_NAME}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Inventory query types associated with only SUBSCRIPTIONS' queries.\n */\nconst SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES: object, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES: object, SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string,\n *     SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES: object, SET_QUERY: string, SET_QUERY_RESET_INVENTORY_LIST: string,\n *     SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST: string}}\n */\nconst queryTypes = {\n  SET_QUERY,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_LOCALE: string, GET_USER_OPTIN: string,\n *     UPDATE_USER_OPTIN: string, DELETE_USER_OPTIN: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { inventoryTypes } from './inventoryTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  inventory: inventoryTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  inventoryTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","const SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","const GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_GRAPH_TALLY_RHSM = 'GET_GRAPH_TALLY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\nconst GET_INSTANCES_INVENTORY_RHSM = 'GET_INSTANCES_INVENTORY_RHSM';\nconst GET_MESSAGE_REPORTS_RHSM = 'GET_MESSAGE_REPORTS_RHSM';\nconst GET_SUBSCRIPTIONS_INVENTORY_RHSM = 'GET_SUBSCRIPTIONS_INVENTORY_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_MESSAGE_REPORTS_RHSM: string, GET_HOSTS_INVENTORY_GUESTS_RHSM: string,\n *     GET_GRAPH_CAPACITY_RHSM: string, GET_SUBSCRIPTIONS_INVENTORY_RHSM: string, GET_HOSTS_INVENTORY_RHSM: string,\n *     GET_INSTANCES_INVENTORY_RHSM: string, GET_GRAPH_TALLY_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n","/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string, RESOURCE_DEFS: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\n// ToDo: clean up this app name piece, these facets come through the helpers and src/config/rbac.json\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\nconst platformConstants = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformConstants as default,\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","/**\n * RHSM path IDs for product RHEL variants.\n *\n * @type {{RHEL_ARM: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string, RHEL_X86: string}}\n */\nconst RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES = {\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86'\n};\n\n/**\n * RHSM path IDs for product Satellite variants.\n *\n * @type {{SATELLITE_SERVER: string, SATELLITE_CAPSULE: string}}\n */\nconst RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES = {\n  SATELLITE_CAPSULE: 'Satellite Capsule',\n  SATELLITE_SERVER: 'Satellite Server'\n};\n\n/**\n * RHSM path IDs for products.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string, RHODS: string, RHOSAK: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string,\n *     RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHACS: string,\n *     RHEL_IBM_POWER: string}}\n */\nconst RHSM_API_PATH_PRODUCT_TYPES = {\n  ...RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES,\n  ...RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHACS: 'rhacs',\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHODS: 'rhods',\n  RHOSAK: 'rhosak',\n  OPENSHIFT: 'OpenShift Container Platform',\n  OPENSHIFT_METRICS: 'OpenShift-metrics',\n  OPENSHIFT_DEDICATED_METRICS: 'OpenShift-dedicated-metrics',\n  SATELLITE: 'Satellite'\n};\n\n/**\n * RHSM path IDs for metrics.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     TRANSFER_GIBIBYTES: string, CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string}}\n */\nconst RHSM_API_PATH_METRIC_TYPES = {\n  CORES: 'Cores',\n  SOCKETS: 'Sockets',\n  CORE_SECONDS: 'Core-seconds',\n  INSTANCE_HOURS: 'Instance-hours',\n  STORAGE_GIBIBYTES: 'Storage-gibibytes',\n  STORAGE_GIBIBYTE_MONTHS: 'Storage-gibibyte-months',\n  TRANSFER_GIBIBYTES: 'Transfer-gibibytes'\n};\n\n/**\n * RHSM response data type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_DATA = 'data';\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response general meta types.\n *\n * @type {{PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  PRODUCT: 'product'\n};\n\n/**\n * RHSM response errors type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERRORS = 'errors';\n\n/**\n * RHSM response errors types.\n *\n * @type {{CODE: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_TYPES = {\n  CODE: 'code'\n};\n\n/**\n * RHSM response error codes.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response Hosts DATA types.\n *\n * @type {{MEASUREMENT_TYPE: string, CORES: string, CORE_HOURS: string, HARDWARE_TYPE: string,\n *     SUBSCRIPTION_MANAGER_ID: string, INSTANCE_HOURS: string, SOCKETS: string, INVENTORY_ID: string, NUMBER_OF_GUESTS: string,\n *     DISPLAY_NAME: string, CLOUD_PROVIDER: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_HOSTS_DATA_TYPES = {\n  CORE_HOURS: 'core_hours',\n  CORES: 'cores',\n  CLOUD_PROVIDER: 'cloud_provider',\n  DISPLAY_NAME: 'display_name',\n  HARDWARE_TYPE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT_TYPE: 'measurement_type',\n  NUMBER_OF_GUESTS: 'number_of_guests',\n  SOCKETS: 'sockets',\n  SUBSCRIPTION_MANAGER_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response Hosts META types.\n *\n * @type {{PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_HOSTS_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES\n};\n\n/**\n * FixMe: Appears we combined future guests used with instances. Investigate moving \"INVENTORY_ID\" and \"SUBSCRIPTION_MANAGER_ID\".\n * They're current associated with \"hosts\" guests. Need to also determine if this is something that needs to be added to \"instances\"\n * or if keeping them added to guests only is enough.\n */\n/**\n * RHSM response Instance DATA types.\n *\n * @type {{MEASUREMENTS: string, BILLING_ACCOUNT_ID: string, CATEGORY: string, SUBSCRIPTION_MANAGER_ID: string,\n *     INSTANCE_ID: string, NUMBER_OF_GUESTS: string, BILLING_PROVIDER: string, DISPLAY_NAME: string, CLOUD_PROVIDER: string,\n *     LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_DATA_TYPES = {\n  BILLING_PROVIDER: 'billing_provider',\n  BILLING_ACCOUNT_ID: 'billing_account_id',\n  CLOUD_PROVIDER: 'cloud_provider',\n  CATEGORY: 'category',\n  DISPLAY_NAME: 'display_name',\n  INSTANCE_ID: 'instance_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENTS: 'measurements',\n  NUMBER_OF_GUESTS: 'number_of_guests',\n  SUBSCRIPTION_MANAGER_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response Instances META types.\n *\n * @type {{MEASUREMENTS: string, PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  MEASUREMENTS: 'measurements'\n};\n\n/**\n * RHSM response Subscriptions DATA types.\n *\n * @type {{BILLING_ACCOUNT_ID: string, QUANTITY: string, SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string,\n *     NUMBER_OF_GUESTS: string, HAS_INFINITE_QUANTITY: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string, DISPLAY_NAME: string, MEASUREMENTS: string, UOM: string, CATEGORY: string,\n *     NEXT_EVENT_DATE: string, BILLING_PROVIDER: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES = {\n  ...RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  HAS_INFINITE_QUANTITY: 'has_infinite_quantity',\n  NEXT_EVENT_DATE: 'next_event_date',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Subscriptions META types.\n *\n * @type {{PRODUCT: string, SUBSCRIPTION_TYPE: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  SUBSCRIPTION_TYPE: 'subscription_type'\n};\n\n/**\n * RHSM response Tally DATA types.\n *\n * @type {{DATE: string, HAS_DATA: string, VALUE: string, HAS_INFINITE_QUANTITY: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES = {\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_DATA: 'has_data',\n  HAS_INFINITE_QUANTITY: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response Tally META types.\n *\n * @type {{TOTAL_MONTHLY: string, DATE: string, PRODUCT: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string, VALUE: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data',\n  METRIC_ID: 'metric_id',\n  TOTAL_MONTHLY: 'total_monthly'\n};\n\n/**\n * RHSM response, query parameters for GRANULARITY.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_RESPONSE_GRANULARITY_TYPES = {\n  DAILY: 'Daily',\n  WEEKLY: 'Weekly',\n  MONTHLY: 'Monthly',\n  QUARTERLY: 'Quarterly'\n};\n\n/**\n * ToDo: Activate available provider type as it becomes available 202205\n * (just uncomment)\n */\n/**\n * RHSM response, query parameters for BILLING_PROVIDER\n *\n * @type {{AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string, ORACLE: string}}\n */\nconst RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES = {\n  RED_HAT: 'red hat',\n  AWS: 'aws'\n  // GCP: 'gcp',\n  // AZURE: 'azure',\n  // ORACLE: 'oracle',\n  // NONE: ''\n};\n\n/**\n * RHSM response, query parameters for SLA.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_RESPONSE_SLA_TYPES = {\n  PREMIUM: 'Premium',\n  STANDARD: 'Standard',\n  SELF: 'Self-Support',\n  NONE: ''\n};\n\n/**\n * RHSM response, general parameters for subscription types\n *\n * @type {{ANNUAL: string, ON_DEMAND: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTION_TYPES = {\n  ANNUAL: 'Annual',\n  ON_DEMAND: 'On-demand'\n};\n\n/**\n * RHSM response, query parameters for UOM.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_RESPONSE_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM response, query parameters for USAGE.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_RESPONSE_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\n/**\n * RHSM query/search parameter CATEGORY type values for TALLY/CAPACITY.\n *\n * @type {{CLOUD: string, PHYSICAL: string, HYPERVISOR: string, VIRTUAL: string}}\n */\nconst RHSM_API_QUERY_CATEGORY_TYPES = {\n  CLOUD: 'cloud',\n  HYPERVISOR: 'hypervisor',\n  PHYSICAL: 'physical',\n  VIRTUAL: 'virtual'\n};\n\nconst RHSM_API_QUERY_GRANULARITY_TYPES = RHSM_API_RESPONSE_GRANULARITY_TYPES;\n\n/**\n * ToDo: Remove RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES once hosts is fully deprecated\n * These sort params are focused on the hosts api.\n */\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, INSTANCE_HOURS: string, SOCKETS: string, MEASUREMENT: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES = {\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  HARDWARE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for general inventory displays.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, CATEGORY: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     NUMBER_OF_GUESTS: string, TRANSFER_GIBIBYTES: string, BILLING_PROVIDER: string, CORE_SECONDS: string,\n *     STORAGE_GIBIBYTE_MONTHS: string, LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_TYPES = {\n  ...RHSM_API_PATH_METRIC_TYPES,\n  BILLING_PROVIDER: 'billing_provider',\n  CATEGORY: 'category',\n  LAST_SEEN: 'last_seen',\n  NAME: 'display_name',\n  NUMBER_OF_GUESTS: 'number_of_guests'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string,\n *     TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES = {\n  NEXT_EVENT_DATE: 'next_event_date',\n  NEXT_EVENT_TYPE: 'next_event_type',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SKU: 'sku',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  USAGE: 'usage'\n};\n\nconst RHSM_API_QUERY_BILLING_PROVIDER_TYPES = RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES;\n\nconst RHSM_API_QUERY_SLA_TYPES = RHSM_API_RESPONSE_SLA_TYPES;\n\nconst RHSM_API_QUERY_UOM_TYPES = RHSM_API_RESPONSE_UOM_TYPES;\n\nconst RHSM_API_QUERY_USAGE_TYPES = RHSM_API_RESPONSE_USAGE_TYPES;\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{BILLING_ACCOUNT_ID: string, DIRECTION: string, END_DATE: string, SLA: string, LIMIT: string,\n *     START_DATE: string, VARIANT: string, DISPLAY_NAME: string, UOM: string, USAGE: string, CATEGORY: string,\n *     ARCHITECTURE: string, SORT: string, OFFSET: string, BILLING_PROVIDER: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  ARCHITECTURE: 'architecture',\n  BILLING_PROVIDER: 'billing_provider',\n  BILLING_ACCOUNT_ID: 'billing_account_id',\n  CATEGORY: 'category',\n  DIRECTION: 'dir',\n  DISPLAY_NAME: 'display_name_contains',\n  END_DATE: 'ending',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  START_DATE: 'beginning',\n  UOM: 'uom',\n  USAGE: 'usage',\n  VARIANT: 'variant'\n};\n\n/**\n * RHSM query parameter options for TALLY, CAPACITY endpoints.\n *\n * @type {{GRANULARITY: string, USAGE: string, CATEGORY: string, END_DATE: string, SLA: string, START_DATE: string,\n *     BILLING_PROVIDER: string}}\n */\nconst RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES = {\n  ARCHITECTURE: 'architecture',\n  BILLING_PROVIDER: 'billing_provider',\n  CATEGORY: 'category',\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage',\n  VARIANT: 'variant'\n};\n\n/**\n * Aggregate all query set types.\n *\n * @type {{UOM: string, GRANULARITY: string, USAGE: string, DIRECTION: string, SORT: string, END_DATE: string,\n *     OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string}}\n */\nconst RHSM_API_QUERY_SET_TYPES = {\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES\n};\n\n/**\n * Product display types.\n *\n * @type {{CAPACITY: string, LEGACY: string, DUAL_AXES: string, PARTIAL: string, HOURLY: string}}\n */\nconst RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES = {\n  DUAL_AXES: 'dual-axes',\n  HOURLY: 'hourly',\n  LEGACY: 'legacy',\n  PARTIAL: 'partial',\n  CAPACITY: 'capacity'\n};\n\n/**\n * RHSM constants.\n *\n * @type {{RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, CATEGORY: string, END_DATE: string,\n *     SLA: string, START_DATE: string, BILLING_PROVIDER: string}, RHSM_API_RESPONSE_DATA: string,\n *     RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES: {PRODUCT: string, SUBSCRIPTION_TYPE: string, COUNT: string},\n *     RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES: {SATELLITE_SERVER: string, SATELLITE_CAPSULE: string},\n *     RHSM_API_PATH_METRIC_TYPES: {CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     TRANSFER_GIBIBYTES: string, CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string},\n *     RHSM_API_RESPONSE_INSTANCES_META_TYPES: {MEASUREMENTS: string, PRODUCT: string, COUNT: string},\n *     RHSM_API_RESPONSE_INSTANCES_DATA_TYPES: {MEASUREMENTS: string, BILLING_ACCOUNT_ID: string, CATEGORY: string,\n *     SUBSCRIPTION_MANAGER_ID: string, INSTANCE_ID: string, NUMBER_OF_GUESTS: string, BILLING_PROVIDER: string,\n *     DISPLAY_NAME: string, CLOUD_PROVIDER: string, LAST_SEEN: string}, RHSM_API_RESPONSE_SLA_TYPES: {PREMIUM: string,\n *     SELF: string, NONE: string, STANDARD: string}, RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES: {RHEL_ARM: string,\n *     RHEL_IBM_Z: string, RHEL_IBM_POWER: string, RHEL_X86: string}, RHSM_API_RESPONSE_HOSTS_META_TYPES: {PRODUCT: string,\n *     COUNT: string}, RHSM_API_RESPONSE_META_TYPES: {PRODUCT: string, COUNT: string},\n *     RHSM_API_RESPONSE_ERRORS_CODE_TYPES: {GENERIC: string, OPTIN: string}, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string,\n *     QUARTERLY: string, DAILY: string, MONTHLY: string}, RHSM_API_RESPONSE_UOM_TYPES: {CORES: string, SOCKETS: string},\n *     RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES: {BILLING_ACCOUNT_ID: string, QUANTITY: string, SUBSCRIPTION_MANAGER_ID: string,\n *     INVENTORY_ID: string, NUMBER_OF_GUESTS: string, HAS_INFINITE_QUANTITY: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string, DISPLAY_NAME: string, MEASUREMENTS: string, UOM: string, CATEGORY: string, NEXT_EVENT_DATE: string,\n *     BILLING_PROVIDER: string, LAST_SEEN: string}, RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES: {ASCENDING: string,\n *     DESCENDING: string}, RHSM_API_RESPONSE_SUBSCRIPTION_TYPES: {ANNUAL: string, ON_DEMAND: string},\n *     RHSM_API_QUERY_INVENTORY_SORT_TYPES: {CORES: string, STORAGE_GIBIBYTES: string, CATEGORY: string, SOCKETS: string,\n *     INSTANCE_HOURS: string, NUMBER_OF_GUESTS: string, TRANSFER_GIBIBYTES: string, BILLING_PROVIDER: string, CORE_SECONDS: string,\n *     STORAGE_GIBIBYTE_MONTHS: string, LAST_SEEN: string, NAME: string}, RHSM_API_PATH_PRODUCT_TYPES: {RHEL_ARM: string,\n *     OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string, RHODS: string, RHOSAK: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string,\n *     RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHACS: string,\n *     RHEL_IBM_POWER: string}, RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES: {AZURE: string, GCP: string, RED_HAT: string, NONE: string,\n *     AWS: string, ORACLE: string}, RHSM_API_RESPONSE_ERRORS_TYPES: {CODE: string},\n *     RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES: {DATE: string, HAS_DATA: string, VALUE: string, HAS_INFINITE_QUANTITY: string},\n *     RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES: {TOTAL_MONTHLY: string, DATE: string, PRODUCT: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string, VALUE: string},\n *     RHSM_API_QUERY_BILLING_PROVIDER_TYPES: {AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string, ORACLE: string},\n *     RHSM_API_QUERY_CATEGORY_TYPES: {CLOUD: string, PHYSICAL: string, HYPERVISOR: string, VIRTUAL: string},\n *     RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_SET_INVENTORY_TYPES: {BILLING_ACCOUNT_ID: string, DIRECTION: string, END_DATE: string, SLA: string,\n *     LIMIT: string, START_DATE: string, VARIANT: string, DISPLAY_NAME: string, UOM: string, USAGE: string, CATEGORY: string,\n *     ARCHITECTURE: string, SORT: string, OFFSET: string, BILLING_PROVIDER: string},\n *     RHSM_API_RESPONSE_HOSTS_DATA_TYPES: {MEASUREMENT_TYPE: string, CORES: string, CORE_HOURS: string, HARDWARE_TYPE: string,\n *     SUBSCRIPTION_MANAGER_ID: string, INSTANCE_HOURS: string, SOCKETS: string, INVENTORY_ID: string, NUMBER_OF_GUESTS: string,\n *     DISPLAY_NAME: string, CLOUD_PROVIDER: string, LAST_SEEN: string}, RHSM_API_RESPONSE_ERRORS: string,\n *     RHSM_API_QUERY_UOM_TYPES: {CORES: string, SOCKETS: string}, RHSM_API_RESPONSE_META: string,\n *     RHSM_API_RESPONSE_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *     RHSM_API_QUERY_SET_TYPES: {UOM: string, GRANULARITY: string, USAGE: string, DIRECTION: string, SORT: string, END_DATE: string,\n *     OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string},\n *     RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES: {QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string,\n *     NEXT_EVENT_DATE: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string},\n *     RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES: {CAPACITY: string, LEGACY: string, DUAL_AXES: string, PARTIAL: string, HOURLY: string},\n *     RHSM_API_RESPONSE_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string, INSTANCE_HOURS: string,\n *     SOCKETS: string, MEASUREMENT: string, LAST_SEEN: string, NAME: string}}}\n */\nconst rhsmConstants = {\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTION_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES\n};\n\nexport {\n  rhsmConstants as default,\n  rhsmConstants,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTION_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES\n};\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var map = {\n\t\"./authentication/authentication.js\": [\n\t\t67719\n\t],\n\t\"./authentication/authenticationContext.js\": [\n\t\t98944\n\t],\n\t\"./bannerMessages/bannerMessages.js\": [\n\t\t87585,\n\t\t1858,\n\t\t7585\n\t],\n\t\"./bannerMessages/bannerMessagesContext.js\": [\n\t\t31824,\n\t\t1858,\n\t\t1824\n\t],\n\t\"./chart/chart.js\": [\n\t\t60930\n\t],\n\t\"./chart/chartAxisLabel.js\": [\n\t\t76395\n\t],\n\t\"./chart/chartContext.js\": [\n\t\t98326\n\t],\n\t\"./chart/chartElements.js\": [\n\t\t54096\n\t],\n\t\"./chart/chartHelpers.js\": [\n\t\t61026\n\t],\n\t\"./chart/chartIcon.js\": [\n\t\t1138\n\t],\n\t\"./chart/chartLegend.js\": [\n\t\t52902\n\t],\n\t\"./chart/chartTooltip.js\": [\n\t\t78213\n\t],\n\t\"./form/checkbox.js\": [\n\t\t34467,\n\t\t4291,\n\t\t7235,\n\t\t2181,\n\t\t1302\n\t],\n\t\"./form/formHelpers.js\": [\n\t\t44044\n\t],\n\t\"./form/formState.js\": [\n\t\t90384,\n\t\t384\n\t],\n\t\"./form/select.js\": [\n\t\t49844\n\t],\n\t\"./form/textInput.js\": [\n\t\t18710,\n\t\t8710\n\t],\n\t\"./graphCard/graphCard.js\": [\n\t\t10608,\n\t\t1858,\n\t\t136,\n\t\t1799,\n\t\t5925\n\t],\n\t\"./graphCard/graphCardChart.js\": [\n\t\t91799,\n\t\t1858,\n\t\t136,\n\t\t1799,\n\t\t1339\n\t],\n\t\"./graphCard/graphCardChartLegend.js\": [\n\t\t64418,\n\t\t1858,\n\t\t136,\n\t\t4418\n\t],\n\t\"./graphCard/graphCardChartTitleTooltip.js\": [\n\t\t99171,\n\t\t1858,\n\t\t136,\n\t\t939\n\t],\n\t\"./graphCard/graphCardChartTooltip.js\": [\n\t\t44024,\n\t\t1858,\n\t\t4024\n\t],\n\t\"./graphCard/graphCardContext.js\": [\n\t\t25394,\n\t\t1858,\n\t\t136,\n\t\t5394\n\t],\n\t\"./graphCard/graphCardHelpers.js\": [\n\t\t78139\n\t],\n\t\"./graphCard/graphCardMetricTotals.js\": [\n\t\t29407,\n\t\t1858,\n\t\t136,\n\t\t9407\n\t],\n\t\"./i18n/i18n.js\": [\n\t\t83109\n\t],\n\t\"./i18n/i18nHelpers.js\": [\n\t\t32643\n\t],\n\t\"./inventoryCard/inventoryCard.js\": [\n\t\t57276,\n\t\t1858,\n\t\t5242,\n\t\t7276,\n\t\t2085\n\t],\n\t\"./inventoryCard/inventoryCardContext.js\": [\n\t\t42896,\n\t\t1858,\n\t\t2896\n\t],\n\t\"./inventoryCard/inventoryCardHelpers.js\": [\n\t\t12243,\n\t\t2243\n\t],\n\t\"./inventoryCard/inventoryCardHosts.js\": [\n\t\t83341,\n\t\t1858,\n\t\t5242,\n\t\t7276,\n\t\t895\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptions.js\": [\n\t\t16696,\n\t\t1858,\n\t\t5242,\n\t\t7276,\n\t\t9222\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptionsContext.js\": [\n\t\t62881,\n\t\t1858,\n\t\t2881\n\t],\n\t\"./inventoryGuests/inventoryGuests.js\": [\n\t\t15242,\n\t\t1858,\n\t\t5242\n\t],\n\t\"./inventoryGuests/inventoryGuestsContext.js\": [\n\t\t23385,\n\t\t1858,\n\t\t3385\n\t],\n\t\"./inventoryTabs/inventoryTab.js\": [\n\t\t80931,\n\t\t931\n\t],\n\t\"./inventoryTabs/inventoryTabs.js\": [\n\t\t69051,\n\t\t1858,\n\t\t9051\n\t],\n\t\"./loader/loader.js\": [\n\t\t1797\n\t],\n\t\"./messageView/messageView.js\": [\n\t\t79719\n\t],\n\t\"./minHeight/minHeight.js\": [\n\t\t91339,\n\t\t353\n\t],\n\t\"./optinView/optinView.js\": [\n\t\t649\n\t],\n\t\"./pageLayout/pageColumns.js\": [\n\t\t5937\n\t],\n\t\"./pageLayout/pageHeader.js\": [\n\t\t58816\n\t],\n\t\"./pageLayout/pageLayout.js\": [\n\t\t52422\n\t],\n\t\"./pageLayout/pageMessages.js\": [\n\t\t54803\n\t],\n\t\"./pageLayout/pageSection.js\": [\n\t\t99781\n\t],\n\t\"./pageLayout/pageToolbar.js\": [\n\t\t89484\n\t],\n\t\"./pagination/pagination.js\": [\n\t\t68900,\n\t\t8900\n\t],\n\t\"./pagination/paginationHelpers.js\": [\n\t\t65020,\n\t\t5020\n\t],\n\t\"./productView/productView.js\": [\n\t\t29175,\n\t\t1858,\n\t\t136,\n\t\t5242,\n\t\t7276,\n\t\t1799,\n\t\t3557\n\t],\n\t\"./productView/productViewContext.js\": [\n\t\t51858,\n\t\t1858\n\t],\n\t\"./productView/productViewMissing.js\": [\n\t\t91233,\n\t\t1233\n\t],\n\t\"./router/index.js\": [\n\t\t94976\n\t],\n\t\"./router/router.js\": [\n\t\t27097\n\t],\n\t\"./router/routerContext.js\": [\n\t\t43301\n\t],\n\t\"./router/routerHelpers.js\": [\n\t\t97712\n\t],\n\t\"./table/table.js\": [\n\t\t78697\n\t],\n\t\"./table/tableEmpty.js\": [\n\t\t30817\n\t],\n\t\"./table/tableSkeleton.js\": [\n\t\t62540\n\t],\n\t\"./tabs/tabs.js\": [\n\t\t70031,\n\t\t31\n\t],\n\t\"./toolbar/toolbar.js\": [\n\t\t92227,\n\t\t1858,\n\t\t136,\n\t\t2227\n\t],\n\t\"./toolbar/toolbarContext.js\": [\n\t\t83280,\n\t\t1858,\n\t\t136,\n\t\t3280\n\t],\n\t\"./toolbar/toolbarFieldArchitecture.js\": [\n\t\t32948,\n\t\t1858,\n\t\t2948\n\t],\n\t\"./toolbar/toolbarFieldBillingProvider.js\": [\n\t\t31663,\n\t\t1858,\n\t\t1663\n\t],\n\t\"./toolbar/toolbarFieldCategory.js\": [\n\t\t93597,\n\t\t1858,\n\t\t3597\n\t],\n\t\"./toolbar/toolbarFieldDisplayName.js\": [\n\t\t89517,\n\t\t1858,\n\t\t9517\n\t],\n\t\"./toolbar/toolbarFieldGranularity.js\": [\n\t\t2738,\n\t\t1858,\n\t\t2738\n\t],\n\t\"./toolbar/toolbarFieldRangedMonthly.js\": [\n\t\t65876,\n\t\t1858,\n\t\t5876\n\t],\n\t\"./toolbar/toolbarFieldSelectCategory.js\": [\n\t\t70136,\n\t\t1858,\n\t\t136\n\t],\n\t\"./toolbar/toolbarFieldSla.js\": [\n\t\t33267,\n\t\t1858,\n\t\t3267\n\t],\n\t\"./toolbar/toolbarFieldUom.js\": [\n\t\t74097,\n\t\t1858,\n\t\t4097\n\t],\n\t\"./toolbar/toolbarFieldUsage.js\": [\n\t\t49928,\n\t\t1858,\n\t\t9928\n\t],\n\t\"./toolbar/toolbarFieldVariant.js\": [\n\t\t22622,\n\t\t1858,\n\t\t2622\n\t],\n\t\"./tooltip/tooltip.js\": [\n\t\t3969\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 58908;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./product.openshiftContainer.js\": 74925,\n\t\"./product.openshiftDedicated.js\": 1816,\n\t\"./product.openshiftMetrics.js\": 33092,\n\t\"./product.rhacs.js\": 22624,\n\t\"./product.rhel.js\": 79326,\n\t\"./product.rhods.js\": 43016,\n\t\"./product.rhosak.js\": 85464,\n\t\"./product.satellite.js\": 36272\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 25264;"],"names":["module","exports","App","getLocale","useAliasDispatch","useDispatch","useAliasSelector","useSelector","dispatch","locale","user","data","value","platformNotifications","console","log","useMount","helpers","NotificationsPortal","I18n","key","Router","defaultProps","reduxActions","storeHooks","noop","Function","prototype","noopPromise","Promise","resolve","PROD_MODE","process","UI_WINDOW_ID","aggregatedError","errors","message","err","name","window","AggregateError","Error","Array","isArray","isEmulated","browserExpose","obj","options","limit","id","generateHash","anyValue","method","cryptoSha1","JSON","stringify","_isPlainObject","Object","entries","sort","a","b","localeCompare","toString","generateId","prefix","Math","ceil","random","isDate","date","call","isPromise","test","memo","func","cacheLimit","ized","cache","args","map","arg","keyIndex","indexOf","result","unshift","length","noopTranslate","components","updatedKey","updatedValue","keys","updatedComponents","numberDisplay","Number","isNaN","numbro","objFreeze","freeze","oIsFunction","hasOwnProp","hasOwnProperty","getOwnPropertyNames","forEach","prop","isFrozen","DEV_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_NOTIFICATIONS","UI_DISABLED_TABLE","UI_DISABLED_TABLE_HOSTS","UI_DISABLED_TABLE_INSTANCES","UI_DISABLED_TABLE_SUBSCRIPTIONS","UI_DISABLED_TOOLBAR","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_LEARN_MORE","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_LOGGER_FILE","UI_NAME","UI_PATH","UI_VERSION","getCurrentDate","moment","toDate","REACT_APP_DEBUG_DEFAULT_DATETIME","setRangedDateTime","subtract","measurement","endOfMeasurement","startDate","startOf","endDate","endOf","currentDateTime","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","rangedYearDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedMonthDateTime","month","currentYear","parseInt","year","keyDateTimeRanges","listDateTimeRanges","startDateUpdated","endDateUpdated","format","dateTime","titleYear","title","titleIndex","isNextYear","_title","toLowerCase","add","translate","context","push","reverse","isCurrent","current","undefined","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","timestampTimeFormats","timeLong","yearTimeLong","timeShort","yearTimeShort","timestampUTCTimeFormats","downloadData","fileName","fileType","reject","document","navigator","URL","blob","Blob","type","msSaveBlob","anchorTag","createElement","href","createObjectURL","style","display","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","error","debugLog","sessionStorage","replace","parse","getItem","Authentication","appName","children","isDisabled","t","useAliasGetAuthorization","useGetAuthorization","pending","authorized","errorCodes","errorStatus","isAuthorized","AuthenticationContext","MessageView","description","pageTitle","icon","BinocularsIcon","includes","rhsmConstants","OptinView","serviceName","routerHelpers","DEFAULT_CONTEXT","React","useAuthContext","useContext","authorizeUser","hideGlobalFilter","useChrome","useAliasChrome","useSelectorsResponse","useAliasSelectorsResponse","updateDocumentTitle","selector","auth","fulfilled","responses","app","status","useSession","useAliasAuthContext","session","Chart","chartLegend","chartTooltip","dataSets","padding","themeColor","xAxisChartLabel","yAxisChartLabel","xAxisFixLabelOverlap","xAxisLabelIncrement","xAxisTickFormat","yAxisTickFormat","xValueFormat","yValueFormat","useState","setContext","dataSetsToggle","setDataSetsToggle","containerRef","useRef","tooltipRef","chartWidth","target","width","height","dimensions","setDimensions","useEffect","isElementResize","ResizeObserver","element","removeObserver","handler","clientHeight","clientWidth","innerHeight","innerWidth","resizeObserver","observe","unobserve","addEventListener","removeEventListener","useResizeObserver","toggledDataSets","tooltipDataSetLookUp","maxX","maxY","individualMaxY","xAxisProps","yAxisProps","isMultiYAxis","chartElementsProps","domain","domainPadding","chartSettings","filter","chartHelpers","content","chartDomain","hasData","tickValues","bottom","left","right","top","updatedSettings","chartContainerRef","chartTooltipRef","ChartContext","className","ref","ChartElements","ChartLegend","chartAxisLabel","axis","index","x","y","text","xmlns","useChartContext","useToggleData","useAliasChartContext","contextDataSetsToggle","onHide","useCallback","prevState","onRevert","onToggle","updatedToggle","getIsToggled","chartElements","stackedChartElements","chartTypeDefaults","containerComponent","xAxis","yAxis","VictoryVoronoiCursorContainer","createContainer","TooltipLabelComponent","cursorDimension","voronoiDimension","labels","labelComponent","dx","dy","centerOffset","flyoutStyle","fill","stroke","voronoiPadding","values","mouseFollowTooltips","updatedXAxisProps","label","AxisLabelComponent","axisLabelComponent","C","animate","axisProps","updatedAxisProps","orientation","setChartElement","chartType","props","ChartTypeVariant","Component","component","elements","stackedElements","duration","ChartArea","onLoad","interpolation","ChartLine","ChartThreshold","area","line","threshold","generateMaxXY","individualDataSetsMaxY","combinedDataSetMaxX","combinedDataSetsMaxY","isStacked","max","dataSetMaxY","generateDomains","updatedChartDomain","updatedPadding","generatedDomain","floored","pow","floor","log10","generateElementsProps","chartTypeVariant","elementsById","stackedElementsById","dataSet","strokeDasharray","strokeWidth","dataColorStroke","chartElementProps","themeVariant","datum","xValue","yValue","isMultiAxis","updatedProps","generateTooltipData","itemsByKey","color","_cloneDeep","mockDatum","tooltip","generateXAxisProps","xAxisPropDefaults","reduce","acc","concat","tickFormat","tick","xAxisLabel","tickIndex","previousItem","nextItem","item","generateYAxisProps","yAxisPropDefaults","tickLabels","updatedMaxY","generateAxisProps","xAxisDataSet","fixLabelOverlap","dependentAxis","showGrid","yAxisDataSets","yAxisUseDataSet","xAxisUseDataSet","slice","getSize","size","parseFloat","ChartIcon","symbol","svgProps","iconProps","fontProps","fontSize","emSvgSize","viewBox","role","x1","y1","x2","y2","EyeIcon","EyeSlashIcon","SquareIcon","setIcon","legendProps","chart","hide","revert","toggle","isToggled","marginLeft","marginRight","minChartWidth","getXCoordinate","tooltipWidth","minWidth","getYCoordinate","tooltipHeight","updatedMultiplier","heightMultiplier","tailPosition","containerBounds","querySelector","getBoundingClientRect","tooltipBounds","isOutsideGraphBottom","isOutsideGraphLeft","isOutsideGraphRight","isOutsideGraphTop","updatedClassName","createMockEvent","event","persistEvent","checked","currentTarget","keyCode","persist","doesNotHaveMinimumCharacters","characters","formHelpers","SplitButtonVariant","action","checkbox","ButtonVariant","PfButtonVariant","SelectButtonVariant","SelectDirection","DropdownDirection","SelectPosition","DropdownPosition","formatOptions","updateSelected","selectField","selectedOptions","variant","domElement","dataAttributes","updatedOptions","isSelectedOptionsStringNumber","activateOptions","option","isSelected","convertedOption","textContent","_findIndex","find","activeOption","selected","SelectVariant","opt","firstChild","setAttribute","formatSelectProps","_memoize","placeholder","hasPlaceholderStyle","formatButtonProps","buttonVariant","onSplitButton","splitButtonCopy","splitButtonVariant","buttonVariantPropLookup","default","toggleVariant","plain","isPlain","toggleIndicator","primary","secondary","isText","splitButtonVariantPropLookup","splitButtonItems","DropdownToggleAction","onClick","DropdownToggleCheckbox","Select","ariaLabel","direction","isDropdownButton","isFlipEnabled","isInline","isToggleText","maxHeight","onSelect","baseOptions","position","toggleIcon","isExpanded","setIsExpanded","setOptions","setSelected","useShallowCompareEffect","updatedSelected","expanded","onDropdownSelect","titleSelection","optionsIndex","findIndex","getAttribute","innerText","mockUpdatedOptions","mockTarget","selectedIndex","mockEvent","Dropdown","isOpen","DropdownToggle","dropdownItems","DropdownItem","btoa","updatedButtonProps","formatButtonParentProps","down","selections","placeholderText","generateChartIds","isCapacity","metric","productId","query","metricCategory","RHSM_API_QUERY_SET_TYPES","generateIsToolbarFilter","generateChartSettings","filters","settings","graphCardSettings","standaloneFiltersSettings","groupedFiltersSettings","isStandalone","actions","filterSettings","updatedChartType","isThreshold","baseFilterSettings","isToolbarFilter","chartColorGreenDark","metrics","updatedGroupedFiltersSettings","getChartXAxisLabelIncrement","getTooltipDate","momentDate","callback","previousDate","formattedDate","isNewYear","average","mantissa","trimMantissa","lowPrecision","toUpperCase","generateExtendedChartSettings","graphCardHelpers","fallbackLng","loadPath","initialized","setInitialized","i18next","XHR","use","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","e","EMPTY_CONTEXT","translateKey","emptyContextValue","updatedValues","updatedTranslateKey","splitContext","split","updatedContext","flat","lastContext","pop","join","i18nKey","translateComponent","withTranslation","i18n","displayName","i18nHelpers","Loader","skeletonProps","tableProps","SkeletonSize","TableSkeleton","PageLayout","PageHeader","PageSection","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","disableButton","updateAccountOptIn","useAliasSession","optin","Card","Flex","flex","FlexItem","CardTitle","CardBody","CardFooter","Form","ActionGroup","Button","Spinner","alignSelf","CardHeader","CardHeaderMain","Brand","srcSet","graphPng4x","graphPng2x","src","alt","PageColumns","alignItems","sm","spaceItems","child","grow","productLabel","justifyContent","ExternalLinkAltIcon","iconPosition","PageMessages","PageToolbar","redirectRoute","routes","useAliasSetRouteDetail","useSetRouteDetail","updatedRoutes","View","Route","path","fallback","Routes","redirect","Navigate","to","useLocation","useAliasLocation","useLocationRRD","windowLocation","aliasWindowLocation","location","updatedLocation","setUpdatedLocation","_id","hash","search","useNavigate","useAliasNavigate","useRRDNavigate","navigate","pathLocation","pathName","pathname","firstMatch","productPath","useRouteDetail","view","product","config","detail","setDetail","_passed","allConfigs","configs","isClosest","productGroup","errorRoute","productConfig","useSearchParams","useAliasSearchParams","useRRDSearchParams","setAliasSearchParams","setSearchParams","updatedQuery","isMerged","currentSearch","updatedSearch","assign","updatedPath","reduxTypes","dynamicBaseName","applicationName","dynamicBasePath","routesConfig","disabled","getRouteConfigByPath","byGroup","byAliasGroupProductPathIds","byProductIdConfigs","updatedPathName","trimmedPathName","RegExp","focusedStr","closestStr","closest","configsByGroup","importView","p","parseSearchParams","currentPathAndOrSearch","decodeURIComponent","URLSearchParams","parsedSearch","Set","param","v","pathJoin","paths","from","hasLead","Table","state","isCollapsible","isSortable","sortBy","updatedColumnHeaders","updatedRows","onCollapse","fullWidth","cells","expandedContent","setState","onSort","updatedIndex","i","column","header","this","setRowData","prevProps","columnHeaders","rows","customizer","valueA","valueB","_isEqualWith","updatedSort","rowObj","parent","cell","columnHeader","sortActive","sortDirection","tempColumnHeader","transforms","sortable","SortByDirection","borders","isHeader","summary","pfTableProps","emptyTable","TableEmpty","SearchIcon","TableHeader","TableBody","Grid","GridItem","span","renderTable","tableHeading","colCount","colWidth","rowCount","updatedHeader","cellWidth","updatedRowCount","Tooltip","isNoWrap","distance","enableFlip","entryDelay","exitDelay","TooltipPosition","productConfigs","require","warn","sortedProductConfigs","viewIdConfigs","productAliases","productIds","productIdConfigs","productPathConfigs","grouped","groupIdConfigs","groupedGroupIds","groupedViewIds","aliases","productArchitectures","productVariants","viewId","alias","architecture","byAlias","byGroupIdConfigs","byGroupIds","byProductPathConfigs","byProductIds","byViewIdConfigs","byViewIds","products","sortedConfigs","activateOnError","RHSM_API_PATH_PRODUCT_TYPES","productDisplay","DISPLAY_TYPES","productContextFilterUom","RHSM_API_QUERY_UOM_TYPES","toISOString","graphTallyQuery","inventoryHostsQuery","INVENTORY_SORT_TYPES","SORT_DIRECTION_TYPES","inventorySubscriptionsQuery","SUBSCRIPTIONS_SORT_TYPES","initialOption","initialGraphFilters","RHSM_API_PATH_METRIC_TYPES","isOptional","chartColorBlueLight","chartColorBlueDark","initialGraphSettings","isCardTitleDescription","initialGuestsFilters","inventoryId","inventory","lastSeen","initialInventoryFilters","INVENTORY_TYPES","numberOfGuests","updatedDisplayName","count","isWrappable","initialInventorySettings","initialSubscriptionsInventoryFilters","SUBSCRIPTIONS_INVENTORY_TYPES","uom","hasInfiniteQuantity","totalCapacity","nextEventDate","initialToolbarFilters","chartColorCyanLight","chartColorCyanDark","displayContent","meta","totalMonthlyValue","total","coreHours","toFixed","instanceHours","RHSM_API_QUERY_INVENTORY_SORT_TYPES","RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES","instanceId","provider","SUBSCRIPTIONS_INVENTORY_META_TYPES","subscriptionType","isSecondary","RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES","CATEGORY_TYPES","chartColorPurpleLight","chartColorPurpleDark","chartColorOrangeLight","chartColorOrangeDark","isDisabledLegendClick","cloudProvider","category","sockets","RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","schemas","initialValue","schema","generated","getSingleResponseFromResultArray","results","updatedResults","payload","response","updatedResultsMessage","firstErrorResponse","_get","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","getDateFromResults","getStatusFromResults","setStateProp","initialState","reset","singlePromiseDataResponseFromArray","reduxHelpers","HTTP_STATUS_RANGE","setApiQuery","setNormalizedResponse","parsedResponses","customResponseEntry","customResponseValue","keyPrefix","keyCase","updatedData","generatedSchema","parsedResponse","dataObj","keyCaseType","customEntry","customValue","update","updatedDataObj","generatedData","casedDataObjKey","dataObjKey","dataObjValue","_camelCase","_snakeCase","val","isInteger","generatedPromiseActionReducer","types","expandedTypes","subVal","whichType","expandMetaTypes","updatedMeta","fromEntries","baseState","errorMessage","setId","errorResponse","cancelled","getDataFromResults","useSelectors","selectors","equality","shallowEqual","useReactReduxSelector","updatedSelectors","selectorIds","multiSelector","createSelector","listMultiSelectorResponse","undefinedMultiSelectorResponse","idMultiSelectorResponse","useAliasSelectors","customResponse","selectorResponse","isSelectorResponseArray","cancelledById","cancelledByList","cancelledDataById","cancelledDataByList","errorByList","errorById","errorDataById","errorDataByList","fulfilledByList","fulfilledById","fulfilledDataById","fulfilledDataByList","pendingByList","responsesById","responsesByList","dataById","dataByList","idList","updatedSelectorResponse","updatedResponse","isById","list","reactReduxHooks","dispatchEvent","store","useSelectorsAllSettledResponse","baseResponse","useSelectorsAnyResponse","keyList","useSelectorsRaceResponse","reactRedux","camelCase","updatedObj","schemaResponse","casing","convert","validate","details","serviceHelpers","passDataToCallback","timeoutFunctionCancel","clearTimer","timeout","timer","_","updatedFunc","clearTimeout","execFunction","race","finally","globalXhrTimeout","globalCancelTokens","globalResponseCache","LruCache","ttl","updateAgeOnGet","axiosServiceCall","cancelledMessage","responseCache","xhrTimeout","updatedConfig","cacheResponse","responseTransformers","axiosInstance","axios","cacheId","exposeCacheId","cancel","cancelTokensId","cancelId","params","CancelToken","cancelToken","token","cachedResponse","get","adapter","adapterConfig","transform","successTransform","errorTransform","transformers","interceptors","set","url","emulateCallback","isSuccess","emulatedResponse","Joi","JoiBase","JoiDate","userResponseSchema","object","identity","is_org_admin","boolean","unknown","entitlements","is_entitled","permissionsItem","permission","string","optional","allow","resourceDefinitions","array","permissionsResponseSchema","items","platformSchemas","permissions","platformTransformers","platformConstants","isAdmin","isEntitled","rbacConfig","definitions","resource","operation","all","resources","RESOURCE_TYPES","OPERATION_TYPES","resourcePermissions","res","op","getUser","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","isHidden","platformServices","getUserPermissions","updatedAppName","platformMethod","USER_PERMISSION_TYPES","REACT_APP_DEBUG_PERMISSION_APP_ONE","REACT_APP_DEBUG_PERMISSION_APP_TWO","allPermissions","userPermissions","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","platformTypes","serviceConfig","passedConfig","headers","serviceCall","errorItem","code","errorResponseSchema","linksSchema","metaResponseSchema","number","integer","valid","capacityMetaSchema","metric_id","capacityItem","utc","has_data","has_infinite_quantity","capacityResponseSchema","links","guestsMetaSchema","guestsItem","inventory_id","display_name","subscription_manager_id","last_seen","guestsResponseSchema","hostsMetaSchema","hostsItem","cloud_provider","lowercase","hardware_type","measurement_type","number_of_guests","hostsResponseSchema","instancesMetaSchema","measurements","instancesItem","instance_id","billing_provider","billing_account_id","instancesResponseSchema","subscriptionsMetaSchema","subscription_type","subscriptionsItem","next_event_date","product_name","quantity","service_level","total_capacity","subscriptionsResponseSchema","tallyItem","tallyMetaSchema","has_cloudigrade_data","has_cloudigrade_mismatch","total_monthly","tallyResponseSchema","rhsmSchemas","capacity","guests","hosts","instances","subscriptions","tally","rhsmTransformers","HOSTS_DATA_TYPES","subscriptionManagerId","HOSTS_META_TYPES","metaMeasurements","INSTANCES_META_TYPES","INSTANCES_DATA_TYPES","tallyCapacity","_isCapacity","currentDate","currentDateStr","futureDateCount","TALLY_CAPACITY_DATA_TYPES","updatedDate","isCurrentDate","isFutureDate","diff","TALLY_CAPACITY_META_TYPES","cloudigradeHasMismatch","metricId","totalMonthlyDate","totalMonthlyHasData","rhsmHelpers","updatedId","rhsmServices","getApiVersion","getGraphCapacity","getGraphReports","getGraphTally","getHostsInventory","getHostsInventoryGuests","getInstancesInventory","getSubscriptionsInventory","rhsmActions","getGraphMetrics","idMetric","multiMetric","multiDispatch","metricQuery","methodService","methodType","rhsmTypes","methodCancelId","generatedId","notifications","getMessageReports","userServices","defaultLang","Cookies","cookieLang","LocaleCode","deleteAccountOptIn","getAccountOptIn","userActions","userTypes","rejected","dismissable","autoDismiss","platform","rhsm","legend","reportCapacity","graphReducer","graphTypes","hostsInventory","hostsGuests","instancesInventory","subscriptionsInventory","tabs","inventoryReducer","inventoryTypes","report","messagesReducer","toolbarReducer","activeFilters","currentFilter","userReducer","appTypes","actionStatus","inventoryGuestsQuery","viewReducer","updateResetQueries","queryIds","queryId","productQuery","RHSM_API_QUERY_TYPES","updateClearQueries","updateClearGuestQuery","clearFilters","reducers","graph","messages","toolbar","reduxReducers","combineReducers","recordAction","parsedItems","getActions","priorItem","updatedAction","removeUserIdentity","platformApiTypes","updatedPayload","sanitizeData","sanitizeActionHeaders","actionObj","timestamp","Date","now","setItem","browser","userAgent","toLocaleString","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","next","httpStatus","payloadConfig","range","statusMiddleware","promiseMiddleware","actionRecordMiddleware","version","notificationsMiddleware","createStore","applyMiddleware","STATUS_4XX","STATUS_5XX","SET_PRODUCT","SET_GRAPH_LEGEND","CLEAR_INVENTORY_GUESTS","SET_INVENTORY_TAB","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_GLOBAL_FILTER_HIDE","PLATFORM_USER_AUTH","queryTypes","SET_QUERY","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST","SET_QUERY_RESET_INVENTORY_LIST","SET_QUERY_RHSM_TYPES","SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_LOCALE","USER_LOGOUT","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_GRAPH_TALLY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","GET_INSTANCES_INVENTORY_RHSM","GET_MESSAGE_REPORTS_RHSM","GET_SUBSCRIPTIONS_INVENTORY_RHSM","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES","ALL","PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES","READ","WRITE","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES","SUBSCRIPTIONS","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","SATELLITE_CAPSULE","SATELLITE_SERVER","RHACS","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHODS","RHOSAK","OPENSHIFT","OPENSHIFT_METRICS","OPENSHIFT_DEDICATED_METRICS","SATELLITE","CORES","SOCKETS","CORE_SECONDS","INSTANCE_HOURS","STORAGE_GIBIBYTES","STORAGE_GIBIBYTE_MONTHS","TRANSFER_GIBIBYTES","RHSM_API_RESPONSE_META_TYPES","COUNT","PRODUCT","RHSM_API_RESPONSE_HOSTS_DATA_TYPES","CORE_HOURS","CLOUD_PROVIDER","DISPLAY_NAME","HARDWARE_TYPE","INVENTORY_ID","LAST_SEEN","MEASUREMENT_TYPE","NUMBER_OF_GUESTS","SUBSCRIPTION_MANAGER_ID","RHSM_API_RESPONSE_HOSTS_META_TYPES","RHSM_API_RESPONSE_INSTANCES_DATA_TYPES","BILLING_PROVIDER","BILLING_ACCOUNT_ID","CATEGORY","INSTANCE_ID","MEASUREMENTS","RHSM_API_RESPONSE_INSTANCES_META_TYPES","RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES","HAS_INFINITE_QUANTITY","NEXT_EVENT_DATE","PRODUCT_NAME","QUANTITY","SERVICE_LEVEL","TOTAL_CAPACITY","UOM","RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES","SUBSCRIPTION_TYPE","RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES","DATE","VALUE","HAS_DATA","RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES","HAS_CLOUDIGRADE_DATA","HAS_CLOUDIGRADE_MISMATCH","METRIC_ID","TOTAL_MONTHLY","RHSM_API_RESPONSE_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES","RED_HAT","AWS","RHSM_API_RESPONSE_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_RESPONSE_UOM_TYPES","RHSM_API_RESPONSE_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_CATEGORY_TYPES","CLOUD","HYPERVISOR","PHYSICAL","VIRTUAL","RHSM_API_QUERY_GRANULARITY_TYPES","RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES","HARDWARE","MEASUREMENT","NAME","RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","NEXT_EVENT_TYPE","SKU","USAGE","RHSM_API_QUERY_BILLING_PROVIDER_TYPES","RHSM_API_QUERY_SLA_TYPES","RHSM_API_QUERY_USAGE_TYPES","RHSM_API_QUERY_SET_INVENTORY_TYPES","ARCHITECTURE","DIRECTION","END_DATE","LIMIT","OFFSET","SLA","SORT","START_DATE","VARIANT","RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES","GRANULARITY","RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES","DUAL_AXES","HOURLY","LEGACY","PARTIAL","CAPACITY","RHSM_API_RESPONSE_DATA","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_ERRORS","RHSM_API_RESPONSE_ERRORS_TYPES","CODE","RHSM_API_RESPONSE_ERRORS_CODE_TYPES","GENERIC","OPTIN","RHSM_API_RESPONSE_SUBSCRIPTION_TYPES","ANNUAL","ON_DEMAND","webpackContext","req","webpackContextResolve","__webpack_require__","o","webpackAsyncContext","then","ids"],"sourceRoot":""}
{"version":3,"file":"js/7276.1676911795103.9c877f7627949f9f4191.js","mappings":"udAeMA,EAAS,qJAoEZ,OApEY,oCACbC,MAAQ,CACNC,aAAc,MACf,EAQDC,QAAU,SAAAC,GACR,MAAmC,EAAKC,MAAhCC,EAAO,EAAPA,QAASH,EAAO,EAAPA,QAASI,EAAI,EAAJA,KAClBC,EAA2BJ,EAA3BI,cAAeC,EAAYL,EAAZK,QACjBC,GAAc,UAAKN,GAEzBD,GAAQQ,EAAAA,EAAAA,iBAAgBP,GAAO,IAEf,KAAZK,IACW,WAATF,GAA6C,KAAxBC,EAAcI,MACrCN,GAAQK,EAAAA,EAAAA,iBAAgBD,IAExB,EAAKG,SAAS,CAAEX,aAAc,KAAM,WAClCI,GACEK,EAAAA,EAAAA,kBAAgB,kBAAKD,GAAgB,CAAEF,eAAe,kBAAKE,EAAYF,eAAa,IAAEI,MAAO,QAEjG,IAGN,EAAC,EAQDE,UAAY,SAAAV,GACV,MAAqC,EAAKC,MAAlCC,EAAO,EAAPA,QAASQ,EAAS,EAATA,UAAWP,EAAI,EAAJA,KACpBC,EAAkBJ,EAAlBI,cACFE,GAAc,UAAKN,GAEzBU,GAAUH,EAAAA,EAAAA,iBAAgBP,GAAO,IAEpB,WAATG,GAA6C,KAAxBC,EAAcI,OAIvCG,YAAW,WACmB,KAAxBP,EAAcI,OAChBN,GAAQK,EAAAA,EAAAA,iBAAgBD,GAE5B,GACF,EAAC,EAQDM,SAAW,SAACJ,EAAOR,GACjB,IAAQY,EAAa,EAAKX,MAAlBW,SACFN,GAAc,UAAKN,GAEzB,EAAKS,SAAS,CAAEX,aAAcU,IAAS,WACrCI,GAASL,EAAAA,EAAAA,iBAAgBD,GAC3B,GACF,EAAC,EAyCA,OAzCA,8BAOD,WAAS,MACCR,EAAiBe,KAAKhB,MAAtBC,aACR,EAaIe,KAAKZ,MAZPa,EAAS,EAATA,UACAC,EAAE,EAAFA,GACAC,EAAU,EAAVA,WACAC,EAAI,EAAJA,KAKAC,GAJQ,EAARN,SACO,EAAPV,QACO,EAAPH,QACS,EAATW,UACU,EAAVQ,YACAf,EAAI,EAAJA,KACAK,EAAK,EAALA,MACGP,GAAK,YAEJkB,EAAcF,GAAQG,EAAAA,GAAAA,aACtBC,EAAYN,GAAMI,EAExB,OACE,kBAAC,YAAW,eACVJ,GAAIM,EACJJ,KAAME,EACNL,UAAS,+BAA0BA,GACnCE,WAAYA,IAAc,EAC1BJ,SAAUC,KAAKD,SACfb,QAASc,KAAKd,QACdW,UAAWG,KAAKH,UAChBQ,WAAYA,IAAc,EAC1Bf,KAAMA,EACNK,MAA4B,QAAvB,EAAEV,QAAAA,EAAgBU,SAAK,QAAI,IAC5BP,GAGV,KAAC,EA7GY,CAASqB,IAAAA,WA4IxB1B,EAAU2B,aAAe,CACvBT,UAAW,GACXC,GAAI,KACJC,YAAY,EACZE,YAAY,EACZD,KAAM,KACNL,SAAUQ,EAAAA,GAAAA,KACVlB,QAASkB,EAAAA,GAAAA,KACTrB,QAASqB,EAAAA,GAAAA,KACTV,UAAWU,EAAAA,GAAAA,KACXjB,KAAM,OACNK,MAAO,G,qNCtKLgB,EAAsC,WAStC,OARAA,EAAWC,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,CACX,EACOH,EAASa,MAAMxB,KAAMkB,UAChC,EAiBA,SAASO,EAAcC,GACnB,MACW,GAAGC,OAAOD,EADjBA,EAAU,GAAKA,EAAU,EACC,WAGA,UAElC,CACA,IAQA,EARmB,SAAUE,GACzB,IAAIC,EACAC,EAAKF,EAAGG,SAAUA,OAAkB,IAAPD,GAAwBA,EAAIJ,EAAUE,EAAGF,QAASzB,EAAY2B,EAAG3B,UAAW+B,EAAWJ,EAAGI,SAAUC,EAAWL,EAAGK,SAAUC,EAASN,EAAGM,OAAQC,EAAKP,EAAGQ,SAAUA,OAAkB,IAAPD,GAAuBA,EAAI/C,EA1BvM,SAAU2B,EAAGsB,GAC/C,IAAIvB,EAAI,CAAC,EACT,IAAK,IAAIM,KAAKL,EAAOH,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,IAAMiB,EAAEC,QAAQlB,GAAK,IAC9EN,EAAEM,GAAKL,EAAEK,IACb,GAAS,MAALL,GAAqD,mBAAjCH,OAAO2B,sBACtB,KAAIvB,EAAI,EAAb,IAAgBI,EAAIR,OAAO2B,sBAAsBxB,GAAIC,EAAII,EAAED,OAAQH,IAC3DqB,EAAEC,QAAQlB,EAAEJ,IAAM,GAAKJ,OAAOS,UAAUmB,qBAAqBjB,KAAKR,EAAGK,EAAEJ,MACvEF,EAAEM,EAAEJ,IAAMD,EAAEK,EAAEJ,IAF4B,CAItD,OAAOF,CACX,CAgBqP2B,CAAOb,EAAI,CAAC,WAAY,UAAW,YAAa,WAAY,WAAY,SAAU,aAC/Tc,EAAsB,IAAW,yBAAyBb,EAAK,CAAC,GAAM,gBAAkBE,EAAUF,GAAK5B,GACvG0C,EAAoB,mBACpBC,GAAc,IAAAC,WAAUF,EAAmBT,EAAQE,GACvD,OAAQ,UAAM,EAAAU,SAAU,CAAEb,SAAU,EAAC,SAAK,EAAAc,QAASpC,EAAS,CAAEV,UAAWyC,EAAqB,2BAA4BC,EAAmB,yBAA0BC,EAAa,iBAAkBR,GAAYhD,EAAO,CAAE6C,SAAUA,MAAgBP,GAAWA,GAAW,GAAOM,GAAYA,GAAY,KAAQ,UAAM,MAAOrB,EAAS,CAAEV,UAAW,gCAAkC,CAAEgC,SAAU,CAACP,GAAWA,GAAW,IAAK,UAAM,OAAQf,EAAS,CAAEV,UAAW,sCAAwC,CAAEgC,SAAU,CAAC,IAAKR,EAAcC,GAAU,QAAUM,GAAYA,GAAY,IAAK,UAAM,OAAQrB,EAAS,CAAEV,UAAW,yCAA2C,CAAEgC,SAAU,CAAC,IAAKD,EAAU,uBAC3qB,E,yJCQMgB,EAAgB,SAAH,GAYb,IAXJC,EAAW,EAAXA,YACA9C,EAAU,EAAVA,WACA+C,EAAc,EAAdA,eACApC,EAAC,EAADA,EACiBqC,EAAoB,EAArCC,gBACWC,EAAc,EAAzBC,UACiBC,EAAoB,EAArCC,gBACYC,EAAe,EAA3BC,WAC2BC,EAA8B,EAAzDC,0BAC0BC,EAA6B,EAAvDC,yBACYC,EAAe,EAA3BC,WAEA,GAAoDC,EAAAA,EAAAA,UAAS,CAAEC,cAAe,GAAIC,KAAM,KAAK,eAAtFC,EAAkB,KAAEC,EAAqB,KAC1CC,EAAcP,IACdQ,EAAQV,IACRW,EAASnB,IACToB,EAAelB,IACbmB,EAAcjB,IAAdiB,UACR,EAAmDf,IAAlCgB,EAAmB,EAA5BC,QAA8BC,EAAQ,EAARA,SACtC,EAAiD1B,EAAqB,CAAEhD,WAAAA,IAAhE2E,EAAK,EAALA,MAAOC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAAO,IAAEC,KAAAA,OAAI,IAAG,GAAC,EAAC,EAC5C,EAA2CA,EAAnCA,KAAMC,OAAQ,IAAG,KAAE,IAAgBD,EAAdE,KAAAA,OAAI,IAAG,GAAC,EAAC,EAqDtC,IAnDAC,EAAAA,EAAAA,IAAqB,WACnB,IAAIC,EAAuB,GACvBC,EAAc,GAEdP,GAAaG,EAAS/D,SACxBmE,EAAcJ,EAASK,KAAI,YAAqB,IAAfC,EAAQ,oBACvC,EAAiCC,EAAqB,qBAArBA,sBAA2C,CAC1Eb,QAASa,EAAqB,qBAArBA,sBAA2C,CAClDb,QAASD,EACTe,OAAQjB,EACRF,MAAAA,IAEFiB,SAAAA,EACAL,KAAAA,EACAQ,QAASrB,EACTI,UAAAA,IATMR,EAAa,EAAbA,cAAe0B,EAAK,EAALA,MAYvBP,EAAuBnB,EACvB,IAAM2B,EAAwBL,aAAQ,EAARA,EAAUK,sBAClCC,EAAiBN,aAAQ,EAARA,EAAUM,eAUjC,MAAO,CACLF,MAAAA,EACAG,iBARmC,mBAA1BlB,aAAQ,EAARA,EAAUmB,aACNnB,EAASmB,aAAY,UAAKR,IAAQ,UAASlB,IAE3CwB,EAAiB,GAAKD,IAO/B,kBAAC,EAAAI,gBAAe,CACdC,IAAG,iBAAYL,GACfC,eAAgBA,EAChB5F,GAAI2F,UAGRM,EAEN,KAGF9B,GAAsB,iBAAO,CAC3BH,cAAemB,EACflB,KAAMmB,EACP,GACH,GAAG,CAACX,EAAqBI,EAAWG,IAEhC/E,EACF,OACE,kBAAC,EAAAiG,KAAI,CAACnG,UAAU,sCACd,kBAAC,EAAAoG,SAAQ,KACP,kBAAC,EAAAC,SAAQ,KAAExF,EAAE,0BAA2B,CAAEyF,QAAS,gBAM3D,IAAMC,EAAYrB,aAAI,EAAJA,EAAMsB,MAClBC,EAAiBnC,EAAMoC,EAAAA,GAAAA,QAAmCzD,EAC1D0D,EAAgBrC,EAAMoC,EAAAA,GAAAA,QACtBE,EAAaC,EAAkB,kBAAlBA,WAA6BF,EAAeF,EAAgBF,GAGzEO,IACW,IAAdhC,GAAsByB,EAAYE,GAAkB,iBAAJ,OAAqBA,EAAc,aACrE,IAAd3B,GAAsB8B,GAAc,iBAAJ,OAAqBH,EAAc,aACzD,IAAV5B,GAAkB,iBAAJ,OAAqB4B,EAAc,YAAU,wBAC3CA,GAEnB,OACE,kBAAC,EAAAN,KAAI,CAACnG,UAAU,4BACd,kBAAC,EAAA+G,UAAS,CAACd,IAAI,kBAAkBe,iBAAe,GAC9C,kBAAC,EAAAC,WAAU,CAACjH,UAAY6E,EAAS,SAAa,GAAI,cAAaA,IAAS,GACrE7B,EACD,kBAAC,EAAAkE,YAAW,CAAClH,UAAauG,EAA+B,GAAlB,cAAsB,eAAcA,IAAa,GACtF,kBAAC,UAAU,CACTY,WAAS,EACTjH,WAAY6E,GAAWF,EACvB0B,UAAWA,EACXa,OAAQT,EACRpC,OAAQA,EACR8C,UAAW9C,EACX+C,QAASb,OAKjB,kBAAC,EAAAM,UAAS,CAACd,IAAKa,GAA4BE,iBAAe,GACzD,kBAAC,EAAAZ,SAAQ,KACP,yBAAKpG,WAAY6E,EAAS,OAAYE,GAAW,WAAa,IAC3DA,GACC,kBAAC,EAAAwC,OAAM,CACLC,QAAQ,QACRC,WAAY,CACVzH,UAAW,2BACX0H,UAAUhD,aAAmB,EAAnBA,EAAqBxD,UAAW+D,aAAQ,EAARA,EAAW,KAAMtE,OAAOgH,KAAK1C,EAAS,IAAI/D,QAAW,EAC/F0G,UACGlD,aAAmB,EAAnBA,EAAqBxD,SAAUwD,EAAoBY,KAAI,YAAY,SAATuC,SAAyB,KAAM,GAC5FC,UAAU7C,aAAQ,EAARA,EAAU/D,SAAUuF,EAC9Be,QAASO,EAAAA,aAAAA,YAIbhD,GACA,kBAAC,UAAK,CACJiD,SAAO,EACPR,QAASO,EAAAA,aAAAA,QACT/H,UAAU,2BACViE,cAAeE,EAAmBF,cAClCC,KAAMC,EAAmBD,UAMnC,kBAAC,EAAA6C,UAAS,CAACd,IAAI,kBAAkBe,iBAAe,GAC9C,kBAAC,EAAAiB,WAAU,CACTjI,WAAY6E,EAAS,UAAe0B,GAAa,gBAAkB,GACnE,cAAa1B,IAAU0B,IAAa,GAEpC,kBAAC,EAAY,CAACzE,UAAQ,GACpB,kBAAC,UAAU,CACToG,cAAc,KACdhI,WAAY6E,GAAWF,EACvB0B,UAAWA,EACXa,OAAQT,EACRpC,OAAQA,EACR8C,UAAW9C,EACX+C,QAASb,OAOvB,EA8BA1D,EAActC,aAAe,CAC3BuC,YACE,kBAAC,EAAAmF,eAAc,KACb,kBAAC,EAAAC,wBAAuB,OAG5BlI,WAAYI,EAAAA,GAAAA,4BACZ2C,eAAgB,GAChBpC,EAAGwH,EAAAA,UACHlF,gBAAiBmF,EAAAA,yBACjBjF,UAAWkF,EAAAA,mBACXhF,gBAAiBiF,EAAAA,yBACjB/E,WAAAA,EAAAA,WACAE,0BAA2B8E,EAAAA,+BAC3B5E,yBAA0B6E,EAAAA,8BAC1B3E,WAAAA,EAAAA,W,qfCxOI4E,EAAuB,WAOlB,6DAAP,CAAC,EAAC,IANJzI,WAAAA,OAAU,IAAG,GAAK,MAClB0I,aAAAA,OAAY,IAAG,EAAAC,EAAAA,GAAAA,KAAAA,kBAAmC,MAClDC,YAAaC,OAAgB,IAAG,EAAAC,EAAAA,GAAAA,WAAAA,YAAiC,MACjEvF,WAAYD,OAAe,IAAG,EAAAC,EAAAA,WAAU,MACxCI,yBAA0BD,OAA6B,IAAG,EAAA8E,EAAAA,8BAA6B,MACvFO,qBAAsBC,OAAyB,IAAG,EAAAF,EAAAA,GAAAA,WAAAA,qBAA0C,EAE5F,EAAsBxF,IAAdiB,EAAS,EAATA,UACFH,EAAQV,IACRuF,EAAWJ,IACjB,EAAkDG,GAChD,kBAAGE,EAAS,EAATA,UAAS,OAAOA,SAAyB,QAAhB,EAATA,EAAWC,sBAAc,WAAhB,EAAT,EAA4B5E,EAAU,IADnD6E,EAAS,EAATA,UAAWvE,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAASuE,GAAQ,YAU7C,OANAC,EAAAA,EAAAA,IAAwB,WACjBtJ,GACH0I,EAAanE,EAAWH,EAAxBsE,CAA+BO,EAEnC,GAAG,CAACA,EAAUjJ,EAAYuE,EAAWH,KAE9B,kBACFiF,GAAQ,IACXxE,QAASA,GAAWuE,IAAa,EACjCtE,KAAwB,KAAjBA,aAAI,EAAJA,EAAM9D,SAAgB8D,EAAK,IAAOA,GAAQ,CAAC,GAEtD,EAcMsD,EAA2B,WAOtB,6DAAP,CAAC,EAAC,IANJpI,WAAAA,OAAU,IAAG,GAAK,MAClB0I,aAAAA,OAAY,IAAG,EAAAC,EAAAA,GAAAA,KAAAA,sBAAuC,MACtDC,YAAaC,OAAgB,IAAG,EAAAC,EAAAA,GAAAA,WAAAA,YAAiC,MACjEvF,WAAYD,OAAe,IAAG,EAAAC,EAAAA,WAAU,MACxCI,yBAA0BD,OAA6B,IAAG,EAAA8E,EAAAA,8BAA6B,MACvFO,qBAAsBC,OAAyB,IAAG,EAAAF,EAAAA,GAAAA,WAAAA,qBAA0C,EAE5F,EAAsBxF,IAAdiB,EAAS,EAATA,UACFH,EAAQV,IACRuF,EAAWJ,IACjB,EAAkDG,GAChD,kBAAGE,EAAS,EAATA,UAAS,OAAOA,SAA6B,QAApB,EAATA,EAAWK,0BAAkB,WAApB,EAAT,EAAgChF,EAAU,IADvD6E,EAAS,EAATA,UAAWvE,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAASuE,GAAQ,YAU7C,OANAC,EAAAA,EAAAA,IAAwB,WACjBtJ,GACH0I,EAAanE,EAAWH,EAAxBsE,CAA+BO,EAEnC,GAAG,CAACA,EAAUjJ,EAAYuE,EAAWH,KAE9B,kBACFiF,GAAQ,IACXxE,QAASA,GAAWuE,IAAa,EACjCtE,KAAwB,KAAjBA,aAAI,EAAJA,EAAM9D,SAAgB8D,EAAK,IAAOA,GAAQ,CAAC,GAEtD,EAUMuD,EAAqB,WAGhB,6DAAP,CAAC,EAAC,IAFJO,YAAaC,OAAgB,IAAG,EAAAC,EAAAA,GAAAA,WAAAA,YAAiC,MACjEvF,WAAYD,OAAe,IAAG,EAAAC,EAAAA,WAAU,EAExC,EAAsBD,IAAdiB,EAAS,EAATA,UACF0E,EAAWJ,IAWjB,OAAO,YAAyB,IAAtB3B,EAAM,EAANA,OAAQE,EAAO,EAAPA,QAChB6B,EAAS,EAAC,QAEN9J,KAAMqK,EAAAA,GAAAA,MAAAA,qCAAsDhD,EAAAA,GAAAA,QAC5DiD,OAAQlF,GACPiC,EAAAA,GAAAA,OAAkCU,IAAM,QAGzC/H,KAAMqK,EAAAA,GAAAA,MAAAA,qCAAsDhD,EAAAA,GAAAA,OAC5DiD,OAAQlF,GACPiC,EAAAA,GAAAA,MAAiCY,IAGxC,CACF,EAWMsC,EAAuB,WAIlB,6DAAP,CAAC,EAAC,IAHJC,YAAAA,OAAW,IAAG,EAAAC,EAAAA,GAAgB,MAC9BhB,YAAaC,OAAgB,IAAG,EAAAC,EAAAA,GAAAA,WAAAA,YAAiC,MACjEvF,WAAYD,OAAe,IAAG,EAAAC,EAAAA,WAAU,EAExC,EAAsBD,IAAdiB,EAAS,EAATA,UACF0E,EAAWJ,IAYjB,OAAO,SAACgB,EAAO,GAAsB,IAE/BC,EAFWC,EAAS,EAATA,UAAWhK,EAAE,EAAFA,GACpBiK,EAAoBvJ,OAAOwJ,OAAON,GAAaO,MAAK,SAAA1K,GAAK,OAAIA,IAAUO,GAAMoK,IAAW3K,KAAWO,CAAE,IAGtGiK,GASDF,EAFIC,IACDK,EAAAA,gBAAAA,KACgBC,EAAAA,GAAAA,WAGAA,EAAAA,GAAAA,UAIvBpB,EAAS,EAAC,QAEN9J,KAAMqK,EAAAA,GAAAA,MAAAA,qCAAsDhD,EAAAA,GAAAA,WAC5DiD,OAAQlF,GACPiC,EAAAA,GAAAA,UAAqCsD,IAAgB,QAGtD3K,KAAMqK,EAAAA,GAAAA,MAAAA,qCAAsDhD,EAAAA,GAAAA,MAC5DiD,OAAQlF,GACPiC,EAAAA,GAAAA,KAAgCwD,OAxB/B5J,EAAAA,GAAAA,UAAoBA,EAAAA,GAAAA,cACtBkK,QAAQC,KAAK,iEAAD,OAAkExK,EAAE,gBA0BtF,CACF,EAWMuI,EAA2B,WAItB,6DAAP,CAAC,EAAC,IAHJqB,YAAAA,OAAW,IAAG,EAAAa,EAAAA,GAAU,MACxB5B,YAAaC,OAAgB,IAAG,EAAAC,EAAAA,GAAAA,WAAAA,YAAiC,MACjEvF,WAAYD,OAAe,IAAG,EAAAC,EAAAA,WAAU,EAExC,EAAsBD,IAAdiB,EAAS,EAATA,UACF0E,EAAWJ,IAYjB,OAAO,SAACgB,EAAO,GAAsB,IAE/BC,EAFWC,EAAS,EAATA,UAAWhK,EAAE,EAAFA,GACpBiK,EAAoBvJ,OAAOwJ,OAAON,GAAaO,MAAK,SAAA1K,GAAK,OAAIA,IAAUO,GAAMoK,IAAW3K,KAAWO,CAAE,IAGtGiK,GASDF,EAFIC,IACDK,EAAAA,gBAAAA,KACgBC,EAAAA,GAAAA,WAGAA,EAAAA,GAAAA,UAIvBpB,EAAS,EAAC,QAEN9J,KAAMqK,EAAAA,GAAAA,MAAAA,qCAAsDhD,EAAAA,GAAAA,WAC5DiD,OAAQlF,GACPiC,EAAAA,GAAAA,UAAqCsD,IAAgB,QAGtD3K,KAAMqK,EAAAA,GAAAA,MAAAA,qCAAsDhD,EAAAA,GAAAA,MAC5DiD,OAAQlF,GACPiC,EAAAA,GAAAA,KAAgCwD,OAxB/B5J,EAAAA,GAAAA,UAAoBA,EAAAA,GAAAA,cACtBkK,QAAQC,KAAK,iEAAD,OAAkExK,EAAE,gBA0BtF,CACF,EAEMqG,EAAU,CACdqC,qBAAAA,EACAL,yBAAAA,EACAC,mBAAAA,EACAqB,qBAAAA,EACApB,yBAAAA,E,8LC5PIzB,EAAS,qJAgDZ,OAhDY,oCACb4D,aAAenK,IAAAA,YAAiB,EAEhCoK,kBAAoBpK,IAAAA,YAAiB,EAErCqK,sBAAwB,EAAC,EAEzBC,eAAiBxK,EAAAA,GAAAA,KAAY,EAgC7ByK,kBAAoB,WAAM,QAChBF,GAAR,UAAQA,sBACAG,EAAmB,EAAK7L,MAAxB6L,eACFC,GAA+B,QAAjB,IAAKN,oBAAY,OAAS,QAAT,EAAjB,EAAmBO,eAAO,WAAT,EAAjB,EAA4BD,cAAe,EAE3DD,GAAkBC,IAAgBJ,IACpC,EAAKA,sBAAwBI,EAC7B,EAAKE,cAAa,GAEtB,EAAC,EAkDA,OAlDA,yCAvCD,WAAoB,WACVH,EAAmBjL,KAAKZ,MAAxB6L,eACRI,OAAOvL,YAAW,WAChB,EAAKsL,cACP,IAEIH,GACFjL,KAAKsL,mBAET,GAAC,gCAED,WAAqB,WACStL,KAAKZ,MAAzB6H,iBAGNoE,OAAOvL,YAAW,WAChB,EAAKsL,cACP,GAEJ,GAAC,kCAED,WACEpL,KAAK+K,gBACP,GAEA,0BAqBA,WAA4B,IAMpBQ,EANKC,EAAQ,UAAH,8CACGC,EAAsBzL,KAAKZ,MAAtCsM,UACR,EAAqC1L,KAAK4K,aAAlCO,QAASQ,OAAU,IAAG,GAAC,EAAC,EAChC,EAA0C3L,KAAK6K,kBAAvCM,QAASS,OAAe,IAAG,GAAC,EAAC,EAEjCD,SAAAA,EAAYE,QASVJ,GALFF,EADEC,GACaI,aAAe,EAAfA,EAAiBL,eAAgB,GAEjCI,aAAU,EAAVA,EAAYJ,eAAgB,KAI3CA,EAAeE,GAGjBE,EAAWE,MAAMH,UAAY,GAAH,OAAMH,EAAY,MAEhD,GAEA,+BAGA,WAAoB,WAClBF,OAAOS,iBAAiB,SAAU9L,KAAKgL,mBACvChL,KAAK+K,eAAiB,kBAAMM,OAAOU,oBAAoB,SAAU,EAAKf,kBAAkB,CAC1F,GAEA,oBAKA,WACE,IAAQ/I,EAAajC,KAAKZ,MAAlB6C,SAER,OACE,yBAAKhC,UAAU,sBAAsB+L,IAAKhM,KAAK4K,cAC7C,yBAAKoB,IAAKhM,KAAK6K,mBAAoB5I,GAGzC,KAAC,EAlGY,CAASxB,IAAAA,WAsHxBuG,EAAUtG,aAAe,CACvBuG,iBAAiB,EACjBgE,gBAAgB,EAChBS,UAAW,E,8JCpGPO,EAAa,SAAbA,EAAU,OACd9D,EAAa,EAAbA,cACAhI,EAAU,EAAVA,WACAiH,EAAS,EAATA,UACAZ,EAAS,EAATA,UACAa,EAAM,EAANA,OACA7C,EAAM,EAANA,OACA8C,EAAS,EAATA,UACAC,EAAO,EAAPA,QACAE,EAAO,EAAPA,QAAO,OAEP,kBAAC,aAAY,CACXU,cAAeA,EACff,UAAWA,EACXjH,WAAYA,IAAeqG,EAC3BA,UAAWA,EACX0F,UAAW,SAAC/M,EAAOgN,EAAMC,GAAK,OAC5B5H,EAAO,CAAErF,MAAAA,EAAOoI,QAAS6E,EAAO/E,OAAQP,EAAAA,kBAAAA,wBAA0CqF,EAAMC,IAAS,EAEnGC,gBAAiB,SAAClN,EAAOiN,GAAK,OAAK9E,EAAU,CAAEnI,MAAAA,EAAOoI,QAAS6E,EAAO/E,OAAQ4E,EAAWvL,aAAa2G,QAAS,EAC/G8E,KAAMrF,EAAAA,kBAAAA,wBAA0CO,GAAU4E,EAAWvL,aAAa2G,OAAQE,GAC1FA,QAASA,EACTE,QAASA,GACT,EA6BJwE,EAAWvL,aAAe,CACxByH,cAAe,OACff,WAAW,EACXjH,YAAY,EACZqG,UAAW,EACXa,OAAQ,EACR7C,OAAQjE,EAAAA,GAAAA,KACR+G,UAAW/G,EAAAA,GAAAA,KACXgH,QAAS,GACTE,QAAS,K,sOCrFX,IAAM6E,EAA0B,SAACH,EAAM5E,GAAO,OAAKA,GAAW4E,EAAO,IAAM,CAAC,EAStEI,EAA0B,SAAClF,EAAQE,GAAO,OAAKF,EAASE,EAAU,GAAK,CAAC,EAUxEV,EAAa,SAACQ,EAAQE,EAASf,GAAS,OAC5C+F,EAAwBlF,EAAQE,KAAaiF,KAAKC,KAAKjG,EAAYe,EAAQ,EAEvET,EAAoB,CACxBwF,wBAAAA,EACAC,wBAAAA,EACA1F,WAAAA,E,0OCNIwB,EAA0B,SAAH,GAKvB,IAJJvH,EAAC,EAADA,EACakI,EAAgB,EAA7BD,YACYtF,EAAe,EAA3BC,WAC+BgJ,EAAkC,EAAjE/D,8BAEQiB,EAAWnG,IAAXmG,OACyC+C,EAAiBD,IAAzD/F,EAAAA,GAAAA,cACHyC,EAAWJ,IASX4D,EAAW,SAAAC,GAAW,OAC1BzD,EAAS,CACP,CACE9J,KAAMqK,EAAAA,GAAAA,MAAAA,+BACNC,OAAAA,IACD,QAECtK,KAAMqK,EAAAA,GAAAA,MAAAA,qCAAsDhD,EAAAA,GAAAA,cAC5DiD,OAAAA,GACCjD,EAAAA,GAAAA,cAAwCkG,aAAW,EAAXA,EAAaC,SAAU,OAElE,EA6BEC,EAAYC,IAAUJ,EAAU,KAqBtC,OACE,kBAAC,EAAAK,WAAU,KACT,kBAAC,EAAAlO,UAAS,CACR,aAAY+B,EAAE,uCAAwC,CAAEyF,QAAS,gBACjEtG,UAAU,gCACViN,YAAY,SACZC,UAAW,IACX9N,QAjDU,WACO,KAAjBsN,GAAwBA,GAI5BvD,EAAS,CACP,CACE9J,KAAMqK,EAAAA,GAAAA,MAAAA,+BACNC,OAAAA,IACD,QAECtK,KAAMqK,EAAAA,GAAAA,MAAAA,qCAAsDhD,EAAAA,GAAAA,cAC5DiD,OAAAA,GACCjD,EAAAA,GAAAA,aAAwC,OAG/C,EAkCMzH,QArBU,SAAAC,GACd,OAAQA,EAAMK,SACZ,KAAK,GACHoN,EAASzN,EAAMQ,OACf,MACF,KAAK,GACH,MACF,QACEoN,EAAU5N,EAAMQ,OAGtB,EAWMA,MAAOgN,EACPS,YAAatM,EAAE,uCAAwC,CAAEyF,QAAS,gBAClE,YAAU,4BAIlB,EAmBA8B,EAAwB3H,aAAe,CACrCI,EAAGwH,EAAAA,UACHS,YAAaE,EAAAA,GAAAA,WAAAA,YACbvF,WAAAA,EAAAA,WACAiF,8BAAAA,EAAAA,8B","sources":["webpack:///./src/components/form/textInput.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./src/components/inventoryCard/inventoryCard.js","webpack:///./src/components/inventoryCard/inventoryCardContext.js","webpack:///./src/components/minHeight/minHeight.js","webpack:///./src/components/pagination/pagination.js","webpack:///./src/components/pagination/paginationHelpers.js","webpack:///./src/components/toolbar/toolbarFieldDisplayName.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput as PfTextInput } from '@patternfly/react-core';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly TextInput. Provides restructured event data,\n * and an onClear event for the search type.\n *\n * @augments React.Component\n * @fires onKeyUp\n * @fires onMouseUp\n * @fires onChange\n */\nclass TextInput extends React.Component {\n  state = {\n    updatedValue: null\n  };\n\n  /**\n   * onKeyUp event, provide additional functionality for onClear event.\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  onKeyUp = event => {\n    const { onClear, onKeyUp, type } = this.props;\n    const { currentTarget, keyCode } = event;\n    const clonedEvent = { ...event };\n\n    onKeyUp(createMockEvent(event, true));\n\n    if (keyCode === 27) {\n      if (type === 'search' && currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      } else {\n        this.setState({ updatedValue: '' }, () => {\n          onClear(\n            createMockEvent({ ...clonedEvent, ...{ currentTarget: { ...clonedEvent.currentTarget, value: '' } } })\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * onMouseUp event, provide additional functionality for onClear event.\n   *\n   * @event onMouseUp\n   * @param {object} event\n   */\n  onMouseUp = event => {\n    const { onClear, onMouseUp, type } = this.props;\n    const { currentTarget } = event;\n    const clonedEvent = { ...event };\n\n    onMouseUp(createMockEvent(event, true));\n\n    if (type !== 'search' || currentTarget.value === '') {\n      return;\n    }\n\n    setTimeout(() => {\n      if (currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      }\n    });\n  };\n\n  /**\n   * onChange event, provide restructured event.\n   *\n   * @param {string} value\n   * @param {object} event\n   */\n  onChange = (value, event) => {\n    const { onChange } = this.props;\n    const clonedEvent = { ...event };\n\n    this.setState({ updatedValue: value }, () => {\n      onChange(createMockEvent(clonedEvent));\n    });\n  };\n\n  /**\n   * Render a text input.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedValue } = this.state;\n    const {\n      className,\n      id,\n      isDisabled,\n      name,\n      onChange,\n      onClear,\n      onKeyUp,\n      onMouseUp,\n      isReadOnly,\n      type,\n      value,\n      ...props\n    } = this.props;\n    const updatedName = name || helpers.generateId();\n    const updatedId = id || updatedName;\n\n    return (\n      <PfTextInput\n        id={updatedId}\n        name={updatedName}\n        className={`curiosity-text-input ${className}`}\n        isDisabled={isDisabled || false}\n        onChange={this.onChange}\n        onKeyUp={this.onKeyUp}\n        onMouseUp={this.onMouseUp}\n        isReadOnly={isReadOnly || false}\n        type={type}\n        value={updatedValue ?? value ?? ''}\n        {...props}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.defaultProps = {\n  className: '',\n  id: null,\n  isDisabled: false,\n  isReadOnly: false,\n  name: null,\n  onChange: helpers.noop,\n  onClear: helpers.noop,\n  onKeyUp: helpers.noop,\n  onMouseUp: helpers.noop,\n  type: 'text',\n  value: ''\n};\n\nexport { TextInput as default, TextInput };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment } from 'react';\nimport { Toolbar, useOUIAId } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport '../TableToolbar/TableToolbar.css';\nfunction generateCount(results) {\n    if (results > 1 || results < 1) {\n        return \"\".concat(results, \" Results\");\n    }\n    else {\n        return \"\".concat(results, \" Result\");\n    }\n}\nvar TableToolbar = function (_a) {\n    var _b;\n    var _c = _a.isFooter, isFooter = _c === void 0 ? false : _c, results = _a.results, className = _a.className, selected = _a.selected, children = _a.children, ouiaId = _a.ouiaId, _d = _a.ouiaSafe, ouiaSafe = _d === void 0 ? true : _d, props = __rest(_a, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n    var tableToolbarClasses = classNames('ins-c-table__toolbar', (_b = {}, _b[\"ins-m-footer\"] = isFooter, _b), className);\n    var ouiaComponentType = 'RHI/TableToolbar';\n    var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n    return (_jsxs(Fragment, { children: [_jsx(Toolbar, __assign({ className: tableToolbarClasses, \"data-ouia-component-type\": ouiaComponentType, \"data-ouia-component-id\": ouiaFinalId, \"data-ouia-safe\": ouiaSafe }, props, { children: children })), ((results && results >= 0) || (selected && selected >= 0)) && (_jsxs(\"div\", __assign({ className: \"ins-c-table__toolbar-results\" }, { children: [results && results >= 0 && _jsxs(\"span\", __assign({ className: \"ins-c-table__toolbar-results-count\" }, { children: [\" \", generateCount(results), \" \"] })), selected && selected >= 0 && _jsxs(\"span\", __assign({ className: \"ins-c-table__toolbar-results-selected\" }, { children: [\" \", selected, \" Selected \"] }))] })))] }));\n};\nexport default TableToolbar;\n//# sourceMappingURL=TableToolbar.js.map","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDeepCompareEffect } from 'react-use';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader, CardHeaderMain } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { useSession } from '../authentication/authenticationContext';\nimport {\n  useProduct,\n  useProductInventoryHostsConfig,\n  useProductInventoryHostsQuery\n} from '../productView/productViewContext';\nimport { helpers } from '../../common';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { InventoryGuests } from '../inventoryGuests/inventoryGuests';\nimport { inventoryCardHelpers } from './inventoryCardHelpers';\nimport Pagination from '../pagination/pagination';\nimport { ToolbarFieldDisplayName } from '../toolbar/toolbarFieldDisplayName';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\nimport { useGetInstancesInventory, useOnPageInstances, useOnColumnSortInstances } from './inventoryCardContext';\n\n/**\n * ToDo: Update table component and review the deep comparison use on data\n * The newer table wrapper should remove the need to use the deep comparison,\n * temporarily using to allow the move from the deprecated inventory.\n */\n/**\n * Set up inventory cards. Expand filters with base settings.\n *\n * @param {object} props\n * @param {Node} props.cardActions\n * @param {boolean} props.isDisabled\n * @param {number} props.perPageDefault\n * @param {Function} props.t\n * @param {Function} props.useGetInventory\n * @param {Function} props.useOnPage\n * @param {Function} props.useOnColumnSort\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryConfig\n * @param {Function} props.useProductInventoryQuery\n * @param {Function} props.useSession\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n * @returns {Node}\n */\nconst InventoryCard = ({\n  cardActions,\n  isDisabled,\n  perPageDefault,\n  t,\n  useGetInventory: useAliasGetInventory,\n  useOnPage: useAliasOnPage,\n  useOnColumnSort: useAliasOnColumnSort,\n  useProduct: useAliasProduct,\n  useProductInventoryConfig: useAliasProductInventoryConfig,\n  useProductInventoryQuery: useAliasProductInventoryQuery,\n  useSession: useAliasSession\n}) => {\n  const [updatedColumnsRows, setUpdatedColumnsRows] = useState({ columnHeaders: [], rows: [] });\n  const sessionData = useAliasSession();\n  const query = useAliasProductInventoryQuery();\n  const onPage = useAliasOnPage();\n  const onColumnSort = useAliasOnColumnSort();\n  const { productId } = useAliasProduct();\n  const { filters: filterInventoryData, settings } = useAliasProductInventoryConfig();\n  const { error, fulfilled, pending, data = {} } = useAliasGetInventory({ isDisabled });\n  const { data: listData = [], meta = {} } = data;\n\n  useDeepCompareEffect(() => {\n    let updatedColumnHeaders = [];\n    let updatedRows = [];\n\n    if (fulfilled && listData.length) {\n      updatedRows = listData.map(({ ...cellData }) => {\n        const { columnHeaders, cells } = inventoryCardHelpers.parseRowCellsListData({\n          filters: inventoryCardHelpers.parseInventoryFilters({\n            filters: filterInventoryData,\n            onSort: onColumnSort,\n            query\n          }),\n          cellData,\n          meta,\n          session: sessionData,\n          productId\n        });\n\n        updatedColumnHeaders = columnHeaders;\n        const subscriptionManagerId = cellData?.subscriptionManagerId;\n        const numberOfGuests = cellData?.numberOfGuests;\n        let isSubTable;\n\n        // Is there a subTable, callback, or attempt to determine, return boolean\n        if (typeof settings?.hasSubTable === 'function') {\n          isSubTable = settings.hasSubTable({ ...cellData }, { ...sessionData });\n        } else {\n          isSubTable = numberOfGuests > 0 && subscriptionManagerId;\n        }\n\n        return {\n          cells,\n          expandedContent:\n            (isSubTable && (\n              <InventoryGuests\n                key={`guests-${subscriptionManagerId}`}\n                numberOfGuests={numberOfGuests}\n                id={subscriptionManagerId}\n              />\n            )) ||\n            undefined\n        };\n      });\n    }\n\n    setUpdatedColumnsRows(() => ({\n      columnHeaders: updatedColumnHeaders,\n      rows: updatedRows\n    }));\n  }, [filterInventoryData, fulfilled, listData]);\n\n  if (isDisabled) {\n    return (\n      <Card className=\"curiosity-inventory-card__disabled\">\n        <CardBody>\n          <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n        </CardBody>\n      </Card>\n    );\n  }\n\n  const itemCount = meta?.count;\n  const updatedPerPage = query[RHSM_API_QUERY_SET_TYPES.LIMIT] || perPageDefault;\n  const updatedOffset = query[RHSM_API_QUERY_SET_TYPES.OFFSET];\n  const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n  // Set an updated key to force refresh minHeight\n  const minHeightContentRefreshKey =\n    (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    `bodyMinHeight-${updatedPerPage}`;\n\n  return (\n    <Card className=\"curiosity-inventory-card\">\n      <MinHeight key=\"headerMinHeight\" updateOnContent>\n        <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n          {cardActions}\n          <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n            <Pagination\n              isCompact\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              offset={updatedOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={updatedPerPage}\n            />\n          </CardActions>\n        </CardHeader>\n      </MinHeight>\n      <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n        <CardBody>\n          <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n            {pending && (\n              <Loader\n                variant=\"table\"\n                tableProps={{\n                  className: 'curiosity-inventory-list',\n                  colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                  colWidth:\n                    (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                  rowCount: listData?.length || updatedPerPage,\n                  variant: TableVariant.compact\n                }}\n              />\n            )}\n            {!pending && (\n              <Table\n                borders\n                variant={TableVariant.compact}\n                className=\"curiosity-inventory-list\"\n                columnHeaders={updatedColumnsRows.columnHeaders}\n                rows={updatedColumnsRows.rows}\n              />\n            )}\n          </div>\n        </CardBody>\n      </MinHeight>\n      <MinHeight key=\"footerMinHeight\" updateOnContent>\n        <CardFooter\n          className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n          aria-hidden={error || !itemCount || false}\n        >\n          <TableToolbar isFooter>\n            <Pagination\n              dropDirection=\"up\"\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              offset={updatedOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={updatedPerPage}\n            />\n          </TableToolbar>\n        </CardFooter>\n      </MinHeight>\n    </Card>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{cardActions: React.ReactNode, useSession: Function, useOnPage: Function, useProduct: Function, t: Function,\n *     perPageDefault: number, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCard.propTypes = {\n  cardActions: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  t: PropTypes.func,\n  useGetInventory: PropTypes.func,\n  useOnPage: PropTypes.func,\n  useOnColumnSort: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryConfig: PropTypes.func,\n  useProductInventoryQuery: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{cardActions: React.ReactNode, useSession: Function, useOnPage: Function, useProduct: Function, t: translate,\n *     perPageDefault: number, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCard.defaultProps = {\n  cardActions: (\n    <CardHeaderMain>\n      <ToolbarFieldDisplayName />\n    </CardHeaderMain>\n  ),\n  isDisabled: helpers.UI_DISABLED_TABLE_INSTANCES,\n  perPageDefault: 10,\n  t: translate,\n  useGetInventory: useGetInstancesInventory,\n  useOnPage: useOnPageInstances,\n  useOnColumnSort: useOnColumnSortInstances,\n  useProduct,\n  useProductInventoryConfig: useProductInventoryHostsConfig,\n  useProductInventoryQuery: useProductInventoryHostsQuery,\n  useSession\n};\n\nexport { InventoryCard as default, InventoryCard };\n","import { useShallowCompareEffect } from 'react-use';\nimport _camelCase from 'lodash/camelCase';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport {\n  RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES as HOSTS_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\n\n/**\n * Combined Redux RHSM Actions, getHostsInventory, and inventory selector response.\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}|*[]|{}), pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetHostsInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getHostsInventory,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryHostsQuery,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductInventoryQuery();\n  const dispatch = useAliasDispatch();\n  const { cancelled, pending, data, ...response } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.hostsInventory?.[productId]\n  );\n\n  useShallowCompareEffect(() => {\n    if (!isDisabled) {\n      getInventory(productId, query)(dispatch);\n    }\n  }, [dispatch, isDisabled, productId, query]);\n\n  return {\n    ...response,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * Combined Redux RHSM Actions, getInstancesInventory, and inventory selector response.\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}|*[]|{}), pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetInstancesInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getInstancesInventory,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryHostsQuery,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductInventoryQuery();\n  const dispatch = useAliasDispatch();\n  const { cancelled, pending, data, ...response } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.instancesInventory?.[productId]\n  );\n\n  useShallowCompareEffect(() => {\n    if (!isDisabled) {\n      getInventory(productId, query)(dispatch);\n    }\n  }, [dispatch, isDisabled, productId, query]);\n\n  return {\n    ...response,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * An onPage callback for instances inventory.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnPageInstances = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for instances inventory.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   * @returns {void}\n   */\n  return ({ offset, perPage }) => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n};\n\n/**\n * An onColumnSort callback for hosts inventory.\n *\n * @param {object} options\n * @param {object} options.sortColumns\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnColumnSortHosts = ({\n  sortColumns = HOSTS_SORT_TYPES,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for hosts inventory.\n   *\n   * @event onColumnSort\n   * @param {*} _data\n   * @param {object} params\n   * @param {string} params.direction\n   * @param {string} params.id\n   * @returns {void}\n   */\n  return (_data, { direction, id }) => {\n    const updatedSortColumn = Object.values(sortColumns).find(value => value === id || _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n};\n\n/**\n * An onColumnSort callback for instances inventory.\n *\n * @param {object} options\n * @param {object} options.sortColumns\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnColumnSortInstances = ({\n  sortColumns = SORT_TYPES,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for instances inventory.\n   *\n   * @event onColumnSort\n   * @param {*} _data\n   * @param {object} params\n   * @param {string} params.direction\n   * @param {string} params.id\n   * @returns {void}\n   */\n  return (_data, { direction, id }) => {\n    const updatedSortColumn = Object.values(sortColumns).find(value => value === id || _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n};\n\nconst context = {\n  useGetHostsInventory,\n  useGetInstancesInventory,\n  useOnPageInstances,\n  useOnColumnSortHosts,\n  useOnColumnSortInstances\n};\n\nexport {\n  context as default,\n  context,\n  useGetHostsInventory,\n  useGetInstancesInventory,\n  useOnPageInstances,\n  useOnColumnSortHosts,\n  useOnColumnSortInstances\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup } from '@patternfly/react-core';\nimport _debounce from 'lodash/debounce';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport { TextInput } from '../form/textInput';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: evaluate the debounce milliseconds, currently based off platforms default 800 ms\n */\n/**\n * Display a display name input field for search.\n *\n * @fires onSubmit\n * @fires onClear\n * @fires onKeyUp\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.useDispatch\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryHostsQuery\n * @returns {Node}\n */\nconst ToolbarFieldDisplayName = ({\n  t,\n  useDispatch: useAliasDispatch,\n  useProduct: useAliasProduct,\n  useProductInventoryHostsQuery: useAliasProductInventoryHostsQuery\n}) => {\n  const { viewId } = useAliasProduct();\n  const { [RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME]: currentValue } = useAliasProductInventoryHostsQuery();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On submit, dispatch type.\n   *\n   * @event onSubmit\n   * @param {string} submitValue\n   * @returns {void}\n   */\n  const onSubmit = submitValue =>\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME]: submitValue?.trim() || null\n      }\n    ]);\n\n  /**\n   * On clear, dispatch type.\n   *\n   * @event onClear\n   * @returns {void}\n   */\n  const onClear = () => {\n    if (currentValue === '' || !currentValue) {\n      return;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME]: null\n      }\n    ]);\n  };\n\n  /**\n   * Set up submit debounce event to allow for bypass.\n   */\n  const debounced = _debounce(onSubmit, 700);\n\n  /**\n   * On enter submit value, on type submit value, and on esc ignore (clear value at component level).\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 13:\n        onSubmit(event.value);\n        break;\n      case 27:\n        break;\n      default:\n        debounced(event.value);\n        break;\n    }\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        aria-label={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        className=\"curiosity-input__display-name\"\n        iconVariant=\"search\"\n        maxLength={255}\n        onClear={onClear}\n        onKeyUp={onKeyUp}\n        value={currentValue}\n        placeholder={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        data-test=\"toolbarFieldDisplayName\"\n      />\n    </InputGroup>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.propTypes = {\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryHostsQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.defaultProps = {\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useProduct,\n  useProductInventoryHostsQuery\n};\n\nexport { ToolbarFieldDisplayName as default, ToolbarFieldDisplayName };\n"],"names":["TextInput","state","updatedValue","onKeyUp","event","props","onClear","type","currentTarget","keyCode","clonedEvent","createMockEvent","value","setState","onMouseUp","setTimeout","onChange","this","className","id","isDisabled","name","isReadOnly","updatedName","helpers","updatedId","React","defaultProps","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","generateCount","results","concat","_a","_b","_c","isFooter","selected","children","ouiaId","_d","ouiaSafe","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","tableToolbarClasses","ouiaComponentType","ouiaFinalId","useOUIAId","Fragment","Toolbar","InventoryCard","cardActions","perPageDefault","useAliasGetInventory","useGetInventory","useAliasOnPage","useOnPage","useAliasOnColumnSort","useOnColumnSort","useAliasProduct","useProduct","useAliasProductInventoryConfig","useProductInventoryConfig","useAliasProductInventoryQuery","useProductInventoryQuery","useAliasSession","useSession","useState","columnHeaders","rows","updatedColumnsRows","setUpdatedColumnsRows","sessionData","query","onPage","onColumnSort","productId","filterInventoryData","filters","settings","error","fulfilled","pending","data","listData","meta","useDeepCompareEffect","updatedColumnHeaders","updatedRows","map","cellData","inventoryCardHelpers","onSort","session","cells","subscriptionManagerId","numberOfGuests","expandedContent","hasSubTable","InventoryGuests","key","undefined","Card","CardBody","Bullseye","context","itemCount","count","updatedPerPage","RHSM_API_QUERY_SET_TYPES","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","MinHeight","updateOnContent","CardHeader","CardActions","isCompact","offset","onPerPage","perPage","Loader","variant","tableProps","colCount","keys","colWidth","cellWidth","rowCount","TableVariant","borders","CardFooter","dropDirection","CardHeaderMain","ToolbarFieldDisplayName","translate","useGetInstancesInventory","useOnPageInstances","useOnColumnSortInstances","useProductInventoryHostsConfig","useProductInventoryHostsQuery","useGetHostsInventory","getInventory","reduxActions","useDispatch","useAliasDispatch","storeHooks","useSelectorsResponse","useAliasSelectorsResponse","dispatch","inventory","hostsInventory","cancelled","response","useShallowCompareEffect","instancesInventory","reduxTypes","viewId","useOnColumnSortHosts","sortColumns","HOSTS_SORT_TYPES","_data","updatedDirection","direction","updatedSortColumn","values","find","_camelCase","SortByDirection","SORT_DIRECTION_TYPES","console","warn","SORT_TYPES","containerRef","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","clientWidth","current","setMinHeight","window","setResizeObserver","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","ref","Pagination","onSetPage","page","limit","onPerPageSelect","calculateOffsetFromPage","calculatePageFromOffset","Math","ceil","useAliasProductInventoryHostsQuery","currentValue","onSubmit","submitValue","trim","debounced","_debounce","InputGroup","iconVariant","maxLength","placeholder"],"sourceRoot":""}
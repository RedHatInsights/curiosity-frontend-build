{"version":3,"file":"js/8213.1654263763119.bc7f6e4c6fb44dafcaa7.js","mappings":"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","sources":["webpack:///./src/components/chart/chartTooltip.js"],"sourcesContent":["import React from 'react';\nimport { helpers } from '../../common';\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * FixMe: The right graph boundary for tooltips is dependent on Voronoi container padding.\n * A limitation exists where Voronoi containers can only have a single padding setting. This means we use\n * the lowest number value from the \"padding\" setting. The repercussion is the right boundary either has to\n * be the lowest padding value, or equal to the lowest padding from any of the other dimensions, ie. top,\n * bottom, left.\n */\n/**\n * Return a compatible Victory tooltip component.\n *\n * @param {object} params\n * @param {object} params.chartSettings\n * @param {Function} params.chartContainerRef\n * @param {Function} params.chartTooltipRef\n * @param {number} params.minChartWidth\n * @returns {Function}\n */\nconst chartTooltip = ({\n  chartSettings = {},\n  chartContainerRef = helpers.noop,\n  chartTooltipRef = helpers.noop,\n  minChartWidth = 500\n} = {}) => {\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip x coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getXCoordinate = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return x + padding - tooltipWidth / 2;\n    }\n\n    return x > width / 2 ? x - tooltipWidth + padding : x + padding;\n  };\n\n  /**\n   * Return a tooltip y coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.y\n   * @param {number} params.height\n   * @param {number} params.tooltipHeight\n   * @param {number} params.width\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getYCoordinate = ({ y, height, tooltipHeight, width, padding = 15, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth) {\n      return y > height / 2 ? y - tooltipHeight - padding : y + padding;\n    }\n\n    return height * 0.25;\n  };\n\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip tail position CSS class.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const tailPosition = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return 'middle';\n    }\n\n    return x > width / 2 ? 'right' : 'left';\n  };\n\n  return ({ x, y, datum = {} }) => { // eslint-disable-line\n    const { padding = {}, tooltipDataSetLookUp = {} } = chartSettings;\n\n    const containerRef = chartContainerRef();\n    const tooltipRef = chartTooltipRef();\n    const updatedPadding = { bottom: 0, left: 0, right: 0, top: 0, ...padding };\n    const content = tooltipDataSetLookUp?.[datum.x]?.tooltip || '';\n    const containerBounds = containerRef?.current?.querySelector('svg')?.getBoundingClientRect() || {\n      width: 0,\n      height: 0\n    };\n\n    const tooltipBounds = tooltipRef?.current?.getBoundingClientRect() || { width: 0, height: 0 };\n\n    if (content) {\n      const isOutsideGraphBottom = y > containerBounds.height - updatedPadding.bottom;\n      const isOutsideGraphLeft = x < updatedPadding.left;\n      const isOutsideGraphRight = x > containerBounds.width - updatedPadding.right;\n      const isOutsideGraphTop = y < updatedPadding.top;\n      const updatedClassName = `${(tooltipBounds.height <= 0 && 'fadein') || ''}`;\n\n      return (\n        <g>\n          <foreignObject\n            x={getXCoordinate({ x, width: containerBounds.width, tooltipWidth: tooltipBounds.width })}\n            y={getYCoordinate({\n              y,\n              height: containerBounds.height,\n              tooltipHeight: tooltipBounds.height,\n              width: containerBounds.width\n            })}\n            width=\"100%\"\n            height=\"100%\"\n          >\n            <div\n              className={`curiosity-chartarea__tooltip-container ${updatedClassName}`}\n              ref={tooltipRef}\n              style={{\n                display:\n                  ((isOutsideGraphBottom || isOutsideGraphLeft || isOutsideGraphRight || isOutsideGraphTop) &&\n                    'none') ||\n                  'inline-block'\n              }}\n              xmlns=\"http://www.w3.org/1999/xhtml\"\n            >\n              <div\n                className={`curiosity-chartarea__tooltip curiosity-chartarea__tooltip-${tailPosition({\n                  x,\n                  y,\n                  width: containerBounds.width,\n                  tooltipWidth: tooltipBounds.width\n                })}`}\n              >\n                {content}\n              </div>\n            </div>\n          </foreignObject>\n        </g>\n      );\n    }\n\n    return <g />;\n  };\n};\n\nexport { chartTooltip as default, chartTooltip };\n"],"names":["chartTooltip","chartSettings","chartContainerRef","helpers","chartTooltipRef","minChartWidth","getXCoordinate","x","width","tooltipWidth","padding","minWidth","getYCoordinate","y","height","tooltipHeight","tailPosition","datum","tooltipDataSetLookUp","containerRef","tooltipRef","updatedPadding","bottom","left","right","top","content","tooltip","containerBounds","current","querySelector","getBoundingClientRect","tooltipBounds","isOutsideGraphBottom","isOutsideGraphLeft","isOutsideGraphRight","isOutsideGraphTop","updatedClassName","className","ref","style","display","xmlns"],"sourceRoot":""}
{"version":3,"file":"js/6395.1665158949802.4c7c380d08d9432393e1.js","mappings":"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Q,MACR,UAAW,MACX,OAAQ,KACR,YAAa,MACb,eAAgB,MAChB,UAAW,KACX,OAAQ,MACR,UAAW,MACX,aAAc,MACd,gBAAiB,MACjB,OAAQ,MACR,UAAW,MACX,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,MACd,UAAW,MACX,aAAc,OAIf,SAAS2hC,EAAeC,GACvB,IAAIrwC,EAAKswC,EAAsBD,GAC/B,OAAOE,EAAoBvwC,EAC5B,CACA,SAASswC,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAE/hC,EAAK4hC,GAAM,CACpC,IAAIngC,EAAI,IAAI1Q,MAAM,uBAAyB6wC,EAAM,KAEjD,MADAngC,EAAE2jB,KAAO,mBACH3jB,CACP,CACA,OAAOzB,EAAI4hC,EACZ,CACAD,EAAelvC,KAAO,WACrB,OAAOV,OAAOU,KAAKuN,EACpB,EACA2hC,EAAevxC,QAAUyxC,EACzBpzC,EAAOC,QAAUizC,EACjBA,EAAepwC,GAAK,K,wBCnSpB,IAAIyO,EAAM,CACT,qCAAsC,CACrC,OAED,4CAA6C,CAC5C,OAED,qCAAsC,CACrC,MACA,KACA,MAED,4CAA6C,CAC5C,MACA,KACA,MAED,mBAAoB,CACnB,MACA,KACA,KACA,KAED,4BAA6B,CAC5B,MACA,MAED,0BAA2B,CAC1B,MACA,MAED,2BAA4B,CAC3B,MACA,KACA,KACA,MAED,0BAA2B,CAC1B,MACA,MAED,uBAAwB,CACvB,MAED,yBAA0B,CACzB,MACA,MAED,0BAA2B,CAC1B,MACA,MAED,qBAAsB,CACrB,MACA,KACA,KACA,KACA,MAED,wBAAyB,CACxB,MACA,MAED,sBAAuB,CACtB,MACA,KAED,mBAAoB,CACnB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sCAAuC,CACtC,MACA,KACA,KACA,KACA,IACA,MAED,2BAA4B,CAC3B,MACA,KACA,KACA,KACA,IACA,KACA,KAED,2CAA4C,CAC3C,MACA,KACA,KACA,IACA,MAED,gCAAiC,CAChC,MACA,KACA,KACA,KACA,IACA,KACA,MAED,sCAAuC,CACtC,MACA,MAED,4CAA6C,CAC5C,MACA,KAED,uCAAwC,CACvC,MACA,MAED,kCAAmC,CAClC,MACA,MAED,kCAAmC,CAClC,MACA,MAED,iCAAkC,CACjC,MACA,KACA,KACA,KACA,IACA,KACA,MAED,uCAAwC,CACvC,MACA,MAED,kCAAmC,CAClC,MACA,KACA,KACA,KACA,IACA,KACA,MAED,iBAAkB,CACjB,OAED,mCAAoC,CACnC,MACA,KACA,KACA,KACA,KAED,0CAA2C,CAC1C,MACA,KACA,MAED,0CAA2C,CAC1C,MACA,MAED,8CAA+C,CAC9C,MACA,KACA,KACA,MAED,6DAA8D,CAC7D,MACA,KACA,KACA,KACA,IAED,oEAAqE,CACpE,MACA,KACA,MAED,6CAA8C,CAC7C,MACA,MAED,uCAAwC,CACvC,MACA,KACA,MAED,8CAA+C,CAC9C,MACA,KACA,MAED,kCAAmC,CAClC,MACA,KAED,mCAAoC,CACnC,MACA,MAED,qBAAsB,CACrB,MAED,+BAAgC,CAC/B,OAED,2BAA4B,CAC3B,MACA,KAED,2BAA4B,CAC3B,IACA,MAED,8BAA+B,CAC9B,MAED,6BAA8B,CAC7B,OAED,6BAA8B,CAC7B,OAED,+BAAgC,CAC/B,OAED,8BAA+B,CAC9B,OAED,8BAA+B,CAC9B,OAED,6BAA8B,CAC7B,MACA,MAED,oCAAqC,CACpC,MACA,MAED,+BAAgC,CAC/B,MACA,KACA,KACA,KACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,MAED,sCAAuC,CACtC,MACA,MAED,sCAAuC,CACtC,MACA,MAED,iDAAkD,CACjD,MACA,KACA,KACA,KACA,IACA,IACA,KACA,KACA,KACA,KACA,MAED,iDAAkD,CACjD,MACA,KACA,KACA,KACA,IACA,IACA,KACA,KACA,KACA,KACA,KACA,KACA,MAED,oBAAqB,CACpB,OAED,uBAAwB,CACvB,OAED,qBAAsB,CACrB,OAED,4BAA6B,CAC5B,OAED,4BAA6B,CAC5B,OAED,mBAAoB,CACnB,OAED,wBAAyB,CACxB,OAED,2BAA4B,CAC3B,OAED,iBAAkB,CACjB,MACA,IAED,uBAAwB,CACvB,MACA,KACA,IACA,KAED,8BAA+B,CAC9B,MACA,KACA,IACA,MAED,2CAA4C,CAC3C,MACA,MAED,uCAAwC,CACvC,MACA,MAED,uCAAwC,CACvC,KACA,MAED,yCAA0C,CACzC,MACA,MAED,0CAA2C,CAC1C,MACA,KACA,IACA,KAED,+BAAgC,CAC/B,MACA,MAED,+BAAgC,CAC/B,MACA,MAED,iCAAkC,CACjC,MACA,MAED,uBAAwB,CACvB,OAGF,SAASgiC,EAAoBJ,GAC5B,IAAIE,EAAoBC,EAAE/hC,EAAK4hC,GAC9B,OAAOzxC,QAAQC,UAAU6xC,MAAK,WAC7B,IAAIxgC,EAAI,IAAI1Q,MAAM,uBAAyB6wC,EAAM,KAEjD,MADAngC,EAAE2jB,KAAO,mBACH3jB,CACP,IAGD,IAAIygC,EAAMliC,EAAI4hC,GAAMrwC,EAAK2wC,EAAI,GAC7B,OAAO/xC,QAAQ+U,IAAIg9B,EAAItQ,MAAM,GAAG5xB,IAAI8hC,EAAoBrgC,IAAIwgC,MAAK,WAChE,OAAOH,EAAoBvwC,EAC5B,GACD,CACAywC,EAAoBvvC,KAAO,WAAa,OAAOV,OAAOU,KAAKuN,EAAM,EACjEgiC,EAAoBzwC,GAAK,MACzB9C,EAAOC,QAAUszC,C","sources":["webpack:///./config/build.empty.js","webpack:///./src/app.js","webpack:///./src/common/helpers.js","webpack:///./src/common/dateHelpers.js","webpack:///./src/common/downloadHelpers.js","webpack:///./src/components/authentication/authentication.js","webpack:///./src/components/authentication/authenticationContext.js","webpack:///./src/components/chart/chartIcon.js","webpack:///./src/components/i18n/i18n.js","webpack:///./src/components/loader/loader.js","webpack:///./src/components/messageView/messageView.js","webpack:///./src/components/pageLayout/pageColumns.js","webpack:///./src/components/pageLayout/pageHeader.js","webpack:///./src/components/pageLayout/pageLayout.js","webpack:///./src/components/pageLayout/pageMessages.js","webpack:///./src/components/pageLayout/pageSection.js","webpack:///./src/components/pageLayout/pageToolbar.js","webpack:///./src/components/router/redirect.js","webpack:///./src/components/router/router.js","webpack:///./src/components/router/routerContext.js","webpack:///./src/components/router/routerHelpers.js","webpack:///./src/components/table/table.js","webpack:///./src/components/table/tableEmpty.js","webpack:///./src/components/table/tableSkeleton.js","webpack:///./src/components/tooltip/tooltip.js","webpack:///./src/config/product.rhel.js","webpack:///./src/config/product.openshiftContainer.js","webpack:///./src/config/product.openshiftMetrics.js","webpack:///./src/config/product.openshiftDedicated.js","webpack:///./src/config/product.rhosak.js","webpack:///./src/config/product.satellite.js","webpack:///./src/config/product.rhacs.js","webpack:///./src/config/product.rhods.js","webpack:///./src/config/routes.js","webpack:///./src/hooks/useRouter.js","webpack:///./src/redux/common/apiQueries.js","webpack:///./src/redux/common/reduxHelpers.js","webpack:///./src/redux/hooks/useReactRedux.js","webpack:///./src/redux/hooks/index.js","webpack:///./src/services/common/helpers.js","webpack:///./src/services/common/serviceConfig.js","webpack:///./src/services/platform/platformSchemas.js","webpack:///./src/services/platform/platformTransformers.js","webpack:///./src/services/platform/platformServices.js","webpack:///./src/redux/actions/platformActions.js","webpack:///./src/services/config.js","webpack:///./src/services/rhsm/rhsmSchemas.js","webpack:///./src/services/rhsm/rhsmTransformers.js","webpack:///./src/services/rhsm/rhsmServices.js","webpack:///./src/redux/actions/rhsmActions.js","webpack:///./src/services/user/userServices.js","webpack:///./src/redux/actions/userActions.js","webpack:///./src/redux/actions/index.js","webpack:///./src/redux/selectors/userSelectors.js","webpack:///./src/redux/selectors/guestsListSelectors.js","webpack:///./src/redux/selectors/graphCardSelectors.js","webpack:///./src/redux/selectors/inventoryListSelectors.js","webpack:///./src/redux/selectors/index.js","webpack:///./src/redux/reducers/graphReducer.js","webpack:///./src/redux/reducers/inventoryReducer.js","webpack:///./src/redux/reducers/messagesReducer.js","webpack:///./src/redux/reducers/toolbarReducer.js","webpack:///./src/redux/reducers/userReducer.js","webpack:///./src/redux/reducers/viewReducer.js","webpack:///./src/redux/reducers/index.js","webpack:///./src/redux/middleware/actionRecordMiddleware.js","webpack:///./src/redux/middleware/index.js","webpack:///./src/redux/middleware/statusMiddleware.js","webpack:///./src/redux/middleware/multiActionMiddleware.js","webpack:///./src/redux/store.js","webpack:///./src/redux/types/appTypes.js","webpack:///./src/redux/types/graphTypes.js","webpack:///./src/redux/types/inventoryTypes.js","webpack:///./src/redux/types/platformTypes.js","webpack:///./src/redux/types/queryTypes.js","webpack:///./src/redux/types/userTypes.js","webpack:///./src/redux/types/index.js","webpack:///./src/redux/types/toolbarTypes.js","webpack:///./src/redux/types/rhsmTypes.js","webpack:///./src/services/platform/platformConstants.js","webpack:///./src/services/rhsm/rhsmConstants.js","webpack:///./src/types/rhsmApiTypes.js","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/components/ lazy ^\\.\\/.*\\.js$ exclude: \\.test\\.js$ namespace object"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMount } from 'react-use';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { reduxActions, storeHooks } from './redux';\nimport { I18n } from './components/i18n/i18n';\nimport { Router } from './components/router';\nimport Authentication from './components/authentication/authentication';\nimport { helpers } from './common';\n\n/**\n * ToDo: Investigate replacing NotificationsPortal\n * NotificationsPortal takes down the entire app when the parent Redux store is unavailable.\n */\n/**\n * Application\n *\n * @param {object} props\n * @param {Function} props.getLocale\n * @param {Function} props.useDispatch\n * @param {Function} props.useSelector\n * @returns {Node}\n */\nconst App = ({ getLocale, useDispatch: useAliasDispatch, useSelector: useAliasSelector }) => {\n  const dispatch = useAliasDispatch();\n  const { value: locale } = useAliasSelector(({ user }) => user?.locale?.data, {});\n  let platformNotifications = null;\n\n  useMount(() => {\n    dispatch(getLocale());\n  });\n\n  if (!helpers.UI_DISABLED_NOTIFICATIONS) {\n    platformNotifications = <NotificationsPortal />;\n  }\n\n  return (\n    <I18n locale={locale || null}>\n      {platformNotifications}\n      <Authentication>\n        <Router />\n      </Authentication>\n    </I18n>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelector: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: reduxActions.user.getLocale,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelector: storeHooks.reactRedux.useSelector\n};\n\nexport { App as default, App };\n","import numbro from 'numbro';\n\n/**\n * Fill for AggregatedError\n *\n * @param {Array|*} errors An array of errors\n * @param {string|*} message\n * @param {object} options\n * @param {string} options.name\n * @returns {Error|window.AggregateError<Error>}\n */\nconst aggregatedError = (errors, message, { name = 'AggregateError' } = {}) => {\n  const { AggregateError, Error } = window;\n  let err;\n\n  if (AggregateError) {\n    err = new AggregateError(errors, message);\n  } else {\n    err = new Error(message);\n    err.name = name;\n    err.errors = (Array.isArray(errors) && errors) || [errors];\n    err.isEmulated = true;\n  }\n  return err;\n};\n\n/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string|Array} key\n * @param {string|object|Array} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) => {\n  const updatedKey = (Array.isArray(key) && `[${key}]`) || key;\n  const updatedValue =\n    (typeof value === 'string' && value) ||\n    (Array.isArray(value) && `[${value}]`) ||\n    (Object.keys(value || '').length && JSON.stringify(value)) ||\n    '';\n  const updatedComponents = (components && `${components}`) || '';\n\n  return `t(${updatedKey}${(updatedValue && `, ${updatedValue}`) || ''}${\n    (updatedComponents && `, ${updatedComponents}`) || ''\n  })`;\n};\n\n/**\n * ToDo: review adding \"locale\" for numbro\n */\n/**\n * Convenience wrapper for numbro. Numbro assumes all values passed to it conform as \"number\".\n * This allows us to optional chain the function results.\n *\n * @param {*} value\n * @returns {numbro.Numbro|*}\n */\nconst numberDisplay = value => {\n  if (typeof value !== 'number' || Number.isNaN(value)) {\n    return value;\n  }\n  return numbro(value);\n};\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable platform notifications.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_NOTIFICATIONS = process.env.REACT_APP_UI_DISABLED_NOTIFICATIONS === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the current hosts inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_HOSTS = process.env.REACT_APP_UI_DISABLED_TABLE_HOSTS === 'true';\n\n/**\n * Disable the current instances inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_INSTANCES = process.env.REACT_APP_UI_DISABLED_TABLE_INSTANCES === 'true';\n\n/**\n * Disable the current subscriptions inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_SUBSCRIPTIONS = process.env.REACT_APP_UI_DISABLED_TABLE_SUBSCRIPTIONS === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * A url, or uri, for \"recommend actions\"\n *\n * @type {string}\n */\nconst UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS = process.env.REACT_APP_UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI state logging file name.\n *\n * @type {string}\n */\nconst UI_LOGGER_FILE = process.env.REACT_APP_UI_LOGGER_FILE || 'debug_log_{0}.json';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  aggregatedError,\n  browserExpose,\n  generateId,\n  isDate,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  numberDisplay,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_NOTIFICATIONS,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TABLE_HOSTS,\n  UI_DISABLED_TABLE_INSTANCES,\n  UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_LOGGER_FILE,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && moment.utc('20190720').toDate()) ||\n  (helpers.DEV_MODE &&\n    process.env.REACT_APP_DEBUG_DEFAULT_DATETIME &&\n    moment.utc(process.env.REACT_APP_DEBUG_DEFAULT_DATETIME).toDate()) ||\n  moment.utc().toDate();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @param {string} params.endOfMeasurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement, endOfMeasurement = 'days' }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf(endOfMeasurement).toDate()\n});\n\nconst currentDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 1, measurement: 'days' });\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\nconst rangedYearDateTime = setRangedDateTime({\n  date: getCurrentDate(),\n  subtract: 11,\n  measurement: 'months',\n  endOfMeasurement: 'months'\n});\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case 'CURRENT':\n      return { ...currentDateTime };\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Generate a list of months for use in a select list.\n *\n * @param {string} month\n * @returns {{keyDateTimeRanges: {}, listDateTimeRanges: *[]}|*}\n */\nconst getRangedMonthDateTime = month => {\n  const currentYear = Number.parseInt(moment.utc(getCurrentDate()).year(), 10);\n  const { startDate, endDate } = { ...rangedYearDateTime };\n  const keyDateTimeRanges = {};\n  let listDateTimeRanges = [];\n\n  const startDateUpdated = moment.utc(startDate);\n  const endDateUpdated = moment.utc(endDate);\n\n  while (endDateUpdated > startDateUpdated || startDateUpdated.format('M') === endDateUpdated.format('M')) {\n    const dateTime = {\n      value: {\n        startDate: startDateUpdated.toDate()\n      }\n    };\n\n    const titleYear = startDateUpdated.format('MMMM YYYY');\n    const title = startDateUpdated.format('MMMM');\n    const titleIndex = startDateUpdated.format('M');\n    const isNextYear = currentYear !== Number.parseInt(startDateUpdated.year(), 10);\n\n    dateTime.title = (isNextYear && titleYear) || title;\n    dateTime._title = title.toLowerCase();\n    dateTime.value.endDate = moment.utc(startDateUpdated).endOf('month').toDate();\n\n    startDateUpdated.add(1, 'month');\n\n    dateTime.title = translate('curiosity-toolbar.granularityRangedMonthly', { context: dateTime.title });\n    keyDateTimeRanges[title.toLowerCase()] = { ...dateTime };\n    keyDateTimeRanges[titleIndex] = { ...dateTime };\n    listDateTimeRanges.push(dateTime);\n  }\n\n  listDateTimeRanges = listDateTimeRanges.reverse();\n  listDateTimeRanges[0] = {\n    ...listDateTimeRanges[0],\n    isCurrent: true,\n    _title: 'current',\n    title: translate('curiosity-toolbar.granularityRangedMonthly', { context: 'current' })\n  };\n\n  keyDateTimeRanges.current = { ...listDateTimeRanges[0] };\n\n  if (month) {\n    return keyDateTimeRanges?.[month] || undefined;\n  }\n\n  return { keyDateTimeRanges, listDateTimeRanges };\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\n/**\n * Consistent timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampTimeFormats = {\n  timeLong: 'MMMM D h:mm:ss A',\n  yearTimeLong: 'MMMM D YYYY h:mm:ss A',\n  timeShort: 'MMM D h:mm A',\n  yearTimeShort: 'MMM D YYYY h:mm A'\n};\n\n/**\n * Consistent UTC timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampUTCTimeFormats = {\n  timeLong: 'DD MMMM HH:mm:ss UTC',\n  yearTimeLong: 'DD MMMM YYYY HH:mm:ss UTC',\n  timeShort: 'DD MMM HH:mm UTC',\n  yearTimeShort: 'DD MMM YYYY HH:mm UTC'\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { dateHelpers } from './dateHelpers';\n\n/**\n * Download data to a file\n *\n * @param {object} options\n * @param {string} options.data\n * @param {string} options.fileName\n * @param {string} options.fileType\n * @returns {Promise}\n */\nconst downloadData = options => {\n  const { data = '', fileName = 'download.txt', fileType = 'text/plain' } = options || {};\n  return new Promise((resolve, reject) => {\n    try {\n      const { document, navigator, URL } = window;\n      const blob = new Blob([data], { type: fileType });\n\n      if (navigator?.msSaveBlob) {\n        navigator.msSaveBlob(blob, fileName);\n        resolve({ fileName, data });\n      } else {\n        const anchorTag = document.createElement('a');\n\n        anchorTag.href = URL.createObjectURL(blob);\n        anchorTag.style.display = 'none';\n        anchorTag.download = fileName;\n\n        document.body.appendChild(anchorTag);\n\n        anchorTag.click();\n\n        setTimeout(() => {\n          document.body.removeChild(anchorTag);\n          URL.revokeObjectURL(blob);\n          resolve({ fileName, data });\n        }, 250);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\n/**\n * Download the debug log file.\n */\nconst debugLog = async () => {\n  try {\n    const { sessionStorage } = window;\n    const fileName = `${helpers.UI_LOGGER_FILE}`.replace(\n      '{0}',\n      moment(dateHelpers.getCurrentDate()).format('YYYYMMDD_HHmmss')\n    );\n    const data = JSON.stringify(JSON.parse(sessionStorage.getItem(`${helpers.UI_LOGGER_ID}`)), null, 2);\n\n    await downloadData({ data, fileName, fileType: 'application/json' });\n  } catch (e) {\n    throw new Error(`debuglog error, ${e.message}`);\n  }\n};\n\nconst downloadHelpers = {\n  downloadData,\n  debugLog\n};\n\nhelpers.browserExpose({ debugLog }, { limit: false });\n\nexport { downloadHelpers as default, downloadHelpers, downloadData, debugLog };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { routerHelpers, Redirect } from '../router';\nimport { rhsmConstants } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\nimport MessageView from '../messageView/messageView';\nimport { translate } from '../i18n/i18n';\nimport { AuthenticationContext, useGetAuthorization } from './authenticationContext';\n\n/**\n * An authentication pass-through component.\n *\n * @param {object} props\n * @param {string} props.appName\n * @param {React.ReactNode} props.children\n * @param {boolean} props.isDisabled\n * @param {Function} props.t\n * @param {Function} props.useGetAuthorization\n * @returns {React.ReactNode}\n */\nconst Authentication = ({ appName, children, isDisabled, t, useGetAuthorization: useAliasGetAuthorization }) => {\n  const { pending, data = {} } = useAliasGetAuthorization();\n  const { authorized = {}, errorCodes, errorStatus } = data;\n  const { [appName]: isAuthorized } = authorized;\n\n  const renderContent = () => {\n    if (isDisabled) {\n      return (\n        <MessageView>\n          <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n        </MessageView>\n      );\n    }\n\n    if (isAuthorized) {\n      return children;\n    }\n\n    if (pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (errorCodes && errorCodes.includes(rhsmConstants.RHSM_API_RESPONSE_ERRORS_CODE_TYPES.OPTIN)) ||\n      errorStatus === 418\n    ) {\n      return <Redirect route={routerHelpers.getErrorRoute.path} />;\n    }\n\n    return (\n      <MessageView>\n        <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n      </MessageView>\n    );\n  };\n\n  return <AuthenticationContext.Provider value={data}>{renderContent()}</AuthenticationContext.Provider>;\n};\n\n/**\n * Prop types.\n *\n * @type {{useGetAuthorization: Function, children: React.ReactNode, appName: string, isDisabled: boolean}}\n */\nAuthentication.propTypes = {\n  appName: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  useGetAuthorization: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useGetAuthorization: Function, t: Function, appName: string, isDisabled: boolean}}\n */\nAuthentication.defaultProps = {\n  appName: routerHelpers.appName,\n  isDisabled: helpers.UI_DISABLED,\n  t: translate,\n  useGetAuthorization\n};\n\nexport { Authentication as default, Authentication };\n","import React, { useContext, useState } from 'react';\nimport { useMount, useUnmount } from 'react-use';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { routerHooks } from '../../hooks/useRouter';\nimport { helpers } from '../../common';\nimport { routerHelpers } from '../router';\n\n/**\n * Base context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst AuthenticationContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated authentication context.\n *\n * @returns {React.Context<{}>}\n */\nconst useAuthContext = () => useContext(AuthenticationContext);\n\n/**\n * Initialize an app, and return a combined state store that includes authorization, locale, and API errors\n *\n * @param {object} options\n * @param {string} options.appName\n * @param {Function} options.authorizeUser\n * @param {Function} options.hideGlobalFilter\n * @param {Function} options.initializeChrome\n * @param {Function} options.onNavigation\n * @param {Function} options.setAppName\n * @param {Function} options.useDispatch\n * @param {Function} options.useHistory\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: {errorCodes, errorStatus: *, locale}, pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetAuthorization = ({\n  appName = routerHelpers.appName,\n  authorizeUser = reduxActions.platform.authorizeUser,\n  hideGlobalFilter = reduxActions.platform.hideGlobalFilter,\n  initializeChrome = reduxActions.platform.initializeChrome,\n  onNavigation = reduxActions.platform.onNavigation,\n  setAppName = reduxActions.platform.setAppName,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useHistory: useAliasHistory = routerHooks.useHistory,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const [unregister, setUnregister] = useState(() => helpers.noop);\n  const history = useAliasHistory();\n  const dispatch = useAliasDispatch();\n  const { data, error, fulfilled, pending, responses } = useAliasSelectorsResponse([\n    { id: 'auth', selector: ({ user }) => user?.auth },\n    { id: 'locale', selector: ({ user }) => user?.locale },\n    {\n      id: 'errors',\n      selector: ({ user }) => (user?.errors?.error === true && user.errors) || { fulfilled: true, data: [] }\n    }\n  ]);\n\n  useMount(async () => {\n    await dispatch(authorizeUser());\n    dispatch([initializeChrome(), setAppName(appName), hideGlobalFilter()]);\n    setUnregister(() => dispatch(onNavigation(event => history.push(event.navId))));\n  });\n\n  useUnmount(() => {\n    unregister();\n  });\n\n  const [user = {}, app = {}] = (Array.isArray(data.auth) && data.auth) || [];\n  const errorStatus = (error && responses?.id?.errors?.status) || null;\n\n  return {\n    data: {\n      ...user,\n      ...app,\n      locale: data.locale,\n      errorCodes: data.errors,\n      errorStatus\n    },\n    error,\n    fulfilled,\n    pending\n  };\n};\n\n/**\n * Return session data from authentication context.\n *\n * @param {Function} useAliasAuthContext\n * @returns {{errorCodes, errorStatus: *, locale}}\n */\nconst useSession = ({ useAuthContext: useAliasAuthContext = useAuthContext } = {}) => {\n  const session = useAliasAuthContext();\n  return {\n    ...session\n  };\n};\n\nconst context = {\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useGetAuthorization,\n  useSession\n};\n\nexport {\n  context as default,\n  context,\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useGetAuthorization,\n  useSession\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EyeIcon, EyeSlashIcon, SquareIcon, IconSize } from '@patternfly/react-icons';\n\n/**\n * Emulate pf icon sizing for custom SVGs\n *\n * @param {string} size\n * @returns {string} em measurement\n */\nconst getSize = size => {\n  if (!Number.isNaN(Number.parseFloat(size))) {\n    return size;\n  }\n\n  switch (size) {\n    case 'md':\n      return '1.5em';\n    case 'lg':\n      return '2em';\n    case 'xl':\n      return '3em';\n    case 'sm':\n    default:\n      return '1em';\n  }\n};\n\n/**\n * Render an icon for use outside of Victory charts.\n *\n * @param {object} props\n * @param {string} props.fill\n * @param {string} props.symbol\n * @param {string} props.size\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\nconst ChartIcon = ({ fill, symbol, size, title, ...props }) => {\n  const svgProps = { ...props };\n  const iconProps = { size, title, ...props };\n  const fontProps = { style: { fontSize: getSize(size) }, title, ...props };\n  const emSvgSize = getSize(size);\n\n  if (title) {\n    svgProps['aria-labelledby'] = title;\n  } else {\n    svgProps['aria-hidden'] = true;\n  }\n\n  if (fill) {\n    iconProps.color = fill;\n    fontProps.style.color = fill;\n  }\n\n  const setIcon = () => {\n    switch (symbol) {\n      case 'dash':\n        return (\n          <span\n            style={{\n              width: emSvgSize,\n              height: `${Number.parseFloat(emSvgSize) / 2}em`\n            }}\n          >\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 38 10\" role=\"img\" {...svgProps}>\n              <rect y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"14\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"28\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n            </svg>\n          </span>\n        );\n      case 'threshold':\n        return (\n          <span style={{ width: `${Number.parseFloat(emSvgSize) * 2}em`, height: emSvgSize }}>\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 18 10\" role=\"img\" {...svgProps}>\n              <line\n                x1={0}\n                y1={(Number.parseFloat(emSvgSize) * 16) / 2}\n                x2={Number.parseFloat(emSvgSize) * 16 * 3}\n                y2={(Number.parseFloat(emSvgSize) * 16) / 2}\n                stroke={fill}\n                strokeWidth={3}\n                strokeDasharray=\"4,3\"\n              />\n            </svg>\n          </span>\n        );\n      case 'eye':\n        return <EyeIcon {...iconProps} />;\n      case 'eyeSlash':\n        return <EyeSlashIcon {...iconProps} />;\n      case 'infinity':\n        return (\n          <span className=\"curiosity-icon__f-infinity\" {...fontProps}>\n            <span aria-hidden>&#x221e;</span>\n          </span>\n        );\n\n      case 'square':\n      default:\n        return <SquareIcon {...iconProps} />;\n    }\n  };\n\n  return <span className={`curiosity-chartarea__icon curiosity-chartarea__icon-${symbol}`}>{setIcon()}</span>;\n};\n\n/**\n * Prop types.\n *\n * @type {{symbol: string, size: string, fill: string, title: string}}\n */\nChartIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOf([...Object.keys(IconSize)]),\n  symbol: PropTypes.oneOf(['dash', 'eye', 'eyeSlash', 'infinity', 'square', 'threshold']),\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{symbol: string, size: string, fill: null, title: null}}\n */\nChartIcon.defaultProps = {\n  fill: null,\n  size: 'sm',\n  symbol: 'square',\n  title: null\n};\n\nexport { ChartIcon as default, ChartIcon };\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-http-backend';\nimport { initReactI18next, Trans } from 'react-i18next';\nimport { useMount } from 'react-use';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Check to help provide an empty context.\n *\n * @type {string}\n */\nconst EMPTY_CONTEXT = 'LOCALE_EMPTY_CONTEXT';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string|Array} translateKey A key reference, or an array of a primary key with fallback keys.\n * @param {string|object|Array} values A default string if the key can't be found. An object with i18next settings. Or an array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @param {object} options\n * @param {string} options.emptyContextValue Check to allow an empty context value.\n * @returns {string|React.ReactNode}\n */\nconst translate = (translateKey, values = null, components, { emptyContextValue = EMPTY_CONTEXT } = {}) => {\n  const updatedValues = values;\n  let updatedTranslateKey = translateKey;\n\n  if (Array.isArray(updatedTranslateKey)) {\n    updatedTranslateKey = updatedTranslateKey.filter(value => typeof value === 'string' && value.length > 0);\n  }\n\n  if (Array.isArray(updatedValues?.context)) {\n    updatedValues.context = updatedValues.context\n      .map(value => (value === emptyContextValue && ' ') || value)\n      .filter(value => typeof value === 'string' && value.length > 0)\n      .join('_');\n  } else if (updatedValues?.context === emptyContextValue) {\n    updatedValues.context = ' ';\n  }\n\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(updatedTranslateKey, updatedValues, components);\n  }\n\n  if (components) {\n    return (\n      (i18next.store && <Trans i18nKey={updatedTranslateKey} values={updatedValues} components={components} />) || (\n        <React.Fragment>t({updatedTranslateKey})</React.Fragment>\n      )\n    );\n  }\n\n  return (i18next.store && i18next.t(updatedTranslateKey, updatedValues)) || `t([${updatedTranslateKey}])`;\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {React.ReactNode} Component\n * @returns {React.ReactNode}\n */\nconst translateComponent = Component => {\n  const withTranslation = ({ ...props }) => (\n    <Component\n      {...props}\n      t={(i18next.store && translate) || helpers.noopTranslate}\n      i18n={(i18next.store && i18next) || helpers.noop}\n    />\n  );\n\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\n/**\n * Load I18n.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.fallbackLng\n * @param {string} props.loadPath\n * @param {string} props.locale\n * @returns {React.ReactNode}\n */\nconst I18n = ({ children, fallbackLng, loadPath, locale }) => {\n  const [initialized, setInitialized] = useState(false);\n\n  /**\n   * Initialize i18next\n   */\n  useMount(async () => {\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: undefined,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      //\n    }\n\n    setInitialized(true);\n  });\n\n  /**\n   * Update locale.\n   */\n  useEffect(() => {\n    if (initialized) {\n      try {\n        i18next.changeLanguage(locale);\n      } catch (e) {\n        //\n      }\n    }\n  }, [initialized, locale]);\n\n  return (initialized && children) || <React.Fragment />;\n};\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: React.ReactNode, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent, EMPTY_CONTEXT };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    colWidth: PropTypes.array,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader, SkeletonSize };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {Node|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {Node}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, icon: Node|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { helpers } from '../../common';\n\n/**\n * Render page columns based on children.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageColumns = ({ children, className }) => (\n  <Flex\n    alignItems={{ sm: 'alignItemsStretch' }}\n    spaceItems={{ sm: 'spaceItemsNone' }}\n    className={`curiosity-page-columns ${className}`}\n  >\n    {React.Children.toArray(children)\n      .filter(child => React.isValidElement(child))\n      .map(child => (\n        <FlexItem\n          key={(child.key && `page-column-${child.key}`) || helpers.generateId()}\n          grow={{ sm: 'grow' }}\n          className=\"curiosity-page-columns-column\"\n        >\n          {child}\n        </FlexItem>\n      ))}\n  </Flex>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageColumns.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageColumns.defaultProps = {\n  className: ''\n};\n\nexport { PageColumns as default, PageColumns };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader as RcsPageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst PageHeader = ({ children, productLabel, t }) => (\n  <RcsPageHeader>\n    <Flex justifyContent={{ sm: 'justifyContentSpaceBetween' }}>\n      <FlexItem>\n        <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n      </FlexItem>\n    </Flex>\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, productLabel: string, t: Function}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{includeTour: boolean, productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageColumns } from './pageColumns';\nimport { PageMessages } from './pageMessages';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageLayout = ({ children, className }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageMessages)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className={`curiosity ${className}`}>\n      {React.Children.toArray(children).filter(\n        child => child.type !== PageHeader && child.type !== PageMessages && child.type !== PageToolbar\n      )}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageLayout.defaultProps = {\n  className: ''\n};\n\nexport { PageLayout as default, PageLayout, PageColumns, PageHeader, PageMessages, PageSection, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageMessages = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-messages ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageMessages.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageMessages.defaultProps = {\n  className: ''\n};\n\nexport { PageMessages as default, PageMessages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageSection = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-section ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageSection.defaultProps = {\n  className: ''\n};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageToolbar = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-toolbar ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageToolbar.defaultProps = {\n  className: ''\n};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Router } from './router';\nimport { pathJoin, routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\n/**\n * A routing redirect.\n *\n * @param {object} props\n * @param {boolean} props.isForced\n * @param {string} props.route\n * @param {string} props.routes\n * @param {string} props.url\n * @returns {Node}\n */\nconst Redirect = ({ isForced, route, routes, url }) => {\n  const baseName = routerHelpers.dynamicBaseName();\n\n  /**\n   * Bypass router, force the location.\n   */\n  const forceNavigation = () => {\n    const { hash = '', search = '' } = window.location;\n    const forcePath = url || (route && `${pathJoin(baseName, route)}${search}${hash}`);\n\n    window.location.replace(forcePath);\n  };\n\n  const { path: matchedRoutePath, ...matchedRoute } = routerHelpers.getRouteConfig({ pathName: route, id: route });\n\n  if (!isForced && matchedRoutePath) {\n    return <Router routes={[{ ...matchedRoute, path: '*' }, ...routes]} />;\n  }\n\n  forceNavigation();\n\n  return (helpers.TEST_MODE && <React.Fragment>Redirected towards {url || route}</React.Fragment>) || null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, routes: Array, isReplace: boolean, url: string,\n *    isForced: boolean}}\n */\nRedirect.propTypes = {\n  isForced: PropTypes.bool,\n  route: PropTypes.string,\n  routes: PropTypes.array,\n  url: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isRedirect: boolean, route: string, routes: Array, isReplace: boolean, url: string,\n *    isForced: boolean}}\n */\nRedirect.defaultProps = {\n  isForced: false,\n  route: null,\n  routes: routerHelpers.routes,\n  url: null\n};\n\nexport { Redirect as default, Redirect };\n","/* eslint-disable react/jsx-no-constructed-context-values */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport { useMount } from 'react-use';\nimport { RouterContext } from './routerContext';\nimport { routerHelpers } from './routerHelpers';\nimport { Loader } from '../loader/loader';\n\n/**\n * Load routes.\n *\n * @param {object} props\n * @param {Array} props.routes\n * @returns {Node}\n */\nconst Router = ({ routes } = {}) => {\n  const [updatedRoutes, setUpdatedRoutes] = useState([]);\n  const [redirectDefault, setRedirectDefault] = useState(null);\n\n  /**\n   * Initialize routes.\n   */\n  useMount(async () => {\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    const results = await Promise.all(\n      routes.map(async item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        const View = await routerHelpers.importView(item.component);\n\n        return (\n          <Route\n            exact={item.exact}\n            key={item.path}\n            path={item.path}\n            strict={item.strict}\n            render={({ location, ...routeProps }) => {\n              const routeConfig = item.id && routerHelpers.getRouteConfig({ id: item.id });\n              const { URLSearchParams, decodeURIComponent } = window;\n              const parsedSearch = {};\n\n              [\n                ...new Set(\n                  [...new URLSearchParams(decodeURIComponent(location.search))].map(\n                    ([param, value]) => `${param}~${value}`\n                  )\n                )\n              ].forEach(v => {\n                const [param, value] = v.split('~');\n                parsedSearch[param] = value;\n              });\n\n              const updatedLocation = {\n                ...location,\n                parsedSearch\n              };\n\n              const routeDetail = {\n                baseName: routerHelpers.dynamicBaseName(),\n                errorRoute: activateOnErrorRoute,\n                routes,\n                routeItem: { ...item },\n                ...routeConfig\n              };\n\n              return (\n                <RouterContext.Provider value={{ routeDetail }}>\n                  <View routeDetail={routeDetail} location={updatedLocation} {...routeProps} />\n                </RouterContext.Provider>\n              );\n            }}\n          />\n        );\n      })\n    );\n\n    setUpdatedRoutes(results);\n    setRedirectDefault(routes.find(({ disabled, redirect }) => !disabled && redirect) ?? null);\n  });\n\n  return (\n    <React.Suspense fallback={<Loader variant=\"title\" />}>\n      <Switch>\n        {updatedRoutes}\n        {redirectDefault && <ReactRouterDomRedirect to={redirectDefault.redirect} />}\n      </Switch>\n    </React.Suspense>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.bool,\n      component: PropTypes.string.isRequired,\n      disabled: PropTypes.bool,\n      exact: PropTypes.bool,\n      id: PropTypes.string,\n      path: PropTypes.string.isRequired,\n      redirect: PropTypes.string,\n      render: PropTypes.bool,\n      strict: PropTypes.bool\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerHelpers.routes\n};\n\nexport { Router as default, Router };\n","import React, { useContext } from 'react';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { routeDetail: { baseName: null, errorRoute: null, routes: [], routeItem: {} } },\n  helpers.noop\n];\n\nconst RouterContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated router context.\n *\n * @returns {React.Context<{}>}\n */\nconst useRouterContext = () => useContext(RouterContext);\n\n/**\n * Get a route detail from router context.\n *\n * @param {object} options\n * @param {Function} options.useRouterContext\n * @returns {{routes: Array, routeItem: object, baseName: string, errorRoute: object}}\n */\nconst useRouteDetail = ({ useRouterContext: useAliasRouterContext = useRouterContext } = {}) => {\n  const { routeDetail } = useAliasRouterContext();\n  return routeDetail;\n};\n\nconst context = {\n  RouterContext,\n  DEFAULT_CONTEXT,\n  useRouterContext,\n  useRouteDetail\n};\n\nexport { context as default, context, RouterContext, DEFAULT_CONTEXT, useRouterContext, useRouteDetail };\n","import React from 'react';\nimport { helpers } from '../../common/helpers';\nimport { routesConfig } from '../../config';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformLandingRedirect = `${helpers.UI_DEPLOY_PATH_PREFIX || ''}/`;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformModalRedirect = `${helpers.UI_DEPLOY_PATH_PREFIX || ''}/?not_entitled=subscriptions`;\n\n/**\n * Return an assumed route baseName directory based on existing app name.\n * App name is defined in dotenv and package.json/insights.appname\n * [environment]/[OPTIONAL]/[OPTIONAL]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  `${pathName.split(applicationName)[0]}${applicationName}`;\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName = (helpers.TEST_MODE && '/') || dynamicBaseName();\n\n/**\n * Return a base path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBasePath = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  pathName.split(applicationName)[0];\n\n/**\n * App basePath.\n *\n * @type {string}\n */\nconst basePath = (helpers.TEST_MODE && '/') || dynamicBasePath();\n\n/**\n * Basic path join, minor emulation for path.join.\n *\n * @param {object} paths\n * @returns {string}\n */\nconst pathJoin = (...paths) => {\n  let updatedPath = Array.from(paths);\n  const hasLead = /^\\/\\//.test(updatedPath[0]);\n  updatedPath = updatedPath\n    .join('/')\n    .replace(/(\\/\\/)+/g, '~')\n    .replace(/~/g, '/')\n    .replace(/\\/\\//g, '/');\n\n  if (hasLead) {\n    updatedPath = `/${updatedPath}`;\n  }\n\n  return updatedPath;\n};\n\n/**\n * Generate product groups for applying query filter resets.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateProductGroups = (config = routesConfig) => {\n  const productGroups = {};\n\n  config.forEach(({ pathParameter, productParameter }) => {\n    const viewIds = ((Array.isArray(productParameter) && productParameter) || [productParameter]).map(\n      id => (id && `view${id}`) || id\n    );\n\n    viewIds.forEach((id, index) => {\n      if (id) {\n        if (!productGroups[id]) {\n          productGroups[id] = [];\n        }\n\n        if (pathParameter) {\n          productGroups[id].push((Array.isArray(pathParameter) && pathParameter?.[index]) || pathParameter);\n        }\n      }\n    });\n  });\n\n  return productGroups;\n};\n\n/**\n * Reference for products grouped by view.\n */\nconst productGroups = generateProductGroups();\n\n/**\n * Generate routes to be consumed by router.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateRoutes = (config = routesConfig) =>\n  config.map(({ activateOnError, component, disabled, id, path: routePath, redirect }) => ({\n    activateOnError,\n    component,\n    disabled,\n    exact: true,\n    id,\n    path: routePath,\n    redirect\n  }));\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = generateRoutes();\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Match route config entries by path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {Array} params.config\n * @returns {{configs: Array, configFirstMatch: object, configsById: object}}\n */\nconst getRouteConfigByPath = ({ pathName = dynamicBasePath(), config = routesConfig } = {}) => {\n  const basePathDirs = pathName?.split('/').filter(str => str.length > 0);\n  const configs = [];\n  const allConfigs = [];\n  const configsById = {};\n  const allConfigsById = {};\n\n  const findConfig = dir => {\n    config.forEach(({ id, path: configPath, pathParameter, productParameter, aliases, ...configItem }) => {\n      const updatedConfigItem = {\n        aliases,\n        id,\n        path: configPath,\n        pathParameter,\n        productParameter,\n        ...configItem\n      };\n\n      if (\n        dir &&\n        (new RegExp(dir, 'i').test(configPath) ||\n          new RegExp(dir, 'i').test(productParameter?.toString()) ||\n          new RegExp(dir, 'i').test(pathParameter?.toString()) ||\n          new RegExp(dir, 'i').test(aliases?.toString()))\n      ) {\n        if (!configsById[id]) {\n          configsById[id] = { ...updatedConfigItem };\n          configs.push({ ...updatedConfigItem });\n        }\n      }\n\n      if (!allConfigsById[id]) {\n        allConfigsById[id] = { ...updatedConfigItem };\n        allConfigs.push({ ...updatedConfigItem });\n      }\n    });\n  };\n\n  if (basePathDirs?.length) {\n    basePathDirs.forEach(dir => {\n      if (dir) {\n        const decodedDir = window.decodeURI(dir);\n        findConfig(decodedDir);\n      }\n    });\n  } else {\n    findConfig();\n  }\n\n  return { allConfigs, allConfigsById, configs, configsById, firstMatch: configs?.[0] };\n};\n\n/**\n * Return a route config object.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathName\n * @param {boolean} params.returnDefault\n * @param {Array} params.config\n * @returns {object}\n */\nconst getRouteConfig = ({ id = null, pathName, returnDefault = false, config = routesConfig } = {}) => {\n  let navRouteItem;\n\n  if (id) {\n    navRouteItem = config.find(item => item.id === id);\n  }\n\n  if ((!navRouteItem && pathName) || (!navRouteItem && !pathName && !returnDefault)) {\n    navRouteItem = getRouteConfigByPath({ pathName, config }).firstMatch;\n  }\n\n  if (!navRouteItem && returnDefault) {\n    navRouteItem = config.find(item => item.default === true);\n  }\n\n  if (navRouteItem) {\n    const { search = '', hash = '' } = window.location;\n    navRouteItem.routeHref = `${navRouteItem.path}${search}${hash}`;\n\n    const { pathParameter, productParameter } = navRouteItem;\n    navRouteItem.pathParameter = (Array.isArray(pathParameter) && pathParameter[0]) || pathParameter;\n    navRouteItem.productParameter = (Array.isArray(productParameter) && productParameter[0]) || productParameter;\n    navRouteItem.viewParameter =\n      (productParameter && `view${(Array.isArray(productParameter) && productParameter[0]) || productParameter}`) ||\n      productParameter;\n  }\n\n  return { ...(navRouteItem || {}) };\n};\n\n/**\n * Import a route component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst importView = component => {\n  if (!helpers.TEST_MODE) {\n    return React.lazy(() => import(/* webpackExclude: /\\.test\\.js$/ */ `../${component}.js`));\n  }\n\n  return p => <React.Fragment>{JSON.stringify({ ...p, component }, null, 2)}</React.Fragment>;\n};\n\nconst routerHelpers = {\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  importView,\n  pathJoin,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  importView,\n  pathJoin,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  Table as PfTable,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * FixMe: PF tables uses sequentially ordered lists/arrays to denote expandable sections\n * Ideal solution is to nest expandable sections within their respective parents. There\n * are scenarios where manipulating a sequentially ordered list/array can, and will,\n * lead to unintended results. And forces an equal, if not greater, amount of effort on\n * state tracking in the consuming GUI/app. Compounding the issue, the index is used/returned\n * during events for a particular row being \"expanded\". This ends up making after-the-fact\n * application of the expandable list/array items problematic since said index is\n * constantly updating/shifting as rows are dynamically added. Add in a \"not every row\n * needs to be expandable\" scenario, you can start to see the issues. All of that\n * effort means that in some cases it may actually be quicker to simply use PF styles and\n * a HTML table directly, bypassing PF-React entirely.\n *\n * Applying a React node as content in the sequentially ordered list/array appears to\n * automatically \"mount\" said node. How this handles in child components where subsequent\n * AJAX/XHR calls are called means you are potentially hitting an API with dozens of calls,\n * row dependent, even when a user may not expand the nested row/child. This could easily\n * be resolved by nesting and applying the expandable contents after-the-fact.\n */\n/**\n * FixMe: PF tables misalignment of the column headers list/array and row cells breaks the component\n * The related PF error for this is cryptic. An immediate solution would be to simply fix the error\n * messaging, or do a length check before consuming the lists/arrays. This happens when a consumer\n * places more or less column header cells than row cells.\n */\n/**\n * FixMe: PF tables break when an empty list/array is used for the column headers\n * This appears related to the mismatched column header and row cells. The solution is to simply not\n * render the header row instead of throwing an error. This is similar to how the empty rows\n * list/array is handled.\n */\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n * @fires onSort\n */\nclass Table extends React.Component {\n  state = {\n    isCollapsible: false,\n    isSortable: false,\n    sortBy: {},\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (\n      !_isEqualWith(prevProps.rows, rows, customizer) ||\n      !_isEqualWith(prevProps.columnHeaders, columnHeaders, customizer)\n    ) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * FixMe: PF table sort callback doesn't use a zero based index when expandable?\n   * Educated guess there's a cell count happening instead of \"[you have this many data/entry cells]\"\n   * This is really confusing to implement in a consuming application, especially on first\n   * implementation. Special \"collapsible index\" logic had to be implemented to compensate for this\n   * odd behavior.\n   */\n  /**\n   * On column sort\n   *\n   * @event onSort\n   * @param {object} params\n   * @param {number} params.index\n   * @param {string} params.direction\n   * @param {object} params.data\n   */\n  onSort = ({ index, direction, data = {} }) => {\n    const { isCollapsible, updatedColumnHeaders, updatedRows } = this.state;\n    const updatedIndex = isCollapsible ? index - 1 : index;\n\n    updatedRows.forEach(async ({ isOpen }, i) => {\n      if (isOpen === true) {\n        await this.onCollapse({ index: i, isOpen: false });\n      }\n    });\n\n    this.setState(\n      {\n        sortBy: {\n          index,\n          direction\n        }\n      },\n      () =>\n        updatedColumnHeaders[updatedIndex].onSort({\n          direction,\n          index: updatedIndex,\n          label: data?.column?.header?.label\n        })\n    );\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n    const updatedSort = {};\n    let isCollapsible = false;\n    let isSortable = false;\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        isCollapsible = true;\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell?.title !== undefined) {\n          const { title, ...settings } = cell;\n          rowObj.cells.push({ title, ...settings });\n        } else {\n          rowObj.cells.push({\n            title: (React.isValidElement(cell) && cell) || (typeof cell === 'object' && `${cell}`) || cell\n          });\n        }\n      });\n    });\n\n    columnHeaders.forEach((columnHeader, index) => {\n      if (columnHeader?.title !== undefined) {\n        const { onSort, sortActive, sortDirection, title, ...settings } = columnHeader;\n        const tempColumnHeader = {\n          title,\n          ...settings\n        };\n\n        if (onSort) {\n          isSortable = true;\n          tempColumnHeader.transforms = [...(tempColumnHeader?.transforms || []), sortable];\n          tempColumnHeader.onSort = onSort;\n\n          if (sortActive) {\n            updatedSort.sortBy = { index: isCollapsible ? index + 1 : index };\n            updatedSort.sortBy.direction = SortByDirection.asc;\n          }\n\n          if (sortDirection) {\n            updatedSort.sortBy = { ...updatedSort.sortBy, direction: sortDirection };\n          }\n        } else if (tempColumnHeader.transforms) {\n          tempColumnHeader.transforms = tempColumnHeader.transforms.filter(v => v !== sortable);\n        }\n\n        updatedColumnHeaders.push(tempColumnHeader);\n      } else {\n        updatedColumnHeaders.push({\n          title:\n            (React.isValidElement(columnHeader) && columnHeader) ||\n            (typeof columnHeader === 'object' && `${columnHeader}`) ||\n            columnHeader\n        });\n      }\n    });\n\n    this.setState({\n      isCollapsible,\n      isSortable,\n      updatedColumnHeaders,\n      updatedRows,\n      ...updatedSort\n    });\n  }\n\n  /**\n   * FixMe: PF Tables automatically applies an expandable className when using the \"onCollapse\" prop?\n   * Not every row may need to be expandable. In certain scenarios a table may have no expandable\n   * sections, however it appears the \"onCollapse\" styling, and additionally added \"table cells\" are still\n   * applied.\n   */\n  /**\n   * Apply props to table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { isCollapsible, isSortable, sortBy, updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    const pfTableProps = {};\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    if (isCollapsible) {\n      pfTableProps.onCollapse = (event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data });\n    }\n\n    if (isSortable) {\n      pfTableProps.sortBy = sortBy;\n      pfTableProps.onSort = (event, index, direction, data) => this.onSort({ event, index, direction, data });\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n          {...pfTableProps}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: Node,\n *     isHeader: boolean, variant: string, className: string, rows: Array, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        onSort: PropTypes.func,\n        sortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)]),\n        title: PropTypes.node.isRequired\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.instanceOf(Date),\n          PropTypes.shape({\n            title: PropTypes.oneOfType([PropTypes.node, PropTypes.instanceOf(Date)]).isRequired\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {Node|Function} props.icon\n * @param {Node} props.message\n * @param {string} props.tableHeading\n * @param {Node} props.title\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, variant: string, message: Node, title: Node, tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cellWidth, TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {Array} props.colWidth\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableSkeleton = ({ className, borders, colCount, colWidth, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map((value, index) => {\n    const updatedHeader = { title: <Skeleton size={SkeletonSize.md} /> };\n\n    if (typeof colWidth[index] === 'number') {\n      updatedHeader.transforms = [cellWidth(colWidth[index])];\n    }\n\n    return updatedHeader;\n  });\n\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />)\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: string,\n *     className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.arrayOf(PropTypes.number),\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: null,\n *     className: null, rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  colWidth: [],\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip as PfTooltip, TooltipProps, TooltipPosition } from '@patternfly/react-core';\n\n/**\n * PF tooltip wrapper component.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.ReactNode} props.content\n * @param {boolean} props.isNoWrap\n * @param {TooltipProps} props.props\n * @returns {React.ReactNode}\n */\nconst Tooltip = ({ children, content, isNoWrap, ...props }) => (\n  <PfTooltip\n    className={`curiosity-tooltip${(isNoWrap && '__nowrap') || ''}`}\n    content={(React.isValidElement(content) && content) || <p>{content || ''}</p>}\n    {...props}\n  >\n    {(React.isValidElement(children) && children) || <span className=\"curiosity-tooltip-children\">{children}</span>}\n  </PfTooltip>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, content: React.ReactNode}}\n */\nTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n  content: PropTypes.node,\n  distance: PropTypes.number,\n  enableFlip: PropTypes.bool,\n  entryDelay: PropTypes.number,\n  exitDelay: PropTypes.number,\n  isNoWrap: PropTypes.bool,\n  position: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{content: string}}\n */\nTooltip.defaultProps = {\n  content: '...',\n  distance: 5,\n  enableFlip: false,\n  entryDelay: 100,\n  exitDelay: 0,\n  isNoWrap: false,\n  position: TooltipPosition.top\n};\n\nexport { Tooltip as default, Tooltip };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport {\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.RHEL;\n\nconst productId = null;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.RHEL;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.LEGACY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.SOCKETS,\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'physicalSockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'hypervisorSockets',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value\n    },\n    {\n      id: 'cloudSockets',\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value\n    },\n    { id: 'thresholdSockets', chartType: 'threshold' }\n  ],\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'measurementType',\n      cell: (data = {}) => {\n        const { cloudProvider = {}, measurementType = {} } = data;\n        return (\n          <React.Fragment>\n            {translate('curiosity-inventory.measurementType', { context: measurementType.value })}{' '}\n            {(cloudProvider.value && (\n              <PfLabel color=\"purple\">\n                {translate('curiosity-inventory.cloudProvider', { context: cloudProvider.value })}\n              </PfLabel>\n            )) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'sockets',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY,\n      header: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: ['subscriptions', uom?.value] }),\n      cell: ({\n        [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY]: totalCapacity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom\n      } = {}) => {\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate(\n            `curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY}`,\n            { context: uom?.value }\n          );\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value && moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      selected: true\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport {\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.LEGACY,\n  viewId: `view${productGroup}`,\n  productContextFilterUom: true,\n  query: {\n    [RHSM_API_QUERY_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.CORES,\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialOption: RHSM_API_QUERY_UOM_TYPES.CORES,\n  initialGraphFilters: [\n    {\n      id: 'cores',\n      isOptional: true,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'sockets',\n      isOptional: true,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    { id: 'thresholdSockets', chartType: 'threshold', isOptional: true },\n    { id: 'thresholdCores', chartType: 'threshold', isOptional: true }\n  ],\n  initialGraphSettings: {},\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'sockets',\n      header: () => translate('curiosity-inventory.header', { context: ['sockets', 'OpenShift Container Platform'] }),\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'cores',\n      header: () => translate('curiosity-inventory.header', { context: ['cores', 'OpenShift Container Platform'] }),\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 25\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 20,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY,\n      header: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: ['subscriptions', uom?.value] }),\n      cell: ({\n        [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY]: totalCapacity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom\n      } = {}) => {\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate(\n            `curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY}`,\n            { context: uom?.value }\n          );\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value && moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES } from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.LEGACY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'coreHours',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    }\n  ],\n  initialGraphSettings: {\n    actionDisplay: (data = {}) => {\n      const {\n        meta: { totalCoreHours }\n      } = data;\n      let displayContent;\n\n      if (totalCoreHours) {\n        displayContent = translate('curiosity-graph.cardActionTotal', {\n          context: 'coreHours',\n          total: helpers\n            .numberDisplay(totalCoreHours)\n            ?.format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n            ?.toUpperCase()\n        });\n      }\n\n      return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data = {}) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'coreHours',\n      cell: data =>\n        (typeof data?.coreHours?.value === 'number' && Number.parseFloat(data?.coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 25\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES } from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.DUAL_AXES,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'coreHours',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: 'line',\n      isStacked: false,\n      yAxisUseDataSet: true\n    },\n    {\n      id: 'instanceHours',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: 'line',\n      isStacked: false,\n      yAxisUseDataSet: true\n    }\n  ],\n  initialGraphSettings: {\n    actionDisplay: (data = {}) => {\n      const {\n        meta: { totalCoreHours }\n      } = data;\n      let displayContent;\n\n      if (totalCoreHours) {\n        displayContent = translate('curiosity-graph.cardActionTotal', {\n          context: 'coreHours',\n          total: helpers\n            .numberDisplay(totalCoreHours)\n            ?.format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n            ?.toUpperCase()\n        });\n      }\n\n      return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data = {}) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'coreHours',\n      cell: data =>\n        (typeof data?.coreHours?.value === 'number' && Number.parseFloat(data?.coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'instanceHours',\n      cell: data =>\n        (typeof data?.instanceHours?.value === 'number' && Number.parseFloat(data?.instanceHours?.value).toFixed(2)) ||\n        `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: 'line',\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value,\n      chartType: 'line',\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: 'line',\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick }) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.measurement_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n      header: {\n        tooltip: () =>\n          translate('curiosity-inventory.header', {\n            context: ['tooltip', RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES]\n          })\n      },\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n      header: {\n        tooltip: () =>\n          translate('curiosity-inventory.header', {\n            context: ['tooltip', RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS]\n          })\n      },\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.measurement_${SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    }\n  ],\n  initialSecondaryToolbarFilters: [\n    {\n      id: 'rangedMonthly'\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport {\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.SATELLITE;\n\nconst productId = null;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.SATELLITE;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.LEGACY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'physicalSockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'hypervisorSockets',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value\n    },\n    {\n      id: 'cloudSockets',\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value\n    }\n  ],\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'measurementType',\n      cell: (data = {}) => {\n        const { cloudProvider = {}, measurementType = {} } = data;\n        return (\n          <React.Fragment>\n            {translate('curiosity-inventory.measurementType', { context: measurementType.value })}{' '}\n            {(cloudProvider.value && (\n              <PfLabel color=\"purple\">\n                {translate('curiosity-inventory.cloudProvider', { context: cloudProvider.value })}\n              </PfLabel>\n            )) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'sockets',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      selected: true\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: 'line',\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick }) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.measurement_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.measurement_${SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    }\n  ],\n  initialSecondaryToolbarFilters: [\n    {\n      id: 'rangedMonthly'\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: 'line',\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick }) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.measurement_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.measurement_${SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    }\n  ],\n  initialSecondaryToolbarFilters: [\n    {\n      id: 'rangedMonthly'\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import { config as rhelConfig } from './product.rhel';\nimport { config as openshiftContainerConfig } from './product.openshiftContainer';\nimport { config as openshiftMetricsConfig } from './product.openshiftMetrics';\nimport { config as openshiftDedicatedConfig } from './product.openshiftDedicated';\nimport { config as rhacsConfig } from './product.rhacs';\nimport { config as rhodsConfig } from './product.rhods';\nimport { config as rhosakConfig } from './product.rhosak';\nimport { config as satelliteProductConfig } from './product.satellite';\nimport { RHSM_API_PATH_ID_TYPES } from '../types/rhsmApiTypes';\nimport { helpers } from '../common';\n\nconst routes = [\n  {\n    id: 'rhel',\n    path: '/rhel',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL }],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['insights'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-arm',\n    path: '/rhel-arm',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_ARM],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_ARM }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-ibmpower',\n    path: '/rhel-ibmpower',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-ibmz',\n    path: '/rhel-ibmz',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-x86',\n    path: '/rhel-x86',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_X86],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_X86 }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'openshift-container',\n    path: '/openshift-container',\n    pathParameter: [openshiftContainerConfig.productId, openshiftMetricsConfig.productId],\n    productParameter: [openshiftContainerConfig.productGroup, openshiftMetricsConfig.productGroup],\n    productConfig: [openshiftContainerConfig, openshiftMetricsConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewOpenShiftContainer'\n  },\n  {\n    id: 'openshift-dedicated',\n    path: '/openshift-dedicated',\n    pathParameter: [openshiftDedicatedConfig.productId],\n    productParameter: [openshiftDedicatedConfig.productGroup],\n    productConfig: [openshiftDedicatedConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewOpenShiftDedicated'\n  },\n  {\n    id: 'rhacs',\n    path: '/rhacs',\n    pathParameter: [rhacsConfig.productId],\n    productParameter: [rhacsConfig.productGroup],\n    productConfig: [rhacsConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['rhacs'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhods',\n    path: '/rhods',\n    pathParameter: [rhodsConfig.productId],\n    productParameter: [rhodsConfig.productGroup],\n    productConfig: [rhodsConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['rhods'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhosak',\n    path: '/streams',\n    pathParameter: [rhosakConfig.productId],\n    productParameter: [rhosakConfig.productGroup],\n    productConfig: [rhosakConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['application-services', 'streams', 'rhosak'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'satellite',\n    path: '/satellite',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [{ ...satelliteProductConfig, productId: RHSM_API_PATH_ID_TYPES.SATELLITE }],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'satellite-capsule',\n    path: '/satellite-capsule',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE_CAPSULE],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [{ ...satelliteProductConfig, productId: RHSM_API_PATH_ID_TYPES.SATELLITE_CAPSULE }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'satellite-server',\n    path: '/satellite-server',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE_SERVER],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [{ ...satelliteProductConfig, productId: RHSM_API_PATH_ID_TYPES.SATELLITE_SERVER }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'optin',\n    path: '/optin',\n    pathParameter: null,\n    productParameter: null,\n    productConfig: null,\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'optinView/optinView'\n  },\n  {\n    id: 'missing',\n    path: '/',\n    pathParameter: null,\n    productParameter: null,\n    productConfig: null,\n    redirect: '/',\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: true,\n    component: 'productView/productViewMissing'\n  }\n];\n\nexport { routes as default, routes };\n","import { useHistory as useHistoryRRD, useLocation, useParams, useRouteMatch } from 'react-router-dom';\nimport { useRouteDetail } from '../components/router/routerContext';\nimport { routerHelpers } from '../components/router/routerHelpers';\nimport { reduxActions, storeHooks } from '../redux';\n\n/**\n * Pass useHistory methods. Proxy useHistory push with Platform specific navigation update.\n *\n * @param {object} options\n * @param {boolean} options.isSetAppNav Allow setting the Platform's left navigation if conditions are met or fallback to history.push.\n * @param {Function} options.useHistory\n * @param {Function} options.useDispatch\n * @returns {object}\n */\nconst useHistory = ({\n  isSetAppNav = false,\n  useHistory: useAliasHistory = useHistoryRRD,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch\n} = {}) => {\n  const history = useAliasHistory();\n  const dispatch = useAliasDispatch();\n\n  return {\n    ...history,\n    push: (pathLocation, historyState) => {\n      const pathName = (typeof pathLocation === 'string' && pathLocation) || pathLocation?.pathname;\n      const { productParameter, id, routeHref } = routerHelpers.getRouteConfig({ pathName, id: pathName });\n      const { hash, search } = window.location;\n\n      if (isSetAppNav && productParameter) {\n        return dispatch(reduxActions.platform.setAppNav(id));\n      }\n\n      return history?.push(routeHref || (pathName && `${pathName}${search}${hash}`) || pathLocation, historyState);\n    }\n  };\n};\n\nconst routerHooks = {\n  useHistory,\n  useLocation,\n  useParams,\n  useRouteDetail,\n  useRouteMatch\n};\n\nexport { routerHooks as default, routerHooks, useHistory, useLocation, useParams, useRouteDetail, useRouteMatch };\n","import { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from './reduxHelpers';\n\n/**\n * Parse a query object against a schema for specific RHSM endpoints.\n *\n * @param {object} query\n * @param {object} queries\n * @returns {{graphTallyQuery: object, inventoryHostsQuery: object, inventorySubscriptionsQuery: object,\n *     query: object, inventoryGuestsQuery: object, toolbarQuery: object}}\n */\nconst parseRhsmQuery = (query = {}, queries = {}) => {\n  const { graphTallyQuery, inventoryGuestsQuery, inventoryHostsQuery, inventorySubscriptionsQuery } = queries;\n\n  const updatedGraphTallyQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES);\n  const updatedInventoryGuestsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES\n  );\n  const updatedInventoryHostsQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES);\n  const updatedInventorySubscriptionsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES\n  );\n\n  return {\n    query,\n    graphTallyQuery: { ...updatedGraphTallyQuery, ...graphTallyQuery },\n    inventoryGuestsQuery: { ...updatedInventoryGuestsQuery, ...inventoryGuestsQuery },\n    inventoryHostsQuery: { ...updatedInventoryHostsQuery, ...inventoryHostsQuery },\n    inventorySubscriptionsQuery: { ...updatedInventorySubscriptionsQuery, ...inventorySubscriptionsQuery },\n    toolbarQuery: query\n  };\n};\n\nconst apiQueries = {\n  parseRhsmQuery\n};\n\nexport { apiQueries as default, apiQueries };\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport _snakeCase from 'lodash/snakeCase';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {string} responses.response.keyCase\n * @param {Function} responses.response.customResponseEntry\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(\n    ({ schema = {}, data, customResponseEntry, customResponseValue, keyPrefix: prefix, keyCase = 'camel' }) => {\n      const isArray = Array.isArray(data);\n      const updatedData = (isArray && data) || (data && [data]) || [];\n      const [generatedSchema = {}] = setResponseSchemas([schema]);\n      const parsedResponse = [];\n\n      updatedData.forEach((value, index) => {\n        const generateReflectedData = ({\n          dataObj,\n          keyPrefix = '',\n          keyCaseType,\n          customEntry,\n          customValue = null,\n          update = helpers.noop\n        }) => {\n          let updatedDataObj = {};\n\n          Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n            let casedDataObjKey;\n\n            switch (keyCaseType) {\n              case 'camel':\n                casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'snake':\n                casedDataObjKey = _snakeCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'default':\n              default:\n                casedDataObjKey = `${dataObjKey}`.trim();\n                break;\n            }\n\n            let val = dataObjValue;\n\n            if (typeof val === 'number') {\n              val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n            }\n\n            if (typeof customValue === 'function') {\n              updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n            } else {\n              updatedDataObj[casedDataObjKey] = val;\n            }\n          });\n\n          if (typeof customEntry === 'function') {\n            updatedDataObj = customEntry(updatedDataObj, index);\n          }\n\n          update(updatedDataObj);\n        };\n\n        generateReflectedData({\n          keyPrefix: prefix,\n          dataObj: { ...generatedSchema, ...value },\n          keyCaseType: keyCase,\n          customEntry: customResponseEntry,\n          customValue: customResponseValue,\n          update: generatedData => parsedResponse.push(generatedData)\n        });\n      });\n\n      parsedResponses.push(parsedResponse);\n    }\n  );\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 400 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults?.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    return {\n      meta: { ...updatedMeta },\n      ...Object.fromEntries(Object.entries(meta).map(([key, value]) => [_camelCase(`meta ${key}`), value]))\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (typeof action.meta?.id === 'string' && action.meta?.id && { [action.meta.id]: { ...baseState, ...data } }) || {\n      ...baseState,\n      ...data\n    };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { useSelector as useReactReduxSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { store } from '../store';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Appears to be an issue in trying to use Redux Promise with the default \"useDispatch\"\n */\n/**\n * Wrapper for store.dispatch, emulating useDispatch.\n *\n * @returns {Function}\n */\nconst useDispatch = () => dispatchEvent => store.dispatch(dispatchEvent);\n\n/**\n * Wrapper for Redux hook, useSelector. Applies test mode and a fallback value.\n *\n * @param {Function} selector\n * @param {*} value\n * @param {object} options\n * @param {*} options.equality\n * @param {Function} options.useSelector\n * @returns {*}\n */\nconst useSelector = (\n  selector,\n  value = null,\n  { equality, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => useAliasSelector(selector, equality) ?? value;\n\n/**\n * Generate a selector from multiple selectors for use in \"useSelector\".\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {*} value Pass-through value similar to charging the response.\n * @param {object} options\n * @param {Function} options.useSelector\n * @param {*} options.equality\n * @returns {Array|object}\n */\nconst useSelectors = (\n  selectors,\n  value,\n  { equality = shallowEqual, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => {\n  let updatedSelectors = Array.isArray(selectors) ? selectors : [selectors];\n  const selectorIds = new Set();\n\n  updatedSelectors = updatedSelectors.map(selector => {\n    if (selector.selector && selector.id) {\n      selectorIds.add(selector.id);\n      return selector.selector;\n    }\n    return selector;\n  });\n\n  const multiSelector = createSelector(updatedSelectors, (...results) => results);\n\n  let listMultiSelectorResponse = (useAliasSelector(multiSelector, equality) ?? value) || [];\n  const undefinedMultiSelectorResponse = listMultiSelectorResponse.filter(response => response === undefined);\n\n  if (undefinedMultiSelectorResponse.length === listMultiSelectorResponse.length) {\n    listMultiSelectorResponse = [];\n  } else {\n    listMultiSelectorResponse = _cloneDeep(listMultiSelectorResponse);\n  }\n\n  if (selectorIds.size && selectorIds.size === listMultiSelectorResponse.length) {\n    const idMultiSelectorResponse = {};\n\n    Array.from(selectorIds).forEach((id, index) => {\n      idMultiSelectorResponse[id] = listMultiSelectorResponse[index];\n    });\n\n    return idMultiSelectorResponse;\n  }\n\n  return listMultiSelectorResponse;\n};\n\n/**\n * Return a combined selector response using a \"Promise.all\" like response.\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {object} options\n * @param {Function} options.useSelectors\n * @param {Function} options.customResponse Callback for customizing your own response\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsResponse = (selectors, { useSelectors: useAliasSelectors = useSelectors, customResponse } = {}) => {\n  const selectorResponse = useAliasSelectors(selectors, []);\n  const isSelectorResponseArray = Array.isArray(selectorResponse);\n\n  const cancelledById = {};\n  const cancelledByList = [];\n  const cancelledDataById = {};\n  const cancelledDataByList = [];\n\n  const errorByList = [];\n  const errorById = {};\n  const errorDataById = {};\n  const errorDataByList = [];\n\n  const fulfilledByList = [];\n  const fulfilledById = {};\n  const fulfilledDataById = {};\n  const fulfilledDataByList = [];\n\n  const pendingByList = [];\n\n  const responsesById = {};\n  const responsesByList = [];\n  const dataById = {};\n  const dataByList = [];\n\n  const idList = [];\n\n  const updatedSelectorResponse = _cloneDeep(\n    (isSelectorResponseArray && selectorResponse) || Object.entries(selectorResponse)\n  );\n\n  updatedSelectorResponse.forEach(response => {\n    const id = (!isSelectorResponseArray && response?.[0]) || null;\n\n    const updatedResponse = (isSelectorResponseArray && response) || response?.[1] || response;\n    const isServiceResponse =\n      typeof updatedResponse.cancelled === 'boolean' ||\n      typeof updatedResponse.error === 'boolean' ||\n      typeof updatedResponse.fulfilled === 'boolean' ||\n      typeof updatedResponse.pending === 'boolean';\n\n    const { pending, fulfilled, error, cancelled, message } = (isServiceResponse && updatedResponse) || {};\n\n    if (id !== null) {\n      idList.push(id);\n      updatedResponse.id = id;\n    }\n\n    if (cancelled) {\n      cancelledByList.push(updatedResponse);\n      cancelledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        cancelledById[id] = cancelledByList[cancelledByList.length - 1];\n        cancelledDataById[id] =\n          cancelledByList[cancelledByList.length - 1]?.data || cancelledByList[cancelledByList.length - 1];\n      }\n    }\n\n    if (error) {\n      errorByList.push({\n        ...updatedResponse,\n        ...new Error(message || `Error: useSelectorsAllResponse${(id && `, ${id}`) || ''}`)\n      });\n      errorDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        errorById[id] = errorByList[errorByList.length - 1];\n        errorDataById[id] = errorByList[errorByList.length - 1]?.data || errorByList[errorByList.length - 1];\n      }\n    }\n\n    if (fulfilled) {\n      fulfilledByList.push(updatedResponse);\n      fulfilledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        fulfilledById[id] = fulfilledByList[fulfilledByList.length - 1];\n        fulfilledDataById[id] =\n          fulfilledByList[fulfilledByList.length - 1]?.data || fulfilledByList[fulfilledByList.length - 1];\n      }\n    }\n\n    if (pending) {\n      pendingByList.push(updatedResponse);\n    }\n\n    if (id !== null) {\n      responsesById[id] = updatedResponse;\n      dataById[id] = updatedResponse?.data || updatedResponse;\n    }\n\n    responsesByList.push(updatedResponse);\n    dataByList.push(updatedResponse?.data || updatedResponse);\n  });\n\n  const isById = idList.length === updatedSelectorResponse.length;\n\n  const response = {\n    responses: {\n      id: responsesById,\n      list: responsesByList\n    },\n    cancelled: false,\n    data: (isById && {}) || [],\n    error: false,\n    fulfilled: false,\n    message: null,\n    pending: false\n  };\n\n  if (typeof customResponse === 'function') {\n    Object.assign(response, {\n      ...customResponse(\n        { ...response, responses: { ...response.responses } },\n        {\n          cancelledById,\n          cancelledByList,\n          cancelledDataById,\n          cancelledDataByList,\n          dataById,\n          dataByList,\n          errorByList,\n          errorById,\n          errorDataById,\n          errorDataByList,\n          fulfilledByList,\n          fulfilledById,\n          fulfilledDataById,\n          fulfilledDataByList,\n          idList,\n          isById,\n          pendingByList,\n          responsesByList,\n          responsesById,\n          updatedSelectorResponse\n        }\n      )\n    });\n\n    return response;\n  }\n\n  if (errorByList.length) {\n    response.message = new Error(errorByList[0]?.message || `useSelectorsResponse, ${JSON.stringify(errorByList[0])}`);\n    response.error = true;\n    response.data = (isById && errorDataById) || errorDataByList;\n    return response;\n  }\n\n  if (pendingByList.length) {\n    response.pending = true;\n    return response;\n  }\n\n  if (cancelledByList.length && cancelledByList.length === responsesByList.length) {\n    response.message = new Error('Cancelled useSelectorsResponse');\n    response.cancelled = true;\n    response.data = (isById && cancelledById) || cancelledByList;\n    return response;\n  }\n\n  if (\n    fulfilledByList.length &&\n    (fulfilledByList.length === responsesByList.length ||\n      cancelledByList.length + fulfilledByList.length === responsesByList.length)\n  ) {\n    response.fulfilled = true;\n    response.data = (isById && dataById) || dataByList;\n    return response;\n  }\n\n  return response;\n};\n\n/**\n * Return a combined selector response using a \"Promise.allSettled\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAllSettledResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    { cancelledByList, errorByList, fulfilledByList, pendingByList, dataById, dataByList, isById }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length + fulfilledByList?.length + cancelledByList?.length === dataByList?.length ||\n      errorByList?.length === dataByList?.length ||\n      fulfilledByList?.length === dataByList?.length ||\n      cancelledByList?.length === dataByList?.length\n    ) {\n      response.fulfilled = true;\n      response.data = (isById && dataById) || dataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.any\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAnyResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length &&\n      (errorByList?.length === responsesByList?.length ||\n        cancelledByList?.length + errorByList?.length === responsesByList?.length)\n    ) {\n      response.message = helpers.aggregatedError(errorByList, 'useSelectorsAnyResponse');\n      response.error = true;\n      response.data = (isById && errorDataById) || errorDataByList;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      response.message = new Error('Cancelled useSelectorsAnyResponse');\n      response.cancelled = true;\n      response.data = (isById && cancelledDataById) || cancelledDataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.race\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsRaceResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (errorByList?.length) {\n      let data = errorDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(errorDataById);\n        data = (keyList?.[0] && errorDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error(\n        errorByList[0]?.message || `useSelectorsRaceResponse, ${JSON.stringify(errorByList[0])}`\n      );\n      response.error = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      let data = cancelledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(cancelledDataById);\n        data = (keyList?.[0] && cancelledDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error('Cancelled useSelectorsRaceResponse');\n      response.cancelled = true;\n      response.data = data;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\nconst reactReduxHooks = {\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n\nexport {\n  reactReduxHooks as default,\n  reactReduxHooks,\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n","import { reactReduxHooks } from './useReactRedux';\n\nconst storeHooks = {\n  reactRedux: reactReduxHooks\n};\n\nexport { storeHooks as default, storeHooks, reactReduxHooks };\n","import _camelCase from 'lodash/camelCase';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\n/**\n * A timeout cancel for function calls.\n *\n * @param {Function} func Callback to be executed or cancelled\n * @param {object} options\n * @param {number} options.timeout Function timeout in milliseconds\n * @param {string} options.errorMessage What the error message will read\n * @returns {Promise<*>}\n */\nconst timeoutFunctionCancel = (func, { timeout = 3000, errorMessage = 'function timeout' } = {}) => {\n  let clearTimer;\n\n  const timer = () =>\n    new Promise((_, reject) => {\n      clearTimer = window.setTimeout(reject, timeout, new Error(errorMessage));\n    });\n\n  const updatedFunc = async () => {\n    const response = await func();\n    window.clearTimeout(clearTimer);\n    return response;\n  };\n\n  const execFunction = () =>\n    Promise.race([timer(), updatedFunc()]).finally(() => {\n      window.clearTimeout(clearTimer);\n    });\n\n  return execFunction();\n};\n\n/**\n * Return objects with the keys camelCased. Normally applied to an array of objects.\n *\n * @param {object|Array|*} obj\n * @returns {object|Array|*}\n */\nconst camelCase = obj => {\n  if (Array.isArray(obj)) {\n    return obj.map(camelCase);\n  }\n\n  if (_isPlainObject(obj)) {\n    const updatedObj = {};\n\n    Object.entries(obj).forEach(([key, val]) => {\n      updatedObj[_camelCase(key)] = camelCase(val);\n    });\n\n    return updatedObj;\n  }\n\n  return obj;\n};\n\n/**\n * Apply data to a callback, pass original data on error.\n *\n * @param {Function} callback\n * @param {Array} data\n * @returns {{data: *, error}}\n */\nconst passDataToCallback = (callback, ...data) => {\n  let error;\n  let updatedData = data;\n\n  try {\n    updatedData = callback(...data);\n  } catch (e) {\n    error = e;\n  }\n\n  return { data: updatedData, error };\n};\n\n/**\n * A callback for schema validation, and after-the-fact casing adjustments.\n *\n * @param {object} options\n * @param {string} options.casing\n * @param {boolean} options.convert\n * @param {string} options.id\n * @param {object|Array} options.response\n * @param {*} options.schema\n * @returns {*|{}}\n */\nconst schemaResponse = ({ casing, convert = true, id = null, response, schema } = {}) => {\n  const { value, error = { details: [] } } = schema?.validate(response, { convert }) || {};\n\n  if (error.details.length && !helpers.TEST_MODE) {\n    console.error(\n      new Error(\n        `Passing original API response. Schema validation failed for ${id || '...'}: ${error.details\n          .map(({ context = {}, message, type }) => `${message}:${type}, ${JSON.stringify(context)}`)\n          .join(', ')}`\n      )\n    );\n  }\n\n  switch (casing) {\n    case 'camel':\n      return camelCase(value);\n    default:\n      return value;\n  }\n};\n\nconst serviceHelpers = {\n  camelCase,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n\nexport {\n  serviceHelpers as default,\n  serviceHelpers,\n  camelCase,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n","import axios, { CancelToken } from 'axios';\nimport LruCache from 'lru-cache';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { serviceHelpers } from './helpers';\n\n/**\n * Set Axios XHR default timeout.\n */\nconst globalXhrTimeout = Number.parseInt(process.env.REACT_APP_AJAX_TIMEOUT, 10) || 60000;\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {{}}\n */\nconst globalCancelTokens = {};\n\n/**\n * Cache Axios service call responses.\n *\n * @type {object}\n */\nconst globalResponseCache = new LruCache({\n  ttl: Number.parseInt(process.env.REACT_APP_AJAX_CACHE, 10) || 30000,\n  max: 100,\n  updateAgeOnGet: true\n});\n\n// ToDo: consider another way of hashing cacheIDs. base64 could get a little large depending on settings, i.e. md5\n/**\n * Set Axios configuration. This includes response schema validation and caching.\n * Call platform \"getUser\" auth method, and apply service config. Service configuration\n * includes the ability to cancel all and specific calls, cache and normalize a response\n * based on both a provided schema and a successful API response. The cache will refresh\n * its timeout on continuous calls. To reset it a user will either need to refresh the\n * page or wait the \"maxAge\".\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @param {object} options\n * @param {string} options.cancelledMessage\n * @param {object} options.responseCache\n * @param {number} options.xhrTimeout\n * @returns {Promise<*>}\n */\nconst axiosServiceCall = async (\n  config = {},\n  { cancelledMessage = 'cancelled request', responseCache = globalResponseCache, xhrTimeout = globalXhrTimeout } = {}\n) => {\n  const updatedConfig = {\n    timeout: xhrTimeout,\n    ...config,\n    cache: undefined,\n    cacheResponse: config.cache,\n    method: config.method || 'get'\n  };\n  const responseTransformers = [];\n  const axiosInstance = axios.create();\n\n  // don't cache responses if \"get\" isn't used\n  updatedConfig.cacheResponse = updatedConfig.cacheResponse === true && updatedConfig.method === 'get';\n\n  // account for alterations to transforms, and other config props\n  const cacheId =\n    (updatedConfig.cacheResponse === true &&\n      `${window.btoa(\n        JSON.stringify(updatedConfig, (key, value) => {\n          if (value !== updatedConfig && _isPlainObject(value)) {\n            return JSON.stringify(Object.entries(value).sort(([a], [b]) => a.localeCompare(b)) || []);\n          }\n          if (typeof value === 'function') {\n            return value.toString();\n          }\n          return value;\n        })\n      )}`) ||\n    null;\n\n  // simple check to place responsibility on consumer, primarily used for testing\n  if (updatedConfig.exposeCacheId === true) {\n    updatedConfig.cacheId = cacheId;\n  }\n\n  if (updatedConfig.cancel === true) {\n    const cancelTokensId = `${updatedConfig.cancelId || ''}-${updatedConfig.method}-${\n      (typeof updatedConfig.url === 'function' && updatedConfig.url.toString()) || updatedConfig.url\n    }`;\n\n    if (globalCancelTokens[cancelTokensId]) {\n      globalCancelTokens[cancelTokensId].cancel(cancelledMessage);\n    }\n\n    globalCancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = globalCancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  if (updatedConfig.cacheResponse === true) {\n    const cachedResponse = responseCache.get(cacheId);\n\n    if (cachedResponse) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          ...cachedResponse,\n          status: 304,\n          statusText: 'Not Modified',\n          config: adapterConfig\n        });\n\n      return axiosInstance(updatedConfig);\n    }\n  }\n\n  if (updatedConfig.schema) {\n    responseTransformers.push(updatedConfig.schema);\n  }\n\n  if (updatedConfig.transform) {\n    responseTransformers.push(updatedConfig.transform);\n  }\n\n  responseTransformers.forEach(([successTransform, errorTransform]) => {\n    const transformers = [undefined, response => Promise.reject(response)];\n\n    if (successTransform) {\n      transformers[0] = response => {\n        const updatedResponse = { ...response };\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          successTransform,\n          updatedResponse.data,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.data = data;\n        }\n\n        return updatedResponse;\n      };\n    }\n\n    if (errorTransform) {\n      transformers[1] = response => {\n        const updatedResponse = { ...(response.response || response) };\n\n        if (updatedResponse?.message === cancelledMessage) {\n          return Promise.reject(updatedResponse);\n        }\n\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          errorTransform,\n          updatedResponse?.data || updatedResponse?.message,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.response = { ...updatedResponse, data };\n        }\n\n        return Promise.reject(updatedResponse);\n      };\n    }\n\n    axiosInstance.interceptors.response.use(...transformers);\n  });\n\n  if (updatedConfig.cacheResponse === true) {\n    axiosInstance.interceptors.response.use(\n      response => {\n        const updatedResponse = { ...response };\n        responseCache.set(cacheId, updatedResponse);\n        return updatedResponse;\n      },\n      response => Promise.reject(response)\n    );\n  }\n\n  if (typeof updatedConfig.url === 'function') {\n    const emulateCallback = updatedConfig.url;\n    updatedConfig.url = '/emulated';\n\n    let message = 'success, emulated';\n    let emulatedResponse;\n    let isSuccess = true;\n\n    try {\n      emulatedResponse = await serviceHelpers.timeoutFunctionCancel(emulateCallback, { timeout: xhrTimeout });\n    } catch (e) {\n      isSuccess = false;\n      message = e.message || e;\n    }\n\n    if (isSuccess) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          data: emulatedResponse,\n          status: 200,\n          statusText: message,\n          config: adapterConfig\n        });\n    } else {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.reject({ // eslint-disable-line\n          ...new Error(message),\n          message,\n          status: 418,\n          config: adapterConfig\n        });\n    }\n  }\n\n  return axiosInstance(updatedConfig);\n};\n\nconst serviceConfig = { axiosServiceCall, globalXhrTimeout, globalCancelTokens, globalResponseCache };\n\nexport {\n  serviceConfig as default,\n  serviceConfig,\n  axiosServiceCall,\n  globalXhrTimeout,\n  globalCancelTokens,\n  globalResponseCache\n};\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\n\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * User response item.\n *\n * @type {*} Joi schema\n */\nconst userResponseSchema = Joi.object()\n  .keys({\n    identity: Joi.object({\n      user: Joi.object({\n        is_org_admin: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({}),\n    entitlements: Joi.object({\n      [process.env.REACT_APP_UI_NAME]: Joi.object({\n        is_entitled: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({})\n  })\n  .unknown(true)\n  .default({});\n\n/**\n * Permissions response item.\n *\n * @type {*} Joi schema\n */\nconst permissionsItem = Joi.object({\n  permission: Joi.string().optional().allow(null),\n  resourceDefinitions: Joi.array().optional().default([])\n})\n  .unknown(true)\n  .default();\n\n/**\n * Authorize response.\n *\n * @type {*} Joi schema\n */\nconst permissionsResponseSchema = Joi.array().items(permissionsItem).default([]);\n\nconst platformSchemas = {\n  user: response => schemaResponse({ response, schema: userResponseSchema, id: 'User auth' }),\n  permissions: response => schemaResponse({ response, schema: permissionsResponseSchema, id: 'Permissions auth' })\n};\n\nexport { platformSchemas as default, platformSchemas };\n","import { rbacConfig } from '../../config';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES\n} from './platformConstants';\nimport { helpers } from '../../common';\n\n/**\n * Parse platform getUser response.\n *\n * @param {object} response\n * @returns {object}\n */\nconst user = response => {\n  const updatedResponse = {};\n  const {\n    [platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY]: identity = {},\n    [platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]: entitlements = {}\n  } = response || {};\n\n  updatedResponse.isAdmin =\n    identity?.[platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]?.[\n      platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n    ] || false;\n\n  updatedResponse.isEntitled =\n    entitlements?.[helpers.UI_NAME]?.[platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED] ||\n    false;\n\n  return updatedResponse;\n};\n\n/**\n * Parse platform getUserPermissions response.\n *\n * @param {object} response\n * @param {object} options\n * @param {object} options.config Pass in a configuration object, RBAC\n * @returns {object}\n */\nconst userPermissions = (response, { config = rbacConfig } = {}) => {\n  const updatedResponse = {\n    permissions: {},\n    authorized: {}\n  };\n\n  response?.forEach(\n    ({\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n    }) => {\n      const [app = '', resource, operation] = permission?.split(':') || [];\n\n      if (!updatedResponse.permissions[app]) {\n        updatedResponse.permissions[app] = {\n          all: false,\n          resources: {}\n        };\n      }\n\n      if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n        updatedResponse.permissions[app].all = true;\n      }\n\n      if (!updatedResponse.permissions[app].resources[resource]) {\n        updatedResponse.permissions[app].resources[resource] = {};\n      }\n\n      updatedResponse.permissions[app].resources[resource][operation] = definitions;\n    }\n  );\n\n  // Alias specific app permissions checks\n  Object.entries(config).forEach(([key, { permissions: resourcePermissions }]) => {\n    updatedResponse.authorized[key] = updatedResponse.permissions[key]?.all || false;\n\n    resourcePermissions.forEach(({ resource: res, operation: op }) => {\n      if (updatedResponse.permissions[key]?.resources?.[res]?.[op]) {\n        updatedResponse.authorized[key] = true;\n      }\n    });\n  });\n\n  return updatedResponse;\n};\n\nconst platformTransformers = {\n  user,\n  permissions: userPermissions\n};\n\nexport { platformTransformers as default, platformTransformers, user, userPermissions };\n","import _set from 'lodash/set';\nimport { rbacConfig } from '../../config';\nimport { axiosServiceCall } from '../common/serviceConfig';\nimport { platformSchemas } from './platformSchemas';\nimport { platformTransformers } from './platformTransformers';\nimport { helpers } from '../../common';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES\n} from './platformConstants';\n\n/**\n * Basic user authentication.\n *\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUser = async (options = {}) => {\n  const { schema = [platformSchemas.user], transform = [platformTransformers.user] } = options;\n  const { insights } = window;\n  return axiosServiceCall({\n    url: async () => {\n      try {\n        return (\n          (helpers.DEV_MODE &&\n            _set(\n              {},\n              [\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n              ],\n              process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n            )) ||\n          (await insights.chrome.auth.getUser())\n        );\n      } catch (e) {\n        throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n      }\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUserPermissions = (appName = Object.keys(rbacConfig), options = {}) => {\n  const { schema = [platformSchemas.permissions], transform = [platformTransformers.permissions] } = options;\n  const updatedAppName = (Array.isArray(appName) && appName) || [appName];\n  const { insights } = window;\n  const platformMethod = name =>\n    (helpers.DEV_MODE && [\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_ONE\n      },\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_TWO\n      }\n    ]) ||\n    insights.chrome.getUserPermissions(name);\n\n  return axiosServiceCall({\n    url: async () => {\n      let userPermissions;\n\n      try {\n        const allPermissions = await Promise.all(updatedAppName.map(name => platformMethod(name)));\n\n        if (Array.isArray(allPermissions)) {\n          userPermissions = [...allPermissions.flat()];\n        }\n      } catch (e) {\n        throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n      }\n\n      return userPermissions;\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Disables the Platform's global filter display.\n *\n * @param {boolean} isHidden\n * @returns {Promise<*>}\n */\nconst hideGlobalFilter = async (isHidden = true) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.hideGlobalFilter(isHidden);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<*>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<*>}\n */\nconst setAppName = (name = null) => {\n  const { insights } = window;\n  return axiosServiceCall({\n    url: async () => {\n      try {\n        await insights.chrome.identifyApp(name);\n      } catch (e) {\n        throw new Error(`{ identifyApp } = insights.chrome, ${e.message}`);\n      }\n    }\n  });\n};\n\n/**\n * Set app routes via the platform left-nav navigation.\n *\n * @param {string} id The navigation ID associated with internal route config, and external platform nav config\n * @param {object} options\n * @param {string} options.appName\n * @param {boolean} options.secondaryNav\n * @returns {Promise<*>}\n */\nconst setAppNav = async (id, { appName = helpers.UI_NAME, secondaryNav = true } = {}) => {\n  const { insights } = window;\n  try {\n    return await insights.chrome.appNavClick({ id, secondaryNav, parentId: appName });\n  } catch (e) {\n    throw new Error(`{ appNavClick } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = {\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platform/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Get an emulated and combined API response from the platforms \"getUser\" and \"getUserPermissions\" global methods.\n *\n * @param {string|Array} appName\n * @returns {Function}\n */\nconst authorizeUser = appName => dispatch =>\n  dispatch({\n    type: platformTypes.PLATFORM_USER_AUTH,\n    payload: Promise.all([platformServices.getUser(), platformServices.getUserPermissions(appName)])\n  });\n\n/**\n * Hide platform global filter.\n *\n * @param {boolean} isHidden\n * @returns {{Function}}\n */\nconst hideGlobalFilter = isHidden => ({\n  type: platformTypes.PLATFORM_GLOBAL_FILTER_HIDE,\n  payload: platformServices.hideGlobalFilter(isHidden)\n});\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for changing routes via the left-nav navigation.\n *\n * @param {string} id\n * @param {object} options\n * @param {string} options.appName\n * @param {boolean} options.secondaryNav\n * @returns {Function}\n */\nconst setAppNav =\n  (id, { appName, secondaryNav } = {}) =>\n  dispatch =>\n    dispatch({\n      type: platformTypes.PLATFORM_SET_NAV,\n      payload: platformServices.setAppNav(id, { appName, secondaryNav }),\n      meta: {\n        id,\n        appName,\n        secondaryNav\n      }\n    });\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n","import { axiosServiceCall } from './common/serviceConfig';\nimport { platformServices } from './platform/platformServices';\n\n/**\n * Apply a global custom service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  ...passedConfig\n});\n\n/**\n * Use a global Axios configuration.\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n  return axiosServiceCall(serviceConfig(config));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\nimport { rhsmConstants } from './rhsmConstants';\n\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * Error response item.\n *\n * @type {*} Joi schema\n */\nconst errorItem = Joi.object({\n  code: Joi.string().default(null),\n  detail: Joi.string().default(null)\n}).unknown(true);\n\n/**\n * Error response.\n *\n * @type {*} Joi schema\n */\nconst errorResponseSchema = Joi.object()\n  .keys({\n    errors: Joi.array().items(errorItem).default([])\n  })\n  .unknown(true);\n\nconst linksSchema = Joi.object();\n\n/**\n * RHSM base response meta field.\n *\n * @type {*} Joi schema\n */\nconst metaResponseSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0),\n    product: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_PRODUCT_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Guests response meta field.\n *\n * @type {*} Joi schema\n */\nconst guestsMetaSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0)\n  })\n  .unknown(true);\n\n/**\n * Instances response item.\n *\n * @type {*} Joi schema\n */\nconst guestsItem = Joi.object({\n  inventory_id: Joi.string().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Instances response.\n *\n * @type {*} Joi schema\n */\nconst guestsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(guestsItem).default([]),\n  links: linksSchema.default({}),\n  meta: guestsMetaSchema.default({})\n});\n\n/**\n * Instances response meta field.\n *\n * @type {*} Joi schema\n */\nconst instancesMetaSchema = metaResponseSchema\n  .keys({\n    measurements: Joi.array()\n      .items(Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)))\n      .default([])\n  })\n  .unknown(true);\n\n/**\n * Instances response item.\n *\n * @type {*} Joi schema\n */\nconst instancesItem = Joi.object({\n  inventory_id: Joi.string().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  billing_provider: Joi.string().optional().allow(null),\n  billing_account_id: Joi.string().optional().allow(null),\n  measurements: Joi.array().default([]),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Instances response.\n *\n * @type {*} Joi schema\n */\nconst instancesResponseSchema = Joi.object().keys({\n  data: Joi.array().items(instancesItem).default([]),\n  links: linksSchema.default({}),\n  meta: instancesMetaSchema.default({})\n});\n\n/**\n * Subscriptions response meta field.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsMetaSchema = metaResponseSchema\n  .keys({\n    subscription_type: Joi.string().valid(null, ...Object.values(rhsmConstants.RHSM_API_RESPONSE_SUBSCRIPTION_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Subscriptions response item.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsItem = Joi.object({\n  has_infinite_quantity: Joi.boolean().optional().allow(null),\n  next_event_date: Joi.date().utc().allow(null),\n  product_name: Joi.string().optional().allow(null),\n  quantity: Joi.number().allow(null).default(0),\n  service_level: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_SLA_TYPES)),\n  total_capacity: Joi.number().allow(null).default(0),\n  uom: Joi.string()\n    .lowercase()\n    .valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_UOM_TYPES))\n})\n  .unknown(true)\n  .default();\n\n/**\n * Subscriptions response.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(subscriptionsItem).default([]),\n  links: linksSchema.default({}),\n  meta: subscriptionsMetaSchema.default({})\n});\n\n/**\n * Tally response item.\n *\n * @type {*} Joi schema\n */\nconst tallyItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Tally response meta field.\n *\n * @type {*} Joi schema\n */\nconst tallyMetaSchema = metaResponseSchema\n  .keys({\n    has_cloudigrade_data: Joi.boolean().optional().allow(null),\n    has_cloudigrade_mismatch: Joi.boolean().optional().allow(null),\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)),\n    total_monthly: tallyItem\n  })\n  .unknown(true);\n\n/**\n * Tally response.\n *\n * @type {*} Joi schema\n */\nconst tallyResponseSchema = Joi.object().keys({\n  data: Joi.array().items(tallyItem).default([]),\n  links: linksSchema.default({}),\n  meta: tallyMetaSchema.default({})\n});\n\nconst rhsmSchemas = {\n  errors: response => schemaResponse({ response, schema: errorResponseSchema, id: 'RHSM errors' }),\n  guests: response => schemaResponse({ response, casing: 'camel', schema: guestsResponseSchema, id: 'RHSM guests' }),\n  instances: response => schemaResponse({ response, schema: instancesResponseSchema, id: 'RHSM instances' }),\n  subscriptions: response =>\n    schemaResponse({ response, schema: subscriptionsResponseSchema, id: 'RHSM subscriptions' }),\n  tally: response => schemaResponse({ response, schema: tallyResponseSchema, id: 'RHSM tally' })\n};\n\nexport { rhsmSchemas as default, rhsmSchemas };\n","import moment from 'moment';\nimport {\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES as INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_DATA_TYPES as TALLY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_META_TYPES as TALLY_META_TYPES,\n  rhsmConstants\n} from './rhsmConstants';\nimport { dateHelpers } from '../../common';\n\n/**\n * FixMe: If RHSM Instances is deprecating Hosts we're missing a property, number_of_guests\n */\n/**\n * Parse RHSM instances response for caching.\n *\n * @param {object} response\n * @returns {object}\n */\nconst rhsmInstances = response => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const metaMeasurements = meta[INSTANCES_META_TYPES.MEASUREMENTS];\n\n  updatedResponse.data = data.map(\n    ({\n      [INSTANCES_DATA_TYPES.MEASUREMENTS]: measurements,\n      [INSTANCES_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      [INSTANCES_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      ...dataResponse\n    }) => {\n      const updatedData = {\n        numberOfGuests,\n        subscriptionManagerId,\n        ...dataResponse\n      };\n\n      metaMeasurements?.forEach((measurement, index) => {\n        updatedData[measurement] = measurements[index];\n      });\n\n      return updatedData;\n    }\n  );\n\n  updatedResponse.meta = {\n    count: meta[INSTANCES_META_TYPES.COUNT],\n    productId: meta[INSTANCES_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * ToDo: Evaluate granularity alterations, transform logic is targeted at daily granularity\n * Specifically, the \"isCurrentDate\" condition is targeted at daily. Weekly, monthly, and\n * quarterly have not been tested, and may need logic adjustments for \"isCurrentLikeDate\".\n */\n/**\n * Parse RHSM tally response for caching.\n *\n * @param {object} response\n * @returns {object}\n */\nconst rhsmTally = response => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const currentDate = moment.utc(dateHelpers.getCurrentDate());\n  const currentDateStr = moment.utc(dateHelpers.getCurrentDate()).format('MM-D-YYYY');\n  let futureDateCount = 0;\n\n  updatedResponse.data = data.map(\n    (\n      { [TALLY_DATA_TYPES.DATE]: date, [TALLY_DATA_TYPES.VALUE]: value, [TALLY_DATA_TYPES.HAS_DATA]: hasData },\n      index\n    ) => {\n      const updatedDate = moment.utc(date);\n      const isCurrentDate = updatedDate.format('MM-D-YYYY') === currentDateStr;\n      const isFutureDate = updatedDate.diff(currentDate) > 0;\n\n      if (isFutureDate && !isCurrentDate) {\n        futureDateCount += 1;\n      }\n\n      return {\n        x: index,\n        y: (hasData === false && isFutureDate) || (hasData === false && isCurrentDate) ? null : value,\n        date,\n        hasData,\n        isCurrentDate,\n        isFutureDate\n      };\n    }\n  );\n\n  /**\n   * Add an extra date to the first entry of the range to help Victory charts display.\n   */\n  if (futureDateCount === updatedResponse.data.length - 1) {\n    updatedResponse.data = [\n      {\n        ...updatedResponse.data[0],\n        x: 0,\n        isCurrentDate: false\n      },\n      ...updatedResponse.data\n    ].map((props, index) => ({ ...props, x: index }));\n  }\n\n  updatedResponse.meta = {\n    count: meta[TALLY_META_TYPES.COUNT],\n    cloudigradeHasMismatch: meta[TALLY_META_TYPES.HAS_CLOUDIGRADE_MISMATCH],\n    metricId: meta[TALLY_META_TYPES.METRIC_ID],\n    productId: meta[TALLY_META_TYPES.PRODUCT],\n    totalMonthlyDate: meta[TALLY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_META_TYPES.DATE],\n    totalMonthlyHasData: meta[TALLY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_META_TYPES.HAS_DATA],\n    totalMonthlyValue: meta[TALLY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_META_TYPES.VALUE]\n  };\n\n  return updatedResponse;\n};\n\nconst rhsmTransformers = {\n  instances: rhsmInstances,\n  tally: rhsmTally\n};\n\nexport { rhsmTransformers as default, rhsmTransformers, rhsmInstances, rhsmTally };\n","import { serviceCall } from '../config';\nimport { rhsmSchemas } from './rhsmSchemas';\nimport { helpers } from '../../common';\nimport { rhsmTransformers } from './rhsmTransformers';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getApiVersion = (options = {}) => {\n  const { cache = false, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {string} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {string} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {object} links\n * @apiSuccess {object} meta\n * @apiSuccess {string} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {string} meta.product\n * - RHEL\n * @apiSuccess {number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 12\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 4\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000.057890,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"has_cloudigrade_data\": true,\n *           \"has_cloudigrade_mismatch\": true,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\",\n *         \"total_core_hours\": 30500.04,\n *         \"total_instance_hours\": 35\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.20,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.15,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.11,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.32,\n *           \"instance_hours\": 23\n *         },\n *         {\n *           \"date\": \"2020-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.42,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 999.06,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\",\n *         \"total_core_hours\": 200.03,\n *         \"total_instance_hours\": 26\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 400,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\",\n *         \"total_core_hours\": 2050.04\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/:metric_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Cores\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Transfer-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Transfer-gibibytes\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 1024,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibyte-months\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Instance-hours Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Instance-hours\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2000,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/* Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of IDs\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getGraphTally = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.tally, rhsmSchemas.errors],\n    transform = [rhsmTransformers.tally]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_TALLY}`;\n  updatedId.forEach((value, index) => {\n    url = url.replace(`{${index}}`, value);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 500\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-123456789012\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.05,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 70,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6N\",\n *           \"cloud_provider\": \"AZURE\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.00,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"CLOUD\",\n *           \"measurement_type\": \"CLOUD\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6M\",\n *           \"cores\": 4,\n *           \"core_hours\": 1000.20,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 10,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"display_name\": \"dolor.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6L\",\n *           \"cores\": 4,\n *           \"core_hours\": 1001.60,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 1,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"display_name\": \"lorem.test.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YX\",\n *           \"cores\": 4,\n *           \"core_hours\": 999.60,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"display_name\": \"lorem.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YZ\",\n *           \"cores\": 0,\n *           \"core_hours\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"display_name\": \"lorem.another.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YA\",\n *           \"cores\": 0,\n *           \"core_hours\": 0.01,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-21T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YB\",\n *           \"cores\": 0,\n *           \"core_hours\": 999.61,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-22T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YC\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-23T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YD\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-24T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YEE\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-26T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YF\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-29T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 11\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = false,\n    cancelId,\n    schema = [rhsmSchemas.guests, rhsmSchemas.errors],\n    transform = []\n  } = options;\n\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', id),\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 750\n * @api {get} /api/rhsm-subscriptions/v1/instances/products/:product_id Get RHSM instances table/inventory data\n * @apiDescription Retrieve instances table/inventory data.\n *\n * Reference [RHSM for instances table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"number_of_guests\": 70,\n *           \"billing_provider\": \"red hat\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx01\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"display_name\": \"rhv.example.com\",\n *           \"measurements\": [\n *              42,\n *              0.000003563,\n *              1\n *           ],\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"billing_provider\": \"azure\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx02\",\n *           \"inventory_id\": \"XXXXXX-b344-4778-831c-XXXXXXXX\",\n *           \"subscription_manager_id\": \"XXXXXX-5b00-42fa-XXXX-75801d45cc6d\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"measurements\": [\n *              20,\n *              null,\n *              1000\n *           ],\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"billing_provider\": \"Unknown\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx03\",\n *           \"inventory_id\": \"BBBBB-b344-4778-831c-BBBBBBB\",\n *           \"subscription_manager_id\": \"BBBBB-5b00-42fa-BBBBB-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              4000,\n *              10000.0000345678,\n *              3000\n *           ],\n *           \"last_seen\": \"2020-04-03T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3,\n *         \"measurements\": [\n *           \"Instance-hours\",\n *           \"Storage-gibibyte-months\",\n *           \"Transfer-gibibytes\"\n *         ],\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"Premium\",\n *         \"usage\": \"Production\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API instances data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getInstancesInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.instances, rhsmSchemas.errors],\n    transform = [rhsmTransformers.instances]\n  } = options;\n\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_INSTANCES}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 0\n * @api {get} /api/rhsm-subscriptions/v1/subscriptions/products/:product_id Get RHSM subscriptions table/inventory data\n * @apiDescription Retrieve subscriptions table/inventory data.\n *\n * Reference [RHSM for subscriptions table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"sku\": \"RH00011\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)\",\n *           \"billing_provider\": \"red hat\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" },\n *              { \"id\": \"ipsum\", \"number\": \"1234567890\" },\n *              { \"id\": \"lorem\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 1,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"sku\": \"RH00010\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server\",\n *           \"billing_provider\": \"azure\",\n *           \"service_level\": \"Self-Support\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [],\n *           \"next_event_date\": \"2020-04-02T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 15,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"sku\": \"RH00009\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium\",\n *           \"billing_provider\": \"Unknown\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription End\",\n *           \"quantity\": 3000,\n *           \"physical_capacity\": 2,\n *           \"virtual_capacity\": 2,\n *           \"total_capacity\": 4,\n *           \"uom\": \"Cores\",\n *           \"has_infinite_quantity\": false\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3,\n *         \"subscription_type\": \"On-demand\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API subscriptions data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getSubscriptionsInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.subscriptions, rhsmSchemas.errors],\n    transform = []\n  } = options;\n\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_SUBSCRIPTIONS}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\nconst rhsmServices = {\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsm/rhsmServices';\n\n/**\n * Get a combined RHSM response from reporting and capacity.\n *\n * @param {string} id\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphReportsCapacity =\n  (id = null, query = {}, options = {}) =>\n  dispatch => {\n    const { cancelId = 'graphReportsCapacity' } = options;\n\n    return dispatch({\n      type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n      payload: Promise.all([\n        rhsmServices.getGraphReports(id, query, { cancelId }),\n        rhsmServices.getGraphCapacity(id, query, { cancelId })\n      ]),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n  };\n\n/**\n * Get a RHSM response from multiple Tally IDs and metrics.\n *\n * @param {object|Array} idMetric An object, or an Array of objects, in the form of { id: PRODUCT_ID, metric: METRIC_ID }\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphTally =\n  (idMetric = {}, query = {}, options = {}) =>\n  dispatch => {\n    const { cancelId = 'graphTally' } = options;\n    const multiMetric = (Array.isArray(idMetric) && idMetric) || [idMetric];\n    const multiDispatch = [];\n\n    multiMetric.forEach(({ id, metric }) => {\n      multiDispatch.push({\n        type: rhsmTypes.GET_GRAPH_TALLY_RHSM,\n        payload: rhsmServices.getGraphTally([id, metric], query, {\n          cancelId: `${cancelId}_${id}_${metric}`\n        }),\n        meta: {\n          id: `${id}_${metric}`,\n          idMetric: { id, metric },\n          query,\n          notifications: {}\n        }\n      });\n    });\n\n    return Promise.all(dispatch(multiDispatch));\n  };\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n      payload: rhsmServices.getHostsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n      payload: rhsmServices.getHostsInventoryGuests(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get an instances response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getInstancesInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM,\n      payload: rhsmServices.getInstancesInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a RHSM response from message reporting.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getMessageReports =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM,\n      payload: rhsmServices.getGraphReports(id, query, { cancelId: 'messageReport' }),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a subscriptions response from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getSubscriptionsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM,\n      payload: rhsmServices.getSubscriptionsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\nconst rhsmActions = {\n  getGraphReportsCapacity,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n\nexport {\n  rhsmActions as default,\n  rhsmActions,\n  getGraphReportsCapacity,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport { serviceCall } from '../config';\nimport { helpers } from '../../common';\n\n/**\n * ToDo: Review moving the getLocale function under platformServices.\n * Also review using window.navigator.language as the primary pull for language.\n */\n/**\n * Return a browser locale, or fallback towards the platform locale cookie\n *\n * @returns {Promise<*>}\n */\nconst getLocale = () => {\n  const defaultLang = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n  const parseLang = value => {\n    const key = (value && LocaleCode.getLanguageName(value)) || null;\n    return (key && { value, key }) || undefined;\n  };\n\n  return serviceCall({\n    url: async () => {\n      const cookieLang = await (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace(\n        '_',\n        '-'\n      );\n\n      return parseLang(cookieLang) || defaultLang;\n    }\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = (options = {}) => {\n  const { cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport { userServices as default, userServices, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/user/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_LOCALE,\n    payload: userServices.getLocale()\n  });\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn =\n  (query = {}) =>\n  dispatch =>\n    dispatch({\n      type: userTypes.UPDATE_USER_OPTIN,\n      payload: userServices.updateAccountOptIn(query),\n      meta: {\n        query,\n        notifications: {\n          rejected: {\n            variant: 'danger',\n            title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsErrorDescription'),\n            dismissable: true\n          },\n          fulfilled: {\n            variant: 'success',\n            title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsSuccessDescription'),\n            dismissable: true,\n            autoDismiss: false\n          }\n        }\n      }\n    });\n\nconst userActions = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport { userActions as default, userActions, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\n\n/**\n * ToDo: This selector can be removed after guestsList.deprecated and inventoryList.deprecated components are removed\n */\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @returns {object}\n */\nconst statePropsFilter = state => ({\n  auth: {\n    ...state.user?.auth\n  },\n  errors: {\n    ...state.user?.errors\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{session: {entitled: boolean, permissions: object, authorized: object, admin: boolean,\n *     error: boolean}}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter], response => {\n  const { errors = {}, auth = {} } = response || {};\n  const updatedSession = {\n    ...errors,\n    admin: false,\n    entitled: false,\n    error: errors?.error || false,\n    authorized: {},\n    permissions: {}\n  };\n\n  if (!updatedSession?.error && auth?.fulfilled) {\n    const [user = {}, responsePermissions = {}] = auth?.data || [];\n    updatedSession.admin = user.isAdmin;\n    updatedSession.entitled = user.isEntitled;\n    updatedSession.permissions = responsePermissions.permissions;\n    updatedSession.authorized = responsePermissions.authorized;\n  }\n\n  return { session: updatedSession };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{session: {entitled: boolean, permissions: Array, authorized: boolean, admin: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst userSessionSelectors = {\n  userSession: selector,\n  makeUserSession: makeSelector\n};\n\nexport { userSessionSelectors as default, userSessionSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsGuests?.[props.id]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter], response => {\n  const { metaId, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    status: responseData.status\n  };\n\n  if (responseData.fulfilled) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [] } = responseData.data || {};\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n      data: listData,\n      customResponseValue: customInventoryValue\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    updatedResponseData.listData = updatedListData;\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst guestsListSelectors = {\n  guestsList: selector,\n  makeGuestsList: makeSelector\n};\n\nexport { guestsListSelectors as default, guestsListSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport LruCache from 'lru-cache';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  ttl: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  allowStale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.graph?.reportCapacity?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { graphTallyQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      graphTallyQuery: { ...state.view?.graphTallyQuery?.[props.viewId] }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    graphData: {},\n    meta: {},\n    query,\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, responseMetaQuery)) {\n    const [report, capacity] = responseData.data;\n    const reportData = report?.[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA] || [];\n    const reportMeta = report?.[rhsmApiTypes.RHSM_API_RESPONSE_META] || {};\n    const capacityData = capacity?.[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA] || [];\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Reporting graph entries\n    const customReportValue = (data, key, presetData) => ({\n      ...presetData,\n      hasData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_DATA],\n      hasCloudigradeData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_DATA],\n      hasCloudigradeMismatch: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]\n    });\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y,\n      hasInfinite: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE]\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment.utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE]).startOf('day').toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY =\n                (Number.isInteger(graphDataObj[graphDataObjKey]) &&\n                  Number.parseInt(graphDataObj[graphDataObjKey], 10)) ||\n                Number.parseFloat(Number.parseFloat(graphDataObj[graphDataObjKey]).toFixed(2));\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value }, customValue: customReportValue });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Generate normalized properties\n    const [updatedReportMeta] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n      data: reportMeta\n    });\n\n    const [meta = {}] = updatedReportMeta || [];\n\n    // Update response and cache\n    Object.assign(updatedResponseData.meta, meta);\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst graphCardSelectors = {\n  graphCard: selector,\n  makeGraphCard: makeSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport LruCache from 'lru-cache';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  ttl: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  allowStale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventoryHostsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventoryHostsQuery: {\n        ...state.view?.inventoryHostsQuery?.[props.productId],\n        ...state.view?.inventoryHostsQuery?.[props.viewId]\n      }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Note: We use an in-memory cache to provide the user a pleasant UX experience. To\n * aid in that UX we need \"pending\" to fire in scenarios that are not loaded in-memory. Because\n * we load the cache first there are scenarios where the previous XHR call is still in state\n * when a subsequent fulfilled XHR call comes through. Without the _isEqual(query, metaQuery) check\n * the overlap of the prior fulfilled call interferes with the pending of the subsequent call.\n */\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, metaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.CLOUD_PROVIDER:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.HARDWARE:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.MEASUREMENT:\n          return value?.toLowerCase() || null;\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst inventoryListSelectors = {\n  inventoryList: selector,\n  makeInventoryList: makeSelector\n};\n\nexport { inventoryListSelectors as default, inventoryListSelectors, selector, makeSelector };\n","import guestsListSelectors from './guestsListSelectors';\nimport graphCardSelectors from './graphCardSelectors';\nimport inventoryListSelectors from './inventoryListSelectors';\nimport userSelectors from './userSelectors';\n\nconst reduxSelectors = {\n  guestsList: guestsListSelectors,\n  graphCard: graphCardSelectors,\n  inventoryList: inventoryListSelectors,\n  user: userSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}, tally: {}}}\n */\nconst initialState = {\n  legend: {},\n  reportCapacity: {},\n  tally: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          [action.id]: action.value\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM },\n          { ref: 'tally', type: rhsmTypes.GET_GRAPH_TALLY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { inventoryTypes } from '../types';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{subscriptionsInventory: {}, instancesInventory: {}, tabs: {}, hostsInventory: {}, hostsGuests: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {},\n  instancesInventory: {},\n  subscriptionsInventory: {},\n  tabs: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system and subscriptions inventory to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inventoryTypes.SET_INVENTORY_TAB:\n      return reduxHelpers.setStateProp(\n        'tabs',\n        {\n          ...action.tabs\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n          { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM },\n          { ref: 'instancesInventory', type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM },\n          { ref: 'subscriptionsInventory', type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{report: {}}}\n */\nconst initialState = {\n  report: {}\n};\n\n/**\n * Generated daily observer/reducer for report to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst messagesReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [{ ref: 'report', type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM }],\n    state,\n    action\n  );\n\nmessagesReducer.initialState = initialState;\n\nexport { messagesReducer as default, initialState, messagesReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, platformTypes, userTypes } from '../types';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{auth: {}, optin: {}, locale: null, errors: {}}}\n */\nconst initialState = {\n  auth: {},\n  errors: {},\n  locale: {},\n  optin: {}\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(\n          reduxHelpers.getDataFromResults(action),\n          [rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA],\n          []\n        );\n\n        return reduxHelpers.setStateProp(\n          'errors',\n          {\n            error: true,\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            data: errorCodes.map(value => value[rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE]),\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'locale', type: userTypes.USER_LOCALE },\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'auth', type: platformTypes.PLATFORM_USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { routerHelpers } from '../../components/router';\nimport { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphTallyQuery: {}, inventoryHostsQuery: {}, inventorySubscriptionsQuery: {}, query: {},\n *     inventoryGuestsQuery: {}}}\n */\nconst initialState = {\n  query: {},\n  graphTallyQuery: {},\n  inventoryGuestsQuery: {},\n  inventoryHostsQuery: {},\n  inventorySubscriptionsQuery: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST:\n      const updateResetQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n\n          delete productQuery[RHSM_API_QUERY_TYPES.DIRECTION];\n          delete productQuery[RHSM_API_QUERY_TYPES.SORT];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateResetQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateResetQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updateClearQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateClearQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateClearQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST:\n      const updateClearGuestQuery = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryGuestsQuery: updateClearGuestQuery(state.inventoryGuestsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'graphTallyQuery',\n        {\n          [action.viewId]: {\n            ...state.graphTallyQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.START_DATE]: action[RHSM_API_QUERY_TYPES.START_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.END_DATE]: action[RHSM_API_QUERY_TYPES.END_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.BILLING_PROVIDER]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: action[RHSM_API_QUERY_TYPES.BILLING_PROVIDER]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: action[RHSM_API_QUERY_TYPES.DISPLAY_NAME]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport messagesReducer from './messagesReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  messages: messagesReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  messagesReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { platformConstants as platformApiTypes } from '../../services/platform/platformConstants';\n\n/**\n * Modify actions' payload for privacy.\n *\n * @param {object} action\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeActionHeaders = ({ payload, ...action }) => {\n  if (payload) {\n    let updatedPayload = { ...payload, headers: {} };\n\n    if (Array.isArray(payload)) {\n      updatedPayload = payload.map(({ headers, ...obj }) => ({ ...obj, headers: {} }));\n    }\n\n    return { payload: updatedPayload, ...action };\n  }\n\n  return { ...action };\n};\n\n/**\n * Modify actions' payload data for privacy.\n *\n * @param {object} action\n * @param {string} action.type\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeData = ({ type, payload, ...action }) => {\n  const removeUserIdentity = obj => {\n    if (obj?.data?.user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]) {\n      return {\n        ...obj,\n        data: {\n          ...obj.data,\n          user: {\n            ...obj.data.user,\n            [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]: {\n              ...obj.data.user[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY],\n              [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]: {}\n            }\n          }\n        }\n      };\n    }\n\n    return undefined;\n  };\n\n  const updatedPayload = removeUserIdentity(payload) || payload;\n  const updatedAction = removeUserIdentity(action) || action;\n\n  if (updatedPayload) {\n    return { type, payload: updatedPayload, ...updatedAction };\n  }\n\n  return { type, ...updatedAction };\n};\n\n/**\n * Return existing sessionStorage log.\n *\n * @param {string} id\n * @param {number} limit\n * @returns {Array}\n */\nconst getActions = (id, limit) => {\n  const { sessionStorage } = window;\n  const item = sessionStorage.getItem(id);\n  let parsedItems = (item && (JSON.parse(item) || {})?.actions) || [];\n\n  if (parsedItems?.length && limit > 0) {\n    parsedItems = parsedItems.slice(limit * -1);\n  }\n\n  return parsedItems;\n};\n\n/**\n * Store actions against an id in sessionStorage.\n *\n * @param {object} action\n * @param {object} config\n * @param {number} config.id\n * @param {number} config.limit\n */\nconst recordAction = (action, { id, limit, ...config }) => {\n  const { navigator, sessionStorage } = window;\n  const items = getActions(id, limit) || [];\n  const priorItem = items[items.length - 1];\n  const updatedAction = sanitizeData(sanitizeActionHeaders(action));\n  const actionObj = {\n    diff: 0,\n    timestamp: Date.now(),\n    action: updatedAction\n  };\n\n  if (priorItem && priorItem.timestamp) {\n    actionObj.diff = actionObj.timestamp - priorItem.timestamp;\n  }\n\n  items.push(actionObj);\n  sessionStorage.setItem(\n    id,\n    JSON.stringify({\n      browser: navigator.userAgent,\n      timestamp: new Date().toLocaleString(),\n      ...config,\n      actions: items\n    })\n  );\n};\n\n/**\n * Expose settings and record middleware.\n *\n * @param {object} config\n * @returns {Function}\n */\nconst actionRecordMiddleware =\n  (config = {}) =>\n  () =>\n  next =>\n  action => {\n    recordAction(action, {\n      id: 'actionRecordMiddleware/v1',\n      limit: 100,\n      ...config\n    });\n\n    return next(action);\n  };\n\nexport { actionRecordMiddleware as default, actionRecordMiddleware };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { actionRecordMiddleware } from './actionRecordMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  actionRecordMiddleware({\n    id: process.env.REACT_APP_UI_LOGGER_ID,\n    app: { version: process.env.REACT_APP_UI_VERSION }\n  }),\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","const SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","const SET_INVENTORY_TAB = 'SET_INVENTORY_TAB';\n\n/**\n * Inventory action, reducer types.\n *\n * @type {{SET_INVENTORY_TAB: string}}\n */\nconst inventoryTypes = {\n  SET_INVENTORY_TAB\n};\n\nexport { inventoryTypes as default, inventoryTypes, SET_INVENTORY_TAB };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_GLOBAL_FILTER_HIDE = 'PLATFORM_GLOBAL_FILTER_HIDE';\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\nconst PLATFORM_USER_AUTH = 'PLATFORM_USER_AUTH';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_USER_AUTH: string, PLATFORM_GLOBAL_FILTER_HIDE: string,\n *     PLATFORM_INIT: string, PLATFORM_SET_NAV: string, PLATFORM_CLEAR_NOTIFICATIONS: string,\n *     PLATFORM_ADD_NOTIFICATION: string, PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV,\n  PLATFORM_USER_AUTH\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV,\n  PLATFORM_USER_AUTH\n};\n","import { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\n\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\nconst SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST = 'SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST';\nconst SET_QUERY_RESET_INVENTORY_LIST = 'SET_QUERY_RESET_INVENTORY_LIST';\n\n/**\n * Query types associated with across ALL queries.\n */\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.BILLING_PROVIDER}`,\n  [RHSM_API_QUERY_TYPES.END_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.END_DATE}`,\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.START_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.START_DATE}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\n/**\n * Inventory query types associated with only GUESTS' queries.\n */\nconst SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Inventory query types associated with only HOSTS' and INSTANCES' queries.\n */\nconst SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DISPLAY_NAME}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Inventory query types associated with only SUBSCRIPTIONS' queries.\n */\nconst SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES: object, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES: object, SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string,\n *     SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST: string, SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES: object,\n *     SET_QUERY_RESET_INVENTORY_LIST: string}}\n */\nconst queryTypes = {\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_LOCALE: string, GET_USER_OPTIN: string,\n *     UPDATE_USER_OPTIN: string, DELETE_USER_OPTIN: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { inventoryTypes } from './inventoryTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  inventory: inventoryTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  inventoryTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","const SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","const GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_GRAPH_TALLY_RHSM = 'GET_GRAPH_TALLY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\nconst GET_INSTANCES_INVENTORY_RHSM = 'GET_INSTANCES_INVENTORY_RHSM';\nconst GET_MESSAGE_REPORTS_RHSM = 'GET_MESSAGE_REPORTS_RHSM';\nconst GET_SUBSCRIPTIONS_INVENTORY_RHSM = 'GET_SUBSCRIPTIONS_INVENTORY_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_MESSAGE_REPORTS_RHSM: string, GET_HOSTS_INVENTORY_GUESTS_RHSM: string,\n *     GET_SUBSCRIPTIONS_INVENTORY_RHSM: string, GET_HOSTS_INVENTORY_RHSM: string, GET_INSTANCES_INVENTORY_RHSM: string,\n *     GET_GRAPH_TALLY_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n","/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string, RESOURCE_DEFS: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\n// ToDo: clean up this app name piece, these facets come through the helpers and src/config/rbac.json\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\nconst platformConstants = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformConstants as default,\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","/**\n * ToDo: migrate to using rhsmConstants only!\n * Exporting rhsmConstants through rhsmApiTypes is currently considered a stop-gap during migration to the\n * schema validator.\n */\n/**\n * RHSM path IDs for products.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string, RHODS: string, RHOSAK: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string,\n *     RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHACS: string,\n *     RHEL_IBM_POWER: string}}\n */\nconst RHSM_API_PATH_PRODUCT_TYPES = {\n  RHACS: 'rhacs',\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  RHODS: 'rhods',\n  RHOSAK: 'rhosak',\n  OPENSHIFT: 'OpenShift Container Platform',\n  OPENSHIFT_METRICS: 'OpenShift-metrics',\n  OPENSHIFT_DEDICATED_METRICS: 'OpenShift-dedicated-metrics',\n  SATELLITE: 'Satellite',\n  SATELLITE_CAPSULE: 'Satellite Capsule',\n  SATELLITE_SERVER: 'Satellite Server'\n};\n\n/**\n * RHSM path IDs for metrics.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     TRANSFER_GIBIBYTES: string, CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string}}\n */\nconst RHSM_API_PATH_METRIC_TYPES = {\n  CORES: 'Cores',\n  SOCKETS: 'Sockets',\n  CORE_SECONDS: 'Core-seconds',\n  INSTANCE_HOURS: 'Instance-hours',\n  STORAGE_GIBIBYTES: 'Storage-gibibytes',\n  STORAGE_GIBIBYTE_MONTHS: 'Storage-gibibyte-months',\n  TRANSFER_GIBIBYTES: 'Transfer-gibibytes'\n};\n\n/**\n * RHSM response data type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_DATA = 'data';\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response general meta types.\n *\n * @type {{PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  PRODUCT: 'product'\n};\n\n/**\n * RHSM response errors type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERRORS = 'errors';\n\n/**\n * RHSM response errors types.\n *\n * @type {{CODE: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_TYPES = {\n  CODE: 'code'\n};\n\n/**\n * RHSM response error codes.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * FixMe: Appears we combined future guests used with instances. Investigate moving \"INVENTORY_ID\" and \"SUBSCRIPTION_MANAGER_ID\".\n * They're current associated with \"hosts\" guests. Need to also determine if this is something that needs to be added to \"instances\"\n * or if keeping them added to guests only is enough.\n */\n/**\n * RHSM response Instance DATA types.\n *\n * @type {{MEASUREMENTS: string, BILLING_ACCOUNT_ID: string, SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string,\n *     NUMBER_OF_GUESTS: string, BILLING_PROVIDER: string, DISPLAY_NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_DATA_TYPES = {\n  BILLING_PROVIDER: 'billing_provider',\n  BILLING_ACCOUNT_ID: 'billing_account_id',\n  DISPLAY_NAME: 'display_name',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENTS: 'measurements',\n  NUMBER_OF_GUESTS: 'number_of_guests',\n  SUBSCRIPTION_MANAGER_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response Instances META types.\n *\n * @type {{MEASUREMENTS: string, PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  MEASUREMENTS: 'measurements'\n};\n\n/**\n * RHSM response Subscriptions DATA types.\n *\n * @type {{BILLING_ACCOUNT_ID: string, QUANTITY: string, SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string,\n *     NUMBER_OF_GUESTS: string, HAS_INFINITE_QUANTITY: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string, DISPLAY_NAME: string, MEASUREMENTS: string, UOM: string, NEXT_EVENT_DATE: string,\n *     BILLING_PROVIDER: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES = {\n  ...RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  HAS_INFINITE_QUANTITY: 'has_infinite_quantity',\n  NEXT_EVENT_DATE: 'next_event_date',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Subscriptions META types.\n *\n * @type {{PRODUCT: string, SUBSCRIPTION_TYPE: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  SUBSCRIPTION_TYPE: 'subscription_type'\n};\n\n/**\n * RHSM response Tally DATA types.\n *\n * @type {{DATE: string, HAS_DATA: string, VALUE: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_DATA_TYPES = {\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM response Tally META types.\n *\n * @type {{TOTAL_MONTHLY: string, DATE: string, PRODUCT: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string, VALUE: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data',\n  METRIC_ID: 'metric_id',\n  TOTAL_MONTHLY: 'total_monthly'\n};\n\n/**\n * RHSM response, query parameters for GRANULARITY.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_RESPONSE_GRANULARITY_TYPES = {\n  DAILY: 'Daily',\n  WEEKLY: 'Weekly',\n  MONTHLY: 'Monthly',\n  QUARTERLY: 'Quarterly'\n};\n\n/**\n * ToDo: Activate available provider type as it becomes available 202205\n * (just uncomment)\n */\n/**\n * RHSM response, query parameters for BILLING_PROVIDER\n *\n * @type {{AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string, ORACLE: string}}\n */\nconst RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES = {\n  RED_HAT: 'red hat',\n  AWS: 'aws'\n  // GCP: 'gcp',\n  // AZURE: 'azure',\n  // ORACLE: 'oracle',\n  // NONE: ''\n};\n\n/**\n * RHSM response, query parameters for SLA.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_RESPONSE_SLA_TYPES = {\n  PREMIUM: 'Premium',\n  STANDARD: 'Standard',\n  SELF: 'Self-Support',\n  NONE: ''\n};\n\n/**\n * RHSM response, general parameters for subscription types\n *\n * @type {{ANNUAL: string, ON_DEMAND: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTION_TYPES = {\n  ANNUAL: 'Annual',\n  ON_DEMAND: 'On-demand'\n};\n\n/**\n * RHSM response, query parameters for UOM.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_RESPONSE_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM response, query parameters for USAGE.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_RESPONSE_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\nconst RHSM_API_QUERY_GRANULARITY_TYPES = RHSM_API_RESPONSE_GRANULARITY_TYPES;\n\n/**\n * ToDo: Clean up sort params once hosts is fully deprecated\n * These sort params are focused on the instances api NOT hosts. Since there\n * are minor differences, hosts sort params are maintained in /types/rhsmApiTypes.js as\n * we migrate towards hosts deprecation. Subscriptions sorts\n */\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     TRANSFER_GIBIBYTES: string, BILLING_PROVIDER: string, CORE_SECONDS: string, LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_TYPES = {\n  ...RHSM_API_PATH_METRIC_TYPES,\n  BILLING_PROVIDER: 'billing_provider',\n  LAST_SEEN: 'last_seen',\n  NAME: 'display_name'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string,\n *     TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES = {\n  NEXT_EVENT_DATE: 'next_event_date',\n  NEXT_EVENT_TYPE: 'next_event_type',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SKU: 'sku',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  USAGE: 'usage'\n};\n\nconst RHSM_API_QUERY_BILLING_PROVIDER_TYPES = RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES;\n\nconst RHSM_API_QUERY_SLA_TYPES = RHSM_API_RESPONSE_SLA_TYPES;\n\nconst RHSM_API_QUERY_UOM_TYPES = RHSM_API_RESPONSE_UOM_TYPES;\n\nconst RHSM_API_QUERY_USAGE_TYPES = RHSM_API_RESPONSE_USAGE_TYPES;\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{UOM: string, BILLING_ACCOUNT_ID: string, USAGE: string, DIRECTION: string, SORT: string,\n *     END_DATE: string, OFFSET: string, SLA: string, LIMIT: string, START_DATE: string,\n *     BILLING_PROVIDER: string, DISPLAY_NAME: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  BILLING_PROVIDER: 'billing_provider',\n  BILLING_ACCOUNT_ID: 'billing_account_id',\n  DIRECTION: 'dir',\n  DISPLAY_NAME: 'display_name_contains',\n  END_DATE: 'ending',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  START_DATE: 'beginning',\n  UOM: 'uom',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM query parameter options for TALLY, CAPACITY endpoints.\n *\n * @type {{GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string, BILLING_PROVIDER: string}}\n */\nconst RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES = {\n  BILLING_PROVIDER: 'billing_provider',\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage'\n};\n\n/**\n * Aggregate all query set types.\n *\n * @type {{UOM: string, GRANULARITY: string, USAGE: string, DIRECTION: string, SORT: string, END_DATE: string,\n *     OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string}}\n */\nconst RHSM_API_QUERY_SET_TYPES = {\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES\n};\n\n/**\n * Product display types.\n *\n * @type {{DUAL_AXES: string, LEGACY: string, HOURLY: string}}\n */\nconst RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES = {\n  DUAL_AXES: 'dual-axes',\n  HOURLY: 'hourly',\n  LEGACY: 'legacy'\n};\n\n/**\n * RHSM constants.\n *\n * @type {{RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string,\n *     BILLING_PROVIDER: string}, RHSM_API_RESPONSE_DATA: string, RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES: {PRODUCT: string,\n *     SUBSCRIPTION_TYPE: string, COUNT: string}, RHSM_API_PATH_METRIC_TYPES: {CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string,\n *     INSTANCE_HOURS: string, TRANSFER_GIBIBYTES: string, CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string},\n *     RHSM_API_RESPONSE_TALLY_DATA_TYPES: {DATE: string, HAS_DATA: string, VALUE: string},\n *     RHSM_API_RESPONSE_INSTANCES_META_TYPES: {MEASUREMENTS: string, PRODUCT: string, COUNT: string},\n *     RHSM_API_RESPONSE_INSTANCES_DATA_TYPES: {MEASUREMENTS: string, BILLING_ACCOUNT_ID: string, SUBSCRIPTION_MANAGER_ID: string,\n *     INVENTORY_ID: string, NUMBER_OF_GUESTS: string, BILLING_PROVIDER: string, DISPLAY_NAME: string, LAST_SEEN: string},\n *     RHSM_API_RESPONSE_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_RESPONSE_META_TYPES: {PRODUCT: string, COUNT: string}, RHSM_API_RESPONSE_ERRORS_CODE_TYPES: {GENERIC: string, OPTIN: string},\n *     RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *     RHSM_API_RESPONSE_UOM_TYPES: {CORES: string, SOCKETS: string}, RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES: {BILLING_ACCOUNT_ID: string,\n *     QUANTITY: string, SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string, NUMBER_OF_GUESTS: string, HAS_INFINITE_QUANTITY: string,\n *     TOTAL_CAPACITY: string, PRODUCT_NAME: string, SERVICE_LEVEL: string, DISPLAY_NAME: string, MEASUREMENTS: string, UOM: string,\n *     NEXT_EVENT_DATE: string, BILLING_PROVIDER: string, LAST_SEEN: string},\n *     RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES: {ASCENDING: string, DESCENDING: string},\n *     RHSM_API_RESPONSE_SUBSCRIPTION_TYPES: {ANNUAL: string, ON_DEMAND: string}, RHSM_API_QUERY_INVENTORY_SORT_TYPES: {CORES: string,\n *     STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string, TRANSFER_GIBIBYTES: string, BILLING_PROVIDER: string,\n *     CORE_SECONDS: string, LAST_SEEN: string, NAME: string}, RHSM_API_PATH_PRODUCT_TYPES: {RHEL_ARM: string, OPENSHIFT_METRICS: string,\n *     SATELLITE: string, RHEL_WORKSTATION: string, RHODS: string, RHOSAK: string, RHEL_COMPUTE_NODE: string, RHEL_X86: string,\n *     OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string,\n *     SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHACS: string, RHEL_IBM_POWER: string},\n *     RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES: {AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string, ORACLE: string},\n *     RHSM_API_RESPONSE_ERRORS_TYPES: {CODE: string}, RHSM_API_QUERY_BILLING_PROVIDER_TYPES: {AZURE: string, GCP: string, RED_HAT: string,\n *     NONE: string, AWS: string, ORACLE: string}, RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string,\n *     PRODUCTION: string}, RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_SET_INVENTORY_TYPES: {UOM: string, BILLING_ACCOUNT_ID: string, USAGE: string, DIRECTION: string, SORT: string,\n *     END_DATE: string, OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, BILLING_PROVIDER: string, DISPLAY_NAME: string},\n *     RHSM_API_RESPONSE_ERRORS: string, RHSM_API_RESPONSE_TALLY_META_TYPES: {TOTAL_MONTHLY: string, DATE: string, PRODUCT: string,\n *     HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string, VALUE: string},\n *     RHSM_API_QUERY_UOM_TYPES: {CORES: string, SOCKETS: string}, RHSM_API_RESPONSE_META: string,\n *     RHSM_API_RESPONSE_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *     RHSM_API_QUERY_SET_TYPES: {UOM: string, GRANULARITY: string, USAGE: string, DIRECTION: string, SORT: string, END_DATE: string,\n *     OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string},\n *     RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES: {QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string,\n *     NEXT_EVENT_DATE: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string},\n *     RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES: {DUAL_AXES: string, LEGACY: string, HOURLY: string},\n *     RHSM_API_RESPONSE_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}}\n */\nconst rhsmConstants = {\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTION_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES\n};\n\nexport {\n  rhsmConstants as default,\n  rhsmConstants,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTION_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES\n};\n","import { rhsmConstants } from '../services/rhsm/rhsmConstants';\n\n/**\n * ToDo: Clean up params, see userReducer.\n */\n/**\n * RHSM response Error DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA = rhsmConstants.RHSM_API_RESPONSE_ERRORS;\n\n/**\n * ToDo: Clean up params, see userReducer.\n */\n/**\n * RHSM response Error DATA types.\n * Schema/map of expected Error data response properties.\n *\n * @type {{CODE: string, DETAIL: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_TYPES = {\n  ...rhsmConstants.RHSM_API_RESPONSE_ERRORS_TYPES\n};\n\n/**\n * RHSM response Error DATA CODE types.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES = {\n  ...rhsmConstants.RHSM_API_RESPONSE_ERRORS_CODE_TYPES\n};\n\n/**\n * ToDo: Clean up params, unused.\n */\n/**\n * RHSM response links type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS = 'links';\n\n/**\n * ToDo: Clean up params, unused.\n */\n/**\n * RHSM response LINKS type.\n * Schema/map of expected inventory LINKS response properties.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS_TYPES = {\n  FIRST: 'first',\n  LAST: 'last',\n  PREVIOUS: 'previous',\n  NEXT: 'next'\n};\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * ToDo: Clean up params, used by deprecated graph component selector and deprecated inventory component selector.\n * It appears some of these may need to move over towards rhsmSchemas.js\n */\n/**\n * RHSM response META types.\n * Schema/map of expected META response properties.\n *\n * @type {{COUNT: string, TOTAL_INSTANCE_HOURS: string, TOTAL_CORE_HOURS: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  TOTAL_CORE_HOURS: 'total_core_hours',\n  TOTAL_INSTANCE_HOURS: 'total_instance_hours'\n};\n\n/**\n * RHSM response data type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_DATA = 'data';\n\n/**\n * RHSM response Capacity DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA = RHSM_API_RESPONSE_DATA;\n\n/**\n * ToDo: Clean up params, used by deprecated graph component selector.\n * We may need to relocate this as part of a \"capacity\" schema some of these params towards rhsmSchemas.js\n */\n/**\n * RHSM response Capacity DATA types.\n * Schema/map of expected Capacity data response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string,\n *     HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response inventory DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA = RHSM_API_RESPONSE_DATA;\n\n/**\n * ToDo: Clean up params, used by deprecated inventory component and related selector.\n */\n/**\n * RHSM response inventory DATA types.\n * Schema/map of expected inventory DATA response properties.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, SUBSCRIPTION_ID: string,\n *     INVENTORY_ID: string, MEASUREMENT: string, ID: string, GUESTS: string, CLOUD_PROVIDER: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA_TYPES = {\n  CLOUD_PROVIDER: 'cloud_provider',\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  GUESTS: 'number_of_guests',\n  HARDWARE: 'hardware_type',\n  ID: 'insights_id',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets',\n  SUBSCRIPTION_ID: 'subscription_manager_id'\n};\n\n/**\n * ToDo: Clean up params, used by deprecated guests component selector.\n */\n/**\n * RHSM response inventory guests DATA types.\n * Schema/map of expected inventory guests DATA response properties.\n *\n * @type {{SUBSCRIPTION_ID: string, ID: string, NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES = {\n  ID: 'insights_id',\n  NAME: 'display_name',\n  SUBSCRIPTION_ID: 'subscription_manager_id',\n  LAST_SEEN: 'last_seen'\n};\n\n/**\n * RHSM response Reporting/Tally DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = RHSM_API_RESPONSE_DATA;\n\n/**\n * ToDo: Clean up params, used by app message component, deprecated graph component, and Tally response selectors.\n * May need to move part of this towards rhsmConstants.js\n */\n/**\n * RHSM response Reporting/Tally DATA types.\n * Schema/map of expected Reporting/Tally DATA response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, INSTANCE_HOURS: string, SOCKETS: string, CLOUD_CORES: string,\n *     HAS_DATA: string, PHYSICAL_SOCKETS: string, PHYSICAL_CORES: string, CLOUD_INSTANCES: string, DATE: string,\n *     CORE_HOURS: string, CLOUD_SOCKETS: string, HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string,\n *     HYPERVISOR_CORES: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORE_HOURS: 'core_hours',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  INSTANCE_HOURS: 'instance_hours',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM product id type values.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string,\n *     RHOSAK: string, RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string,\n *     OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string}}\n */\nconst RHSM_API_PATH_ID_TYPES = {\n  ...rhsmConstants.RHSM_API_PATH_PRODUCT_TYPES\n};\n\n/**\n * RHSM API query/search parameter of GRANULARITY type values.\n * Schema/map of expected query/search parameter granularity types.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_GRANULARITY_TYPES\n};\n\n/**\n * ToDo: Clean up sort params since they're hosts API specific.\n * Hosts is being deprecated in favor of instances API. Instances sort params\n * can be found in /services/rhsm/rhsmConstants.js\n */\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, MEASUREMENT: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_SORT_TYPES = {\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  HARDWARE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_SORT_DIRECTION_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES\n};\n\n/**\n * RHSM API query/search parameter SLA type values.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_QUERY_SLA_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_SLA_TYPES\n};\n\n/**\n * RHSM API query/search parameter UOM type values.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_QUERY_UOM_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_UOM_TYPES\n};\n\n/**\n * RHSM API query/search parameter USAGE type values.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_QUERY_USAGE_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_USAGE_TYPES\n};\n\n/**\n * ToDo: Clean up params, unused.\n */\n/**\n * RHSM API query/search parameter OPTIN type values.\n *\n * @type {{TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_SET_OPTIN_TYPES = {\n  CONDUIT_SYNC: 'enable_conduit_sync',\n  TALLY_REPORT: 'enable_tally_reporting',\n  TALLY_SYNC: 'enable_tally_sync'\n};\n\n/**\n * RHSM API query/search parameter CAPACITY type values.\n *\n * @type {{GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string}}\n */\nconst RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES\n};\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES\n};\n\n/**\n * RHSM API query/search parameter GUESTS INVENTORY type values.\n *\n * @type {{OFFSET: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES\n};\n\n/**\n * RHSM API query/search parameter SUBSCRIPTIONS INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string, SLA: string,\n *     LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES\n};\n\n/**\n * RHSM API query/search parameter values.\n *\n * @type {{GRANULARITY: string, TALLY_SYNC: string, DIRECTION: string, END_DATE: string,\n *     SLA: string, START_DATE: string, LIMIT: string, UOM: string, TALLY_REPORT: string,\n *     USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_TYPES = {\n  ...RHSM_API_QUERY_SET_OPTIN_TYPES,\n  ...RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\n/**\n * RHSM API types.\n *\n * @type {{RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}, RHSM_API_RESPONSE_DATA: string, RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES: {GENERIC: string, OPTIN: string},\n *     RHSM_API_RESPONSE_INVENTORY_DATA: string, RHSM_API_RESPONSE_CAPACITY_DATA: string, RHSM_API_RESPONSE_ERROR_DATA_TYPES: {CODE: string,\n *     DETAIL: string}, RHSM_API_RESPONSE_CAPACITY_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string},\n *     RHSM_API_RESPONSE_META_TYPES: {COUNT: string, TOTAL_INSTANCE_HOURS: string, TOTAL_CORE_HOURS: string},\n *     RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *     RHSM_API_QUERY_SORT_DIRECTION_TYPES: {ASCENDING: string, DESCENDING: string}, RHSM_API_RESPONSE_PRODUCTS_DATA: string,\n *     RHSM_API_QUERY_TYPES: {GRANULARITY: string, TALLY_SYNC: string, DIRECTION: string, END_DATE: string, SLA: string, START_DATE: string,\n *     LIMIT: string, UOM: string, TALLY_REPORT: string, USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string},\n *     RHSM_API_RESPONSE_LINKS: string, RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES: {OFFSET: string, LIMIT: string},\n *     RHSM_API_PATH_ID_TYPES: {RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string, RHOSAK: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string,\n *     RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string},\n *     RHSM_API_QUERY_SET_OPTIN_TYPES: {TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string},\n *     RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_SET_INVENTORY_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string, SLA: string,\n *     LIMIT: string}, RHSM_API_QUERY_SORT_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string,\n *     MEASUREMENT: string, LAST_SEEN: string, NAME: string}, RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES: {HYPERVISOR_SOCKETS: string,\n *     CORES: string, INSTANCE_HOURS: string, SOCKETS: string, CLOUD_CORES: string, HAS_DATA: string, PHYSICAL_SOCKETS: string,\n *     PHYSICAL_CORES: string, CLOUD_INSTANCES: string, DATE: string, CORE_HOURS: string, CLOUD_SOCKETS: string,\n *     HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string, HYPERVISOR_CORES: string}, RHSM_API_QUERY_UOM_TYPES: {CORES: string,\n *     SOCKETS: string}, RHSM_API_RESPONSE_LINKS_TYPES: string, RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES: {SUBSCRIPTION_ID: string,\n *     ID: string, NAME: string, LAST_SEEN: string}, RHSM_API_RESPONSE_ERROR_DATA: string, RHSM_API_RESPONSE_META: string,\n *     RHSM_API_RESPONSE_INVENTORY_DATA_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, SUBSCRIPTION_ID: string,\n *     INVENTORY_ID: string, MEASUREMENT: string, ID: string, GUESTS: string, CLOUD_PROVIDER: string, LAST_SEEN: string, NAME: string},\n *     RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string}}}\n */\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var map = {\n\t\"./authentication/authentication.js\": [\n\t\t67719\n\t],\n\t\"./authentication/authenticationContext.js\": [\n\t\t98944\n\t],\n\t\"./bannerMessages/bannerMessages.js\": [\n\t\t87585,\n\t\t9833,\n\t\t7585\n\t],\n\t\"./bannerMessages/bannerMessagesContext.js\": [\n\t\t31824,\n\t\t9833,\n\t\t1824\n\t],\n\t\"./chart/chart.js\": [\n\t\t60930,\n\t\t3128,\n\t\t5265,\n\t\t930\n\t],\n\t\"./chart/chartAxisLabel.js\": [\n\t\t76395,\n\t\t4314\n\t],\n\t\"./chart/chartContext.js\": [\n\t\t98326,\n\t\t8326\n\t],\n\t\"./chart/chartElements.js\": [\n\t\t54096,\n\t\t3128,\n\t\t5265,\n\t\t4096\n\t],\n\t\"./chart/chartHelpers.js\": [\n\t\t61026,\n\t\t1026\n\t],\n\t\"./chart/chartIcon.js\": [\n\t\t1138\n\t],\n\t\"./chart/chartLegend.js\": [\n\t\t52902,\n\t\t2902\n\t],\n\t\"./chart/chartTooltip.js\": [\n\t\t78213,\n\t\t8213\n\t],\n\t\"./form/checkbox.js\": [\n\t\t34467,\n\t\t4291,\n\t\t7235,\n\t\t2181,\n\t\t1302\n\t],\n\t\"./form/formHelpers.js\": [\n\t\t44044,\n\t\t4044\n\t],\n\t\"./form/formState.js\": [\n\t\t90384,\n\t\t384\n\t],\n\t\"./form/select.js\": [\n\t\t49844,\n\t\t9844\n\t],\n\t\"./form/textInput.js\": [\n\t\t18710,\n\t\t8710\n\t],\n\t\"./graphCard/graphCard.deprecated.js\": [\n\t\t28341,\n\t\t3128,\n\t\t5265,\n\t\t9833,\n\t\t930,\n\t\t8341\n\t],\n\t\"./graphCard/graphCard.js\": [\n\t\t10608,\n\t\t3128,\n\t\t5265,\n\t\t9833,\n\t\t930,\n\t\t1799,\n\t\t608\n\t],\n\t\"./graphCard/graphCardChart.deprecated.js\": [\n\t\t89270,\n\t\t3128,\n\t\t5265,\n\t\t930,\n\t\t9270\n\t],\n\t\"./graphCard/graphCardChart.js\": [\n\t\t91799,\n\t\t3128,\n\t\t5265,\n\t\t9833,\n\t\t930,\n\t\t1799,\n\t\t1339\n\t],\n\t\"./graphCard/graphCardChartLegend.js\": [\n\t\t64418,\n\t\t4418\n\t],\n\t\"./graphCard/graphCardChartTitleTooltip.js\": [\n\t\t99171,\n\t\t939\n\t],\n\t\"./graphCard/graphCardChartTooltip.js\": [\n\t\t44024,\n\t\t4024\n\t],\n\t\"./graphCard/graphCardContext.js\": [\n\t\t25394,\n\t\t5394\n\t],\n\t\"./graphCard/graphCardHelpers.js\": [\n\t\t78139,\n\t\t8139\n\t],\n\t\"./graphCard/graphCardMetric.js\": [\n\t\t49877,\n\t\t3128,\n\t\t5265,\n\t\t9833,\n\t\t930,\n\t\t1799,\n\t\t9877\n\t],\n\t\"./graphCard/graphCardMetricTotals.js\": [\n\t\t29407,\n\t\t9407\n\t],\n\t\"./graphCard/graphCardMetrics.js\": [\n\t\t11014,\n\t\t3128,\n\t\t5265,\n\t\t9833,\n\t\t930,\n\t\t1799,\n\t\t1806\n\t],\n\t\"./i18n/i18n.js\": [\n\t\t83109\n\t],\n\t\"./inventoryCard/inventoryCard.js\": [\n\t\t82195,\n\t\t9833,\n\t\t7780,\n\t\t2195,\n\t\t265\n\t],\n\t\"./inventoryCard/inventoryCardContext.js\": [\n\t\t42896,\n\t\t9833,\n\t\t2896\n\t],\n\t\"./inventoryCard/inventoryCardHelpers.js\": [\n\t\t12243,\n\t\t2243\n\t],\n\t\"./inventoryCard/inventoryList.deprecated.js\": [\n\t\t88191,\n\t\t7780,\n\t\t8191,\n\t\t3769\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptions.js\": [\n\t\t16696,\n\t\t9833,\n\t\t7780,\n\t\t2195,\n\t\t90\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptionsContext.js\": [\n\t\t62881,\n\t\t9833,\n\t\t2881\n\t],\n\t\"./inventoryGuests/guestsList.deprecated.js\": [\n\t\t95473,\n\t\t5473\n\t],\n\t\"./inventoryGuests/inventoryGuests.js\": [\n\t\t15242,\n\t\t9833,\n\t\t5242\n\t],\n\t\"./inventoryGuests/inventoryGuestsContext.js\": [\n\t\t32293,\n\t\t9833,\n\t\t2293\n\t],\n\t\"./inventoryTabs/inventoryTab.js\": [\n\t\t80931,\n\t\t931\n\t],\n\t\"./inventoryTabs/inventoryTabs.js\": [\n\t\t69051,\n\t\t9051\n\t],\n\t\"./loader/loader.js\": [\n\t\t1797\n\t],\n\t\"./messageView/messageView.js\": [\n\t\t79719\n\t],\n\t\"./minHeight/minHeight.js\": [\n\t\t91339,\n\t\t353\n\t],\n\t\"./optinView/optinView.js\": [\n\t\t649,\n\t\t4311\n\t],\n\t\"./pageLayout/pageColumns.js\": [\n\t\t5937\n\t],\n\t\"./pageLayout/pageHeader.js\": [\n\t\t58816\n\t],\n\t\"./pageLayout/pageLayout.js\": [\n\t\t52422\n\t],\n\t\"./pageLayout/pageMessages.js\": [\n\t\t54803\n\t],\n\t\"./pageLayout/pageSection.js\": [\n\t\t99781\n\t],\n\t\"./pageLayout/pageToolbar.js\": [\n\t\t89484\n\t],\n\t\"./pagination/pagination.js\": [\n\t\t68900,\n\t\t8900\n\t],\n\t\"./pagination/paginationHelpers.js\": [\n\t\t65020,\n\t\t5020\n\t],\n\t\"./productView/productView.js\": [\n\t\t29175,\n\t\t3128,\n\t\t5265,\n\t\t9833,\n\t\t930,\n\t\t136,\n\t\t7780,\n\t\t1799,\n\t\t2195,\n\t\t8191,\n\t\t8526,\n\t\t9175,\n\t\t2085\n\t],\n\t\"./productView/productViewContext.js\": [\n\t\t51858,\n\t\t1858\n\t],\n\t\"./productView/productViewMissing.js\": [\n\t\t91233,\n\t\t1233\n\t],\n\t\"./productView/productViewOpenShiftContainer.js\": [\n\t\t44059,\n\t\t3128,\n\t\t5265,\n\t\t9833,\n\t\t930,\n\t\t136,\n\t\t7780,\n\t\t2195,\n\t\t8191,\n\t\t8526,\n\t\t2251\n\t],\n\t\"./productView/productViewOpenShiftDedicated.js\": [\n\t\t84944,\n\t\t3128,\n\t\t5265,\n\t\t9833,\n\t\t930,\n\t\t136,\n\t\t7780,\n\t\t1799,\n\t\t2195,\n\t\t8191,\n\t\t8526,\n\t\t9175,\n\t\t8731\n\t],\n\t\"./router/index.js\": [\n\t\t94976\n\t],\n\t\"./router/redirect.js\": [\n\t\t57304\n\t],\n\t\"./router/router.js\": [\n\t\t27097\n\t],\n\t\"./router/routerContext.js\": [\n\t\t43301\n\t],\n\t\"./router/routerHelpers.js\": [\n\t\t97712\n\t],\n\t\"./table/table.js\": [\n\t\t78697\n\t],\n\t\"./table/tableEmpty.js\": [\n\t\t30817\n\t],\n\t\"./table/tableSkeleton.js\": [\n\t\t62540\n\t],\n\t\"./tabs/tabs.js\": [\n\t\t70031,\n\t\t31\n\t],\n\t\"./toolbar/toolbar.js\": [\n\t\t92227,\n\t\t9833,\n\t\t136,\n\t\t6000\n\t],\n\t\"./toolbar/toolbarContext.js\": [\n\t\t83280,\n\t\t9833,\n\t\t136,\n\t\t3552\n\t],\n\t\"./toolbar/toolbarFieldBillingProvider.js\": [\n\t\t31663,\n\t\t1663\n\t],\n\t\"./toolbar/toolbarFieldDisplayName.js\": [\n\t\t89517,\n\t\t9517\n\t],\n\t\"./toolbar/toolbarFieldGranularity.js\": [\n\t\t2738,\n\t\t2738\n\t],\n\t\"./toolbar/toolbarFieldRangedMonthly.js\": [\n\t\t65876,\n\t\t5876\n\t],\n\t\"./toolbar/toolbarFieldSelectCategory.js\": [\n\t\t70136,\n\t\t9833,\n\t\t136,\n\t\t998\n\t],\n\t\"./toolbar/toolbarFieldSla.js\": [\n\t\t33267,\n\t\t3267\n\t],\n\t\"./toolbar/toolbarFieldUom.js\": [\n\t\t74097,\n\t\t4097\n\t],\n\t\"./toolbar/toolbarFieldUsage.js\": [\n\t\t49928,\n\t\t9928\n\t],\n\t\"./tooltip/tooltip.js\": [\n\t\t3969\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 58908;\nmodule.exports = webpackAsyncContext;"],"names":["module","exports","App","getLocale","useAliasDispatch","useDispatch","useAliasSelector","useSelector","dispatch","locale","user","data","value","platformNotifications","useMount","helpers","NotificationsPortal","I18n","Router","defaultProps","reduxActions","storeHooks","noop","Function","prototype","noopPromise","Promise","resolve","PROD_MODE","process","UI_WINDOW_ID","aggregatedError","errors","message","err","name","window","AggregateError","Error","Array","isArray","isEmulated","browserExpose","obj","options","limit","id","generateId","prefix","Math","ceil","random","isDate","date","Object","toString","call","isPromise","test","noopTranslate","key","components","updatedKey","updatedValue","keys","length","JSON","stringify","updatedComponents","numberDisplay","Number","isNaN","numbro","DEV_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_NOTIFICATIONS","UI_DISABLED_TABLE","UI_DISABLED_TABLE_HOSTS","UI_DISABLED_TABLE_INSTANCES","UI_DISABLED_TABLE_SUBSCRIPTIONS","UI_DISABLED_TOOLBAR","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_LEARN_MORE","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_LOGGER_FILE","UI_NAME","UI_PATH","UI_VERSION","getCurrentDate","moment","toDate","REACT_APP_DEBUG_DEFAULT_DATETIME","setRangedDateTime","subtract","measurement","endOfMeasurement","startDate","startOf","endDate","endOf","currentDateTime","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","rangedYearDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedMonthDateTime","month","currentYear","parseInt","year","keyDateTimeRanges","listDateTimeRanges","startDateUpdated","endDateUpdated","format","dateTime","titleYear","title","titleIndex","isNextYear","_title","toLowerCase","add","translate","context","push","reverse","isCurrent","current","undefined","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","timestampTimeFormats","timeLong","yearTimeLong","timeShort","yearTimeShort","timestampUTCTimeFormats","downloadData","fileName","fileType","reject","document","navigator","URL","blob","Blob","type","msSaveBlob","anchorTag","createElement","href","createObjectURL","style","display","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","error","debugLog","sessionStorage","replace","parse","getItem","Authentication","appName","children","isDisabled","t","useAliasGetAuthorization","useGetAuthorization","pending","authorized","errorCodes","errorStatus","isAuthorized","AuthenticationContext","description","pageTitle","icon","BinocularsIcon","includes","rhsmConstants","Redirect","route","routerHelpers","serviceName","DEFAULT_CONTEXT","React","useAuthContext","useContext","authorizeUser","hideGlobalFilter","initializeChrome","onNavigation","setAppName","useHistory","useAliasHistory","routerHooks","useSelectorsResponse","useAliasSelectorsResponse","useState","unregister","setUnregister","history","selector","auth","fulfilled","responses","event","navId","useUnmount","app","status","useSession","useAliasAuthContext","session","getSize","size","parseFloat","ChartIcon","fill","symbol","props","svgProps","iconProps","fontProps","fontSize","emSvgSize","color","className","width","height","viewBox","role","y","x","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","EyeIcon","EyeSlashIcon","SquareIcon","setIcon","EMPTY_CONTEXT","translateKey","values","emptyContextValue","updatedValues","updatedTranslateKey","filter","map","join","i18next","i18nKey","translateComponent","Component","withTranslation","i18n","displayName","fallbackLng","loadPath","initialized","setInitialized","XHR","use","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","useEffect","e","Loader","skeletonProps","tableProps","variant","SkeletonSize","TableSkeleton","PageLayout","PageHeader","MessageView","PageSection","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","PageColumns","Flex","alignItems","sm","spaceItems","child","FlexItem","grow","productLabel","justifyContent","Button","isInline","component","ExternalLinkAltIcon","iconPosition","target","PageMessages","PageToolbar","padding","default","hash","search","forcePath","isForced","routes","url","baseName","pathName","matchedRoutePath","path","matchedRoute","location","pathJoin","updatedRoutes","setUpdatedRoutes","redirectDefault","setRedirectDefault","activateOnErrorRoute","find","activateOnError","all","item","disabled","View","Route","exact","strict","render","routeProps","routeConfig","URLSearchParams","decodeURIComponent","parsedSearch","Set","param","forEach","v","split","updatedLocation","routeDetail","errorRoute","routeItem","RouterContext","results","redirect","fallback","Switch","to","useRouterContext","useRouteDetail","useAliasRouterContext","platformLandingRedirect","platformModalRedirect","dynamicBaseName","pathname","applicationName","dynamicBasePath","basePath","paths","updatedPath","from","hasLead","generateProductGroups","config","routesConfig","productGroups","pathParameter","productParameter","index","generateRoutes","getErrorRoute","getRouteConfigByPath","basePathDirs","str","configs","allConfigs","configsById","allConfigsById","findConfig","dir","configPath","aliases","configItem","updatedConfigItem","RegExp","decodedDir","decodeURI","firstMatch","getRouteConfig","navRouteItem","returnDefault","routeHref","viewParameter","importView","p","Table","state","isCollapsible","isSortable","sortBy","updatedColumnHeaders","updatedRows","onCollapse","isOpen","fullWidth","cells","expandedContent","setState","onSort","direction","updatedIndex","i","label","column","header","this","setRowData","prevProps","columnHeaders","rows","customizer","valueA","valueB","_isEqualWith","updatedSort","isExpanded","rowObj","parent","cell","settings","columnHeader","sortActive","sortDirection","tempColumnHeader","transforms","sortable","SortByDirection","ariaLabel","borders","isHeader","summary","pfTableProps","emptyTable","TableEmpty","SearchIcon","TableHeader","TableBody","Grid","GridItem","span","renderTable","tableHeading","colCount","colWidth","rowCount","updatedHeader","cellWidth","updatedRowCount","Tooltip","content","isNoWrap","distance","enableFlip","entryDelay","exitDelay","position","TooltipPosition","productGroup","RHSM_API_PATH_ID_TYPES","productId","productDisplay","DISPLAY_TYPES","viewId","query","RHSM_API_QUERY_TYPES","RHSM_API_QUERY_UOM_TYPES","toISOString","graphTallyQuery","inventoryHostsQuery","RHSM_API_QUERY_SORT_TYPES","SORT_DIRECTION_TYPES","inventorySubscriptionsQuery","RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES","initialGraphFilters","chartColorBlueLight","chartColorBlueDark","chartColorCyanLight","chartColorCyanDark","chartColorPurpleLight","chartColorPurpleDark","chartType","initialGuestsFilters","inventoryId","inventory","lastSeen","DateFormat","initialInventoryFilters","numberOfGuests","updatedDisplayName","count","cloudProvider","measurementType","isWrappable","initialInventorySettings","initialSubscriptionsInventoryFilters","SUBSCRIPTIONS_INVENTORY_TYPES","uom","hasInfiniteQuantity","totalCapacity","nextEventDate","initialToolbarFilters","selected","productContextFilterUom","initialOption","isOptional","initialGraphSettings","actionDisplay","displayContent","totalCoreHours","meta","total","average","mantissa","trimMantissa","lowPrecision","toUpperCase","coreHours","toFixed","isStacked","yAxisUseDataSet","instanceHours","RHSM_API_PATH_PRODUCT_TYPES","RHSM_API_QUERY_SET_TYPES","RHSM_API_QUERY_INVENTORY_SORT_TYPES","RHSM_API_PATH_METRIC_TYPES","isStandalone","yAxisChartLabel","isCardTitleDescription","xAxisChartLabel","yAxisTickFormat","tick","INVENTORY_TYPES","provider","tooltip","SUBSCRIPTIONS_INVENTORY_META_TYPES","subscriptionType","initialSecondaryToolbarFilters","rhelConfig","productConfig","isSearchable","openshiftContainerConfig","openshiftMetricsConfig","openshiftDedicatedConfig","rhacsConfig","rhodsConfig","rhosakConfig","satelliteProductConfig","isSetAppNav","useHistoryRRD","pathLocation","historyState","useLocation","useParams","useRouteMatch","apiQueries","parseRhsmQuery","queries","inventoryGuestsQuery","updatedGraphTallyQuery","reduxHelpers","rhsmApiTypes","updatedInventoryGuestsQuery","updatedInventoryHostsQuery","updatedInventorySubscriptionsQuery","toolbarQuery","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","schemas","initialValue","schema","generated","getSingleResponseFromResultArray","updatedResults","payload","response","updatedResultsMessage","firstErrorResponse","_get","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","_isPlainObject","getDateFromResults","getStatusFromResults","setStateProp","prop","initialState","reset","console","warn","singlePromiseDataResponseFromArray","HTTP_STATUS_RANGE","setApiQuery","setNormalizedResponse","parsedResponses","customResponseEntry","customResponseValue","keyPrefix","keyCase","updatedData","generatedSchema","parsedResponse","dataObj","keyCaseType","customEntry","customValue","update","updatedDataObj","generatedData","entries","casedDataObjKey","dataObjKey","dataObjValue","_camelCase","_snakeCase","val","isInteger","generatedPromiseActionReducer","types","action","expandedTypes","subVal","ref","whichType","expandMetaTypes","updatedMeta","fromEntries","baseState","errorMessage","setId","errorResponse","cancelled","getDataFromResults","useSelectors","selectors","equality","shallowEqual","useReactReduxSelector","updatedSelectors","selectorIds","multiSelector","createSelector","listMultiSelectorResponse","undefinedMultiSelectorResponse","_cloneDeep","idMultiSelectorResponse","useAliasSelectors","customResponse","selectorResponse","isSelectorResponseArray","cancelledById","cancelledByList","cancelledDataById","cancelledDataByList","errorByList","errorById","errorDataById","errorDataByList","fulfilledByList","fulfilledById","fulfilledDataById","fulfilledDataByList","pendingByList","responsesById","responsesByList","dataById","dataByList","idList","updatedSelectorResponse","updatedResponse","isById","list","assign","reactReduxHooks","dispatchEvent","store","useSelectorsAllSettledResponse","baseResponse","useSelectorsAnyResponse","keyList","useSelectorsRaceResponse","reactRedux","camelCase","updatedObj","schemaResponse","casing","convert","validate","details","serviceHelpers","callback","func","clearTimer","timeout","timer","_","updatedFunc","clearTimeout","execFunction","race","finally","globalXhrTimeout","globalCancelTokens","globalResponseCache","LruCache","ttl","max","updateAgeOnGet","axiosServiceCall","cancelledMessage","responseCache","xhrTimeout","updatedConfig","cache","cacheResponse","method","responseTransformers","axiosInstance","axios","cacheId","btoa","sort","a","b","localeCompare","exposeCacheId","cancel","cancelTokensId","cancelId","CancelToken","cancelToken","token","cachedResponse","get","adapter","adapterConfig","transform","successTransform","errorTransform","transformers","interceptors","set","emulateCallback","isSuccess","emulatedResponse","Joi","JoiBase","JoiDate","userResponseSchema","object","identity","is_org_admin","boolean","unknown","entitlements","is_entitled","permissionsItem","permission","string","optional","allow","resourceDefinitions","array","permissionsResponseSchema","items","platformSchemas","permissions","platformTransformers","platformConstants","isAdmin","isEntitled","rbacConfig","definitions","resource","operation","resources","RESOURCE_TYPES","OPERATION_TYPES","resourcePermissions","res","op","getUser","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","isHidden","setAppNav","secondaryNav","appNavClick","parentId","platformServices","getUserPermissions","updatedAppName","platformMethod","USER_PERMISSION_TYPES","REACT_APP_DEBUG_PERMISSION_APP_ONE","REACT_APP_DEBUG_PERMISSION_APP_TWO","allPermissions","userPermissions","flat","on","identifyApp","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","platformTypes","serviceConfig","passedConfig","headers","serviceCall","errorItem","code","detail","errorResponseSchema","linksSchema","metaResponseSchema","number","integer","product","valid","guestsMetaSchema","guestsItem","inventory_id","display_name","subscription_manager_id","last_seen","utc","guestsResponseSchema","links","instancesMetaSchema","measurements","instancesItem","billing_provider","billing_account_id","instancesResponseSchema","subscriptionsMetaSchema","subscription_type","subscriptionsItem","has_infinite_quantity","next_event_date","product_name","quantity","service_level","total_capacity","lowercase","subscriptionsResponseSchema","tallyItem","has_data","tallyMetaSchema","has_cloudigrade_data","has_cloudigrade_mismatch","metric_id","total_monthly","tallyResponseSchema","rhsmSchemas","guests","instances","subscriptions","tally","rhsmTransformers","metaMeasurements","INSTANCES_META_TYPES","INSTANCES_DATA_TYPES","subscriptionManagerId","currentDate","currentDateStr","futureDateCount","TALLY_DATA_TYPES","hasData","updatedDate","isCurrentDate","isFutureDate","diff","TALLY_META_TYPES","cloudigradeHasMismatch","metricId","totalMonthlyDate","totalMonthlyHasData","totalMonthlyValue","rhsmServices","getApiVersion","getGraphCapacity","params","getGraphReports","getGraphTally","updatedId","getHostsInventory","getHostsInventoryGuests","getInstancesInventory","getSubscriptionsInventory","rhsmActions","getGraphReportsCapacity","rhsmTypes","notifications","idMetric","multiMetric","multiDispatch","metric","getMessageReports","userServices","defaultLang","Cookies","cookieLang","LocaleCode","deleteAccountOptIn","getAccountOptIn","updateAccountOptIn","userActions","userTypes","rejected","dismissable","autoDismiss","actions","platform","rhsm","createSelectorCreator","defaultMemoize","_isEqual","createDeepEqualSelector","updatedSession","admin","entitled","responsePermissions","userSessionSelectors","userSession","makeUserSession","hostsGuests","responseData","metaId","updatedResponseData","listData","Date","updatedListData","guestsListSelectors","guestsList","makeGuestsList","selectorCache","allowStale","graph","reportCapacity","view","metaQuery","graphData","responseMetaQuery","report","capacity","reportData","reportMeta","capacityData","graphDataKey","tallySchema","capacitySchema","customReportValue","presetData","hasCloudigradeData","hasCloudigradeMismatch","customCapacityValue","hasInfinite","generateGraphData","graphDataObj","graphDataObjKey","generatedY","casedGraphDataObjKey","updatedItem","updatedReportMeta","graphCardSelectors","graphCard","makeGraphCard","hostsInventory","itemCount","listMeta","customInventoryValue","updatedListMeta","reduxSelectors","inventoryList","makeInventoryList","userSelectors","legend","graphReducer","graphTypes","instancesInventory","subscriptionsInventory","tabs","inventoryReducer","inventoryTypes","messagesReducer","filters","toolbarReducer","reduxTypes","activeFilters","currentFilter","optin","userReducer","appTypes","actionStatus","viewReducer","updateResetQueries","queryIds","updatedQuery","queryId","productQuery","updateClearQueries","updateClearGuestQuery","clearFilters","reducers","messages","toolbar","reduxReducers","combineReducers","recordAction","parsedItems","slice","getActions","priorItem","updatedAction","removeUserIdentity","platformApiTypes","updatedPayload","sanitizeData","sanitizeActionHeaders","actionObj","timestamp","now","setItem","browser","userAgent","toLocaleString","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","next","httpStatus","payloadConfig","range","floor","statusMiddleware","promiseMiddleware","actionRecordMiddleware","version","notificationsMiddleware","createStore","applyMiddleware","STATUS_4XX","STATUS_5XX","SET_GRAPH_LEGEND","SET_INVENTORY_TAB","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_GLOBAL_FILTER_HIDE","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","PLATFORM_USER_AUTH","queryTypes","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST","SET_QUERY_RESET_INVENTORY_LIST","SET_QUERY_RHSM_TYPES","SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_LOCALE","USER_LOGOUT","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_GRAPH_TALLY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","GET_INSTANCES_INVENTORY_RHSM","GET_MESSAGE_REPORTS_RHSM","GET_SUBSCRIPTIONS_INVENTORY_RHSM","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES","ALL","PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES","READ","WRITE","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES","SUBSCRIPTIONS","RHACS","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","RHODS","RHOSAK","OPENSHIFT","OPENSHIFT_METRICS","OPENSHIFT_DEDICATED_METRICS","SATELLITE","SATELLITE_CAPSULE","SATELLITE_SERVER","CORES","SOCKETS","CORE_SECONDS","INSTANCE_HOURS","STORAGE_GIBIBYTES","STORAGE_GIBIBYTE_MONTHS","TRANSFER_GIBIBYTES","RHSM_API_RESPONSE_META_TYPES","COUNT","PRODUCT","RHSM_API_RESPONSE_INSTANCES_DATA_TYPES","BILLING_PROVIDER","BILLING_ACCOUNT_ID","DISPLAY_NAME","INVENTORY_ID","LAST_SEEN","MEASUREMENTS","NUMBER_OF_GUESTS","SUBSCRIPTION_MANAGER_ID","RHSM_API_RESPONSE_INSTANCES_META_TYPES","RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES","HAS_INFINITE_QUANTITY","NEXT_EVENT_DATE","PRODUCT_NAME","QUANTITY","SERVICE_LEVEL","TOTAL_CAPACITY","UOM","RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES","SUBSCRIPTION_TYPE","RHSM_API_RESPONSE_TALLY_DATA_TYPES","DATE","VALUE","HAS_DATA","RHSM_API_RESPONSE_TALLY_META_TYPES","HAS_CLOUDIGRADE_DATA","HAS_CLOUDIGRADE_MISMATCH","METRIC_ID","TOTAL_MONTHLY","RHSM_API_RESPONSE_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES","RED_HAT","AWS","RHSM_API_RESPONSE_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_RESPONSE_UOM_TYPES","RHSM_API_RESPONSE_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_GRANULARITY_TYPES","NAME","RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","NEXT_EVENT_TYPE","SKU","USAGE","RHSM_API_QUERY_BILLING_PROVIDER_TYPES","RHSM_API_QUERY_SLA_TYPES","RHSM_API_QUERY_USAGE_TYPES","RHSM_API_QUERY_SET_INVENTORY_TYPES","DIRECTION","END_DATE","LIMIT","OFFSET","SLA","SORT","START_DATE","RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES","GRANULARITY","RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES","DUAL_AXES","HOURLY","LEGACY","RHSM_API_RESPONSE_DATA","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_ERRORS","RHSM_API_RESPONSE_ERRORS_TYPES","CODE","RHSM_API_RESPONSE_ERRORS_CODE_TYPES","GENERIC","OPTIN","RHSM_API_RESPONSE_SUBSCRIPTION_TYPES","ANNUAL","ON_DEMAND","RHSM_API_RESPONSE_ERROR_DATA","RHSM_API_RESPONSE_ERROR_DATA_TYPES","RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES","CORE_HOURS","HARDWARE","MEASUREMENT","RHSM_API_QUERY_SORT_DIRECTION_TYPES","RHSM_API_QUERY_SET_OPTIN_TYPES","CONDUIT_SYNC","TALLY_REPORT","TALLY_SYNC","RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES","RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES","RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES","RHSM_API_RESPONSE_LINKS","RHSM_API_RESPONSE_LINKS_TYPES","FIRST","LAST","PREVIOUS","NEXT","TOTAL_CORE_HOURS","TOTAL_INSTANCE_HOURS","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","CLOUD_CORES","CLOUD_INSTANCES","CLOUD_SOCKETS","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_INVENTORY_DATA","RHSM_API_RESPONSE_INVENTORY_DATA_TYPES","CLOUD_PROVIDER","GUESTS","ID","SUBSCRIPTION_ID","RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","webpackContext","req","webpackContextResolve","__webpack_require__","o","webpackAsyncContext","then","ids"],"sourceRoot":""}
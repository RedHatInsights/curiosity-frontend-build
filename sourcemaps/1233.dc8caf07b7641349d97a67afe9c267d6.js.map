{"version":3,"file":"js/1233.1646148110691.a46df40332bf82911eb4.js","mappings":"8RA+BMA,EAAqB,SAAC,GAAkE,IAd5F,EAAQC,EAASC,EAcWC,EAAgE,EAAhEA,0BAA2BC,EAAqC,EAArCA,EACjDC,GAAUC,EAD4E,EAAlCC,YAC1B,CAAEC,aAAa,IACzCC,GAhBER,GAAR,EAAgCS,EAAAA,cAAAA,wBAAxBT,QAASC,EAAjB,EAAiBA,WACTD,EAAQU,QAAUV,GAAYC,EAAWU,QAAO,mBAAuC,IAAvC,EAAGC,kBAiB3DC,EAAAA,EAAAA,IAAS,WACHL,EAAkBE,QAAUR,GAC9BE,EAAQU,KAAKN,EAAkB,GAAGO,SAWtC,IAAMC,EAAa,SAAAC,GAAE,OAAIb,EAAQU,KAAKG,IAEtC,OACE,kBAAC,EAAAC,WAAD,CAAYC,UAAU,0BACpB,kBAAC,EAAAC,WAAD,CAAYC,aAAa,WAAWlB,EAAE,uBAAwB,CAAEmB,QAASC,EAAAA,GAAAA,mBACzE,kBAAC,EAAAC,YAAD,CAAaC,UAAQ,GACnB,kBAAC,EAAAC,QAAD,CAASC,WAAS,GACfnB,EAAkBoB,KAAI,SAAAC,GAAO,eAC5B,kBAAC,EAAAC,KAAD,CAAMC,IAAG,0BAAqBF,EAAQZ,IAAMe,aAAW,EAACC,QAAS,kBAAMjB,EAAWa,EAAQZ,MACxF,kBAAC,EAAAiB,UAAD,KACE,kBAAC,EAAAC,MAAD,CAAOC,aAAa,KAAKC,KAAK,MAC3BlC,EAAE,uBAAwB,CACzBmB,QAASC,EAAAA,GAAAA,gBACTe,QACGC,MAAMC,QAAQX,EAAQY,iBAAtB,UAAwCZ,EAAQY,qBAAhD,aAAwC,EAAwB,KAAOZ,EAAQY,kBAIxF,kBAAC,EAAAC,SAAD,CAAUvB,UAAU,4CACjBhB,EAAE,6BAA8B,CAC/BmB,QAASC,EAAAA,GAAAA,gBACTe,QACGC,MAAMC,QAAQX,EAAQc,oBAAtB,UAA2Cd,EAAQc,wBAAnD,aAA2C,EAA2B,KACvEd,EAAQc,oBAGd,kBAAC,EAAAC,WAAD,KACE,kBAAC,EAAAC,OAAD,CACEC,QAAQ,OACRC,UAAQ,EACRd,QAAS,kBAAMjB,EAAWa,EAAQZ,KAClC+B,KAAM,kBAAC,EAAAC,eAAD,MACNC,aAAa,SALf,iBAkChBnD,EAAmBoD,aAAe,CAChCjD,0BAA2B,EAC3BC,EAAGiD,EAAAA,UACH9C,WAAY+C,EAAAA,GAAAA","sources":["webpack:///./src/components/productView/productViewMissing.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, CardBody, CardFooter, CardTitle, Gallery, Title, PageSection } from '@patternfly/react-core';\nimport { ArrowRightIcon } from '@patternfly/react-icons';\nimport { useMount } from 'react-use';\nimport { PageLayout, PageHeader } from '../pageLayout/pageLayout';\nimport { routerHelpers } from '../router';\nimport { routerHooks } from '../../hooks/useRouter';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Return a list of available products.\n *\n * @returns {Array}\n */\nconst filterAvailableProducts = () => {\n  const { configs, allConfigs } = routerHelpers.getRouteConfigByPath();\n  return (configs.length && configs) || allConfigs.filter(({ isSearchable }) => isSearchable === true);\n};\n\n/**\n * Render a missing product view.\n *\n * @fires onNavigate\n * @param {object} props\n * @param {number} props.availableProductsRedirect\n * @param {Function} props.t\n * @param {Function} props.useHistory\n * @returns {Node}\n */\nconst ProductViewMissing = ({ availableProductsRedirect, t, useHistory: useAliasHistory }) => {\n  const history = useAliasHistory({ isSetAppNav: true });\n  const availableProducts = filterAvailableProducts();\n\n  useMount(() => {\n    if (availableProducts.length <= availableProductsRedirect) {\n      history.push(availableProducts[0].path);\n    }\n  });\n\n  /**\n   * On click, update history.\n   *\n   * @event onNavigate\n   * @param {string} id\n   * @returns {void}\n   */\n  const onNavigate = id => history.push(id);\n\n  return (\n    <PageLayout className=\"curiosity-missing-view\">\n      <PageHeader productLabel=\"missing\">{t(`curiosity-view.title`, { appName: helpers.UI_DISPLAY_NAME })}</PageHeader>\n      <PageSection isFilled>\n        <Gallery hasGutter>\n          {availableProducts.map(product => (\n            <Card key={`missingViewCard-${product.id}`} isHoverable onClick={() => onNavigate(product.id)}>\n              <CardTitle>\n                <Title headingLevel=\"h2\" size=\"lg\">\n                  {t('curiosity-view.title', {\n                    appName: helpers.UI_DISPLAY_NAME,\n                    context:\n                      (Array.isArray(product.pathParameter) && product.pathParameter?.[0]) || product.pathParameter\n                  })}\n                </Title>\n              </CardTitle>\n              <CardBody className=\"curiosity-missing-view__card-description\">\n                {t('curiosity-view.description', {\n                  appName: helpers.UI_DISPLAY_NAME,\n                  context:\n                    (Array.isArray(product.productParameter) && product.productParameter?.[0]) ||\n                    product.productParameter\n                })}\n              </CardBody>\n              <CardFooter>\n                <Button\n                  variant=\"link\"\n                  isInline\n                  onClick={() => onNavigate(product.id)}\n                  icon={<ArrowRightIcon />}\n                  iconPosition=\"right\"\n                >\n                  Open\n                </Button>\n              </CardFooter>\n            </Card>\n          ))}\n        </Gallery>\n      </PageSection>\n    </PageLayout>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useHistory: Function, availableProductsRedirect: number, t: Function}}\n */\nProductViewMissing.propTypes = {\n  availableProductsRedirect: PropTypes.number,\n  t: PropTypes.func,\n  useHistory: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useHistory: Function, availableProductsRedirect: number, t: translate}}\n */\nProductViewMissing.defaultProps = {\n  availableProductsRedirect: 4,\n  t: translate,\n  useHistory: routerHooks.useHistory\n};\n\nexport { ProductViewMissing as default, ProductViewMissing };\n"],"names":["ProductViewMissing","configs","allConfigs","availableProductsRedirect","t","history","useAliasHistory","useHistory","isSetAppNav","availableProducts","routerHelpers","length","filter","isSearchable","useMount","push","path","onNavigate","id","PageLayout","className","PageHeader","productLabel","appName","helpers","PageSection","isFilled","Gallery","hasGutter","map","product","Card","key","isHoverable","onClick","CardTitle","Title","headingLevel","size","context","Array","isArray","pathParameter","CardBody","productParameter","CardFooter","Button","variant","isInline","icon","ArrowRightIcon","iconPosition","defaultProps","translate","routerHooks"],"sourceRoot":""}
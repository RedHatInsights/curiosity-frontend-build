{"version":3,"file":"js/9407.1669670579179.11b1bbfe0e6f5132d371.js","mappings":"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","sources":["webpack:///./src/components/graphCard/graphCardContext.js","webpack:///./src/components/graphCard/graphCardMetricTotals.js","webpack:///./src/components/minHeight/minHeight.js","webpack:///./node_modules/fast-shallow-equal/index.js","webpack:///./node_modules/react-use/esm/useCustomCompareEffect.js","webpack:///./node_modules/react-use/esm/useShallowCompareEffect.js"],"sourcesContent":["import React, { useContext } from 'react';\nimport { useShallowCompareEffect } from 'react-use';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { useProduct, useProductGraphTallyQuery } from '../productView/productViewContext';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Chart context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{ settings: { isStandalone: false, metrics: [], metric: undefined } }, helpers.noop];\n\nconst GraphCardContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated graph card context.\n *\n * @returns {React.Context<{}>}\n */\nconst useGraphCardContext = () => useContext(GraphCardContext);\n\n/**\n * Transform multiple metrics from store for chart/graph consumption.\n *\n * @param {object} options\n * @param {Function} options.useGraphCardContext\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: {}, pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, dataSets: unknown[], message: null, error: boolean}}\n */\nconst useMetricsSelector = ({\n  useGraphCardContext: useAliasGraphCardContext = useGraphCardContext,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsAllSettledResponse\n} = {}) => {\n  const { settings = {} } = useAliasGraphCardContext();\n  const { metrics = [] } = settings;\n\n  const {\n    error,\n    fulfilled,\n    pending,\n    data = [],\n    ...response\n  } = useAliasSelectorsResponse(\n    metrics.map(\n      ({ id: metricId, isCapacity }) =>\n        ({ graph }) =>\n          isCapacity ? graph.capacity?.[metricId] : graph.tally?.[metricId]\n    )\n  );\n\n  /**\n   * Apply graph config settings to metric data.\n   */\n  const dataById = {};\n  const dataByList = data?.map((metricData, index) => {\n    const updatedMetricData = {\n      ...metrics[index],\n      ...metricData\n    };\n    dataById[metrics[index].id] = updatedMetricData;\n    return updatedMetricData;\n  });\n\n  return {\n    ...response,\n    data: dataById,\n    dataSets: dataByList,\n    error,\n    fulfilled,\n    pending\n  };\n};\n\n/**\n * Get graph metrics from Tally or Capacity.\n *\n * @param {object} params\n * @param {Function} params.getGraphMetrics\n * @param {Function} params.useDispatch\n * @param {Function} params.useGraphCardContext\n * @param {Function} params.useMetricsSelector\n * @param {Function} params.useProduct\n * @param {Function} params.useProductGraphTallyQuery\n * @returns {{data: {}, pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, dataSets: *[], message: null, error: boolean}}\n */\nconst useGetMetrics = ({\n  getGraphMetrics = reduxActions.rhsm.getGraphMetrics,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useGraphCardContext: useAliasGraphCardContext = useGraphCardContext,\n  useMetricsSelector: useAliasMetricsSelector = useMetricsSelector,\n  useProduct: useAliasProduct = useProduct,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery = useProductGraphTallyQuery\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductGraphTallyQuery();\n  const dispatch = useAliasDispatch();\n  const { settings = {} } = useAliasGraphCardContext();\n  const { metrics = [] } = settings;\n\n  const response = useAliasMetricsSelector();\n\n  useShallowCompareEffect(() => {\n    const updatedMetrics = metrics.map(({ metric: metricId, isCapacity, query: metricQuery }) => ({\n      id: productId,\n      metric: metricId,\n      isCapacity,\n      query: metricQuery\n    }));\n    getGraphMetrics(updatedMetrics, query)(dispatch);\n  }, [dispatch, getGraphMetrics, metrics, productId, query]);\n\n  return response;\n};\n\nconst context = {\n  GraphCardContext,\n  DEFAULT_CONTEXT,\n  useGetMetrics,\n  useGraphCardContext,\n  useMetricsSelector\n};\n\nexport {\n  context as default,\n  context,\n  GraphCardContext,\n  DEFAULT_CONTEXT,\n  useGetMetrics,\n  useGraphCardContext,\n  useMetricsSelector\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardFooter, CardTitle, Flex, FlexItem } from '@patternfly/react-core';\nimport moment from 'moment';\nimport _camelCase from 'lodash/camelCase';\nimport { useProductGraphTallyQuery } from '../productView/productViewContext';\nimport { useMetricsSelector } from './graphCardContext';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { Loader, SkeletonSize } from '../loader/loader';\nimport { dateHelpers, helpers } from '../../common';\nimport { toolbarFieldOptions } from '../toolbar/toolbarFieldRangedMonthly';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Display totals for a single metric.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {Function} props.t\n * @param {Function} props.useMetricsSelector\n * @param {Function} props.useProductGraphTallyQuery\n * @returns {Node}\n */\nconst GraphCardMetricTotals = ({\n  children,\n  t,\n  useMetricsSelector: useAliasMetricsSelector,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery\n}) => {\n  const { [RHSM_API_QUERY_SET_TYPES.START_DATE]: startDate } = useAliasProductGraphTallyQuery();\n  const { pending, error, fulfilled, dataSets = [] } = useAliasMetricsSelector();\n  const { data = [], id, metric: metricId, meta = {} } = dataSets[0] || {};\n  const { date: lastDate, hasData: lastHasData, y: lastValue } = data[data.length - 1] || {};\n  const {\n    date: currentDate,\n    hasData: currentHasData,\n    y: currentValue\n  } = data.find(({ isCurrentDate }) => isCurrentDate === true) || {};\n\n  const { totalMonthlyDate: monthlyDate, totalMonthlyHasData: monthlyHasData, totalMonthlyValue: monthlyValue } = meta;\n\n  const { title: selectedMonth, isCurrent } =\n    toolbarFieldOptions.find(\n      option => option.title === startDate || option.value.startDate.toISOString() === startDate\n    ) || {};\n\n  const dailyDate = isCurrent ? currentDate : lastDate;\n  const dailyHasData = isCurrent ? currentHasData : lastHasData;\n  const dailyValue = isCurrent ? currentValue : lastValue;\n\n  return (\n    <Flex data-test={`graphMetricTotals-${_camelCase(metricId)}`} className=\"curiosity-usage-graph__totals\">\n      <Flex flex={{ default: 'flex_1' }} direction={{ default: 'column' }} alignSelf={{ default: 'alignSelfStretch' }}>\n        <FlexItem className=\"curiosity-usage-graph__totals-column\">\n          <Card\n            data-test=\"graphDailyTotalCard\"\n            className={`curiosity-usage-graph__totals-column-card ${(error && 'blur') || ''}`}\n          >\n            <CardTitle>\n              {t('curiosity-graph.cardHeadingMetric', {\n                context: ['dailyTotal', id],\n                month: selectedMonth\n              })}\n            </CardTitle>\n            <MinHeight key=\"currentBody\">\n              <CardBody>\n                <div>\n                  {pending && <Loader variant=\"skeleton\" skeletonProps={{ size: SkeletonSize.lg }} />}\n                  {fulfilled &&\n                    t(\n                      'curiosity-graph.cardBodyMetric',\n                      {\n                        context: ['total', dailyHasData && id],\n                        total: helpers\n                          .numberDisplay(dailyValue)\n                          ?.format({\n                            average: true,\n                            mantissa: 5,\n                            trimMantissa: true,\n                            lowPrecision: false\n                          })\n                          ?.toUpperCase()\n                      },\n                      [<strong title={dailyValue} aria-label={dailyValue} />]\n                    )}\n                </div>\n              </CardBody>\n            </MinHeight>\n            <MinHeight key=\"currentFooter\">\n              <CardFooter>\n                <div className={(!dailyHasData && 'hidden') || ''}>\n                  {fulfilled &&\n                    dailyDate &&\n                    t('curiosity-graph.cardFooterMetric', {\n                      date: moment.utc(dailyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort)\n                    })}\n                </div>\n              </CardFooter>\n            </MinHeight>\n          </Card>\n          <Card\n            data-test=\"graphMonthlyTotalCard\"\n            className={`curiosity-usage-graph__totals-column-card ${(error && 'blur') || ''}`}\n          >\n            <CardTitle>\n              {t('curiosity-graph.cardHeadingMetric', {\n                context: ['monthlyTotal', id],\n                month: selectedMonth\n              })}\n            </CardTitle>\n            <MinHeight key=\"totalMonthlyBody\">\n              <CardBody>\n                <div>\n                  {pending && <Loader variant=\"skeleton\" skeletonProps={{ size: SkeletonSize.lg }} />}\n                  {fulfilled &&\n                    t(\n                      'curiosity-graph.cardBodyMetric',\n                      {\n                        context: ['total', monthlyHasData && id],\n                        total: helpers\n                          .numberDisplay(monthlyValue)\n                          ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: false })\n                          ?.toUpperCase()\n                      },\n                      [<strong title={monthlyValue} aria-label={monthlyValue} />]\n                    )}\n                </div>\n              </CardBody>\n            </MinHeight>\n            <MinHeight key=\"totalMonthlyFooter\">\n              <CardFooter>\n                <div className={(!monthlyHasData && 'hidden') || ''}>\n                  {fulfilled &&\n                    monthlyDate &&\n                    t('curiosity-graph.cardFooterMetric', {\n                      date: moment.utc(monthlyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort)\n                    })}\n                </div>\n              </CardFooter>\n            </MinHeight>\n          </Card>\n        </FlexItem>\n      </Flex>\n      <Flex flex={{ default: 'flex_3' }} direction={{ default: 'column' }} alignSelf={{ default: 'alignSelfStretch' }}>\n        <FlexItem className=\"curiosity-usage-graph__totals-graph-column\">{children}</FlexItem>\n      </Flex>\n    </Flex>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProductGraphTallyQuery: Function, t: Function, children: Node, useMetricsSelector: Function}}\n */\nGraphCardMetricTotals.propTypes = {\n  children: PropTypes.node,\n  t: PropTypes.func,\n  useMetricsSelector: PropTypes.func,\n  useProductGraphTallyQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProductGraphTallyQuery: Function, t: Function, children: Node, useMetricsSelector: Function}}\n */\nGraphCardMetricTotals.defaultProps = {\n  children: null,\n  t: translate,\n  useMetricsSelector,\n  useProductGraphTallyQuery\n};\n\nexport { GraphCardMetricTotals as default, GraphCardMetricTotals };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","var keyList = Object.keys;\n\nexports.equal = function equal (a, b) {\n  if (a === b) return true;\n  if (!(a instanceof Object) || !(b instanceof Object)) return false;\n\n  var keys = keyList(a);\n  var length = keys.length;\n\n  for (var i = 0; i < length; i++)\n    if (!(keys[i] in b)) return false;\n\n  for (var i = 0; i < length; i++)\n    if (a[keys[i]] !== b[keys[i]]) return false;\n\n  return length === keyList(b).length;\n};\n","import { useEffect, useRef } from 'react';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useCustomCompareEffect = function (effect, deps, depsEqual) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useCustomCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useCustomCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n        if (typeof depsEqual !== 'function') {\n            console.warn('`useCustomCompareEffect` should be used with depsEqual callback for comparing deps list');\n        }\n    }\n    var ref = useRef(undefined);\n    if (!ref.current || !depsEqual(deps, ref.current)) {\n        ref.current = deps;\n    }\n    useEffect(effect, ref.current);\n};\nexport default useCustomCompareEffect;\n","import { equal as isShallowEqual } from 'fast-shallow-equal';\nimport useCustomCompareEffect from './useCustomCompareEffect';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar shallowEqualDepsList = function (prevDeps, nextDeps) {\n    return prevDeps.every(function (dep, index) { return isShallowEqual(dep, nextDeps[index]); });\n};\nvar useShallowCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useShallowCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useShallowCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, shallowEqualDepsList);\n};\nexport default useShallowCompareEffect;\n"],"names":["DEFAULT_CONTEXT","settings","isStandalone","metrics","metric","undefined","helpers","GraphCardContext","React","useGraphCardContext","useContext","useMetricsSelector","useAliasGraphCardContext","useSelectorsResponse","useAliasSelectorsResponse","storeHooks","map","metricId","id","isCapacity","graph","capacity","tally","error","fulfilled","pending","data","response","dataById","dataByList","metricData","index","updatedMetricData","dataSets","useGetMetrics","getGraphMetrics","reduxActions","useDispatch","useAliasDispatch","useAliasMetricsSelector","useProduct","useAliasProduct","useProductGraphTallyQuery","useAliasProductGraphTallyQuery","productId","query","dispatch","useShallowCompareEffect","updatedMetrics","metricQuery","context","GraphCardMetricTotals","children","t","startDate","RHSM_API_QUERY_SET_TYPES","meta","length","lastDate","date","lastHasData","hasData","lastValue","y","find","isCurrentDate","currentDate","currentHasData","currentValue","monthlyDate","totalMonthlyDate","monthlyHasData","totalMonthlyHasData","monthlyValue","totalMonthlyValue","toolbarFieldOptions","option","title","value","toISOString","selectedMonth","isCurrent","dailyDate","dailyHasData","dailyValue","Flex","_camelCase","className","flex","default","direction","alignSelf","FlexItem","Card","CardTitle","month","MinHeight","key","CardBody","Loader","variant","skeletonProps","size","SkeletonSize","total","format","average","mantissa","trimMantissa","lowPrecision","toUpperCase","CardFooter","moment","dateHelpers","defaultProps","translate","containerRef","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","props","clientWidth","current","setMinHeight","this","window","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","ref","keyList","Object","keys","exports","a","b","i","effect","deps","depsEqual","useRef","useEffect","shallowEqualDepsList","prevDeps","nextDeps","every","dep"],"sourceRoot":""}
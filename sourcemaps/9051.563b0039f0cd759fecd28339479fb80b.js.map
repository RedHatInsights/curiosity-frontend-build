{"version":3,"file":"js/9051.1657553047131.3faa5c334d74fde1542b.js","mappings":"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","sources":["webpack:///./src/components/inventoryTabs/inventoryTab.js","webpack:///./src/components/inventoryTabs/inventoryTabs.js","webpack:///./src/components/tabs/tabs.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * A tab pass-through component for passing props to InventoryTabs.\n *\n * @param {object} props\n * @param {boolean} props.active\n * @param {React.ReactNode} props.children\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\n// eslint-disable-next-line no-unused-vars\nconst InventoryTab = ({ active, children, title }) => children;\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nInventoryTab.propTypes = {\n  children: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  title: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nInventoryTab.defaultProps = {\n  active: false\n};\n\nexport { InventoryTab as default, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { Tabs } from '../tabs/tabs';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { InventoryTab } from './inventoryTab';\n\n/**\n * A system inventory tabs component.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass InventoryTabs extends React.Component {\n  /**\n   * On tab update state.\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {string} params.index tab index\n   */\n  onTab = ({ index }) => {\n    const { productId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.inventory.SET_INVENTORY_TAB,\n      tabs: {\n        [productId]: index\n      }\n    });\n  };\n\n  /**\n   * Render inventory tabs using Inventory tab passed props only. A parallel outcome can be\n   * achieved by passing an array of objects through a prop.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { activeTab, children, defaultActiveTab, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const updatedChildren = React.Children.toArray(children).map((child, index) => {\n      const { props = {} } = child;\n\n      return {\n        active: props.active || false,\n        content: props.children || child,\n        title: props.title || t('curiosity-inventory.tabSubHeading', { count: index })\n      };\n    });\n\n    return (\n      <React.Fragment>\n        <Title headingLevel=\"h2\" className=\"sr-only\">\n          {t('curiosity-inventory.tabHeading', { count: updatedChildren.length })}\n        </Title>\n        <Tabs activeTab={activeTab} defaultActiveTab={defaultActiveTab} onTab={this.onTab} tabs={updatedChildren} />\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, t: Function, children: Node, defaultActiveTab: number, isDisabled: boolean,\n *     activeTab: number}}\n */\nInventoryTabs.propTypes = {\n  activeTab: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  defaultActiveTab: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.defaultProps = {\n  activeTab: 0,\n  defaultActiveTab: 0,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  t: translate\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst mapStateToProps = ({ inventory }, { productId }) => ({ activeTab: inventory.tabs?.[productId] });\n\nconst ConnectedInventoryTabs = connect(mapStateToProps)(InventoryTabs);\n\nexport { ConnectedInventoryTabs as default, ConnectedInventoryTabs, InventoryTabs, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs as PfTabs, Tab, TabTitleText, Grid, GridItem } from '@patternfly/react-core';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: PF tabs misinterprets \"isElementInView\" when tab title nodes are loaded dynamically\n * It appears the use of isElementInView within PF tabs is trying to be predicative in using\n * \"getBoundingClientRect\" but produces questionable results in scenarios where content is\n * async created. isElementInView assumes some form of the content will always be there\n * instead of scenarios where someone tries to dynamically apply components. It may be good to\n * review using a window.setTimeout(() => handleScrollButtons()) in componentDidMount.\n *\n * Our temporary solution is to simply hide the buttons with a manual set flag affecting the\n * CSS class. This will most likely cause long-term issues.\n */\n/**\n * ToDo: Insights frontend components uses a custom tabs layout, investigate related CSS classes\n * Originally we applied the CSS classes, but they appeared to provide nothing. Since Insights\n * rolled its own tabs we're hesitant to apply said classes without understanding what they provide.\n */\n/**\n * A set of tabs.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass Tabs extends React.Component {\n  state = {\n    updatedActiveTab: null,\n    updatedTabs: null\n  };\n\n  componentDidMount() {\n    const { updatedTabs } = this.state;\n\n    if (updatedTabs === null) {\n      this.setTabData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tabs } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (!_isEqualWith(prevProps.tabs, tabs, customizer)) {\n      this.setTabData();\n    }\n  }\n\n  /**\n   * On tab selected\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {number} params.index\n   */\n  onTab = ({ index }) => {\n    const { onTab } = this.props;\n\n    this.setState(\n      {\n        updatedActiveTab: index\n      },\n      () => onTab({ index })\n    );\n  };\n\n  /**\n   * Convert tab objects into the required PF Tab format.\n   */\n  setTabData() {\n    const { activeTab, defaultActiveTab, tabs } = this.props;\n    let updatedActiveTab = defaultActiveTab;\n\n    const updatedTabs = tabs.map(({ active, content, title }, index) => {\n      updatedActiveTab = active ? index : updatedActiveTab;\n\n      return (\n        <Tab key={title} eventKey={index} title={<TabTitleText>{title}</TabTitleText>}>\n          {content}\n        </Tab>\n      );\n    });\n\n    if (typeof activeTab === 'number') {\n      updatedActiveTab = activeTab;\n    }\n\n    this.setState({\n      updatedActiveTab,\n      updatedTabs\n    });\n  }\n\n  /**\n   * Apply props to tabs.\n   *\n   * @returns {Node}\n   */\n  renderTabs() {\n    const { updatedActiveTab, updatedTabs } = this.state;\n    const { className, hasOverflowScroll } = this.props;\n\n    return (\n      <PfTabs\n        className={`curiosity-tabs${(!hasOverflowScroll && '__no-scroll') || ''} ${className || ''}`}\n        activeKey={updatedActiveTab}\n        onSelect={(event, index) => this.onTab({ event, index })}\n        mountOnEnter\n        unmountOnExit\n        inset={{\n          default: 'insetNone',\n          md: 'insetLg'\n        }}\n      >\n        {updatedTabs}\n      </PfTabs>\n    );\n  }\n\n  /**\n   * Render tabs.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"curiosity-tabs-container\">\n        <GridItem span={12}>{this.renderTabs()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.propTypes = {\n  activeTab: PropTypes.number,\n  className: PropTypes.string,\n  defaultActiveTab: PropTypes.number,\n  hasOverflowScroll: PropTypes.bool,\n  onTab: PropTypes.func,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      content: PropTypes.node.isRequired,\n      title: PropTypes.node.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.defaultProps = {\n  activeTab: null,\n  className: '',\n  defaultActiveTab: 0,\n  hasOverflowScroll: false,\n  onTab: helpers.noop,\n  tabs: []\n};\n\nexport { Tabs as default, Tabs };\n"],"names":["InventoryTab","active","children","title","propTypes","PropTypes","defaultProps","InventoryTabs","onTab","index","productId","props","store","type","reduxTypes","tabs","this","activeTab","defaultActiveTab","isDisabled","t","updatedChildren","React","map","child","content","count","Title","headingLevel","className","length","Tabs","helpers","translate","ConnectedInventoryTabs","connect","inventory","state","updatedActiveTab","updatedTabs","setState","setTabData","prevProps","_isEqualWith","valueA","valueB","toString","Tab","key","eventKey","TabTitleText","hasOverflowScroll","activeKey","onSelect","event","mountOnEnter","unmountOnExit","inset","default","md","Grid","GridItem","span","renderTabs"],"sourceRoot":""}
{"version":3,"file":"js/1858.453f23ae384a4a412443.js","mappings":"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","sources":["webpack:///./src/components/productView/productViewContext.js"],"sourcesContent":["import React, { useCallback, useContext } from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { reduxHelpers } from '../../redux/common';\nimport { storeHooks } from '../../redux/hooks';\nimport { rhsmConstants, RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common/helpers';\n\n/**\n * @memberof ProductView\n * @module ProductViewContext\n */\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst ProductViewContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated product view context.\n *\n * @returns {React.Context<{}>}\n */\nconst useProductViewContext = () => useContext(ProductViewContext);\n\n/**\n * Return a query object from initial product config and Redux store.\n *\n * @param {string} queryType An identifier used to pull from both config and Redux, they should named the same.\n * @param {object} options\n * @param {string} options.overrideId A custom identifier, used for scenarios like the Guest inventory IDs\n * @param {object} options.useProductViewContext\n * @param {Function} options.useSelectors\n * @returns {object}\n */\nconst useProductQueryFactory = (\n  queryType,\n  {\n    overrideId,\n    useProductViewContext: useAliasProductViewContext = useProductViewContext,\n    useSelectors: useAliasSelectors = storeHooks.reactRedux.useSelectors\n  } = {}\n) => {\n  const { [queryType]: initialQuery, productId, viewId } = useAliasProductViewContext();\n  const [queryOverride, queryProduct, queryView] = useAliasSelectors([\n    ({ view }) => view?.[queryType]?.[overrideId],\n    ({ view }) => view?.[queryType]?.[productId],\n    ({ view }) => view?.[queryType]?.[viewId]\n  ]);\n\n  return {\n    ...initialQuery,\n    ...queryOverride,\n    ...queryProduct,\n    ...queryView\n  };\n};\n\n/**\n * Return a base product query\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductQuery = ({\n  queryType = 'query',\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) => useAliasProductQueryFactory(queryType, options);\n\n/**\n * Return the graph query based off of tally and capacity.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductGraphTallyQuery = ({\n  queryType = 'graphTallyQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return the inventory query for guests. Use fallback/defaults for guests offset, limit.\n *\n * @param {object} options\n * @param {number} options.defaultLimit\n * @param {number} options.defaultOffset\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryGuestsQuery = ({\n  defaultLimit = 100,\n  defaultOffset = 0,\n  queryType = 'inventoryGuestsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      [RHSM_API_QUERY_SET_TYPES.LIMIT]: defaultLimit,\n      [RHSM_API_QUERY_SET_TYPES.OFFSET]: defaultOffset,\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for hosts.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryHostsQuery = ({\n  queryType = 'inventoryHostsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for subscriptions.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventorySubscriptionsQuery = ({\n  queryType = 'inventorySubscriptionsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return a unified query for toolbars\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductGraphTallyQuery\n * @param {Function} options.useProductInventoryHostsQuery\n * @param {Function} options.useProductInventorySubscriptionsQuery\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductToolbarQuery = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery = useProductGraphTallyQuery,\n  useProductInventoryHostsQuery: useAliasProductInventoryHostsQuery = useProductInventoryHostsQuery,\n  useProductInventorySubscriptionsQuery:\n    useAliasProductInventorySubscriptionsQuery = useProductInventorySubscriptionsQuery,\n  options\n} = {}) => ({\n  ...useAliasProductQuery({ options }),\n  ...useAliasProductGraphTallyQuery({ options }),\n  ...useAliasProductInventoryHostsQuery({ options }),\n  ...useAliasProductInventorySubscriptionsQuery({ options })\n});\n\n/**\n * Get a filtered product configuration context.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductViewContext\n * @returns {object}\n */\nconst useProductContext = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductViewContext: useAliasProductViewContext = useProductViewContext\n} = {}) => {\n  const { [RHSM_API_QUERY_SET_TYPES.UOM]: uomFilter } = useAliasProductQuery();\n  const {\n    initialGraphFilters = [],\n    initialInventoryFilters = [],\n    initialSubscriptionsInventoryFilters = [],\n    productContextFilterUom,\n    ...config\n  } = useAliasProductViewContext();\n\n  const applyUomFilter = useCallback(() => {\n    if (productContextFilterUom === true) {\n      const filterFilters = ({ id, metric, isOptional }) => {\n        if (!isOptional) {\n          return true;\n        }\n        return new RegExp(uomFilter, 'i').test(metric) || new RegExp(uomFilter, 'i').test(id);\n      };\n\n      /**\n       * Allowing nested filters beside normal filters we take the quick path, just run the loop twice.\n       * Make sure to set \"isOptional\" false when it comes to nested filters in the event someone\n       * combined a config setting in the subsequent loop.\n       */\n      const updatedGraphFilters = _cloneDeep(initialGraphFilters)\n        .map(({ filters, ...rest }) => ({\n          ...rest,\n          filters: filters.filter(filterFilters),\n          isOptional: false\n        }))\n        .filter(filterFilters);\n\n      return {\n        ...config,\n        initialGraphFilters: updatedGraphFilters,\n        initialInventoryFilters: initialInventoryFilters.filter(filterFilters),\n        initialSubscriptionsInventoryFilters: initialSubscriptionsInventoryFilters.filter(filterFilters)\n      };\n    }\n\n    return {\n      ...config,\n      initialGraphFilters,\n      initialInventoryFilters,\n      initialSubscriptionsInventoryFilters\n    };\n  }, [\n    config,\n    initialGraphFilters,\n    initialInventoryFilters,\n    initialSubscriptionsInventoryFilters,\n    productContextFilterUom,\n    uomFilter\n  ]);\n\n  return applyUomFilter();\n};\n\n/**\n * Return product identifiers.\n *\n * @param {object} options\n * @param {Function} options.useProductViewContext\n * @returns {{productLabel, viewId, productId, productGroup, productVariants, productArchitectures}}\n */\nconst useProduct = ({ useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}) => {\n  const { productArchitectures, productGroup, productId, productLabel, productVariants, viewId } =\n    useAliasProductViewContext();\n  return {\n    productArchitectures,\n    productGroup,\n    productId,\n    productLabel,\n    productVariants,\n    viewId\n  };\n};\n\n/**\n * Return graph configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductGraphConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialGraphFilters, initialGraphSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGraphFilters,\n    settings: initialGraphSettings\n  };\n};\n\n/**\n * Return guests inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryGuestsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { inventoryGuestsQuery = {}, initialGuestsFilters, initialGuestsSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGuestsFilters,\n    initialQuery: inventoryGuestsQuery,\n    settings: initialGuestsSettings\n  };\n};\n\n/**\n * Return hosts inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryHostsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialInventoryFilters, initialInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialInventoryFilters,\n    settings: initialInventorySettings\n  };\n};\n\n/**\n * Return subscriptions inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventorySubscriptionsConfig = ({\n  useProductContext: useAliasProductContext = useProductContext\n} = {}) => {\n  const { initialSubscriptionsInventoryFilters, initialSubscriptionsInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialSubscriptionsInventoryFilters,\n    settings: initialSubscriptionsInventorySettings\n  };\n};\n\n/**\n * Return primary toolbar configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductToolbarConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialToolbarFilters, initialToolbarSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialToolbarFilters,\n    settings: initialToolbarSettings\n  };\n};\n\nconst context = {\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useQuery: useProductQuery,\n  useQueryFactory: useProductQueryFactory,\n  useGraphTallyQuery: useProductGraphTallyQuery,\n  useInventoryGuestsQuery: useProductInventoryGuestsQuery,\n  useInventoryHostsQuery: useProductInventoryHostsQuery,\n  useInventorySubscriptionsQuery: useProductInventorySubscriptionsQuery,\n  useProduct,\n  useGraphConfig: useProductGraphConfig,\n  useInventoryGuestsConfig: useProductInventoryGuestsConfig,\n  useInventoryHostsConfig: useProductInventoryHostsConfig,\n  useInventorySubscriptionsConfig: useProductInventorySubscriptionsConfig,\n  useToolbarConfig: useProductToolbarConfig,\n  useToolbarQuery: useProductToolbarQuery\n};\n\nexport {\n  context as default,\n  context,\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useProductQuery,\n  useProductQueryFactory,\n  useProductGraphTallyQuery,\n  useProductInventoryGuestsQuery,\n  useProductInventoryHostsQuery,\n  useProductInventorySubscriptionsQuery,\n  useProduct,\n  useProductGraphConfig,\n  useProductInventoryGuestsConfig,\n  useProductInventoryHostsConfig,\n  useProductInventorySubscriptionsConfig,\n  useProductToolbarConfig,\n  useProductToolbarQuery\n};\n"],"names":["DEFAULT_CONTEXT","helpers","ProductViewContext","React","useProductViewContext","useContext","useProductQueryFactory","queryType","_ref","arguments","length","undefined","overrideId","_ref$useProductViewCo","useAliasProductViewContext","_ref$useSelectors","useSelectors","useAliasSelectors","storeHooks","_useAliasProductViewC","initialQuery","productId","viewId","_useAliasSelectors","_ref2","_view$queryType","view","_ref3","_view$queryType2","_ref4","_view$queryType3","_useAliasSelectors2","_slicedToArray","queryOverride","queryProduct","queryView","_objectSpread","useProductQuery","_ref5","_ref5$queryType","_ref5$useProductQuery","useAliasProductQueryFactory","options","useProductGraphTallyQuery","_ref6","_ref6$queryType","_ref6$schemaCheck","schemaCheck","rhsmConstants","_ref6$useProductQuery","useAliasProductQuery","_ref6$useProductQuery2","reduxHelpers","useProductInventoryGuestsQuery","_objectSpread2","_ref7","_ref7$defaultLimit","defaultLimit","_ref7$defaultOffset","defaultOffset","_ref7$queryType","_ref7$schemaCheck","_ref7$useProductQuery","_ref7$useProductQuery2","_defineProperty","RHSM_API_QUERY_SET_TYPES","useProductInventoryHostsQuery","_ref8","_ref8$queryType","_ref8$schemaCheck","_ref8$useProductQuery","_ref8$useProductQuery2","useProductInventorySubscriptionsQuery","_ref9","_ref9$queryType","_ref9$schemaCheck","_ref9$useProductQuery","_ref9$useProductQuery2","useProductToolbarQuery","_ref10","_ref10$useProductQuer","_ref10$useProductGrap","useAliasProductGraphTallyQuery","_ref10$useProductInve","useAliasProductInventoryHostsQuery","_ref10$useProductInve2","useAliasProductInventorySubscriptionsQuery","useProductContext","_ref11","_ref11$useProductQuer","_ref11$useProductView","_useAliasProductQuery","uomFilter","_useAliasProductViewC2","_useAliasProductViewC3","initialGraphFilters","_useAliasProductViewC4","initialInventoryFilters","_useAliasProductViewC5","initialSubscriptionsInventoryFilters","productContextFilterUom","config","_objectWithoutProperties","_excluded","applyUomFilter","useCallback","filterFilters","_ref12","id","metric","isOptional","RegExp","test","updatedGraphFilters","_cloneDeep","map","_ref13","filters","rest","_excluded2","filter","useProduct","_ref14","_ref14$useProductView","_useAliasProductViewC6","productArchitectures","productGroup","productLabel","productVariants","useProductGraphConfig","_ref15","_ref15$useProductCont","useAliasProductContext","_useAliasProductConte","_useAliasProductConte2","initialGraphSettings","settings","useProductInventoryGuestsConfig","_ref16","_ref16$useProductCont","_useAliasProductConte3","_useAliasProductConte4","inventoryGuestsQuery","initialGuestsFilters","_useAliasProductConte5","initialGuestsSettings","useProductInventoryHostsConfig","_ref17","_ref17$useProductCont","_useAliasProductConte6","_useAliasProductConte7","initialInventorySettings","useProductInventorySubscriptionsConfig","_ref18","_ref18$useProductCont","_useAliasProductConte8","_useAliasProductConte9","initialSubscriptionsInventorySettings","useProductToolbarConfig","_ref19","_ref19$useProductCont","_useAliasProductConte10","initialToolbarFilters","_useAliasProductConte11","initialToolbarSettings","context","useQuery","useQueryFactory","useGraphTallyQuery","useInventoryGuestsQuery","useInventoryHostsQuery","useInventorySubscriptionsQuery","useGraphConfig","useInventoryGuestsConfig","useInventoryHostsConfig","useInventorySubscriptionsConfig","useToolbarConfig","useToolbarQuery"],"sourceRoot":""}
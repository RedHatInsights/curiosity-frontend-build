{"version":3,"file":"js/9517.1665691242530.0c4120a885a9f323daa6.js","mappings":"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","sources":["webpack:///./src/components/form/formHelpers.js","webpack:///./src/components/form/textInput.js","webpack:///./src/components/productView/productViewContext.js","webpack:///./src/components/toolbar/toolbarFieldDisplayName.js"],"sourcesContent":["import { helpers } from '../../common/helpers';\n\n/**\n * Create a consistent mock event object.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget, name, id: *, persist: Function, value, target}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput as PfTextInput } from '@patternfly/react-core';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A wrapper for Patternfly TextInput. Provides restructured event data,\n * and an onClear event for the search type.\n *\n * @augments React.Component\n * @fires onKeyUp\n * @fires onMouseUp\n * @fires onChange\n */\nclass TextInput extends React.Component {\n  state = {\n    updatedValue: null\n  };\n\n  /**\n   * onKeyUp event, provide additional functionality for onClear event.\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  onKeyUp = event => {\n    const { onClear, onKeyUp, type } = this.props;\n    const { currentTarget, keyCode } = event;\n    const clonedEvent = { ...event };\n\n    onKeyUp(createMockEvent(event, true));\n\n    if (keyCode === 27) {\n      if (type === 'search' && currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      } else {\n        this.setState({ updatedValue: '' }, () => {\n          onClear(\n            createMockEvent({ ...clonedEvent, ...{ currentTarget: { ...clonedEvent.currentTarget, value: '' } } })\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * onMouseUp event, provide additional functionality for onClear event.\n   *\n   * @event onMouseUp\n   * @param {object} event\n   */\n  onMouseUp = event => {\n    const { onClear, onMouseUp, type } = this.props;\n    const { currentTarget } = event;\n    const clonedEvent = { ...event };\n\n    onMouseUp(createMockEvent(event, true));\n\n    if (type !== 'search' || currentTarget.value === '') {\n      return;\n    }\n\n    setTimeout(() => {\n      if (currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      }\n    });\n  };\n\n  /**\n   * onChange event, provide restructured event.\n   *\n   * @param {string} value\n   * @param {object} event\n   */\n  onChange = (value, event) => {\n    const { onChange } = this.props;\n    const clonedEvent = { ...event };\n\n    this.setState({ updatedValue: value }, () => {\n      onChange(createMockEvent(clonedEvent));\n    });\n  };\n\n  /**\n   * Render a text input.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { updatedValue } = this.state;\n    const {\n      className,\n      id,\n      isDisabled,\n      name,\n      onChange,\n      onClear,\n      onKeyUp,\n      onMouseUp,\n      isReadOnly,\n      type,\n      value,\n      ...props\n    } = this.props;\n    const updatedName = name || helpers.generateId();\n    const updatedId = id || updatedName;\n\n    return (\n      <PfTextInput\n        id={updatedId}\n        name={updatedName}\n        className={`curiosity-text-input ${className}`}\n        isDisabled={isDisabled || false}\n        onChange={this.onChange}\n        onKeyUp={this.onKeyUp}\n        onMouseUp={this.onMouseUp}\n        isReadOnly={isReadOnly || false}\n        type={type}\n        value={updatedValue ?? value ?? ''}\n        {...props}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.defaultProps = {\n  className: '',\n  id: null,\n  isDisabled: false,\n  isReadOnly: false,\n  name: null,\n  onChange: helpers.noop,\n  onClear: helpers.noop,\n  onKeyUp: helpers.noop,\n  onMouseUp: helpers.noop,\n  type: 'text',\n  value: ''\n};\n\nexport { TextInput as default, TextInput };\n","import React, { useCallback, useContext } from 'react';\nimport { reduxHelpers } from '../../redux/common';\nimport { storeHooks } from '../../redux/hooks';\nimport { RHSM_API_QUERY_TYPES, rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst ProductViewContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated product view context.\n *\n * @returns {React.Context<{}>}\n */\nconst useProductViewContext = () => useContext(ProductViewContext);\n\n/**\n * Return a query object from initial product config and Redux store.\n *\n * @param {string} queryType An identifier used to pull from both config and Redux, they should named the same.\n * @param {object} options\n * @param {string} options.overrideId A custom identifier, used for scenarios like the Guest inventory IDs\n * @param {object} options.useProductViewContext\n * @returns {object}\n */\nconst useProductQueryFactory = (\n  queryType,\n  { overrideId, useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}\n) => {\n  const { [queryType]: initialQuery, productId, viewId } = useAliasProductViewContext();\n  const queryOverride = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[overrideId], undefined);\n  const queryProduct = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[productId], undefined);\n  const queryView = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[viewId], undefined);\n\n  return {\n    ...initialQuery,\n    ...queryOverride,\n    ...queryProduct,\n    ...queryView\n  };\n};\n\n/**\n * Return a base product query\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductQuery = ({ queryType = 'query', options } = {}) => useProductQueryFactory(queryType, options);\n\n/**\n * Return the graph query based off of tally and capacity.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductGraphTallyQuery = ({\n  queryType = 'graphTallyQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return the inventory query for guests. Use fallback/defaults for guests offset, limit.\n *\n * @param {object} options\n * @param {number} options.defaultLimit\n * @param {number} options.defaultOffset\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryGuestsQuery = ({\n  defaultLimit = 100,\n  defaultOffset = 0,\n  queryType = 'inventoryGuestsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      [RHSM_API_QUERY_SET_TYPES.LIMIT]: defaultLimit,\n      [RHSM_API_QUERY_SET_TYPES.OFFSET]: defaultOffset,\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for hosts.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryHostsQuery = ({\n  queryType = 'inventoryHostsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for subscriptions.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventorySubscriptionsQuery = ({\n  queryType = 'inventorySubscriptionsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Get a filtered product configuration context.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductViewContext\n * @returns {object}\n */\nconst useProductContext = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductViewContext: useAliasProductViewContext = useProductViewContext\n} = {}) => {\n  const { [RHSM_API_QUERY_TYPES.UOM]: uomFilter } = useAliasProductQuery();\n  const {\n    initialGraphFilters = [],\n    initialInventoryFilters = [],\n    initialSubscriptionsInventoryFilters = [],\n    productContextFilterUom,\n    ...config\n  } = useAliasProductViewContext();\n\n  const applyUomFilter = useCallback(() => {\n    if (productContextFilterUom === true) {\n      const filterFilters = ({ id, isOptional }) => {\n        if (!isOptional) {\n          return true;\n        }\n        return new RegExp(uomFilter, 'i').test(id);\n      };\n\n      return {\n        ...config,\n        initialGraphFilters: initialGraphFilters.filter(filterFilters),\n        initialInventoryFilters: initialInventoryFilters.filter(filterFilters),\n        initialSubscriptionsInventoryFilters: initialSubscriptionsInventoryFilters.filter(filterFilters)\n      };\n    }\n\n    return {\n      ...config,\n      initialGraphFilters,\n      initialInventoryFilters,\n      initialSubscriptionsInventoryFilters\n    };\n  }, [\n    config,\n    initialGraphFilters,\n    initialInventoryFilters,\n    initialSubscriptionsInventoryFilters,\n    productContextFilterUom,\n    uomFilter\n  ]);\n\n  return applyUomFilter();\n};\n\n/**\n * Return product identifiers.\n *\n * @param {object} options\n * @param {Function} options.useProductViewContext\n * @returns {{productLabel: string, viewId: string, productId: string, productGroup: string}}\n */\nconst useProduct = ({ useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}) => {\n  const { productGroup, productId, productLabel, viewId } = useAliasProductViewContext();\n  return {\n    productGroup,\n    productId,\n    productLabel,\n    viewId\n  };\n};\n\n/**\n * Return graph configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductGraphConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialGraphFilters, initialGraphSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGraphFilters,\n    settings: initialGraphSettings\n  };\n};\n\n/**\n * Return guests inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryGuestsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { inventoryGuestsQuery = {}, initialGuestsFilters, initialGuestsSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGuestsFilters,\n    initialQuery: inventoryGuestsQuery,\n    settings: initialGuestsSettings\n  };\n};\n\n/**\n * Return hosts inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryHostsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialInventoryFilters, initialInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialInventoryFilters,\n    settings: initialInventorySettings\n  };\n};\n\n/**\n * Return subscriptions inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventorySubscriptionsConfig = ({\n  useProductContext: useAliasProductContext = useProductContext\n} = {}) => {\n  const { initialSubscriptionsInventoryFilters, initialSubscriptionsInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialSubscriptionsInventoryFilters,\n    settings: initialSubscriptionsInventorySettings\n  };\n};\n\n/**\n * Return primary toolbar configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductToolbarConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const {\n    initialToolbarFilters,\n    initialToolbarSettings = {},\n    initialSecondaryToolbarFilters\n  } = useAliasProductContext();\n  return {\n    filters: initialToolbarFilters,\n    secondaryFilters: initialSecondaryToolbarFilters,\n    settings: initialToolbarSettings\n  };\n};\n\nconst context = {\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useQuery: useProductQuery,\n  useQueryFactory: useProductQueryFactory,\n  useGraphTallyQuery: useProductGraphTallyQuery,\n  useInventoryGuestsQuery: useProductInventoryGuestsQuery,\n  useInventoryHostsQuery: useProductInventoryHostsQuery,\n  useInventorySubscriptionsQuery: useProductInventorySubscriptionsQuery,\n  useProduct,\n  useGraphConfig: useProductGraphConfig,\n  useInventoryGuestsConfig: useProductInventoryGuestsConfig,\n  useInventoryHostsConfig: useProductInventoryHostsConfig,\n  useInventorySubscriptionsConfig: useProductInventorySubscriptionsConfig,\n  useToolbarConfig: useProductToolbarConfig\n};\n\nexport {\n  context as default,\n  context,\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useProductQuery,\n  useProductQueryFactory,\n  useProductGraphTallyQuery,\n  useProductInventoryGuestsQuery,\n  useProductInventoryHostsQuery,\n  useProductInventorySubscriptionsQuery,\n  useProduct,\n  useProductGraphConfig,\n  useProductInventoryGuestsConfig,\n  useProductInventoryHostsConfig,\n  useProductInventorySubscriptionsConfig,\n  useProductToolbarConfig\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup } from '@patternfly/react-core';\nimport _debounce from 'lodash/debounce';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport { TextInput } from '../form/textInput';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: evaluate the debounce milliseconds, currently based off platforms default 800 ms\n */\n/**\n * Display a display name input field for search.\n *\n * @fires onSubmit\n * @fires onClear\n * @fires onKeyUp\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.useDispatch\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryHostsQuery\n * @returns {Node}\n */\nconst ToolbarFieldDisplayName = ({\n  t,\n  useDispatch: useAliasDispatch,\n  useProduct: useAliasProduct,\n  useProductInventoryHostsQuery: useAliasProductInventoryHostsQuery\n}) => {\n  const { viewId } = useAliasProduct();\n  const { [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: currentValue } = useAliasProductInventoryHostsQuery();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On submit, dispatch type.\n   *\n   * @event onSubmit\n   * @param {string} submitValue\n   * @returns {void}\n   */\n  const onSubmit = submitValue =>\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: submitValue?.trim() || null\n      }\n    ]);\n\n  /**\n   * On clear, dispatch type.\n   *\n   * @event onClear\n   * @returns {void}\n   */\n  const onClear = () => {\n    if (currentValue === '' || !currentValue) {\n      return;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: null\n      }\n    ]);\n  };\n\n  /**\n   * Set up submit debounce event to allow for bypass.\n   */\n  const debounced = _debounce(onSubmit, 700);\n\n  /**\n   * On enter submit value, on type submit value, and on esc ignore (clear value at component level).\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 13:\n        onSubmit(event.value);\n        break;\n      case 27:\n        break;\n      default:\n        debounced(event.value);\n        break;\n    }\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        aria-label={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        className=\"curiosity-input__display-name\"\n        iconVariant=\"search\"\n        maxLength={255}\n        onClear={onClear}\n        onKeyUp={onKeyUp}\n        value={currentValue}\n        placeholder={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        data-test=\"toolbarFieldDisplayName\"\n      />\n    </InputGroup>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.propTypes = {\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryHostsQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.defaultProps = {\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useProduct,\n  useProductInventoryHostsQuery\n};\n\nexport { ToolbarFieldDisplayName as default, ToolbarFieldDisplayName };\n"],"names":["createMockEvent","event","persistEvent","checked","currentTarget","keyCode","persist","helpers","target","id","name","value","doesNotHaveMinimumCharacters","characters","length","formHelpers","TextInput","state","updatedValue","onKeyUp","props","onClear","type","clonedEvent","setState","onMouseUp","setTimeout","onChange","this","className","isDisabled","isReadOnly","updatedName","updatedId","React","defaultProps","DEFAULT_CONTEXT","ProductViewContext","useProductViewContext","useContext","useProductQueryFactory","queryType","overrideId","useAliasProductViewContext","initialQuery","productId","viewId","queryOverride","storeHooks","view","undefined","queryProduct","queryView","useProductQuery","options","useProductGraphTallyQuery","schemaCheck","rhsmApiTypes","reduxHelpers","useProductInventoryGuestsQuery","defaultLimit","defaultOffset","RHSM_API_QUERY_SET_TYPES","useProductInventoryHostsQuery","useProductInventorySubscriptionsQuery","useProductContext","useAliasProductQuery","uomFilter","RHSM_API_QUERY_TYPES","initialGraphFilters","initialInventoryFilters","initialSubscriptionsInventoryFilters","productContextFilterUom","config","applyUomFilter","useCallback","filterFilters","isOptional","RegExp","test","filter","useProduct","productGroup","productLabel","useProductGraphConfig","useAliasProductContext","initialGraphSettings","filters","settings","useProductInventoryGuestsConfig","inventoryGuestsQuery","initialGuestsFilters","initialGuestsSettings","useProductInventoryHostsConfig","initialInventorySettings","useProductInventorySubscriptionsConfig","initialSubscriptionsInventorySettings","useProductToolbarConfig","initialToolbarFilters","initialToolbarSettings","initialSecondaryToolbarFilters","secondaryFilters","context","useQuery","useQueryFactory","useGraphTallyQuery","useInventoryGuestsQuery","useInventoryHostsQuery","useInventorySubscriptionsQuery","useGraphConfig","useInventoryGuestsConfig","useInventoryHostsConfig","useInventorySubscriptionsConfig","useToolbarConfig","ToolbarFieldDisplayName","t","useAliasDispatch","useDispatch","useAliasProduct","useAliasProductInventoryHostsQuery","currentValue","dispatch","onSubmit","submitValue","reduxTypes","trim","debounced","_debounce","InputGroup","iconVariant","maxLength","placeholder","translate"],"sourceRoot":""}
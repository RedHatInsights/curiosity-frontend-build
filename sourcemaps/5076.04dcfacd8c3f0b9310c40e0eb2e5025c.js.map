{"version":3,"file":"js/5076.8d81442ea1784ecf49ce.js","mappings":"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,OAAOZ,OAAOY,KAAKgN,IAEpBowB,EAAej/B,QAAUm/B,EACzB7gC,EAAOC,QAAU0gC,EACjBA,EAAez+B,GAAK,O,gBCnSpB,IAAIqO,EAAM,CACT,qCAAsC,CACrC,OAED,qCAAsC,CACrC,MACA,KACA,KACA,MAED,mBAAoB,CACnB,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAED,0BAA2B,CAC1B,MACA,MAED,2BAA4B,CAC3B,MACA,KACA,KACA,KACA,KACA,MAED,0BAA2B,CAC1B,MACA,KACA,MAED,uBAAwB,CACvB,KACA,MAED,yBAA0B,CACzB,MACA,KACA,KACA,MAED,0BAA2B,CAC1B,MACA,MAED,qBAAsB,CACrB,MACA,KACA,KACA,KACA,MAED,wBAAyB,CACxB,MACA,MAED,sBAAuB,CACtB,MACA,KACA,KAED,mBAAoB,CACnB,MACA,KACA,MAED,sBAAuB,CACtB,MACA,KACA,MAED,2BAA4B,CAC3B,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KAED,gCAAiC,CAChC,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,MAED,sCAAuC,CACtC,MACA,KACA,KACA,MAED,uCAAwC,CACvC,MACA,KACA,KACA,KACA,MAED,kCAAmC,CAClC,MACA,MAED,6BAA8B,CAC7B,MACA,KACA,MAED,iBAAkB,CACjB,OAED,mCAAoC,CACnC,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAED,0CAA2C,CAC1C,MACA,MAED,qDAAsD,CACrD,MACA,KACA,KACA,KACA,KACA,KACA,KACA,MAED,kCAAmC,CAClC,MACA,KAED,mCAAoC,CACnC,MACA,GACA,IACA,MAED,qBAAsB,CACrB,MAED,+BAAgC,CAC/B,OAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,MACA,MAED,8BAA+B,CAC9B,MAED,6BAA8B,CAC7B,OAED,6BAA8B,CAC7B,OAED,+BAAgC,CAC/B,OAED,8BAA+B,CAC9B,OAED,8BAA+B,CAC9B,OAED,6BAA8B,CAC7B,MACA,KACA,MAED,oCAAqC,CACpC,MACA,MAED,+BAAgC,CAC/B,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,KACA,GACA,KACA,KACA,KACA,IACA,IACA,KACA,MAED,sCAAuC,CACtC,MACA,MAED,sCAAuC,CACtC,MACA,KACA,MAED,iDAAkD,CACjD,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,KACA,GACA,KACA,KACA,KACA,IACA,IACA,KACA,MAED,iDAAkD,CACjD,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,KACA,GACA,KACA,KACA,KACA,IACA,IACA,KACA,KACA,MAED,oBAAqB,CACpB,OAED,uBAAwB,CACvB,OAED,qBAAsB,CACrB,OAED,4BAA6B,CAC5B,OAED,4BAA6B,CAC5B,OAED,mBAAoB,CACnB,OAED,wBAAyB,CACxB,OAED,2BAA4B,CAC3B,OAED,iBAAkB,CACjB,MACA,IAED,uBAAwB,CACvB,MACA,KACA,KACA,IACA,MAED,uCAAwC,CACvC,MACA,KACA,KACA,KACA,MAED,uCAAwC,CACvC,KACA,KACA,KACA,MAED,yCAA0C,CACzC,MACA,KACA,KACA,MAED,+BAAgC,CAC/B,MACA,KACA,KACA,MAED,8BAA+B,CAC9B,MACA,MAGF,SAAS0wB,EAAoBL,GAC5B,IAAIE,EAAoBC,EAAExwB,EAAKqwB,GAC9B,OAAOn/B,QAAQC,UAAUw/B,MAAK,KAC7B,IAAIpyB,EAAI,IAAIrE,MAAM,uBAAyBm2B,EAAM,KAEjD,MADA9xB,EAAEkyB,KAAO,mBACHlyB,KAIR,IAAIqyB,EAAM5wB,EAAIqwB,GAAM1+B,EAAKi/B,EAAI,GAC7B,OAAO1/B,QAAQkR,IAAIwuB,EAAIrQ,MAAM,GAAGvgB,IAAIuwB,EAAoBhyB,IAAIoyB,MAAK,IACzDJ,EAAoB5+B,KAG7B++B,EAAoB19B,KAAO,IAAOZ,OAAOY,KAAKgN,GAC9C0wB,EAAoB/+B,GAAK,MACzBlC,EAAOC,QAAUghC","sources":["webpack:///./config/build.empty.js","webpack:///./src/app.js","webpack:///./src/common/helpers.js","webpack:///./src/common/dateHelpers.js","webpack:///./src/common/downloadHelpers.js","webpack:///./src/components/authentication/authentication.js","webpack:///./src/components/i18n/i18n.js","webpack:///./src/components/loader/loader.js","webpack:///./src/components/messageView/messageView.js","webpack:///./src/components/pageLayout/pageColumns.js","webpack:///./src/components/pageLayout/pageHeader.js","webpack:///./src/components/pageLayout/pageLayout.js","webpack:///./src/components/pageLayout/pageMessages.js","webpack:///./src/components/pageLayout/pageSection.js","webpack:///./src/components/pageLayout/pageToolbar.js","webpack:///./src/components/router/redirect.js","webpack:///./src/components/router/router.js","webpack:///./src/components/router/routerContext.js","webpack:///./src/components/router/routerHelpers.js","webpack:///./src/components/table/table.js","webpack:///./src/components/table/tableEmpty.js","webpack:///./src/components/table/tableSkeleton.js","webpack:///./src/config/product.rhel.js","webpack:///./src/config/product.openshiftContainer.js","webpack:///./src/config/product.openshiftMetrics.js","webpack:///./src/config/product.openshiftDedicated.js","webpack:///./src/config/product.satellite.js","webpack:///./src/config/routes.js","webpack:///./src/redux/common/apiQueries.js","webpack:///./src/redux/common/reduxHelpers.js","webpack:///./src/redux/hooks/useReactRedux.js","webpack:///./src/redux/hooks/useRhsmActions.js","webpack:///./src/redux/hooks/index.js","webpack:///./src/redux/hooks/useRhsmSelectors.js","webpack:///./src/redux/actions/platformActions.js","webpack:///./src/redux/actions/rhsmActions.js","webpack:///./src/services/userServices.js","webpack:///./src/redux/actions/index.js","webpack:///./src/redux/actions/userActions.js","webpack:///./src/redux/index.js","webpack:///./src/redux/reducers/graphReducer.js","webpack:///./src/redux/reducers/inventoryReducer.js","webpack:///./src/redux/reducers/messagesReducer.js","webpack:///./src/redux/reducers/toolbarReducer.js","webpack:///./src/redux/reducers/userReducer.js","webpack:///./src/redux/reducers/viewReducer.js","webpack:///./src/redux/reducers/index.js","webpack:///./src/redux/selectors/appMessagesSelectors.js","webpack:///./src/redux/selectors/userSelectors.js","webpack:///./src/redux/selectors/guestsListSelectors.js","webpack:///./src/redux/selectors/graphCardSelectors.js","webpack:///./src/redux/selectors/inventoryListSelectors.js","webpack:///./src/redux/selectors/subscriptionsListSelectors.js","webpack:///./src/redux/selectors/index.js","webpack:///./src/redux/middleware/actionRecordMiddleware.js","webpack:///./src/redux/middleware/index.js","webpack:///./src/redux/middleware/statusMiddleware.js","webpack:///./src/redux/middleware/multiActionMiddleware.js","webpack:///./src/redux/store.js","webpack:///./src/redux/types/appTypes.js","webpack:///./src/redux/types/graphTypes.js","webpack:///./src/redux/types/inventoryTypes.js","webpack:///./src/redux/types/platformTypes.js","webpack:///./src/redux/types/queryTypes.js","webpack:///./src/redux/types/userTypes.js","webpack:///./src/redux/types/index.js","webpack:///./src/redux/types/toolbarTypes.js","webpack:///./src/redux/types/rhsmTypes.js","webpack:///./src/services/config.js","webpack:///./src/services/platformServices.js","webpack:///./src/services/rhsmServices.js","webpack:///./src/types/index.js","webpack:///./src/types/platformApiTypes.js","webpack:///./src/types/rhsmApiTypes.js","webpack:////home/travis/build/RedHatInsights/curiosity-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/components|lazy|/^\\.\\/.*\\.js$/|exclude: /\\.test\\.js$/|groupOptions: {}|namespace object"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { connectRouter, reduxActions } from './redux';\nimport { helpers } from './common/helpers';\nimport { I18n } from './components/i18n/i18n';\nimport { Router } from './components/router';\nimport Authentication from './components/authentication/authentication';\n\n/**\n * Application\n *\n * @augments React.Component\n */\nclass App extends React.Component {\n  componentDidMount() {\n    const { getLocale } = this.props;\n    getLocale();\n  }\n\n  /**\n   * Render application.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { locale } = this.props;\n\n    return (\n      <I18n locale={(locale && locale.value) || null}>\n        <NotificationsPortal />\n        <Authentication>\n          <Router />\n        </Authentication>\n      </I18n>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{locale: object, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  locale: PropTypes.shape({\n    value: PropTypes.string\n  })\n};\n\n/**\n * Default props.\n *\n * @type {{locale: {}, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: helpers.noop,\n  locale: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getLocale: () => dispatch(reduxActions.user.getLocale())\n});\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @returns {object}\n */\nconst mapStateToProps = state => ({ locale: state.user.session.locale });\n\nconst ConnectedApp = connectRouter(mapStateToProps, mapDispatchToProps)(App);\n\nexport { ConnectedApp as default, ConnectedApp, App };\n","/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string|Array} key\n * @param {string|object|Array} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) => {\n  const updatedKey = (Array.isArray(key) && `[${key}]`) || key;\n  const updatedValue =\n    (typeof value === 'string' && value) ||\n    (Array.isArray(value) && `[${value}]`) ||\n    (Object.keys(value || '').length && JSON.stringify(value)) ||\n    '';\n  const updatedComponents = (components && `${components}`) || '';\n\n  return `t(${updatedKey}${(updatedValue && `, ${updatedValue}`) || ''}${\n    (updatedComponents && `, ${updatedComponents}`) || ''\n  })`;\n};\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the current hosts inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_HOSTS = process.env.REACT_APP_UI_DISABLED_TABLE_HOSTS === 'true';\n\n/**\n * Disable the current subscriptions inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_SUBSCRIPTIONS = process.env.REACT_APP_UI_DISABLED_TABLE_SUBSCRIPTIONS === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * A url, or uri, for \"recommend actions\"\n *\n * @type {string}\n */\nconst UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS = process.env.REACT_APP_UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI state logging file name.\n *\n * @type {string}\n */\nconst UI_LOGGER_FILE = process.env.REACT_APP_UI_LOGGER_FILE || 'debug_log_{0}.json';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  browserExpose,\n  generateId,\n  isDate,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TABLE_HOSTS,\n  UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_LOGGER_FILE,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && '20190720') || (helpers.DEV_MODE && process.env.REACT_APP_DEBUG_DEFAULT_DATETIME) || new Date();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @param {string} params.endOfMeasurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement, endOfMeasurement = 'days' }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf(endOfMeasurement).toDate()\n});\n\nconst currentDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 1, measurement: 'days' });\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\nconst rangedYearDateTime = setRangedDateTime({\n  date: getCurrentDate(),\n  subtract: 11,\n  measurement: 'months',\n  endOfMeasurement: 'months'\n});\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case 'CURRENT':\n      return { ...currentDateTime };\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Generate a list of months for use in a select list.\n *\n * @param {string} month\n * @returns {{keyDateTimeRanges: {}, listDateTimeRanges: *[]}|*}\n */\nconst getRangedMonthDateTime = month => {\n  const currentYear = Number.parseInt(moment.utc(getCurrentDate()).year(), 10);\n  const { startDate, endDate } = { ...rangedYearDateTime };\n  const keyDateTimeRanges = {};\n  let listDateTimeRanges = [];\n\n  const startDateUpdated = moment.utc(startDate);\n  const endDateUpdated = moment.utc(endDate);\n\n  while (endDateUpdated > startDateUpdated || startDateUpdated.format('M') === endDateUpdated.format('M')) {\n    const dateTime = {\n      value: {\n        startDate: startDateUpdated.toDate()\n      }\n    };\n\n    const titleYear = startDateUpdated.format('MMMM YYYY');\n    const title = startDateUpdated.format('MMMM');\n    const titleIndex = startDateUpdated.format('M');\n    const isNextYear = currentYear !== Number.parseInt(startDateUpdated.year(), 10);\n\n    dateTime.title = (isNextYear && titleYear) || title;\n    dateTime._title = title.toLowerCase();\n    dateTime.value.endDate = moment.utc(startDateUpdated).endOf('month').toDate();\n\n    startDateUpdated.add(1, 'month');\n\n    dateTime.title = translate('curiosity-toolbar.granularityRange', { context: dateTime.title });\n    keyDateTimeRanges[title.toLowerCase()] = { ...dateTime };\n    keyDateTimeRanges[titleIndex] = { ...dateTime };\n    listDateTimeRanges.push(dateTime);\n  }\n\n  listDateTimeRanges = listDateTimeRanges.reverse();\n  listDateTimeRanges[0] = {\n    ...listDateTimeRanges[0],\n    _title: 'current',\n    title: translate('curiosity-toolbar.granularityRange', { context: 'current' })\n  };\n\n  keyDateTimeRanges.current = { ...listDateTimeRanges[0] };\n\n  if (month) {\n    return keyDateTimeRanges?.[month] || undefined;\n  }\n\n  return { keyDateTimeRanges, listDateTimeRanges };\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { dateHelpers } from './dateHelpers';\n\n/**\n * Download data to a file\n *\n * @param {object} options\n * @param {string} options.data\n * @param {string} options.fileName\n * @param {string} options.fileType\n * @returns {Promise}\n */\nconst downloadData = options => {\n  const { data = '', fileName = 'download.txt', fileType = 'text/plain' } = options || {};\n  return new Promise((resolve, reject) => {\n    try {\n      const { document, navigator, URL } = window;\n      const blob = new Blob([data], { type: fileType });\n\n      if (navigator?.msSaveBlob) {\n        navigator.msSaveBlob(blob, fileName);\n        resolve({ fileName, data });\n      } else {\n        const anchorTag = document.createElement('a');\n\n        anchorTag.href = URL.createObjectURL(blob);\n        anchorTag.style.display = 'none';\n        anchorTag.download = fileName;\n\n        document.body.appendChild(anchorTag);\n\n        anchorTag.click();\n\n        setTimeout(() => {\n          document.body.removeChild(anchorTag);\n          URL.revokeObjectURL(blob);\n          resolve({ fileName, data });\n        }, 250);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\n/**\n * Download the debug log file.\n */\nconst debugLog = async () => {\n  try {\n    const { sessionStorage } = window;\n    const fileName = `${helpers.UI_LOGGER_FILE}`.replace(\n      '{0}',\n      moment(dateHelpers.getCurrentDate()).format('YYYYMMDD_HHmmss')\n    );\n    const data = JSON.stringify(JSON.parse(sessionStorage.getItem(`${helpers.UI_LOGGER_ID}`)), null, 2);\n\n    await downloadData({ data, fileName, fileType: 'application/json' });\n  } catch (e) {\n    throw new Error(`debuglog error, ${e.message}`);\n  }\n};\n\nconst downloadHelpers = {\n  downloadData,\n  debugLog\n};\n\nhelpers.browserExpose({ debugLog }, { limit: false });\n\nexport { downloadHelpers as default, downloadHelpers, downloadData, debugLog };\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { connectRouter, reduxActions, reduxSelectors } from '../../redux';\nimport { rhsmApiTypes } from '../../types';\nimport { helpers } from '../../common';\nimport { routerHelpers, Redirect } from '../router';\nimport MessageView from '../messageView/messageView';\nimport { translate } from '../i18n/i18n';\n\n/**\n * An authentication pass-through component.\n *\n * @augments React.Component\n */\nclass Authentication extends Component {\n  appName = routerHelpers.appName;\n\n  removeListeners = helpers.noop;\n\n  async componentDidMount() {\n    const {\n      authorizeUser,\n      hideGlobalFilter,\n      history,\n      initializeChrome,\n      onNavigation,\n      session,\n      setAppName\n    } = this.props;\n    const { subscriptions: authorized } = session.authorized || {};\n\n    if (!authorized) {\n      await authorizeUser();\n    }\n\n    initializeChrome();\n    setAppName(this.appName);\n    hideGlobalFilter();\n\n    const appNav = onNavigation(event => {\n      const { routeHref } = routerHelpers.getRouteConfig({ id: event.navId });\n      history.push(routeHref);\n    });\n\n    this.removeListeners = () => {\n      appNav();\n    };\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  /**\n   * Render authenticated children or messaging.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children, session, t } = this.props;\n    const { subscriptions: authorized } = session.authorized || {};\n\n    if (helpers.UI_DISABLED) {\n      return (\n        <MessageView>\n          <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n        </MessageView>\n      );\n    }\n\n    if (authorized) {\n      return <React.Fragment>{children}</React.Fragment>;\n    }\n\n    if (session.pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (session.errorCodes && session.errorCodes.includes(rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES.OPTIN)) ||\n      session.status === 418\n    ) {\n      return <Redirect route={routerHelpers.getErrorRoute.path} />;\n    }\n\n    return (\n      <MessageView>\n        <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n      </MessageView>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, t: Function,\n *     children: Node, initializeChrome: Function, session: object, history: object,\n *     hideGlobalFilter: Function}}\n */\nAuthentication.propTypes = {\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  hideGlobalFilter: PropTypes.func,\n  history: PropTypes.shape({\n    listen: PropTypes.func.isRequired,\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  initializeChrome: PropTypes.func,\n  onNavigation: PropTypes.func,\n  setAppName: PropTypes.func,\n  session: PropTypes.shape({\n    authorized: PropTypes.shape({\n      [routerHelpers.appName]: PropTypes.bool\n    }),\n    errorCodes: PropTypes.arrayOf(PropTypes.string),\n    pending: PropTypes.bool,\n    status: PropTypes.number\n  }),\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, setAppName: Function, t: translate,\n *     initializeChrome: Function, session: {authorized: object, errorCodes: Array, pending: boolean,\n *     status: number}, hideGlobalFilter: Function}}\n */\nAuthentication.defaultProps = {\n  authorizeUser: helpers.noop,\n  hideGlobalFilter: helpers.noop,\n  initializeChrome: helpers.noop,\n  onNavigation: helpers.noop,\n  setAppName: helpers.noop,\n  session: {\n    authorized: {},\n    errorCodes: [],\n    pending: false,\n    status: null\n  },\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  authorizeUser: () => dispatch(reduxActions.user.authorizeUser()),\n  hideGlobalFilter: isHidden => dispatch(reduxActions.platform.hideGlobalFilter(isHidden)),\n  initializeChrome: () => dispatch(reduxActions.platform.initializeChrome()),\n  onNavigation: callback => dispatch(reduxActions.platform.onNavigation(callback)),\n  setAppName: name => dispatch(reduxActions.platform.setAppName(name))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.user.makeUserSession();\n\nconst ConnectedAuthentication = connectRouter(makeMapStateToProps, mapDispatchToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, Trans } from 'react-i18next';\nimport { useMount } from 'react-use';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string|Array} translateKey A key reference, or an array of a primary key with fallback keys.\n * @param {string|object|Array} values A default string if the key can't be found. An object with i18next settings. Or an array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @returns {string|Node}\n */\nconst translate = (translateKey, values = null, components) => {\n  const updatedValues = values;\n  let updatedTranslateKey = translateKey;\n\n  if (Array.isArray(updatedTranslateKey)) {\n    updatedTranslateKey = updatedTranslateKey.filter(value => typeof value === 'string' && value.length > 0);\n  }\n\n  if (Array.isArray(updatedValues?.context)) {\n    updatedValues.context = updatedValues.context\n      .filter(value => typeof value === 'string' && value.length > 0)\n      .join('_');\n  }\n\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(updatedTranslateKey, updatedValues, components);\n  }\n\n  if (components) {\n    return (\n      (i18next.store && <Trans i18nKey={updatedTranslateKey} values={updatedValues} components={components} />) || (\n        <React.Fragment>t({updatedTranslateKey})</React.Fragment>\n      )\n    );\n  }\n\n  return (i18next.store && i18next.t(updatedTranslateKey, updatedValues)) || `t([${updatedTranslateKey}])`;\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {Node} Component\n * @returns {Node}\n */\nconst translateComponent = Component => {\n  const withTranslation = ({ ...props }) => (\n    <Component\n      {...props}\n      t={(i18next.store && translate) || helpers.noopTranslate}\n      i18n={(i18next.store && i18next) || helpers.noop}\n    />\n  );\n\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\n/**\n * Load I18n.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.fallbackLng\n * @param {string} props.loadPath\n * @param {string} props.locale\n * @returns {Node}\n */\nconst I18n = ({ children, fallbackLng, loadPath, locale }) => {\n  const [initialized, setInitialized] = useState(false);\n\n  /**\n   * Initialize i18next\n   */\n  useMount(async () => {\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: undefined,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      //\n    }\n\n    setInitialized(true);\n  });\n\n  /**\n   * Update locale.\n   */\n  useEffect(() => {\n    if (initialized) {\n      try {\n        i18next.changeLanguage(locale);\n      } catch (e) {\n        //\n      }\n    }\n  }, [initialized, locale]);\n\n  return (initialized && <React.Fragment>{children}</React.Fragment>) || <React.Fragment />;\n};\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: Node, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    colWidth: PropTypes.array,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {Node|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {Node}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, icon: Node|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { helpers } from '../../common';\n\n/**\n * Render page columns based on children.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageColumns = ({ children, className }) => (\n  <Flex\n    alignItems={{ sm: 'alignItemsStretch' }}\n    spaceItems={{ sm: 'spaceItemsNone' }}\n    className={`curiosity-page-columns ${className}`}\n  >\n    {React.Children.toArray(children)\n      .filter(child => React.isValidElement(child))\n      .map(child => (\n        <FlexItem\n          key={(child.key && `page-column-${child.key}`) || helpers.generateId()}\n          grow={{ sm: 'grow' }}\n          className=\"curiosity-page-columns-column\"\n        >\n          {child}\n        </FlexItem>\n      ))}\n  </Flex>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageColumns.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageColumns.defaultProps = {\n  className: ''\n};\n\nexport { PageColumns as default, PageColumns };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader as RcsPageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Flex, FlexItem, Label as PfLabel } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: Review removing the \"includeTour\" prop and associated button code.\n * ...instead of disabling it, ENT-4247\n */\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {boolean} props.includeTour\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst PageHeader = ({ children, includeTour, productLabel, t }) => (\n  <RcsPageHeader>\n    <Flex justifyContent={{ sm: 'justifyContentSpaceBetween' }}>\n      <FlexItem>\n        <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n      </FlexItem>\n      <FlexItem>\n        {includeTour && (\n          <Button variant=\"link\" className=\"uxui-curiosity__button-tour\" isInline>\n            <PfLabel color=\"blue\">{t('curiosity-optin.buttonTour')}</PfLabel>\n          </Button>\n        )}\n      </FlexItem>\n    </Flex>\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, includeTour: boolean, productLabel: string, t: Function}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  includeTour: PropTypes.bool,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{includeTour: boolean, productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  includeTour: false,\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageColumns } from './pageColumns';\nimport { PageMessages } from './pageMessages';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageLayout = ({ children, className }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageMessages)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className={`curiosity ${className}`}>\n      {React.Children.toArray(children).filter(\n        child => child.type !== PageHeader && child.type !== PageMessages && child.type !== PageToolbar\n      )}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageLayout.defaultProps = {\n  className: ''\n};\n\nexport { PageLayout as default, PageLayout, PageColumns, PageHeader, PageMessages, PageSection, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageMessages = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-messages ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageMessages.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageMessages.defaultProps = {\n  className: ''\n};\n\nexport { PageMessages as default, PageMessages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageSection = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-section ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageSection.defaultProps = {\n  className: ''\n};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageToolbar = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-toolbar ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageToolbar.defaultProps = {\n  className: ''\n};\n\nexport { PageToolbar as default, PageToolbar };\n","import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Router } from './router';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\n/**\n * A routing redirect.\n *\n * @param {object} props\n * @param {boolean} props.isForced\n * @param {string} props.route\n * @param {string} props.routes\n * @param {string} props.url\n * @returns {Node}\n */\nconst Redirect = ({ isForced, route, routes, url }) => {\n  const baseName = routerHelpers.dynamicBaseName();\n\n  /**\n   * Bypass router, force the location.\n   */\n  const forceNavigation = () => {\n    const { hash = '', search = '' } = window.location;\n    const forcePath = url || (route && `${path.join(baseName, route)}${search}${hash}`);\n\n    window.location.replace(forcePath);\n  };\n\n  const { path: matchedRoutePath, ...matchedRoute } = routerHelpers.getRouteConfig({ pathName: route, id: route });\n\n  if (!isForced && matchedRoutePath) {\n    return <Router routes={[{ ...matchedRoute, path: '*' }, ...routes]} />;\n  }\n\n  forceNavigation();\n\n  return (helpers.TEST_MODE && <React.Fragment>Redirected towards {url || route}</React.Fragment>) || null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, routes: Array, isReplace: boolean, url: string,\n *    isForced: boolean}}\n */\nRedirect.propTypes = {\n  isForced: PropTypes.bool,\n  route: PropTypes.string,\n  routes: PropTypes.array,\n  url: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isRedirect: boolean, route: string, routes: Array, isReplace: boolean, url: string,\n *    isForced: boolean}}\n */\nRedirect.defaultProps = {\n  isForced: false,\n  route: null,\n  routes: routerHelpers.routes,\n  url: null\n};\n\nexport { Redirect as default, Redirect };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport { useMount } from 'react-use';\nimport { RouterContext } from './routerContext';\nimport { routerHelpers } from './routerHelpers';\nimport { Loader } from '../loader/loader';\n\n/**\n * Load routes.\n *\n * @param {object} props\n * @param {Array} props.routes\n * @returns {Node}\n */\nconst Router = ({ routes } = {}) => {\n  const [updatedRoutes, setUpdatedRoutes] = useState([]);\n  const [redirectDefault, setRedirectDefault] = useState(null);\n\n  /**\n   * Initialize routes.\n   */\n  useMount(async () => {\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    const results = await Promise.all(\n      routes.map(async item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        const View = await routerHelpers.importView(item.component);\n\n        return (\n          <Route\n            exact={item.exact}\n            key={item.path}\n            path={item.path}\n            strict={item.strict}\n            render={({ location, ...routeProps }) => {\n              const routeConfig = item.id && routerHelpers.getRouteConfig({ id: item.id });\n              const { URLSearchParams, decodeURIComponent } = window;\n              const parsedSearch = {};\n\n              [\n                ...new Set(\n                  [...new URLSearchParams(decodeURIComponent(location.search))].map(\n                    ([param, value]) => `${param}~${value}`\n                  )\n                )\n              ].forEach(v => {\n                const [param, value] = v.split('~');\n                parsedSearch[param] = value;\n              });\n\n              const updatedLocation = {\n                ...location,\n                parsedSearch\n              };\n\n              const routeDetail = {\n                baseName: routerHelpers.dynamicBaseName(),\n                errorRoute: activateOnErrorRoute,\n                routes,\n                routeItem: { ...item },\n                ...routeConfig\n              };\n\n              return (\n                <RouterContext.Provider value={{ routeDetail }}>\n                  <View routeDetail={routeDetail} location={updatedLocation} {...routeProps} />\n                </RouterContext.Provider>\n              );\n            }}\n          />\n        );\n      })\n    );\n\n    setUpdatedRoutes(results);\n    setRedirectDefault(routes.find(({ disabled, redirect }) => !disabled && redirect) ?? null);\n  });\n\n  return (\n    <React.Suspense fallback={<Loader variant=\"title\" />}>\n      <Switch>\n        {updatedRoutes}\n        {redirectDefault && <ReactRouterDomRedirect to={redirectDefault.redirect} />}\n      </Switch>\n    </React.Suspense>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.boolean,\n      component: PropTypes.string.isRequired,\n      disabled: PropTypes.boolean,\n      exact: PropTypes.boolean,\n      id: PropTypes.string,\n      path: PropTypes.string.isRequired,\n      redirect: PropTypes.string,\n      render: PropTypes.boolean,\n      strict: PropTypes.boolean\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerHelpers.routes\n};\n\nexport { Router as default, Router };\n","import React, { useContext } from 'react';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { routeDetail: { baseName: null, errorRoute: null, routes: [], routeItem: {} } },\n  helpers.noop\n];\n\nconst RouterContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated router context.\n *\n * @returns {React.Context<{}>}\n */\nconst useRouterContext = () => useContext(RouterContext);\n\n/**\n * Get a route detail from router context.\n *\n * @param {object} options\n * @param {Function} options.useRouterContext\n * @returns {{routes: Array, routeItem: object, baseName: string, errorRoute: object}}\n */\nconst useRouteDetail = ({ useRouterContext: useAliasRouterContext = useRouterContext } = {}) => {\n  const { routeDetail } = useAliasRouterContext();\n  return routeDetail;\n};\n\nconst context = {\n  RouterContext,\n  DEFAULT_CONTEXT,\n  useRouterContext,\n  useRouteDetail\n};\n\nexport { context as default, context, RouterContext, DEFAULT_CONTEXT, useRouterContext, useRouteDetail };\n","import React from 'react';\nimport path from 'path';\nimport { helpers } from '../../common/helpers';\nimport { routesConfig } from '../../config';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformLandingRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/');\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformModalRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return an assumed route baseName directory based on existing app name.\n * App name is defined in dotenv and package.json/insights.appname\n * [environment]/[OPTIONAL]/[OPTIONAL]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  `${pathName.split(applicationName)[0]}${applicationName}`;\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName = (helpers.TEST_MODE && '/') || dynamicBaseName();\n\n/**\n * Return a base path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBasePath = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  pathName.split(applicationName)[0];\n\n/**\n * App basePath.\n *\n * @type {string}\n */\nconst basePath = (helpers.TEST_MODE && '/') || dynamicBasePath();\n\n/**\n * Generate product groups for applying query filter resets.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateProductGroups = (config = routesConfig) => {\n  const productGroups = {};\n\n  config.forEach(({ pathParameter, productParameter }) => {\n    const viewIds = ((Array.isArray(productParameter) && productParameter) || [productParameter]).map(\n      id => (id && `view${id}`) || id\n    );\n\n    viewIds.forEach((id, index) => {\n      if (id) {\n        if (!productGroups[id]) {\n          productGroups[id] = [];\n        }\n\n        if (pathParameter) {\n          productGroups[id].push((Array.isArray(pathParameter) && pathParameter?.[index]) || pathParameter);\n        }\n      }\n    });\n  });\n\n  return productGroups;\n};\n\n/**\n * Reference for products grouped by view.\n */\nconst productGroups = generateProductGroups();\n\n/**\n * Generate routes to be consumed by router.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateRoutes = (config = routesConfig) =>\n  config.map(({ activateOnError, component, disabled, id, path: routePath, redirect }) => ({\n    activateOnError,\n    component,\n    disabled,\n    exact: true,\n    id,\n    path: routePath,\n    redirect\n  }));\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = generateRoutes();\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Match route config entries by path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {Array} params.config\n * @returns {{configs: Array, configFirstMatch: object, configsById: object}}\n */\nconst getRouteConfigByPath = ({ pathName = dynamicBasePath(), config = routesConfig } = {}) => {\n  const basePathDirs = pathName?.split('/').filter(str => str.length > 0);\n  const configs = [];\n  const allConfigs = [];\n  const configsById = {};\n  const allConfigsById = {};\n\n  const findConfig = dir => {\n    config.forEach(({ id, path: configPath, pathParameter, productParameter, aliases, ...configItem }) => {\n      const updatedConfigItem = {\n        aliases,\n        id,\n        path: configPath,\n        pathParameter,\n        productParameter,\n        ...configItem\n      };\n\n      if (\n        dir &&\n        (new RegExp(dir, 'i').test(configPath) ||\n          new RegExp(dir, 'i').test(productParameter?.toString()) ||\n          new RegExp(dir, 'i').test(pathParameter?.toString()) ||\n          new RegExp(dir, 'i').test(aliases?.toString()))\n      ) {\n        if (!configsById[id]) {\n          configsById[id] = { ...updatedConfigItem };\n          configs.push({ ...updatedConfigItem });\n        }\n      }\n\n      if (!allConfigsById[id]) {\n        allConfigsById[id] = { ...updatedConfigItem };\n        allConfigs.push({ ...updatedConfigItem });\n      }\n    });\n  };\n\n  if (basePathDirs?.length) {\n    basePathDirs.forEach(dir => {\n      if (dir) {\n        const decodedDir = window.decodeURI(dir);\n        findConfig(decodedDir);\n      }\n    });\n  } else {\n    findConfig();\n  }\n\n  return { allConfigs, allConfigsById, configs, configsById, firstMatch: configs?.[0] };\n};\n\n/**\n * Return a route config object.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathName\n * @param {boolean} params.returnDefault\n * @param {Array} params.config\n * @returns {object}\n */\nconst getRouteConfig = ({ id = null, pathName, returnDefault = false, config = routesConfig } = {}) => {\n  let navRouteItem;\n\n  if (id) {\n    navRouteItem = config.find(item => item.id === id);\n  }\n\n  if ((!navRouteItem && pathName) || (!navRouteItem && !pathName && !returnDefault)) {\n    navRouteItem = getRouteConfigByPath({ pathName, config }).firstMatch;\n  }\n\n  if (!navRouteItem && returnDefault) {\n    navRouteItem = config.find(item => item.default === true);\n  }\n\n  if (navRouteItem) {\n    const { search = '', hash = '' } = window.location;\n    navRouteItem.routeHref = `${navRouteItem.path}${search}${hash}`;\n\n    const { pathParameter, productParameter } = navRouteItem;\n    navRouteItem.pathParameter = (Array.isArray(pathParameter) && pathParameter[0]) || pathParameter;\n    navRouteItem.productParameter = (Array.isArray(productParameter) && productParameter[0]) || productParameter;\n    navRouteItem.viewParameter =\n      (productParameter && `view${(Array.isArray(productParameter) && productParameter[0]) || productParameter}`) ||\n      productParameter;\n  }\n\n  return { ...(navRouteItem || {}) };\n};\n\n/**\n * Import a route component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst importView = component => {\n  if (!helpers.TEST_MODE) {\n    return React.lazy(() => import(/* webpackExclude: /\\.test\\.js$/ */ `../${component}.js`));\n  }\n\n  return p => <React.Fragment>{JSON.stringify({ ...p, component }, null, 2)}</React.Fragment>;\n};\n\nconst routerHelpers = {\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  importView,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  importView,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  Table as PfTable,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * FixMe: PF tables uses sequentially ordered lists/arrays to denote expandable sections\n * Ideal solution is to nest expandable sections within their respective parents. There\n * are scenarios where manipulating a sequentially ordered list/array can, and will,\n * lead to unintended results. And forces an equal, if not greater, amount of effort on\n * state tracking in the consuming GUI/app. Compounding the issue, the index is used/returned\n * during events for a particular row being \"expanded\". This ends up making after-the-fact\n * application of the expandable list/array items problematic since said index is\n * constantly updating/shifting as rows are dynamically added. Add in a \"not every row\n * needs to be expandable\" scenario, you can start to see the issues. All of that\n * effort means that in some cases it may actually be quicker to simply use PF styles and\n * a HTML table directly, bypassing PF-React entirely.\n *\n * Applying a React node as content in the sequentially ordered list/array appears to\n * automatically \"mount\" said node. How this handles in child components where subsequent\n * AJAX/XHR calls are called means you are potentially hitting an API with dozens of calls,\n * row dependent, even when a user may not expand the nested row/child. This could easily\n * be resolved by nesting and applying the expandable contents after-the-fact.\n */\n/**\n * FixMe: PF tables misalignment of the column headers list/array and row cells breaks the component\n * The related PF error for this is cryptic. An immediate solution would be to simply fix the error\n * messaging, or do a length check before consuming the lists/arrays. This happens when a consumer\n * places more or less column header cells than row cells.\n */\n/**\n * FixMe: PF tables break when an empty list/array is used for the column headers\n * This appears related to the mismatched column header and row cells. The solution is to simply not\n * render the header row instead of throwing an error. This is similar to how the empty rows\n * list/array is handled.\n */\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n * @fires onSort\n */\nclass Table extends React.Component {\n  state = {\n    isCollapsible: false,\n    isSortable: false,\n    sortBy: {},\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (\n      !_isEqualWith(prevProps.rows, rows, customizer) ||\n      !_isEqualWith(prevProps.columnHeaders, columnHeaders, customizer)\n    ) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * FixMe: PF table sort callback doesn't use a zero based index when expandable?\n   * Educated guess there's a cell count happening instead of \"[you have this many data/entry cells]\"\n   * This is really confusing to implement in a consuming application, especially on first\n   * implementation. Special \"collapsible index\" logic had to be implemented to compensate for this\n   * odd behavior.\n   */\n  /**\n   * On column sort\n   *\n   * @event onSort\n   * @param {object} params\n   * @param {number} params.index\n   * @param {string} params.direction\n   * @param {object} params.data\n   */\n  onSort = ({ index, direction, data = {} }) => {\n    const { isCollapsible, updatedColumnHeaders, updatedRows } = this.state;\n    const updatedIndex = isCollapsible ? index - 1 : index;\n\n    updatedRows.forEach(async ({ isOpen }, i) => {\n      if (isOpen === true) {\n        await this.onCollapse({ index: i, isOpen: false });\n      }\n    });\n\n    this.setState(\n      {\n        sortBy: {\n          index,\n          direction\n        }\n      },\n      () =>\n        updatedColumnHeaders[updatedIndex].onSort({\n          direction,\n          index: updatedIndex,\n          label: data?.column?.header?.label\n        })\n    );\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n    const updatedSort = {};\n    let isCollapsible = false;\n    let isSortable = false;\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        isCollapsible = true;\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell?.title !== undefined) {\n          const { title, ...settings } = cell;\n          rowObj.cells.push({ title, ...settings });\n        } else {\n          rowObj.cells.push({\n            title: (React.isValidElement(cell) && cell) || (typeof cell === 'object' && `${cell}`) || cell\n          });\n        }\n      });\n    });\n\n    columnHeaders.forEach((columnHeader, index) => {\n      if (columnHeader?.title !== undefined) {\n        const { onSort, sortActive, sortDirection, title, ...settings } = columnHeader;\n        const tempColumnHeader = {\n          title,\n          ...settings\n        };\n\n        if (onSort) {\n          isSortable = true;\n          tempColumnHeader.transforms = [...(tempColumnHeader?.transforms || []), sortable];\n          tempColumnHeader.onSort = onSort;\n\n          if (sortActive) {\n            updatedSort.sortBy = { index: isCollapsible ? index + 1 : index };\n            updatedSort.sortBy.direction = SortByDirection.asc;\n          }\n\n          if (sortDirection) {\n            updatedSort.sortBy = { ...updatedSort.sortBy, direction: sortDirection };\n          }\n        } else if (tempColumnHeader.transforms) {\n          tempColumnHeader.transforms = tempColumnHeader.transforms.filter(v => v !== sortable);\n        }\n\n        updatedColumnHeaders.push(tempColumnHeader);\n      } else {\n        updatedColumnHeaders.push({\n          title:\n            (React.isValidElement(columnHeader) && columnHeader) ||\n            (typeof columnHeader === 'object' && `${columnHeader}`) ||\n            columnHeader\n        });\n      }\n    });\n\n    this.setState({\n      isCollapsible,\n      isSortable,\n      updatedColumnHeaders,\n      updatedRows,\n      ...updatedSort\n    });\n  }\n\n  /**\n   * FixMe: PF Tables automatically applies an expandable className when using the \"onCollapse\" prop?\n   * Not every row may need to be expandable. In certain scenarios a table may have no expandable\n   * sections, however it appears the \"onCollapse\" styling, and additionally added \"table cells\" are still\n   * applied.\n   */\n  /**\n   * Apply props to table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { isCollapsible, isSortable, sortBy, updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    const pfTableProps = {};\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    if (isCollapsible) {\n      pfTableProps.onCollapse = (event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data });\n    }\n\n    if (isSortable) {\n      pfTableProps.sortBy = sortBy;\n      pfTableProps.onSort = (event, index, direction, data) => this.onSort({ event, index, direction, data });\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n          {...pfTableProps}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: Node,\n *     isHeader: boolean, variant: string, className: string, rows: Array, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        onSort: PropTypes.func,\n        sortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)]),\n        title: PropTypes.node.isRequired\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.instanceOf(Date),\n          PropTypes.shape({\n            title: PropTypes.oneOfType([PropTypes.node, PropTypes.instanceOf(Date)]).isRequired\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {Node|Function} props.icon\n * @param {Node} props.message\n * @param {string} props.tableHeading\n * @param {Node} props.title\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, variant: string, message: Node, title: Node, tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cellWidth, TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {Array} props.colWidth\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableSkeleton = ({ className, borders, colCount, colWidth, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map((value, index) => {\n    const updatedHeader = { title: <Skeleton size={SkeletonSize.md} /> };\n\n    if (typeof colWidth[index] === 'number') {\n      updatedHeader.transforms = [cellWidth(colWidth[index])];\n    }\n\n    return updatedHeader;\n  });\n\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />)\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: string,\n *     className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.arrayOf(PropTypes.number),\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: null,\n *     className: null, rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  colWidth: [],\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.RHEL;\n\nconst productId = null;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.RHEL;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.SOCKETS,\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'physicalSockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'hypervisorSockets',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value\n    },\n    {\n      id: 'cloudSockets',\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value\n    },\n    { id: 'thresholdSockets', chartType: 'threshold' }\n  ],\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'measurementType',\n      cell: (data = {}) => {\n        const { cloudProvider = {}, measurementType = {} } = data;\n        return (\n          <React.Fragment>\n            {translate('curiosity-inventory.measurementType', { context: measurementType.value })}{' '}\n            {(cloudProvider.value && (\n              <PfLabel color=\"purple\">\n                {translate('curiosity-inventory.cloudProvider', { context: cloudProvider.value })}\n              </PfLabel>\n            )) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'sockets',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: 'productName',\n      isSortable: false,\n      isWrappable: true\n    },\n    {\n      id: 'serviceLevel',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'quantity',\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: 'totalCapacity',\n      header: data => translate('curiosity-inventory.header', { context: ['subscriptions', data?.uom?.value] }),\n      isSortable: false,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: 'nextEventDate',\n      cell: data =>\n        (data?.nextEventDate?.value &&\n          helpers.isDate(data?.nextEventDate?.value) &&\n          moment.utc(data?.nextEventDate?.value).format('YYYY-DD-MM')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      selected: true\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  productContextFilterUom: true,\n  query: {\n    [RHSM_API_QUERY_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.CORES,\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialOption: RHSM_API_QUERY_UOM_TYPES.CORES,\n  initialGraphFilters: [\n    {\n      id: 'cores',\n      isOptional: true,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'sockets',\n      isOptional: true,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    { id: 'thresholdSockets', chartType: 'threshold', isOptional: true },\n    { id: 'thresholdCores', chartType: 'threshold', isOptional: true }\n  ],\n  initialGraphSettings: {},\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'sockets',\n      header: () => translate('curiosity-inventory.header', { context: ['sockets', 'OpenShift Container Platform'] }),\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'cores',\n      header: () => translate('curiosity-inventory.header', { context: ['cores', 'OpenShift Container Platform'] }),\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 25\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: 'productName',\n      isSortable: false,\n      isWrappable: true\n    },\n    {\n      id: 'serviceLevel',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'quantity',\n      isSortable: true,\n      cellWidth: 20,\n      isWrappable: true\n    },\n    {\n      id: 'totalCapacity',\n      header: data => translate('curiosity-inventory.header', { context: ['subscriptions', data?.uom?.value] }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: 'nextEventDate',\n      cell: data =>\n        (data?.nextEventDate?.value &&\n          helpers.isDate(data?.nextEventDate?.value) &&\n          moment.utc(data?.nextEventDate?.value).format('YYYY-DD-MM')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport numbro from 'numbro';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'coreHours',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    }\n  ],\n  initialGraphSettings: {\n    actionDisplay: (data = {}) => {\n      const {\n        meta: { totalCoreHours }\n      } = data;\n      let displayContent;\n\n      if (totalCoreHours) {\n        displayContent = translate('curiosity-graph.cardActionTotal', {\n          context: 'coreHours',\n          total: numbro(totalCoreHours)\n            .format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n            .toUpperCase()\n        });\n      }\n\n      return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data = {}) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'coreHours',\n      cell: data =>\n        (typeof data?.coreHours?.value === 'number' && Number.parseFloat(data?.coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 25\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport numbro from 'numbro';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'coreHours',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: 'line',\n      isStacked: false,\n      yAxisUseDataSet: true\n    },\n    {\n      id: 'instanceHours',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: 'line',\n      isStacked: false,\n      yAxisUseDataSet: true\n    }\n  ],\n  initialGraphSettings: {\n    actionDisplay: (data = {}) => {\n      const {\n        meta: { totalCoreHours }\n      } = data;\n      let displayContent;\n\n      if (totalCoreHours) {\n        displayContent = translate('curiosity-graph.cardActionTotal', {\n          context: 'coreHours',\n          total: numbro(totalCoreHours)\n            .format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n            .toUpperCase()\n        });\n      }\n\n      return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data = {}) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'coreHours',\n      cell: data =>\n        (typeof data?.coreHours?.value === 'number' && Number.parseFloat(data?.coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'instanceHours',\n      cell: data =>\n        (typeof data?.instanceHours?.value === 'number' && Number.parseFloat(data?.instanceHours?.value).toFixed(2)) ||\n        `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.SATELLITE;\n\nconst productId = null;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.SATELLITE;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'physicalSockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'hypervisorSockets',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value\n    },\n    {\n      id: 'cloudSockets',\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value\n    },\n    { id: 'thresholdSockets', chartType: 'threshold' }\n  ],\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'measurementType',\n      cell: (data = {}) => {\n        const { cloudProvider = {}, measurementType = {} } = data;\n        return (\n          <React.Fragment>\n            {translate('curiosity-inventory.measurementType', { context: measurementType.value })}{' '}\n            {(cloudProvider.value && (\n              <PfLabel color=\"purple\">\n                {translate('curiosity-inventory.cloudProvider', { context: cloudProvider.value })}\n              </PfLabel>\n            )) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'sockets',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      selected: true\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import { config as rhelConfig } from './product.rhel';\nimport { config as openshiftContainerConfig } from './product.openshiftContainer';\nimport { config as openshiftMetricsConfig } from './product.openshiftMetrics';\nimport { config as openshiftDedicatedConfig } from './product.openshiftDedicated';\nimport { config as satelliteProductConfig } from './product.satellite';\nimport { RHSM_API_PATH_ID_TYPES } from '../types/rhsmApiTypes';\nimport { helpers } from '../common';\n\nconst routes = [\n  {\n    id: 'rhel',\n    path: '/rhel',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL }],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['insights'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-arm',\n    path: '/rhel-arm',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_ARM],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_ARM }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-ibmpower',\n    path: '/rhel-ibmpower',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-ibmz',\n    path: '/rhel-ibmz',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-x86',\n    path: '/rhel-x86',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_X86],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_X86 }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'openshift-container',\n    path: '/openshift-container',\n    pathParameter: [openshiftContainerConfig.productId, openshiftMetricsConfig.productId],\n    productParameter: [openshiftContainerConfig.productGroup, openshiftMetricsConfig.productGroup],\n    productConfig: [openshiftContainerConfig, openshiftMetricsConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewOpenShiftContainer'\n  },\n  {\n    id: 'openshift-dedicated',\n    path: '/openshift-dedicated',\n    pathParameter: [openshiftDedicatedConfig.productId],\n    productParameter: [openshiftDedicatedConfig.productGroup],\n    productConfig: [openshiftDedicatedConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewOpenShiftDedicated'\n  },\n  {\n    id: 'satellite',\n    path: '/satellite',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [{ ...satelliteProductConfig, productId: RHSM_API_PATH_ID_TYPES.SATELLITE }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'satellite-capsule',\n    path: '/satellite-capsule',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE_CAPSULE],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [{ ...satelliteProductConfig, productId: RHSM_API_PATH_ID_TYPES.SATELLITE_CAPSULE }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'satellite-server',\n    path: '/satellite-server',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE_SERVER],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [{ ...satelliteProductConfig, productId: RHSM_API_PATH_ID_TYPES.SATELLITE_SERVER }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'optin',\n    path: '/optin',\n    pathParameter: null,\n    productParameter: null,\n    productConfig: null,\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'optinView/optinView'\n  },\n  {\n    id: 'missing',\n    path: '/',\n    pathParameter: null,\n    productParameter: null,\n    productConfig: null,\n    redirect: '/',\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: true,\n    component: 'productView/productViewMissing'\n  }\n];\n\nexport { routes as default, routes };\n","import { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from './reduxHelpers';\n\n/**\n * Parse a query object against a schema for specific RHSM endpoints.\n *\n * @param {object} query\n * @param {object} queries\n * @returns {{graphTallyQuery: object, inventoryHostsQuery: object, inventorySubscriptionsQuery: object,\n *     query: object, inventoryGuestsQuery: object, toolbarQuery: object}}\n */\nconst parseRhsmQuery = (query = {}, queries = {}) => {\n  const { graphTallyQuery, inventoryGuestsQuery, inventoryHostsQuery, inventorySubscriptionsQuery } = queries;\n\n  const updatedGraphTallyQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES);\n  const updatedInventoryGuestsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES\n  );\n  const updatedInventoryHostsQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES);\n  const updatedInventorySubscriptionsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES\n  );\n\n  return {\n    query,\n    graphTallyQuery: { ...updatedGraphTallyQuery, ...graphTallyQuery },\n    inventoryGuestsQuery: { ...updatedInventoryGuestsQuery, ...inventoryGuestsQuery },\n    inventoryHostsQuery: { ...updatedInventoryHostsQuery, ...inventoryHostsQuery },\n    inventorySubscriptionsQuery: { ...updatedInventorySubscriptionsQuery, ...inventorySubscriptionsQuery },\n    toolbarQuery: query\n  };\n};\n\nconst apiQueries = {\n  parseRhsmQuery\n};\n\nexport { apiQueries as default, apiQueries };\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(({ schema = {}, data, customResponseValue, keyPrefix: prefix }) => {\n    const isArray = Array.isArray(data);\n    const updatedData = (isArray && data) || (data && [data]) || [];\n    const [generatedSchema = {}] = setResponseSchemas([schema]);\n    const parsedResponse = [];\n\n    updatedData.forEach((value, index) => {\n      const generateReflectedData = ({ dataObj, keyPrefix = '', customValue = null, update = helpers.noop }) => {\n        const updatedDataObj = {};\n\n        Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n          const casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n          let val = dataObjValue;\n\n          if (typeof val === 'number') {\n            val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n          }\n\n          if (typeof customValue === 'function') {\n            updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n          } else {\n            updatedDataObj[casedDataObjKey] = val;\n          }\n        });\n\n        update(updatedDataObj);\n      };\n\n      generateReflectedData({\n        keyPrefix: prefix,\n        dataObj: { ...generatedSchema, ...value },\n        customValue: customResponseValue,\n        update: generatedData => parsedResponse.push(generatedData)\n      });\n    });\n\n    parsedResponses.push(parsedResponse);\n  });\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 400 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    delete updatedMeta.data;\n    delete updatedMeta.id;\n    delete updatedMeta.query;\n\n    return {\n      meta: { ...updatedMeta },\n      metaData: meta.data,\n      metaId: meta.id,\n      metaQuery: meta.query\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (action.meta && action.meta.id && { [action.meta.id]: { ...baseState, ...data } }) || { ...baseState, ...data };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { useSelector as UseSelector, shallowEqual } from 'react-redux';\nimport { store } from '../store';\nimport { helpers } from '../../common/helpers';\n\n/**\n * FixMe: Appears to be an issue in trying to use Redux Promise with the default \"useDispatch\"\n */\n/**\n * Wrapper for store.dispatch, emulating useDispatch.\n *\n * @returns {Function}\n */\nconst useDispatch = () => dispatchEvent => store.dispatch(dispatchEvent);\n\n/**\n * Wrapper for Redux hook, useSelector. Applies test mode and a fallback value.\n *\n * @param {Function} selector\n * @param {*} value\n * @param {object} options\n * @returns {*}\n */\nconst useSelector = (selector, value = null, options = {}) => {\n  if (helpers.TEST_MODE) {\n    return value;\n  }\n\n  return UseSelector(selector, options.equality) ?? value;\n};\n\nconst reactReduxHooks = {\n  shallowEqual,\n  useDispatch,\n  useSelector\n};\n\nexport { reactReduxHooks as default, reactReduxHooks, shallowEqual, useDispatch, useSelector };\n","import { reactReduxHooks } from './useReactRedux';\nimport { rhsmTypes } from '../types/rhsmTypes';\nimport { rhsmServices } from '../../services/rhsmServices';\n\n/**\n * Get an updated store RHSM response from message reporting.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst useGetMessageReports = (id = null, query = {}) =>\n  reactReduxHooks.useDispatch()({\n    type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM,\n    payload: rhsmServices.getGraphReports(id, query, { cancelId: 'messageReport' }),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActionsHooks = {\n  useGetMessageReports\n};\n\nexport { rhsmActionsHooks as default, rhsmActionsHooks, useGetMessageReports };\n","import { reactReduxHooks } from './useReactRedux';\nimport { rhsmActionsHooks } from './useRhsmActions';\nimport { rhsmSelectorsHooks } from './useRhsmSelectors';\n\nconst storeHooks = {\n  reactRedux: reactReduxHooks,\n  rhsmActions: rhsmActionsHooks,\n  rhsmSelectors: rhsmSelectorsHooks\n};\n\nexport { storeHooks as default, storeHooks, reactReduxHooks, rhsmActionsHooks, rhsmSelectorsHooks };\n","import { useSelector } from 'react-redux';\nimport { useRouteDetail } from '../../components/router/routerContext';\nimport { reduxSelectors } from '../selectors';\n\n/**\n * Get app messages selector results.\n *\n * @param {object} options\n * @param {Function} options.useRouteDetail\n * @param {Function} options.useSelector\n * @returns {object}\n */\nconst useAppMessages = ({\n  useRouteDetail: useAliasRouteDetail = useRouteDetail,\n  useSelector: useAliasSelector = useSelector\n} = {}) => {\n  const { pathParameter: productId, productParameter: viewId } = useAliasRouteDetail() || {};\n  const result = useAliasSelector(state => reduxSelectors.appMessages.appMessages(state, { productId, viewId }));\n  return {\n    ...result\n  };\n};\n\nconst rhsmSelectorsHooks = {\n  useAppMessages\n};\n\nexport { rhsmSelectorsHooks as default, rhsmSelectorsHooks, useAppMessages };\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Hide platform global filter.\n *\n * @param {boolean} isHidden\n * @returns {{Function}}\n */\nconst hideGlobalFilter = isHidden => ({\n  type: platformTypes.PLATFORM_GLOBAL_FILTER_HIDE,\n  payload: platformServices.hideGlobalFilter(isHidden)\n});\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for changing routes via the left-nav navigation.\n *\n * @param {string} id\n * @param {object} options\n * @param {string} options.appName\n * @param {boolean} options.secondaryNav\n * @returns {Function}\n */\nconst setAppNav = (id, { appName, secondaryNav } = {}) => dispatch =>\n  dispatch({\n    type: platformTypes.PLATFORM_SET_NAV,\n    payload: platformServices.setAppNav(id, { appName, secondaryNav }),\n    meta: {\n      id,\n      appName,\n      secondaryNav\n    }\n  });\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsmServices';\n\n/**\n * Get a combined RHSM response from reporting and capacity.\n *\n * @param {string} id\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphReportsCapacity = (id = null, query = {}, options = {}) => dispatch => {\n  const { cancelId = 'graphReportsCapacity' } = options;\n\n  return dispatch({\n    type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n    payload: Promise.all([\n      rhsmServices.getGraphReports(id, query, { cancelId }),\n      rhsmServices.getGraphCapacity(id, query, { cancelId })\n    ]),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n};\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n    payload: rhsmServices.getHostsInventory(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n    payload: rhsmServices.getHostsInventoryGuests(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a RHSM response from message reporting.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getMessageReports = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM,\n    payload: rhsmServices.getGraphReports(id, query, { cancelId: 'messageReport' }),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\n/**\n * Get a subscriptions response from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getSubscriptionsInventory = (id = null, query = {}) => dispatch =>\n  dispatch({\n    type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM,\n    payload: rhsmServices.getSubscriptionsInventory(id, query),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActions = {\n  getGraphReportsCapacity,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n\nexport {\n  rhsmActions as default,\n  rhsmActions,\n  getGraphReportsCapacity,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { rbacConfig as permissions } from '../config';\nimport { getUser, getUserPermissions } from './platformServices';\nimport { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * Apply an emulated API response to the platforms getUser method.\n *\n * @returns {Promise<{data: {permissions: (void|*[]), user: void}, message: string, status: number}>}\n */\nconst authorizeUser = async () => {\n  const updatedPermissions = Object.keys(permissions);\n  let message = '{ auth.getUser, getUserPermissions } = insights.chrome';\n  let userData;\n  let userPermissions;\n\n  try {\n    userData = await getUser();\n\n    if (updatedPermissions.length) {\n      const allPermissions = await Promise.all(updatedPermissions.map(app => getUserPermissions(app)));\n\n      if (Array.isArray(allPermissions)) {\n        userPermissions = [...allPermissions.flat()];\n      }\n    } else {\n      userPermissions = await getUserPermissions();\n    }\n  } catch (e) {\n    message = e.message;\n  }\n\n  if (_isPlainObject(userData) && Object.keys(userData).length) {\n    return Promise.resolve({ data: { user: userData, permissions: userPermissions || [] }, message, status: 200 });\n  }\n\n  const emulatedErrorResponse = {\n    ...new Error(message),\n    message,\n    status: 418\n  };\n\n  return Promise.reject(emulatedErrorResponse);\n};\n\n/**\n * Return a platform locale value from a cookie.\n *\n * @private\n * @returns {{value: string, key: string | null}|null}\n */\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\n/**\n * Return platform locale.\n *\n * @returns {Promise<{data: void}>}\n */\nconst getLocale = () => {\n  const defaultLocale = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = (options = {}) => {\n  const { cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport {\n  userServices as default,\n  userServices,\n  authorizeUser,\n  getLocale,\n  logoutUser,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get an emulated API response from the platforms \"getUser\" method.\n *\n * @returns {Function}\n */\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userServices.authorizeUser()\n  });\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userServices.getLocale()\n});\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn = (query = {}) => dispatch =>\n  dispatch({\n    type: userTypes.UPDATE_USER_OPTIN,\n    payload: userServices.updateAccountOptIn(query),\n    meta: {\n      query,\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsErrorDescription'),\n          dismissable: true\n        },\n        fulfilled: {\n          variant: 'success',\n          title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n          description: translate('curiosity-optin.notificationsSuccessDescription'),\n          dismissable: true,\n          autoDismiss: false\n        }\n      }\n    }\n  });\n\nconst userActions = { authorizeUser, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport {\n  userActions as default,\n  userActions,\n  authorizeUser,\n  getLocale,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { store } from './store';\nimport { reduxActions } from './actions';\nimport { reduxHelpers, apiQueries } from './common';\nimport { storeHooks } from './hooks';\nimport { reduxReducers } from './reducers';\nimport { reduxSelectors } from './selectors';\nimport { reduxTypes } from './types';\n\n/**\n * Wrapper for applying Router Dom withRouter and Redux connect.\n *\n * @param {Function} mapStateToProps\n * @param {Function} mapDispatchToProps\n * @returns {Function}\n */\nconst connectRouter = (mapStateToProps, mapDispatchToProps) => component =>\n  withRouter(connect(mapStateToProps, mapDispatchToProps)(component));\n\nexport {\n  apiQueries,\n  connect,\n  connectRouter,\n  reduxActions,\n  reduxHelpers,\n  reduxReducers,\n  reduxSelectors,\n  reduxTypes,\n  store,\n  storeHooks\n};\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}}}\n */\nconst initialState = {\n  legend: {},\n  reportCapacity: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          ...action.legend\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [{ ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM }],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { inventoryTypes } from '../types';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{subscriptionsInventory: {}, tabs: {}, hostsInventory: {}, hostsGuests: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {},\n  subscriptionsInventory: {},\n  tabs: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system and subscriptions inventory to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inventoryTypes.SET_INVENTORY_TAB:\n      return reduxHelpers.setStateProp(\n        'tabs',\n        {\n          ...action.tabs\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n          { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM },\n          { ref: 'subscriptionsInventory', type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{report: {}}}\n */\nconst initialState = {\n  report: {}\n};\n\n/**\n * Generated daily observer/reducer for report to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst messagesReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [{ ref: 'report', type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM }],\n    state,\n    action\n  );\n\nmessagesReducer.initialState = initialState;\n\nexport { messagesReducer as default, initialState, messagesReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, userTypes } from '../types';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{session: {errorCodes: Array, locale: string}, optin: {}}}\n */\nconst initialState = {\n  optin: {},\n  session: {\n    errorCodes: [],\n    locale: null\n  }\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(\n          reduxHelpers.getDataFromResults(action),\n          [rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA],\n          []\n        );\n\n        return reduxHelpers.setStateProp(\n          'session',\n          {\n            error: true,\n            errorCodes: errorCodes.map(value => value[rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE]),\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            locale: state.session.locale,\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'session', type: userTypes.USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { routerHelpers } from '../../components/router';\nimport { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphTallyQuery: {}, inventoryHostsQuery: {}, inventorySubscriptionsQuery: {}, query: {},\n *     inventoryGuestsQuery: {}}}\n */\nconst initialState = {\n  query: {},\n  graphTallyQuery: {},\n  inventoryGuestsQuery: {},\n  inventoryHostsQuery: {},\n  inventorySubscriptionsQuery: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST:\n      const updateResetQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n\n          delete productQuery[RHSM_API_QUERY_TYPES.DIRECTION];\n          delete productQuery[RHSM_API_QUERY_TYPES.SORT];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateResetQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateResetQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updateClearQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateClearQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateClearQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'graphTallyQuery',\n        {\n          [action.viewId]: {\n            ...state.graphTallyQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.START_DATE]: action[RHSM_API_QUERY_TYPES.START_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.END_DATE]: action[RHSM_API_QUERY_TYPES.END_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: action[RHSM_API_QUERY_TYPES.DISPLAY_NAME]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport messagesReducer from './messagesReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  messages: messagesReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  messagesReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{data: {object}}}\n */\nconst selectorCache = { data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  report: state.messages?.report?.[props.productId],\n  viewId: props.viewId,\n  productId: props.productId\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => ({\n  ...props.query,\n  ...state.view?.query?.[props.productId],\n  ...state.view?.query?.[props.viewId]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{appMessages: {cloudigradeMismatch: boolean}}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (data, query = {}) => {\n  const { viewId = null, productId = null, report = {} } = data || {};\n  const appMessages = {\n    cloudigradeMismatch: false\n  };\n\n  const cache = (viewId && productId && selectorCache.data[`${viewId}_${productId}`]) || undefined;\n\n  Object.assign(appMessages, { ...cache });\n\n  // Scan Tally response for Cloud Meter flags\n  if (report.fulfilled && appMessages.cloudigradeMismatch !== true) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA]: reportData = [] } = report.data || {};\n\n    const cloudigradeMismatch = reportData\n      .reverse()\n      .find(\n        ({ [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]: mismatch }) =>\n          mismatch === true\n      );\n\n    appMessages.cloudigradeMismatch = cloudigradeMismatch !== undefined;\n\n    selectorCache.data[`${viewId}_${productId}`] = {\n      ...appMessages\n    };\n  }\n\n  return { appMessages, query };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{appMessages: {cloudigradeMismatch: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst appMessagesSelectors = {\n  appMessages: selector,\n  makeAppMessages: makeSelector\n};\n\nexport { appMessagesSelectors as default, appMessagesSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\nimport { rbacConfig as permissions } from '../../config';\nimport {\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES as APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES\n} from '../../types/platformApiTypes';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @returns {object}\n */\nconst statePropsFilter = state => ({\n  ...state.user?.session\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{session: {entitled: boolean, permissions: object, authorized: object, admin: boolean,\n *     error: boolean}}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter], response => {\n  const { error = false, fulfilled = false, data = {}, ...rest } = response || {};\n  const updatedSession = {\n    ...rest,\n    admin: false,\n    entitled: false,\n    error,\n    authorized: {},\n    permissions: {}\n  };\n\n  if (!error && fulfilled) {\n    const { user = {}, permissions: responsePermissions = [] } = data;\n\n    updatedSession.admin =\n      user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]?.[\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER\n      ]?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN] || false;\n\n    updatedSession.entitled =\n      user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]?.[APP_TYPES.SUBSCRIPTIONS]?.[\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED\n      ] || false;\n\n    // All permissions breakdown\n    responsePermissions.forEach(\n      ({\n        [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n        [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n      }) => {\n        const [app = '', resource, operation] = permission?.split(':') || [];\n\n        if (!updatedSession.permissions[app]) {\n          updatedSession.permissions[app] = {\n            all: false,\n            resources: {}\n          };\n        }\n\n        if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n          updatedSession.permissions[app].all = true;\n        }\n\n        if (!updatedSession.permissions[app].resources[resource]) {\n          updatedSession.permissions[app].resources[resource] = {};\n        }\n\n        updatedSession.permissions[app].resources[resource][operation] = definitions;\n      }\n    );\n\n    // Alias specific app permissions checks\n    Object.entries(permissions).forEach(([key, { permissions: resourcePermissions }]) => {\n      updatedSession.authorized[key] = updatedSession.permissions[key]?.all || false;\n\n      resourcePermissions.forEach(({ resource: res, operation: op }) => {\n        if (updatedSession.permissions[key]?.resources?.[res]?.[op]) {\n          updatedSession.authorized[key] = true;\n        }\n      });\n    });\n  }\n\n  return { session: updatedSession };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{session: {entitled: boolean, permissions: Array, authorized: boolean, admin: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst userSessionSelectors = {\n  userSession: selector,\n  makeUserSession: makeSelector\n};\n\nexport { userSessionSelectors as default, userSessionSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsGuests?.[props.id]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter], response => {\n  const { metaId, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    status: responseData.status\n  };\n\n  if (responseData.fulfilled) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [] } = responseData.data || {};\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n      data: listData,\n      customResponseValue: customInventoryValue\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    updatedResponseData.listData = updatedListData;\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst guestsListSelectors = {\n  guestsList: selector,\n  makeGuestsList: makeSelector\n};\n\nexport { guestsListSelectors as default, guestsListSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport LruCache from 'lru-cache';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.graph?.reportCapacity?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { graphTallyQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      graphTallyQuery: { ...state.view?.graphTallyQuery?.[props.viewId] }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    graphData: {},\n    meta: {},\n    query,\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, responseMetaQuery)) {\n    const [report, capacity] = responseData.data;\n    const reportData = report?.[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA] || [];\n    const reportMeta = report?.[rhsmApiTypes.RHSM_API_RESPONSE_META] || {};\n    const capacityData = capacity?.[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA] || [];\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Reporting graph entries\n    const customReportValue = (data, key, presetData) => ({\n      ...presetData,\n      hasData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_DATA],\n      hasCloudigradeData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_DATA],\n      hasCloudigradeMismatch: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]\n    });\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y,\n      hasInfinite: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE]\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment.utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE]).startOf('day').toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY =\n                (Number.isInteger(graphDataObj[graphDataObjKey]) &&\n                  Number.parseInt(graphDataObj[graphDataObjKey], 10)) ||\n                Number.parseFloat(Number.parseFloat(graphDataObj[graphDataObjKey]).toFixed(2));\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value }, customValue: customReportValue });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Generate normalized properties\n    const [updatedReportMeta] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n      data: reportMeta\n    });\n\n    const [meta = {}] = updatedReportMeta || [];\n\n    // Update response and cache\n    Object.assign(updatedResponseData.meta, meta);\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst graphCardSelectors = {\n  graphCard: selector,\n  makeGraphCard: makeSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport LruCache from 'lru-cache';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventoryHostsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventoryHostsQuery: {\n        ...state.view?.inventoryHostsQuery?.[props.productId],\n        ...state.view?.inventoryHostsQuery?.[props.viewId]\n      }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Note: We use an in-memory cache to provide the user a pleasant UX experience. To\n * aid in that UX we need \"pending\" to fire in scenarios that are not loaded in-memory. Because\n * we load the cache first there are scenarios where the previous XHR call is still in state\n * when a subsequent fulfilled XHR call comes through. Without the _isEqual(query, metaQuery) check\n * the overlap of the prior fulfilled call interferes with the pending of the subsequent call.\n */\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, metaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.CLOUD_PROVIDER:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.HARDWARE:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.MEASUREMENT:\n          return value?.toLowerCase() || null;\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst inventoryListSelectors = {\n  inventoryList: selector,\n  makeInventoryList: makeSelector\n};\n\nexport { inventoryListSelectors as default, inventoryListSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport LruCache from 'lru-cache';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * ToDo: Consider consolidating inventory selectors, and/or create API specific selectors, i.e. RHSM, etc\n * Breaking out the inventory selectors is a temporary solution until the API is finalized. Aspects\n * of the caching and applying the API schemas is now consistent enough to allow for grouping/refinement.\n */\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.subscriptionsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventorySubscriptionsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventorySubscriptionsQuery: {\n        ...state.view?.inventorySubscriptionsQuery?.[props.productId],\n        ...state.view?.inventorySubscriptionsQuery?.[props.viewId]\n      }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, metaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES.NEXT_EVENT_DATE:\n          return (value && new Date(value)) || null;\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES.UOM:\n          return value?.toLowerCase() || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst subscriptionsListSelectors = {\n  subscriptionsList: selector,\n  makeSubscriptionsList: makeSelector\n};\n\nexport { subscriptionsListSelectors as default, subscriptionsListSelectors, selector, makeSelector };\n","import appMessagesSelectors from './appMessagesSelectors';\nimport guestsListSelectors from './guestsListSelectors';\nimport graphCardSelectors from './graphCardSelectors';\nimport inventoryListSelectors from './inventoryListSelectors';\nimport subscriptionsListSelectors from './subscriptionsListSelectors';\nimport userSelectors from './userSelectors';\n\nconst reduxSelectors = {\n  appMessages: appMessagesSelectors,\n  guestsList: guestsListSelectors,\n  graphCard: graphCardSelectors,\n  inventoryList: inventoryListSelectors,\n  subscriptionsList: subscriptionsListSelectors,\n  user: userSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { platformApiTypes } from '../../types';\n\n/**\n * Modify actions' payload for privacy.\n *\n * @param {object} action\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeActionHeaders = ({ payload, ...action }) => {\n  if (payload) {\n    let updatedPayload = { ...payload, headers: {} };\n\n    if (Array.isArray(payload)) {\n      updatedPayload = payload.map(({ headers, ...obj }) => ({ ...obj, headers: {} }));\n    }\n\n    return { payload: updatedPayload, ...action };\n  }\n\n  return { ...action };\n};\n\n/**\n * Modify actions' payload data for privacy.\n *\n * @param {object} action\n * @param {string} action.type\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeData = ({ type, payload, ...action }) => {\n  const removeUserIdentity = obj => {\n    if (obj?.data?.user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]) {\n      return {\n        ...obj,\n        data: {\n          ...obj.data,\n          user: {\n            ...obj.data.user,\n            [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]: {\n              ...obj.data.user[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY],\n              [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]: {}\n            }\n          }\n        }\n      };\n    }\n\n    return undefined;\n  };\n\n  const updatedPayload = removeUserIdentity(payload) || payload;\n  const updatedAction = removeUserIdentity(action) || action;\n\n  if (updatedPayload) {\n    return { type, payload: updatedPayload, ...updatedAction };\n  }\n\n  return { type, ...updatedAction };\n};\n\n/**\n * Return existing sessionStorage log.\n *\n * @param {string} id\n * @param {number} limit\n * @returns {Array}\n */\nconst getActions = (id, limit) => {\n  const { sessionStorage } = window;\n  const item = sessionStorage.getItem(id);\n  let parsedItems = (item && (JSON.parse(item) || {})?.actions) || [];\n\n  if (parsedItems?.length && limit > 0) {\n    parsedItems = parsedItems.slice(limit * -1);\n  }\n\n  return parsedItems;\n};\n\n/**\n * Store actions against an id in sessionStorage.\n *\n * @param {object} action\n * @param {object} config\n * @param {number} config.id\n * @param {number} config.limit\n */\nconst recordAction = (action, { id, limit, ...config }) => {\n  const { navigator, sessionStorage } = window;\n  const items = getActions(id, limit) || [];\n  const priorItem = items[items.length - 1];\n  const updatedAction = sanitizeData(sanitizeActionHeaders(action));\n  const actionObj = {\n    diff: 0,\n    timestamp: Date.now(),\n    action: updatedAction\n  };\n\n  if (priorItem && priorItem.timestamp) {\n    actionObj.diff = actionObj.timestamp - priorItem.timestamp;\n  }\n\n  items.push(actionObj);\n  sessionStorage.setItem(\n    id,\n    JSON.stringify({\n      browser: navigator.userAgent,\n      timestamp: new Date().toLocaleString(),\n      ...config,\n      actions: items\n    })\n  );\n};\n\n/**\n * Expose settings and record middleware.\n *\n * @param {object} config\n * @returns {Function}\n */\nconst actionRecordMiddleware = (config = {}) => () => next => action => {\n  recordAction(action, {\n    id: 'actionRecordMiddleware/v1',\n    limit: 100,\n    ...config\n  });\n\n  return next(action);\n};\n\nexport { actionRecordMiddleware as default, actionRecordMiddleware };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { actionRecordMiddleware } from './actionRecordMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  actionRecordMiddleware({\n    id: process.env.REACT_APP_UI_LOGGER_ID,\n    app: { version: process.env.REACT_APP_UI_VERSION }\n  }),\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","const SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","const SET_INVENTORY_TAB = 'SET_INVENTORY_TAB';\n\n/**\n * Inventory action, reducer types.\n *\n * @type {{SET_INVENTORY_TAB: string}}\n */\nconst inventoryTypes = {\n  SET_INVENTORY_TAB\n};\n\nexport { inventoryTypes as default, inventoryTypes, SET_INVENTORY_TAB };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_GLOBAL_FILTER_HIDE = 'PLATFORM_GLOBAL_FILTER_HIDE';\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_GLOBAL_FILTER_HIDE: string, PLATFORM_INIT: string,\n *     PLATFORM_SET_NAV: string, PLATFORM_CLEAR_NOTIFICATIONS: string, PLATFORM_ADD_NOTIFICATION: string,\n *     PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n","import { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\nconst SET_QUERY_RESET_INVENTORY_LIST = 'SET_QUERY_RESET_INVENTORY_LIST';\n\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.END_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.END_DATE}`,\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.START_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.START_DATE}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\nconst SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DISPLAY_NAME}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\nconst SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES: object, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string,\n *     SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES: object, SET_QUERY_RESET_INVENTORY_LIST: string}}\n */\nconst queryTypes = {\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_AUTH: string, USER_LOCALE: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_AUTH,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { inventoryTypes } from './inventoryTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  inventory: inventoryTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  inventoryTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","const SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","const GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\nconst GET_MESSAGE_REPORTS_RHSM = 'GET_MESSAGE_REPORTS_RHSM';\nconst GET_SUBSCRIPTIONS_INVENTORY_RHSM = 'GET_SUBSCRIPTIONS_INVENTORY_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_MESSAGE_REPORTS_RHSM: string,\n * GET_HOSTS_INVENTORY_GUESTS_RHSM: string, GET_SUBSCRIPTIONS_INVENTORY_RHSM: string,\n * GET_HOSTS_INVENTORY_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n","import axios, { CancelToken } from 'axios';\nimport LruCache from 'lru-cache';\nimport { platformServices } from './platformServices';\n\n/**\n * Apply consistent service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {object}\n */\nconst cancelTokens = {};\n\n/**\n * Cache Axios service call responses.\n *\n * @type {object}\n */\nconst responseCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_AJAX_CACHE, 10),\n  max: 100,\n  updateAgeOnGet: true\n});\n\n/**\n * Call platform \"getUser\" auth method, and apply service config. Service configuration\n * includes the ability to cancel all and specific calls, and cache specific calls with\n * their success response only. The cache will refresh its timeout on continuous calls.\n * To reset it a user will either need to refresh the page or wait the \"maxAge\".\n *\n * @param {object} config\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n\n  const updatedConfig = { ...config };\n  const axiosInstance = axios.create();\n\n  if (updatedConfig.cancel === true) {\n    const cancelTokensId = `${updatedConfig.cancelId || ''}-${updatedConfig.url}`;\n\n    if (cancelTokens[cancelTokensId]) {\n      cancelTokens[cancelTokensId].cancel('cancelled request');\n    }\n\n    cancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = cancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  if (updatedConfig.cache === true) {\n    const sortedParams = Object.entries(updatedConfig.params).sort(([a], [b]) => a.localeCompare(b));\n    const cacheId = `${updatedConfig.url}-${JSON.stringify(sortedParams)}`;\n    const cachedResponse = responseCache.get(cacheId);\n\n    if (cachedResponse) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          ...cachedResponse,\n          status: 304,\n          statusText: 'Not Modified',\n          config: adapterConfig\n        });\n    }\n\n    axiosInstance.interceptors.response.use(response => {\n      responseCache.set(cacheId, response);\n      return response;\n    });\n\n    delete updatedConfig.cache;\n  }\n\n  return axiosInstance(serviceConfig(updatedConfig));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import _set from 'lodash/set';\nimport { helpers } from '../common';\nimport {\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES\n} from '../types/platformApiTypes';\n\n/**\n * Basic user authentication.\n *\n * @returns {Promise<void>}\n */\nconst getUser = async () => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE &&\n        _set(\n          {},\n          [\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n          ],\n          process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n        )) ||\n      (await insights.chrome.auth.getUser())\n    );\n  } catch (e) {\n    throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n  }\n};\n\n/**\n * FixMe: revert this back towards async/await\n * Removed because there appears to be some quirky behavior where permissions will not come through\n * unless the function, and/or await are specifically returned, i.e. \"return await insights.chrome...\".\n */\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @returns {Promise<void>}\n */\nconst getUserPermissions = appName => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE && [\n        {\n          [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_ONE\n        },\n        {\n          [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_TWO\n        }\n      ]) ||\n      insights.chrome.getUserPermissions(appName)\n    );\n  } catch (e) {\n    throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Disables the Platform's global filter display.\n *\n * @param {boolean} isHidden\n * @returns {Promise<*>}\n */\nconst hideGlobalFilter = async (isHidden = true) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.hideGlobalFilter(isHidden);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<void>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n// FixMe: Revert catch to throwing an error. Relaxed for development\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<void>}\n */\nconst setAppName = async (name = null) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.identifyApp(name);\n  } catch (e) {\n    const error = `{ identifyApp } = insights.chrome, ${e.message}`;\n    await Promise.reject(error);\n  }\n};\n\n/**\n * Set app routes via the platform left-nav navigation.\n *\n * @param {string} id The navigation ID associated with internal route config, and external platform nav config\n * @param {object} options\n * @param {string} options.appName\n * @param {boolean} options.secondaryNav\n * @returns {Promise<object>}\n */\nconst setAppNav = async (id, { appName = helpers.UI_NAME, secondaryNav = true } = {}) => {\n  const { insights } = window;\n  try {\n    return await insights.chrome.appNavClick({ id, secondaryNav, parentId: appName });\n  } catch (e) {\n    throw new Error(`{ appNavClick } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = {\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n","import { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getApiVersion = (options = {}) => {\n  const { cache = false, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {string} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {string} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {object} links\n * @apiSuccess {object} meta\n * @apiSuccess {string} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {string} meta.product\n * - RHEL\n * @apiSuccess {number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 12\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 4\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000.057890,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"has_cloudigrade_data\": true,\n *           \"has_cloudigrade_mismatch\": true,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\",\n *         \"total_core_hours\": 30500.04,\n *         \"total_instance_hours\": 35\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.20,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.15,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.11,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.32,\n *           \"instance_hours\": 23\n *         },\n *         {\n *           \"date\": \"2020-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.42,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 999.06,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\",\n *         \"total_core_hours\": 200.03,\n *         \"total_instance_hours\": 26\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 400,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\",\n *         \"total_core_hours\": 2050.04\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 500\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-123456789012\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.05,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 70,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6N\",\n *           \"cloud_provider\": \"AZURE\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.00,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"CLOUD\",\n *           \"measurement_type\": \"CLOUD\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6M\",\n *           \"cores\": 4,\n *           \"core_hours\": 1000.20,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 10,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"display_name\": \"dolor.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6L\",\n *           \"cores\": 4,\n *           \"core_hours\": 1001.60,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 1,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"display_name\": \"lorem.test.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YX\",\n *           \"cores\": 4,\n *           \"core_hours\": 999.60,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"display_name\": \"lorem.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YZ\",\n *           \"cores\": 0,\n *           \"core_hours\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"display_name\": \"lorem.another.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YA\",\n *           \"cores\": 0,\n *           \"core_hours\": 0.01,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-21T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YB\",\n *           \"cores\": 0,\n *           \"core_hours\": 999.61,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-22T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YC\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-23T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YD\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-24T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YEE\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-26T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YF\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-29T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 11\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = false, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', id),\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/subscriptions/products/:product_id Get RHSM subscriptions table/inventory data\n * @apiDescription Retrieve subscriptions table/inventory data.\n *\n * Reference [RHSM for subscriptions table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"sku\": \"RH00011\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" },\n *              { \"id\": \"ipsum\", \"number\": \"1234567890\" },\n *              { \"id\": \"lorem\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 3,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\"\n *         },\n *         {\n *           \"sku\": \"RH00010\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server\",\n *           \"service_level\": \"Self-Support\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [],\n *           \"next_event_date\": \"2020-04-02T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 15,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\"\n *         },\n *         {\n *           \"sku\": \"RH00009\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription End\",\n *           \"quantity\": 3000,\n *           \"physical_capacity\": 2,\n *           \"virtual_capacity\": 2,\n *           \"total_capacity\": 4,\n *           \"uom\": \"Cores\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API subscriptions data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getSubscriptionsInventory = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_SUBSCRIPTIONS}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\nconst rhsmServices = {\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getSubscriptionsInventory\n};\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getSubscriptionsInventory\n};\n","import { platformApiTypes } from './platformApiTypes';\nimport { rhsmApiTypes } from './rhsmApiTypes';\n\nconst apiTypes = {\n  platformApi: platformApiTypes,\n  rhsmApi: rhsmApiTypes\n};\n\nexport { apiTypes as default, apiTypes, platformApiTypes, rhsmApiTypes };\n","/**\n * Platform response for appNavClick.\n *\n * @type {{ACTIVE_APP: string}}\n */\nconst PLATFORM_API_RESPONSE_NAV_TYPES = {\n  ACTIVE_APP: 'activeApp'\n};\n\n/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string, RESOURCE_DEFS: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\n/**\n * Platform API types.\n *\n * @type {{PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES: {USER: string},\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS: string, PLATFORM_API_RESPONSE_USER_IDENTITY: string,\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES: {ENTITLED: string},\n *     PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES: {ORG_ADMIN: string}}}\n */\nconst platformApiTypes = {\n  PLATFORM_API_RESPONSE_NAV_TYPES,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformApiTypes as default,\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_NAV_TYPES,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","/**\n * RHSM response Error DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA = 'errors';\n\n/**\n * RHSM response Error DATA types.\n * Schema/map of expected Error data response properties.\n *\n * @type {{CODE: string, DETAIL: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_TYPES = {\n  CODE: 'code',\n  DETAIL: 'detail'\n};\n\n/**\n * RHSM response Error DATA CODE types.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response links type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS = 'links';\n\n/**\n * RHSM response LINKS type.\n * Schema/map of expected inventory LINKS response properties.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS_TYPES = {\n  FIRST: 'first',\n  LAST: 'last',\n  PREVIOUS: 'previous',\n  NEXT: 'next'\n};\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response META types.\n * Schema/map of expected META response properties.\n *\n * @type {{COUNT: string, TOTAL_INSTANCE_HOURS: string, TOTAL_CORE_HOURS: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  TOTAL_CORE_HOURS: 'total_core_hours',\n  TOTAL_INSTANCE_HOURS: 'total_instance_hours'\n};\n\n/**\n * RHSM response Capacity DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA = 'data';\n\n/**\n * RHSM response Capacity DATA types.\n * Schema/map of expected Capacity data response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string,\n *     HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response inventory DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA = 'data';\n\n/**\n * RHSM response inventory DATA types.\n * Schema/map of expected inventory DATA response properties.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, SUBSCRIPTION_ID: string,\n *     INVENTORY_ID: string, MEASUREMENT: string, ID: string, GUESTS: string, CLOUD_PROVIDER: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA_TYPES = {\n  CLOUD_PROVIDER: 'cloud_provider',\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  GUESTS: 'number_of_guests',\n  HARDWARE: 'hardware_type',\n  ID: 'insights_id',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets',\n  SUBSCRIPTION_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response inventory guests DATA types.\n * Schema/map of expected inventory guests DATA response properties.\n *\n * @type {{SUBSCRIPTION_ID: string, ID: string, NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES = {\n  ID: 'insights_id',\n  NAME: 'display_name',\n  SUBSCRIPTION_ID: 'subscription_manager_id',\n  LAST_SEEN: 'last_seen'\n};\n\n/**\n * RHSM response subscriptions inventory DATA types.\n *\n * @type {{UOM: string, SUBSCRIPTIONS: string, PHYSICAL_CAPACITY: string, USAGE: string,\n *     QUANTITY: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string, VIRTUAL_CAPACITY: string,\n *     TOTAL_CAPACITY: string, SKU: string, PRODUCT_NAME: string, SERVICE_LEVEL: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES = {\n  SKU: 'sku',\n  PRODUCT_NAME: 'product_name',\n  SERVICE_LEVEL: 'service_level',\n  USAGE: 'usage',\n  SUBSCRIPTIONS: 'subscriptions',\n  NEXT_EVENT_DATE: 'next_event_date',\n  NEXT_EVENT_TYPE: 'next_event_type',\n  QUANTITY: 'quantity',\n  PHYSICAL_CAPACITY: 'physical_capacity',\n  VIRTUAL_CAPACITY: 'virtual_capacity',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Reporting/Tally DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = 'data';\n\n/**\n * RHSM response Reporting/Tally DATA types.\n * Schema/map of expected Reporting/Tally DATA response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, INSTANCE_HOURS: string, SOCKETS: string, CLOUD_CORES: string,\n *     HAS_DATA: string, PHYSICAL_SOCKETS: string, PHYSICAL_CORES: string, CLOUD_INSTANCES: string, DATE: string,\n *     CORE_HOURS: string, CLOUD_SOCKETS: string, HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string,\n *     HYPERVISOR_CORES: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORE_HOURS: 'core_hours',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  INSTANCE_HOURS: 'instance_hours',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM product id type values.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string,\n *     OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string}}\n */\nconst RHSM_API_PATH_ID_TYPES = {\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  OPENSHIFT: 'OpenShift Container Platform',\n  OPENSHIFT_METRICS: 'OpenShift-metrics',\n  OPENSHIFT_DEDICATED_METRICS: 'OpenShift-dedicated-metrics',\n  SATELLITE: 'Satellite',\n  SATELLITE_CAPSULE: 'Satellite Capsule',\n  SATELLITE_SERVER: 'Satellite Server'\n};\n\n/**\n * RHSM API query/search parameter of GRANULARITY type values.\n * Schema/map of expected query/search parameter granularity types.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  DAILY: 'daily',\n  WEEKLY: 'weekly',\n  MONTHLY: 'monthly',\n  QUARTERLY: 'quarterly'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, MEASUREMENT: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_SORT_TYPES = {\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  HARDWARE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter of EVENT type values for Subscriptions.\n *\n * @type {{EVENT_START: string, EVENT_END: string}}\n */\nconst RHSM_API_QUERY_SUBSCRIPTIONS_EVENT_TYPES = {\n  EVENT_START: 'Subscription Start',\n  EVENT_END: 'Subscription End'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string, SKU: string,\n *     SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES = {\n  NEXT_EVENT_DATE: 'next_event_date',\n  NEXT_EVENT_TYPE: 'next_event_type',\n  QUANTITY: 'quantity',\n  SKU: 'sku',\n  SERVICE_LEVEL: 'service_level',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\n/**\n * RHSM API query/search parameter SLA type values.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_QUERY_SLA_TYPES = {\n  PREMIUM: 'premium',\n  STANDARD: 'standard',\n  SELF: 'self-support',\n  NONE: ''\n};\n\n/**\n * RHSM API query/search parameter UOM type values.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_QUERY_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter USAGE type values.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_QUERY_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\n/**\n * RHSM API query/search parameter OPTIN type values.\n *\n * @type {{TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_SET_OPTIN_TYPES = {\n  CONDUIT_SYNC: 'enable_conduit_sync',\n  TALLY_REPORT: 'enable_tally_reporting',\n  TALLY_SYNC: 'enable_tally_sync'\n};\n\n/**\n * RHSM API query/search parameter CAPACITY type values.\n *\n * @type {{GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string}}\n */\nconst RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES = {\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  DIRECTION: 'dir',\n  DISPLAY_NAME: 'display_name_contains',\n  END_DATE: 'ending',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  START_DATE: 'beginning',\n  UOM: 'uom',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM API query/search parameter GUESTS INVENTORY type values.\n *\n * @type {{OFFSET: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES = {\n  LIMIT: 'limit',\n  OFFSET: 'offset'\n};\n\n/**\n * RHSM API query/search parameter SUBSCRIPTIONS INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string, SLA: string,\n *     LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES = {\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES\n};\n\n/**\n * RHSM API query/search parameter values.\n *\n * @type {{GRANULARITY: string, TALLY_SYNC: string, DIRECTION: string, END_DATE: string,\n *     SLA: string, START_DATE: string, LIMIT: string, UOM: string, TALLY_REPORT: string,\n *     USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_TYPES = {\n  ...RHSM_API_QUERY_SET_OPTIN_TYPES,\n  ...RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\n/**\n * RHSM API types.\n *\n * @type {{RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string,\n *     OFFSET: string, SLA: string, LIMIT: string}, RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES: {UOM: string,\n *     SUBSCRIPTIONS: string, PHYSICAL_CAPACITY: string, USAGE: string, QUANTITY: string, NEXT_EVENT_TYPE: string,\n *     NEXT_EVENT_DATE: string, VIRTUAL_CAPACITY: string, TOTAL_CAPACITY: string, SKU: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string}, RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES: {GENERIC: string, OPTIN: string},\n *     RHSM_API_RESPONSE_INVENTORY_DATA: string, RHSM_API_RESPONSE_CAPACITY_DATA: string,\n *     RHSM_API_RESPONSE_ERROR_DATA_TYPES: {CODE: string, DETAIL: string},\n *     RHSM_API_RESPONSE_CAPACITY_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string},\n *     RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES: {QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string,\n *     NEXT_EVENT_DATE: string, SKU: string, SERVICE_LEVEL: string}, RHSM_API_RESPONSE_META_TYPES: {COUNT: string,\n *     TOTAL_INSTANCE_HOURS: string, TOTAL_CORE_HOURS: string}, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string,\n *     QUARTERLY: string, DAILY: string, MONTHLY: string}, RHSM_API_QUERY_SORT_DIRECTION_TYPES: {ASCENDING: string,\n *     DESCENDING: string}, RHSM_API_RESPONSE_PRODUCTS_DATA: string,\n *     RHSM_API_QUERY_SUBSCRIPTIONS_EVENT_TYPES: {EVENT_START: string, EVENT_END: string},\n *     RHSM_API_QUERY_TYPES: {GRANULARITY: string, TALLY_SYNC: string, DIRECTION: string, END_DATE: string, SLA: string,\n *     START_DATE: string, LIMIT: string, UOM: string, TALLY_REPORT: string, USAGE: string, SORT: string, OFFSET: string,\n *     CONDUIT_SYNC: string}, RHSM_API_RESPONSE_LINKS: string, RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES: {OFFSET: string,\n *     LIMIT: string}, RHSM_API_PATH_ID_TYPES: {RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string,\n *     RHEL_WORKSTATION: string, RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string,\n *     OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string}, RHSM_API_QUERY_SET_OPTIN_TYPES: {TALLY_SYNC: string,\n *     TALLY_REPORT: string, CONDUIT_SYNC: string}, RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string,\n *     DEVELOPMENT: string, PRODUCTION: string}, RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string,\n *     STANDARD: string}, RHSM_API_QUERY_SET_INVENTORY_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string,\n *     OFFSET: string, SLA: string, LIMIT: string}, RHSM_API_QUERY_SORT_TYPES: {CORES: string, CORE_HOURS: string,\n *     HARDWARE: string, SOCKETS: string, MEASUREMENT: string, LAST_SEEN: string, NAME: string},\n *     RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, INSTANCE_HOURS: string,\n *     SOCKETS: string, CLOUD_CORES: string, HAS_DATA: string, PHYSICAL_SOCKETS: string, PHYSICAL_CORES: string,\n *     CLOUD_INSTANCES: string, DATE: string, CORE_HOURS: string, CLOUD_SOCKETS: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HYPERVISOR_CORES: string}, RHSM_API_QUERY_UOM_TYPES: {CORES: string,\n *     SOCKETS: string}, RHSM_API_RESPONSE_LINKS_TYPES: string,\n *     RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES: {SUBSCRIPTION_ID: string, ID: string, NAME: string,\n *     LAST_SEEN: string}, RHSM_API_RESPONSE_ERROR_DATA: string, RHSM_API_RESPONSE_META: string,\n *     RHSM_API_RESPONSE_INVENTORY_DATA_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string,\n *     SUBSCRIPTION_ID: string, INVENTORY_ID: string, MEASUREMENT: string, ID: string, GUESTS: string,\n *     CLOUD_PROVIDER: string, LAST_SEEN: string, NAME: string},\n *     RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string,\n *     START_DATE: string}}}\n */\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_EVENT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_EVENT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var map = {\n\t\"./authentication/authentication.js\": [\n\t\t67719\n\t],\n\t\"./bannerMessages/bannerMessages.js\": [\n\t\t87585,\n\t\t4736,\n\t\t3281,\n\t\t7585\n\t],\n\t\"./chart/chart.js\": [\n\t\t60930,\n\t\t6410,\n\t\t4736,\n\t\t8326,\n\t\t8213,\n\t\t1026,\n\t\t4096,\n\t\t2902,\n\t\t930\n\t],\n\t\"./chart/chartContext.js\": [\n\t\t98326,\n\t\t8326\n\t],\n\t\"./chart/chartElements.js\": [\n\t\t54096,\n\t\t6410,\n\t\t4736,\n\t\t8326,\n\t\t8213,\n\t\t4096\n\t],\n\t\"./chart/chartHelpers.js\": [\n\t\t61026,\n\t\t4736,\n\t\t1026\n\t],\n\t\"./chart/chartIcon.js\": [\n\t\t1138,\n\t\t1138\n\t],\n\t\"./chart/chartLegend.js\": [\n\t\t52902,\n\t\t4736,\n\t\t8326,\n\t\t2902\n\t],\n\t\"./chart/chartTooltip.js\": [\n\t\t78213,\n\t\t8213\n\t],\n\t\"./form/checkbox.js\": [\n\t\t34467,\n\t\t6410,\n\t\t4736,\n\t\t4044,\n\t\t4467\n\t],\n\t\"./form/formHelpers.js\": [\n\t\t44044,\n\t\t4044\n\t],\n\t\"./form/formState.js\": [\n\t\t90384,\n\t\t4736,\n\t\t384\n\t],\n\t\"./form/select.js\": [\n\t\t49844,\n\t\t4736,\n\t\t9844\n\t],\n\t\"./form/textInput.js\": [\n\t\t18710,\n\t\t4044,\n\t\t8710\n\t],\n\t\"./graphCard/graphCard.js\": [\n\t\t10608,\n\t\t6410,\n\t\t4736,\n\t\t8326,\n\t\t1858,\n\t\t8213,\n\t\t1138,\n\t\t1026,\n\t\t8139,\n\t\t1339,\n\t\t4096,\n\t\t2902,\n\t\t930,\n\t\t4024,\n\t\t4418,\n\t\t1799,\n\t\t608\n\t],\n\t\"./graphCard/graphCardChart.js\": [\n\t\t91799,\n\t\t6410,\n\t\t4736,\n\t\t8326,\n\t\t1858,\n\t\t8213,\n\t\t1138,\n\t\t1026,\n\t\t8139,\n\t\t4096,\n\t\t2902,\n\t\t930,\n\t\t4024,\n\t\t4418,\n\t\t1799\n\t],\n\t\"./graphCard/graphCardChartLegend.js\": [\n\t\t64418,\n\t\t1858,\n\t\t1138,\n\t\t4418\n\t],\n\t\"./graphCard/graphCardChartTooltip.js\": [\n\t\t44024,\n\t\t1858,\n\t\t1138,\n\t\t8139,\n\t\t4024\n\t],\n\t\"./graphCard/graphCardHelpers.js\": [\n\t\t78139,\n\t\t8139\n\t],\n\t\"./guestsList/guestsList.js\": [\n\t\t63056,\n\t\t4822,\n\t\t3056\n\t],\n\t\"./i18n/i18n.js\": [\n\t\t83109\n\t],\n\t\"./inventoryList/inventoryList.js\": [\n\t\t86876,\n\t\t6410,\n\t\t5252,\n\t\t4736,\n\t\t4044,\n\t\t4822,\n\t\t1339,\n\t\t5020,\n\t\t8710,\n\t\t8900,\n\t\t3056,\n\t\t9517,\n\t\t6876\n\t],\n\t\"./inventoryList/inventoryListHelpers.js\": [\n\t\t44822,\n\t\t4822\n\t],\n\t\"./inventorySubscriptions/inventorySubscriptions.js\": [\n\t\t47493,\n\t\t6410,\n\t\t5252,\n\t\t4822,\n\t\t1339,\n\t\t5020,\n\t\t8900,\n\t\t7493\n\t],\n\t\"./inventoryTabs/inventoryTab.js\": [\n\t\t80931,\n\t\t931\n\t],\n\t\"./inventoryTabs/inventoryTabs.js\": [\n\t\t69051,\n\t\t31,\n\t\t931,\n\t\t9051\n\t],\n\t\"./loader/loader.js\": [\n\t\t1797\n\t],\n\t\"./messageView/messageView.js\": [\n\t\t79719\n\t],\n\t\"./minHeight/minHeight.js\": [\n\t\t91339,\n\t\t1339\n\t],\n\t\"./optinView/optinView.js\": [\n\t\t78255,\n\t\t8255\n\t],\n\t\"./pageLayout/pageColumns.js\": [\n\t\t5937\n\t],\n\t\"./pageLayout/pageHeader.js\": [\n\t\t58816\n\t],\n\t\"./pageLayout/pageLayout.js\": [\n\t\t52422\n\t],\n\t\"./pageLayout/pageMessages.js\": [\n\t\t54803\n\t],\n\t\"./pageLayout/pageSection.js\": [\n\t\t99781\n\t],\n\t\"./pageLayout/pageToolbar.js\": [\n\t\t89484\n\t],\n\t\"./pagination/pagination.js\": [\n\t\t68900,\n\t\t5020,\n\t\t8900\n\t],\n\t\"./pagination/paginationHelpers.js\": [\n\t\t65020,\n\t\t5020\n\t],\n\t\"./productView/productView.js\": [\n\t\t29175,\n\t\t6410,\n\t\t5252,\n\t\t4736,\n\t\t8326,\n\t\t1858,\n\t\t9844,\n\t\t8213,\n\t\t1138,\n\t\t4044,\n\t\t1026,\n\t\t4822,\n\t\t8139,\n\t\t1339,\n\t\t4096,\n\t\t2902,\n\t\t5020,\n\t\t930,\n\t\t8710,\n\t\t4024,\n\t\t4418,\n\t\t8900,\n\t\t3056,\n\t\t31,\n\t\t9517,\n\t\t1799,\n\t\t3281,\n\t\t433,\n\t\t931,\n\t\t6876,\n\t\t9175\n\t],\n\t\"./productView/productViewContext.js\": [\n\t\t51858,\n\t\t1858\n\t],\n\t\"./productView/productViewMissing.js\": [\n\t\t91233,\n\t\t3281,\n\t\t1233\n\t],\n\t\"./productView/productViewOpenShiftContainer.js\": [\n\t\t81114,\n\t\t6410,\n\t\t5252,\n\t\t4736,\n\t\t8326,\n\t\t1858,\n\t\t9844,\n\t\t8213,\n\t\t1138,\n\t\t4044,\n\t\t1026,\n\t\t4822,\n\t\t8139,\n\t\t1339,\n\t\t4096,\n\t\t2902,\n\t\t5020,\n\t\t930,\n\t\t8710,\n\t\t4024,\n\t\t4418,\n\t\t8900,\n\t\t3056,\n\t\t31,\n\t\t9517,\n\t\t1799,\n\t\t3281,\n\t\t433,\n\t\t931,\n\t\t6876,\n\t\t4059\n\t],\n\t\"./productView/productViewOpenShiftDedicated.js\": [\n\t\t84944,\n\t\t6410,\n\t\t5252,\n\t\t4736,\n\t\t8326,\n\t\t1858,\n\t\t9844,\n\t\t8213,\n\t\t1138,\n\t\t4044,\n\t\t1026,\n\t\t4822,\n\t\t8139,\n\t\t1339,\n\t\t4096,\n\t\t2902,\n\t\t5020,\n\t\t930,\n\t\t8710,\n\t\t4024,\n\t\t4418,\n\t\t8900,\n\t\t3056,\n\t\t31,\n\t\t9517,\n\t\t1799,\n\t\t3281,\n\t\t433,\n\t\t931,\n\t\t6876,\n\t\t9175,\n\t\t4944\n\t],\n\t\"./router/index.js\": [\n\t\t94976\n\t],\n\t\"./router/redirect.js\": [\n\t\t57304\n\t],\n\t\"./router/router.js\": [\n\t\t27097\n\t],\n\t\"./router/routerContext.js\": [\n\t\t43301\n\t],\n\t\"./router/routerHelpers.js\": [\n\t\t97712\n\t],\n\t\"./table/table.js\": [\n\t\t78697\n\t],\n\t\"./table/tableEmpty.js\": [\n\t\t30817\n\t],\n\t\"./table/tableSkeleton.js\": [\n\t\t62540\n\t],\n\t\"./tabs/tabs.js\": [\n\t\t70031,\n\t\t31\n\t],\n\t\"./toolbar/toolbar.js\": [\n\t\t92227,\n\t\t4736,\n\t\t9844,\n\t\t433,\n\t\t2227\n\t],\n\t\"./toolbar/toolbarFieldDisplayName.js\": [\n\t\t89517,\n\t\t4736,\n\t\t4044,\n\t\t8710,\n\t\t9517\n\t],\n\t\"./toolbar/toolbarFieldGranularity.js\": [\n\t\t2738,\n\t\t4736,\n\t\t9844,\n\t\t2738\n\t],\n\t\"./toolbar/toolbarFieldRangedMonthly.js\": [\n\t\t65876,\n\t\t4736,\n\t\t9844,\n\t\t5876\n\t],\n\t\"./toolbar/toolbarFieldUom.js\": [\n\t\t74097,\n\t\t4736,\n\t\t9844,\n\t\t4097\n\t],\n\t\"./toolbar/toolbarHelpers.js\": [\n\t\t30433,\n\t\t433\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 58908;\nmodule.exports = webpackAsyncContext;"],"names":["module","exports","App","getLocale","this","props","locale","I18n","value","NotificationsPortal","Router","React","defaultProps","helpers","ConnectedApp","connectRouter","state","user","session","dispatch","reduxActions","noop","Function","prototype","noopPromise","Promise","resolve","PROD_MODE","process","UI_WINDOW_ID","browserExpose","obj","options","limit","id","window","generateId","prefix","Math","ceil","random","isDate","date","Object","toString","call","isPromise","test","noopTranslate","key","components","updatedKey","Array","isArray","updatedValue","keys","length","JSON","stringify","updatedComponents","DEV_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_TABLE","UI_DISABLED_TABLE_HOSTS","UI_DISABLED_TABLE_SUBSCRIPTIONS","UI_DISABLED_TOOLBAR","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_LEARN_MORE","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_LOGGER_FILE","UI_NAME","UI_PATH","UI_VERSION","getCurrentDate","REACT_APP_DEBUG_DEFAULT_DATETIME","Date","setRangedDateTime","subtract","measurement","endOfMeasurement","startDate","moment","startOf","toDate","endDate","endOf","currentDateTime","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","rangedYearDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedMonthDateTime","month","currentYear","Number","parseInt","year","keyDateTimeRanges","listDateTimeRanges","startDateUpdated","endDateUpdated","format","dateTime","titleYear","title","titleIndex","isNextYear","_title","toLowerCase","add","translate","context","push","reverse","current","undefined","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","downloadData","data","fileName","fileType","reject","document","navigator","URL","blob","Blob","type","msSaveBlob","anchorTag","createElement","href","createObjectURL","style","display","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","error","debugLog","sessionStorage","replace","parse","getItem","Error","message","Authentication","appName","routerHelpers","removeListeners","authorizeUser","hideGlobalFilter","history","initializeChrome","onNavigation","setAppName","authorized","subscriptions","appNav","event","routeHref","navId","children","t","description","pending","pageTitle","icon","BinocularsIcon","errorCodes","includes","rhsmApiTypes","status","Redirect","route","serviceName","Component","makeMapStateToProps","reduxSelectors","ConnectedAuthentication","isHidden","callback","name","translateKey","values","updatedValues","updatedTranslateKey","filter","join","i18next","i18nKey","translateComponent","withTranslation","i18n","displayName","fallbackLng","loadPath","useState","initialized","setInitialized","useMount","XHR","use","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","useEffect","e","Loader","skeletonProps","tableProps","variant","className","size","SkeletonSize","TableSkeleton","PageLayout","PageHeader","MessageView","PageSection","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","PageColumns","Flex","alignItems","sm","spaceItems","child","map","FlexItem","grow","includeTour","productLabel","justifyContent","Button","isInline","color","component","ExternalLinkAltIcon","iconPosition","target","PageMessages","PageToolbar","padding","default","hash","search","forcePath","isForced","routes","url","baseName","pathName","matchedRoutePath","path","matchedRoute","location","updatedRoutes","setUpdatedRoutes","redirectDefault","setRedirectDefault","activateOnErrorRoute","find","activateOnError","all","item","disabled","View","Route","exact","strict","render","routeProps","routeConfig","URLSearchParams","decodeURIComponent","parsedSearch","Set","param","forEach","v","split","updatedLocation","routeDetail","errorRoute","routeItem","RouterContext","results","redirect","fallback","Switch","to","DEFAULT_CONTEXT","useRouterContext","useContext","useRouteDetail","useAliasRouterContext","platformLandingRedirect","platformModalRedirect","dynamicBaseName","pathname","applicationName","dynamicBasePath","basePath","generateProductGroups","config","routesConfig","productGroups","pathParameter","productParameter","index","generateRoutes","getErrorRoute","getRouteConfigByPath","basePathDirs","str","configs","allConfigs","configsById","allConfigsById","findConfig","dir","configPath","aliases","configItem","updatedConfigItem","RegExp","decodedDir","decodeURI","firstMatch","getRouteConfig","navRouteItem","returnDefault","viewParameter","importView","p","Table","isCollapsible","isSortable","sortBy","updatedColumnHeaders","updatedRows","onCollapse","isOpen","fullWidth","cells","expandedContent","setState","onSort","direction","updatedIndex","i","label","column","header","setRowData","prevProps","columnHeaders","rows","customizer","valueA","valueB","_isEqualWith","updatedSort","isExpanded","rowObj","parent","cell","settings","columnHeader","sortActive","sortDirection","tempColumnHeader","transforms","sortable","SortByDirection","ariaLabel","borders","isHeader","summary","pfTableProps","emptyTable","TableEmpty","SearchIcon","TableHeader","TableBody","Grid","GridItem","span","renderTable","tableHeading","colCount","colWidth","rowCount","updatedHeader","cellWidth","updatedRowCount","productGroup","RHSM_API_PATH_ID_TYPES","productId","viewId","query","RHSM_API_QUERY_TYPES","RHSM_API_QUERY_UOM_TYPES","toISOString","graphTallyQuery","inventoryHostsQuery","RHSM_API_QUERY_SORT_TYPES","SORT_DIRECTION_TYPES","inventorySubscriptionsQuery","RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES","initialGraphFilters","fill","chartColorBlueLight","stroke","chartColorBlueDark","chartColorCyanLight","chartColorCyanDark","chartColorPurpleLight","chartColorPurpleDark","chartType","initialGuestsFilters","inventoryId","inventory","lastSeen","DateFormat","initialInventoryFilters","numberOfGuests","updatedDisplayName","count","cloudProvider","measurementType","isWrappable","initialInventorySettings","initialSubscriptionsInventoryFilters","uom","nextEventDate","initialToolbarFilters","selected","productContextFilterUom","initialOption","isOptional","initialGraphSettings","actionDisplay","displayContent","totalCoreHours","meta","total","numbro","average","mantissa","trimMantissa","lowPrecision","toUpperCase","coreHours","parseFloat","toFixed","isStacked","yAxisUseDataSet","instanceHours","rhelConfig","productConfig","isSearchable","openshiftContainerConfig","openshiftMetricsConfig","openshiftDedicatedConfig","satelliteProductConfig","apiQueries","parseRhsmQuery","queries","inventoryGuestsQuery","updatedGraphTallyQuery","reduxHelpers","updatedInventoryGuestsQuery","updatedInventoryHostsQuery","updatedInventorySubscriptionsQuery","toolbarQuery","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","schemas","initialValue","schema","generated","getSingleResponseFromResultArray","updatedResults","payload","response","updatedResultsMessage","firstErrorResponse","_get","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","_isPlainObject","getDateFromResults","getStatusFromResults","setStateProp","prop","initialState","reset","console","warn","singlePromiseDataResponseFromArray","HTTP_STATUS_RANGE","setApiQuery","setNormalizedResponse","parsedResponses","responses","customResponseValue","keyPrefix","updatedData","generatedSchema","parsedResponse","dataObj","customValue","update","updatedDataObj","generatedData","entries","dataObjKey","dataObjValue","casedDataObjKey","_camelCase","val","isInteger","generatedPromiseActionReducer","types","action","expandedTypes","subVal","ref","whichType","expandMetaTypes","updatedMeta","metaData","metaId","metaQuery","baseState","errorMessage","fulfilled","setId","errorResponse","cancelled","getDataFromResults","reactReduxHooks","shallowEqual","useDispatch","dispatchEvent","store","useSelector","selector","UseSelector","equality","rhsmActionsHooks","useGetMessageReports","rhsmTypes","rhsmServices","cancelId","notifications","storeHooks","reactRedux","rhsmActions","rhsmSelectors","useAppMessages","useAliasRouteDetail","useAliasSelector","result","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","platformTypes","platformServices","setAppNav","secondaryNav","getGraphReportsCapacity","getHostsInventory","getHostsInventoryGuests","getMessageReports","getSubscriptionsInventory","userServices","updatedPermissions","permissions","getUser","userData","app","getUserPermissions","allPermissions","userPermissions","flat","emulatedErrorResponse","defaultLocale","Cookies","LocaleCode","logoutUser","deleteAccountOptIn","serviceCall","method","getAccountOptIn","cancel","updateAccountOptIn","params","actions","platform","rhsm","userTypes","rejected","dismissable","autoDismiss","mapStateToProps","mapDispatchToProps","withRouter","connect","legend","reportCapacity","graphReducer","graphTypes","hostsInventory","hostsGuests","subscriptionsInventory","tabs","inventoryReducer","inventoryTypes","report","messagesReducer","filters","toolbarReducer","reduxTypes","activeFilters","currentFilter","optin","userReducer","appTypes","actionStatus","viewReducer","updateResetQueries","queryIds","updatedQuery","queryId","productQuery","updateClearQueries","clearFilters","reducers","graph","messages","toolbar","view","reduxReducers","combineReducers","selectorCache","createSelector","appMessages","cloudigradeMismatch","cache","assign","reportData","appMessagesSelectors","makeAppMessages","createSelectorCreator","defaultMemoize","_isEqual","createDeepEqualSelector","rest","updatedSession","admin","entitled","responsePermissions","platformApiTypes","APP_TYPES","permission","definitions","resource","operation","resources","RESOURCE_TYPES","OPERATION_TYPES","resourcePermissions","res","op","userSessionSelectors","userSession","makeUserSession","responseData","updatedResponseData","listData","updatedListData","guestsListSelectors","guestsList","makeGuestsList","LruCache","maxAge","max","stale","updateAgeOnGet","graphData","responseMetaQuery","get","capacity","reportMeta","capacityData","graphDataKey","tallySchema","capacitySchema","customReportValue","presetData","hasData","hasCloudigradeData","hasCloudigradeMismatch","customCapacityValue","x","y","hasInfinite","generateGraphData","graphDataObj","graphDataObjKey","generatedY","casedGraphDataObjKey","updatedItem","updatedReportMeta","set","graphCardSelectors","graphCard","makeGraphCard","itemCount","listMeta","customInventoryValue","updatedListMeta","inventoryListSelectors","inventoryList","makeInventoryList","subscriptionsList","makeSubscriptionsList","userSelectors","recordAction","items","parsedItems","slice","getActions","priorItem","updatedAction","removeUserIdentity","updatedPayload","sanitizeData","headers","sanitizeActionHeaders","actionObj","diff","timestamp","now","setItem","browser","userAgent","toLocaleString","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","next","httpStatus","payloadConfig","range","floor","statusMiddleware","a","promiseMiddleware","actionRecordMiddleware","version","notificationsMiddleware","createStore","applyMiddleware","STATUS_4XX","STATUS_5XX","SET_GRAPH_LEGEND","SET_INVENTORY_TAB","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_GLOBAL_FILTER_HIDE","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","queryTypes","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_RESET_INVENTORY_LIST","SET_QUERY_RHSM_TYPES","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_AUTH","USER_LOCALE","USER_LOGOUT","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","GET_MESSAGE_REPORTS_RHSM","GET_SUBSCRIPTIONS_INVENTORY_RHSM","serviceConfig","passedConfig","timeout","cancelTokens","responseCache","updatedConfig","axiosInstance","axios","cancelTokensId","CancelToken","cancelToken","token","sortedParams","sort","b","localeCompare","cacheId","cachedResponse","adapter","adapterConfig","interceptors","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","auth","USER_PERMISSION_TYPES","REACT_APP_DEBUG_PERMISSION_APP_ONE","REACT_APP_DEBUG_PERMISSION_APP_TWO","on","identifyApp","appNavClick","parentId","getApiVersion","getGraphCapacity","getGraphReports","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES","SUBSCRIPTIONS","PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES","ALL","PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES","READ","WRITE","PLATFORM_API_RESPONSE_NAV_TYPES","ACTIVE_APP","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","OPENSHIFT","OPENSHIFT_METRICS","OPENSHIFT_DEDICATED_METRICS","SATELLITE","SATELLITE_CAPSULE","SATELLITE_SERVER","RHSM_API_QUERY_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","CORES","CORE_HOURS","HARDWARE","INSTANCE_HOURS","LAST_SEEN","MEASUREMENT","NAME","SOCKETS","NEXT_EVENT_DATE","NEXT_EVENT_TYPE","QUANTITY","SKU","SERVICE_LEVEL","USAGE","RHSM_API_QUERY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","RHSM_API_QUERY_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_QUERY_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_SET_OPTIN_TYPES","CONDUIT_SYNC","TALLY_REPORT","TALLY_SYNC","RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES","END_DATE","GRANULARITY","SLA","START_DATE","RHSM_API_QUERY_SET_INVENTORY_TYPES","DIRECTION","DISPLAY_NAME","LIMIT","OFFSET","SORT","UOM","RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES","RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES","RHSM_API_RESPONSE_ERROR_DATA","RHSM_API_RESPONSE_ERROR_DATA_TYPES","CODE","DETAIL","RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES","GENERIC","OPTIN","RHSM_API_RESPONSE_LINKS","RHSM_API_RESPONSE_LINKS_TYPES","FIRST","LAST","PREVIOUS","NEXT","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_META_TYPES","COUNT","TOTAL_CORE_HOURS","TOTAL_INSTANCE_HOURS","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","CLOUD_CORES","CLOUD_INSTANCES","CLOUD_SOCKETS","DATE","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_INVENTORY_DATA","RHSM_API_RESPONSE_INVENTORY_DATA_TYPES","CLOUD_PROVIDER","GUESTS","ID","INVENTORY_ID","SUBSCRIPTION_ID","RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES","RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES","PRODUCT_NAME","PHYSICAL_CAPACITY","VIRTUAL_CAPACITY","TOTAL_CAPACITY","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","HAS_CLOUDIGRADE_DATA","HAS_CLOUDIGRADE_MISMATCH","HAS_DATA","RHSM_API_QUERY_SUBSCRIPTIONS_EVENT_TYPES","EVENT_START","EVENT_END","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","webpackAsyncContext","then","ids"],"sourceRoot":""}
{"version":3,"file":"js/6587.02080d4bb151ae012b46.js","mappings":"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","sources":["webpack:///./src/components/form/textInput.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./src/components/inventoryCard/inventoryCard.js","webpack:///./src/components/inventoryCard/inventoryCardContext.js","webpack:///./src/components/minHeight/minHeight.js","webpack:///./src/components/pagination/pagination.js","webpack:///./src/components/pagination/paginationHelpers.js","webpack:///./src/components/toolbar/toolbarFieldDisplayName.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput as PfTextInput } from '@patternfly/react-core';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * Text input with state.\n *\n * @memberof Form\n * @module TextInput\n */\n\n/**\n * A wrapper for Patternfly TextInput. Provides restructured event data,\n * and an onClear event for the search type.\n *\n * @augments React.Component\n * @fires onKeyUp\n * @fires onMouseUp\n * @fires onChange\n */\nclass TextInput extends React.Component {\n  state = {\n    updatedValue: null\n  };\n\n  /**\n   * onKeyUp event, provide additional functionality for onClear event.\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  onKeyUp = event => {\n    const { onClear, onKeyUp, type } = this.props;\n    const { currentTarget, keyCode } = event;\n    const clonedEvent = { ...event };\n\n    onKeyUp(createMockEvent(event, true));\n\n    if (keyCode === 27) {\n      if (type === 'search' && currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      } else {\n        this.setState({ updatedValue: '' }, () => {\n          onClear(\n            createMockEvent({ ...clonedEvent, ...{ currentTarget: { ...clonedEvent.currentTarget, value: '' } } })\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * onMouseUp event, provide additional functionality for onClear event.\n   *\n   * @event onMouseUp\n   * @param {object} event\n   */\n  onMouseUp = event => {\n    const { onClear, onMouseUp, type } = this.props;\n    const { currentTarget } = event;\n    const clonedEvent = { ...event };\n\n    onMouseUp(createMockEvent(event, true));\n\n    if (type !== 'search' || currentTarget.value === '') {\n      return;\n    }\n\n    setTimeout(() => {\n      if (currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      }\n    });\n  };\n\n  /**\n   * onChange event, provide restructured event.\n   *\n   * @event onChange\n   * @param {string} value\n   * @param {object} event\n   */\n  onChange = (value, event) => {\n    const { onChange } = this.props;\n    const clonedEvent = { ...event };\n\n    this.setState({ updatedValue: value }, () => {\n      onChange(createMockEvent(clonedEvent));\n    });\n  };\n\n  /**\n   * Render a text input.\n   *\n   * @returns {React.ReactNode}\n   */\n  render() {\n    const { updatedValue } = this.state;\n    const {\n      className,\n      id,\n      isDisabled,\n      name,\n      onChange,\n      onClear,\n      onKeyUp,\n      onMouseUp,\n      isReadOnly,\n      type,\n      value,\n      ...props\n    } = this.props;\n    const updatedName = name || helpers.generateId();\n    const updatedId = id || updatedName;\n\n    return (\n      <PfTextInput\n        id={updatedId}\n        name={updatedName}\n        className={`curiosity-text-input ${className}`}\n        isDisabled={isDisabled || false}\n        onChange={this.onChange}\n        onKeyUp={this.onKeyUp}\n        onMouseUp={this.onMouseUp}\n        isReadOnly={isReadOnly || false}\n        type={type}\n        value={updatedValue ?? value ?? ''}\n        {...props}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.defaultProps = {\n  className: '',\n  id: null,\n  isDisabled: false,\n  isReadOnly: false,\n  name: null,\n  onChange: helpers.noop,\n  onClear: helpers.noop,\n  onKeyUp: helpers.noop,\n  onMouseUp: helpers.noop,\n  type: 'text',\n  value: ''\n};\n\nexport { TextInput as default, TextInput };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment } from 'react';\nimport { Toolbar, useOUIAId } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport '../TableToolbar/TableToolbar.css';\nfunction generateCount(results) {\n    if (results > 1 || results < 1) {\n        return \"\".concat(results, \" Results\");\n    }\n    else {\n        return \"\".concat(results, \" Result\");\n    }\n}\nvar TableToolbar = function (_a) {\n    var _b;\n    var _c = _a.isFooter, isFooter = _c === void 0 ? false : _c, results = _a.results, className = _a.className, selected = _a.selected, children = _a.children, ouiaId = _a.ouiaId, _d = _a.ouiaSafe, ouiaSafe = _d === void 0 ? true : _d, props = __rest(_a, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n    var tableToolbarClasses = classNames('ins-c-table__toolbar', (_b = {}, _b[\"ins-m-footer\"] = isFooter, _b), className);\n    var ouiaComponentType = 'RHI/TableToolbar';\n    var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n    return (_jsxs(Fragment, { children: [_jsx(Toolbar, __assign({ className: tableToolbarClasses, \"data-ouia-component-type\": ouiaComponentType, \"data-ouia-component-id\": ouiaFinalId, \"data-ouia-safe\": ouiaSafe }, props, { children: children })), ((results && results >= 0) || (selected && selected >= 0)) && (_jsxs(\"div\", __assign({ className: \"ins-c-table__toolbar-results\" }, { children: [results && results >= 0 && _jsxs(\"span\", __assign({ className: \"ins-c-table__toolbar-results-count\" }, { children: [\" \", generateCount(results), \" \"] })), selected && selected >= 0 && _jsxs(\"span\", __assign({ className: \"ins-c-table__toolbar-results-selected\" }, { children: [\" \", selected, \" Selected \"] }))] })))] }));\n};\nexport default TableToolbar;\n//# sourceMappingURL=TableToolbar.js.map","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDeepCompareEffect } from 'react-use';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader, CardHeaderMain } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { useSession } from '../authentication/authenticationContext';\nimport {\n  useProduct,\n  useProductInventoryHostsConfig,\n  useProductInventoryHostsQuery\n} from '../productView/productViewContext';\nimport { helpers } from '../../common';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { InventoryGuests } from '../inventoryGuests/inventoryGuests';\nimport { inventoryCardHelpers } from './inventoryCardHelpers';\nimport Pagination from '../pagination/pagination';\nimport { ToolbarFieldDisplayName } from '../toolbar/toolbarFieldDisplayName';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\nimport { useGetInstancesInventory, useOnPageInstances, useOnColumnSortInstances } from './inventoryCardContext';\n\n/**\n * Instances, and Subscriptions base inventory card.\n *\n * @memberof Components\n * @module InventoryCard\n * @property {module} InventoryCardContext\n * @property {module} InventoryCardHelpers\n */\n\n/**\n * ToDo: Update table component and review the deep comparison use on data\n * The newer table wrapper should remove the need to use the deep comparison,\n * temporarily using to allow the move from the deprecated inventory.\n */\n/**\n * Set up inventory cards. Expand filters with base settings.\n *\n * @param {object} props\n * @param {React.ReactNode} props.cardActions\n * @param {boolean} props.isDisabled\n * @param {number} props.perPageDefault\n * @param {Function} props.t\n * @param {Function} props.useGetInventory\n * @param {Function} props.useOnPage\n * @param {Function} props.useOnColumnSort\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryConfig\n * @param {Function} props.useProductInventoryQuery\n * @param {Function} props.useSession\n * @fires onColumnSort\n * @fires onPage\n * @returns {React.ReactNode}\n */\nconst InventoryCard = ({\n  cardActions,\n  isDisabled,\n  perPageDefault,\n  t,\n  useGetInventory: useAliasGetInventory,\n  useOnPage: useAliasOnPage,\n  useOnColumnSort: useAliasOnColumnSort,\n  useProduct: useAliasProduct,\n  useProductInventoryConfig: useAliasProductInventoryConfig,\n  useProductInventoryQuery: useAliasProductInventoryQuery,\n  useSession: useAliasSession\n}) => {\n  const [updatedColumnsRows, setUpdatedColumnsRows] = useState({ columnHeaders: [], rows: [] });\n  const sessionData = useAliasSession();\n  const query = useAliasProductInventoryQuery();\n  const onPage = useAliasOnPage();\n  const onColumnSort = useAliasOnColumnSort();\n  const { productId } = useAliasProduct();\n  const { filters: filterInventoryData, settings } = useAliasProductInventoryConfig();\n  const { error, fulfilled, pending, data = {} } = useAliasGetInventory({ isDisabled });\n  const { data: listData = [], meta = {} } = data;\n\n  useDeepCompareEffect(() => {\n    let updatedColumnHeaders = [];\n    let updatedRows = [];\n\n    if (fulfilled && listData.length) {\n      updatedRows = listData.map(({ ...cellData }) => {\n        const { columnHeaders, cells } = inventoryCardHelpers.parseRowCellsListData({\n          filters: inventoryCardHelpers.parseInventoryFilters({\n            filters: filterInventoryData,\n            onSort: onColumnSort,\n            query\n          }),\n          cellData,\n          meta,\n          session: sessionData,\n          productId\n        });\n\n        updatedColumnHeaders = columnHeaders;\n        let expandedContent;\n\n        if (typeof settings?.guestContent === 'function') {\n          const guestId = settings?.guestContent({ ...cellData }, { ...sessionData });\n\n          if (guestId) {\n            expandedContent = (\n              <InventoryGuests key={`guests-${guestId}`} id={guestId} numberOfGuests={cellData.numberOfGuests} />\n            );\n          }\n        }\n\n        return {\n          cells,\n          expandedContent\n        };\n      });\n    }\n\n    setUpdatedColumnsRows(() => ({\n      columnHeaders: updatedColumnHeaders,\n      rows: updatedRows\n    }));\n  }, [filterInventoryData, fulfilled, listData]);\n\n  if (isDisabled) {\n    return (\n      <Card className=\"curiosity-inventory-card__disabled\">\n        <CardBody>\n          <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n        </CardBody>\n      </Card>\n    );\n  }\n\n  const itemCount = meta?.count;\n  const updatedPerPage = query[RHSM_API_QUERY_SET_TYPES.LIMIT] || perPageDefault;\n  const updatedOffset = query[RHSM_API_QUERY_SET_TYPES.OFFSET];\n  const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n  // Set an updated key to force refresh minHeight\n  const minHeightContentRefreshKey =\n    (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    `bodyMinHeight-${updatedPerPage}`;\n\n  return (\n    <Card className=\"curiosity-inventory-card\">\n      <MinHeight key=\"headerMinHeight\">\n        <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n          {cardActions}\n          <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n            <Pagination\n              isCompact\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              offset={updatedOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={updatedPerPage}\n            />\n          </CardActions>\n        </CardHeader>\n      </MinHeight>\n      <MinHeight key={minHeightContentRefreshKey}>\n        <CardBody>\n          <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n            {pending && (\n              <Loader\n                variant=\"table\"\n                tableProps={{\n                  className: 'curiosity-inventory-list',\n                  colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                  colWidth:\n                    (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                  rowCount: listData?.length || updatedPerPage,\n                  variant: TableVariant.compact\n                }}\n              />\n            )}\n            {!pending && (\n              <Table\n                borders\n                variant={TableVariant.compact}\n                className=\"curiosity-inventory-list\"\n                columnHeaders={updatedColumnsRows.columnHeaders}\n                rows={updatedColumnsRows.rows}\n              />\n            )}\n          </div>\n        </CardBody>\n      </MinHeight>\n      <MinHeight key=\"footerMinHeight\">\n        <CardFooter\n          className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n          aria-hidden={error || !itemCount || false}\n        >\n          <TableToolbar isFooter>\n            <Pagination\n              dropDirection=\"up\"\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              offset={updatedOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={updatedPerPage}\n            />\n          </TableToolbar>\n        </CardFooter>\n      </MinHeight>\n    </Card>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{cardActions: React.ReactNode, useSession: Function, useOnPage: Function, useProduct: Function, t: Function,\n *     perPageDefault: number, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCard.propTypes = {\n  cardActions: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  t: PropTypes.func,\n  useGetInventory: PropTypes.func,\n  useOnPage: PropTypes.func,\n  useOnColumnSort: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryConfig: PropTypes.func,\n  useProductInventoryQuery: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{cardActions: React.ReactNode, useSession: Function, useOnPage: Function, useProduct: Function, t: translate,\n *     perPageDefault: number, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCard.defaultProps = {\n  cardActions: (\n    <CardHeaderMain>\n      <ToolbarFieldDisplayName />\n    </CardHeaderMain>\n  ),\n  isDisabled: helpers.UI_DISABLED_TABLE_INSTANCES,\n  perPageDefault: 10,\n  t: translate,\n  useGetInventory: useGetInstancesInventory,\n  useOnPage: useOnPageInstances,\n  useOnColumnSort: useOnColumnSortInstances,\n  useProduct,\n  useProductInventoryConfig: useProductInventoryHostsConfig,\n  useProductInventoryQuery: useProductInventoryHostsQuery,\n  useSession\n};\n\nexport { InventoryCard as default, InventoryCard };\n","import { useShallowCompareEffect } from 'react-use';\nimport _camelCase from 'lodash/camelCase';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\n\n/**\n * @memberof InventoryCard\n * @module InventoryCardContext\n */\n\n/**\n * Combined Redux RHSM Actions, getInstancesInventory, and inventory selector response.\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}|Array|{}), pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetInstancesInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getInstancesInventory,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryHostsQuery,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductInventoryQuery();\n  const dispatch = useAliasDispatch();\n  const { cancelled, pending, data, ...response } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.instancesInventory?.[productId]\n  );\n\n  useShallowCompareEffect(() => {\n    if (!isDisabled) {\n      getInventory(productId, query)(dispatch);\n    }\n  }, [dispatch, isDisabled, productId, query]);\n\n  return {\n    ...response,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * An onPage callback for instances inventory.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnPageInstances = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for instances inventory.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   * @returns {void}\n   */\n  return ({ offset, perPage }) => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n};\n\n/**\n * An onColumnSort callback for instances inventory.\n *\n * @param {object} options\n * @param {object} options.sortColumns\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnColumnSortInstances = ({\n  sortColumns = SORT_TYPES,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for instances inventory.\n   *\n   * @event onColumnSort\n   * @param {*} _data\n   * @param {object} params\n   * @param {string} params.direction\n   * @param {string} params.id\n   * @returns {void}\n   */\n  return (_data, { direction, id }) => {\n    const updatedSortColumn = Object.values(sortColumns).find(value => value === id || _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n};\n\nconst context = {\n  useGetInstancesInventory,\n  useOnPageInstances,\n  useOnColumnSortInstances\n};\n\nexport { context as default, context, useGetInstancesInventory, useOnPageInstances, useOnColumnSortInstances };\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useResizeObserver } from '../../hooks/useWindow';\n\n/**\n * Normalize component height on page loads and updates.\n *\n * @memberof Components\n * @module MinHeight\n */\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {boolean} props.isOnLoad\n * @param {number} props.minHeight\n * @param {Function} props.useResizeObserver\n * @returns {React.ReactNode}\n */\nconst MinHeight = ({ children, isOnLoad, minHeight, useResizeObserver: useAliasResizeObserver }) => {\n  const [tracking, setTracking] = useState({ containerWidth: undefined, isLoaded: false });\n  const containerRef = useRef(null);\n  const innerContainerRef = useRef(null);\n  const { height: containerHeight, width: containerWidth } = useAliasResizeObserver(containerRef);\n\n  useEffect(() => {\n    if (!isOnLoad || (isOnLoad && !tracking.isLoaded)) {\n      const { current: domElement = {} } = containerRef;\n      const { current: innerDomElement = {} } = innerContainerRef;\n\n      if (domElement?.style) {\n        let updatedHeight = innerDomElement?.clientHeight || 0;\n\n        if (minHeight > containerHeight) {\n          updatedHeight = minHeight;\n        }\n\n        domElement.style.minHeight = `${updatedHeight}px`;\n        setTracking(() => ({\n          containerWidth,\n          isLoaded: isOnLoad,\n          updatedHeight\n        }));\n      }\n    }\n  }, [containerHeight, containerWidth, containerRef, innerContainerRef, isOnLoad, minHeight, tracking.isLoaded]);\n\n  return (\n    <div className=\"curiosity-minheight\" ref={containerRef}>\n      <div className=\"curiosity-minheight__inner\" ref={innerContainerRef}>\n        {children}\n      </div>\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, useResizeObserver: Function, children: React.ReactNode, isOnLoad: boolean}}\n */\nMinHeight.propTypes = {\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number,\n  isOnLoad: PropTypes.bool,\n  useResizeObserver: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, useResizeObserver: Function, isOnLoad: boolean}}\n */\nMinHeight.defaultProps = {\n  isOnLoad: false,\n  minHeight: 0,\n  useResizeObserver\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * Inventory paging.\n *\n * @memberof Components\n * @module Pagination\n * @property {module} PaginationHelpers\n */\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","/**\n * @memberof Pagination\n * @module PaginationHelpers\n */\n\n/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup } from '@patternfly/react-core';\nimport _debounce from 'lodash/debounce';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport { TextInput } from '../form/textInput';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A standalone Display Name input filter.\n *\n * @memberof Toolbar\n * @module ToolbarFieldDisplayName\n */\n\n/**\n * ToDo: evaluate the debounce milliseconds, currently based off platforms default 800 ms\n */\n/**\n * Display a display name input field for search.\n *\n * @fires onSubmit\n * @fires onClear\n * @fires onKeyUp\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.useDispatch\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryHostsQuery\n * @returns {React.ReactNode}\n */\nconst ToolbarFieldDisplayName = ({\n  t,\n  useDispatch: useAliasDispatch,\n  useProduct: useAliasProduct,\n  useProductInventoryHostsQuery: useAliasProductInventoryHostsQuery\n}) => {\n  const { viewId } = useAliasProduct();\n  const { [RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME]: currentValue } = useAliasProductInventoryHostsQuery();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On submit, dispatch type.\n   *\n   * @event onSubmit\n   * @param {string} submitValue\n   * @returns {void}\n   */\n  const onSubmit = submitValue =>\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME]: submitValue?.trim() || null\n      }\n    ]);\n\n  /**\n   * On clear, dispatch type.\n   *\n   * @event onClear\n   * @returns {void}\n   */\n  const onClear = () => {\n    if (currentValue === '' || !currentValue) {\n      return;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME]: null\n      }\n    ]);\n  };\n\n  /**\n   * Set up submit debounce event to allow for bypass.\n   */\n  const debounced = _debounce(onSubmit, 700);\n\n  /**\n   * On enter submit value, on type submit value, and on esc ignore (clear value at component level).\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 13:\n        onSubmit(event.value);\n        break;\n      case 27:\n        break;\n      default:\n        debounced(event.value);\n        break;\n    }\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        aria-label={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        className=\"curiosity-input__display-name\"\n        iconVariant=\"search\"\n        maxLength={255}\n        onClear={onClear}\n        onKeyUp={onKeyUp}\n        value={currentValue}\n        placeholder={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        data-test=\"toolbarFieldDisplayName\"\n      />\n    </InputGroup>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.propTypes = {\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryHostsQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.defaultProps = {\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useProduct,\n  useProductInventoryHostsQuery\n};\n\nexport { ToolbarFieldDisplayName as default, ToolbarFieldDisplayName };\n"],"names":["TextInput","React","constructor","arguments","_defineProperty","updatedValue","event","onClear","onKeyUp","type","this","props","currentTarget","keyCode","clonedEvent","createMockEvent","value","setState","onMouseUp","setTimeout","onChange","render","_ref","state","className","id","isDisabled","name","isReadOnly","updatedName","helpers","updatedId","PfTextInput","_extends","concat","propTypes","PropTypes","defaultProps","__assign","Object","assign","t","s","i","n","length","p","prototype","hasOwnProperty","call","apply","generateCount","results","_a","_b","_c","isFooter","selected","children","ouiaId","_d","ouiaSafe","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","tableToolbarClasses","ouiaComponentType","ouiaFinalId","useOUIAId","Fragment","Toolbar","InventoryCard","cardActions","perPageDefault","useGetInventory","useAliasGetInventory","useOnPage","useAliasOnPage","useOnColumnSort","useAliasOnColumnSort","useProduct","useAliasProduct","useProductInventoryConfig","useAliasProductInventoryConfig","useProductInventoryQuery","useAliasProductInventoryQuery","useSession","useAliasSession","updatedColumnsRows","setUpdatedColumnsRows","useState","columnHeaders","rows","sessionData","query","onPage","onColumnSort","productId","filters","filterInventoryData","settings","error","fulfilled","pending","data","listData","meta","useDeepCompareEffect","updatedColumnHeaders","updatedRows","map","_ref2","cellData","cells","inventoryCardHelpers","onSort","session","expandedContent","guestContent","guestId","InventoryGuests","key","numberOfGuests","Card","CardBody","Bullseye","context","itemCount","count","updatedPerPage","RHSM_API_QUERY_SET_TYPES","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","MinHeight","CardHeader","CardActions","Pagination","isCompact","offset","onPerPage","perPage","Loader","variant","tableProps","colCount","keys","colWidth","_ref3","cellWidth","rowCount","TableVariant","Table","borders","CardFooter","TableToolbar","dropDirection","CardHeaderMain","ToolbarFieldDisplayName","translate","useGetInstancesInventory","useOnPageInstances","useOnColumnSortInstances","useProductInventoryHostsConfig","useProductInventoryHostsQuery","getInventory","reduxActions","useDispatch","useAliasDispatch","storeHooks","useSelectorsResponse","useAliasSelectorsResponse","undefined","dispatch","cancelled","response","_inventory$instancesI","inventory","instancesInventory","useShallowCompareEffect","reduxTypes","viewId","sortColumns","SORT_TYPES","_data","direction","updatedSortColumn","values","find","_camelCase","updatedDirection","SortByDirection","SORT_DIRECTION_TYPES","console","warn","isOnLoad","minHeight","useResizeObserver","useAliasResizeObserver","tracking","setTracking","containerWidth","isLoaded","containerRef","useRef","innerContainerRef","height","containerHeight","width","useEffect","current","domElement","innerDomElement","style","updatedHeight","clientHeight","ref","PfPagination","onSetPage","page","limit","onPerPageSelect","calculateOffsetFromPage","calculatePageFromOffset","Math","ceil","useAliasProductInventoryHostsQuery","currentValue","onSubmit","submitValue","trim","debounced","_debounce","InputGroup","iconVariant","maxLength","placeholder"],"sourceRoot":""}
{"version":3,"file":"js/8526.1666196121234.1870405351becac26a33.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/info-circle-icon.js","webpack:///./src/components/graphCard/graphCard.deprecated.js","webpack:///./src/components/inventoryCardSubscriptions/inventoryCardSubscriptions.js","webpack:///./src/components/inventoryCardSubscriptions/inventoryCardSubscriptionsContext.js","webpack:///./src/components/inventoryTabs/inventoryTab.js","webpack:///./src/components/inventoryTabs/inventoryTabs.js","webpack:///./src/components/tabs/tabs.js","webpack:///./src/components/toolbar/toolbar.js","webpack:///./src/components/toolbar/toolbarContext.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.InfoCircleIconConfig = {\n  name: 'InfoCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.InfoCircleIcon = require('../createIcon').createIcon(exports.InfoCircleIconConfig);\nexports[\"default\"] = exports.InfoCircleIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport { useShallowCompareEffect } from 'react-use';\nimport { connect, reduxActions, reduxSelectors } from '../../redux';\nimport { useProduct, useProductGraphConfig, useProductGraphTallyQuery } from '../productView/productViewContext';\nimport { helpers } from '../../common';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { GraphCardChart } from './graphCardChart.deprecated';\n\n/**\n * A chart/graph card.\n *\n * @param {object} props\n * @param {Node} props.cardTitle\n * @param {Node} props.children\n * @param {boolean} props.error\n * @param {Function} props.getGraphReportsCapacity\n * @param {object} props.graphData\n * @param {object} props.meta\n * @param {boolean} props.isDisabled\n * @param {boolean} props.pending\n * @param {Function} props.useProduct\n * @param {Function} props.useProductGraphConfig\n * @param {Function} props.useProductGraphTallyQuery\n * @returns {Node}\n */\nconst GraphCard = ({\n  cardTitle,\n  children,\n  error,\n  getGraphReportsCapacity,\n  graphData,\n  meta,\n  isDisabled,\n  pending,\n  useProduct: useAliasProduct,\n  useProductGraphConfig: useAliasProductGraphConfig,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery\n}) => {\n  const { productId } = useAliasProduct();\n  const { settings } = useAliasProductGraphConfig();\n  const query = useAliasProductGraphTallyQuery();\n\n  useShallowCompareEffect(() => {\n    const {\n      [RHSM_API_QUERY_TYPES.START_DATE]: startDate,\n      [RHSM_API_QUERY_TYPES.END_DATE]: endDate,\n      [RHSM_API_QUERY_TYPES.GRANULARITY]: granularity\n    } = query;\n\n    if (!isDisabled && granularity && startDate && endDate && productId) {\n      getGraphReportsCapacity(productId, query);\n    }\n  }, [getGraphReportsCapacity, isDisabled, productId, query]);\n\n  if (isDisabled) {\n    return null;\n  }\n\n  let actionDisplay = null;\n\n  if (typeof settings?.actionDisplay === 'function') {\n    actionDisplay = settings.actionDisplay({ data: { ...graphData }, meta: { ...meta } });\n  }\n\n  return (\n    <Card className=\"curiosity-usage-graph\">\n      <MinHeight key=\"headerMinHeight\">\n        <CardHeader>\n          <CardTitle>\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {cardTitle}\n            </Title>\n          </CardTitle>\n          <CardActions className={(error && 'blur') || ''}>\n            <React.Fragment key=\"actionDisplay\">{actionDisplay}</React.Fragment>\n            {children}\n          </CardActions>\n        </CardHeader>\n      </MinHeight>\n      <MinHeight key=\"bodyMinHeight\">\n        <CardBody>\n          <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n            {pending && <Loader variant=\"graph\" />}\n            {!pending && <GraphCardChart graphData={graphData} />}\n          </div>\n        </CardBody>\n      </MinHeight>\n    </Card>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{getGraphReportsCapacity: Function, useProduct: Function, useProductGraphTallyQuery: Function,\n *     useProductGraphConfig: Function, children: Node, meta: object, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: Node}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.node,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  isDisabled: PropTypes.bool,\n  meta: PropTypes.object,\n  pending: PropTypes.bool,\n  useProduct: PropTypes.func,\n  useProductGraphConfig: PropTypes.func,\n  useProductGraphTallyQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, useProduct: Function, useProductGraphTallyQuery: Function,\n *     useProductGraphConfig: Function, children: Node, meta: object, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: Node}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  meta: {},\n  pending: false,\n  useProduct,\n  useProductGraphConfig,\n  useProductGraphTallyQuery\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  useProductInventorySubscriptionsConfig,\n  useProductInventorySubscriptionsQuery\n} from '../productView/productViewContext';\nimport {\n  useGetSubscriptionsInventory,\n  useOnPageSubscriptions,\n  useOnColumnSortSubscriptions\n} from './inventoryCardSubscriptionsContext';\nimport InventoryCard from '../inventoryCard/inventoryCard';\nimport { helpers } from '../../common';\n\n/**\n * A subscriptions' system inventory component.\n *\n * @param {object} props\n * @param {boolean} props.isDisabled\n * @param {Function} props.useGetInventory\n * @param {Function} props.useOnPage\n * @param {Function} props.useOnColumnSort\n * @param {Function} props.useProductInventoryConfig\n * @param {Function} props.useProductInventoryQuery\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n * @returns {Node}\n */\nconst InventoryCardSubscriptions = ({ ...props }) => <InventoryCard cardActions={null} {...props} />;\n\n/**\n * Prop types.\n *\n * @type {{useOnPage: Function, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCardSubscriptions.propTypes = {\n  isDisabled: PropTypes.bool,\n  useGetInventory: PropTypes.func,\n  useOnPage: PropTypes.func,\n  useOnColumnSort: PropTypes.func,\n  useProductInventoryConfig: PropTypes.func,\n  useProductInventoryQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useOnPage: Function, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCardSubscriptions.defaultProps = {\n  isDisabled: helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  useGetInventory: useGetSubscriptionsInventory,\n  useOnPage: useOnPageSubscriptions,\n  useOnColumnSort: useOnColumnSortSubscriptions,\n  useProductInventoryConfig: useProductInventorySubscriptionsConfig,\n  useProductInventoryQuery: useProductInventorySubscriptionsQuery\n};\n\nexport { InventoryCardSubscriptions as default, InventoryCardSubscriptions };\n","import { useShallowCompareEffect } from 'react-use';\nimport _camelCase from 'lodash/camelCase';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventorySubscriptionsQuery } from '../productView/productViewContext';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\n\n/**\n * Combined Redux RHSM Actions, getSubscriptionsInventory, and inventory selector response.\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsResponse\n * @returns {Function}\n */\nconst useGetSubscriptionsInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getSubscriptionsInventory,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventorySubscriptionsQuery,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductInventoryQuery();\n  const dispatch = useAliasDispatch();\n  const { error, cancelled, fulfilled, pending, data } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.subscriptionsInventory?.[productId]\n  );\n\n  useShallowCompareEffect(() => {\n    if (!isDisabled) {\n      getInventory(productId, query)(dispatch);\n    }\n  }, [dispatch, isDisabled, productId, query]);\n\n  return {\n    error,\n    fulfilled,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * An onPage callback for subscriptions inventory.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnPageSubscriptions = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for subscriptions inventory.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   * @returns {void}\n   */\n  return ({ offset, perPage }) => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n};\n\n/**\n * An onColumnSort callback for subscriptions inventory.\n *\n * @param {object} options\n * @param {object} options.sortColumns\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnColumnSortSubscriptions = ({\n  sortColumns = SORT_TYPES,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for subscriptions inventory.\n   *\n   * @event onColumnSort\n   * @param {*} _data\n   * @param {object} params\n   * @param {string} params.direction\n   * @param {string} params.id\n   * @returns {void}\n   */\n  return (_data, { direction, id }) => {\n    const updatedSortColumn = Object.values(sortColumns).find(value => value === id || _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n};\n\nconst context = {\n  useGetSubscriptionsInventory,\n  useOnPageSubscriptions,\n  useOnColumnSortSubscriptions\n};\n\nexport {\n  context as default,\n  context,\n  useGetSubscriptionsInventory,\n  useOnPageSubscriptions,\n  useOnColumnSortSubscriptions\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * A tab pass-through component for passing props to InventoryTabs.\n *\n * @param {object} props\n * @param {boolean} props.active\n * @param {React.ReactNode} props.children\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\n// eslint-disable-next-line no-unused-vars\nconst InventoryTab = ({ active, children, title }) => children;\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nInventoryTab.propTypes = {\n  children: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  title: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nInventoryTab.defaultProps = {\n  active: false\n};\n\nexport { InventoryTab as default, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { connect, reduxTypes, store } from '../../redux';\nimport { Tabs } from '../tabs/tabs';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { InventoryTab } from './inventoryTab';\n\n/**\n * A system inventory tabs component.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass InventoryTabs extends React.Component {\n  /**\n   * On tab update state.\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {string} params.index tab index\n   */\n  onTab = ({ index }) => {\n    const { productId } = this.props;\n\n    store.dispatch({\n      type: reduxTypes.inventory.SET_INVENTORY_TAB,\n      tabs: {\n        [productId]: index\n      }\n    });\n  };\n\n  /**\n   * Render inventory tabs using Inventory tab passed props only. A parallel outcome can be\n   * achieved by passing an array of objects through a prop.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { activeTab, children, defaultActiveTab, isDisabled, t } = this.props;\n\n    if (isDisabled) {\n      return null;\n    }\n\n    const updatedChildren = React.Children.toArray(children).map((child, index) => {\n      const { props = {} } = child;\n\n      return {\n        active: props.active || false,\n        content: props.children || child,\n        title: props.title || t('curiosity-inventory.tabSubHeading', { count: index })\n      };\n    });\n\n    return (\n      <React.Fragment>\n        <Title headingLevel=\"h2\" className=\"sr-only\">\n          {t('curiosity-inventory.tabHeading', { count: updatedChildren.length })}\n        </Title>\n        <Tabs activeTab={activeTab} defaultActiveTab={defaultActiveTab} onTab={this.onTab} tabs={updatedChildren} />\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, t: Function, children: Node, defaultActiveTab: number, isDisabled: boolean,\n *     activeTab: number}}\n */\nInventoryTabs.propTypes = {\n  activeTab: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  defaultActiveTab: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.defaultProps = {\n  activeTab: 0,\n  defaultActiveTab: 0,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  t: translate\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst mapStateToProps = ({ inventory }, { productId }) => ({ activeTab: inventory.tabs?.[productId] });\n\nconst ConnectedInventoryTabs = connect(mapStateToProps)(InventoryTabs);\n\nexport { ConnectedInventoryTabs as default, ConnectedInventoryTabs, InventoryTabs, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs as PfTabs, Tab, TabTitleText, Grid, GridItem } from '@patternfly/react-core';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: PF tabs misinterprets \"isElementInView\" when tab title nodes are loaded dynamically\n * It appears the use of isElementInView within PF tabs is trying to be predicative in using\n * \"getBoundingClientRect\" but produces questionable results in scenarios where content is\n * async created. isElementInView assumes some form of the content will always be there\n * instead of scenarios where someone tries to dynamically apply components. It may be good to\n * review using a window.setTimeout(() => handleScrollButtons()) in componentDidMount.\n *\n * Our temporary solution is to simply hide the buttons with a manual set flag affecting the\n * CSS class. This will most likely cause long-term issues.\n */\n/**\n * ToDo: Insights frontend components uses a custom tabs layout, investigate related CSS classes\n * Originally we applied the CSS classes, but they appeared to provide nothing. Since Insights\n * rolled its own tabs we're hesitant to apply said classes without understanding what they provide.\n */\n/**\n * A set of tabs.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass Tabs extends React.Component {\n  state = {\n    updatedActiveTab: null,\n    updatedTabs: null\n  };\n\n  componentDidMount() {\n    const { updatedTabs } = this.state;\n\n    if (updatedTabs === null) {\n      this.setTabData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tabs } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (!_isEqualWith(prevProps.tabs, tabs, customizer)) {\n      this.setTabData();\n    }\n  }\n\n  /**\n   * On tab selected\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {number} params.index\n   */\n  onTab = ({ index }) => {\n    const { onTab } = this.props;\n\n    this.setState(\n      {\n        updatedActiveTab: index\n      },\n      () => onTab({ index })\n    );\n  };\n\n  /**\n   * Convert tab objects into the required PF Tab format.\n   */\n  setTabData() {\n    const { activeTab, defaultActiveTab, tabs } = this.props;\n    let updatedActiveTab = defaultActiveTab;\n\n    const updatedTabs = tabs.map(({ active, content, title }, index) => {\n      updatedActiveTab = active ? index : updatedActiveTab;\n\n      return (\n        <Tab key={title} eventKey={index} title={<TabTitleText>{title}</TabTitleText>}>\n          {content}\n        </Tab>\n      );\n    });\n\n    if (typeof activeTab === 'number') {\n      updatedActiveTab = activeTab;\n    }\n\n    this.setState({\n      updatedActiveTab,\n      updatedTabs\n    });\n  }\n\n  /**\n   * Apply props to tabs.\n   *\n   * @returns {Node}\n   */\n  renderTabs() {\n    const { updatedActiveTab, updatedTabs } = this.state;\n    const { className, hasOverflowScroll } = this.props;\n\n    return (\n      <PfTabs\n        className={`curiosity-tabs${(!hasOverflowScroll && '__no-scroll') || ''} ${className || ''}`}\n        activeKey={updatedActiveTab}\n        onSelect={(event, index) => this.onTab({ event, index })}\n        mountOnEnter\n        unmountOnExit\n        inset={{\n          default: 'insetNone',\n          md: 'insetLg'\n        }}\n      >\n        {updatedTabs}\n      </PfTabs>\n    );\n  }\n\n  /**\n   * Render tabs.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"curiosity-tabs-container\">\n        <GridItem span={12}>{this.renderTabs()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.propTypes = {\n  activeTab: PropTypes.number,\n  className: PropTypes.string,\n  defaultActiveTab: PropTypes.number,\n  hasOverflowScroll: PropTypes.bool,\n  onTab: PropTypes.func,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      content: PropTypes.node.isRequired,\n      title: PropTypes.node.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.defaultProps = {\n  activeTab: null,\n  className: '',\n  defaultActiveTab: 0,\n  hasOverflowScroll: false,\n  onTab: helpers.noop,\n  tabs: []\n};\n\nexport { Tabs as default, Tabs };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar as PfToolbar,\n  ToolbarContent,\n  ToolbarFilter,\n  ToolbarGroup,\n  ToolbarItem,\n  ToolbarToggleGroup\n} from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons';\nimport {\n  useToolbarFieldClear,\n  useToolbarFieldClearAll,\n  useToolbarFieldQueries,\n  useToolbarSecondaryFields\n} from './toolbarContext';\nimport { ToolbarFieldSelectCategory, useSelectCategoryOptions } from './toolbarFieldSelectCategory';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Application filter toolbar.\n *\n * @fires onClearFilter\n * @fires onClearAll\n * @param {object} props\n * @param {boolean} props.hardFilterReset On clearing all fields allow the category to reset as well.\n * @param {boolean} props.isDisabled\n * @param {Function} props.t\n * @param {Function} props.useSelectCategoryOptions\n * @param {Function} props.useToolbarFieldClear\n * @param {Function} props.useToolbarFieldClearAll\n * @param {Function} props.useToolbarFieldQueries\n * @param {Function} props.useToolbarSecondaryFields\n * @returns {Node}\n */\nconst Toolbar = ({\n  hardFilterReset,\n  isDisabled,\n  t,\n  useSelectCategoryOptions: useAliasSelectCategoryOptions,\n  useToolbarFieldClear: useAliasToolbarFieldClear,\n  useToolbarFieldClearAll: useAliasToolbarFieldClearAll,\n  useToolbarFieldQueries: useAliasToolbarFieldQueries,\n  useToolbarSecondaryFields: useAliasToolbarSecondaryFields\n}) => {\n  const { currentCategory, options } = useAliasSelectCategoryOptions();\n  const toolbarFieldQueries = useAliasToolbarFieldQueries();\n  const clearField = useAliasToolbarFieldClear();\n  const clearAllFields = useAliasToolbarFieldClearAll();\n  const secondaryFields = useAliasToolbarSecondaryFields();\n\n  if (isDisabled || (!options?.length && !secondaryFields?.length)) {\n    return null;\n  }\n\n  /**\n   * Clear a specific value\n   *\n   * @event onClearFilter\n   * @param {object} params\n   * @param {*} params.value\n   * @returns {void}\n   */\n  const onClearFilter = ({ value }) => clearField(value);\n\n  /**\n   * Clear all active filters.\n   *\n   * @event onClearAll\n   * @returns {void}\n   */\n  const onClearAll = () => clearAllFields(hardFilterReset);\n\n  /**\n   * Set selected options for chip display.\n   *\n   * @param {object} params\n   * @param {Array} params.options\n   * @param {*} params.value\n   * @returns {Array}\n   */\n  const setSelectedOptions = ({ options: filterOptions, value }) => {\n    const query = filterOptions.find(({ value: optionValue }) => optionValue === toolbarFieldQueries?.[value]);\n    return (query?.title && [query?.title]) || [];\n  };\n\n  return (\n    <PfToolbar\n      id=\"curiosity-toolbar\"\n      className=\"curiosity-toolbar pf-m-toggle-group-container ins-c-primary-toolbar\"\n      collapseListedFiltersBreakpoint=\"sm\"\n      clearAllFilters={onClearAll}\n      clearFiltersButtonText={t('curiosity-toolbar.clearFilters')}\n    >\n      <ToolbarContent>\n        <ToolbarToggleGroup toggleIcon={<FilterIcon />} breakpoint=\"md\">\n          <ToolbarGroup variant=\"filter-group\">\n            {options.length > 1 && (\n              <ToolbarItem>\n                <ToolbarFieldSelectCategory />\n              </ToolbarItem>\n            )}\n            {options.map(({ title, value, component: OptionComponent, isClearable, options: filterOptions }) => {\n              const chipProps = { categoryName: title };\n\n              if (isClearable !== false) {\n                chipProps.chips = setSelectedOptions({ options: filterOptions, value });\n                chipProps.deleteChip = () => onClearFilter({ options: filterOptions, value });\n              }\n\n              return (\n                <ToolbarFilter\n                  key={value}\n                  showToolbarItem={currentCategory === value || options.length === 1}\n                  {...chipProps}\n                >\n                  <OptionComponent isFilter />\n                </ToolbarFilter>\n              );\n            })}\n          </ToolbarGroup>\n        </ToolbarToggleGroup>\n        <ToolbarItem alignment={{ default: 'alignRight' }}>{secondaryFields}</ToolbarItem>\n      </ToolbarContent>\n    </PfToolbar>\n  );\n};\n\n/**\n * Prop types\n *\n * @type {{useToolbarFieldClear: Function, t: Function, useSelectCategoryOptions: Function, hardFilterReset: boolean,\n *     useToolbarSecondaryFields: Function, isDisabled: boolean, useToolbarFieldClearAll: Function, useToolbarFieldQueries: Function}}\n */\nToolbar.propTypes = {\n  hardFilterReset: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  useSelectCategoryOptions: PropTypes.func,\n  useToolbarFieldClear: PropTypes.func,\n  useToolbarFieldClearAll: PropTypes.func,\n  useToolbarFieldQueries: PropTypes.func,\n  useToolbarSecondaryFields: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useToolbarFieldClear: Function, t: Function, useSelectCategoryOptions: Function, hardFilterReset: boolean,\n *     useToolbarSecondaryFields: Function, isDisabled: boolean, useToolbarFieldClearAll: Function, useToolbarFieldQueries: Function}}\n */\nToolbar.defaultProps = {\n  hardFilterReset: false,\n  isDisabled: helpers.UI_DISABLED_TOOLBAR,\n  t: translate,\n  useSelectCategoryOptions,\n  useToolbarFieldClear,\n  useToolbarFieldClearAll,\n  useToolbarFieldQueries,\n  useToolbarSecondaryFields\n};\n\nexport { Toolbar as default, Toolbar };\n","import React from 'react';\nimport { useProductQuery, useProductGraphTallyQuery, useProductToolbarConfig } from '../productView/productViewContext';\nimport { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { useOnSelect as useSelectCategoryOnSelect, toolbarFieldOptions } from './toolbarFieldSelectCategory';\nimport { useOnSelect as useBillingProviderOnSelect } from './toolbarFieldBillingProvider';\nimport { useOnSelect as useSlaOnSelect } from './toolbarFieldSla';\nimport { useOnSelect as useUsageOnSelect } from './toolbarFieldUsage';\nimport { SelectPosition } from '../form/select';\n\n/**\n * Return current values for categories/queries.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductGraphTallyQuery\n * @returns {object}\n */\nconst useToolbarFieldQueries = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery = useProductGraphTallyQuery\n} = {}) => {\n  const {\n    [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: billingProvider,\n    [RHSM_API_QUERY_TYPES.SLA]: sla,\n    [RHSM_API_QUERY_TYPES.UOM]: uom,\n    [RHSM_API_QUERY_TYPES.USAGE]: usage\n  } = useAliasProductQuery();\n  const { [RHSM_API_QUERY_TYPES.GRANULARITY]: granularity } = useAliasProductGraphTallyQuery();\n\n  return {\n    [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: billingProvider,\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: granularity,\n    [RHSM_API_QUERY_TYPES.SLA]: sla,\n    [RHSM_API_QUERY_TYPES.UOM]: uom,\n    [RHSM_API_QUERY_TYPES.USAGE]: usage\n  };\n};\n\n/**\n * Clear a specific toolbar category.\n *\n * @param {object} options\n * @param {Function} options.useBillingProviderOnSelect\n * @param {Function} options.useSlaOnSelect\n * @param {Function} options.useUsageOnSelect\n * @returns {Function}\n */\nconst useToolbarFieldClear = ({\n  useBillingProviderOnSelect: useAliasBillingProviderOnSelect = useBillingProviderOnSelect,\n  useSlaOnSelect: useAliasSlaOnSelect = useSlaOnSelect,\n  useUsageOnSelect: useAliasUsageOnSelect = useUsageOnSelect\n} = {}) => {\n  const billingOnSelect = useAliasBillingProviderOnSelect();\n  const slaOnSelect = useAliasSlaOnSelect();\n  const usageOnSelect = useAliasUsageOnSelect();\n\n  return field => {\n    switch (field) {\n      case RHSM_API_QUERY_TYPES.BILLING_PROVIDER:\n        billingOnSelect();\n        break;\n      case RHSM_API_QUERY_TYPES.SLA:\n        slaOnSelect();\n        break;\n      case RHSM_API_QUERY_TYPES.USAGE:\n        usageOnSelect();\n        break;\n      default:\n        break;\n    }\n  };\n};\n\n/**\n * Clear all available toolbar categories.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useSelectCategoryOnSelect\n * @param {Function} options.useBillingProviderOnSelect\n * @param {Function} options.useSlaOnSelect\n * @param {Function} options.useUsageOnSelect\n * @returns {Function}\n */\nconst useToolbarFieldClearAll = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useSelectCategoryOnSelect: useAliasSelectCategoryOnSelect = useSelectCategoryOnSelect,\n  useBillingProviderOnSelect: useAliasBillingProviderOnSelect = useBillingProviderOnSelect,\n  useSlaOnSelect: useAliasSlaOnSelect = useSlaOnSelect,\n  useUsageOnSelect: useAliasUsageOnSelect = useUsageOnSelect\n} = {}) => {\n  const {\n    [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: billingProvider,\n    [RHSM_API_QUERY_TYPES.SLA]: sla,\n    [RHSM_API_QUERY_TYPES.USAGE]: usage\n  } = useAliasProductQuery();\n  const billingOnSelect = useAliasBillingProviderOnSelect();\n  const slaOnSelect = useAliasSlaOnSelect();\n  const usageOnSelect = useAliasUsageOnSelect();\n  const selectCategoryOnSelect = useAliasSelectCategoryOnSelect();\n\n  return hardFilterReset => {\n    if (typeof billingProvider === 'string') {\n      billingOnSelect();\n    }\n\n    if (typeof sla === 'string') {\n      slaOnSelect();\n    }\n\n    if (typeof usage === 'string') {\n      usageOnSelect();\n    }\n\n    if (hardFilterReset) {\n      selectCategoryOnSelect();\n    }\n  };\n};\n\n/**\n * Return list of secondary toolbar fields for display.\n *\n * @param {object} options\n * @param {Array} options.categoryOptions\n * @param {Function} options.useProductToolbarConfig\n * @returns {Array}\n */\nconst useToolbarSecondaryFields = ({\n  categoryOptions = toolbarFieldOptions,\n  useProductToolbarConfig: useAliasProductToolbarConfig = useProductToolbarConfig\n} = {}) => {\n  const { secondaryFilters = [] } = useAliasProductToolbarConfig();\n\n  return secondaryFilters.map(({ id }) => {\n    const { component: OptionComponent } = categoryOptions.find(\n      ({ value: categoryOptionValue }) => id === categoryOptionValue\n    );\n\n    return <OptionComponent key={`option-${id}`} isFilter={false} position={SelectPosition.right} />;\n  });\n};\n\nconst context = {\n  useToolbarFieldClear,\n  useToolbarFieldClearAll,\n  useToolbarFieldQueries,\n  useToolbarSecondaryFields\n};\n\nexport {\n  context as default,\n  context,\n  useToolbarFieldClear,\n  useToolbarFieldClearAll,\n  useToolbarFieldQueries,\n  useToolbarSecondaryFields\n};\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","GraphCard","cardTitle","children","error","getGraphReportsCapacity","graphData","meta","isDisabled","pending","useAliasProduct","useProduct","useAliasProductGraphConfig","useProductGraphConfig","useAliasProductGraphTallyQuery","useProductGraphTallyQuery","productId","settings","query","useShallowCompareEffect","startDate","RHSM_API_QUERY_TYPES","endDate","granularity","actionDisplay","data","Card","className","MinHeight","key","CardHeader","CardTitle","Title","headingLevel","size","CardActions","CardBody","Loader","variant","GraphCardChart","defaultProps","helpers","makeMapStateToProps","reduxSelectors","ConnectedGraphCard","connect","dispatch","id","reduxActions","InventoryCardSubscriptions","props","cardActions","useGetInventory","useGetSubscriptionsInventory","useOnPage","useOnPageSubscriptions","useOnColumnSort","useOnColumnSortSubscriptions","useProductInventoryConfig","useProductInventorySubscriptionsConfig","useProductInventoryQuery","useProductInventorySubscriptionsQuery","getInventory","useDispatch","useAliasDispatch","storeHooks","useAliasProductInventoryQuery","useSelectorsResponse","useAliasSelectorsResponse","inventory","subscriptionsInventory","cancelled","fulfilled","length","offset","perPage","type","reduxTypes","RHSM_API_QUERY_SET_TYPES","viewId","sortColumns","SORT_TYPES","_data","updatedDirection","direction","updatedSortColumn","Object","values","find","value","_camelCase","SortByDirection","SORT_DIRECTION_TYPES","console","warn","context","InventoryTab","active","title","propTypes","PropTypes","InventoryTabs","onTab","index","store","tabs","this","activeTab","defaultActiveTab","t","updatedChildren","React","map","child","content","count","Tabs","translate","ConnectedInventoryTabs","state","updatedActiveTab","updatedTabs","setState","setTabData","prevProps","_isEqualWith","valueA","valueB","toString","Tab","eventKey","TabTitleText","hasOverflowScroll","activeKey","onSelect","event","mountOnEnter","unmountOnExit","inset","default","md","Grid","GridItem","span","renderTabs","Toolbar","hardFilterReset","useAliasSelectCategoryOptions","useSelectCategoryOptions","useAliasToolbarFieldClear","useToolbarFieldClear","useAliasToolbarFieldClearAll","useToolbarFieldClearAll","useAliasToolbarFieldQueries","useToolbarFieldQueries","useAliasToolbarSecondaryFields","useToolbarSecondaryFields","currentCategory","options","toolbarFieldQueries","clearField","clearAllFields","secondaryFields","collapseListedFiltersBreakpoint","clearAllFilters","clearFiltersButtonText","ToolbarContent","ToolbarToggleGroup","toggleIcon","FilterIcon","breakpoint","ToolbarGroup","ToolbarItem","ToolbarFieldSelectCategory","OptionComponent","component","isClearable","filterOptions","chipProps","categoryName","chips","setSelectedOptions","deleteChip","ToolbarFilter","showToolbarItem","isFilter","alignment","useProductQuery","useAliasProductQuery","billingProvider","sla","uom","usage","useBillingProviderOnSelect","useAliasBillingProviderOnSelect","useSlaOnSelect","useAliasSlaOnSelect","useUsageOnSelect","useAliasUsageOnSelect","billingOnSelect","slaOnSelect","usageOnSelect","field","useSelectCategoryOnSelect","useAliasSelectCategoryOnSelect","selectCategoryOnSelect","categoryOptions","toolbarFieldOptions","useProductToolbarConfig","useAliasProductToolbarConfig","secondaryFilters","categoryOptionValue","position","SelectPosition"],"sourceRoot":""}
{"version":3,"file":"js/5242.1667339796296.d894e112c142bd90378a.js","mappings":"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","sources":["webpack:///./src/components/inventoryCard/inventoryCardHelpers.js","webpack:///./src/components/inventoryGuests/inventoryGuests.js","webpack:///./src/components/inventoryGuests/inventoryGuestsContext.js","webpack:///./src/components/productView/productViewContext.js","webpack:///./node_modules/fast-shallow-equal/index.js","webpack:///./node_modules/react-use/esm/useShallowCompareEffect.js","webpack:///./node_modules/react-use/esm/useCustomCompareEffect.js"],"sourcesContent":["import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { Tooltip } from '../tooltip/tooltip';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { helpers } from '../../common';\n\n/**\n * ToDo: review setting up a transformed cell cache for already transformed cells.\n * - review using a simple state and key memoized component\n * - review using lru cache in a inventoryCardContext custom hook\n */\n\n/**\n * Apply product inventory config properties consistently.\n *\n * @param {Function|string|number} prop\n * @param {object} options\n * @param {*[]|*} options.params\n * @returns {React.ReactNode}\n */\nconst applyConfigProperty = (prop, { params = [] } = {}) => {\n  let updatedProp = prop;\n\n  if (typeof prop === 'function') {\n    updatedProp = prop(...((Array.isArray(params) && params) || [params]));\n  }\n\n  if (typeof updatedProp === 'string' || typeof updatedProp === 'number' || React.isValidElement(updatedProp)) {\n    return updatedProp;\n  }\n\n  return undefined;\n};\n\n/**\n * Generate header and row cell configuration from filters.\n *\n * @param {object} params\n * @param {Array<{id: string, isStandalone: boolean, cell:React.ReactNode|{ title: string }, cellWidth: number,\n *     header:React.ReactNode|{ title: string }, onSort: Function, showEmptyCell: boolean, sortId: string,\n *     sortActive: boolean, sortDirection: string, transforms: Array}>} params.filters\n * @param {object} params.cellData\n * @param {object} params.meta\n * @param {object} params.session\n * @returns {{bodyCells: { title: React.ReactNode }[], headerCells: { title: React.ReactNode }[]}}\n */\nconst applyHeaderRowCellFilters = ({ filters = [], cellData = {}, meta = {}, session = {} } = {}) => {\n  const headerCells = [];\n  const bodyCells = [];\n\n  filters.forEach(\n    ({\n      isStandalone,\n      id,\n      cell,\n      cellWidth,\n      header,\n      onSort,\n      showEmptyCell = true,\n      sortId,\n      sortActive,\n      sortDirection,\n      transforms\n    }) => {\n      const headerCellUpdated = { title: translate('curiosity-inventory.header', { context: id }), transforms: [] };\n      const bodyCellUpdated = { title: '' };\n\n      // set filtered base header and body cells, or if filter doesn't exist skip\n      if (cellData[id]) {\n        headerCellUpdated.title = cellData[id]?.title ?? id;\n        bodyCellUpdated.title = cellData[id]?.value ?? '';\n      } else if (isStandalone === true) {\n        headerCellUpdated.title = '';\n        bodyCellUpdated.title = '';\n      } else {\n        if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n          console.warn(`Warning: Filter \"${id}\" not found in \"table row\" response data.`, cellData);\n        }\n        if (showEmptyCell === false) {\n          return;\n        }\n      }\n\n      // set header cell title\n      if (header) {\n        const updatedHeaderCellTitle = applyConfigProperty(header, {\n          params: [{ ...cellData }, { ...session }, { ...meta }]\n        });\n        if (updatedHeaderCellTitle) {\n          headerCellUpdated.title = updatedHeaderCellTitle;\n        } else if (_isPlainObject(header)) {\n          Object.assign(headerCellUpdated, { ...header });\n        }\n\n        // set header cell tooltip\n        if (header.tooltip && headerCellUpdated.title) {\n          const updatedHeaderCellTooltip = applyConfigProperty(header.tooltip, {\n            params: [{ ...cellData }, { ...session }, { ...meta }]\n          });\n          if (updatedHeaderCellTooltip) {\n            headerCellUpdated.title = <Tooltip content={updatedHeaderCellTooltip}>{headerCellUpdated.title}</Tooltip>;\n          }\n\n          delete headerCellUpdated.tooltip;\n        }\n      }\n\n      // set header cell transforms\n      if (Array.isArray(headerCellUpdated.transforms)) {\n        if (Array.isArray(transforms)) {\n          headerCellUpdated.transforms = headerCellUpdated.transforms.concat([...transforms]);\n        }\n\n        if (typeof cellWidth === 'number') {\n          headerCellUpdated.transforms.push(PfCellWidth(cellWidth));\n        }\n      }\n\n      // set header cell onSort\n      if (typeof onSort === 'function') {\n        headerCellUpdated.onSort = obj => onSort({ ...cellData }, { ...obj, id: sortId || id });\n        headerCellUpdated.sortActive = sortActive;\n        headerCellUpdated.sortDirection = sortDirection;\n      }\n\n      // set body cell title\n      if (cell) {\n        const updatedBodyCellTitle = applyConfigProperty(cell, {\n          params: [{ ...cellData }, { ...session }, { ...meta }]\n        });\n        if (updatedBodyCellTitle) {\n          bodyCellUpdated.title = updatedBodyCellTitle;\n        } else if (_isPlainObject(cell)) {\n          Object.assign(bodyCellUpdated, { ...cell });\n        }\n\n        // set body cell tooltip\n        if (cell.tooltip && bodyCellUpdated.title) {\n          const updatedBodyCellTooltip = applyConfigProperty(cell.tooltip, {\n            params: [{ ...cellData }, { ...session }, { ...meta }]\n          });\n          if (updatedBodyCellTooltip) {\n            bodyCellUpdated.title = <Tooltip content={updatedBodyCellTooltip}>{bodyCellUpdated.title}</Tooltip>;\n          }\n\n          delete bodyCellUpdated.tooltip;\n        }\n      }\n\n      headerCells.push(headerCellUpdated);\n      bodyCells.push(bodyCellUpdated);\n    }\n  );\n\n  return {\n    headerCells,\n    bodyCells\n  };\n};\n\n/**\n * Shallow clone filter, and apply a column sort filter.\n *\n * @param {object} params\n * @param {{onSort: Function, sortActive: boolean, sortDirection: string, isSortDefault: boolean,\n *     sortDefaultInitialDirection: string}} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {{}}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} } = {}) => {\n  const { id, sortId } = filter;\n  const updatedId = sortId || id;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    (query?.[RHSM_API_QUERY_TYPES.SORT] === updatedId || _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === updatedId)\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  if (\n    hasSort &&\n    !updatedFilter.sortActive &&\n    !query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    updatedFilter.isSortDefault === true\n  ) {\n    updatedFilter.sortActive = true;\n\n    if (updatedFilter.sortDefaultInitialDirection) {\n      updatedFilter.sortDirection = updatedFilter.sortDefaultInitialDirection;\n    }\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Shallow clone and apply a consistent PF \"wrappable\" transformation config allowing column content to wrap.\n *\n * @param {object} params\n * @param {object} params.filter\n * @returns {{}}\n */\nconst applyWrappableFilters = ({ filter = {} } = {}) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Shallow clone and apply, sequence specific, additional properties to filters.\n *\n * @param {object} params\n * @param {Array<{id: string, cell:*, cellWidth: number, header:*, onSort: Function,\n *     showEmptyCell: boolean, sortId: string, sortActive: boolean,\n *     sortDirection: string, transforms: Array, isSortDefault: boolean,\n *     sortDefaultInitialDirection: string}>} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {*[]}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} } = {}) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array<{id: string, cell:React.ReactNode|{ title: string }, cellWidth: number,\n *     header:React.ReactNode|{ title: string }, onSort: Function, showEmptyCell: boolean,\n *     sortId: string, sortActive: boolean, sortDirection: string,\n *     transforms: Array}>} params.filters\n * @param {object} params.cellData\n * @param {object} params.meta\n * @param {object} params.session\n * @returns {{columnHeaders: { title: React.ReactNode }[], cells: { title: React.ReactNode }[], data: {}}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, meta = {}, session = {} } = {}) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value = '']) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value || '...');\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length && Object.keys(allCells).length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    const { headerCells = [], bodyCells = [] } = applyHeaderRowCellFilters({\n      filters,\n      cellData: allCells,\n      meta,\n      session\n    });\n\n    updatedColumnHeaders.push(...headerCells);\n    updatedCells.push(...bodyCells);\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryCardHelpers = {\n  applyConfigProperty,\n  applyHeaderRowCellFilters,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryCardHelpers as default,\n  inventoryCardHelpers,\n  applyConfigProperty,\n  applyHeaderRowCellFilters,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { useSession } from '../authentication/authenticationContext';\nimport { useProductInventoryGuestsConfig, useProductInventoryGuestsQuery } from '../productView/productViewContext';\nimport { Loader } from '../loader/loader';\nimport { inventoryCardHelpers } from '../inventoryCard/inventoryCardHelpers';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { Table } from '../table/table';\nimport { useGetGuestsInventory, useOnScroll } from './inventoryGuestsContext';\n\n/**\n * A system inventory guests component.\n *\n * @param {object} props\n * @param {number} props.defaultPerPage\n * @param {string} props.id\n * @param {number} props.numberOfGuests\n * @param {Function} props.useGetGuestsInventory\n * @param {Function} props.useOnScroll\n * @param {Function} props.useProductInventoryGuestsQuery\n * @param {Function} props.useProductInventoryGuestsConfig\n * @param {Function} props.useSession\n * @fires onScroll\n * @returns {Node}\n */\nconst InventoryGuests = ({\n  defaultPerPage,\n  id,\n  numberOfGuests,\n  useGetGuestsInventory: useAliasGetGuestsInventory,\n  useOnScroll: useAliasOnScroll,\n  useProductInventoryGuestsQuery: useAliasProductInventoryGuestsQuery,\n  useProductInventoryGuestsConfig: useAliasProductInventoryGuestsConfig,\n  useSession: useAliasSession\n}) => {\n  const [previousData, setPreviousData] = useState([]);\n  const sessionData = useAliasSession();\n  const { filters: filterGuestsData } = useAliasProductInventoryGuestsConfig();\n\n  const query = useAliasProductInventoryGuestsQuery({ options: { overrideId: id } });\n  const { [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage } = query;\n\n  const { error, pending, data = {} } = useAliasGetGuestsInventory(id);\n  const { data: listData = [] } = data;\n\n  const onScroll = useAliasOnScroll(id, () => {\n    const updatedData = [...previousData, ...(listData || [])];\n    setPreviousData(updatedData);\n  });\n\n  /**\n   * Render a scroll table loader.\n   *\n   * @returns {Node}\n   */\n  const renderLoader = () => {\n    if (currentPage > 0 && pending) {\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n            rowCount: 0,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  };\n\n  /**\n   * Render a guests table.\n   *\n   * @returns {Node}\n   */\n  const renderTable = () => {\n    let updatedColumnHeaders = [];\n\n    const updatedRows = [...previousData, ...(listData || [])].map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryCardHelpers.parseRowCellsListData({\n        filters: filterGuestsData,\n        cellData,\n        session: sessionData\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    // ToDo: Review having the height be a calc value\n    // Include the table header\n    let updatedHeight = (numberOfGuests + 1) * 42;\n    updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n    return (\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={onScroll}\n        >\n          {renderLoader()}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className={`fadein ${(error && 'blur') || ''}`}>\n      {pending && currentPage === 0 && (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            className: 'curiosity-guests-list',\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n            rowCount: numberOfGuests < defaultPerPage ? numberOfGuests : defaultPerPage,\n            variant: TableVariant.compact\n          }}\n        />\n      )}\n      {((!pending && currentPage === 0) || currentPage > 0) && renderTable()}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProductInventoryGuestsConfig: Function, useSession: Function, numberOfGuests: number, id: string,\n *     useOnScroll: Function, useGetGuestsInventory: Function, useProductInventoryGuestsQuery: Function,\n *     defaultPerPage: number}}\n */\nInventoryGuests.propTypes = {\n  defaultPerPage: PropTypes.number,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  useGetGuestsInventory: PropTypes.func,\n  useOnScroll: PropTypes.func,\n  useProductInventoryGuestsConfig: PropTypes.func,\n  useProductInventoryGuestsQuery: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProductInventoryGuestsConfig: Function, useSession: Function, useOnScroll: Function,\n *     useGetGuestsInventory: Function, useProductInventoryGuestsQuery: Function, defaultPerPage: number}}\n */\nInventoryGuests.defaultProps = {\n  defaultPerPage: 5,\n  useGetGuestsInventory,\n  useOnScroll,\n  useProductInventoryGuestsConfig,\n  useProductInventoryGuestsQuery,\n  useSession\n};\n\nexport { InventoryGuests as default, InventoryGuests };\n","import { useUnmount, useShallowCompareEffect } from 'react-use';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProductInventoryGuestsQuery } from '../productView/productViewContext';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * Guests inventory selector response.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}), pending: (*|boolean), fulfilled, error}}\n */\nconst useSelectorsGuestsInventory = (\n  id,\n  { useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse } = {}\n) => {\n  const { error, cancelled, fulfilled, pending, data } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.hostsGuests?.[id]\n  );\n\n  return {\n    error,\n    fulfilled,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * Combined Redux RHSM Actions, getHostsInventoryGuests, and inventory selector response.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsInventory\n * @returns {Function}\n */\nconst useGetGuestsInventory = (\n  id,\n  {\n    getInventory = reduxActions.rhsm.getHostsInventoryGuests,\n    useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n    useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryGuestsQuery,\n    useSelectorsInventory: useAliasSelectorsInventory = useSelectorsGuestsInventory\n  } = {}\n) => {\n  const query = useAliasProductInventoryQuery({ options: { overrideId: id } });\n  const dispatch = useAliasDispatch();\n  const response = useAliasSelectorsInventory(id);\n\n  useShallowCompareEffect(() => {\n    getInventory(id, query)(dispatch);\n  }, [dispatch, id, query]);\n\n  return {\n    ...response\n  };\n};\n\n/**\n * Use paging as onScroll event for guests inventory.\n *\n * @param {string} id\n * @param {Function} successCallback\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useSelectorsInventory\n * @param {Function} options.useProductInventoryQuery\n * @returns {Function}\n */\nconst useOnScroll = (\n  id,\n  successCallback,\n  {\n    useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n    useSelectorsInventory: useAliasSelectorsInventory = useSelectorsGuestsInventory,\n    useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryGuestsQuery\n  } = {}\n) => {\n  const dispatch = useAliasDispatch();\n  const { pending, data = {} } = useAliasSelectorsInventory(id);\n  const { count: numberOfGuests } = data?.meta || {};\n\n  const query = useAliasProductInventoryQuery({ options: { overrideId: id } });\n  const { [RHSM_API_QUERY_SET_TYPES.LIMIT]: limit, [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage } = query;\n\n  /**\n   * Reset paging in scenarios where inventory is filtered, or guests is collapsed.\n   */\n  useUnmount(() => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n        viewId: id\n      }\n    ]);\n  });\n\n  /**\n   * On scroll, dispatch type.\n   *\n   * @event onScroll\n   * @param {object} event\n   * @returns {void}\n   */\n  return event => {\n    const { target } = event;\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > (currentPage + 1) * limit && bottom && !pending) {\n      if (typeof successCallback === 'function') {\n        successCallback(event);\n      }\n\n      dispatch([\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n          viewId: id,\n          [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage + 1\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n          viewId: id,\n          [RHSM_API_QUERY_SET_TYPES.LIMIT]: limit\n        }\n      ]);\n    }\n  };\n};\n\nconst context = {\n  useGetGuestsInventory,\n  useOnScroll,\n  useSelectorsGuestsInventory\n};\n\nexport { context as default, context, useGetGuestsInventory, useOnScroll, useSelectorsGuestsInventory };\n","import React, { useCallback, useContext } from 'react';\nimport { reduxHelpers } from '../../redux/common';\nimport { storeHooks } from '../../redux/hooks';\nimport { RHSM_API_QUERY_TYPES, rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst ProductViewContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated product view context.\n *\n * @returns {React.Context<{}>}\n */\nconst useProductViewContext = () => useContext(ProductViewContext);\n\n/**\n * Return a query object from initial product config and Redux store.\n *\n * @param {string} queryType An identifier used to pull from both config and Redux, they should named the same.\n * @param {object} options\n * @param {string} options.overrideId A custom identifier, used for scenarios like the Guest inventory IDs\n * @param {object} options.useProductViewContext\n * @returns {object}\n */\nconst useProductQueryFactory = (\n  queryType,\n  { overrideId, useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}\n) => {\n  const { [queryType]: initialQuery, productId, viewId } = useAliasProductViewContext();\n  const queryOverride = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[overrideId], undefined);\n  const queryProduct = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[productId], undefined);\n  const queryView = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[viewId], undefined);\n\n  return {\n    ...initialQuery,\n    ...queryOverride,\n    ...queryProduct,\n    ...queryView\n  };\n};\n\n/**\n * Return a base product query\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductQuery = ({ queryType = 'query', options } = {}) => useProductQueryFactory(queryType, options);\n\n/**\n * Return the graph query based off of tally and capacity.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductGraphTallyQuery = ({\n  queryType = 'graphTallyQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return the inventory query for guests. Use fallback/defaults for guests offset, limit.\n *\n * @param {object} options\n * @param {number} options.defaultLimit\n * @param {number} options.defaultOffset\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryGuestsQuery = ({\n  defaultLimit = 100,\n  defaultOffset = 0,\n  queryType = 'inventoryGuestsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      [RHSM_API_QUERY_SET_TYPES.LIMIT]: defaultLimit,\n      [RHSM_API_QUERY_SET_TYPES.OFFSET]: defaultOffset,\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for hosts.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryHostsQuery = ({\n  queryType = 'inventoryHostsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for subscriptions.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventorySubscriptionsQuery = ({\n  queryType = 'inventorySubscriptionsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Get a filtered product configuration context.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductViewContext\n * @returns {object}\n */\nconst useProductContext = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductViewContext: useAliasProductViewContext = useProductViewContext\n} = {}) => {\n  const { [RHSM_API_QUERY_TYPES.UOM]: uomFilter } = useAliasProductQuery();\n  const {\n    initialGraphFilters = [],\n    initialInventoryFilters = [],\n    initialSubscriptionsInventoryFilters = [],\n    productContextFilterUom,\n    ...config\n  } = useAliasProductViewContext();\n\n  const applyUomFilter = useCallback(() => {\n    if (productContextFilterUom === true) {\n      const filterFilters = ({ id, isOptional }) => {\n        if (!isOptional) {\n          return true;\n        }\n        return new RegExp(uomFilter, 'i').test(id);\n      };\n\n      return {\n        ...config,\n        initialGraphFilters: initialGraphFilters.filter(filterFilters),\n        initialInventoryFilters: initialInventoryFilters.filter(filterFilters),\n        initialSubscriptionsInventoryFilters: initialSubscriptionsInventoryFilters.filter(filterFilters)\n      };\n    }\n\n    return {\n      ...config,\n      initialGraphFilters,\n      initialInventoryFilters,\n      initialSubscriptionsInventoryFilters\n    };\n  }, [\n    config,\n    initialGraphFilters,\n    initialInventoryFilters,\n    initialSubscriptionsInventoryFilters,\n    productContextFilterUom,\n    uomFilter\n  ]);\n\n  return applyUomFilter();\n};\n\n/**\n * Return product identifiers.\n *\n * @param {object} options\n * @param {Function} options.useProductViewContext\n * @returns {{productLabel: string, viewId: string, productId: string, productGroup: string}}\n */\nconst useProduct = ({ useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}) => {\n  const { productGroup, productId, productLabel, viewId } = useAliasProductViewContext();\n  return {\n    productGroup,\n    productId,\n    productLabel,\n    viewId\n  };\n};\n\n/**\n * Return graph configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductGraphConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialGraphFilters, initialGraphSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGraphFilters,\n    settings: initialGraphSettings\n  };\n};\n\n/**\n * Return guests inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryGuestsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { inventoryGuestsQuery = {}, initialGuestsFilters, initialGuestsSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGuestsFilters,\n    initialQuery: inventoryGuestsQuery,\n    settings: initialGuestsSettings\n  };\n};\n\n/**\n * Return hosts inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryHostsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialInventoryFilters, initialInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialInventoryFilters,\n    settings: initialInventorySettings\n  };\n};\n\n/**\n * Return subscriptions inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventorySubscriptionsConfig = ({\n  useProductContext: useAliasProductContext = useProductContext\n} = {}) => {\n  const { initialSubscriptionsInventoryFilters, initialSubscriptionsInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialSubscriptionsInventoryFilters,\n    settings: initialSubscriptionsInventorySettings\n  };\n};\n\n/**\n * Return primary toolbar configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductToolbarConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const {\n    initialToolbarFilters,\n    initialToolbarSettings = {},\n    initialSecondaryToolbarFilters\n  } = useAliasProductContext();\n  return {\n    filters: initialToolbarFilters,\n    secondaryFilters: initialSecondaryToolbarFilters,\n    settings: initialToolbarSettings\n  };\n};\n\nconst context = {\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useQuery: useProductQuery,\n  useQueryFactory: useProductQueryFactory,\n  useGraphTallyQuery: useProductGraphTallyQuery,\n  useInventoryGuestsQuery: useProductInventoryGuestsQuery,\n  useInventoryHostsQuery: useProductInventoryHostsQuery,\n  useInventorySubscriptionsQuery: useProductInventorySubscriptionsQuery,\n  useProduct,\n  useGraphConfig: useProductGraphConfig,\n  useInventoryGuestsConfig: useProductInventoryGuestsConfig,\n  useInventoryHostsConfig: useProductInventoryHostsConfig,\n  useInventorySubscriptionsConfig: useProductInventorySubscriptionsConfig,\n  useToolbarConfig: useProductToolbarConfig\n};\n\nexport {\n  context as default,\n  context,\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useProductQuery,\n  useProductQueryFactory,\n  useProductGraphTallyQuery,\n  useProductInventoryGuestsQuery,\n  useProductInventoryHostsQuery,\n  useProductInventorySubscriptionsQuery,\n  useProduct,\n  useProductGraphConfig,\n  useProductInventoryGuestsConfig,\n  useProductInventoryHostsConfig,\n  useProductInventorySubscriptionsConfig,\n  useProductToolbarConfig\n};\n","var keyList = Object.keys;\n\nexports.equal = function equal (a, b) {\n  if (a === b) return true;\n  if (!(a instanceof Object) || !(b instanceof Object)) return false;\n\n  var keys = keyList(a);\n  var length = keys.length;\n\n  for (var i = 0; i < length; i++)\n    if (!(keys[i] in b)) return false;\n\n  for (var i = 0; i < length; i++)\n    if (a[keys[i]] !== b[keys[i]]) return false;\n\n  return length === keyList(b).length;\n};\n","import { equal as isShallowEqual } from 'fast-shallow-equal';\nimport useCustomCompareEffect from './useCustomCompareEffect';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar shallowEqualDepsList = function (prevDeps, nextDeps) {\n    return prevDeps.every(function (dep, index) { return isShallowEqual(dep, nextDeps[index]); });\n};\nvar useShallowCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useShallowCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useShallowCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, shallowEqualDepsList);\n};\nexport default useShallowCompareEffect;\n","import { useEffect, useRef } from 'react';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useCustomCompareEffect = function (effect, deps, depsEqual) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useCustomCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useCustomCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n        if (typeof depsEqual !== 'function') {\n            console.warn('`useCustomCompareEffect` should be used with depsEqual callback for comparing deps list');\n        }\n    }\n    var ref = useRef(undefined);\n    if (!ref.current || !depsEqual(deps, ref.current)) {\n        ref.current = deps;\n    }\n    useEffect(effect, ref.current);\n};\nexport default useCustomCompareEffect;\n"],"names":["applyConfigProperty","prop","params","updatedProp","Array","isArray","React","applyHeaderRowCellFilters","filters","cellData","meta","session","headerCells","bodyCells","forEach","isStandalone","id","cell","cellWidth","header","onSort","showEmptyCell","sortId","sortActive","sortDirection","transforms","headerCellUpdated","title","translate","context","bodyCellUpdated","value","helpers","console","warn","updatedHeaderCellTitle","_isPlainObject","Object","assign","tooltip","updatedHeaderCellTooltip","Tooltip","content","concat","push","PfCellWidth","obj","updatedBodyCellTitle","updatedBodyCellTooltip","applySortFilters","filter","query","updatedId","updatedFilter","hasSort","RHSM_API_QUERY_TYPES","_camelCase","SORT_DIRECTION_TYPES","SortByDirection","isSortDefault","sortDefaultInitialDirection","applyWrappableFilters","wrappable","parseInventoryFilters","map","isSortable","isWrappable","parseRowCellsListData","updatedColumnHeaders","updatedCells","allCells","entries","key","length","keys","columnHeaders","cells","data","inventoryCardHelpers","InventoryGuests","updatedRows","updatedHeight","defaultPerPage","numberOfGuests","useAliasGetGuestsInventory","useGetGuestsInventory","useAliasOnScroll","useOnScroll","useAliasProductInventoryGuestsQuery","useProductInventoryGuestsQuery","useAliasProductInventoryGuestsConfig","useProductInventoryGuestsConfig","useAliasSession","useSession","useState","previousData","setPreviousData","sessionData","filterGuestsData","currentPage","options","overrideId","RHSM_API_QUERY_SET_TYPES","error","pending","listData","onScroll","updatedData","className","Loader","variant","tableProps","borders","colCount","colWidth","rowCount","TableVariant","style","height","scrollLoader","renderLoader","Table","rows","defaultProps","useSelectorsGuestsInventory","useSelectorsResponse","useAliasSelectorsResponse","storeHooks","inventory","hostsGuests","cancelled","fulfilled","getInventory","reduxActions","useDispatch","useAliasDispatch","useProductInventoryQuery","useAliasProductInventoryQuery","useSelectorsInventory","useAliasSelectorsInventory","dispatch","response","useShallowCompareEffect","successCallback","count","limit","useUnmount","type","reduxTypes","viewId","event","target","bottom","scrollHeight","scrollTop","clientHeight","DEFAULT_CONTEXT","ProductViewContext","useProductViewContext","useContext","useProductQueryFactory","queryType","useAliasProductViewContext","initialQuery","productId","queryOverride","view","undefined","queryProduct","queryView","useProductQuery","useProductGraphTallyQuery","schemaCheck","rhsmApiTypes","reduxHelpers","defaultLimit","defaultOffset","useProductInventoryHostsQuery","useProductInventorySubscriptionsQuery","useProductContext","useAliasProductQuery","uomFilter","initialGraphFilters","initialInventoryFilters","initialSubscriptionsInventoryFilters","productContextFilterUom","config","applyUomFilter","useCallback","filterFilters","isOptional","RegExp","test","useProduct","productGroup","productLabel","useProductGraphConfig","useAliasProductContext","initialGraphSettings","settings","inventoryGuestsQuery","initialGuestsFilters","initialGuestsSettings","useProductInventoryHostsConfig","initialInventorySettings","useProductInventorySubscriptionsConfig","initialSubscriptionsInventorySettings","useProductToolbarConfig","initialToolbarFilters","initialToolbarSettings","initialSecondaryToolbarFilters","secondaryFilters","useQuery","useQueryFactory","useGraphTallyQuery","useInventoryGuestsQuery","useInventoryHostsQuery","useInventorySubscriptionsQuery","useGraphConfig","useInventoryGuestsConfig","useInventoryHostsConfig","useInventorySubscriptionsConfig","useToolbarConfig","keyList","exports","a","b","i","shallowEqualDepsList","prevDeps","nextDeps","every","dep","index","effect","deps","depsEqual","ref","useRef","current","useEffect"],"sourceRoot":""}
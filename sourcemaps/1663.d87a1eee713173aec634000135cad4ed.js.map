{"version":3,"file":"js/1663.589f3b233da92452355e.js","mappings":"0YAuBMA,EAAsBC,OAAOC,OAAOC,EAAAA,IAAaC,KAAI,SAAAC,GAAI,MAAK,CAClEC,OAAOC,EAAAA,EAAAA,WAAU,0BAA2B,CAAEC,QAAS,CAAC,mBAA8B,KAATH,EAAe,OAAWA,KACvGI,MAAOJ,EACPK,UAAU,EACX,IAUKC,EAAc,WAGT,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,CAAC,EAACG,EAAAJ,EAFJK,YAAaC,OAAgB,IAAAF,EAAGG,EAAAA,GAAAA,WAAAA,YAAiCH,EAAAI,EAAAR,EACjES,WAAYC,OAAe,IAAAF,EAAGC,EAAAA,WAAUD,EAExCG,EAAmBD,IAAXE,EAAMD,EAANC,OACFC,EAAWP,IAEjB,OAAO,WAA2B,IAAAQ,EAAAb,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,CAAC,EAACc,EAAAD,EAAnBjB,MAAAA,OAAK,IAAAkB,EAAG,KAAIA,EACpBF,EAAS,CACP,CACEpB,KAAMuB,EAAAA,GAAAA,MAAAA,+BACNJ,OAAAA,IACDK,EAAAA,EAAAA,GAAA,CAECxB,KAAMuB,EAAAA,GAAAA,MAAAA,qBAAsCE,EAAAA,GAAAA,kBAC5CN,OAAAA,GACCM,EAAAA,GAAAA,iBAA4CrB,IAGnD,CACF,EAeMsB,EAA8B,SAAHC,GAO3B,IANJC,EAAQD,EAARC,SACAC,EAAOF,EAAPE,QACAC,EAAQH,EAARG,SACAC,EAACJ,EAADI,EACaC,EAAgBL,EAA7BrB,YAGqD2B,GAAiBC,EAFjCP,EAArCQ,mBAESV,EAAAA,GAAAA,kBACHW,EAAWJ,IAEXK,EAAiBR,EAAQ9B,KAAI,SAAAuC,GAAM,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAUD,GAAM,IAAEjC,SAAUiC,EAAOlC,QAAU6B,GAAY,IAElG,OACEO,IAAAA,cAACC,EAAAA,OAAM,CACL,aAAYV,EAAE,gCAADW,OAAkCd,EAAY,UAAc,IAAM,CAAEzB,QAAS,qBAC1FiC,SAAUA,EACVP,QAASQ,EACTM,gBAAiBV,EACjBW,YAAab,EAAE,gCAADW,OAAkCd,EAAY,UAAc,IAAM,CAAEzB,QAAS,qBAC3F2B,SAAUA,EACV,YAAU,+BAGhB,EA6BAJ,EAA4BmB,aAAe,CACzCjB,UAAU,EACVC,QAASlC,EACTmC,SAAUgB,EAAAA,eAAAA,KACVf,EAAG7B,EAAAA,UACHI,YAAAA,EACA6B,gBAAAA,EAAAA,gB","sources":["webpack:///./src/components/toolbar/toolbarFieldBillingProvider.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductQuery } from '../productView/productViewContext';\nimport { Select, SelectPosition } from '../form/select';\nimport {\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES as FIELD_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A standalone Billing Provider select filter.\n *\n * @memberof Toolbar\n * @module ToolbarFieldBillingProvider\n */\n\n/**\n * Select field options.\n *\n * @type {Array<{title: React.ReactNode, value: string, selected: boolean}>}\n */\nconst toolbarFieldOptions = Object.values(FIELD_TYPES).map(type => ({\n  title: translate('curiosity-toolbar.label', { context: ['billing_provider', (type === '' && 'none') || type] }),\n  value: type,\n  selected: false\n}));\n\n/**\n * On select update billing provider.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnSelect = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { viewId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  return ({ value = null } = {}) => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER],\n        viewId,\n        [RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER]: value\n      }\n    ]);\n  };\n};\n\n/**\n * Display a billing provider field with options.\n *\n * @fires onSelect\n * @param {object} props\n * @param {boolean} props.isFilter\n * @param {object} props.options\n * @param {string} props.position\n * @param {Function} props.t\n * @param {Function} props.useOnSelect\n * @param {Function} props.useProductQuery\n * @returns {React.ReactNode}\n */\nconst ToolbarFieldBillingProvider = ({\n  isFilter,\n  options,\n  position,\n  t,\n  useOnSelect: useAliasOnSelect,\n  useProductQuery: useAliasProductQuery\n}) => {\n  const { [RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER]: updatedValue } = useAliasProductQuery();\n  const onSelect = useAliasOnSelect();\n\n  const updatedOptions = options.map(option => ({ ...option, selected: option.value === updatedValue }));\n\n  return (\n    <Select\n      aria-label={t(`curiosity-toolbar.placeholder${(isFilter && '_filter') || ''}`, { context: 'billing_provider' })}\n      onSelect={onSelect}\n      options={updatedOptions}\n      selectedOptions={updatedValue}\n      placeholder={t(`curiosity-toolbar.placeholder${(isFilter && '_filter') || ''}`, { context: 'billing_provider' })}\n      position={position}\n      data-test=\"toolbarFieldBillingProvider\"\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useOnSelect: Function, t: Function, isFilter: boolean, options: Array, useProductQuery: Function,\n *     position: string}}\n */\nToolbarFieldBillingProvider.propTypes = {\n  isFilter: PropTypes.bool,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      value: PropTypes.any,\n      selected: PropTypes.bool\n    })\n  ),\n  position: PropTypes.string,\n  t: PropTypes.func,\n  useOnSelect: PropTypes.func,\n  useProductQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useOnSelect: Function, t: Function, isFilter: boolean, options: Array, useProductQuery: Function,\n *     position: string}}\n */\nToolbarFieldBillingProvider.defaultProps = {\n  isFilter: false,\n  options: toolbarFieldOptions,\n  position: SelectPosition.left,\n  t: translate,\n  useOnSelect,\n  useProductQuery\n};\n\nexport { ToolbarFieldBillingProvider as default, ToolbarFieldBillingProvider, toolbarFieldOptions, useOnSelect };\n"],"names":["toolbarFieldOptions","Object","values","FIELD_TYPES","map","type","title","translate","context","value","selected","useOnSelect","_ref","arguments","length","undefined","_ref$useDispatch","useDispatch","useAliasDispatch","storeHooks","_ref$useProduct","useProduct","useAliasProduct","_useAliasProduct","viewId","dispatch","_ref2","_ref2$value","reduxTypes","_defineProperty","RHSM_API_QUERY_SET_TYPES","ToolbarFieldBillingProvider","_ref4","isFilter","options","position","t","useAliasOnSelect","updatedValue","useAliasProductQuery","useProductQuery","onSelect","updatedOptions","option","_objectSpread","React","Select","concat","selectedOptions","placeholder","defaultProps","SelectPosition"],"sourceRoot":""}
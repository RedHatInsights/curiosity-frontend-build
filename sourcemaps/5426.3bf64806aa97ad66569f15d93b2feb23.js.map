{"version":3,"file":"js/5426.21bcea6f6cdd1cd09748.js","mappings":"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ACA,OAAO7xB,EAAI0+D,EACZ,CACAD,EAAerkD,KAAO,WACrB,OAAOnZ,OAAOmZ,KAAKpa,EACpB,EACAy+D,EAAe39D,QAAU69D,EACzBxhE,EAAOC,QAAUqhE,EACjBA,EAAez7D,GAAK,K,wBCnSpB,IAAIhD,EAAM,CACT,qCAAsC,CACrC,OAED,4CAA6C,CAC5C,OAED,qCAAsC,CACrC,MACA,KACA,MAED,4CAA6C,CAC5C,MACA,KACA,MAED,mBAAoB,CACnB,OAED,4BAA6B,CAC5B,OAED,0BAA2B,CAC1B,OAED,2BAA4B,CAC3B,OAED,0BAA2B,CAC1B,OAED,uBAAwB,CACvB,MAED,yBAA0B,CACzB,OAED,0BAA2B,CAC1B,OAED,qBAAsB,CACrB,MACA,KACA,KACA,KACA,MAED,wBAAyB,CACxB,OAED,sBAAuB,CACtB,MACA,KAED,mBAAoB,CACnB,OAED,sBAAuB,CACtB,MACA,MAED,2BAA4B,CAC3B,MACA,KACA,IACA,KACA,MAED,gCAAiC,CAChC,MACA,KACA,IACA,KACA,MAED,sCAAuC,CACtC,MACA,KACA,IACA,MAED,4CAA6C,CAC5C,MACA,KACA,IACA,KAED,uCAAwC,CACvC,MACA,KACA,MAED,kCAAmC,CAClC,MACA,KACA,IACA,MAED,kCAAmC,CAClC,OAED,uCAAwC,CACvC,MACA,KACA,IACA,MAED,iBAAkB,CACjB,OAED,wBAAyB,CACxB,OAED,mCAAoC,CACnC,MACA,KACA,KACA,KACA,MAED,0CAA2C,CAC1C,MACA,KACA,MAED,0CAA2C,CAC1C,MACA,MAED,wCAAyC,CACxC,MACA,KACA,KACA,KACA,KAED,6DAA8D,CAC7D,MACA,KACA,KACA,KACA,MAED,oEAAqE,CACpE,MACA,KACA,MAED,uCAAwC,CACvC,MACA,KACA,MAED,8CAA+C,CAC9C,MACA,KACA,MAED,kCAAmC,CAClC,MACA,KAED,mCAAoC,CACnC,MACA,KACA,MAED,qBAAsB,CACrB,MAED,+BAAgC,CAC/B,OAED,2BAA4B,CAC3B,MACA,KAED,2BAA4B,CAC3B,KAED,8BAA+B,CAC9B,MAED,6BAA8B,CAC7B,OAED,6BAA8B,CAC7B,OAED,+BAAgC,CAC/B,OAED,8BAA+B,CAC9B,OAED,8BAA+B,CAC9B,OAED,6BAA8B,CAC7B,MACA,MAED,oCAAqC,CACpC,MACA,MAED,+BAAgC,CAC/B,MACA,KACA,IACA,KACA,KACA,KACA,MAED,sCAAuC,CACtC,MACA,MAED,sCAAuC,CACtC,MACA,MAED,oBAAqB,CACpB,OAED,qBAAsB,CACrB,OAED,4BAA6B,CAC5B,OAED,4BAA6B,CAC5B,OAED,mBAAoB,CACnB,OAED,wBAAyB,CACxB,OAED,2BAA4B,CAC3B,OAED,iBAAkB,CACjB,MACA,IAED,uBAAwB,CACvB,MACA,KACA,IACA,MAED,8BAA+B,CAC9B,MACA,KACA,IACA,MAED,wCAAyC,CACxC,MACA,KACA,MAED,2CAA4C,CAC3C,MACA,KACA,MAED,oCAAqC,CACpC,MACA,KACA,MAED,uCAAwC,CACvC,MACA,KACA,MAED,uCAAwC,CACvC,KACA,KACA,MAED,yCAA0C,CACzC,MACA,KACA,MAED,0CAA2C,CAC1C,MACA,KACA,KAED,+BAAgC,CAC/B,MACA,KACA,MAED,+BAAgC,CAC/B,MACA,KACA,MAED,iCAAkC,CACjC,MACA,KACA,MAED,mCAAoC,CACnC,MACA,KACA,MAED,uBAAwB,CACvB,OAGF,SAAS8+D,EAAoBJ,GAC5B,IAAIE,EAAoBC,EAAE7+D,EAAK0+D,GAC9B,OAAO79D,QAAQC,UAAUi+D,MAAK,WAC7B,IAAIltC,EAAI,IAAItvB,MAAM,uBAAyBm8D,EAAM,KAEjD,MADA7sC,EAAE6wB,KAAO,mBACH7wB,CACP,IAGD,IAAImtC,EAAMh/D,EAAI0+D,GAAM17D,EAAKg8D,EAAI,GAC7B,OAAOn+D,QAAQq+C,IAAI8f,EAAIx9C,MAAM,GAAGxhB,IAAI4+D,EAAoB/sC,IAAIktC,MAAK,WAChE,OAAOH,EAAoB57D,EAC5B,GACD,CACA87D,EAAoB1kD,KAAO,WAAa,OAAOnZ,OAAOmZ,KAAKpa,EAAM,EACjE8+D,EAAoB97D,GAAK,MACzB7F,EAAOC,QAAU0hE,C,wBChVjB,IAAI9+D,EAAM,CACT,kCAAmC,MACnC,kCAAmC,KACnC,gCAAiC,MACjC,qBAAsB,MACtB,oBAAqB,MACrB,qBAAsB,MACtB,sBAAuB,MACvB,yBAA0B,OAI3B,SAASy+D,EAAeC,GACvB,IAAI17D,EAAK27D,EAAsBD,GAC/B,OAAOE,EAAoB57D,EAC5B,CACA,SAAS27D,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAE7+D,EAAK0+D,GAAM,CACpC,IAAI7sC,EAAI,IAAItvB,MAAM,uBAAyBm8D,EAAM,KAEjD,MADA7sC,EAAE6wB,KAAO,mBACH7wB,CACP,CACA,OAAO7xB,EAAI0+D,EACZ,CACAD,EAAerkD,KAAO,WACrB,OAAOnZ,OAAOmZ,KAAKpa,EACpB,EACAy+D,EAAe39D,QAAU69D,EACzBxhE,EAAOC,QAAUqhE,EACjBA,EAAez7D,GAAK,K","sources":["webpack:///./config/build.empty.js","webpack:///./src/app.js","webpack:///./src/common/helpers.js","webpack:///./src/common/dateHelpers.js","webpack:///./src/common/downloadHelpers.js","webpack:///./src/components/authentication/authentication.js","webpack:///./src/components/authentication/authenticationContext.js","webpack:///./src/components/chart/chart.js","webpack:///./src/hooks/useWindow.js","webpack:///./src/components/chart/chartAxisLabel.js","webpack:///./src/components/chart/chartContext.js","webpack:///./src/components/chart/chartElements.js","webpack:///./src/components/chart/chartHelpers.js","webpack:///./src/components/chart/chartIcon.js","webpack:///./src/components/chart/chartLegend.js","webpack:///./src/components/chart/chartTooltip.js","webpack:///./src/components/form/formHelpers.js","webpack:///./src/components/form/select.js","webpack:///./src/components/graphCard/graphCardHelpers.js","webpack:///./src/components/i18n/i18n.js","webpack:///./src/components/i18n/i18nHelpers.js","webpack:///./src/components/loader/loader.js","webpack:///./src/components/messageView/messageView.js","webpack:///./src/components/optinView/optinView.js","webpack:///./src/components/pageLayout/pageColumns.js","webpack:///./src/components/pageLayout/pageHeader.js","webpack:///./src/components/pageLayout/pageLayout.js","webpack:///./src/components/pageLayout/pageMessages.js","webpack:///./src/components/pageLayout/pageSection.js","webpack:///./src/components/pageLayout/pageToolbar.js","webpack:///./src/components/router/router.js","webpack:///./src/components/router/routerContext.js","webpack:///./src/components/router/routerHelpers.js","webpack:///./src/components/table/table.js","webpack:///./src/components/table/tableEmpty.js","webpack:///./src/components/table/tableSkeleton.js","webpack:///./src/components/tooltip/tooltip.js","webpack:///./src/config/products.js","webpack:///./src/config/routes.js","webpack:///./src/config/product.openshiftContainer.js","webpack:///./src/config/product.openshiftDedicated.js","webpack:///./src/config/product.openshiftMetrics.js","webpack:///./src/config/product.rhacs.js","webpack:///./src/config/product.rhel.js","webpack:///./src/config/product.rhods.js","webpack:///./src/config/product.rhosak.js","webpack:///./src/config/product.satellite.js","webpack:///./src/redux/common/reduxHelpers.js","webpack:///./src/redux/hooks/useReactRedux.js","webpack:///./src/redux/hooks/index.js","webpack:///./src/services/common/helpers.js","webpack:///./src/services/common/serviceConfig.js","webpack:///./src/services/platform/platformSchemas.js","webpack:///./src/services/platform/platformTransformers.js","webpack:///./src/services/platform/platformServices.js","webpack:///./src/redux/actions/platformActions.js","webpack:///./src/services/config.js","webpack:///./src/services/rhsm/rhsmSchemas.js","webpack:///./src/services/rhsm/rhsmTransformers.js","webpack:///./src/services/rhsm/rhsmHelpers.js","webpack:///./src/services/rhsm/rhsmServices.js","webpack:///./src/redux/actions/rhsmActions.js","webpack:///./src/services/user/userServices.js","webpack:///./src/redux/actions/userActions.js","webpack:///./src/redux/actions/index.js","webpack:///./src/redux/reducers/graphReducer.js","webpack:///./src/redux/reducers/inventoryReducer.js","webpack:///./src/redux/reducers/messagesReducer.js","webpack:///./src/redux/reducers/toolbarReducer.js","webpack:///./src/redux/reducers/userReducer.js","webpack:///./src/redux/reducers/viewReducer.js","webpack:///./src/redux/reducers/index.js","webpack:///./src/redux/middleware/actionRecordMiddleware.js","webpack:///./src/redux/middleware/index.js","webpack:///./src/redux/middleware/statusMiddleware.js","webpack:///./src/redux/middleware/multiActionMiddleware.js","webpack:///./src/redux/store.js","webpack:///./src/redux/types/appTypes.js","webpack:///./src/redux/types/graphTypes.js","webpack:///./src/redux/types/inventoryTypes.js","webpack:///./src/redux/types/platformTypes.js","webpack:///./src/redux/types/queryTypes.js","webpack:///./src/redux/types/userTypes.js","webpack:///./src/redux/types/index.js","webpack:///./src/redux/types/toolbarTypes.js","webpack:///./src/redux/types/rhsmTypes.js","webpack:///./src/services/platform/platformConstants.js","webpack:///./src/services/rhsm/rhsmConstants.js","webpack:///./node_modules/moment/locale/ sync ^\\.\\/.*$","webpack:///./src/components/ lazy ^\\.\\/.*\\.js$ exclude: \\.test\\.js$ namespace object","webpack:///./src/config/ sync nonrecursive product\\.[\\d\\D]+\\.js$/"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMount } from 'react-use';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { reduxActions, storeHooks } from './redux';\nimport { I18n } from './components/i18n/i18n';\nimport { Router } from './components/router';\nimport Authentication from './components/authentication/authentication';\nimport { helpers } from './common';\n\n/**\n * @memberof Base\n * @module App\n */\n\n/**\n * ToDo: Investigate replacing NotificationsPortal\n * NotificationsPortal takes down the entire app when the parent Redux store is unavailable.\n */\n/**\n * Curiosity application start.\n * - Loads locale\n * - Provides authentication\n *\n * @param {object} props\n * @param {Function} props.getLocale\n * @param {Function} props.useDispatch\n * @param {Function} props.useSelector\n * @returns {React.ReactNode}\n */\nconst App = ({ getLocale, useDispatch: useAliasDispatch, useSelector: useAliasSelector }) => {\n  const dispatch = useAliasDispatch();\n  const { value: locale } = useAliasSelector(({ user }) => user?.locale?.data, {});\n  let platformNotifications = null;\n\n  useMount(() => {\n    if (!locale) {\n      dispatch(getLocale());\n    }\n  });\n\n  if (!helpers.UI_DISABLED_NOTIFICATIONS) {\n    platformNotifications = <NotificationsPortal />;\n  }\n\n  return (\n    <I18n locale={locale}>\n      {platformNotifications}\n      <Authentication>\n        <Router />\n      </Authentication>\n    </I18n>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelector: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: reduxActions.user.getLocale,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelector: storeHooks.reactRedux.useSelector\n};\n\nexport { App as default, App };\n","import numbro from 'numbro';\nimport cryptoSha1 from 'crypto-js/sha1';\nimport _isPlainObject from 'lodash/isPlainObject';\n\n/**\n * @memberof Helpers\n * @module General\n */\n\n/**\n * Fill for AggregatedError\n *\n * @param {Array|*} errors An array of errors\n * @param {string|*} message\n * @param {object} options\n * @param {string} options.name\n * @returns {Error|window.AggregateError<Error>}\n */\nconst aggregatedError = (errors, message, { name = 'AggregateError' } = {}) => {\n  const { AggregateError, Error } = window;\n  let err;\n\n  if (AggregateError) {\n    err = new AggregateError(errors, message);\n  } else {\n    err = new Error(message);\n    err.name = name;\n    err.errors = (Array.isArray(errors) && errors) || [errors];\n    err.isEmulated = true;\n  }\n  return err;\n};\n\n/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * Generate a consistent hash\n *\n * @param {*|object} anyValue\n * @param {object} options\n * @param {Function} options.method\n * @returns {*|string}\n */\nconst generateHash = (anyValue, { method = cryptoSha1 } = {}) =>\n  method(\n    JSON.stringify({\n      value:\n        (_isPlainObject(anyValue) &&\n          JSON.stringify(\n            Object.entries(anyValue).sort(([a], [b]) => a.localeCompare(b)),\n            (key, value) => {\n              if (value !== anyValue && _isPlainObject(value)) {\n                return JSON.stringify(Object.entries(value).sort(([a], [b]) => a.localeCompare(b)) || []);\n              }\n              if (typeof value === 'function') {\n                return value.toString();\n              }\n              return value;\n            }\n          )) ||\n        `${typeof anyValue}${anyValue?.toString() || anyValue}`\n    })\n  ).toString();\n\n/**\n * Simple memoize, cache based arguments with adjustable limit.\n *\n * @param {Function} func\n * @param {object} options\n * @param {number} options.cacheLimit\n * @returns {Function}\n */\nconst memo = (func, { cacheLimit = 1 } = {}) => {\n  // eslint-disable-next-line func-names\n  const ized = function () {\n    const cache = [];\n\n    return (...args) => {\n      const key = JSON.stringify({ value: [...args].map(arg => (typeof arg === 'function' && arg.toString()) || arg) });\n      const keyIndex = cache.indexOf(key);\n\n      if (keyIndex < 0) {\n        const result = func.call(null, ...args);\n        cache.unshift(key, result);\n        cache.length = cacheLimit * 2;\n        return cache[1];\n      }\n\n      return cache[keyIndex + 1];\n    };\n  };\n\n  return ized();\n};\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * ToDo: review adding \"locale\" for numbro\n */\n/**\n * Convenience wrapper for numbro. Numbro assumes all values passed to it conform as \"number\".\n * This allows us to optional chain the function results.\n *\n * @param {*} value\n * @returns {numbro.Numbro|*}\n */\nconst numberDisplay = value => {\n  if (typeof value !== 'number' || Number.isNaN(value)) {\n    return value;\n  }\n  return numbro(value);\n};\n\n/**\n * Recursive object and props freeze/immutable.\n * Used from deep-freeze-strict, an older npm package, license - public domain\n * https://bit.ly/3HR4XWP and https://bit.ly/3Ye4S6B\n *\n * @param {object} obj\n * @returns {*}\n */\nconst objFreeze = obj => {\n  Object.freeze(obj);\n\n  const oIsFunction = typeof obj === 'function';\n  const hasOwnProp = Object.prototype.hasOwnProperty;\n\n  Object.getOwnPropertyNames(obj).forEach(prop => {\n    if (\n      hasOwnProp.call(obj, prop) &&\n      (oIsFunction ? prop !== 'caller' && prop !== 'callee' && prop !== 'arguments' : true) &&\n      obj[prop] !== null &&\n      (typeof obj[prop] === 'object' || typeof obj[prop] === 'function') &&\n      !Object.isFrozen(obj[prop])\n    ) {\n      objFreeze(obj[prop]);\n    }\n  });\n\n  return obj;\n};\n\n/**\n * Quick set data as \"immutable-like\". Used to pass object and array data through configuration callbacks.\n *\n * @param {*} data\n * @returns {*}\n */\nconst setImmutableData = memo(data => objFreeze(data));\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable platform notifications.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_NOTIFICATIONS = process.env.REACT_APP_UI_DISABLED_NOTIFICATIONS === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the current hosts inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_HOSTS = process.env.REACT_APP_UI_DISABLED_TABLE_HOSTS === 'true';\n\n/**\n * Disable the current instances inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_INSTANCES = process.env.REACT_APP_UI_DISABLED_TABLE_INSTANCES === 'true';\n\n/**\n * Disable the current subscriptions inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_SUBSCRIPTIONS = process.env.REACT_APP_UI_DISABLED_TABLE_SUBSCRIPTIONS === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * A url, or uri, for \"recommend actions\"\n *\n * @type {string}\n */\nconst UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS = process.env.REACT_APP_UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI state logging file name.\n *\n * @type {string}\n */\nconst UI_LOGGER_FILE = process.env.REACT_APP_UI_LOGGER_FILE || 'debug_log_{0}.json';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @param {boolean} options.limit\n * @param {string} options.id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  aggregatedError,\n  browserExpose,\n  generateHash,\n  generateId,\n  isDate,\n  isPromise,\n  memo,\n  noop,\n  noopPromise,\n  numberDisplay,\n  objFreeze,\n  setImmutableData,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_NOTIFICATIONS,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TABLE_HOSTS,\n  UI_DISABLED_TABLE_INSTANCES,\n  UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_LOGGER_FILE,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../services/rhsm/rhsmConstants';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * @memberof Helpers\n * @module Dates\n */\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && moment.utc('20190720').toDate()) ||\n  (helpers.DEV_MODE &&\n    process.env.REACT_APP_DEBUG_DEFAULT_DATETIME &&\n    moment.utc(process.env.REACT_APP_DEBUG_DEFAULT_DATETIME).toDate()) ||\n  moment.utc().toDate();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @param {string} params.endOfMeasurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement, endOfMeasurement = 'days' }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf(endOfMeasurement).toDate()\n});\n\nconst currentDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 1, measurement: 'days' });\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\nconst rangedYearDateTime = setRangedDateTime({\n  date: getCurrentDate(),\n  subtract: 11,\n  measurement: 'months',\n  endOfMeasurement: 'months'\n});\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case 'CURRENT':\n      return { ...currentDateTime };\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Generate a list of months for use in a select list.\n *\n * @param {string} month\n * @returns {{keyDateTimeRanges: {}, listDateTimeRanges: Array}|*|undefined}\n */\nconst getRangedMonthDateTime = month => {\n  const currentYear = Number.parseInt(moment.utc(getCurrentDate()).year(), 10);\n  const { startDate, endDate } = { ...rangedYearDateTime };\n  const keyDateTimeRanges = {};\n  let listDateTimeRanges = [];\n\n  const startDateUpdated = moment.utc(startDate);\n  const endDateUpdated = moment.utc(endDate);\n\n  while (endDateUpdated > startDateUpdated || startDateUpdated.format('M') === endDateUpdated.format('M')) {\n    const dateTime = {\n      value: {\n        startDate: startDateUpdated.toDate()\n      }\n    };\n\n    const titleYear = startDateUpdated.format('MMMM YYYY');\n    const title = startDateUpdated.format('MMMM');\n    const titleIndex = startDateUpdated.format('M');\n    const isNextYear = currentYear !== Number.parseInt(startDateUpdated.year(), 10);\n\n    dateTime.title = (isNextYear && titleYear) || title;\n    dateTime._title = title.toLowerCase();\n    dateTime.value.endDate = moment.utc(startDateUpdated).endOf('month').toDate();\n\n    startDateUpdated.add(1, 'month');\n\n    dateTime.title = translate('curiosity-toolbar.label', { context: ['granularityRangedMonthly', dateTime.title] });\n    keyDateTimeRanges[title.toLowerCase()] = { ...dateTime };\n    keyDateTimeRanges[titleIndex] = { ...dateTime };\n    listDateTimeRanges.push(dateTime);\n  }\n\n  listDateTimeRanges = listDateTimeRanges.reverse();\n  listDateTimeRanges[0] = {\n    ...listDateTimeRanges[0],\n    isCurrent: true,\n    _title: 'current',\n    title: translate('curiosity-toolbar.label', { context: ['granularityRangedMonthly', 'current'] })\n  };\n\n  keyDateTimeRanges.current = { ...listDateTimeRanges[0] };\n\n  if (month) {\n    return keyDateTimeRanges?.[month] || undefined;\n  }\n\n  return { keyDateTimeRanges, listDateTimeRanges };\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\n/**\n * Consistent timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampTimeFormats = {\n  timeLong: 'MMMM D h:mm:ss A',\n  yearTimeLong: 'MMMM D YYYY h:mm:ss A',\n  timeShort: 'MMM D h:mm A',\n  yearTimeShort: 'MMM D YYYY h:mm A'\n};\n\n/**\n * Consistent UTC timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampUTCTimeFormats = {\n  timeLong: 'DD MMMM HH:mm:ss UTC',\n  yearTimeLong: 'DD MMMM YYYY HH:mm:ss UTC',\n  timeShort: 'DD MMM HH:mm UTC',\n  yearTimeShort: 'DD MMM YYYY HH:mm UTC'\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { dateHelpers } from './dateHelpers';\n\n/**\n * @memberof Helpers\n * @module Downloads\n */\n\n/**\n * Download data to a file\n *\n * @param {object} options\n * @param {string} options.data\n * @param {string} options.fileName\n * @param {string} options.fileType\n * @returns {Promise}\n */\nconst downloadData = options => {\n  const { data = '', fileName = 'download.txt', fileType = 'text/plain' } = options || {};\n  return new Promise((resolve, reject) => {\n    try {\n      const { document, navigator, URL } = window;\n      const blob = new Blob([data], { type: fileType });\n\n      if (navigator?.msSaveBlob) {\n        navigator.msSaveBlob(blob, fileName);\n        resolve({ fileName, data });\n      } else {\n        const anchorTag = document.createElement('a');\n\n        anchorTag.href = URL.createObjectURL(blob);\n        anchorTag.style.display = 'none';\n        anchorTag.download = fileName;\n\n        document.body.appendChild(anchorTag);\n\n        anchorTag.click();\n\n        setTimeout(() => {\n          document.body.removeChild(anchorTag);\n          URL.revokeObjectURL(blob);\n          resolve({ fileName, data });\n        }, 250);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\n/**\n * Download the debug log file.\n */\nconst debugLog = async () => {\n  try {\n    const { sessionStorage } = window;\n    const fileName = `${helpers.UI_LOGGER_FILE}`.replace(\n      '{0}',\n      moment(dateHelpers.getCurrentDate()).format('YYYYMMDD_HHmmss')\n    );\n    const data = JSON.stringify(JSON.parse(sessionStorage.getItem(`${helpers.UI_LOGGER_ID}`)), null, 2);\n\n    await downloadData({ data, fileName, fileType: 'application/json' });\n  } catch (e) {\n    throw new Error(`debuglog error, ${e.message}`);\n  }\n};\n\nconst downloadHelpers = {\n  downloadData,\n  debugLog\n};\n\nhelpers.browserExpose({ debugLog }, { limit: false });\n\nexport { downloadHelpers as default, downloadHelpers, downloadData, debugLog };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { routerHelpers } from '../router';\nimport { rhsmConstants } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\nimport { MessageView } from '../messageView/messageView';\nimport { OptinView } from '../optinView/optinView';\nimport { translate } from '../i18n/i18n';\nimport { AuthenticationContext, useGetAuthorization } from './authenticationContext';\n\n/**\n * Authentication component wrapper.\n *\n * @memberof Components\n * @module Authentication\n * @property {module} AuthenticationContext\n */\n\n/**\n * An authentication pass-through component.\n *\n * @param {object} props\n * @param {string} props.appName\n * @param {React.ReactNode} props.children\n * @param {boolean} props.isDisabled\n * @param {Function} props.t\n * @param {Function} props.useGetAuthorization\n * @returns {React.ReactNode}\n */\nconst Authentication = ({ appName, children, isDisabled, t, useGetAuthorization: useAliasGetAuthorization }) => {\n  const { pending, data = {} } = useAliasGetAuthorization();\n  const { authorized = {}, errorCodes, errorStatus } = data;\n  const { [appName]: isAuthorized } = authorized;\n\n  const renderContent = () => {\n    if (isDisabled) {\n      return (\n        <MessageView>\n          <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n        </MessageView>\n      );\n    }\n\n    if (isAuthorized) {\n      return children;\n    }\n\n    if (pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (errorCodes && errorCodes.includes(rhsmConstants.RHSM_API_RESPONSE_ERRORS_CODE_TYPES.OPTIN)) ||\n      errorStatus === 418\n    ) {\n      return <OptinView />;\n    }\n\n    return (\n      <MessageView>\n        <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n      </MessageView>\n    );\n  };\n\n  return <AuthenticationContext.Provider value={data}>{renderContent()}</AuthenticationContext.Provider>;\n};\n\n/**\n * Prop types.\n *\n * @type {{useGetAuthorization: Function, children: React.ReactNode, appName: string, isDisabled: boolean}}\n */\nAuthentication.propTypes = {\n  appName: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  useGetAuthorization: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useGetAuthorization: Function, t: Function, appName: string, isDisabled: boolean}}\n */\nAuthentication.defaultProps = {\n  appName: routerHelpers.appName,\n  isDisabled: helpers.UI_DISABLED,\n  t: translate,\n  useGetAuthorization\n};\n\nexport { Authentication as default, Authentication };\n","import React, { useContext, useState } from 'react';\nimport { useMount, useUnmount } from 'react-use';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { helpers } from '../../common';\nimport { routerContext, routerHelpers } from '../router';\n\n/**\n * @memberof Authentication\n * @module AuthenticationContext\n */\n\n/**\n * Authentication context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst AuthenticationContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated authentication context.\n *\n * @returns {React.Context<{}>}\n */\nconst useAuthContext = () => useContext(AuthenticationContext);\n\n/**\n * Initialize an app, and return a combined state store that includes authorization, locale, and API errors\n *\n * @param {object} options\n * @param {string} options.appName\n * @param {Function} options.authorizeUser\n * @param {Function} options.hideGlobalFilter\n * @param {Function} options.onNavigation\n * @param {Function} options.useChrome\n * @param {Function} options.useDispatch\n * @param {Function} options.useNavigate\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: {errorCodes, errorStatus: *, locale}, pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetAuthorization = ({\n  appName = routerHelpers.appName,\n  authorizeUser = reduxActions.platform.authorizeUser,\n  hideGlobalFilter = reduxActions.platform.hideGlobalFilter,\n  onNavigation = reduxActions.platform.onNavigation,\n  useChrome: useAliasChrome = useChrome,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useNavigate: useAliasNavigate = routerContext.useNavigate,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const [unregister, setUnregister] = useState(() => helpers.noop);\n  const navigate = useAliasNavigate();\n  const dispatch = useAliasDispatch();\n  const { updateDocumentTitle = helpers.noop } = useAliasChrome();\n  const { data, error, fulfilled, pending, responses } = useAliasSelectorsResponse([\n    { id: 'auth', selector: ({ user }) => user?.auth },\n    { id: 'locale', selector: ({ user }) => user?.locale },\n    {\n      id: 'errors',\n      selector: ({ user }) => (user?.errors?.error === true && user.errors) || { fulfilled: true, data: [] }\n    }\n  ]);\n\n  useMount(async () => {\n    await dispatch(authorizeUser());\n    updateDocumentTitle(appName);\n    dispatch([hideGlobalFilter()]);\n    setUnregister(() => dispatch(onNavigation(event => navigate(event.navId))));\n  });\n\n  useUnmount(() => {\n    unregister();\n  });\n\n  const [user = {}, app = {}] = (Array.isArray(data.auth) && data.auth) || [];\n  const errorStatus = (error && responses?.id?.errors?.status) || null;\n\n  return {\n    data: {\n      ...user,\n      ...app,\n      locale: data.locale,\n      errorCodes: data.errors,\n      errorStatus\n    },\n    error,\n    fulfilled,\n    pending\n  };\n};\n\n/**\n * Return session data from authentication context.\n *\n * @param {Function} useAliasAuthContext\n * @returns {{errorCodes, errorStatus: *, locale}}\n */\nconst useSession = ({ useAuthContext: useAliasAuthContext = useAuthContext } = {}) => {\n  const session = useAliasAuthContext();\n  return {\n    ...session\n  };\n};\n\nconst context = {\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useGetAuthorization,\n  useSession\n};\n\nexport {\n  context as default,\n  context,\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useGetAuthorization,\n  useSession\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ChartThemeColor } from '@patternfly/react-charts';\nimport { ChartContext } from './chartContext';\nimport { ChartElements } from './chartElements';\nimport { ChartLegend } from './chartLegend';\nimport { chartHelpers, ChartTypeVariant } from './chartHelpers';\nimport { useResizeObserver } from '../../hooks/useWindow';\n\n/**\n * PF Charts/Victory area, and line, charts generator.\n *\n * @memberof Components\n * @module Chart\n * @property {module} ChartAxisLabel\n * @property {module} ChartContext\n * @property {module} ChartElements\n * @property {module} ChartHelpers\n * @property {module} ChartIcon\n * @property {module} ChartLegend\n * @property {module} ChartTooltip\n */\n\n/**\n * Return a chart and elements with a context provider.\n *\n * @param {object} props\n * @param {React.ReactNode|Function} props.chartLegend\n * @param {React.ReactNode|Function} props.chartTooltip\n * @param {Array} props.dataSets\n * @param {object} props.padding\n * @param {string} props.themeColor\n * @param {React.ReactNode|Function} props.xAxisChartLabel\n * @param {React.ReactNode|Function} props.yAxisChartLabel\n * @param {boolean} props.xAxisFixLabelOverlap\n * @param {number} props.xAxisLabelIncrement\n * @param {Function} props.xAxisTickFormat\n * @param {Function} props.yAxisTickFormat\n * @param {Function} props.xValueFormat\n * @param {Function} props.yValueFormat\n * @returns {React.ReactNode}\n */\nconst Chart = ({\n  chartLegend,\n  chartTooltip,\n  dataSets,\n  padding,\n  themeColor,\n  xAxisChartLabel,\n  yAxisChartLabel,\n  xAxisFixLabelOverlap,\n  xAxisLabelIncrement,\n  xAxisTickFormat,\n  yAxisTickFormat,\n  xValueFormat,\n  yValueFormat\n}) => {\n  const [context, setContext] = useState();\n  const [dataSetsToggle, setDataSetsToggle] = useState({});\n  const containerRef = useRef(null);\n  const tooltipRef = useRef(null);\n  const { width: chartWidth } = useResizeObserver(containerRef);\n\n  useEffect(() => {\n    /**\n     * Aggregate chart related settings.\n     *\n     * @returns {{isMultiYAxis: boolean, padding: object, chartDomain: {domain: {y: Array}}, tooltipDataSetLookUp: {},\n     *     xAxisProps: object, themeColor: string, maxY: (object|number), hasData: boolean, maxX: number,\n     *     yAxisProps: Array, chartElementsProps: {elementsById: object, stackedElements: Array,\n     *     stackedElementsById: object, elements: Array}}}\n     */\n    const updateChartSettings = () => {\n      const toggledDataSets = dataSets.filter(({ id }) => !dataSetsToggle[id]);\n\n      const tooltipDataSetLookUp = chartHelpers.generateTooltipData({\n        content: chartTooltip,\n        dataSets: toggledDataSets\n      });\n\n      const { maxX, maxY } = chartHelpers.generateMaxXY({ dataSets: toggledDataSets });\n      const { individualMaxY } = chartHelpers.generateMaxXY({ dataSets });\n      const { xAxisProps, yAxisProps } = chartHelpers.generateAxisProps({\n        dataSets,\n        individualMaxY,\n        maxX,\n        maxY,\n        xAxisChartLabel,\n        yAxisChartLabel,\n        xAxisFixLabelOverlap,\n        xAxisLabelIncrement,\n        xAxisTickFormat,\n        yAxisTickFormat\n      });\n\n      const isMultiYAxis = yAxisProps.length > 1;\n      const chartElementsProps = chartHelpers.generateElementsProps({\n        dataSets: toggledDataSets,\n        maxX,\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        xValueFormat,\n        yValueFormat\n      });\n      const { domain, padding: domainPadding } = chartHelpers.generateDomains({\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        padding\n      });\n      const hasData = !!xAxisProps.tickValues;\n      const updatedPadding = { bottom: 0, left: 0, right: 0, top: 0, ...padding, ...domainPadding };\n\n      return {\n        xAxisProps,\n        yAxisProps,\n        chartDomain: { domain },\n        chartElementsProps,\n        hasData,\n        isMultiYAxis,\n        maxX,\n        maxY: (isMultiYAxis && individualMaxY) || maxY,\n        padding: updatedPadding,\n        themeColor,\n        tooltipDataSetLookUp\n      };\n    };\n\n    const chartSettings = updateChartSettings();\n    const updatedSettings = {\n      chartContainerRef: () => containerRef,\n      chartSettings: { ...chartSettings, chartLegend, chartWidth, dataSets },\n      chartTooltipRef: () => tooltipRef,\n      dataSetsToggle: [dataSetsToggle, setDataSetsToggle]\n    };\n\n    setContext(updatedSettings);\n  }, [\n    chartLegend,\n    chartTooltip,\n    chartWidth,\n    dataSets,\n    dataSetsToggle,\n    padding,\n    setContext,\n    themeColor,\n    xAxisChartLabel,\n    yAxisChartLabel,\n    xAxisFixLabelOverlap,\n    xAxisLabelIncrement,\n    yAxisTickFormat,\n    xAxisTickFormat,\n    xValueFormat,\n    yValueFormat\n  ]);\n\n  return (\n    <ChartContext.Provider value={context}>\n      <div\n        id=\"curiosity-chartarea\"\n        className=\"curiosity-chartarea uxui-curiosity__modal uxui-curiosity__modal--loading\"\n        ref={containerRef}\n      >\n        {chartWidth > 0 && (\n          <React.Fragment>\n            <ChartElements />\n            <ChartLegend />\n          </React.Fragment>\n        )}\n      </div>\n    </ChartContext.Provider>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{chartTooltip: React.ReactNode|Function, xValueFormat: Function, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: Function, themeColor: string, chartLegend: React.ReactNode|Function,\n *     yAxisTickFormat: Function, dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number,\n *     yValueFormat: Function}}\n */\nChart.propTypes = {\n  chartLegend: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  chartTooltip: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  dataSets: PropTypes.arrayOf(\n    PropTypes.shape({\n      data: PropTypes.arrayOf(\n        PropTypes.shape({\n          x: PropTypes.number.isRequired,\n          y: PropTypes.number,\n          xAxisLabel: PropTypes.oneOfType([PropTypes.number, PropTypes.string, PropTypes.instanceOf(Date)])\n        })\n      ),\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      chartType: PropTypes.oneOf([...Object.values(ChartTypeVariant)]),\n      fill: PropTypes.string,\n      stroke: PropTypes.string,\n      strokeWidth: PropTypes.number,\n      strokeDasharray: PropTypes.string,\n      themeColor: PropTypes.string,\n      themeVariant: PropTypes.string,\n      id: PropTypes.string.isRequired,\n      interpolation: PropTypes.string,\n      style: PropTypes.object,\n      isStacked: PropTypes.bool,\n      xAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      yAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n      xAxisUseDataSet: PropTypes.bool,\n      yAxisUseDataSet: PropTypes.bool\n    })\n  ),\n  padding: PropTypes.shape({\n    bottom: PropTypes.number,\n    left: PropTypes.number,\n    right: PropTypes.number,\n    top: PropTypes.number\n  }),\n  themeColor: PropTypes.oneOf(Object.values(ChartThemeColor)),\n  xAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  yAxisChartLabel: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  xAxisFixLabelOverlap: PropTypes.bool,\n  xAxisLabelIncrement: PropTypes.number,\n  xAxisTickFormat: PropTypes.func,\n  yAxisTickFormat: PropTypes.func,\n  xValueFormat: PropTypes.func,\n  yValueFormat: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{chartTooltip: React.ReactNode|Function, xValueFormat: Function, padding: {top: number, left: number, bottom: number,\n *     right: number}, xAxisTickFormat: Function, themeColor: string, chartLegend: React.ReactNode|Function,\n *     yAxisTickFormat: Function, dataSets: Array, xAxisFixLabelOverlap: boolean, xAxisLabelIncrement: number,\n *     yValueFormat: Function}}\n */\nChart.defaultProps = {\n  chartLegend: null,\n  chartTooltip: null,\n  dataSets: [],\n  padding: {\n    bottom: 75,\n    left: 55,\n    right: 55,\n    top: 50\n  },\n  themeColor: 'blue',\n  xAxisChartLabel: null,\n  yAxisChartLabel: null,\n  xAxisFixLabelOverlap: true,\n  xAxisLabelIncrement: 1,\n  xAxisTickFormat: null,\n  yAxisTickFormat: null,\n  xValueFormat: null,\n  yValueFormat: null\n};\n\nexport { Chart as default, Chart, ChartTypeVariant };\n","import { useEffect, useState } from 'react';\nimport { helpers } from '../common';\n\n/**\n * Global window related hooks.\n *\n * @memberof Hooks\n * @module UseWindow\n */\n\n/**\n * Apply a resize observer to an element.\n *\n * @param {*} target\n * @returns {{width: number, height: number}}\n */\nconst useResizeObserver = target => {\n  const [dimensions, setDimensions] = useState({ width: 0, height: 0 });\n\n  useEffect(() => {\n    const isElementResize = target && window.ResizeObserver && true;\n    const element = target?.current;\n    let removeObserver = helpers.noop;\n\n    if (element) {\n      const handler = () => {\n        const { clientHeight = 0, clientWidth = 0, innerHeight = 0, innerWidth = 0 } = element || {};\n\n        setDimensions({\n          width: isElementResize ? clientWidth : innerWidth,\n          height: isElementResize ? clientHeight : innerHeight\n        });\n      };\n\n      if (isElementResize) {\n        const resizeObserver = new window.ResizeObserver(handler);\n        resizeObserver.observe(element);\n        removeObserver = () => resizeObserver.unobserve(element);\n      } else {\n        handler();\n        window.addEventListener('resize', handler);\n        removeObserver = () => window.removeEventListener('resize', handler);\n      }\n    }\n\n    return () => {\n      removeObserver();\n    };\n  }, [target]);\n\n  return dimensions;\n};\n\nconst windowHooks = {\n  useResizeObserver\n};\n\nexport { windowHooks as default, windowHooks, useResizeObserver };\n","import React from 'react';\n\n/**\n * @memberof Chart\n * @module ChartAxisLabel\n */\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * Allow, and return, SVG compatible HTML for axis labels.\n *\n * @param {object} params\n * @param {string} params.axis\n * @param {number} params.index\n * @returns {Function}\n */\nconst chartAxisLabel =\n  ({ axis, index = 0 } = {}) =>\n  ({ x, y, text }) => // eslint-disable-line\n    (\n      <g>\n        <foreignObject x={0} y={0} width=\"100%\" height=\"100%\">\n          <div\n            className={`curiosity-chartarea__axis-label-container curiosity-chartarea__axis-label-container-${axis} curiosity-chartarea__axis-label-container-${axis}-${index}`}\n            style={{ top: `${y ?? 0}px` }}\n            xmlns=\"http://www.w3.org/1999/xhtml\"\n          >\n            <div className=\"curiosity-chartarea__axis-label-container-content\">{text}</div>\n          </div>\n        </foreignObject>\n      </g>\n    );\n\nexport { chartAxisLabel as default, chartAxisLabel };\n","import React, { useCallback, useContext } from 'react';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Chart\n * @module ChartContext\n */\n\n/**\n * Chart context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { chartContainerRef: helpers.noop, chartSettings: {}, chartTooltipRef: helpers.noop, dataSetsToggle: [] },\n  helpers.noop\n];\n\nconst ChartContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated chart context.\n *\n * @returns {React.Context<{}>}\n */\nconst useChartContext = () => useContext(ChartContext);\n\n/**\n * ToDo: reevaluate this alternative pattern of passing hooks as options, helps testing\n */\n/**\n * Track, show, and hide chart data layers.\n *\n * @fires onHide\n * @fires onRevert\n * @fires onToggle\n * @param {object} options\n * @param {Function} options.useChartContext\n * @returns {{onRevert: Function, onToggle: Function, getIsToggled: Function, dataSetsToggle: object,\n *     onHide: Function}}\n */\nconst useToggleData = ({ useChartContext: useAliasChartContext = useChartContext } = {}) => {\n  const { dataSetsToggle: contextDataSetsToggle = [] } = useAliasChartContext();\n  const [dataSetsToggle, setDataSetsToggle] = contextDataSetsToggle;\n\n  /**\n   * Hide a graph layer.\n   *\n   * @event onHide\n   */\n  const onHide = useCallback(\n    id => {\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: true }));\n    },\n    [setDataSetsToggle]\n  );\n\n  /**\n   * Reset graph layers.\n   *\n   * @event onRevert\n   */\n  const onRevert = useCallback(() => {\n    setDataSetsToggle(() => ({}));\n  }, [setDataSetsToggle]);\n\n  /**\n   * Hide/show graph layers.\n   *\n   * @event onToggle\n   * @returns boolean;\n   */\n  const onToggle = useCallback(\n    id => {\n      const updatedToggle = !dataSetsToggle?.[id];\n      setDataSetsToggle(prevState => ({ ...prevState, [id]: updatedToggle }));\n      return updatedToggle;\n    },\n    [dataSetsToggle, setDataSetsToggle]\n  );\n\n  /**\n   * Graph layer status.\n   *\n   * @callback getIsToggled\n   * @returns boolean|*\n   */\n  const getIsToggled = useCallback(id => dataSetsToggle?.[id] || false, [dataSetsToggle]);\n\n  return {\n    ...{ dataSetsToggle },\n    onHide,\n    onRevert,\n    onToggle,\n    getIsToggled\n  };\n};\n\nconst context = {\n  ChartContext,\n  DEFAULT_CONTEXT,\n  useChartContext,\n  useToggleData\n};\n\nexport { context as default, context, ChartContext, DEFAULT_CONTEXT, useChartContext, useToggleData };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { VictoryStack as ChartStack, VictoryTooltip as ChartCursorTooltip } from 'victory';\nimport { createContainer } from 'victory-create-container';\nimport { Chart, ChartArea, ChartAxis, ChartContainer, ChartLine, ChartThreshold } from '@patternfly/react-charts';\nimport { useChartContext } from './chartContext';\nimport { chartTooltip } from './chartTooltip';\nimport { chartAxisLabel } from './chartAxisLabel';\nimport { ChartTypeVariant } from './chartHelpers';\n\n/**\n * @memberof Chart\n * @module ChartElements\n */\n\n/**\n * Aggregate, generate, a compatible Victory chart element/facet component.\n *\n * @param {object} props\n * @param {object} props.chartTypeDefaults\n * @returns {React.ReactNode}\n */\nconst ChartElements = ({ chartTypeDefaults }) => {\n  const { chartSettings = {}, chartContainerRef, chartTooltipRef } = useChartContext();\n  const {\n    chartDomain,\n    chartElementsProps,\n    chartWidth,\n    hasData,\n    padding,\n    themeColor,\n    xAxisProps = {},\n    yAxisProps = []\n  } = chartSettings;\n\n  let containerComponent = <ChartContainer />;\n  let xAxis = null;\n  let yAxis = null;\n  let chartElements = [];\n  let stackedChartElements = [];\n\n  if (hasData) {\n    /**\n     * Note: both cursor and voronoiDimension attrs required if the need is to have...\n     * the tooltip populate consistently without being \"near\" a chart element y axis point\n     */\n    const VictoryVoronoiCursorContainer = createContainer('voronoi', 'cursor');\n    const TooltipLabelComponent = chartTooltip({ chartSettings, chartContainerRef, chartTooltipRef });\n\n    containerComponent = (\n      <VictoryVoronoiCursorContainer\n        cursorDimension=\"x\"\n        voronoiDimension=\"x\"\n        labels={obj => obj}\n        labelComponent={\n          <ChartCursorTooltip\n            dx={0}\n            dy={0}\n            centerOffset={{ x: 0, y: 0 }}\n            flyoutStyle={{ fill: 'transparent', stroke: 'transparent' }}\n            labelComponent={<TooltipLabelComponent />}\n          />\n        }\n        voronoiPadding={(padding && Object.values(padding).sort()?.[0]) || 0}\n        mouseFollowTooltips\n      />\n    );\n  }\n\n  /**\n   * Generate X Axis\n   */\n  if (Object.keys(xAxisProps).length) {\n    const updatedXAxisProps = {\n      ...xAxisProps\n    };\n\n    if (updatedXAxisProps.label) {\n      const AxisLabelComponent = chartAxisLabel({ axis: 'x' });\n      updatedXAxisProps.axisLabelComponent = <AxisLabelComponent />;\n    }\n\n    xAxis = <ChartAxis {...updatedXAxisProps} animate={false} />;\n  }\n\n  /**\n   * Generate Y Axis\n   */\n  if (Array.isArray(yAxisProps)) {\n    yAxis = yAxisProps.map((axisProps, index) => {\n      const updatedAxisProps = {\n        ...axisProps\n      };\n\n      if (updatedAxisProps.label) {\n        const AxisLabelComponent = chartAxisLabel({ axis: 'y', index });\n        updatedAxisProps.axisLabelComponent = <AxisLabelComponent />;\n      }\n\n      return <ChartAxis key={`yaxis-${axisProps.orientation}`} {...updatedAxisProps} animate={false} />;\n    });\n  }\n\n  const setChartElement = ({ chartType, props }) => {\n    const { component: Component, ...defaultProps } =\n      chartTypeDefaults[chartType] || chartTypeDefaults[ChartTypeVariant.area];\n    return <Component {...{ ...defaultProps, ...props }} />;\n  };\n\n  chartElements = chartElementsProps?.elements.map(setChartElement);\n  stackedChartElements = chartElementsProps?.stackedElements.map(setChartElement);\n\n  return (\n    <Chart\n      animate={{ duration: 0 }}\n      width={chartWidth}\n      themeColor={themeColor}\n      {...{ padding, containerComponent, ...chartDomain }}\n    >\n      {xAxis}\n      {yAxis}\n      {chartElements}\n      <ChartStack>{stackedChartElements}</ChartStack>\n    </Chart>\n  );\n};\n\n/**\n * Prop types\n *\n * @type {{chartTypeDefaults:{}}}\n */\nChartElements.propTypes = {\n  chartTypeDefaults: PropTypes.objectOf(\n    PropTypes.shape({\n      component: PropTypes.oneOfType([PropTypes.node, PropTypes.func]).isRequired,\n      animate: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n      interpolation: PropTypes.oneOf(['monotoneX', 'step'])\n    })\n  )\n};\n\n/**\n * Default props\n *\n * @type {{chartTypeDefaults:{}}}\n */\nChartElements.defaultProps = {\n  chartTypeDefaults: {\n    [ChartTypeVariant.area]: {\n      component: ChartArea,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    [ChartTypeVariant.line]: {\n      component: ChartLine,\n      animate: {\n        duration: 250,\n        onLoad: { duration: 250 }\n      },\n      interpolation: 'monotoneX'\n    },\n    [ChartTypeVariant.threshold]: {\n      component: ChartThreshold,\n      animate: {\n        duration: 100,\n        onLoad: { duration: 100 }\n      },\n      interpolation: 'step'\n    }\n  }\n};\n\nexport { ChartElements as default, ChartElements };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Chart\n * @module ChartHelpers\n */\n\n/**\n * Available chart types\n *\n * @type {{area: string, line: string, threshold: string}}\n */\nconst ChartTypeVariant = {\n  area: 'area',\n  line: 'line',\n  threshold: 'threshold'\n};\n\n/**\n * Generate max X and Y values from datasets.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @returns {{individualMaxY: object, maxY: number, maxX: number}}\n */\nconst generateMaxXY = ({ dataSets = [] } = {}) => {\n  const individualDataSetsMaxY = {};\n  let combinedDataSetMaxX = 0;\n  let combinedDataSetsMaxY = 0;\n\n  dataSets\n    .filter(({ isStacked }) => isStacked === true)\n    .forEach(({ data }) => {\n      if (Array.isArray(data)) {\n        combinedDataSetsMaxY += Math.max(...data.map(value => value?.y ?? 0));\n      }\n    });\n\n  dataSets.forEach(({ id, data }) => {\n    let dataSetMaxY = 0;\n\n    if (Array.isArray(data)) {\n      combinedDataSetMaxX = data.length > combinedDataSetMaxX ? data.length : combinedDataSetMaxX;\n\n      dataSetMaxY = Math.max(...data.map(value => value?.y ?? 0));\n      combinedDataSetsMaxY = dataSetMaxY > combinedDataSetsMaxY ? dataSetMaxY : combinedDataSetsMaxY;\n    }\n\n    if (id) {\n      individualDataSetsMaxY[id] = dataSetMaxY;\n    }\n  });\n\n  return {\n    maxX: combinedDataSetMaxX,\n    maxY: combinedDataSetsMaxY,\n    individualMaxY: individualDataSetsMaxY\n  };\n};\n\n/**\n * Generate Y axis domain ranges from dataSets, ignore X axis.\n *\n * @param {object} params\n * @param {number|object} params.maxY\n * @param {object} params.padding\n * @returns {{ domain: { y: Array }, padding: {object} }}\n */\nconst generateDomains = ({ maxY, padding = {} } = {}) => {\n  const updatedChartDomain = {};\n  const updatedPadding = { ...padding };\n  const generatedDomain = {};\n\n  if (Object.values(maxY).length) {\n    generatedDomain.y = [0, 1.25];\n  } else if (maxY >= 0.1) {\n    const floored = Math.pow(10, Math.floor(Math.log10(maxY || 10)));\n    generatedDomain.y = [0, Math.ceil((maxY + 1) / floored) * floored];\n  } else if (maxY < 0.1) {\n    generatedDomain.y = [0, maxY + maxY / 4 || 10];\n  } else {\n    generatedDomain.y = [0, 10];\n  }\n\n  if (maxY < 0.01) {\n    updatedPadding.left += generatedDomain.y.toString().length;\n    updatedPadding.right += generatedDomain.y.toString().length;\n  }\n\n  if (Object.keys(generatedDomain).length) {\n    updatedChartDomain.domain = generatedDomain;\n  }\n\n  return {\n    ...updatedChartDomain,\n    padding: updatedPadding\n  };\n};\n\n/**\n * Generate chart element props.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {number} params.maxX\n * @param {number} params.maxY\n * @param {Function} params.xValueFormat\n * @param {Function} params.yValueFormat\n * @param {object} options\n * @param {object} options.chartTypeVariant\n * @returns {{elementsById: object, stackedElements: Array, stackedElementsById: object, elements: Array}}\n */\nconst generateElementsProps = (\n  { dataSets = [], maxX, maxY, xValueFormat, yValueFormat } = {},\n  { chartTypeVariant = ChartTypeVariant } = {}\n) => {\n  const elements = [];\n  const stackedElements = [];\n  const elementsById = {};\n  const stackedElementsById = {};\n\n  dataSets.forEach(dataSet => {\n    const { animate, chartType, data, fill, id, isStacked, interpolation, stroke, strokeDasharray, strokeWidth } =\n      dataSet;\n\n    if (data?.length) {\n      const dataColorStroke = {\n        data: {}\n      };\n\n      if (fill && chartType !== chartTypeVariant.line && chartType !== chartTypeVariant.threshold) {\n        dataColorStroke.data.fill = fill;\n      }\n\n      if (stroke) {\n        dataColorStroke.data.stroke = stroke;\n      }\n\n      if (strokeDasharray) {\n        dataColorStroke.data.strokeDasharray = strokeDasharray;\n      }\n\n      if (strokeWidth) {\n        dataColorStroke.data.strokeWidth = strokeWidth;\n      }\n\n      const defaultProps = {};\n\n      if (animate) {\n        defaultProps.animate = animate;\n      }\n\n      if (interpolation) {\n        defaultProps.interpolation = interpolation;\n      }\n\n      const chartElementProps = {\n        ...defaultProps,\n        key: `chart-${dataSet.id}-${chartType || ''}`,\n        name: `chart-${dataSet.id}-${chartType || ''}`,\n        data: dataSet.data,\n        style: { ...(dataSet.style || {}), ...dataColorStroke },\n        themeColor: dataSet.themeColor,\n        themeVariant: dataSet.themeVariant,\n        x:\n          (xValueFormat &&\n            (datum => {\n              const xValue = xValueFormat({ datum, maxX });\n              return xValue === undefined || Number.isNaN(xValue) ? 0 : xValue;\n            })) ||\n          undefined,\n        y: datum => {\n          let yValue;\n\n          if (yValueFormat) {\n            yValue = yValueFormat({\n              datum,\n              isMultiAxis: typeof maxY !== 'number',\n              maxY: typeof maxY === 'number' ? maxY : maxY?.[dataSet.id]\n            });\n          } else {\n            yValue = typeof maxY === 'number' ? datum.y : datum.y / maxY?.[dataSet.id]; // eslint-disable-line\n          }\n\n          return yValue === undefined || Number.isNaN(yValue) ? 0 : yValue;\n        }\n      };\n\n      const props = { ...chartElementProps };\n      const updatedProps = { chartType, props };\n\n      if (isStacked) {\n        stackedElementsById[id] = updatedProps;\n        stackedElements.push(updatedProps);\n      } else {\n        elementsById[id] = updatedProps;\n        elements.push(updatedProps);\n      }\n    }\n  });\n\n  return {\n    elements,\n    elementsById,\n    stackedElements,\n    stackedElementsById\n  };\n};\n\n/**\n * Preprocess datasets for tooltips.\n *\n * @param {object} params\n * @param {React.ReactNode|Function} params.content\n * @param {Array} params.dataSets\n * @returns {{}}\n */\nconst generateTooltipData = ({ content = helpers.noop, dataSets = [] } = {}) => {\n  const tooltipDataSetLookUp = {};\n\n  if (content && Array.isArray(dataSets?.[0]?.data)) {\n    dataSets[0].data.forEach((dataSet, index) => {\n      const itemsByKey = {};\n\n      dataSets.forEach(data => {\n        if (data?.data?.[index]) {\n          itemsByKey[data.id] = {\n            color: data.stroke || data.fill || data.color || '',\n            chartType: data.chartType,\n            data: _cloneDeep(data.data[index])\n          };\n        }\n      });\n\n      const mockDatum = {\n        datum: { x: dataSet.x, y: dataSet.y, index, itemsByKey }\n      };\n\n      tooltipDataSetLookUp[dataSet.x] = {\n        x: dataSet.x,\n        y: null,\n        itemsByKey,\n        tooltip:\n          (React.isValidElement(content) && React.cloneElement(content, { ...mockDatum })) || content({ ...mockDatum })\n      };\n    });\n  }\n\n  return tooltipDataSetLookUp;\n};\n\n/**\n * Generate X axis props, ticks, tick formatting.\n *\n * @param {object} params\n * @param {object} params.dataSet\n * @param {number} params.maxX\n * @param {number} params.xAxisLabelIncrement\n * @param {object} params.xAxisPropDefaults\n * @param {Function} params.xAxisTickFormat\n * @returns {{tickFormat: (function(*)), tickValues: *}}\n */\nconst generateXAxisProps = ({\n  dataSet = {},\n  maxX,\n  xAxisLabelIncrement,\n  xAxisPropDefaults = {},\n  xAxisTickFormat\n} = {}) => {\n  const { data = [], xAxisChartLabel } = dataSet;\n  const axisProps = {\n    ...xAxisPropDefaults,\n    tickValues: data.reduce(\n      (acc, current, index) => (index % xAxisLabelIncrement === 0 ? acc.concat(current.x) : acc),\n      []\n    ),\n    tickFormat: tick => data[tick]?.xAxisLabel || tick\n  };\n\n  if (typeof xAxisChartLabel === 'function') {\n    axisProps.label = xAxisChartLabel({ ...dataSet, xAxisChartLabel: undefined });\n  } else {\n    axisProps.label = xAxisChartLabel;\n  }\n\n  if (typeof xAxisTickFormat === 'function') {\n    axisProps.tickFormat = tick => {\n      const tickIndex = axisProps.tickValues.indexOf(tick);\n      const previousItem = { ...data[axisProps.tickValues[tickIndex - 1]] };\n      const nextItem = { ...data[axisProps.tickValues[tickIndex + 1]] };\n      const item = { ...data[tick] };\n\n      return xAxisTickFormat({ tick, previousItem, item, nextItem, maxX });\n    };\n  }\n\n  return axisProps;\n};\n\n/**\n * Generate Y axis props, ticks, tick formatting.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {number|object} params.maxY\n * @param {object} params.yAxisPropDefaults\n * @param {Function} params.yAxisTickFormat\n * @returns {Array}\n */\nconst generateYAxisProps = ({ dataSets = [], maxY, yAxisPropDefaults = {}, yAxisTickFormat } = {}) => {\n  const axisProps = [];\n  const isMultiAxis = dataSets.length > 1;\n\n  dataSets.forEach(({ yAxisChartLabel, id, stroke, strokeWidth, ...dataSet } = {}, index) => {\n    const updatedAxisProps = {\n      style: { axis: {}, tickLabels: {} },\n      tickFormat: tick => tick\n    };\n\n    if (isMultiAxis && stroke) {\n      updatedAxisProps.style.axis.stroke = stroke;\n    }\n\n    if (isMultiAxis && strokeWidth) {\n      updatedAxisProps.style.axis.strokeWidth = strokeWidth;\n    }\n\n    if (typeof yAxisChartLabel === 'function') {\n      updatedAxisProps.label = yAxisChartLabel({ id, stroke, strokeWidth, ...dataSet });\n    } else {\n      updatedAxisProps.label = yAxisChartLabel;\n    }\n\n    if (typeof yAxisTickFormat === 'function') {\n      const updatedMaxY = (typeof maxY === 'number' && maxY) || maxY?.[id];\n\n      updatedAxisProps.tickFormat = tick => {\n        const normalizedTick = (isMultiAxis && tick * updatedMaxY) || tick;\n\n        return yAxisTickFormat({\n          tick: normalizedTick,\n          isMultiAxis,\n          maxY: updatedMaxY\n        });\n      };\n    }\n\n    axisProps.push({\n      ...yAxisPropDefaults,\n      ...updatedAxisProps,\n      orientation: (index === 0 && 'left') || 'right'\n    });\n  });\n\n  return axisProps;\n};\n\n/**\n * Generate x,y props.\n *\n * @param {object} params\n * @param {Array} params.dataSets\n * @param {object} params.individualMaxY\n * @param {number} params.maxX\n * @param {number} params.maxY\n * @param {React.ReactNode|Function} params.xAxisChartLabel\n * @param {React.ReactNode|Function} params.yAxisChartLabel\n * @param {boolean} params.xAxisFixLabelOverlap\n * @param {number} params.xAxisLabelIncrement\n * @param {Function} params.xAxisTickFormat\n * @param {Function} params.yAxisTickFormat\n * @returns {{xAxisProps: object, yAxisProps: Array}}\n */\nconst generateAxisProps = ({\n  dataSets = [],\n  individualMaxY = {},\n  maxX,\n  maxY,\n  xAxisChartLabel,\n  yAxisChartLabel,\n  xAxisFixLabelOverlap = true,\n  xAxisLabelIncrement = 1,\n  xAxisTickFormat,\n  yAxisTickFormat\n} = {}) => {\n  const xAxisPropDefaults = {\n    fixLabelOverlap: xAxisFixLabelOverlap\n  };\n\n  const yAxisPropDefaults = {\n    dependentAxis: true,\n    showGrid: true\n  };\n\n  let yAxisDataSets = [];\n  let xAxisDataSet;\n\n  dataSets.forEach(dataSet => {\n    if (dataSet.yAxisUseDataSet) {\n      yAxisDataSets.push({\n        yAxisChartLabel,\n        ...dataSet\n      });\n    }\n    if (dataSet.xAxisUseDataSet) {\n      xAxisDataSet = {\n        xAxisChartLabel,\n        ...dataSet\n      };\n    }\n  });\n\n  if (!yAxisDataSets.length) {\n    yAxisDataSets.push({\n      yAxisChartLabel,\n      ...dataSets?.[0]\n    });\n  } else {\n    yAxisDataSets = yAxisDataSets.slice(0, 2);\n  }\n\n  if (!xAxisDataSet) {\n    xAxisDataSet = {\n      xAxisChartLabel,\n      ...dataSets?.[0]\n    };\n  }\n\n  const updatedMaxY = (yAxisDataSets.length > 1 && individualMaxY) || maxY;\n\n  return {\n    xAxisProps: generateXAxisProps({\n      dataSet: xAxisDataSet,\n      maxX,\n      xAxisLabelIncrement,\n      xAxisPropDefaults,\n      xAxisTickFormat\n    }),\n    yAxisProps: generateYAxisProps({ dataSets: yAxisDataSets, maxY: updatedMaxY, yAxisPropDefaults, yAxisTickFormat })\n  };\n};\n\nconst chartHelpers = {\n  ChartTypeVariant,\n  generateAxisProps,\n  generateDomains,\n  generateElementsProps,\n  generateMaxXY,\n  generateTooltipData,\n  generateXAxisProps,\n  generateYAxisProps\n};\n\nexport {\n  chartHelpers as default,\n  chartHelpers,\n  ChartTypeVariant,\n  generateAxisProps,\n  generateDomains,\n  generateElementsProps,\n  generateMaxXY,\n  generateTooltipData,\n  generateXAxisProps,\n  generateYAxisProps\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EyeIcon, EyeSlashIcon, SquareIcon, IconSize } from '@patternfly/react-icons';\n\n/**\n * @memberof Chart\n * @module ChartIcon\n */\n\n/**\n * Emulate pf icon sizing for custom SVGs\n *\n * @param {string} size\n * @returns {string} em measurement\n */\nconst getSize = size => {\n  if (!Number.isNaN(Number.parseFloat(size))) {\n    return size;\n  }\n\n  switch (size) {\n    case 'md':\n      return '1.5em';\n    case 'lg':\n      return '2em';\n    case 'xl':\n      return '3em';\n    case 'sm':\n    default:\n      return '1em';\n  }\n};\n\n/**\n * Render an icon for use outside of Victory charts.\n *\n * @param {object} props\n * @param {string} props.fill\n * @param {string} props.symbol\n * @param {string} props.size\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\nconst ChartIcon = ({ fill, symbol, size, title, ...props }) => {\n  const svgProps = { ...props };\n  const iconProps = { size, title, ...props };\n  const fontProps = { style: { fontSize: getSize(size) }, title, ...props };\n  const emSvgSize = getSize(size);\n\n  if (title) {\n    svgProps['aria-labelledby'] = title;\n  } else {\n    svgProps['aria-hidden'] = true;\n  }\n\n  if (fill) {\n    iconProps.color = fill;\n    fontProps.style.color = fill;\n  }\n\n  const setIcon = () => {\n    switch (symbol) {\n      case 'dash':\n        return (\n          <span\n            style={{\n              width: emSvgSize,\n              height: `${Number.parseFloat(emSvgSize) / 2}em`\n            }}\n          >\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 38 10\" role=\"img\" {...svgProps}>\n              <rect y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"14\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"28\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n            </svg>\n          </span>\n        );\n      case 'threshold':\n        return (\n          <span style={{ width: `${Number.parseFloat(emSvgSize) * 2}em`, height: emSvgSize }}>\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 18 10\" role=\"img\" {...svgProps}>\n              <line\n                x1={0}\n                y1={(Number.parseFloat(emSvgSize) * 16) / 2}\n                x2={Number.parseFloat(emSvgSize) * 16 * 3}\n                y2={(Number.parseFloat(emSvgSize) * 16) / 2}\n                stroke={fill}\n                strokeWidth={3}\n                strokeDasharray=\"4,3\"\n              />\n            </svg>\n          </span>\n        );\n      case 'eye':\n        return <EyeIcon {...iconProps} />;\n      case 'eyeSlash':\n        return <EyeSlashIcon {...iconProps} />;\n      case 'infinity':\n        return (\n          <span className=\"curiosity-icon__f-infinity\" {...fontProps}>\n            <span aria-hidden>&#x221e;</span>\n          </span>\n        );\n\n      case 'square':\n      default:\n        return <SquareIcon {...iconProps} />;\n    }\n  };\n\n  return <span className={`curiosity-chartarea__icon curiosity-chartarea__icon-${symbol}`}>{setIcon()}</span>;\n};\n\n/**\n * Prop types.\n *\n * @type {{symbol: string, size: string, fill: string, title: string}}\n */\nChartIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOf([...Object.keys(IconSize)]),\n  symbol: PropTypes.oneOf(['dash', 'eye', 'eyeSlash', 'infinity', 'square', 'threshold']),\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{symbol: string, size: string, fill: null, title: null}}\n */\nChartIcon.defaultProps = {\n  fill: null,\n  size: 'sm',\n  symbol: 'square',\n  title: null\n};\n\nexport { ChartIcon as default, ChartIcon };\n","import React from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { useChartContext, useToggleData } from './chartContext';\n\n/**\n * @memberof Chart\n * @module ChartLegend\n */\n\n/**\n * Wrapper for rendering an HTML based legend.\n *\n * @returns {React.ReactNode}\n */\nconst ChartLegend = () => {\n  const { getIsToggled, onHide, onRevert, onToggle } = useToggleData();\n  const { chartSettings = {} } = useChartContext();\n  const { chartLegend, dataSets, padding = {}, xAxisProps = {} } = chartSettings;\n\n  if (!chartLegend) {\n    return null;\n  }\n\n  const legendProps = {\n    datum: { dataSets: _cloneDeep(dataSets) },\n    chart: {\n      hide: onHide,\n      revert: onRevert,\n      toggle: onToggle,\n      isToggled: getIsToggled\n    }\n  };\n\n  return (\n    <div\n      className={`curiosity-chartarea__legend${(xAxisProps?.label && '-axis-label-active') || ''}`}\n      style={{\n        marginLeft: (padding?.left && `${padding.left}px`) || 0,\n        marginRight: (padding?.right && `${padding.right}px`) || 0\n      }}\n    >\n      {(React.isValidElement(chartLegend) && React.cloneElement(chartLegend, { ...legendProps })) ||\n        chartLegend({ ...legendProps })}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n */\nChartLegend.propTypes = {};\n\n/**\n * Default props.\n */\nChartLegend.defaultProps = {};\n\nexport { ChartLegend as default, ChartLegend };\n","import React from 'react';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Chart\n * @module ChartTooltip\n */\n\n/**\n * Note: Victory Charts components require a form of extended \"something\" applied by the consuming component.\n * This leads to odd implementations, like returning a function component.\n */\n/**\n * FixMe: The right graph boundary for tooltips is dependent on Voronoi container padding.\n * A limitation exists where Voronoi containers can only have a single padding setting. This means we use\n * the lowest number value from the \"padding\" setting. The repercussion is the right boundary either has to\n * be the lowest padding value, or equal to the lowest padding from any of the other dimensions, ie. top,\n * bottom, left.\n */\n/**\n * Allow, and return, SVG compatible HTML for in graph tooltip.\n *\n * @param {object} params\n * @param {object} params.chartSettings\n * @param {Function} params.chartContainerRef\n * @param {Function} params.chartTooltipRef\n * @param {number} params.minChartWidth\n * @returns {Function}\n */\nconst chartTooltip = ({\n  chartSettings = {},\n  chartContainerRef = helpers.noop,\n  chartTooltipRef = helpers.noop,\n  minChartWidth = 500\n} = {}) => {\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip x coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getXCoordinate = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return x + padding - tooltipWidth / 2;\n    }\n\n    return x > width / 2 ? x - tooltipWidth + padding : x + padding;\n  };\n\n  /**\n   * Return a tooltip y coordinate.\n   *\n   * @param {object} params\n   * @param {number} params.y\n   * @param {number} params.height\n   * @param {number} params.tooltipHeight\n   * @param {number} params.width\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const getYCoordinate = ({ y, height, tooltipHeight, width, padding = 15, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth) {\n      return y > height / 2 ? y - tooltipHeight - padding : y + padding;\n    }\n\n    const updatedMultiplier = height / tooltipHeight / 10;\n    const heightMultiplier = (updatedMultiplier < 0.25 && updatedMultiplier) || 0.25;\n\n    return height * heightMultiplier;\n  };\n\n  // ToDo: evaluate using \"width\" in place of \"minWidth\" for scenarios where the graph size is smaller\n  /**\n   * Return a tooltip tail position CSS class.\n   *\n   * @param {object} params\n   * @param {number} params.x\n   * @param {number} params.width\n   * @param {number} params.tooltipWidth\n   * @param {number} params.padding\n   * @param {number} params.minWidth\n   * @returns {number}\n   */\n  const tailPosition = ({ x, width, tooltipWidth, padding = 0, minWidth = minChartWidth } = {}) => {\n    if (width <= minWidth && x > tooltipWidth / 2 + padding && x < minWidth - tooltipWidth + padding) {\n      return 'middle';\n    }\n\n    return x > width / 2 ? 'right' : 'left';\n  };\n\n  return ({ x, y, datum = {} }) => { // eslint-disable-line\n    const { padding = {}, tooltipDataSetLookUp = {} } = chartSettings;\n\n    const containerRef = chartContainerRef();\n    const tooltipRef = chartTooltipRef();\n    const updatedPadding = { bottom: 0, left: 0, right: 0, top: 0, ...padding };\n    const content = tooltipDataSetLookUp?.[datum.x]?.tooltip || '';\n    const containerBounds = containerRef?.current?.querySelector('svg')?.getBoundingClientRect() || {\n      width: 0,\n      height: 0\n    };\n\n    const tooltipBounds = tooltipRef?.current?.getBoundingClientRect() || { width: 0, height: 0 };\n\n    if (content) {\n      const isOutsideGraphBottom = y > containerBounds.height - updatedPadding.bottom;\n      const isOutsideGraphLeft = x < updatedPadding.left;\n      const isOutsideGraphRight = x > containerBounds.width - updatedPadding.right;\n      const isOutsideGraphTop = y < updatedPadding.top;\n      const updatedClassName = `${(tooltipBounds.height <= 0 && 'fadein') || ''}`;\n\n      return (\n        <g>\n          <foreignObject\n            x={getXCoordinate({ x, width: containerBounds.width, tooltipWidth: tooltipBounds.width })}\n            y={getYCoordinate({\n              y,\n              height: containerBounds.height,\n              tooltipHeight: tooltipBounds.height,\n              width: containerBounds.width\n            })}\n            width=\"100%\"\n            height=\"100%\"\n          >\n            <div\n              className={`curiosity-chartarea__tooltip-container ${updatedClassName}`}\n              ref={tooltipRef}\n              style={{\n                display:\n                  ((isOutsideGraphBottom || isOutsideGraphLeft || isOutsideGraphRight || isOutsideGraphTop) &&\n                    'none') ||\n                  'inline-block'\n              }}\n              xmlns=\"http://www.w3.org/1999/xhtml\"\n            >\n              <div\n                className={`curiosity-chartarea__tooltip curiosity-chartarea__tooltip-${tailPosition({\n                  x,\n                  y,\n                  width: containerBounds.width,\n                  tooltipWidth: tooltipBounds.width\n                })}`}\n              >\n                {content}\n              </div>\n            </div>\n          </foreignObject>\n        </g>\n      );\n    }\n\n    return <g />;\n  };\n};\n\nexport { chartTooltip as default, chartTooltip };\n","import { helpers } from '../../common/helpers';\n\n/**\n * A consistent mock event object to \"help\" PF.\n *\n * @memberof Form\n * @module FormHelpers\n */\n\n/**\n * Create a consistent mock event object modeled on JS behavior.\n *\n * @param {object} event\n * @param {boolean} persistEvent\n * @returns {{keyCode, currentTarget: {}, name, checked: *, id: *, persist: Function, value, target: {}}}\n */\nconst createMockEvent = (event, persistEvent = false) => {\n  const { checked, currentTarget = {}, keyCode, persist = helpers.noop, target = {} } = { ...event };\n  if (persistEvent) {\n    persist();\n  }\n\n  return {\n    checked: checked ?? currentTarget?.checked,\n    currentTarget,\n    keyCode,\n    id: currentTarget.id || currentTarget.name,\n    name: currentTarget.name,\n    persist,\n    value: currentTarget.value,\n    target\n  };\n};\n\n/**\n * Confirm a string has minimum length.\n *\n * @param {string} value\n * @param {number} characters\n * @returns {boolean}\n */\nconst doesNotHaveMinimumCharacters = (value, characters = 1) =>\n  (typeof value === 'string' && value.length < characters) || typeof value !== 'string';\n\nconst formHelpers = {\n  createMockEvent,\n  doesNotHaveMinimumCharacters\n};\n\nexport { formHelpers as default, formHelpers, createMockEvent, doesNotHaveMinimumCharacters };\n","import React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useShallowCompareEffect } from 'react-use';\nimport {\n  ButtonVariant as PfButtonVariant,\n  Dropdown,\n  DropdownDirection,\n  DropdownItem,\n  DropdownPosition,\n  DropdownToggle,\n  DropdownToggleAction,\n  DropdownToggleCheckbox,\n  Select as PfSelect,\n  SelectOption as PfSelectOption,\n  SelectVariant\n} from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _findIndex from 'lodash/findIndex';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _memoize from 'lodash/memoize';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * A bundled wrapper for PF Select, Dropdown.\n *\n * @memberof Form\n * @module Select\n */\n\n/**\n * Dropdown split button variants\n *\n * @type {{action: string, checkbox: string}}\n */\nconst SplitButtonVariant = {\n  action: 'action',\n  checkbox: 'checkbox'\n};\n\n/**\n * Dropdown toggle button variants\n *\n * @type {{secondary: string, default: string, plain: string, text: string, primary: string}}\n */\nconst ButtonVariant = PfButtonVariant;\n\n/**\n * Pass button variant as a select component option.\n *\n * @type {{secondary: string, default: string, plain: string, text: string, primary: string}}\n */\nconst SelectButtonVariant = ButtonVariant;\n\n/**\n * Pass direction as select component variant option.\n *\n * @type {{down: string, up: string}}\n */\nconst SelectDirection = DropdownDirection;\n\n/**\n * Pass position as select component variant option.\n *\n * @type {{left: string, right: string}}\n */\nconst SelectPosition = DropdownPosition;\n\n/**\n * FixMe: attributes on PF select and dropdown components do not allow data- attributes being passed\n * FixMe: PF dropdown, select attempt to break the ref attribute?\n * Moving from a class to func wrapper exposes a PF \"special props warning\", https://bit.ly/2n0hzWo\n */\n/**\n * Format options into a consumable array of objects.\n * Note: It is understood that for line 83'ish around \"updatedOptions\" we dump all values regardless\n * of whether they are plain objects, or not, into updatedOptions. This has been done for speed only,\n * one less check to perform.\n *\n * @param {object} params\n * @param {*|React.ReactNode} params.selectField\n * @param {object|Array} params.options\n * @param {string|number|Array} params.selectedOptions\n * @param {string} params.variant\n * @param {object} params.props\n * @returns {{options: Array|any, selected: Array}}\n */\nconst formatOptions = ({ selectField = { current: null }, options, selectedOptions, variant, ...props } = {}) => {\n  const { current: domElement = {} } = selectField;\n  const dataAttributes = Object.entries(props).filter(([key]) => /^data-/i.test(key));\n  const updatedOptions =\n    (_isPlainObject(options) && Object.entries(options).map(([key, value]) => ({ ...value, title: key, value }))) ||\n    (options && _cloneDeep(options)) ||\n    [];\n  const isSelectedOptionsStringNumber = typeof selectedOptions === 'string' || typeof selectedOptions === 'number';\n  const activateOptions =\n    (Array.isArray(selectedOptions) && selectedOptions) || (isSelectedOptionsStringNumber && [selectedOptions]) || [];\n\n  updatedOptions.forEach((option, index) => {\n    let convertedOption = option;\n\n    if (typeof convertedOption === 'string') {\n      convertedOption = {\n        title: option,\n        value: option\n      };\n\n      updatedOptions[index] = convertedOption;\n    } else if (typeof convertedOption.title === 'function') {\n      convertedOption.title = convertedOption.title();\n    }\n\n    convertedOption.text = convertedOption.text || convertedOption.title;\n    convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n    convertedOption.label = convertedOption.label || convertedOption.title;\n\n    if (activateOptions.length) {\n      let isSelected;\n\n      if (_isPlainObject(convertedOption.value)) {\n        isSelected = _findIndex(activateOptions, convertedOption.value) > -1;\n\n        if (!isSelected) {\n          const tempSearch = activateOptions.find(activeOption =>\n            Object.values(convertedOption.value).includes(activeOption)\n          );\n          isSelected = !!tempSearch;\n        }\n      } else {\n        isSelected = activateOptions.includes(convertedOption.value);\n      }\n\n      if (!isSelected) {\n        isSelected = activateOptions.includes(convertedOption.title);\n      }\n\n      updatedOptions[index].selected = isSelected;\n    }\n  });\n\n  let updateSelected;\n\n  if (variant === SelectVariant.single) {\n    updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n  } else {\n    updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n  }\n\n  if (domElement?.firstChild) {\n    dataAttributes.forEach(([key, value]) => domElement?.firstChild.setAttribute(key, value));\n  }\n\n  return {\n    options: updatedOptions,\n    selected: updateSelected\n  };\n};\n\n/**\n * Return assumed/expected PF select props.\n *\n * @param {object} params\n * @param {boolean} params.isDisabled\n * @param {string} params.placeholder\n * @param {object|Array} params.options\n * @returns {{}}\n */\nconst formatSelectProps = _memoize(({ isDisabled, placeholder, options } = {}) => {\n  const updatedProps = {};\n\n  if (!options || !options.length || isDisabled) {\n    updatedProps.isDisabled = true;\n  }\n\n  if (typeof placeholder === 'string' && placeholder) {\n    updatedProps.hasPlaceholderStyle = true;\n  }\n\n  return updatedProps;\n});\n\n/**\n * Format consistent dropdown button props.\n *\n * @param {object} params\n * @param {boolean} params.isDisabled\n * @param {Array} params.options\n * @param {string} params.buttonVariant\n * @param {Function} params.onSplitButton\n * @param {string} params.splitButtonCopy\n * @param {string} params.splitButtonVariant\n * @returns {*}\n */\nconst formatButtonProps = _memoize(\n  ({ isDisabled, options, buttonVariant, onSplitButton, splitButtonCopy, splitButtonVariant } = {}) => {\n    const buttonVariantPropLookup = {\n      default: { toggleVariant: 'default' },\n      plain: { isPlain: true, toggleIndicator: null },\n      primary: { toggleVariant: 'primary' },\n      secondary: { toggleVariant: 'secondary' },\n      text: { isText: true }\n    };\n\n    const splitButtonVariantPropLookup = {\n      action: {\n        splitButtonVariant: 'action',\n        splitButtonItems: [\n          <DropdownToggleAction onClick={onSplitButton} key=\"toggle-action\">\n            {splitButtonCopy}\n          </DropdownToggleAction>\n        ]\n      },\n      checkbox: {\n        splitButtonVariant: 'checkbox',\n        splitButtonItems: [\n          <DropdownToggleCheckbox\n            id={`toggle-action-${splitButtonCopy}`}\n            key=\"toggle-action\"\n            onClick={onSplitButton}\n            aria-label={splitButtonCopy}\n            placeholder={splitButtonCopy}\n          />\n        ]\n      }\n    };\n\n    const updatedProps = {\n      ...buttonVariantPropLookup[buttonVariant],\n      ...splitButtonVariantPropLookup[splitButtonVariant]\n    };\n\n    if (!options || !options.length || isDisabled) {\n      updatedProps.isDisabled = true;\n    }\n\n    return updatedProps;\n  }\n);\n\n/**\n * FixMe: PF has an inconsistency in how it applies props for the dropdown\n * Sometimes those props are on the toggle, sometimes those props are on the parent, little bit of guesswork.\n * Additionally, it's not filtering props so you'll throw the \"[HTML doesn't recognize attribute]\" error.\n */\n/**\n * Fix pf props inconsistency for dropdown button props.\n *\n * @param {object} formattedButtonProps\n * @returns {*}\n */\nconst formatButtonParentProps = (formattedButtonProps = {}) => {\n  const updatedButtonProps = formatButtonProps(formattedButtonProps);\n  delete updatedButtonProps.isDisabled;\n  delete updatedButtonProps.toggleIndicator;\n\n  return updatedButtonProps;\n};\n\n/**\n * A wrapper for Pf Select, and emulator for Pf Dropdown. Provides consistent restructured event data for onSelect callback\n * for both select and dropdown.\n *\n * @fires onDropdownSelect\n * @fires onSplitButton\n * @fires onToggle\n * @param {object} props\n * @param {string} props.ariaLabel\n * @param {string} props.buttonVariant\n * @param {string} props.className\n * @param {string} props.direction\n * @param {string} props.id\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isDropdownButton\n * @param {boolean} props.isFlipEnabled\n * @param {boolean} props.isInline\n * @param {boolean} props.isToggleText\n * @param {number} props.maxHeight\n * @param {string} props.name\n * @param {Function} props.onSelect\n * @param {Function} props.onSplitButton\n * @param {object|Array} props.options\n * @param {string} props.placeholder\n * @param {string} props.position\n * @param {number|string|Array} props.selectedOptions\n * @param {string} props.splitButtonVariant\n * @param {React.ReactNode|Function} props.toggleIcon\n * @param {string} props.variant\n * @param {object} props.props\n * @returns {React.ReactNode}\n */\nconst Select = ({\n  ariaLabel,\n  buttonVariant,\n  className,\n  direction,\n  id,\n  isDisabled,\n  isDropdownButton,\n  isFlipEnabled,\n  isInline,\n  isToggleText,\n  maxHeight,\n  name,\n  onSelect,\n  onSplitButton,\n  options: baseOptions,\n  placeholder,\n  position,\n  selectedOptions,\n  splitButtonVariant,\n  toggleIcon,\n  variant,\n  ...props\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n  const [options, setOptions] = useState(baseOptions);\n  const [selected, setSelected] = useState([]);\n  const selectField = useRef();\n\n  useShallowCompareEffect(() => {\n    const { options: updatedOptions, selected: updatedSelected } = formatOptions({\n      selectField,\n      options: baseOptions,\n      selectedOptions,\n      variant,\n      ...props\n    });\n\n    setOptions(updatedOptions);\n    setSelected(updatedSelected);\n  }, [baseOptions, props, selectField, selectedOptions, variant]);\n\n  /**\n   * Open/closed state.\n   *\n   * @event onToggle\n   * @param {boolean} expanded\n   */\n  const onToggle = expanded => {\n    setIsExpanded(expanded);\n  };\n\n  /**\n   * Split button event handler.\n   *\n   * @event onSplitButton\n   * @param {object} event\n   */\n  const onUpdatedSplitButton = event => {\n    const updatedOptions = _cloneDeep(options);\n    onSplitButton({ ...createMockEvent(event), options: updatedOptions }, -1, updatedOptions);\n  };\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onDropdownSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  const onDropdownSelect = (event, titleSelection) => {\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(\n      option =>\n        (titleSelection && option.title === titleSelection) ||\n        event.currentTarget.querySelector('[data-title]')?.getAttribute('data-title') === option.title ||\n        event.currentTarget.innerText === option.title\n    );\n\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n    const mockTarget = {\n      id,\n      name: name || id,\n      value: mockUpdatedOptions[optionsIndex].value,\n      selected: (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n      selectedIndex: optionsIndex,\n      type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n      options: mockUpdatedOptions\n    };\n\n    if (variant === SelectVariant.checkbox) {\n      mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n    }\n\n    const mockEvent = {\n      ...mockTarget,\n      target: { ...mockTarget },\n      currentTarget: { ...mockTarget },\n      persist: helpers.noop\n    };\n\n    setOptions(updatedOptions);\n    setSelected(updateSelected);\n\n    onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n    if (variant === SelectVariant.single) {\n      setIsExpanded(false);\n    }\n  };\n\n  /**\n   * Apply dropdown.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderDropdownButton = () => (\n    <Dropdown\n      direction={direction}\n      isFlipEnabled={isFlipEnabled}\n      isOpen={isExpanded}\n      position={position}\n      toggle={\n        <DropdownToggle\n          onToggle={onToggle}\n          {...formatButtonProps({\n            isDisabled,\n            onSplitButton: onUpdatedSplitButton,\n            options,\n            buttonVariant,\n            splitButtonCopy: placeholder || ariaLabel,\n            splitButtonVariant\n          })}\n        >\n          {(!splitButtonVariant && placeholder) || (!SplitButtonVariant && ariaLabel)}\n        </DropdownToggle>\n      }\n      dropdownItems={\n        options?.map(option => (\n          <DropdownItem\n            onClick={onDropdownSelect}\n            key={window.btoa(`${option.title}-${option.value}`)}\n            id={window.btoa(`${option.title}-${option.value}`)}\n            data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n            data-title={option.title}\n            data-description={option.description}\n            description={option.description}\n          >\n            {option.title}\n          </DropdownItem>\n        )) || []\n      }\n      {...formatButtonParentProps({ buttonVariant })}\n      {...props}\n    />\n  );\n\n  /**\n   * Apply select.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderSelect = () => (\n    <PfSelect\n      className={`curiosity-select-pf${(!isToggleText && '__no-toggle-text') || ''} ${\n        (direction === SelectDirection.down && 'curiosity-select-pf__position-down') || ''\n      } ${(position === SelectPosition.right && 'curiosity-select-pf__position-right') || ''} ${className}`}\n      variant={variant}\n      aria-label={ariaLabel}\n      onToggle={onToggle}\n      onSelect={onDropdownSelect}\n      selections={selected}\n      isFlipEnabled={isFlipEnabled}\n      isOpen={isExpanded}\n      toggleIcon={toggleIcon}\n      placeholderText={(typeof placeholder === 'string' && placeholder) || undefined}\n      {...{\n        direction,\n        maxHeight,\n        ...formatSelectProps({\n          isDisabled,\n          options: baseOptions,\n          placeholder\n        })\n      }}\n      {...props}\n    >\n      {options?.map(option => (\n        <PfSelectOption\n          key={window.btoa(`${option.title}-${option.value}`)}\n          id={window.btoa(`${option.title}-${option.value}`)}\n          value={option.title}\n          data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n          data-title={option.title}\n          data-description={option.description}\n        />\n      )) || []}\n    </PfSelect>\n  );\n\n  return (\n    <div\n      ref={selectField}\n      className={`curiosity-select${(isInline && ' curiosity-select__inline') || ' curiosity-select__not-inline'}`}\n    >\n      {(isDropdownButton && renderDropdownButton()) || renderSelect()}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{isFlipEnabled: boolean, toggleIcon: (React.ReactNode|Function), className: string, onSplitButton: Function, ariaLabel: string,\n *     onSelect: Function, isToggleText: boolean, isDropdownButton: boolean, maxHeight: number, buttonVariant: string, name: string,\n *     options: Array|object, selectedOptions: Array|number|string, variant: string, isInline: boolean, id: string, isDisabled: boolean,\n *     placeholder: string, position: string, splitButtonVariant: string, direction: string}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  buttonVariant: PropTypes.oneOf(Object.values(ButtonVariant)),\n  className: PropTypes.string,\n  direction: PropTypes.oneOf(Object.values(SelectDirection)),\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isDropdownButton: PropTypes.bool,\n  isFlipEnabled: PropTypes.bool,\n  isInline: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  maxHeight: PropTypes.number,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  onSplitButton: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        description: PropTypes.any,\n        selected: PropTypes.bool,\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired\n      })\n    ),\n    PropTypes.shape({\n      description: PropTypes.any,\n      selected: PropTypes.bool,\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.any]),\n  position: PropTypes.oneOf(Object.values(SelectPosition)),\n  selectedOptions: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]))\n  ]),\n  splitButtonVariant: PropTypes.oneOf(Object.values(SplitButtonVariant)),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{isFlipEnabled: boolean, toggleIcon: null, className: string, onSplitButton: Function, ariaLabel: string, onSelect: Function,\n *     isToggleText: boolean, isDropdownButton: boolean, maxHeight: null, buttonVariant: string, name: null, options: Array,\n *     selectedOptions: null, variant: SelectVariant.single, isInline: boolean, id: string, isDisabled: boolean, placeholder: string,\n *     position: string, splitButtonVariant: null, direction: string}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  buttonVariant: ButtonVariant.default,\n  className: '',\n  direction: SelectDirection.down,\n  id: helpers.generateId(),\n  isDisabled: false,\n  isDropdownButton: false,\n  isFlipEnabled: false,\n  isInline: true,\n  isToggleText: true,\n  maxHeight: null,\n  name: null,\n  onSelect: helpers.noop,\n  onSplitButton: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  position: SelectPosition.left,\n  selectedOptions: null,\n  splitButtonVariant: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport {\n  Select as default,\n  Select,\n  ButtonVariant,\n  formatOptions,\n  formatButtonProps,\n  formatSelectProps,\n  SelectDirection,\n  SelectPosition,\n  SelectVariant,\n  SelectButtonVariant,\n  SplitButtonVariant\n};\n","import moment from 'moment';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { ChartTypeVariant } from '../chart/chart';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * @memberof GraphCard\n * @module GraphCardHelpers\n */\n\n/**\n * Generate a consistent chart identifier from API.\n *\n * @param {object} params\n * @param {boolean} params.isCapacity\n * @param {string} params.metric\n * @param {string} params.productId\n * @param {object} params.query\n * @returns {string}\n */\nconst generateChartIds = ({ isCapacity, metric, productId, query = {} } = {}) => {\n  const metricCategory = query?.[RHSM_API_QUERY_SET_TYPES.CATEGORY] || undefined;\n  return `${(isCapacity && 'threshold_') || ''}${metric}${(metricCategory && `_${metricCategory}`) || ''}${\n    (productId && `_${productId}`) || ''\n  }`;\n};\n\n/**\n * Is metric associated with a toolbar filter\n *\n * @param {object} params\n * @param {object} params.query\n * @returns {boolean}\n */\nconst generateIsToolbarFilter = ({ query = {} } = {}) => (query?.[RHSM_API_QUERY_SET_TYPES.CATEGORY] && true) || false;\n\n/**\n * ToDo: clean up remaining isStandalone, metric props.\n * These two properties were used to distinguish the previous product config graph card\n * layouts.\n * - isStandalone: undefined,\n * - metric: undefined,\n */\n/**\n * Update chart/graph filters with core settings and styling.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.settings\n * @param {string} params.productId\n * @returns {{standaloneFilters: Array, groupedFilters: object}}\n */\nconst generateChartSettings = ({ filters = [], settings: graphCardSettings = {}, productId } = {}) => {\n  const filtersSettings = [];\n  const filter = ({ metric, settings: combinedSettings, ...filterSettings } = {}) => {\n    if (!metric) {\n      return;\n    }\n    const { isMultiMetric, isFirst, isLast, ...remainingCombinedSettings } = combinedSettings;\n    const updatedChartType = filterSettings?.chartType || ChartTypeVariant.area;\n    const isThreshold = filterSettings?.chartType === ChartTypeVariant.threshold;\n    const baseFilterSettings = {\n      chartType: updatedChartType,\n      id: generateChartIds({ isCapacity: isThreshold, metric, productId, query: filterSettings?.query }),\n      isStacked: !isThreshold,\n      isThreshold,\n      isCapacity: isThreshold,\n      metric,\n      strokeWidth: 2,\n      isToolbarFilter: generateIsToolbarFilter({ query: filterSettings?.query })\n    };\n\n    if (isThreshold) {\n      baseFilterSettings.stroke = chartColorGreenDark.value;\n      baseFilterSettings.strokeDasharray = '4,3';\n      baseFilterSettings.strokeWidth = 3;\n    }\n\n    if (isFirst) {\n      filtersSettings.push({\n        settings: {\n          padding: {\n            bottom: 75,\n            left: 75,\n            right: 45,\n            top: 45\n          },\n          ...remainingCombinedSettings,\n          isMetricDisplay: remainingCombinedSettings?.isMetricDisplay ?? remainingCombinedSettings?.cards?.length > 0,\n          isMultiMetric,\n          isStandalone: undefined,\n          metric: undefined,\n          groupMetric: new Set([metric]),\n          metrics: [\n            {\n              ...baseFilterSettings,\n              ...filterSettings\n            }\n          ],\n          stringId: (isMultiMetric && productId) || baseFilterSettings.id\n        }\n      });\n    } else {\n      const currentLastFiltersSettingsEntry = filtersSettings?.[filtersSettings.length - 1]?.settings;\n\n      if (currentLastFiltersSettingsEntry) {\n        currentLastFiltersSettingsEntry.groupMetric.add(metric);\n        currentLastFiltersSettingsEntry.metrics.push({\n          ...baseFilterSettings,\n          ...filterSettings\n        });\n      }\n    }\n\n    if (isLast) {\n      const lastFiltersSettingsEntry = filtersSettings?.[filtersSettings.length - 1]?.settings;\n      lastFiltersSettingsEntry.groupMetric = Array.from(lastFiltersSettingsEntry?.groupMetric).sort();\n    }\n  };\n\n  filters.forEach(({ filters: groupedMetrics, settings: groupedMetricsSettings, ...remainingSettings }) => {\n    if (Array.isArray(groupedMetrics)) {\n      groupedMetrics.forEach((metricFilter, index) => {\n        filter({\n          ...remainingSettings,\n          ...metricFilter,\n          settings: {\n            ...graphCardSettings,\n            ...remainingSettings,\n            ...groupedMetricsSettings,\n            ...metricFilter,\n            isFirst: index === 0,\n            isLast: groupedMetrics.length - 1 === index,\n            isMultiMetric: groupedMetrics.length > 1\n          }\n        });\n      });\n      return;\n    }\n\n    filter({\n      ...remainingSettings,\n      settings: {\n        ...graphCardSettings,\n        ...remainingSettings,\n        isFirst: true,\n        isLast: true,\n        isMultiMetric: false\n      }\n    });\n  });\n\n  return {\n    filtersSettings\n  };\n};\n\n/**\n * Returns x-axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity } = {}) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x-axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ callback, date, granularity, tick, previousDate } = {}) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  if (callback) {\n    return callback({ callback, date, granularity, tick, previousDate });\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y-axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ callback, tick } = {}) => {\n  if (callback) {\n    return callback({ tick });\n  }\n\n  return helpers\n    .numberDisplay(tick)\n    ?.format({\n      average: true,\n      mantissa: 1,\n      trimMantissa: true,\n      lowPrecision: false\n    })\n    ?.toUpperCase();\n};\n\n/**\n * Generate base chart component props.\n *\n * @param {object} params\n * @param {object} params.settings\n * @param {string} params.granularity\n * @returns {object}\n */\nconst generateExtendedChartSettings = ({ settings, granularity } = {}) => ({\n  ...settings,\n  xAxisLabelIncrement: getChartXAxisLabelIncrement(granularity),\n  xAxisTickFormat: ({ item, previousItem, tick }) =>\n    xAxisTickFormat({\n      callback: settings?.xAxisTickFormat,\n      tick,\n      date: item.date,\n      previousDate: previousItem.date,\n      granularity\n    }),\n  yAxisTickFormat: ({ tick }) =>\n    yAxisTickFormat({\n      callback: settings?.yAxisTickFormat,\n      tick\n    })\n});\n\nconst graphCardHelpers = {\n  generateChartIds,\n  generateChartSettings,\n  generateExtendedChartSettings,\n  generateIsToolbarFilter,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  generateChartIds,\n  generateChartSettings,\n  generateExtendedChartSettings,\n  generateIsToolbarFilter,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\nimport { useMount } from 'react-use';\nimport { helpers } from '../../common/helpers';\nimport { EMPTY_CONTEXT, translate, translateComponent } from './i18nHelpers';\n\n/**\n * Populate, load, remote locale strings.\n *\n * @memberof Components\n * @module i18n\n * @property {module} i18nHelpers\n */\n\n/**\n * Load I18n.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.fallbackLng\n * @param {string} props.loadPath\n * @param {string} props.locale\n * @returns {React.ReactNode}\n */\nconst I18n = ({ children, fallbackLng, loadPath, locale }) => {\n  const [initialized, setInitialized] = useState(false);\n\n  /**\n   * Initialize i18next\n   */\n  useMount(async () => {\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: undefined,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      //\n    }\n\n    setInitialized(true);\n  });\n\n  /**\n   * Update locale.\n   */\n  useEffect(() => {\n    if (initialized && locale) {\n      try {\n        i18next.changeLanguage(locale);\n      } catch (e) {\n        //\n      }\n    }\n  }, [initialized, locale]);\n\n  return (initialized && children) || <React.Fragment />;\n};\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: React.ReactNode, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent, EMPTY_CONTEXT };\n","import React from 'react';\nimport i18next from 'i18next';\nimport { Trans } from 'react-i18next';\nimport { helpers } from '../../common/helpers';\n\n/**\n * @memberof i18n\n * @module i18nHelpers\n */\n\n/**\n * Check to help provide an empty context.\n *\n * @type {string}\n */\nconst EMPTY_CONTEXT = 'LOCALE_EMPTY_CONTEXT';\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string|Array} key\n * @param {string|object|Array} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) => {\n  const updatedKey = (Array.isArray(key) && `[${key}]`) || key;\n  const updatedValue =\n    (typeof value === 'string' && value) ||\n    (Array.isArray(value) && `[${value}]`) ||\n    (Object.keys(value || '').length && JSON.stringify(value)) ||\n    '';\n  const updatedComponents = (components && `${components}`) || '';\n\n  return `t(${updatedKey}${(updatedValue && `, ${updatedValue}`) || ''}${\n    (updatedComponents && `, ${updatedComponents}`) || ''\n  })`;\n};\n\n/**\n * Split a string on underscore.\n *\n * @param {string} value\n * @param {object} settings\n * @param {string} settings.emptyContextValue\n * @returns {string|string[]}\n */\nconst splitContext = (value, { emptyContextValue = EMPTY_CONTEXT } = {}) => {\n  if (typeof value === 'string' && value !== emptyContextValue && /_/.test(value)) {\n    return value.split('_');\n  }\n  return value;\n};\n\n/**\n * Parse extend context arrays/lists, and apply values to a concatenated translate key.\n *\n * @param {string|Array} translateKey\n * @param {*|string|Array} context\n * @param {object} settings\n * @param {string} settings.emptyContextValue\n * @param {Function} settings.splitContext\n * @returns {{translateKey: string, context: (string|string[])}}\n */\nconst parseContext = (\n  translateKey,\n  context,\n  { emptyContextValue = EMPTY_CONTEXT, splitContext: aliasSplitContext = splitContext } = {}\n) => {\n  let updatedTranslateKey = translateKey;\n  let updatedContext = context;\n\n  if (updatedContext) {\n    updatedContext = aliasSplitContext(updatedContext);\n  }\n\n  if (Array.isArray(updatedContext)) {\n    const tempContext = updatedContext\n      .map(value => (value === emptyContextValue && ' ') || aliasSplitContext(value))\n      .flat()\n      .filter(value => typeof value === 'string' && value.length > 0);\n\n    if (tempContext?.length > 1) {\n      const lastContext = tempContext.pop();\n\n      if (Array.isArray(updatedTranslateKey)) {\n        updatedTranslateKey[0] = `${updatedTranslateKey[0]}_${tempContext.join('_')}`;\n      } else {\n        updatedTranslateKey = `${updatedTranslateKey}_${tempContext.join('_')}`;\n      }\n\n      updatedContext = lastContext;\n    } else {\n      updatedContext = tempContext.join('_');\n    }\n  } else if (updatedContext === emptyContextValue) {\n    updatedContext = ' ';\n  }\n\n  return {\n    context: updatedContext,\n    translateKey: updatedTranslateKey\n  };\n};\n\n/**\n * Parse a translation key. If an array, filter for defined strings.\n *\n * @param {*|string|Array} translateKey\n * @returns {*}\n */\nconst parseTranslateKey = translateKey => {\n  let updatedTranslateKey = translateKey;\n\n  if (Array.isArray(updatedTranslateKey)) {\n    updatedTranslateKey = updatedTranslateKey.filter(value => typeof value === 'string' && value.length > 0);\n  }\n\n  return updatedTranslateKey;\n};\n\n/**\n * Return a test element wrapper;\n *\n * @param {object} params\n * @param {string|Array} params.defaultTestId\n * @param {string} params.testId\n * @returns {null|React.ReactNode}\n */\nconst setI18nTestElement = ({ defaultTestId, testId }) => {\n  if (typeof testId === 'boolean' && defaultTestId) {\n    const updatedDataTest = (Array.isArray(defaultTestId) && defaultTestId[0]) || defaultTestId;\n    // eslint-disable-next-line\n    return function TestElementBool({ children }) {\n      return (\n        <span key={updatedDataTest} className=\"curiosity-translate__test-id\" data-test={updatedDataTest}>\n          {children}\n        </span>\n      );\n    };\n  }\n\n  if (typeof testId === 'string' && testId.length > 0) {\n    // eslint-disable-next-line\n    return function TestElementString({ children }) {\n      return (\n        <span key={testId} className=\"curiosity-translate__test-id\" data-test={testId}>\n          {children}\n        </span>\n      );\n    };\n  }\n\n  if (React.isValidElement(testId)) {\n    // eslint-disable-next-line\n    return function TestElementNode({ children }) {\n      return React.cloneElement(testId, {}, children);\n    };\n  }\n\n  return null;\n};\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string|Array} translateKey A key reference, or an array of a primary key with fallback keys.\n * @param {string|object|Array} values\n *     - A default string if the key can't be found.\n *     - An object with i18next settings. i.e. \"{ context: Array|string, testId: boolean|string|React.ReactNode }\"\n *     - An array of objects (key/value) pairs used to replace string tokens. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @param {object} settings\n * @param {*} settings.i18next\n * @param {Function} settings.isDebug\n * @param {Function} settings.noopTranslate\n * @param {Function} settings.parseContext\n * @param {Function} settings.parseTranslateKey\n * @returns {string|React.ReactNode}\n */\nconst translate = (\n  translateKey,\n  values = null,\n  components,\n  {\n    i18next: aliasI18next = i18next,\n    isDebug = helpers.TEST_MODE,\n    noopTranslate: aliasNoopTranslate = noopTranslate,\n    parseContext: aliasParseContext = parseContext,\n    parseTranslateKey: aliasParseTranslateKey = parseTranslateKey\n  } = {}\n) => {\n  const updatedValues = values || {};\n  const baseUpdatedTranslateKey = aliasParseTranslateKey(translateKey);\n  let updatedTranslateKey = baseUpdatedTranslateKey;\n  let TestElement;\n\n  if (updatedValues?.context) {\n    const { context: parsedContext, translateKey: parsedAgainTranslateKey } = aliasParseContext(\n      updatedTranslateKey,\n      updatedValues.context\n    );\n    updatedTranslateKey = parsedAgainTranslateKey;\n    updatedValues.context = parsedContext;\n  }\n\n  if (isDebug) {\n    return aliasNoopTranslate(updatedTranslateKey, updatedValues, components);\n  }\n\n  if (updatedValues?.testId) {\n    TestElement = setI18nTestElement({ defaultTestId: baseUpdatedTranslateKey, testId: updatedValues.testId });\n  }\n\n  if (components && aliasI18next.store) {\n    if (TestElement) {\n      return (\n        <TestElement>\n          <Trans i18nKey={updatedTranslateKey} values={updatedValues} components={components} />\n        </TestElement>\n      );\n    }\n\n    return <Trans i18nKey={updatedTranslateKey} values={updatedValues} components={components} />;\n  }\n\n  if (aliasI18next.store) {\n    if (TestElement) {\n      return <TestElement>{aliasI18next.t(updatedTranslateKey, updatedValues)}</TestElement>;\n    }\n\n    return aliasI18next.t(updatedTranslateKey, updatedValues);\n  }\n\n  return `t([${updatedTranslateKey}])`;\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {React.ReactNode} Component\n * @param {object} settings\n * @param {*} settings.i18next\n * @param {Function} settings.noopTranslate\n * @returns {React.ReactNode}\n */\nconst translateComponent = (\n  Component,\n  { i18next: aliasI18next = i18next, noopTranslate: aliasNoopTranslate = noopTranslate } = {}\n) => {\n  const withTranslation = ({ ...props }) => (\n    <Component\n      {...props}\n      t={(aliasI18next.store && translate) || aliasNoopTranslate}\n      i18n={(aliasI18next.store && aliasI18next) || helpers.noop}\n    />\n  );\n\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\nconst i18nHelpers = {\n  EMPTY_CONTEXT,\n  noopTranslate,\n  parseContext,\n  parseTranslateKey,\n  splitContext,\n  translate,\n  translateComponent\n};\n\nexport {\n  i18nHelpers as default,\n  i18nHelpers,\n  EMPTY_CONTEXT,\n  noopTranslate,\n  parseContext,\n  parseTranslateKey,\n  splitContext,\n  translate,\n  translateComponent\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Loading display for charts, copy, tables, etc.\n *\n * @memberof Components\n * @module Loader\n */\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    colWidth: PropTypes.array,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader, SkeletonSize };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * Page empty state message display.\n *\n * @memberof Components\n * @module MessageView\n */\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view, page empty state.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.ReactNode|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, icon: React.ReactNode|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Brand,\n  Button,\n  Card,\n  CardHeaderMain,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Flex,\n  FlexItem,\n  Form,\n  ActionGroup,\n  Spinner,\n  Title\n} from '@patternfly/react-core';\nimport { useSession } from '../authentication/authenticationContext';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { PageLayout } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport graphPng2x from '../../images/graph2x.png';\nimport graphPng4x from '../../images/graph4x.png';\n\n/**\n * Opt-in view\n *\n * @memberof Components\n * @module OptinView\n */\n\n/**\n * An account opt-in view.\n *\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.updateAccountOptIn\n * @param {Function} props.useDispatch\n * @param {Function} props.useSelectorsResponse\n * @param {Function} props.useSession\n * @fires onSubmitOptIn\n * @returns {React.ReactNode}\n */\nconst OptinView = ({\n  t,\n  updateAccountOptIn,\n  useDispatch: useAliasDispatch,\n  useSelectorsResponse: useAliasSelectorsResponse,\n  useSession: useAliasSession\n}) => {\n  const dispatch = useAliasDispatch();\n  const { errorStatus } = useAliasSession();\n  const { error, fulfilled, pending } = useAliasSelectorsResponse(({ user }) => user?.optin);\n\n  /**\n   * Submit and update account opt-in.\n   *\n   * @event onSubmitOptIn\n   * @returns {void}\n   */\n  const onSubmitOptIn = () => updateAccountOptIn()(dispatch);\n\n  /**\n   * Render opt-in form states.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderOptinForm = () => {\n    const disableButton = errorStatus !== 403;\n\n    if (pending) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              <Spinner size=\"sm\" /> {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n        </Form>\n      );\n    }\n\n    if (error) {\n      return (\n        <p>\n          {t('curiosity-optin.cardIsErrorDescription', { appName: helpers.UI_DISPLAY_NAME }, [\n            <Button isInline component=\"a\" variant=\"link\" target=\"_blank\" href={helpers.UI_LINK_CONTACT_US} />\n          ])}\n        </p>\n      );\n    }\n\n    if (disableButton || fulfilled) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button data-test=\"optinButtonSubmitDisabled\" variant=\"primary\" isDisabled>\n              {t('curiosity-optin.buttonIsActive', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n          {fulfilled && <p>{t('curiosity-optin.cardIsActiveDescription')}</p>}\n        </Form>\n      );\n    }\n\n    return (\n      <Form>\n        <ActionGroup>\n          <Button data-test=\"optinButtonSubmit\" variant=\"primary\" onClick={onSubmitOptIn}>\n            {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n          </Button>\n        </ActionGroup>\n      </Form>\n    );\n  };\n\n  /**\n   * Render tour copy and button.\n   *\n   * @returns {React.ReactNode}\n   */\n  const renderTour = () => (\n    <Card className=\"curiosity-optin-tour\">\n      <CardHeader>\n        <CardHeaderMain>\n          <Brand\n            srcSet={`${graphPng4x} 1064w, ${graphPng2x} 600w`}\n            src={graphPng4x}\n            alt={t('curiosity-optin.tourTitleImageAlt')}\n            aria-hidden\n            className=\"curiosity-optin-image\"\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <CardTitle>\n        <Title headingLevel=\"h3\" size=\"2xl\">\n          {t('curiosity-optin.tourTitle')}\n        </Title>\n      </CardTitle>\n      <CardBody>{t('curiosity-optin.tourDescription')}</CardBody>\n      <CardFooter>\n        <Button data-test=\"optinButtonTour\" variant=\"secondary\" className=\"uxui-curiosity__button-tour\">\n          {t('curiosity-optin.buttonTour')}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n\n  return (\n    <PageLayout>\n      <Card data-test=\"optinView\">\n        <Flex>\n          <Flex flex={{ default: 'flex_2' }}>\n            <FlexItem>\n              <CardTitle key=\"heading1Title\">\n                <Title headingLevel=\"h1\" size=\"2xl\">\n                  {t('curiosity-optin.cardTitle', { appName: helpers.UI_DISPLAY_NAME })}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading1Desc\">\n                {t('curiosity-optin.cardDescription', { appName: helpers.UI_DISPLAY_NAME })}\n              </CardBody>\n\n              <CardTitle key=\"heading2Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardSeeTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading2Desc\">{t('curiosity-optin.cardSeeDescription')}</CardBody>\n\n              <CardTitle key=\"heading3Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardReportTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading3Desc\">{t('curiosity-optin.cardReportDescription')}</CardBody>\n\n              <CardTitle key=\"heading4Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardFilterTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading4Desc\">{t('curiosity-optin.cardFilterDescription')}</CardBody>\n\n              <CardFooter>{renderOptinForm()}</CardFooter>\n            </FlexItem>\n          </Flex>\n          <Flex flex={{ default: 'flex_1' }} alignSelf={{ default: 'alignSelfCenter' }}>\n            <FlexItem>\n              <CardBody>{renderTour()}</CardBody>\n            </FlexItem>\n          </Flex>\n        </Flex>\n      </Card>\n    </PageLayout>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useSession: Function, t: Function, updateAccountOptIn: Function, useDispatch: Function, useSelectorsResponse: Function}}\n */\nOptinView.propTypes = {\n  t: PropTypes.func,\n  updateAccountOptIn: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelectorsResponse: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useSession: Function, t: Function, updateAccountOptIn: Function, useDispatch: Function, useSelectorsResponse: Function}}\n */\nOptinView.defaultProps = {\n  t: translate,\n  updateAccountOptIn: reduxActions.user.updateAccountOptIn,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelectorsResponse: storeHooks.reactRedux.useSelectorsResponse,\n  useSession\n};\n\nexport { OptinView as default, OptinView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { helpers } from '../../common';\n\n/**\n * @memberof PageLayout\n * @module PageColumns\n */\n\n/**\n * Render page columns based on children.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageColumns = ({ children, className }) => (\n  <Flex\n    alignItems={{ sm: 'alignItemsStretch' }}\n    spaceItems={{ sm: 'spaceItemsNone' }}\n    className={`curiosity-page-columns ${className}`}\n  >\n    {React.Children.toArray(children)\n      .filter(child => React.isValidElement(child))\n      .map(child => (\n        <FlexItem\n          key={(child.key && `page-column-${child.key}`) || helpers.generateId()}\n          grow={{ sm: 'grow' }}\n          className=\"curiosity-page-columns-column\"\n        >\n          {child}\n        </FlexItem>\n      ))}\n  </Flex>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageColumns.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageColumns.defaultProps = {\n  children: [],\n  className: ''\n};\n\nexport { PageColumns as default, PageColumns };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader as RcsPageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * @memberof PageLayout\n * @module PageHeader\n */\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {React.ReactNode}\n */\nconst PageHeader = ({ children, productLabel, t }) => (\n  <RcsPageHeader>\n    <Flex justifyContent={{ sm: 'justifyContentSpaceBetween' }}>\n      <FlexItem>\n        <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n      </FlexItem>\n    </Flex>\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, productLabel: string, t: Function}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{includeTour: boolean, productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageColumns } from './pageColumns';\nimport { PageMessages } from './pageMessages';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * Page layout, organize header, columns, messages, sections, and toolbar.\n *\n * @memberof Components\n * @module PageLayout\n * @property {module} PageColumns\n * @property {module} PageHeader\n * @property {module} PageMessages\n * @property {module} PageSection\n * @property {module} PageToolbar\n */\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageLayout = ({ children, className }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageMessages)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className={`curiosity ${className}`}>\n      {React.Children.toArray(children).filter(\n        child => child.type !== PageHeader && child.type !== PageMessages && child.type !== PageToolbar\n      )}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageLayout.defaultProps = {\n  className: ''\n};\n\nexport { PageLayout as default, PageLayout, PageColumns, PageHeader, PageMessages, PageSection, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * @memberof PageLayout\n * @module PageMessages\n */\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageMessages = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-messages ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageMessages.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageMessages.defaultProps = {\n  className: ''\n};\n\nexport { PageMessages as default, PageMessages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * @memberof PageLayout\n * @module PageSection\n */\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageSection = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-section ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageSection.defaultProps = {\n  className: ''\n};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * @memberof PageLayout\n * @module PageToolbar\n */\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.className\n * @returns {React.ReactNode}\n */\nconst PageToolbar = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-toolbar ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageToolbar.defaultProps = {\n  className: ''\n};\n\nexport { PageToolbar as default, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Navigate, Routes, Route } from 'react-router-dom';\nimport { useSetRouteDetail } from './routerContext';\nimport { routerHelpers } from './routerHelpers';\nimport { Loader } from '../loader/loader';\n\n/**\n * Route component loader.\n *\n * @memberof Components\n * @module Router\n * @property {module} RouterContext\n * @property {module} RouterHelpers\n */\n\n/**\n * Create and load routes. Start cycle for loading product configuration via hook by setting route details.\n *\n * @param {object} props\n * @param {object} props.redirectRoute\n * @param {Array} props.routes\n * @param {Function} props.useSetRouteDetail\n * @returns {React.ReactNode}\n */\nconst Router = ({ redirectRoute, routes, useSetRouteDetail: useAliasSetRouteDetail } = {}) => {\n  useAliasSetRouteDetail();\n\n  const updatedRoutes = routes.map(item => {\n    const View = routerHelpers.importView(item.component);\n    return <Route key={item.path} path={item.path} element={<View />} />;\n  });\n\n  return (\n    <React.Suspense fallback={<Loader variant=\"title\" />}>\n      <Routes>\n        {updatedRoutes}\n        {redirectRoute?.path && redirectRoute?.redirect && (\n          <Route key=\"redirect\" path={redirectRoute.path} element={<Navigate replace to={redirectRoute.redirect} />} />\n        )}\n      </Routes>\n    </React.Suspense>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{routes: Array<{component: string, path: string}>, redirectRoute: { path: string, redirect: string },\n *     useSetRouteDetail: Function}}\n */\nRouter.propTypes = {\n  redirectRoute: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    redirect: PropTypes.string.isRequired\n  }),\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      component: PropTypes.string.isRequired,\n      disabled: PropTypes.bool,\n      path: PropTypes.string.isRequired\n    })\n  ),\n  useSetRouteDetail: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array, redirectRoute: object, useSetRouteDetail: Function}}\n */\nRouter.defaultProps = {\n  redirectRoute: routerHelpers.redirectRoute,\n  routes: routerHelpers.routes,\n  useSetRouteDetail\n};\n\nexport { Router as default, Router };\n","import { useCallback, useEffect, useState } from 'react';\nimport {\n  useLocation as useLocationRRD,\n  useNavigate as useRRDNavigate,\n  useSearchParams as useRRDSearchParams\n} from 'react-router-dom';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common/helpers';\nimport { storeHooks, reduxTypes } from '../../redux';\nimport { translate } from '../i18n/i18n';\n\n/**\n * @memberof Router\n * @module RouterContext\n */\n\n/**\n * Combine react-router-dom useLocation with actual window location.\n * Focused on exposing replace and href.\n *\n * @param {object} options\n * @param {Function} options.useLocation\n * @param {*} options.windowLocation\n * @returns {{_id, search, hash}}\n */\nconst useLocation = ({\n  useLocation: useAliasLocation = useLocationRRD,\n  windowLocation: aliasWindowLocation = window.location\n} = {}) => {\n  const location = useAliasLocation();\n  const windowLocation = aliasWindowLocation;\n  const [updatedLocation, setUpdatedLocation] = useState({});\n\n  useEffect(() => {\n    const _id = helpers.generateHash(windowLocation);\n    if (updatedLocation?._id !== _id) {\n      setUpdatedLocation({\n        ...location,\n        ...windowLocation,\n        _id,\n        hash: location?.hash || '',\n        search: location?.search || ''\n      });\n    }\n  }, [location, updatedLocation?._id, windowLocation]);\n\n  return updatedLocation;\n};\n\n/**\n * useNavigate wrapper. Leverage useNavigate for a modified router with parallel \"state\"\n * update. Dispatches the same type leveraged by the initialize hook, useSetRouteDetail.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useLocation\n * @param {Function} options.useNavigate\n * @returns {Function}\n */\nconst useNavigate = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useLocation: useAliasLocation = useLocation,\n  useNavigate: useAliasNavigate = useRRDNavigate\n} = {}) => {\n  const { search = '', hash = '' } = useAliasLocation();\n  const navigate = useAliasNavigate();\n  const dispatch = useAliasDispatch();\n\n  return useCallback(\n    (pathLocation, options) => {\n      const pathName = (typeof pathLocation === 'string' && pathLocation) || pathLocation?.pathname;\n      const { firstMatch } = routerHelpers.getRouteConfigByPath({ pathName });\n\n      if (firstMatch?.productPath) {\n        dispatch({\n          type: reduxTypes.app.SET_PRODUCT,\n          config: firstMatch?.productPath\n        });\n\n        return navigate(`${routerHelpers.pathJoin('.', firstMatch?.productPath)}${search}${hash}`, options);\n      }\n\n      return navigate((pathName && `${pathName}${search}${hash}`) || pathLocation, options);\n    },\n    [dispatch, hash, navigate, search]\n  );\n};\n\n/**\n * Get a route detail from \"state\". Consume useSetRouteDetail and set basis for product\n * configuration context.\n *\n * @param {object} options\n * @param {Function} options.t\n * @param {Function} options.useChrome\n * @param {Function} options.useSelector\n * @returns {{baseName: string, errorRoute: object}}\n */\nconst useRouteDetail = ({\n  t = translate,\n  useChrome: useAliasChrome = useChrome,\n  useSelector: useAliasSelector = storeHooks.reactRedux.useSelectors\n} = {}) => {\n  const { updateDocumentTitle = helpers.noop } = useAliasChrome();\n  const [productPath] = useAliasSelector([({ view }) => view?.product?.config]);\n  const [detail, setDetail] = useState({});\n\n  useEffect(() => {\n    if (productPath && detail?._passed !== productPath) {\n      const { allConfigs, configs, firstMatch, isClosest } = routerHelpers.getRouteConfigByPath({\n        pathName: productPath\n      });\n\n      // Set document title\n      updateDocumentTitle(\n        `${helpers.UI_DISPLAY_NAME}: ${t(`curiosity-view.title`, {\n          appName: helpers.UI_DISPLAY_NAME,\n          context: firstMatch?.productGroup\n        })}`\n      );\n\n      // Set route detail\n      setDetail({\n        _passed: productPath,\n        allConfigs,\n        firstMatch,\n        errorRoute: routerHelpers.errorRoute,\n        isClosest,\n        productGroup: firstMatch?.productGroup,\n        productConfig: (configs?.length && configs) || [],\n        productPath\n      });\n    }\n  }, [detail?._passed, productPath, t, updateDocumentTitle]);\n\n  return detail;\n};\n\n/**\n * Search parameter, return\n *\n * @param {object} options\n * @param {Function} options.useLocation\n * @param {Function} options.useSearchParams\n * @returns {Array}\n */\nconst useSearchParams = ({\n  useSearchParams: useAliasSearchParams = useRRDSearchParams,\n  useLocation: useAliasLocation = useLocation\n} = {}) => {\n  const { search } = useAliasLocation();\n  const [, setAliasSearchParams] = useAliasSearchParams();\n\n  /**\n   * Alias returned React Router Dom useSearchParams hook to something expected.\n   * This hook defaults to merging search objects instead of overwriting them.\n   *\n   * @param {object} updatedQuery\n   * @param {object} options\n   * @param {boolean} options.isMerged Merge search with existing search, or don't\n   * @param {string|*} options.currentSearch search returned from useLocation\n   */\n  const setSearchParams = useCallback(\n    (updatedQuery, { isMerged = true, currentSearch = search } = {}) => {\n      let updatedSearch = {};\n\n      if (isMerged) {\n        Object.assign(updatedSearch, routerHelpers.parseSearchParams(currentSearch), updatedQuery);\n      } else {\n        updatedSearch = updatedQuery;\n      }\n\n      setAliasSearchParams(updatedSearch);\n    },\n    [search, setAliasSearchParams]\n  );\n\n  return [routerHelpers.parseSearchParams(search), setSearchParams];\n};\n\n/**\n * Initialize and store product path, parameter, in a \"state\" update parallel to routing.\n * We're opting to use \"window.location.pathname\" directly since it appears to be quicker,\n * and returns a similar structured value as useParam.\n *\n * @param {object} options\n * @param {Function} options.useSelector\n * @param {Function} options.useDispatch\n * @param {*} options.windowLocation\n * @returns {*|string}\n */\nconst useSetRouteDetail = ({\n  useSelector: useAliasSelector = storeHooks.reactRedux.useSelectors,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  windowLocation: aliasWindowLocation = window.location\n} = {}) => {\n  const dispatch = useAliasDispatch();\n  const [updatedPath] = useAliasSelector([({ view }) => view?.product?.config]);\n  const { pathname: productPath } = aliasWindowLocation;\n\n  useEffect(() => {\n    if (productPath && productPath !== updatedPath) {\n      dispatch({\n        type: reduxTypes.app.SET_PRODUCT,\n        config: productPath\n      });\n    }\n  }, [updatedPath, dispatch, productPath]);\n\n  return updatedPath;\n};\n\nconst context = {\n  useLocation,\n  useNavigate,\n  useRouteDetail,\n  useSearchParams,\n  useSetRouteDetail\n};\n\nexport { context as default, context, useLocation, useNavigate, useRouteDetail, useSearchParams, useSetRouteDetail };\n","import React from 'react';\nimport { closest } from 'fastest-levenshtein';\nimport { helpers } from '../../common/helpers';\nimport { routesConfig, productConfig } from '../../config';\n\n/**\n * @memberof Router\n * @module RouterHelpers\n */\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * The app baseName. Return an assumed route baseName directory based on existing app name.\n * App name is defined in dotenv and package.json/insights.appname\n * [environment]/[OPTIONAL]/[OPTIONAL]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  `${pathName.split(applicationName)[0]}${applicationName}`;\n\n/**\n * App basePath. Return a base path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBasePath = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  pathName.split(applicationName)[0];\n\n/**\n * The first redirect route.\n *\n * @type {object}\n */\nconst redirectRoute = routesConfig.find(({ disabled, redirect }) => !disabled && redirect);\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = routesConfig.filter(item => !item.disabled);\n\n/**\n * Match pre-sorted route config entries with a path, or match with a fallback.\n * This is the primary engine for curiosity routing. It can account for a full window.location.pathname\n * given the appropriate alias, group, product, and/or path identifiers provided with product configuration.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {Array} params.configs\n * @returns {{configs: *, firstMatch: *, isClosest: boolean, allConfigs: Array}}\n */\nconst getRouteConfigByPath = helpers.memo(({ pathName, configs = productConfig.sortedConfigs } = {}) => {\n  const { byGroup, byAliasGroupProductPathIds, byProductIdConfigs } = configs();\n  const updatedPathName = (/^http/i.test(pathName) && new URL(pathName).pathname) || pathName;\n  const trimmedPathName = updatedPathName\n    ?.toLowerCase()\n    ?.split('#')?.[0]\n    ?.split('?')?.[0]\n    ?.replace(/^\\/*|\\/*$/g, '')\n    ?.replace(new RegExp(helpers.UI_DISPLAY_NAME, 'i'), '')\n    ?.replace(/\\/\\//g, '/');\n\n  // Do a known comparison against alias, group, product, path identifiers\n  const focusedStr = byAliasGroupProductPathIds.find(\n    value => value.toLowerCase() === trimmedPathName?.split('/')?.pop()\n  );\n\n  // Fallback attempt, match pathName with the closest string\n  const closestStr = trimmedPathName && closest(trimmedPathName, byAliasGroupProductPathIds);\n  const configsByGroup = byGroup?.[focusedStr || closestStr];\n\n  return {\n    isClosest: !focusedStr,\n    allConfigs: Object.values(byProductIdConfigs),\n    configs: configsByGroup,\n    firstMatch: configsByGroup?.[0]\n  };\n});\n\n/**\n * Import a route component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst importView = component => {\n  if (!helpers.TEST_MODE) {\n    return React.lazy(() => import(/* webpackExclude: /\\.test\\.js$/ */ `../${component}.js`));\n  }\n\n  return p => <React.Fragment>{JSON.stringify({ ...p, component }, null, 2)}</React.Fragment>;\n};\n\n/**\n * Parse search parameters from a string, using a set for \"uniqueness\"\n *\n * @param {string} currentPathAndOrSearch\n * @returns {{}}\n */\nconst parseSearchParams = helpers.memo((currentPathAndOrSearch = window.location.search) => {\n  const { decodeURIComponent, URLSearchParams } = window;\n  const parsedSearch = {};\n\n  [\n    ...new Set(\n      [...new URLSearchParams(decodeURIComponent(currentPathAndOrSearch))].map(([param, value]) => `${param}~${value}`)\n    )\n  ].forEach(v => {\n    const [param, value] = v.split('~');\n    parsedSearch[param] = value;\n  });\n\n  return parsedSearch;\n});\n\n/**\n * Basic path join, minor emulation for path.join. Related to the webpack 5 migration.\n *\n * @param {object} paths\n * @returns {string}\n */\nconst pathJoin = helpers.memo((...paths) => {\n  let updatedPath = Array.from(paths);\n  const hasLead = /^\\/\\//.test(updatedPath[0]);\n  updatedPath = updatedPath\n    .join('/')\n    .replace(/(\\/\\/)+/g, '~')\n    .replace(/~/g, '/')\n    .replace(/\\/\\//g, '/');\n\n  if (hasLead) {\n    updatedPath = `/${updatedPath}`;\n  }\n\n  return updatedPath;\n});\n\nconst routerHelpers = {\n  appName,\n  dynamicBaseName,\n  dynamicBasePath,\n  redirectRoute,\n  getRouteConfigByPath,\n  importView,\n  parseSearchParams,\n  pathJoin,\n  routes\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  appName,\n  dynamicBaseName,\n  dynamicBasePath,\n  redirectRoute,\n  getRouteConfigByPath,\n  importView,\n  parseSearchParams,\n  pathJoin,\n  routes\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  Table as PfTable,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * PF table wrapper, normalize table use.\n *\n * @memberof Components\n * @module Table\n * @property {module} TableEmpty\n * @property {module} TableSkeleton\n */\n\n/**\n * FixMe: PF tables uses sequentially ordered lists/arrays to denote expandable sections\n * Ideal solution is to nest expandable sections within their respective parents. There\n * are scenarios where manipulating a sequentially ordered list/array can, and will,\n * lead to unintended results. And forces an equal, if not greater, amount of effort on\n * state tracking in the consuming GUI/app. Compounding the issue, the index is used/returned\n * during events for a particular row being \"expanded\". This ends up making after-the-fact\n * application of the expandable list/array items problematic since said index is\n * constantly updating/shifting as rows are dynamically added. Add in a \"not every row\n * needs to be expandable\" scenario, you can start to see the issues. All of that\n * effort means that in some cases it may actually be quicker to simply use PF styles and\n * a HTML table directly, bypassing PF-React entirely.\n *\n * Applying a React node as content in the sequentially ordered list/array appears to\n * automatically \"mount\" said node. How this handles in child components where subsequent\n * AJAX/XHR calls are called means you are potentially hitting an API with dozens of calls,\n * row dependent, even when a user may not expand the nested row/child. This could easily\n * be resolved by nesting and applying the expandable contents after-the-fact.\n */\n/**\n * FixMe: PF tables misalignment of the column headers list/array and row cells breaks the component\n * The related PF error for this is cryptic. An immediate solution would be to simply fix the error\n * messaging, or do a length check before consuming the lists/arrays. This happens when a consumer\n * places more or less column header cells than row cells.\n */\n/**\n * FixMe: PF tables break when an empty list/array is used for the column headers\n * This appears related to the mismatched column header and row cells. The solution is to simply not\n * render the header row instead of throwing an error. This is similar to how the empty rows\n * list/array is handled.\n */\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n * @fires onSort\n */\nclass Table extends React.Component {\n  state = {\n    isCollapsible: false,\n    isSortable: false,\n    sortBy: {},\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (\n      !_isEqualWith(prevProps.rows, rows, customizer) ||\n      !_isEqualWith(prevProps.columnHeaders, columnHeaders, customizer)\n    ) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * FixMe: PF table sort callback doesn't use a zero based index when expandable?\n   * Educated guess there's a cell count happening instead of \"[you have this many data/entry cells]\"\n   * This is really confusing to implement in a consuming application, especially on first\n   * implementation. Special \"collapsible index\" logic had to be implemented to compensate for this\n   * odd behavior.\n   */\n  /**\n   * On column sort\n   *\n   * @event onSort\n   * @param {object} params\n   * @param {number} params.index\n   * @param {string} params.direction\n   * @param {object} params.data\n   */\n  onSort = ({ index, direction, data = {} }) => {\n    const { isCollapsible, updatedColumnHeaders, updatedRows } = this.state;\n    const updatedIndex = isCollapsible ? index - 1 : index;\n\n    updatedRows.forEach(async ({ isOpen }, i) => {\n      if (isOpen === true) {\n        await this.onCollapse({ index: i, isOpen: false });\n      }\n    });\n\n    this.setState(\n      {\n        sortBy: {\n          index,\n          direction\n        }\n      },\n      () =>\n        updatedColumnHeaders[updatedIndex].onSort({\n          direction,\n          index: updatedIndex,\n          label: data?.column?.header?.label\n        })\n    );\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n    const updatedSort = {};\n    let isCollapsible = false;\n    let isSortable = false;\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        isCollapsible = true;\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell?.title !== undefined) {\n          const { title, ...settings } = cell;\n          rowObj.cells.push({ title, ...settings });\n        } else {\n          rowObj.cells.push({\n            title: (React.isValidElement(cell) && cell) || (typeof cell === 'object' && `${cell}`) || cell\n          });\n        }\n      });\n    });\n\n    columnHeaders.forEach((columnHeader, index) => {\n      if (columnHeader?.title !== undefined) {\n        const { onSort, sortActive, sortDirection, title, ...settings } = columnHeader;\n        const tempColumnHeader = {\n          title,\n          ...settings\n        };\n\n        if (onSort) {\n          isSortable = true;\n          tempColumnHeader.transforms = [...(tempColumnHeader?.transforms || []), sortable];\n          tempColumnHeader.onSort = onSort;\n\n          if (sortActive) {\n            updatedSort.sortBy = { index: isCollapsible ? index + 1 : index };\n            updatedSort.sortBy.direction = SortByDirection.asc;\n          }\n\n          if (sortDirection) {\n            updatedSort.sortBy = { ...updatedSort.sortBy, direction: sortDirection };\n          }\n        } else if (tempColumnHeader.transforms) {\n          tempColumnHeader.transforms = tempColumnHeader.transforms.filter(v => v !== sortable);\n        }\n\n        updatedColumnHeaders.push(tempColumnHeader);\n      } else {\n        updatedColumnHeaders.push({\n          title:\n            (React.isValidElement(columnHeader) && columnHeader) ||\n            (typeof columnHeader === 'object' && `${columnHeader}`) ||\n            columnHeader\n        });\n      }\n    });\n\n    this.setState({\n      isCollapsible,\n      isSortable,\n      updatedColumnHeaders,\n      updatedRows,\n      ...updatedSort\n    });\n  }\n\n  /**\n   * FixMe: PF Tables automatically applies an expandable className when using the \"onCollapse\" prop?\n   * Not every row may need to be expandable. In certain scenarios a table may have no expandable\n   * sections, however it appears the \"onCollapse\" styling, and additionally added \"table cells\" are still\n   * applied.\n   */\n  /**\n   * Apply props to table.\n   *\n   * @returns {React.ReactNode}\n   */\n  renderTable() {\n    const { isCollapsible, isSortable, sortBy, updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    const pfTableProps = {};\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    if (isCollapsible) {\n      pfTableProps.onCollapse = (event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data });\n    }\n\n    if (isSortable) {\n      pfTableProps.sortBy = sortBy;\n      pfTableProps.onSort = (event, index, direction, data) => this.onSort({ event, index, direction, data });\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n          {...pfTableProps}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {React.ReactNode}\n   */\n  render() {\n    return (\n      <Grid className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: React.ReactNode,\n *     isHeader: boolean, variant: string, className: string, rows: Array, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        onSort: PropTypes.func,\n        sortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)]),\n        title: PropTypes.node.isRequired\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.instanceOf(Date),\n          PropTypes.shape({\n            title: PropTypes.oneOfType([PropTypes.node, PropTypes.instanceOf(Date)]).isRequired\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\n/**\n * @memberof Table\n * @module TableEmpty\n */\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {React.ReactNode|Function} props.icon\n * @param {React.ReactNode} props.message\n * @param {string} props.tableHeading\n * @param {React.ReactNode} props.title\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: React.ReactNode|Function, variant: string, message: React.ReactNode, title: React.ReactNode,\n *     tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cellWidth, TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * @memberof Table\n * @module TableSkeleton\n */\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {Array} props.colWidth\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst TableSkeleton = ({ className, borders, colCount, colWidth, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map((value, index) => {\n    const updatedHeader = { title: <Skeleton size={SkeletonSize.md} /> };\n\n    if (typeof colWidth[index] === 'number') {\n      updatedHeader.transforms = [cellWidth(colWidth[index])];\n    }\n\n    return updatedHeader;\n  });\n\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />)\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: string,\n *     className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.arrayOf(PropTypes.number),\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: null,\n *     className: null, rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  colWidth: [],\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip as PfTooltip, TooltipProps, TooltipPosition } from '@patternfly/react-core';\n\n/**\n * PF tooltip wrapper.\n *\n * @memberof Components\n * @module Tooltip\n */\n\n/**\n * PF tooltip wrapper component.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.ReactNode} props.content\n * @param {boolean} props.isNoWrap\n * @param {TooltipProps} props.props\n * @returns {React.ReactNode}\n */\nconst Tooltip = ({ children, content, isNoWrap, ...props }) => (\n  <PfTooltip\n    className={`curiosity-tooltip${(isNoWrap && '__nowrap') || ''}`}\n    content={(React.isValidElement(content) && content) || <p>{content || ''}</p>}\n    {...props}\n  >\n    {(React.isValidElement(children) && children) || <span className=\"curiosity-tooltip-children\">{children}</span>}\n  </PfTooltip>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, content: React.ReactNode}}\n */\nTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n  content: PropTypes.node,\n  distance: PropTypes.number,\n  enableFlip: PropTypes.bool,\n  entryDelay: PropTypes.number,\n  exitDelay: PropTypes.number,\n  isNoWrap: PropTypes.bool,\n  position: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{content: string}}\n */\nTooltip.defaultProps = {\n  content: '...',\n  distance: 5,\n  enableFlip: false,\n  entryDelay: 100,\n  exitDelay: 0,\n  isNoWrap: false,\n  position: TooltipPosition.top\n};\n\nexport { Tooltip as default, Tooltip };\n","import { helpers } from '../common/helpers';\n\n/**\n * IIFE for generating a product configs listing via webpack\n *\n * @type {{aliases: string[], productGroup: string, productId: string, productLabel: string, productDisplay: string, viewId: string,\n *     productArchitectures: string[], productVariants: string[], query: object, graphTallyQuery: object, inventoryHostQuery: object,\n *     inventorySubscriptionsQuery: object, initialGraphFilters: {}[], initialGraphSettings: object, initialGuestsFilters: {}[],\n *     initialInventoryFilters: {}[], initialSubscriptionsInventoryFilters: {}[], initialToolbarFilters: {}[], }[]}\n */\nconst productConfigs = (() => {\n  try {\n    const path = require.context('./', false, /product\\.[\\d\\D]+\\.js$/i);\n    return path.keys().map(path);\n  } catch (e) {\n    /**\n     * Basic configuration for testing only.\n     */\n    if (process.env.REACT_APP_ENV === 'test' && require) {\n      return [\n        ...require('fs') // eslint-disable-line\n          ?.readdirSync('./src/config') // eslint-disable-line\n          ?.filter(file => /product\\.[a-z]+\\.js/i.test(file)) // eslint-disable-line\n          ?.map(file => require(`./${file}`)) // eslint-disable-line\n      ];\n    }\n\n    console.warn(`Product configuration failed to load: ${e.message}`);\n    return [];\n  }\n})()?.map(value => value.config);\n\n/**\n * Sorted/organized/grouped product configs.\n * - byProductPathConfigs, object configurations associated with productPaths\n * - byGroup, object configurations associated with all productGroups, productIds, productPaths, and aliases\n * - byGroupIdConfigs, object of productGroup properties against an array of associated product configs\n * - byViewIds, object of viewId properties against an array of associated productId strings. \"viewId\" was created because of the\n *     overlap with productIds and productGroups, this may be refactored in the future\n * - byProductIds, a unique array of all productId strings\n * - byAlias,object configurations associated with product aliases\n * - byAliasGroupProductPathIds, list of identifiers associated with all productGroups, productIds, productPaths, and aliases\n * - byGroupIds, object of productGroup properties against an array of associated productId strings.\n * - byViewIdConfigs, object of viewId properties against an array of associated product configs\n * - byProductIdConfigs, object of productId properties against a product config\n *\n * @param {productConfigs} configs\n * @returns {{byProductPathConfigs: {}, byGroup: {}, byGroupIdConfigs: {}, byViewIds: {}, byProductIds: any[], byAlias: {}, byAliasGroupProductPathIds: string[], byGroupIds: {}, byViewIdConfigs: {}, byProductIdConfigs: {}}}\n */\nconst sortedProductConfigs = helpers.memo((configs = productConfigs) => {\n  const viewIdConfigs = {};\n  const productAliases = {};\n  const productIds = new Set();\n  const productIdConfigs = {};\n  const productPathConfigs = {};\n  const grouped = {};\n  const groupIdConfigs = {};\n  const groupedGroupIds = {};\n  const groupedViewIds = {};\n\n  configs?.forEach(config => {\n    const {\n      aliases,\n      productArchitectures,\n      productGroup,\n      productId,\n      productLabel,\n      productPath,\n      productVariants,\n      viewId\n    } = config;\n\n    if (productGroup && productId) {\n      grouped[productGroup] ??= {};\n      grouped[productGroup][productId] = config;\n    }\n\n    if (productId) {\n      grouped[productId] ??= {};\n      grouped[productId][productId] = config;\n    }\n\n    if (productLabel && productId) {\n      grouped[productLabel] ??= {};\n      grouped[productLabel][productId] = config;\n    }\n\n    if (productPath && productId) {\n      grouped[productPath] ??= {};\n      grouped[productPath][productId] = config;\n    }\n\n    aliases?.forEach(alias => {\n      if (productId) {\n        grouped[alias] ??= {};\n        grouped[alias][productId] = config;\n      }\n\n      productAliases[alias] ??= [];\n      productAliases[alias].push(config);\n    });\n\n    productArchitectures?.forEach(architecture => {\n      if (productId) {\n        grouped[architecture] ??= {};\n        grouped[architecture][productId] = config;\n      }\n\n      productAliases[architecture] ??= [];\n      productAliases[architecture].push(config);\n    });\n\n    productVariants?.forEach(variant => {\n      if (productId) {\n        grouped[variant] ??= {};\n        grouped[variant][productId] = config;\n      }\n\n      productAliases[variant] ??= [];\n      productAliases[variant].push(config);\n    });\n\n    if (productId) {\n      productIdConfigs[productId] = config;\n      productIds.add(productId);\n    }\n\n    if (productPath) {\n      productPathConfigs[productPath] ??= [];\n      productPathConfigs[productPath].push(config);\n    }\n\n    if (productGroup) {\n      groupIdConfigs[productGroup] ??= [];\n      groupIdConfigs[productGroup].push(config);\n    }\n\n    if (productGroup && productId) {\n      groupedGroupIds[productGroup] ??= [];\n      groupedGroupIds[productGroup].push(productId);\n    }\n\n    if (viewId) {\n      viewIdConfigs[viewId] ??= [];\n      viewIdConfigs[viewId].push(config);\n    }\n\n    if (viewId && productId) {\n      groupedViewIds[viewId] ??= [];\n      groupedViewIds[viewId].push(productId);\n    }\n  });\n\n  Object.entries(grouped).forEach(([key, value]) => {\n    grouped[key] = Object.values(value);\n  });\n\n  return helpers.objFreeze({\n    byAlias: productAliases,\n    byGroup: grouped,\n    byAliasGroupProductPathIds: Object.keys(grouped).sort(),\n    byGroupIdConfigs: groupIdConfigs,\n    byGroupIds: groupedGroupIds,\n    byProductPathConfigs: productPathConfigs,\n    byProductIdConfigs: productIdConfigs,\n    byProductIds: Array.from(productIds),\n    byViewIdConfigs: viewIdConfigs,\n    byViewIds: groupedViewIds\n  });\n});\n\nconst products = {\n  configs: productConfigs,\n  sortedConfigs: sortedProductConfigs\n};\n\nexport { products as default, products, productConfigs, sortedProductConfigs };\n","import { helpers } from '../common';\n\nconst routes = [\n  {\n    id: 'any',\n    path: ':productPath',\n    redirect: null,\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'missing',\n    path: '*',\n    redirect: './',\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: true,\n    component: 'productView/productViewMissing'\n  }\n];\n\nexport { routes as default, routes };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = 'openshift-container';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT;\n\nconst config = {\n  aliases: [RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT, 'openshift', 'container', 'platform', 'shift'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.PARTIAL,\n  viewId: `view${productGroup}`,\n  productContextFilterUom: true,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.CORES,\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialOption: RHSM_API_QUERY_UOM_TYPES.CORES,\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          isOptional: true,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          isOptional: true,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          chartType: ChartTypeVariant.threshold,\n          isOptional: true\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          chartType: ChartTypeVariant.threshold,\n          isOptional: true\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.UOM,\n        position: SelectPosition.right\n      },\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        {\n          [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n          [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {},\n          [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n        } = {},\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.SOCKETS,\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.CORES,\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 20,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY,\n      header: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: ['subscriptions', uom?.value] }),\n      cell: ({\n        [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY]: totalCapacity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom\n      } = {}) => {\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate(\n            `curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY}`,\n            { context: uom?.value }\n          );\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value && moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst config = {\n  aliases: ['openshift-dedicated', 'dedicated'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.DUAL_AXES,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value,\n          chartType: ChartTypeVariant.line,\n          isStacked: false,\n          yAxisUseDataSet: true\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n          fill: chartColorCyanLight.value,\n          stroke: chartColorCyanDark.value,\n          color: chartColorCyanDark.value,\n          chartType: ChartTypeVariant.line,\n          isStacked: false,\n          yAxisUseDataSet: true\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    actions: [\n      {\n        content: ({ data = [] } = {}) => {\n          const { id, meta = {} } = data.find(({ metric }) => metric === RHSM_API_PATH_METRIC_TYPES.CORES) || {};\n          const { totalMonthlyValue } = meta;\n          let displayContent;\n\n          if (totalMonthlyValue) {\n            displayContent = translate('curiosity-graph.cardActionTotal', {\n              context: id,\n              total: helpers\n                .numberDisplay(totalMonthlyValue)\n                ?.format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n                ?.toUpperCase()\n            });\n          }\n\n          return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n        }\n      },\n      {\n        id: 'rangedMonthly',\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({\n        [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n        [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {},\n        [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n      } = {}) => {\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate(\n                'curiosity-inventory.label',\n                { context: INVENTORY_TYPES.NUMBER_OF_GUESTS, count: numberOfGuests.value },\n                [<PfLabel color=\"blue\" />]\n              )) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.CORE_HOURS,\n      cell: ({ [INVENTORY_TYPES.CORE_HOURS]: coreHours }) =>\n        (typeof coreHours?.value === 'number' && Number.parseFloat(coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.INSTANCE_HOURS,\n      cell: ({ [INVENTORY_TYPES.INSTANCE_HOURS]: instanceHours } = {}) =>\n        (typeof instanceHours?.value === 'number' && Number.parseFloat(instanceHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = 'openshift-container';\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS;\n\nconst config = {\n  aliases: [RHSM_API_PATH_PRODUCT_TYPES.OPENSHIFT_METRICS, 'openshift', 'metrics'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.PARTIAL,\n  viewId: `view${productGroup}-${productId}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      isStacked: false\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    actions: [\n      {\n        content: ({ data = [] } = {}) => {\n          const { id, meta = {} } = data.find(({ metric }) => metric === RHSM_API_PATH_METRIC_TYPES.CORES) || {};\n          const { totalMonthlyValue } = meta;\n          let displayContent;\n\n          if (totalMonthlyValue) {\n            displayContent = translate('curiosity-graph.cardActionTotal', {\n              context: id,\n              total: helpers\n                .numberDisplay(totalMonthlyValue)\n                ?.format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n                ?.toUpperCase()\n            });\n          }\n\n          return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n        }\n      },\n      {\n        id: 'rangedMonthly',\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: ({\n        [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {},\n        [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {},\n        [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests = {}\n      } = {}) => {\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.CORE_HOURS,\n      cell: ({ [INVENTORY_TYPES.CORE_HOURS]: coreHours } = {}) =>\n        (typeof coreHours?.value === 'number' && Number.parseFloat(coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHACS;\n\nconst config = {\n  aliases: ['advanced', 'cluster', 'security', 'kubernetes', 'acs'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ metricId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', metricId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dailyHasData, dailyValue, metricId } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dailyHasData && metricId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 5,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dailyValue} aria-label={dailyValue} />]\n          ),\n        footer: ({ dailyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(dailyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ metricId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', metricId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ metricId, monthlyHasData, monthlyValue } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', monthlyHasData && metricId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(monthlyValue)\n                ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: false })\n                ?.toUpperCase()\n            },\n            [<strong title={monthlyValue} aria-label={monthlyValue} />]\n          ),\n        footer: ({ monthlyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(monthlyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick }) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label`, {\n          context: [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER, provider?.value || 'none']\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_orange_100 as chartColorOrangeLight,\n  chart_color_orange_300 as chartColorOrangeDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHEL;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHEL;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHEL;\n\n/**\n * RHEL product config\n *\n * @type {{aliases: string[], productGroup: string, productId: string, productLabel: string, productDisplay: string, viewId: string,\n *     productArchitectures: string[], query: object, graphTallyQuery: object, inventoryHostQuery: object, inventorySubscriptionsQuery: object,\n *     initialGraphFilters: {}[], initialGraphSettings: object, initialGuestsFilters: {}[], initialInventoryFilters: {}[],\n *     initialSubscriptionsInventoryFilters: {}[], initialToolbarFilters: {}[], }}\n */\nconst config = {\n  aliases: ['insights', 'enterprise', 'linux', 'el', 'x86'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}`,\n  productArchitectures: [...Object.values(RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES)],\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.SOCKETS,\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.PHYSICAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorCyanLight.value,\n          stroke: chartColorCyanDark.value,\n          color: chartColorCyanDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.VIRTUAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorPurpleLight.value,\n          stroke: chartColorPurpleDark.value,\n          color: chartColorPurpleDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.CLOUD\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorOrangeLight.value,\n          stroke: chartColorOrangeDark.value,\n          color: chartColorOrangeDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.HYPERVISOR\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          chartType: ChartTypeVariant.threshold\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    isDisabledLegendClick: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.NUMBER_OF_GUESTS,\n      cell: ({ [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests } = {}) => numberOfGuests?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.CATEGORY,\n      cell: ({ [INVENTORY_TYPES.CLOUD_PROVIDER]: cloudProvider, [INVENTORY_TYPES.CATEGORY]: category } = {}) => (\n        <React.Fragment>\n          {translate('curiosity-inventory.label', { context: [INVENTORY_TYPES.CATEGORY, category?.value] })}{' '}\n          {(cloudProvider?.value && (\n            <PfLabel color=\"purple\">\n              {translate('curiosity-inventory.label', {\n                context: [INVENTORY_TYPES.CLOUD_PROVIDER, cloudProvider?.value]\n              })}\n            </PfLabel>\n          )) ||\n            ''}\n        </React.Fragment>\n      ),\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.SOCKETS]: sockets } = {}) => sockets?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY,\n      header: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom } = {}) =>\n        translate('curiosity-inventory.header', { context: ['subscriptions', uom?.value] }),\n      cell: ({\n        [SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.TOTAL_CAPACITY]: totalCapacity,\n        [SUBSCRIPTIONS_INVENTORY_TYPES.UOM]: uom\n      } = {}) => {\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate(\n            `curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_TYPES.HAS_INFINITE_QUANTITY}`,\n            { context: uom?.value }\n          );\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value && moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.USAGE,\n      selected: true\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.CATEGORY\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.ARCHITECTURE\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHODS;\n\nconst config = {\n  aliases: ['openshift', 'data', 'science', 'ods'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.CORES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ metricId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', metricId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dailyHasData, dailyValue, metricId } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dailyHasData && metricId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 5,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dailyValue} aria-label={dailyValue} />]\n          ),\n        footer: ({ dailyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(dailyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ metricId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', metricId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ metricId, monthlyHasData, monthlyValue } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', monthlyHasData && metricId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(monthlyValue)\n                ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: false })\n                ?.toUpperCase()\n            },\n            [<strong title={monthlyValue} aria-label={monthlyValue} />]\n          ),\n        footer: ({ monthlyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(monthlyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick }) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.CORES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.CORES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.CORES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label`, {\n          context: [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER, provider?.value || 'none']\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES as SUBSCRIPTIONS_INVENTORY_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES as SUBSCRIPTIONS_INVENTORY_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { ChartTypeVariant } from '../components/chart/chart';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate, EMPTY_CONTEXT } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst config = {\n  aliases: ['streams', 'apache', 'kafka'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.HOURLY,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      metric: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: ChartTypeVariant.line,\n      isStacked: false,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    cards: [\n      {\n        header: ({ metricId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['dailyTotal', metricId],\n            testId: 'graphDailyTotalCard-header'\n          }),\n        body: ({ dailyHasData, dailyValue, metricId } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', dailyHasData && metricId],\n              testId: 'graphDailyTotalCard-body',\n              total: helpers\n                .numberDisplay(dailyValue)\n                ?.format({\n                  average: true,\n                  mantissa: 5,\n                  trimMantissa: true,\n                  lowPrecision: false\n                })\n                ?.toUpperCase()\n            },\n            [<strong title={dailyValue} aria-label={dailyValue} />]\n          ),\n        footer: ({ dailyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(dailyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphDailyTotalCard-footer'\n          })\n      },\n      {\n        header: ({ metricId } = {}) =>\n          translate('curiosity-graph.cardHeadingMetric', {\n            context: ['monthlyTotal', metricId],\n            testId: 'graphMonthlyTotalCard-header'\n          }),\n        body: ({ metricId, monthlyHasData, monthlyValue } = {}) =>\n          translate(\n            'curiosity-graph.cardBodyMetric',\n            {\n              context: ['total', monthlyHasData && metricId],\n              testId: 'graphMonthlyTotalCard-body',\n              total: helpers\n                .numberDisplay(monthlyValue)\n                ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: false })\n                ?.toUpperCase()\n            },\n            [<strong title={monthlyValue} aria-label={monthlyValue} />]\n          ),\n        footer: ({ monthlyDate } = {}) =>\n          translate('curiosity-graph.cardFooterMetric', {\n            date: moment.utc(monthlyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort),\n            testId: 'graphMonthlyTotalCard-footer'\n          })\n      }\n    ],\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick }) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label_${INVENTORY_TYPES.BILLING_PROVIDER}`, {\n          context: provider?.value || 'none'\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n      header: {\n        tooltip: () =>\n          translate('curiosity-inventory.header', {\n            context: ['tooltip', RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES]\n          })\n      },\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n      header: {\n        tooltip: () =>\n          translate('curiosity-inventory.header', {\n            context: ['tooltip', RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS]\n          })\n      },\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTE_MONTHS,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.PRODUCT_NAME,\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER]: provider }) =>\n        translate(`curiosity-inventory.label`, {\n          context: [SUBSCRIPTIONS_INVENTORY_TYPES.BILLING_PROVIDER, provider?.value || 'none']\n        }),\n      isSortable: true,\n      isWrappable: false,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.SERVICE_LEVEL,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.QUANTITY,\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE,\n      cell: (data, session, { [SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE]: subscriptionType } = {}) =>\n        translate(`curiosity-inventory.label_${SUBSCRIPTIONS_INVENTORY_META_TYPES.SUBSCRIPTION_TYPE}`, {\n          context: subscriptionType || EMPTY_CONTEXT\n        }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE,\n      cell: ({ [SUBSCRIPTIONS_INVENTORY_TYPES.NEXT_EVENT_DATE]: nextEventDate } = {}) =>\n        (nextEventDate?.value &&\n          helpers.isDate(nextEventDate?.value) &&\n          moment.utc(nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.BILLING_PROVIDER\n    },\n    {\n      id: 'rangedMonthly',\n      isSecondary: true,\n      position: SelectPosition.right\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES as CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES as SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES as DISPLAY_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { SelectPosition } from '../components/form/select';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.SATELLITE;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.SATELLITE;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.SATELLITE;\n\n/**\n * Satellite product config\n *\n * @type {{aliases: string[], productGroup: string, productId: string, productLabel: string, productDisplay: string, viewId: string,\n *     productVariants: string[], query: object, graphTallyQuery: object, inventoryHostQuery: object,\n *     inventorySubscriptionsQuery: object, initialGraphFilters: {}[], initialGraphSettings: object, initialGuestsFilters: {}[],\n *     initialInventoryFilters: {}[], initialToolbarFilters: {}[], }[]}\n */\nconst config = {\n  aliases: ['sat', 'capsule'],\n  productGroup,\n  productId,\n  productLabel,\n  productPath: productGroup.toLowerCase(),\n  productDisplay: DISPLAY_TYPES.CAPACITY,\n  viewId: `view${productGroup}`,\n  productVariants: [...Object.values(RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES)],\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers\n      .getRangedDateTime(GRANULARITY_TYPES.DAILY)\n      .startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      filters: [\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorBlueLight.value,\n          stroke: chartColorBlueDark.value,\n          color: chartColorBlueDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.PHYSICAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorCyanLight.value,\n          stroke: chartColorCyanDark.value,\n          color: chartColorCyanDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.VIRTUAL\n          }\n        },\n        {\n          metric: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n          fill: chartColorPurpleLight.value,\n          stroke: chartColorPurpleDark.value,\n          color: chartColorPurpleDark.value,\n          query: {\n            [RHSM_API_QUERY_SET_TYPES.CATEGORY]: CATEGORY_TYPES.CLOUD\n          }\n        }\n      ]\n    }\n  ],\n  initialGraphSettings: {\n    isDisabledLegendClick: true,\n    actions: [\n      {\n        id: RHSM_API_QUERY_SET_TYPES.GRANULARITY,\n        position: SelectPosition.right\n      }\n    ]\n  },\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INSTANCE_ID]: instanceId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!instanceId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || instanceId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${instanceId.value}/`}\n            >\n              {displayName.value || instanceId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: INVENTORY_TYPES.NUMBER_OF_GUESTS,\n      cell: ({ [INVENTORY_TYPES.NUMBER_OF_GUESTS]: numberOfGuests } = {}) => numberOfGuests?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.CATEGORY,\n      cell: ({ [INVENTORY_TYPES.CLOUD_PROVIDER]: cloudProvider, [INVENTORY_TYPES.CATEGORY]: category } = {}) => (\n        <React.Fragment>\n          {translate('curiosity-inventory.label', { context: [INVENTORY_TYPES.CATEGORY, category?.value] })}{' '}\n          {(cloudProvider?.value && (\n            <PfLabel color=\"purple\">\n              {translate('curiosity-inventory.label', {\n                context: [INVENTORY_TYPES.CLOUD_PROVIDER, cloudProvider?.value]\n              })}\n            </PfLabel>\n          )) ||\n            ''}\n        </React.Fragment>\n      ),\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.SOCKETS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.SOCKETS]: sockets } = {}) => sockets?.value || '--',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen } = {}) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_SET_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.USAGE,\n      selected: true\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.CATEGORY\n    },\n    {\n      id: RHSM_API_QUERY_SET_TYPES.VARIANT\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport _snakeCase from 'lodash/snakeCase';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Helpers\n * @module ReduxHelpers\n */\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {string} responses.response.keyCase\n * @param {Function} responses.response.customResponseEntry\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(\n    ({ schema = {}, data, customResponseEntry, customResponseValue, keyPrefix: prefix, keyCase = 'camel' }) => {\n      const isArray = Array.isArray(data);\n      const updatedData = (isArray && data) || (data && [data]) || [];\n      const [generatedSchema = {}] = setResponseSchemas([schema]);\n      const parsedResponse = [];\n\n      updatedData.forEach((value, index) => {\n        const generateReflectedData = ({\n          dataObj,\n          keyPrefix = '',\n          keyCaseType,\n          customEntry,\n          customValue = null,\n          update = helpers.noop\n        }) => {\n          let updatedDataObj = {};\n\n          Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n            let casedDataObjKey;\n\n            switch (keyCaseType) {\n              case 'camel':\n                casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'snake':\n                casedDataObjKey = _snakeCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'default':\n              default:\n                casedDataObjKey = `${dataObjKey}`.trim();\n                break;\n            }\n\n            let val = dataObjValue;\n\n            if (typeof val === 'number') {\n              val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n            }\n\n            if (typeof customValue === 'function') {\n              updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n            } else {\n              updatedDataObj[casedDataObjKey] = val;\n            }\n          });\n\n          if (typeof customEntry === 'function') {\n            updatedDataObj = customEntry(updatedDataObj, index);\n          }\n\n          update(updatedDataObj);\n        };\n\n        generateReflectedData({\n          keyPrefix: prefix,\n          dataObj: { ...generatedSchema, ...value },\n          keyCaseType: keyCase,\n          customEntry: customResponseEntry,\n          customValue: customResponseValue,\n          update: generatedData => parsedResponse.push(generatedData)\n        });\n      });\n\n      parsedResponses.push(parsedResponse);\n    }\n  );\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 400 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults?.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @param {object} options.state\n * @param {object} options.initialState\n * @param {boolean} options.reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    return {\n      meta: { ...updatedMeta },\n      ...Object.fromEntries(Object.entries(meta).map(([key, value]) => [_camelCase(`meta ${key}`), value]))\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (typeof action.meta?.id === 'string' && action.meta?.id && { [action.meta.id]: { ...baseState, ...data } }) || {\n      ...baseState,\n      ...data\n    };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { useSelector as useReactReduxSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { store } from '../store';\nimport { helpers } from '../../common';\n\n/**\n * State hooks for dispatch and selectors.\n *\n * @memberof Hooks\n * @module UseReactRedux\n */\n\n/**\n * FixMe: Appears to be an issue in trying to use Redux Promise with the default \"useDispatch\"\n */\n/**\n * Wrapper for store.dispatch, emulating useDispatch.\n *\n * @returns {Function}\n */\nconst useDispatch = () => dispatchEvent => store.dispatch(dispatchEvent);\n\n/**\n * Wrapper for Redux hook, useSelector. Applies test mode and a fallback value.\n *\n * @param {Function} selector\n * @param {*} value\n * @param {object} options\n * @param {*} options.equality\n * @param {Function} options.useSelector\n * @returns {*}\n */\nconst useSelector = (\n  selector,\n  value = null,\n  { equality, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => useAliasSelector(selector, equality) ?? value;\n\n/**\n * Generate a selector from multiple selectors for use in \"useSelector\".\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {*} value Pass-through value similar to charging the response.\n * @param {object} options\n * @param {Function} options.useSelector\n * @param {*} options.equality\n * @returns {Array|object}\n */\nconst useSelectors = (\n  selectors,\n  value,\n  { equality = shallowEqual, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => {\n  let updatedSelectors = Array.isArray(selectors) ? selectors : [selectors];\n  const selectorIds = new Set();\n\n  updatedSelectors = updatedSelectors.map(selector => {\n    if (selector.selector && selector.id) {\n      selectorIds.add(selector.id);\n      return selector.selector;\n    }\n    return selector;\n  });\n\n  const multiSelector = createSelector(updatedSelectors, (...results) => results);\n\n  let listMultiSelectorResponse = (useAliasSelector(multiSelector, equality) ?? value) || [];\n  const undefinedMultiSelectorResponse = listMultiSelectorResponse.filter(response => response === undefined);\n\n  if (undefinedMultiSelectorResponse.length === listMultiSelectorResponse.length) {\n    listMultiSelectorResponse = [];\n  } else {\n    listMultiSelectorResponse = _cloneDeep(listMultiSelectorResponse);\n  }\n\n  if (selectorIds.size && selectorIds.size === listMultiSelectorResponse.length) {\n    const idMultiSelectorResponse = {};\n\n    Array.from(selectorIds).forEach((id, index) => {\n      idMultiSelectorResponse[id] = listMultiSelectorResponse[index];\n    });\n\n    return idMultiSelectorResponse;\n  }\n\n  return listMultiSelectorResponse;\n};\n\n/**\n * Return a combined selector response using a \"Promise.all\" like response.\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {object} options\n * @param {Function} options.useSelectors\n * @param {Function} options.customResponse Callback for customizing your own response\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsResponse = (selectors, { useSelectors: useAliasSelectors = useSelectors, customResponse } = {}) => {\n  const selectorResponse = useAliasSelectors(selectors, []);\n  const isSelectorResponseArray = Array.isArray(selectorResponse);\n\n  const cancelledById = {};\n  const cancelledByList = [];\n  const cancelledDataById = {};\n  const cancelledDataByList = [];\n\n  const errorByList = [];\n  const errorById = {};\n  const errorDataById = {};\n  const errorDataByList = [];\n\n  const fulfilledByList = [];\n  const fulfilledById = {};\n  const fulfilledDataById = {};\n  const fulfilledDataByList = [];\n\n  const pendingByList = [];\n\n  const responsesById = {};\n  const responsesByList = [];\n  const dataById = {};\n  const dataByList = [];\n\n  const idList = [];\n\n  const updatedSelectorResponse = _cloneDeep(\n    (isSelectorResponseArray && selectorResponse) || Object.entries(selectorResponse)\n  );\n\n  updatedSelectorResponse.forEach(response => {\n    const id = (!isSelectorResponseArray && response?.[0]) || null;\n\n    const updatedResponse = (isSelectorResponseArray && response) || response?.[1] || response;\n    const isServiceResponse =\n      typeof updatedResponse.cancelled === 'boolean' ||\n      typeof updatedResponse.error === 'boolean' ||\n      typeof updatedResponse.fulfilled === 'boolean' ||\n      typeof updatedResponse.pending === 'boolean';\n\n    const { pending, fulfilled, error, cancelled, message } = (isServiceResponse && updatedResponse) || {};\n\n    if (id !== null) {\n      idList.push(id);\n      updatedResponse.id = id;\n    }\n\n    if (cancelled) {\n      cancelledByList.push(updatedResponse);\n      cancelledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        cancelledById[id] = cancelledByList[cancelledByList.length - 1];\n        cancelledDataById[id] =\n          cancelledByList[cancelledByList.length - 1]?.data || cancelledByList[cancelledByList.length - 1];\n      }\n    }\n\n    if (error) {\n      errorByList.push({\n        ...updatedResponse,\n        ...new Error(message || `Error: useSelectorsAllResponse${(id && `, ${id}`) || ''}`)\n      });\n      errorDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        errorById[id] = errorByList[errorByList.length - 1];\n        errorDataById[id] = errorByList[errorByList.length - 1]?.data || errorByList[errorByList.length - 1];\n      }\n    }\n\n    if (fulfilled) {\n      fulfilledByList.push(updatedResponse);\n      fulfilledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        fulfilledById[id] = fulfilledByList[fulfilledByList.length - 1];\n        fulfilledDataById[id] =\n          fulfilledByList[fulfilledByList.length - 1]?.data || fulfilledByList[fulfilledByList.length - 1];\n      }\n    }\n\n    if (pending) {\n      pendingByList.push(updatedResponse);\n    }\n\n    if (id !== null) {\n      responsesById[id] = updatedResponse;\n      dataById[id] = updatedResponse?.data || updatedResponse;\n    }\n\n    responsesByList.push(updatedResponse);\n    dataByList.push(updatedResponse?.data || updatedResponse);\n  });\n\n  const isById = idList.length !== 0 && idList.length === updatedSelectorResponse.length;\n\n  const response = {\n    responses: {\n      id: responsesById,\n      list: responsesByList\n    },\n    cancelled: false,\n    data: (isById && {}) || [],\n    error: false,\n    fulfilled: false,\n    message: null,\n    pending: false\n  };\n\n  if (typeof customResponse === 'function') {\n    Object.assign(response, {\n      ...customResponse(\n        { ...response, responses: { ...response.responses } },\n        {\n          cancelledById,\n          cancelledByList,\n          cancelledDataById,\n          cancelledDataByList,\n          dataById,\n          dataByList,\n          errorByList,\n          errorById,\n          errorDataById,\n          errorDataByList,\n          fulfilledByList,\n          fulfilledById,\n          fulfilledDataById,\n          fulfilledDataByList,\n          idList,\n          isById,\n          pendingByList,\n          responsesByList,\n          responsesById,\n          updatedSelectorResponse\n        }\n      )\n    });\n\n    return response;\n  }\n\n  if (errorByList.length) {\n    response.message = new Error(errorByList[0]?.message || `useSelectorsResponse, ${JSON.stringify(errorByList[0])}`);\n    response.error = true;\n    response.data = (isById && errorDataById) || errorDataByList;\n    return response;\n  }\n\n  if (pendingByList.length) {\n    response.pending = true;\n    return response;\n  }\n\n  if (cancelledByList.length && cancelledByList.length === responsesByList.length) {\n    response.message = new Error('Cancelled useSelectorsResponse');\n    response.cancelled = true;\n    response.data = (isById && cancelledById) || cancelledByList;\n    return response;\n  }\n\n  if (\n    fulfilledByList.length &&\n    (fulfilledByList.length === responsesByList.length ||\n      cancelledByList.length + fulfilledByList.length === responsesByList.length)\n  ) {\n    response.fulfilled = true;\n    response.data = (isById && dataById) || dataByList;\n    return response;\n  }\n\n  return response;\n};\n\n/**\n * Return a combined selector response using a \"Promise.allSettled\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAllSettledResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    { cancelledByList, errorByList, fulfilledByList, pendingByList, dataById, dataByList, isById }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length + fulfilledByList?.length + cancelledByList?.length === dataByList?.length ||\n      errorByList?.length === dataByList?.length ||\n      fulfilledByList?.length === dataByList?.length ||\n      cancelledByList?.length === dataByList?.length\n    ) {\n      response.fulfilled = true;\n      response.data = (isById && dataById) || dataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.any\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAnyResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length &&\n      (errorByList?.length === responsesByList?.length ||\n        cancelledByList?.length + errorByList?.length === responsesByList?.length)\n    ) {\n      response.message = helpers.aggregatedError(errorByList, 'useSelectorsAnyResponse');\n      response.error = true;\n      response.data = (isById && errorDataById) || errorDataByList;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      response.message = new Error('Cancelled useSelectorsAnyResponse');\n      response.cancelled = true;\n      response.data = (isById && cancelledDataById) || cancelledDataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.race\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|Array), pending: boolean, fulfilled: boolean, responses: {errorList: Array, errorId: {},\n *     id: {}, list: Array}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsRaceResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (errorByList?.length) {\n      let data = errorDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(errorDataById);\n        data = (keyList?.[0] && errorDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error(\n        errorByList[0]?.message || `useSelectorsRaceResponse, ${JSON.stringify(errorByList[0])}`\n      );\n      response.error = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      let data = cancelledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(cancelledDataById);\n        data = (keyList?.[0] && cancelledDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error('Cancelled useSelectorsRaceResponse');\n      response.cancelled = true;\n      response.data = data;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\nconst reactReduxHooks = {\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n\nexport {\n  reactReduxHooks as default,\n  reactReduxHooks,\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n","import { reactReduxHooks } from './useReactRedux';\n\nconst storeHooks = {\n  reactRedux: reactReduxHooks\n};\n\nexport { storeHooks as default, storeHooks, reactReduxHooks };\n","import _camelCase from 'lodash/camelCase';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\n/**\n * @memberof Helpers\n * @module ServiceHelpers\n */\n\n/**\n * Pass through generate hash\n */\nconst { generateHash } = helpers;\n\n/**\n * A timeout cancel for function calls.\n *\n * @param {Function} func Callback to be executed or cancelled\n * @param {object} options\n * @param {number} options.timeout Function timeout in milliseconds\n * @param {string} options.errorMessage What the error message will read\n * @returns {Promise<*>}\n */\nconst timeoutFunctionCancel = (func, { timeout = 3000, errorMessage = 'function timeout' } = {}) => {\n  let clearTimer;\n\n  const timer = () =>\n    new Promise((_, reject) => {\n      clearTimer = window.setTimeout(reject, timeout, new Error(errorMessage));\n    });\n\n  const updatedFunc = async () => {\n    const response = await func();\n    window.clearTimeout(clearTimer);\n    return response;\n  };\n\n  const execFunction = () =>\n    Promise.race([timer(), updatedFunc()]).finally(() => {\n      window.clearTimeout(clearTimer);\n    });\n\n  return execFunction();\n};\n\n/**\n * Return objects with the keys camelCased. Normally applied to an array of objects.\n *\n * @param {object|Array|*} obj\n * @returns {object|Array|*}\n */\nconst camelCase = obj => {\n  if (Array.isArray(obj)) {\n    return obj.map(camelCase);\n  }\n\n  if (_isPlainObject(obj)) {\n    const updatedObj = {};\n\n    Object.entries(obj).forEach(([key, val]) => {\n      updatedObj[_camelCase(key)] = camelCase(val);\n    });\n\n    return updatedObj;\n  }\n\n  return obj;\n};\n\n/**\n * Apply data to a callback, pass original data on error.\n *\n * @param {Function} callback\n * @param {Array} data\n * @returns {{data: *, error}}\n */\nconst passDataToCallback = (callback, ...data) => {\n  let error;\n  let updatedData = data;\n\n  try {\n    updatedData = callback(...data);\n  } catch (e) {\n    error = e;\n  }\n\n  return { data: updatedData, error };\n};\n\n/**\n * A callback for schema validation, and after-the-fact casing adjustments.\n *\n * @param {object} options\n * @param {string} options.casing\n * @param {boolean} options.convert\n * @param {string} options.id\n * @param {object|Array} options.response\n * @param {*} options.schema\n * @returns {*|{}}\n */\nconst schemaResponse = ({ casing, convert = true, id = null, response, schema } = {}) => {\n  const { value, error = { details: [] } } = schema?.validate(response, { convert }) || {};\n\n  if (error.details.length && !helpers.TEST_MODE) {\n    console.error(\n      new Error(\n        `Passing original API response. Schema validation failed for ${id || '...'}: ${error.details\n          .map(({ context = {}, message, type }) => `${message}:${type}, ${JSON.stringify(context)}`)\n          .join(', ')}`\n      )\n    );\n  }\n\n  switch (casing) {\n    case 'camel':\n      return camelCase(value);\n    default:\n      return value;\n  }\n};\n\nconst serviceHelpers = {\n  camelCase,\n  generateHash,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n\nexport {\n  serviceHelpers as default,\n  serviceHelpers,\n  camelCase,\n  generateHash,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n","import axios, { CancelToken } from 'axios';\nimport LruCache from 'lru-cache';\nimport { serviceHelpers } from './helpers';\n\n/**\n * Axios config for cancelling, caching, and emulated service calls.\n *\n * @memberof Helpers\n * @module ServiceConfig\n */\n\n/**\n * Set Axios XHR default timeout.\n *\n * @type {number}\n */\nconst globalXhrTimeout = Number.parseInt(process.env.REACT_APP_AJAX_TIMEOUT, 10) || 60000;\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @type {object}\n */\nconst globalCancelTokens = {};\n\n/**\n * Cache Axios service call responses.\n *\n * @type {object}\n */\nconst globalResponseCache = new LruCache({\n  ttl: Number.parseInt(process.env.REACT_APP_AJAX_CACHE, 10) || 30000,\n  max: 100,\n  updateAgeOnGet: true\n});\n\n// ToDo: consider another way of hashing cacheIDs. base64 could get a little large depending on settings, i.e. md5\n/**\n * Set Axios configuration. This includes response schema validation and caching.\n * Call platform \"getUser\" auth method, and apply service config. Service configuration\n * includes the ability to cancel all and specific calls, cache and normalize a response\n * based on both a provided schema and a successful API response. The cache will refresh\n * its timeout on continuous calls. To reset it a user will either need to refresh the\n * page or wait the \"maxAge\".\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @param {object} options\n * @param {string} options.cancelledMessage\n * @param {object} options.responseCache\n * @param {number} options.xhrTimeout\n * @returns {Promise<*>}\n */\nconst axiosServiceCall = async (\n  config = {},\n  { cancelledMessage = 'cancelled request', responseCache = globalResponseCache, xhrTimeout = globalXhrTimeout } = {}\n) => {\n  const updatedConfig = {\n    timeout: xhrTimeout,\n    ...config,\n    cache: undefined,\n    cacheResponse: config.cache,\n    method: config.method || 'get'\n  };\n  const responseTransformers = [];\n  const axiosInstance = axios.create();\n\n  // don't cache responses if \"get\" isn't used\n  updatedConfig.cacheResponse = updatedConfig.cacheResponse === true && updatedConfig.method === 'get';\n\n  // account for alterations to transforms, and other config props\n  const cacheId = (updatedConfig.cacheResponse === true && serviceHelpers.generateHash(updatedConfig)) || null;\n\n  // simple check to place responsibility on consumer, primarily used for testing\n  if (updatedConfig.exposeCacheId === true) {\n    updatedConfig.cacheId = cacheId;\n  }\n\n  if (updatedConfig.cancel === true) {\n    const cancelTokensId =\n      updatedConfig.cancelId || serviceHelpers.generateHash({ ...updatedConfig, data: undefined, params: undefined });\n\n    if (globalCancelTokens[cancelTokensId]) {\n      await globalCancelTokens[cancelTokensId].cancel(cancelledMessage);\n    }\n\n    globalCancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = globalCancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  if (updatedConfig.cacheResponse === true) {\n    const cachedResponse = responseCache.get(cacheId);\n\n    if (cachedResponse) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          ...cachedResponse,\n          status: 304,\n          statusText: 'Not Modified',\n          config: adapterConfig\n        });\n\n      return axiosInstance(updatedConfig);\n    }\n  }\n\n  if (updatedConfig.schema) {\n    responseTransformers.push(updatedConfig.schema);\n  }\n\n  if (updatedConfig.transform) {\n    responseTransformers.push(updatedConfig.transform);\n  }\n\n  responseTransformers.forEach(([successTransform, errorTransform]) => {\n    const transformers = [undefined, response => Promise.reject(response)];\n\n    if (successTransform) {\n      transformers[0] = response => {\n        const updatedResponse = { ...response };\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          successTransform,\n          updatedResponse.data,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.data = data;\n        }\n\n        return updatedResponse;\n      };\n    }\n\n    if (errorTransform) {\n      transformers[1] = response => {\n        const updatedResponse = { ...(response.response || response) };\n\n        if (updatedResponse?.message === cancelledMessage) {\n          return Promise.reject(updatedResponse);\n        }\n\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          errorTransform,\n          updatedResponse?.data || updatedResponse?.message,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.response = { ...updatedResponse, data };\n        }\n\n        return Promise.reject(updatedResponse);\n      };\n    }\n\n    axiosInstance.interceptors.response.use(...transformers);\n  });\n\n  if (updatedConfig.cacheResponse === true) {\n    axiosInstance.interceptors.response.use(\n      response => {\n        const updatedResponse = { ...response };\n        responseCache.set(cacheId, updatedResponse);\n        return updatedResponse;\n      },\n      response => Promise.reject(response)\n    );\n  }\n\n  if (typeof updatedConfig.url === 'function') {\n    const emulateCallback = updatedConfig.url;\n    updatedConfig.url = '/emulated';\n\n    let message = 'success, emulated';\n    let emulatedResponse;\n    let isSuccess = true;\n\n    try {\n      emulatedResponse = await serviceHelpers.timeoutFunctionCancel(emulateCallback, { timeout: xhrTimeout });\n    } catch (e) {\n      isSuccess = false;\n      message = e.message || e;\n    }\n\n    if (isSuccess) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          data: emulatedResponse,\n          status: 200,\n          statusText: message,\n          config: adapterConfig\n        });\n    } else {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.reject({ // eslint-disable-line\n          ...new Error(message),\n          message,\n          status: 418,\n          config: adapterConfig\n        });\n    }\n  }\n\n  return axiosInstance(updatedConfig);\n};\n\nconst serviceConfig = { axiosServiceCall, globalXhrTimeout, globalCancelTokens, globalResponseCache };\n\nexport {\n  serviceConfig as default,\n  serviceConfig,\n  axiosServiceCall,\n  globalXhrTimeout,\n  globalCancelTokens,\n  globalResponseCache\n};\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\n\n/**\n * @memberof Platform\n * @module PlatformSchemas\n */\n\n/**\n * Extend Joi with date.\n *\n * @type {*}\n */\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * User response item.\n *\n * @type {*} Joi schema\n */\nconst userResponseSchema = Joi.object()\n  .keys({\n    identity: Joi.object({\n      user: Joi.object({\n        is_org_admin: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({}),\n    entitlements: Joi.object({\n      [process.env.REACT_APP_UI_NAME]: Joi.object({\n        is_entitled: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({})\n  })\n  .unknown(true)\n  .default({});\n\n/**\n * Permissions response item.\n *\n * @type {*} Joi schema\n */\nconst permissionsItem = Joi.object({\n  permission: Joi.string().optional().allow(null),\n  resourceDefinitions: Joi.array().optional().default([])\n})\n  .unknown(true)\n  .default();\n\n/**\n * Authorize response.\n *\n * @type {*} Joi schema\n */\nconst permissionsResponseSchema = Joi.array().items(permissionsItem).default([]);\n\nconst platformSchemas = {\n  user: response => schemaResponse({ response, schema: userResponseSchema, id: 'User auth' }),\n  permissions: response => schemaResponse({ response, schema: permissionsResponseSchema, id: 'Permissions auth' })\n};\n\nexport { platformSchemas as default, platformSchemas };\n","import { rbacConfig } from '../../config';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES\n} from './platformConstants';\nimport { helpers } from '../../common';\n\n/**\n * Transform platform responses. Replaces selector usage.\n *\n * @memberof Platform\n * @module PlatformTransformers\n */\n\n/**\n * Parse platform getUser response.\n *\n * @param {object} response\n * @returns {object}\n */\nconst user = response => {\n  const updatedResponse = {};\n  const {\n    [platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY]: identity = {},\n    [platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]: entitlements = {}\n  } = response || {};\n\n  updatedResponse.isAdmin =\n    identity?.[platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]?.[\n      platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n    ] || false;\n\n  updatedResponse.isEntitled =\n    entitlements?.[helpers.UI_NAME]?.[platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED] ||\n    false;\n\n  return updatedResponse;\n};\n\n/**\n * Parse platform getUserPermissions response.\n *\n * @param {object} response\n * @param {object} options\n * @param {object} options.config Pass in a configuration object, RBAC\n * @returns {object}\n */\nconst userPermissions = (response, { config = rbacConfig } = {}) => {\n  const updatedResponse = {\n    permissions: {},\n    authorized: {}\n  };\n\n  response?.forEach(\n    ({\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n    }) => {\n      const [app = '', resource, operation] = permission?.split(':') || [];\n\n      if (!updatedResponse.permissions[app]) {\n        updatedResponse.permissions[app] = {\n          all: false,\n          resources: {}\n        };\n      }\n\n      if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n        updatedResponse.permissions[app].all = true;\n      }\n\n      if (!updatedResponse.permissions[app].resources[resource]) {\n        updatedResponse.permissions[app].resources[resource] = {};\n      }\n\n      updatedResponse.permissions[app].resources[resource][operation] = definitions;\n    }\n  );\n\n  // Alias specific app permissions checks\n  Object.entries(config).forEach(([key, { permissions: resourcePermissions }]) => {\n    updatedResponse.authorized[key] = updatedResponse.permissions[key]?.all || false;\n\n    resourcePermissions.forEach(({ resource: res, operation: op }) => {\n      if (updatedResponse.permissions[key]?.resources?.[res]?.[op]) {\n        updatedResponse.authorized[key] = true;\n      }\n    });\n  });\n\n  return updatedResponse;\n};\n\nconst platformTransformers = {\n  user,\n  permissions: userPermissions\n};\n\nexport { platformTransformers as default, platformTransformers, user, userPermissions };\n","import _set from 'lodash/set';\nimport { rbacConfig } from '../../config';\nimport { axiosServiceCall } from '../common/serviceConfig';\nimport { platformSchemas } from './platformSchemas';\nimport { platformTransformers } from './platformTransformers';\nimport { helpers } from '../../common';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES\n} from './platformConstants';\n\n/**\n * Emulated service calls for platform globals.\n *\n * @memberof Platform\n * @module PlatformServices\n */\n\n/**\n * Basic user authentication.\n *\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUser = async (options = {}) => {\n  const { schema = [platformSchemas.user], transform = [platformTransformers.user] } = options;\n  const { insights } = window;\n  return axiosServiceCall({\n    url: async () => {\n      try {\n        return (\n          (helpers.DEV_MODE &&\n            _set(\n              {},\n              [\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n              ],\n              process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n            )) ||\n          (await insights.chrome.auth.getUser())\n        );\n      } catch (e) {\n        throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n      }\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUserPermissions = (appName = Object.keys(rbacConfig), options = {}) => {\n  const { schema = [platformSchemas.permissions], transform = [platformTransformers.permissions] } = options;\n  const updatedAppName = (Array.isArray(appName) && appName) || [appName];\n  const { insights } = window;\n  const platformMethod = name =>\n    (helpers.DEV_MODE && [\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_ONE\n      },\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_TWO\n      }\n    ]) ||\n    insights.chrome.getUserPermissions(name);\n\n  return axiosServiceCall({\n    url: async () => {\n      let userPermissions;\n\n      try {\n        const allPermissions = await Promise.all(updatedAppName.map(name => platformMethod(name)));\n\n        if (Array.isArray(allPermissions)) {\n          userPermissions = [...allPermissions.flat()];\n        }\n      } catch (e) {\n        throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n      }\n\n      return userPermissions;\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Disables the Platform's global filter display.\n *\n * @param {boolean} isHidden\n * @returns {Promise<*>}\n */\nconst hideGlobalFilter = async (isHidden = true) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.hideGlobalFilter(isHidden);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = {\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  onNavigation\n};\n\nexport { platformServices as default, platformServices, getUser, getUserPermissions, hideGlobalFilter, onNavigation };\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platform/platformServices';\n\n/**\n * Platform service wrappers for dispatch, state update.\n *\n * @memberof Actions\n * @module PlatformActions\n */\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Get an emulated and combined API response from the platforms \"getUser\" and \"getUserPermissions\" global methods.\n *\n * @param {string|Array} appName\n * @returns {Function}\n */\nconst authorizeUser = appName => dispatch =>\n  dispatch({\n    type: platformTypes.PLATFORM_USER_AUTH,\n    payload: Promise.all([platformServices.getUser(), platformServices.getUserPermissions(appName)])\n  });\n\n/**\n * Hide platform global filter.\n *\n * @param {boolean} isHidden\n * @returns {{Function}}\n */\nconst hideGlobalFilter = isHidden => ({\n  type: platformTypes.PLATFORM_GLOBAL_FILTER_HIDE,\n  payload: platformServices.hideGlobalFilter(isHidden)\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter,\n  onNavigation\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter,\n  onNavigation\n};\n","import { axiosServiceCall } from './common/serviceConfig';\nimport { platformServices } from './platform/platformServices';\n\n/**\n * @namespace Services\n * @property {module} Helpers\n * @property {module} Platform\n * @property {module} Rhsm\n * @property {module} User\n */\n\n/**\n * Apply a global custom service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  ...passedConfig\n});\n\n/**\n * Use a global Axios configuration.\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n  return axiosServiceCall(serviceConfig(config));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\nimport { rhsmConstants } from './rhsmConstants';\n\n/**\n * @memberof Rhsm\n * @module RhsmSchemas\n */\n\n/**\n * Extend Joi with date.\n *\n * @type {*}\n */\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * Error response item.\n *\n * @type {*} Joi schema\n */\nconst errorItem = Joi.object({\n  code: Joi.string().default(null),\n  detail: Joi.string().default(null)\n}).unknown(true);\n\n/**\n * Error response.\n *\n * @type {*} Joi schema\n */\nconst errorResponseSchema = Joi.object()\n  .keys({\n    errors: Joi.array().items(errorItem).default([])\n  })\n  .unknown(true);\n\nconst linksSchema = Joi.object();\n\n/**\n * RHSM base response meta field.\n *\n * @type {*} Joi schema\n */\nconst metaResponseSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0),\n    product: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_PRODUCT_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Capacity response meta field.\n *\n * @type {*} Joi schema\n */\nconst capacityMetaSchema = metaResponseSchema\n  .keys({\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Capacity response item.\n *\n * @type {*} Joi schema\n */\nconst capacityItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  has_infinite_quantity: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Capacity response.\n *\n * @type {*} Joi schema\n */\nconst capacityResponseSchema = Joi.object().keys({\n  data: Joi.array().items(capacityItem).default([]),\n  links: linksSchema.default({}),\n  meta: capacityMetaSchema.default({})\n});\n\n/**\n * Guests response meta field.\n *\n * @type {*} Joi schema\n */\nconst guestsMetaSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0)\n  })\n  .unknown(true);\n\n/**\n * Guests response item.\n *\n * @type {*} Joi schema\n */\nconst guestsItem = Joi.object({\n  inventory_id: Joi.string().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Guests response.\n *\n * @type {*} Joi schema\n */\nconst guestsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(guestsItem).default([]),\n  links: linksSchema.default({}),\n  meta: guestsMetaSchema.default({})\n});\n\n/**\n * Hosts response meta field.\n *\n * @type {*} Joi schema\n */\nconst hostsMetaSchema = metaResponseSchema;\n\n/**\n * Hosts response item.\n *\n * @type {*} Joi schema\n */\nconst hostsItem = Joi.object({\n  cloud_provider: Joi.string().lowercase().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  hardware_type: Joi.string().lowercase().optional().allow(null),\n  inventory_id: Joi.string().optional().allow(null),\n  measurement_type: Joi.string().lowercase().optional().allow(null),\n  number_of_guests: Joi.number().integer().default(0),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Hosts response.\n *\n * @type {*} Joi schema\n */\nconst hostsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(hostsItem).default([]),\n  links: linksSchema.default({}),\n  meta: hostsMetaSchema.default({})\n});\n\n/**\n * Instances response meta field.\n *\n * @type {*} Joi schema\n */\nconst instancesMetaSchema = metaResponseSchema\n  .keys({\n    measurements: Joi.array()\n      .items(Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)))\n      .default([])\n  })\n  .unknown(true);\n\n/**\n * Instances response item.\n *\n * @type {*} Joi schema\n */\nconst instancesItem = Joi.object({\n  instance_id: Joi.string().optional().allow(null),\n  category: Joi.string().lowercase().optional().allow(null),\n  cloud_provider: Joi.string().lowercase().optional().allow(null, ''),\n  display_name: Joi.string().optional().allow(null),\n  billing_provider: Joi.string().lowercase().optional().allow(null, ''),\n  billing_account_id: Joi.string().optional().allow(null),\n  measurements: Joi.array().default([]),\n  number_of_guests: Joi.number().integer().default(0),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Instances response.\n *\n * @type {*} Joi schema\n */\nconst instancesResponseSchema = Joi.object().keys({\n  data: Joi.array().items(instancesItem).default([]),\n  links: linksSchema.default({}),\n  meta: instancesMetaSchema.default({})\n});\n\n/**\n * Subscriptions response meta field.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsMetaSchema = metaResponseSchema\n  .keys({\n    subscription_type: Joi.string().valid(null, ...Object.values(rhsmConstants.RHSM_API_RESPONSE_SUBSCRIPTION_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Subscriptions response item.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsItem = Joi.object({\n  has_infinite_quantity: Joi.boolean().optional().allow(null),\n  next_event_date: Joi.date().utc().allow(null),\n  product_name: Joi.string().optional().allow(null),\n  quantity: Joi.number().allow(null).default(0),\n  service_level: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_SLA_TYPES)),\n  total_capacity: Joi.number().allow(null).default(0),\n  uom: Joi.string()\n    .lowercase()\n    .valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_UOM_TYPES))\n})\n  .unknown(true)\n  .default();\n\n/**\n * Subscriptions response.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(subscriptionsItem).default([]),\n  links: linksSchema.default({}),\n  meta: subscriptionsMetaSchema.default({})\n});\n\n/**\n * Tally and capacity metric response item.\n *\n * @type {*} Joi schema\n */\nconst tallyItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Tally response meta field.\n *\n * @type {*} Joi schema\n */\nconst tallyMetaSchema = metaResponseSchema\n  .keys({\n    has_cloudigrade_data: Joi.boolean().optional().allow(null),\n    has_cloudigrade_mismatch: Joi.boolean().optional().allow(null),\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)),\n    total_monthly: tallyItem\n  })\n  .unknown(true);\n\n/**\n * Tally response.\n *\n * @type {*} Joi schema\n */\nconst tallyResponseSchema = Joi.object().keys({\n  data: Joi.array().items(tallyItem).default([]),\n  links: linksSchema.default({}),\n  meta: tallyMetaSchema.default({})\n});\n\nconst rhsmSchemas = {\n  capacity: response => schemaResponse({ response, schema: capacityResponseSchema, id: 'RHSM capacity' }),\n  errors: response => schemaResponse({ response, schema: errorResponseSchema, id: 'RHSM errors' }),\n  guests: response => schemaResponse({ response, casing: 'camel', schema: guestsResponseSchema, id: 'RHSM guests' }),\n  hosts: response => schemaResponse({ response, schema: hostsResponseSchema, id: 'RHSM hosts' }),\n  instances: response => schemaResponse({ response, schema: instancesResponseSchema, id: 'RHSM instances' }),\n  subscriptions: response =>\n    schemaResponse({ response, schema: subscriptionsResponseSchema, id: 'RHSM subscriptions' }),\n  tally: response => schemaResponse({ response, schema: tallyResponseSchema, id: 'RHSM tally' })\n};\n\nexport { rhsmSchemas as default, rhsmSchemas };\n","import moment from 'moment';\nimport {\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES as HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES as HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES as INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES as TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES as TALLY_CAPACITY_META_TYPES,\n  rhsmConstants\n} from './rhsmConstants';\nimport { dateHelpers } from '../../common';\n\n/**\n * Transform RHSM responses. Replaces selector usage.\n *\n * @memberof Rhsm\n * @module RhsmTransformers\n */\n\n/**\n * Parse RHSM hosts response for caching.\n *\n * @param {object} response\n * @returns {object}\n */\nconst rhsmHosts = response => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n\n  updatedResponse.data = data.map(\n    ({\n      [HOSTS_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      [HOSTS_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      ...dataResponse\n    }) => ({\n      [HOSTS_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      [HOSTS_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      numberOfGuests,\n      subscriptionManagerId,\n      ...dataResponse\n    })\n  );\n\n  updatedResponse.meta = {\n    count: meta[HOSTS_META_TYPES.COUNT],\n    productId: meta[HOSTS_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * FixMe: If RHSM Instances is deprecating Hosts we're missing a property, number_of_guests\n */\n/**\n * Parse RHSM instances response for caching.\n *\n * @param {object} response\n * @returns {object}\n */\nconst rhsmInstances = response => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const metaMeasurements = meta[INSTANCES_META_TYPES.MEASUREMENTS];\n\n  updatedResponse.data = data.map(\n    ({\n      [INSTANCES_DATA_TYPES.MEASUREMENTS]: measurements,\n      [INSTANCES_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      [INSTANCES_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      ...dataResponse\n    }) => {\n      const updatedData = {\n        [INSTANCES_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n        numberOfGuests,\n        [INSTANCES_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n        subscriptionManagerId,\n        ...dataResponse\n      };\n\n      metaMeasurements?.forEach((measurement, index) => {\n        updatedData[measurement] = measurements[index];\n      });\n\n      return updatedData;\n    }\n  );\n\n  updatedResponse.meta = {\n    count: meta[INSTANCES_META_TYPES.COUNT],\n    productId: meta[INSTANCES_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * ToDo: Confirm category meta response for Capacity\n * We're temporarily applying category from submitted params. API docs indicate\n * category only comes through on metric capacity?\n */\n/**\n * Parse RHSM tally response for caching.\n *\n * @param {object} response\n * @param {object} config\n * @param {boolean} config._isCapacity\n * @param {string} config.params\n * @returns {object}\n */\nconst rhsmTallyCapacity = (response, { _isCapacity, params } = {}) => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const currentDate = moment.utc(dateHelpers.getCurrentDate());\n  const currentDateStr = moment.utc(dateHelpers.getCurrentDate()).format('MM-D-YYYY');\n  let futureDateCount = 0;\n\n  updatedResponse.data = data.map(\n    (\n      {\n        [TALLY_CAPACITY_DATA_TYPES.DATE]: date,\n        [TALLY_CAPACITY_DATA_TYPES.VALUE]: value,\n        [TALLY_CAPACITY_DATA_TYPES.HAS_DATA]: hasData,\n        [TALLY_CAPACITY_DATA_TYPES.HAS_INFINITE_QUANTITY]: hasInfiniteQuantity\n      },\n      index\n    ) => {\n      const updatedDate = moment.utc(date);\n      const isCurrentDate = updatedDate.format('MM-D-YYYY') === currentDateStr;\n      const isFutureDate = updatedDate.diff(currentDate) > 0;\n\n      if (isFutureDate && !isCurrentDate) {\n        futureDateCount += 1;\n      }\n\n      return {\n        x: index,\n        y:\n          (_isCapacity === true && isFutureDate) ||\n          (_isCapacity === true && hasInfiniteQuantity === true) ||\n          (!_isCapacity && hasData === false && isFutureDate) ||\n          (!_isCapacity && hasData === false && isCurrentDate)\n            ? null\n            : value,\n        date,\n        hasData,\n        hasInfiniteQuantity,\n        isCurrentDate,\n        isFutureDate\n      };\n    }\n  );\n\n  /**\n   * Add an extra date to the first entry of the range to help Victory charts display.\n   */\n  if (futureDateCount === updatedResponse.data.length - 1) {\n    updatedResponse.data = [\n      {\n        ...updatedResponse.data[0],\n        x: 0,\n        isCurrentDate: false\n      },\n      ...updatedResponse.data\n    ].map((props, index) => ({ ...props, x: index }));\n  }\n\n  updatedResponse.meta = {\n    category: params?.[RHSM_API_QUERY_SET_TYPES.CATEGORY],\n    count: meta[TALLY_CAPACITY_META_TYPES.COUNT],\n    cloudigradeHasMismatch: meta?.[TALLY_CAPACITY_META_TYPES.HAS_CLOUDIGRADE_MISMATCH],\n    metricId: meta[TALLY_CAPACITY_META_TYPES.METRIC_ID],\n    productId: meta[TALLY_CAPACITY_META_TYPES.PRODUCT],\n    totalMonthlyDate: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.DATE],\n    totalMonthlyHasData: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.HAS_DATA],\n    totalMonthlyValue: meta?.[TALLY_CAPACITY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_CAPACITY_META_TYPES.VALUE]\n  };\n\n  return updatedResponse;\n};\n\nconst rhsmTransformers = {\n  hosts: rhsmHosts,\n  instances: rhsmInstances,\n  tallyCapacity: rhsmTallyCapacity\n};\n\nexport { rhsmTransformers as default, rhsmTransformers, rhsmHosts, rhsmInstances, rhsmTallyCapacity };\n","import { RHSM_API_QUERY_SET_TYPES } from './rhsmConstants';\n\n/**\n * @memberof Rhsm\n * @module RhsmHelpers\n */\n\n/**\n * ToDo: remove filterArchitectureVariant when the API supports architecture, variant params\n */\n/**\n * Patch for returning a made up API architecture, variant param as a product ID\n *\n * @param {string} id\n * @param {object} params\n * @returns {string}\n */\nconst filterArchitectureVariant = (id, params = {}) => {\n  const updatedId = id;\n\n  if (params?.[RHSM_API_QUERY_SET_TYPES.ARCHITECTURE]?.length) {\n    return params?.[RHSM_API_QUERY_SET_TYPES.ARCHITECTURE];\n  }\n\n  if (params?.[RHSM_API_QUERY_SET_TYPES.VARIANT]?.length) {\n    return params?.[RHSM_API_QUERY_SET_TYPES.VARIANT];\n  }\n\n  return updatedId;\n};\n\nconst rhsmHelpers = {\n  filterArchitectureVariant\n};\n\nexport { rhsmHelpers as default, rhsmHelpers, filterArchitectureVariant };\n","import { serviceCall } from '../config';\nimport { rhsmSchemas } from './rhsmSchemas';\nimport { helpers } from '../../common';\nimport { rhsmTransformers } from './rhsmTransformers';\nimport { rhsmHelpers } from './rhsmHelpers';\n\n/**\n * RHSM API service calls.\n *\n * @memberof Rhsm\n * @module RhsmServices\n */\n\n/**\n * ToDo: remove rhsmHelpers.filterArchitectureVariant\n * We're using a temporary helper to emulate a param for architectures and/or variants.\n * When the api supports architecture and variant query params this needs to be refactored.\n */\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getApiVersion = (options = {}) => {\n  const { cache = false, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {string} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {string} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {object} links\n * @apiSuccess {object} meta\n * @apiSuccess {string} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {string} meta.product\n * - RHEL\n * @apiSuccess {number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 12\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 4\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000.057890,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"has_cloudigrade_data\": true,\n *           \"has_cloudigrade_mismatch\": true,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\",\n *         \"total_core_hours\": 30500.04,\n *         \"total_instance_hours\": 35\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.20,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.15,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.11,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.32,\n *           \"instance_hours\": 23\n *         },\n *         {\n *           \"date\": \"2020-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.42,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 999.06,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\",\n *         \"total_core_hours\": 200.03,\n *         \"total_instance_hours\": 26\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 400,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\",\n *         \"total_core_hours\": 2050.04\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Sockets Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Sockets\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Cores Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Cores\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Transfer-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Transfer-gibibytes\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 1024,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibyte\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibyte-months Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibyte-months\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Instance-hours Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Instance-hours\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2000,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n */\n/* Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of identifiers to update a dotenv url path\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getGraphTally = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.tally, rhsmSchemas.errors],\n    transform = [rhsmTransformers.tallyCapacity]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_TALLY}`;\n  updatedId.forEach((value, index) => {\n    let updatedValue = value;\n    if (index === 0) {\n      updatedValue = rhsmHelpers.filterArchitectureVariant(value, params);\n    }\n\n    url = url.replace(`{${index}}`, updatedValue);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id/:metric_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 100,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 100,\n *           \"has_data\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": false,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 200,\n *           \"has_data\": true,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"product\": \"RHEL\",\n *         \"metric_id\": \"Sockets\",\n *         \"granularity\": \"daily\",\n *         \"service_level\": \"\",\n *         \"usage\": \"\",\n *         \"category\": \"\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of identifiers to update a dotenv url path\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.capacity, rhsmSchemas.errors],\n    transform = [rhsmTransformers.tallyCapacity]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}`;\n  updatedId.forEach((value, index) => {\n    let updatedValue = value;\n    if (index === 0) {\n      updatedValue = rhsmHelpers.filterArchitectureVariant(value, params);\n    }\n\n    url = url.replace(`{${index}}`, updatedValue);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform,\n    _isCapacity: true\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 500\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-123456789012\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.05,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 70,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6N\",\n *           \"cloud_provider\": \"AZURE\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.00,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"CLOUD\",\n *           \"measurement_type\": \"CLOUD\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6M\",\n *           \"cores\": 4,\n *           \"core_hours\": 1000.20,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 10,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"display_name\": \"dolor.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6L\",\n *           \"cores\": 4,\n *           \"core_hours\": 1001.60,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 1,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"display_name\": \"lorem.test.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YX\",\n *           \"cores\": 4,\n *           \"core_hours\": 999.60,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"display_name\": \"lorem.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YZ\",\n *           \"cores\": 0,\n *           \"core_hours\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"display_name\": \"lorem.another.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YA\",\n *           \"cores\": 0,\n *           \"core_hours\": 0.01,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-21T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YB\",\n *           \"cores\": 0,\n *           \"core_hours\": 999.61,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-22T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YC\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-23T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YD\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-24T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YEE\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-26T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YF\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-29T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 11\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.hosts, rhsmSchemas.errors],\n    transform = [rhsmTransformers.hosts]\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = false,\n    cancelId,\n    schema = [rhsmSchemas.guests, rhsmSchemas.errors],\n    transform = []\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', updatedId),\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 750\n * @api {get} /api/rhsm-subscriptions/v1/instances/products/:product_id Get RHSM instances table/inventory data\n * @apiDescription Retrieve instances table/inventory data.\n *\n * Reference [RHSM for instances table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"category\": \"physical\",\n *           \"billing_account_id\": \"xxxxx-xxxx-CCCCC-xxxx-xxxx10\",\n *           \"instance_id\": \"CCCCC-b344-4778-831c-CCCCCCC\",\n *           \"subscription_manager_id\": \"CCCCC-5b00-42fa-CCCCC-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              200,\n *              10,\n *              500.0000345678,\n *              200\n *           ],\n *           \"last_seen\": \"2022-12-03T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"virtual\",\n *           \"billing_account_id\": \"xxxxx-xxxx-FFFFF-xxxx-xxxx40\",\n *           \"instance_id\": \"FFFFF-b344-4778-831c-FFFFF\",\n *           \"subscription_manager_id\": \"FFFFF-5b00-42fa-FFFFF-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              200,\n *              10,\n *              500.0000345678,\n *              200\n *           ],\n *           \"last_seen\": \"2022-10-03T00:00:00Z\"\n *         },\n *         {\n *           \"number_of_guests\": 70,\n *           \"category\": \"cloud\",\n *           \"billing_provider\": \"red hat\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx01\",\n *           \"instance_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"display_name\": \"rhv.example.com\",\n *           \"measurements\": [\n *              42,\n *              10,\n *              0.000003563,\n *              1\n *           ],\n *           \"last_seen\": \"2022-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"cloud\",\n *           \"billing_provider\": \"azure\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx02\",\n *           \"instance_id\": \"XXXXXX-b344-4778-831c-XXXXXXXX\",\n *           \"subscription_manager_id\": \"XXXXXX-5b00-42fa-XXXX-75801d45cc6d\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"measurements\": [\n *              20,\n *              100,\n *              null,\n *              1000\n *           ],\n *           \"last_seen\": \"2022-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"category\": \"physical\",\n *           \"billing_account_id\": \"xxxxx-xxxx-xxxx-xxxx-xxxx03\",\n *           \"instance_id\": \"BBBBB-b344-4778-831c-BBBBBBB\",\n *           \"subscription_manager_id\": \"BBBBB-5b00-42fa-BBBBB-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              4000,\n *              50,\n *              10000.0000345678,\n *              3000\n *           ],\n *           \"last_seen\": \"2022-04-03T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 5,\n *         \"measurements\": [\n *           \"Instance-hours\",\n *           \"Sockets\",\n *           \"Storage-gibibyte-months\",\n *           \"Transfer-gibibytes\"\n *         ],\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"Premium\",\n *         \"usage\": \"Production\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API instances data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getInstancesInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.instances, rhsmSchemas.errors],\n    transform = [rhsmTransformers.instances]\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_INSTANCES}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 0\n * @api {get} /api/rhsm-subscriptions/v1/subscriptions/products/:product_id Get RHSM subscriptions table/inventory data\n * @apiDescription Retrieve subscriptions table/inventory data.\n *\n * Reference [RHSM for subscriptions table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"sku\": \"RH00011\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)\",\n *           \"billing_provider\": \"red hat\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" },\n *              { \"id\": \"ipsum\", \"number\": \"1234567890\" },\n *              { \"id\": \"lorem\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 1,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"sku\": \"RH00010\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server\",\n *           \"billing_provider\": \"azure\",\n *           \"service_level\": \"Self-Support\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [],\n *           \"next_event_date\": \"2020-04-02T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 15,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"sku\": \"RH00009\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium\",\n *           \"billing_provider\": \"Unknown\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription End\",\n *           \"quantity\": 3000,\n *           \"physical_capacity\": 2,\n *           \"virtual_capacity\": 2,\n *           \"total_capacity\": 4,\n *           \"uom\": \"Cores\",\n *           \"has_infinite_quantity\": false\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3,\n *         \"subscription_type\": \"On-demand\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API subscriptions data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getSubscriptionsInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.subscriptions, rhsmSchemas.errors],\n    transform = []\n  } = options;\n  const updatedId = rhsmHelpers.filterArchitectureVariant(id, params);\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_SUBSCRIPTIONS}${updatedId}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\nconst rhsmServices = {\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsm/rhsmServices';\nimport { generateChartIds } from '../../components/graphCard/graphCardHelpers';\n\n/**\n * RHSM service wrappers for dispatch, state update.\n *\n * @memberof Actions\n * @module RhsmActions\n */\n\n/**\n * Get a RHSM response from multiple Tally, or Capacity, IDs and metrics.\n *\n * @param {object|Array} idMetric An object, or an Array of objects, in the form of { id: PRODUCT_ID, metric: METRIC_ID, isCapacity: boolean }\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphMetrics =\n  (idMetric = {}, query = {}, options = {}) =>\n  dispatch => {\n    const { cancelId = 'graphTally' } = options;\n    const multiMetric = (Array.isArray(idMetric) && idMetric) || [idMetric];\n    const multiDispatch = [];\n\n    multiMetric.forEach(({ id, metric, isCapacity, query: metricQuery }) => {\n      const methodService = isCapacity ? rhsmServices.getGraphCapacity : rhsmServices.getGraphTally;\n      const methodType = isCapacity ? rhsmTypes.GET_GRAPH_CAPACITY_RHSM : rhsmTypes.GET_GRAPH_TALLY_RHSM;\n      const methodCancelId = isCapacity ? 'graphCapacity' : cancelId;\n      const generatedId = generateChartIds({ isCapacity, metric, productId: id, query: metricQuery });\n\n      multiDispatch.push({\n        type: methodType,\n        payload: methodService(\n          [id, metric],\n          { ...query, ...metricQuery },\n          {\n            cancelId: `${methodCancelId}_${generatedId}`\n          }\n        ),\n        meta: {\n          id: generatedId,\n          query: { ...query, ...metricQuery },\n          notifications: {}\n        }\n      });\n    });\n\n    return Promise.all(dispatch(multiDispatch));\n  };\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n      payload: rhsmServices.getHostsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n      payload: rhsmServices.getHostsInventoryGuests(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get an instances response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getInstancesInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM,\n      payload: rhsmServices.getInstancesInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a RHSM response from message reporting.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getMessageReports =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM,\n      payload: rhsmServices.getGraphReports(id, query, { cancelId: 'messageReport' }),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a subscriptions response from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getSubscriptionsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM,\n      payload: rhsmServices.getSubscriptionsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\nconst rhsmActions = {\n  getGraphMetrics,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n\nexport {\n  rhsmActions as default,\n  rhsmActions,\n  getGraphMetrics,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'iso-639-1';\nimport { serviceCall } from '../config';\nimport { helpers } from '../../common';\n\n/**\n * User, and RHSM, calls for locale and Opt-In.\n *\n * @memberof User\n * @module UserServices\n */\n\n/**\n * ToDo: Review moving the getLocale function under platformServices.\n * Also review using window.navigator.language as the primary pull for language.\n */\n/**\n * Return a browser locale, or fallback towards the platform locale cookie\n *\n * @returns {Promise<*>}\n */\nconst getLocale = () => {\n  const defaultLang = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n  const parseLang = value => {\n    const key = (value && LocaleCode.getName(value.split('-')[0])) || null;\n    return (key && { value, key }) || undefined;\n  };\n\n  return serviceCall({\n    url: async () => {\n      const cookieLang = await (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace(\n        '_',\n        '-'\n      );\n\n      return parseLang(cookieLang) || defaultLang;\n    }\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = (options = {}) => {\n  const { cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport { userServices as default, userServices, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/user/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * User, and RHSM, service wrappers for dispatch, state update.\n *\n * @memberof Actions\n * @module UserActions\n */\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_LOCALE,\n    payload: userServices.getLocale()\n  });\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn =\n  (query = {}) =>\n  dispatch =>\n    dispatch({\n      type: userTypes.UPDATE_USER_OPTIN,\n      payload: userServices.updateAccountOptIn(query),\n      meta: {\n        query,\n        notifications: {\n          rejected: {\n            variant: 'danger',\n            title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsErrorDescription'),\n            dismissable: true\n          },\n          fulfilled: {\n            variant: 'success',\n            title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsSuccessDescription'),\n            dismissable: true,\n            autoDismiss: false\n          }\n        }\n      }\n    });\n\nconst userActions = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport { userActions as default, userActions, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Graph/Chart related API and user state reducer.\n *\n * @memberof Reducers\n * @module GraphReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}, tally: {}, capacity: {}}}\n */\nconst initialState = {\n  capacity: {},\n  legend: {},\n  reportCapacity: {},\n  tally: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          [action.id]: action.value\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'capacity', type: rhsmTypes.GET_GRAPH_CAPACITY_RHSM },\n          { ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM },\n          { ref: 'tally', type: rhsmTypes.GET_GRAPH_TALLY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { inventoryTypes } from '../types';\n\n/**\n * Inventory, and tabs, related API and user state reducer.\n *\n * @memberof Reducers\n * @module InventoryReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{subscriptionsInventory: {}, instancesInventory: {}, tabs: {}, hostsInventory: {}, hostsGuests: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {},\n  instancesInventory: {},\n  subscriptionsInventory: {},\n  tabs: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system and subscriptions inventory to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inventoryTypes.SET_INVENTORY_TAB:\n      return reduxHelpers.setStateProp(\n        'tabs',\n        {\n          ...action.tabs\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case inventoryTypes.CLEAR_INVENTORY_GUESTS:\n      return reduxHelpers.setStateProp(\n        'hostsGuests',\n        {\n          [action.id]: {}\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n          { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM },\n          { ref: 'instancesInventory', type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM },\n          { ref: 'subscriptionsInventory', type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Banner messages related API state reducer.\n *\n * @memberof Reducers\n * @module MessagesReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{report: {}}}\n */\nconst initialState = {\n  report: {}\n};\n\n/**\n * Generated daily observer/reducer for report to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst messagesReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [{ ref: 'report', type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM }],\n    state,\n    action\n  );\n\nmessagesReducer.initialState = initialState;\n\nexport { messagesReducer as default, initialState, messagesReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Toolbar related user state reducer.\n *\n * @memberof Reducers\n * @module ToolbarReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, platformTypes, userTypes } from '../types';\nimport { rhsmConstants } from '../../services/rhsm/rhsmConstants';\nimport { reduxHelpers } from '../common';\n\n/**\n * User related API, platform and user state reducer.\n *\n * @memberof Reducers\n * @module UserReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{auth: {}, optin: {}, locale: null, errors: {}}}\n */\nconst initialState = {\n  auth: {},\n  errors: {},\n  locale: {},\n  optin: {}\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(reduxHelpers.getDataFromResults(action), [rhsmConstants.RHSM_API_RESPONSE_ERRORS], []);\n\n        return reduxHelpers.setStateProp(\n          'errors',\n          {\n            error: true,\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            data: errorCodes.map(value => value[rhsmConstants.RHSM_API_RESPONSE_ERRORS_TYPES.CODE]),\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'locale', type: userTypes.USER_LOCALE },\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'auth', type: platformTypes.PLATFORM_USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { productConfig } from '../../config';\nimport { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * View query related user state reducer.\n *\n * @memberof Reducers\n * @module ViewReducer\n */\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphTallyQuery: {}, inventoryHostsQuery: {}, inventorySubscriptionsQuery: {}, query: {},\n *     inventoryGuestsQuery: {}}}\n */\nconst initialState = {\n  query: {},\n  graphTallyQuery: {},\n  inventoryGuestsQuery: {},\n  inventoryHostsQuery: {},\n  inventorySubscriptionsQuery: {},\n  product: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST:\n      const updateResetQueries = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n\n          delete productQuery[RHSM_API_QUERY_TYPES.DIRECTION];\n          delete productQuery[RHSM_API_QUERY_TYPES.SORT];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateResetQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateResetQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updateClearQueries = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateClearQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateClearQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST:\n      const updateClearGuestQuery = (query = {}, id) => {\n        const queryIds = productConfig.sortedConfigs().byViewIds[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryGuestsQuery: updateClearGuestQuery(state.inventoryGuestsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [action.filter]: action.value\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'graphTallyQuery',\n        {\n          [action.viewId]: {\n            ...state.graphTallyQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.START_DATE]: action[RHSM_API_QUERY_TYPES.START_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.END_DATE]: action[RHSM_API_QUERY_TYPES.END_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.BILLING_PROVIDER]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: action[RHSM_API_QUERY_TYPES.BILLING_PROVIDER]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: action[RHSM_API_QUERY_TYPES.DISPLAY_NAME]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.app.SET_PRODUCT:\n      return reduxHelpers.setStateProp(\n        'product',\n        {\n          config: action.config\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport messagesReducer from './messagesReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  messages: messagesReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  messagesReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { platformConstants as platformApiTypes } from '../../services/platform/platformConstants';\n\n/**\n * @memberof Middleware\n * @module ActionRecordMiddleware\n */\n\n/**\n * Modify actions' payload for privacy.\n *\n * @param {object} action\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeActionHeaders = ({ payload, ...action }) => {\n  if (payload) {\n    let updatedPayload = { ...payload, headers: {} };\n\n    if (Array.isArray(payload)) {\n      updatedPayload = payload.map(({ headers, ...obj }) => ({ ...obj, headers: {} }));\n    }\n\n    return { payload: updatedPayload, ...action };\n  }\n\n  return { ...action };\n};\n\n/**\n * Modify actions' payload data for privacy.\n *\n * @param {object} action\n * @param {string} action.type\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeData = ({ type, payload, ...action }) => {\n  const removeUserIdentity = obj => {\n    if (obj?.data?.user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]) {\n      return {\n        ...obj,\n        data: {\n          ...obj.data,\n          user: {\n            ...obj.data.user,\n            [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]: {\n              ...obj.data.user[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY],\n              [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]: {}\n            }\n          }\n        }\n      };\n    }\n\n    return undefined;\n  };\n\n  const updatedPayload = removeUserIdentity(payload) || payload;\n  const updatedAction = removeUserIdentity(action) || action;\n\n  if (updatedPayload) {\n    return { type, payload: updatedPayload, ...updatedAction };\n  }\n\n  return { type, ...updatedAction };\n};\n\n/**\n * Return existing sessionStorage log.\n *\n * @param {string} id\n * @param {number} limit\n * @returns {Array}\n */\nconst getActions = (id, limit) => {\n  const { sessionStorage } = window;\n  const item = sessionStorage.getItem(id);\n  let parsedItems = (item && (JSON.parse(item) || {})?.actions) || [];\n\n  if (parsedItems?.length && limit > 0) {\n    parsedItems = parsedItems.slice(limit * -1);\n  }\n\n  return parsedItems;\n};\n\n/**\n * Store actions against an id in sessionStorage.\n *\n * @param {object} action\n * @param {object} config\n * @param {number} config.id\n * @param {number} config.limit\n */\nconst recordAction = (action, { id, limit, ...config }) => {\n  const { navigator, sessionStorage } = window;\n  const items = getActions(id, limit) || [];\n  const priorItem = items[items.length - 1];\n  const updatedAction = sanitizeData(sanitizeActionHeaders(action));\n  const actionObj = {\n    diff: 0,\n    timestamp: Date.now(),\n    action: updatedAction\n  };\n\n  if (priorItem && priorItem.timestamp) {\n    actionObj.diff = actionObj.timestamp - priorItem.timestamp;\n  }\n\n  items.push(actionObj);\n  sessionStorage.setItem(\n    id,\n    JSON.stringify({\n      browser: navigator.userAgent,\n      timestamp: new Date().toLocaleString(),\n      ...config,\n      actions: items\n    })\n  );\n};\n\n/**\n * Expose settings and record middleware.\n *\n * @param {object} config\n * @returns {Function}\n */\nconst actionRecordMiddleware =\n  (config = {}) =>\n  () =>\n  next =>\n  action => {\n    recordAction(action, {\n      id: 'actionRecordMiddleware/v1',\n      limit: 100,\n      ...config\n    });\n\n    return next(action);\n  };\n\nexport { actionRecordMiddleware as default, actionRecordMiddleware };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { actionRecordMiddleware } from './actionRecordMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  actionRecordMiddleware({\n    id: process.env.REACT_APP_UI_LOGGER_ID,\n    app: { version: process.env.REACT_APP_UI_VERSION }\n  }),\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * @memberof Middleware\n * @module StatusMiddleware\n */\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @param {string} config.statusSuffix\n * @param {string} config.rangeSuffix\n * @param {string} config.rangeFiller\n * @param {string} config.statusDelimiter\n * @param {boolean} config.statusRange\n * @param {boolean} config.dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * @memberof Middleware\n * @module MultiActionMiddleware\n */\n\n/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Redux store setup.\n *\n * @memberof Redux State\n * @module Store\n */\n\n/**\n * Create a Redux store.\n *\n * @type {{graph: object, notifications: Array, toolbar: object, inventory: object, user: object, view: object,\n *     messages: object}}\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","/**\n * @memberof Types\n * @module AppTypes\n */\n\nconst STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\nconst SET_PRODUCT = 'SET_PRODUCT';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX,\n  SET_PRODUCT\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX, SET_PRODUCT };\n","/**\n * @memberof Types\n * @module GraphTypes\n */\n\nconst SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","/**\n * @memberof Types\n * @module InventoryTypes\n */\n\nconst CLEAR_INVENTORY_GUESTS = 'CLEAR_INVENTORY_GUESTS';\nconst SET_INVENTORY_TAB = 'SET_INVENTORY_TAB';\n\n/**\n * Inventory action, reducer types.\n *\n * @type {{CLEAR_INVENTORY_GUESTS: string, SET_INVENTORY_TAB: string}}\n */\nconst inventoryTypes = {\n  CLEAR_INVENTORY_GUESTS,\n  SET_INVENTORY_TAB\n};\n\nexport { inventoryTypes as default, inventoryTypes, CLEAR_INVENTORY_GUESTS, SET_INVENTORY_TAB };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\n/**\n * @memberof Types\n * @module PlatformTypes\n */\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_GLOBAL_FILTER_HIDE = 'PLATFORM_GLOBAL_FILTER_HIDE';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_USER_AUTH = 'PLATFORM_USER_AUTH';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_USER_AUTH: string, PLATFORM_GLOBAL_FILTER_HIDE: string, PLATFORM_CLEAR_NOTIFICATIONS: string,\n *     PLATFORM_ADD_NOTIFICATION: string, PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_ON_NAV,\n  PLATFORM_USER_AUTH\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_ON_NAV,\n  PLATFORM_USER_AUTH\n};\n","import { RHSM_API_QUERY_SET_TYPES as RHSM_API_QUERY_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * @memberof Types\n * @module QueryTypes\n */\n\nconst SET_QUERY = 'SET_QUERY';\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\nconst SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST = 'SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST';\nconst SET_QUERY_RESET_INVENTORY_LIST = 'SET_QUERY_RESET_INVENTORY_LIST';\n\n/**\n * Query types associated with across ALL queries.\n */\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.BILLING_PROVIDER]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.BILLING_PROVIDER}`,\n  [RHSM_API_QUERY_TYPES.END_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.END_DATE}`,\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.START_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.START_DATE}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\n/**\n * Inventory query types associated with only GUESTS' queries.\n */\nconst SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Inventory query types associated with only HOSTS' and INSTANCES' queries.\n */\nconst SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DISPLAY_NAME}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Inventory query types associated with only SUBSCRIPTIONS' queries.\n */\nconst SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES: object, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES: object, SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string,\n *     SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES: object, SET_QUERY: string, SET_QUERY_RESET_INVENTORY_LIST: string,\n *     SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST: string}}\n */\nconst queryTypes = {\n  SET_QUERY,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n","/**\n * @memberof Types\n * @module UserTypes\n */\n\nconst DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_LOCALE: string, GET_USER_OPTIN: string,\n *     UPDATE_USER_OPTIN: string, DELETE_USER_OPTIN: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { inventoryTypes } from './inventoryTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  inventory: inventoryTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  inventoryTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","/**\n * @memberof Types\n * @module ToolbarTypes\n */\n\nconst SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","/**\n * @memberof Types\n * @module RhsmTypes\n */\n\nconst GET_GRAPH_CAPACITY_RHSM = 'GET_GRAPH_CAPACITY_RHSM';\nconst GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_GRAPH_TALLY_RHSM = 'GET_GRAPH_TALLY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\nconst GET_INSTANCES_INVENTORY_RHSM = 'GET_INSTANCES_INVENTORY_RHSM';\nconst GET_MESSAGE_REPORTS_RHSM = 'GET_MESSAGE_REPORTS_RHSM';\nconst GET_SUBSCRIPTIONS_INVENTORY_RHSM = 'GET_SUBSCRIPTIONS_INVENTORY_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_MESSAGE_REPORTS_RHSM: string, GET_HOSTS_INVENTORY_GUESTS_RHSM: string,\n *     GET_GRAPH_CAPACITY_RHSM: string, GET_SUBSCRIPTIONS_INVENTORY_RHSM: string, GET_HOSTS_INVENTORY_RHSM: string,\n *     GET_INSTANCES_INVENTORY_RHSM: string, GET_GRAPH_TALLY_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_CAPACITY_RHSM,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n","/**\n * @memberof Platform\n * @module PlatformConstants\n */\n\n/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string, RESOURCE_DEFS: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\n// ToDo: clean up this app name piece, these facets come through the helpers and src/config/rbac.json\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\nconst platformConstants = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformConstants as default,\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","/**\n * @memberof Rhsm\n * @module RhsmConstants\n */\n\n/**\n * RHSM path IDs for product RHEL variants.\n *\n * @type {{RHEL_ARM: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string, RHEL_X86: string}}\n */\nconst RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES = {\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86'\n};\n\n/**\n * RHSM path IDs for product Satellite variants.\n *\n * @type {{SATELLITE_SERVER: string, SATELLITE_CAPSULE: string}}\n */\nconst RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES = {\n  SATELLITE_CAPSULE: 'Satellite Capsule',\n  SATELLITE_SERVER: 'Satellite Server'\n};\n\n/**\n * RHSM path IDs for products.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string, RHODS: string, RHOSAK: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string,\n *     RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHACS: string,\n *     RHEL_IBM_POWER: string}}\n */\nconst RHSM_API_PATH_PRODUCT_TYPES = {\n  ...RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES,\n  ...RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHACS: 'rhacs',\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHODS: 'rhods',\n  RHOSAK: 'rhosak',\n  OPENSHIFT: 'OpenShift Container Platform',\n  OPENSHIFT_METRICS: 'OpenShift-metrics',\n  OPENSHIFT_DEDICATED_METRICS: 'OpenShift-dedicated-metrics',\n  SATELLITE: 'Satellite'\n};\n\n/**\n * RHSM path IDs for metrics.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     TRANSFER_GIBIBYTES: string, CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string}}\n */\nconst RHSM_API_PATH_METRIC_TYPES = {\n  CORES: 'Cores',\n  SOCKETS: 'Sockets',\n  CORE_SECONDS: 'Core-seconds',\n  INSTANCE_HOURS: 'Instance-hours',\n  STORAGE_GIBIBYTES: 'Storage-gibibytes',\n  STORAGE_GIBIBYTE_MONTHS: 'Storage-gibibyte-months',\n  TRANSFER_GIBIBYTES: 'Transfer-gibibytes'\n};\n\n/**\n * RHSM response data type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_DATA = 'data';\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response general meta types.\n *\n * @type {{PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  PRODUCT: 'product'\n};\n\n/**\n * RHSM response errors type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERRORS = 'errors';\n\n/**\n * RHSM response errors types.\n *\n * @type {{CODE: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_TYPES = {\n  CODE: 'code'\n};\n\n/**\n * RHSM response error codes.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response Hosts DATA types.\n *\n * @type {{MEASUREMENT_TYPE: string, CORES: string, CORE_HOURS: string, HARDWARE_TYPE: string,\n *     SUBSCRIPTION_MANAGER_ID: string, INSTANCE_HOURS: string, SOCKETS: string, INVENTORY_ID: string, NUMBER_OF_GUESTS: string,\n *     DISPLAY_NAME: string, CLOUD_PROVIDER: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_HOSTS_DATA_TYPES = {\n  CORE_HOURS: 'core_hours',\n  CORES: 'cores',\n  CLOUD_PROVIDER: 'cloud_provider',\n  DISPLAY_NAME: 'display_name',\n  HARDWARE_TYPE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT_TYPE: 'measurement_type',\n  NUMBER_OF_GUESTS: 'number_of_guests',\n  SOCKETS: 'sockets',\n  SUBSCRIPTION_MANAGER_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response Hosts META types.\n *\n * @type {{PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_HOSTS_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES\n};\n\n/**\n * FixMe: Appears we combined future guests used with instances. Investigate moving \"INVENTORY_ID\" and \"SUBSCRIPTION_MANAGER_ID\".\n * They're current associated with \"hosts\" guests. Need to also determine if this is something that needs to be added to \"instances\"\n * or if keeping them added to guests only is enough.\n */\n/**\n * RHSM response Instance DATA types.\n *\n * @type {{MEASUREMENTS: string, BILLING_ACCOUNT_ID: string, CATEGORY: string, SUBSCRIPTION_MANAGER_ID: string,\n *     INSTANCE_ID: string, NUMBER_OF_GUESTS: string, BILLING_PROVIDER: string, DISPLAY_NAME: string, CLOUD_PROVIDER: string,\n *     LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_DATA_TYPES = {\n  BILLING_PROVIDER: 'billing_provider',\n  BILLING_ACCOUNT_ID: 'billing_account_id',\n  CLOUD_PROVIDER: 'cloud_provider',\n  CATEGORY: 'category',\n  DISPLAY_NAME: 'display_name',\n  INSTANCE_ID: 'instance_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENTS: 'measurements',\n  NUMBER_OF_GUESTS: 'number_of_guests',\n  SUBSCRIPTION_MANAGER_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response Instances META types.\n *\n * @type {{MEASUREMENTS: string, PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  MEASUREMENTS: 'measurements'\n};\n\n/**\n * RHSM response Subscriptions DATA types.\n *\n * @type {{BILLING_ACCOUNT_ID: string, QUANTITY: string, SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string,\n *     NUMBER_OF_GUESTS: string, HAS_INFINITE_QUANTITY: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string, DISPLAY_NAME: string, MEASUREMENTS: string, UOM: string, CATEGORY: string,\n *     NEXT_EVENT_DATE: string, BILLING_PROVIDER: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES = {\n  ...RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  HAS_INFINITE_QUANTITY: 'has_infinite_quantity',\n  NEXT_EVENT_DATE: 'next_event_date',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Subscriptions META types.\n *\n * @type {{PRODUCT: string, SUBSCRIPTION_TYPE: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  SUBSCRIPTION_TYPE: 'subscription_type'\n};\n\n/**\n * RHSM response Tally DATA types.\n *\n * @type {{DATE: string, HAS_DATA: string, VALUE: string, HAS_INFINITE_QUANTITY: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES = {\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_DATA: 'has_data',\n  HAS_INFINITE_QUANTITY: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response Tally META types.\n *\n * @type {{TOTAL_MONTHLY: string, DATE: string, PRODUCT: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string, VALUE: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data',\n  METRIC_ID: 'metric_id',\n  TOTAL_MONTHLY: 'total_monthly'\n};\n\n/**\n * RHSM response, query parameters for GRANULARITY.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_RESPONSE_GRANULARITY_TYPES = {\n  DAILY: 'Daily',\n  WEEKLY: 'Weekly',\n  MONTHLY: 'Monthly',\n  QUARTERLY: 'Quarterly'\n};\n\n/**\n * ToDo: Activate available provider type as it becomes available 202205\n * (just uncomment)\n */\n/**\n * RHSM response, query parameters for BILLING_PROVIDER\n *\n * @type {{AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string, ORACLE: string}}\n */\nconst RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES = {\n  RED_HAT: 'red hat',\n  AWS: 'aws'\n  // GCP: 'gcp',\n  // AZURE: 'azure',\n  // ORACLE: 'oracle',\n  // NONE: ''\n};\n\n/**\n * RHSM response, query parameters for SLA.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_RESPONSE_SLA_TYPES = {\n  PREMIUM: 'Premium',\n  STANDARD: 'Standard',\n  SELF: 'Self-Support',\n  NONE: ''\n};\n\n/**\n * RHSM response, general parameters for subscription types\n *\n * @type {{ANNUAL: string, ON_DEMAND: string}}\n */\nconst RHSM_API_RESPONSE_SUBSCRIPTION_TYPES = {\n  ANNUAL: 'Annual',\n  ON_DEMAND: 'On-demand'\n};\n\n/**\n * RHSM response, query parameters for UOM.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_RESPONSE_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM response, query parameters for USAGE.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_RESPONSE_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\n/**\n * RHSM query/search parameter CATEGORY type values for TALLY/CAPACITY.\n *\n * @type {{CLOUD: string, PHYSICAL: string, HYPERVISOR: string, VIRTUAL: string}}\n */\nconst RHSM_API_QUERY_CATEGORY_TYPES = {\n  CLOUD: 'cloud',\n  HYPERVISOR: 'hypervisor',\n  PHYSICAL: 'physical',\n  VIRTUAL: 'virtual'\n};\n\nconst RHSM_API_QUERY_GRANULARITY_TYPES = RHSM_API_RESPONSE_GRANULARITY_TYPES;\n\n/**\n * ToDo: Remove RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES once hosts is fully deprecated\n * These sort params are focused on the hosts api.\n */\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, INSTANCE_HOURS: string, SOCKETS: string, MEASUREMENT: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES = {\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  HARDWARE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for general inventory displays.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, CATEGORY: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     NUMBER_OF_GUESTS: string, TRANSFER_GIBIBYTES: string, BILLING_PROVIDER: string, CORE_SECONDS: string,\n *     STORAGE_GIBIBYTE_MONTHS: string, LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_TYPES = {\n  ...RHSM_API_PATH_METRIC_TYPES,\n  BILLING_PROVIDER: 'billing_provider',\n  CATEGORY: 'category',\n  LAST_SEEN: 'last_seen',\n  NAME: 'display_name',\n  NUMBER_OF_GUESTS: 'number_of_guests'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string,\n *     TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES = {\n  NEXT_EVENT_DATE: 'next_event_date',\n  NEXT_EVENT_TYPE: 'next_event_type',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SKU: 'sku',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  USAGE: 'usage'\n};\n\nconst RHSM_API_QUERY_BILLING_PROVIDER_TYPES = RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES;\n\nconst RHSM_API_QUERY_SLA_TYPES = RHSM_API_RESPONSE_SLA_TYPES;\n\nconst RHSM_API_QUERY_UOM_TYPES = RHSM_API_RESPONSE_UOM_TYPES;\n\nconst RHSM_API_QUERY_USAGE_TYPES = RHSM_API_RESPONSE_USAGE_TYPES;\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{BILLING_ACCOUNT_ID: string, DIRECTION: string, END_DATE: string, SLA: string, LIMIT: string,\n *     START_DATE: string, VARIANT: string, DISPLAY_NAME: string, UOM: string, USAGE: string, CATEGORY: string,\n *     ARCHITECTURE: string, SORT: string, OFFSET: string, BILLING_PROVIDER: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  ARCHITECTURE: 'architecture',\n  BILLING_PROVIDER: 'billing_provider',\n  BILLING_ACCOUNT_ID: 'billing_account_id',\n  CATEGORY: 'category',\n  DIRECTION: 'dir',\n  DISPLAY_NAME: 'display_name_contains',\n  END_DATE: 'ending',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  START_DATE: 'beginning',\n  UOM: 'uom',\n  USAGE: 'usage',\n  VARIANT: 'variant'\n};\n\n/**\n * RHSM query parameter options for TALLY, CAPACITY endpoints.\n *\n * @type {{GRANULARITY: string, USAGE: string, CATEGORY: string, END_DATE: string, SLA: string, START_DATE: string,\n *     BILLING_PROVIDER: string}}\n */\nconst RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES = {\n  ARCHITECTURE: 'architecture',\n  BILLING_PROVIDER: 'billing_provider',\n  CATEGORY: 'category',\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage',\n  VARIANT: 'variant'\n};\n\n/**\n * Aggregate all query set types.\n *\n * @type {{UOM: string, GRANULARITY: string, USAGE: string, DIRECTION: string, SORT: string, END_DATE: string,\n *     OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string}}\n */\nconst RHSM_API_QUERY_SET_TYPES = {\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES\n};\n\n/**\n * Product display types.\n *\n * @type {{CAPACITY: string, LEGACY: string, DUAL_AXES: string, PARTIAL: string, HOURLY: string}}\n */\nconst RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES = {\n  DUAL_AXES: 'dual-axes',\n  HOURLY: 'hourly',\n  LEGACY: 'legacy',\n  PARTIAL: 'partial',\n  CAPACITY: 'capacity'\n};\n\n/**\n * RHSM constants.\n *\n * @type {{RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, CATEGORY: string, END_DATE: string,\n *     SLA: string, START_DATE: string, BILLING_PROVIDER: string}, RHSM_API_RESPONSE_DATA: string,\n *     RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES: {PRODUCT: string, SUBSCRIPTION_TYPE: string, COUNT: string},\n *     RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES: {SATELLITE_SERVER: string, SATELLITE_CAPSULE: string},\n *     RHSM_API_PATH_METRIC_TYPES: {CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     TRANSFER_GIBIBYTES: string, CORE_SECONDS: string, STORAGE_GIBIBYTE_MONTHS: string},\n *     RHSM_API_RESPONSE_INSTANCES_META_TYPES: {MEASUREMENTS: string, PRODUCT: string, COUNT: string},\n *     RHSM_API_RESPONSE_INSTANCES_DATA_TYPES: {MEASUREMENTS: string, BILLING_ACCOUNT_ID: string, CATEGORY: string,\n *     SUBSCRIPTION_MANAGER_ID: string, INSTANCE_ID: string, NUMBER_OF_GUESTS: string, BILLING_PROVIDER: string,\n *     DISPLAY_NAME: string, CLOUD_PROVIDER: string, LAST_SEEN: string}, RHSM_API_RESPONSE_SLA_TYPES: {PREMIUM: string,\n *     SELF: string, NONE: string, STANDARD: string}, RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES: {RHEL_ARM: string,\n *     RHEL_IBM_Z: string, RHEL_IBM_POWER: string, RHEL_X86: string}, RHSM_API_RESPONSE_HOSTS_META_TYPES: {PRODUCT: string,\n *     COUNT: string}, RHSM_API_RESPONSE_META_TYPES: {PRODUCT: string, COUNT: string},\n *     RHSM_API_RESPONSE_ERRORS_CODE_TYPES: {GENERIC: string, OPTIN: string}, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string,\n *     QUARTERLY: string, DAILY: string, MONTHLY: string}, RHSM_API_RESPONSE_UOM_TYPES: {CORES: string, SOCKETS: string},\n *     RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES: {BILLING_ACCOUNT_ID: string, QUANTITY: string, SUBSCRIPTION_MANAGER_ID: string,\n *     INVENTORY_ID: string, NUMBER_OF_GUESTS: string, HAS_INFINITE_QUANTITY: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string,\n *     SERVICE_LEVEL: string, DISPLAY_NAME: string, MEASUREMENTS: string, UOM: string, CATEGORY: string, NEXT_EVENT_DATE: string,\n *     BILLING_PROVIDER: string, LAST_SEEN: string}, RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES: {ASCENDING: string,\n *     DESCENDING: string}, RHSM_API_RESPONSE_SUBSCRIPTION_TYPES: {ANNUAL: string, ON_DEMAND: string},\n *     RHSM_API_QUERY_INVENTORY_SORT_TYPES: {CORES: string, STORAGE_GIBIBYTES: string, CATEGORY: string, SOCKETS: string,\n *     INSTANCE_HOURS: string, NUMBER_OF_GUESTS: string, TRANSFER_GIBIBYTES: string, BILLING_PROVIDER: string, CORE_SECONDS: string,\n *     STORAGE_GIBIBYTE_MONTHS: string, LAST_SEEN: string, NAME: string}, RHSM_API_PATH_PRODUCT_TYPES: {RHEL_ARM: string,\n *     OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string, RHODS: string, RHOSAK: string,\n *     RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string,\n *     RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHACS: string,\n *     RHEL_IBM_POWER: string}, RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES: {AZURE: string, GCP: string, RED_HAT: string, NONE: string,\n *     AWS: string, ORACLE: string}, RHSM_API_RESPONSE_ERRORS_TYPES: {CODE: string},\n *     RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES: {DATE: string, HAS_DATA: string, VALUE: string, HAS_INFINITE_QUANTITY: string},\n *     RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES: {TOTAL_MONTHLY: string, DATE: string, PRODUCT: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string, VALUE: string},\n *     RHSM_API_QUERY_BILLING_PROVIDER_TYPES: {AZURE: string, GCP: string, RED_HAT: string, NONE: string, AWS: string, ORACLE: string},\n *     RHSM_API_QUERY_CATEGORY_TYPES: {CLOUD: string, PHYSICAL: string, HYPERVISOR: string, VIRTUAL: string},\n *     RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_SET_INVENTORY_TYPES: {BILLING_ACCOUNT_ID: string, DIRECTION: string, END_DATE: string, SLA: string,\n *     LIMIT: string, START_DATE: string, VARIANT: string, DISPLAY_NAME: string, UOM: string, USAGE: string, CATEGORY: string,\n *     ARCHITECTURE: string, SORT: string, OFFSET: string, BILLING_PROVIDER: string},\n *     RHSM_API_RESPONSE_HOSTS_DATA_TYPES: {MEASUREMENT_TYPE: string, CORES: string, CORE_HOURS: string, HARDWARE_TYPE: string,\n *     SUBSCRIPTION_MANAGER_ID: string, INSTANCE_HOURS: string, SOCKETS: string, INVENTORY_ID: string, NUMBER_OF_GUESTS: string,\n *     DISPLAY_NAME: string, CLOUD_PROVIDER: string, LAST_SEEN: string}, RHSM_API_RESPONSE_ERRORS: string,\n *     RHSM_API_QUERY_UOM_TYPES: {CORES: string, SOCKETS: string}, RHSM_API_RESPONSE_META: string,\n *     RHSM_API_RESPONSE_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *     RHSM_API_QUERY_SET_TYPES: {UOM: string, GRANULARITY: string, USAGE: string, DIRECTION: string, SORT: string, END_DATE: string,\n *     OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string},\n *     RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES: {QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string,\n *     NEXT_EVENT_DATE: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string},\n *     RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES: {CAPACITY: string, LEGACY: string, DUAL_AXES: string, PARTIAL: string, HOURLY: string},\n *     RHSM_API_RESPONSE_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string, INSTANCE_HOURS: string,\n *     SOCKETS: string, MEASUREMENT: string, LAST_SEEN: string, NAME: string}}}\n */\nconst rhsmConstants = {\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTION_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES\n};\n\nexport {\n  rhsmConstants as default,\n  rhsmConstants,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES,\n  RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_HOSTS_DATA_TYPES,\n  RHSM_API_RESPONSE_HOSTS_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_SUBSCRIPTION_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_CATEGORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_BILLING_PROVIDER_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES\n};\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var map = {\n\t\"./authentication/authentication.js\": [\n\t\t67719\n\t],\n\t\"./authentication/authenticationContext.js\": [\n\t\t98944\n\t],\n\t\"./bannerMessages/bannerMessages.js\": [\n\t\t87585,\n\t\t1858,\n\t\t7585\n\t],\n\t\"./bannerMessages/bannerMessagesContext.js\": [\n\t\t31824,\n\t\t1858,\n\t\t1824\n\t],\n\t\"./chart/chart.js\": [\n\t\t60930\n\t],\n\t\"./chart/chartAxisLabel.js\": [\n\t\t76395\n\t],\n\t\"./chart/chartContext.js\": [\n\t\t98326\n\t],\n\t\"./chart/chartElements.js\": [\n\t\t54096\n\t],\n\t\"./chart/chartHelpers.js\": [\n\t\t61026\n\t],\n\t\"./chart/chartIcon.js\": [\n\t\t1138\n\t],\n\t\"./chart/chartLegend.js\": [\n\t\t52902\n\t],\n\t\"./chart/chartTooltip.js\": [\n\t\t78213\n\t],\n\t\"./form/checkbox.js\": [\n\t\t34467,\n\t\t4291,\n\t\t7235,\n\t\t2181,\n\t\t1302\n\t],\n\t\"./form/formHelpers.js\": [\n\t\t44044\n\t],\n\t\"./form/formState.js\": [\n\t\t90384,\n\t\t384\n\t],\n\t\"./form/select.js\": [\n\t\t49844\n\t],\n\t\"./form/textInput.js\": [\n\t\t18710,\n\t\t8710\n\t],\n\t\"./graphCard/graphCard.js\": [\n\t\t10608,\n\t\t1858,\n\t\t136,\n\t\t1799,\n\t\t5925\n\t],\n\t\"./graphCard/graphCardChart.js\": [\n\t\t91799,\n\t\t1858,\n\t\t136,\n\t\t1799,\n\t\t1339\n\t],\n\t\"./graphCard/graphCardChartLegend.js\": [\n\t\t24339,\n\t\t1858,\n\t\t136,\n\t\t4339\n\t],\n\t\"./graphCard/graphCardChartTitleTooltip.js\": [\n\t\t99171,\n\t\t1858,\n\t\t136,\n\t\t939\n\t],\n\t\"./graphCard/graphCardChartTooltip.js\": [\n\t\t44024,\n\t\t1858,\n\t\t4024\n\t],\n\t\"./graphCard/graphCardContext.js\": [\n\t\t25394,\n\t\t1858,\n\t\t136,\n\t\t5394\n\t],\n\t\"./graphCard/graphCardHelpers.js\": [\n\t\t78139\n\t],\n\t\"./graphCard/graphCardMetricTotals.js\": [\n\t\t29407,\n\t\t1858,\n\t\t136,\n\t\t9407\n\t],\n\t\"./i18n/i18n.js\": [\n\t\t83109\n\t],\n\t\"./i18n/i18nHelpers.js\": [\n\t\t32643\n\t],\n\t\"./inventoryCard/inventoryCard.js\": [\n\t\t57276,\n\t\t1858,\n\t\t5242,\n\t\t7276,\n\t\t2085\n\t],\n\t\"./inventoryCard/inventoryCardContext.js\": [\n\t\t42896,\n\t\t1858,\n\t\t2896\n\t],\n\t\"./inventoryCard/inventoryCardHelpers.js\": [\n\t\t12243,\n\t\t2243\n\t],\n\t\"./inventoryCard/inventoryCardHosts.js\": [\n\t\t83341,\n\t\t1858,\n\t\t5242,\n\t\t7276,\n\t\t895\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptions.js\": [\n\t\t16696,\n\t\t1858,\n\t\t5242,\n\t\t7276,\n\t\t9222\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptionsContext.js\": [\n\t\t62881,\n\t\t1858,\n\t\t2881\n\t],\n\t\"./inventoryGuests/inventoryGuests.js\": [\n\t\t15242,\n\t\t1858,\n\t\t5242\n\t],\n\t\"./inventoryGuests/inventoryGuestsContext.js\": [\n\t\t32293,\n\t\t1858,\n\t\t2293\n\t],\n\t\"./inventoryTabs/inventoryTab.js\": [\n\t\t80931,\n\t\t931\n\t],\n\t\"./inventoryTabs/inventoryTabs.js\": [\n\t\t69051,\n\t\t1858,\n\t\t9051\n\t],\n\t\"./loader/loader.js\": [\n\t\t1797\n\t],\n\t\"./messageView/messageView.js\": [\n\t\t79719\n\t],\n\t\"./minHeight/minHeight.js\": [\n\t\t91339,\n\t\t353\n\t],\n\t\"./optinView/optinView.js\": [\n\t\t649\n\t],\n\t\"./pageLayout/pageColumns.js\": [\n\t\t5937\n\t],\n\t\"./pageLayout/pageHeader.js\": [\n\t\t58816\n\t],\n\t\"./pageLayout/pageLayout.js\": [\n\t\t52422\n\t],\n\t\"./pageLayout/pageMessages.js\": [\n\t\t54803\n\t],\n\t\"./pageLayout/pageSection.js\": [\n\t\t99781\n\t],\n\t\"./pageLayout/pageToolbar.js\": [\n\t\t89484\n\t],\n\t\"./pagination/pagination.js\": [\n\t\t68900,\n\t\t8900\n\t],\n\t\"./pagination/paginationHelpers.js\": [\n\t\t65020,\n\t\t5020\n\t],\n\t\"./productView/productView.js\": [\n\t\t29175,\n\t\t1858,\n\t\t136,\n\t\t5242,\n\t\t7276,\n\t\t1799,\n\t\t3557\n\t],\n\t\"./productView/productViewContext.js\": [\n\t\t51858,\n\t\t1858\n\t],\n\t\"./productView/productViewMissing.js\": [\n\t\t91233,\n\t\t1233\n\t],\n\t\"./router/index.js\": [\n\t\t94976\n\t],\n\t\"./router/router.js\": [\n\t\t27097\n\t],\n\t\"./router/routerContext.js\": [\n\t\t43301\n\t],\n\t\"./router/routerHelpers.js\": [\n\t\t97712\n\t],\n\t\"./table/table.js\": [\n\t\t78697\n\t],\n\t\"./table/tableEmpty.js\": [\n\t\t30817\n\t],\n\t\"./table/tableSkeleton.js\": [\n\t\t62540\n\t],\n\t\"./tabs/tabs.js\": [\n\t\t70031,\n\t\t31\n\t],\n\t\"./toolbar/toolbar.js\": [\n\t\t92227,\n\t\t1858,\n\t\t136,\n\t\t2227\n\t],\n\t\"./toolbar/toolbarContext.js\": [\n\t\t83280,\n\t\t1858,\n\t\t136,\n\t\t3280\n\t],\n\t\"./toolbar/toolbarFieldArchitecture.js\": [\n\t\t32948,\n\t\t1858,\n\t\t2948\n\t],\n\t\"./toolbar/toolbarFieldBillingProvider.js\": [\n\t\t31663,\n\t\t1858,\n\t\t1663\n\t],\n\t\"./toolbar/toolbarFieldCategory.js\": [\n\t\t93597,\n\t\t1858,\n\t\t3597\n\t],\n\t\"./toolbar/toolbarFieldDisplayName.js\": [\n\t\t89517,\n\t\t1858,\n\t\t9517\n\t],\n\t\"./toolbar/toolbarFieldGranularity.js\": [\n\t\t2738,\n\t\t1858,\n\t\t2738\n\t],\n\t\"./toolbar/toolbarFieldRangedMonthly.js\": [\n\t\t65876,\n\t\t1858,\n\t\t5876\n\t],\n\t\"./toolbar/toolbarFieldSelectCategory.js\": [\n\t\t70136,\n\t\t1858,\n\t\t136\n\t],\n\t\"./toolbar/toolbarFieldSla.js\": [\n\t\t33267,\n\t\t1858,\n\t\t3267\n\t],\n\t\"./toolbar/toolbarFieldUom.js\": [\n\t\t74097,\n\t\t1858,\n\t\t4097\n\t],\n\t\"./toolbar/toolbarFieldUsage.js\": [\n\t\t49928,\n\t\t1858,\n\t\t9928\n\t],\n\t\"./toolbar/toolbarFieldVariant.js\": [\n\t\t22622,\n\t\t1858,\n\t\t2622\n\t],\n\t\"./tooltip/tooltip.js\": [\n\t\t3969\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 58908;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./product.openshiftContainer.js\": 74925,\n\t\"./product.openshiftDedicated.js\": 1816,\n\t\"./product.openshiftMetrics.js\": 33092,\n\t\"./product.rhacs.js\": 22624,\n\t\"./product.rhel.js\": 79326,\n\t\"./product.rhods.js\": 43016,\n\t\"./product.rhosak.js\": 85464,\n\t\"./product.satellite.js\": 36272\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 25264;"],"names":["module","exports","App","_ref","getLocale","useAliasDispatch","useDispatch","useAliasSelector","useSelector","dispatch","locale","_ref2","_user$locale","user","data","value","platformNotifications","useMount","helpers","React","NotificationsPortal","I18n","Authentication","Router","defaultProps","reduxActions","storeHooks","memo","func","_ref11","arguments","length","undefined","_ref11$cacheLimit","cacheLimit","ized","cache","_len","args","Array","_key","key","JSON","stringify","concat","map","arg","toString","keyIndex","indexOf","result","call","apply","unshift","noop","Function","prototype","noopPromise","Promise","resolve","objFreeze","obj","Object","freeze","oIsFunction","hasOwnProp","hasOwnProperty","getOwnPropertyNames","forEach","prop","isFrozen","setImmutableData","PROD_MODE","process","UI_WINDOW_ID","aggregatedError","errors","message","err","_ref$name","name","_window","window","AggregateError","Error","isArray","isEmulated","browserExpose","options","_ref12","_ref12$limit","limit","_ref12$id","id","_objectSpread","generateHash","anyValue","_ref2$method","method","cryptoSha1","_isPlainObject","entries","sort","_ref3","_ref4","a","_slicedToArray","b","localeCompare","_ref7","_ref8","generateId","prefix","Math","ceil","random","isDate","date","isPromise","test","numberDisplay","Number","isNaN","numbro","DEV_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_NOTIFICATIONS","UI_DISABLED_TABLE","UI_DISABLED_TABLE_HOSTS","UI_DISABLED_TABLE_INSTANCES","UI_DISABLED_TABLE_SUBSCRIPTIONS","UI_DISABLED_TOOLBAR","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_LEARN_MORE","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_LOGGER_FILE","UI_NAME","UI_PATH","UI_VERSION","getCurrentDate","moment","toDate","REACT_APP_DEBUG_DEFAULT_DATETIME","setRangedDateTime","subtract","measurement","_ref$endOfMeasurement","endOfMeasurement","startDate","startOf","endDate","endOf","currentDateTime","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","rangedYearDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedMonthDateTime","month","currentYear","parseInt","year","_rangedYearDateTime","keyDateTimeRanges","listDateTimeRanges","startDateUpdated","endDateUpdated","format","dateTime","titleYear","title","titleIndex","isNextYear","_title","toLowerCase","add","translate","context","push","reverse","isCurrent","current","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","timestampTimeFormats","timeLong","yearTimeLong","timeShort","yearTimeShort","timestampUTCTimeFormats","downloadData","_ref$data","_ref$fileName","fileName","_ref$fileType","fileType","reject","document","navigator","URL","blob","Blob","type","msSaveBlob","anchorTag","createElement","href","createObjectURL","style","display","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","error","debugLog","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_window2","sessionStorage","wrap","_context","prev","next","replace","parse","getItem","t0","stop","appName","children","isDisabled","t","_useAliasGetAuthoriza","useAliasGetAuthorization","useGetAuthorization","pending","_useAliasGetAuthoriza2","_data$authorized","authorized","errorCodes","errorStatus","isAuthorized","AuthenticationContext","MessageView","Maintenance","description","pageTitle","icon","BinocularsIcon","includes","rhsmConstants","OptinView","NotAuthorized","serviceName","routerHelpers","DEFAULT_CONTEXT","useAuthContext","useContext","_responses$id","_responses$id$errors","_ref$appName","_ref$authorizeUser","authorizeUser","_ref$hideGlobalFilter","hideGlobalFilter","_ref$onNavigation","onNavigation","_ref$useChrome","useChrome","useAliasChrome","_ref$useDispatch","_ref$useNavigate","useNavigate","useAliasNavigate","routerContext","_ref$useSelectorsResp","useSelectorsResponse","useAliasSelectorsResponse","_useState","useState","_useState2","unregister","setUnregister","navigate","_useAliasChrome","_useAliasChrome$updat","updateDocumentTitle","_useAliasSelectorsRes","selector","auth","_user$errors","fulfilled","responses","event","navId","useUnmount","_ref6","_ref7$","_ref7$2","app","status","useSession","_ref8$useAuthContext","useAliasAuthContext","session","Chart","chartLegend","chartTooltip","dataSets","padding","themeColor","xAxisChartLabel","yAxisChartLabel","xAxisFixLabelOverlap","xAxisLabelIncrement","xAxisTickFormat","yAxisTickFormat","xValueFormat","yValueFormat","setContext","_useState3","_useState4","dataSetsToggle","setDataSetsToggle","containerRef","useRef","tooltipRef","chartWidth","target","width","height","dimensions","setDimensions","useEffect","isElementResize","ResizeObserver","element","removeObserver","handler","_ref$clientHeight","clientHeight","_ref$clientWidth","clientWidth","_ref$innerHeight","innerHeight","_ref$innerWidth","innerWidth","resizeObserver","observe","unobserve","addEventListener","removeEventListener","useResizeObserver","toggledDataSets","tooltipDataSetLookUp","_chartHelpers$generat","maxX","maxY","individualMaxY","_chartHelpers$generat3","xAxisProps","yAxisProps","isMultiYAxis","chartElementsProps","_chartHelpers$generat4","domain","domainPadding","chartSettings","filter","chartHelpers","content","chartDomain","hasData","tickValues","bottom","left","right","top","updatedSettings","chartContainerRef","chartTooltipRef","ChartContext","className","ref","ChartElements","ChartLegend","chartAxisLabel","axis","_ref$index","index","x","y","text","xmlns","useChartContext","useToggleData","_ref$useChartContext","useAliasChartContext","_useAliasChartContext","_useAliasChartContext2","contextDataSetsToggle","_contextDataSetsToggl","onHide","useCallback","prevState","_defineProperty","onRevert","onToggle","updatedToggle","getIsToggled","chartElements","stackedChartElements","chartTypeDefaults","_useChartContext","_useChartContext$char","_chartSettings$xAxisP","_chartSettings$yAxisP","containerComponent","ChartContainer","xAxis","yAxis","_Object$values$sort","VictoryVoronoiCursorContainer","createContainer","TooltipLabelComponent","cursorDimension","voronoiDimension","labels","labelComponent","ChartCursorTooltip","dx","dy","centerOffset","flyoutStyle","fill","stroke","voronoiPadding","values","mouseFollowTooltips","keys","updatedXAxisProps","label","AxisLabelComponent","axisLabelComponent","ChartAxis","assign","animate","axisProps","updatedAxisProps","_AxisLabelComponent","orientation","setChartElement","chartType","props","ChartTypeVariant","Component","component","_objectWithoutProperties","_excluded","elements","stackedElements","duration","ChartStack","_chartTypeDefaults","ChartArea","onLoad","interpolation","ChartLine","ChartThreshold","area","line","threshold","generateMaxXY","_ref$dataSets","individualDataSetsMaxY","combinedDataSetMaxX","combinedDataSetsMaxY","isStacked","max","_toConsumableArray","_value$y","dataSetMaxY","_value$y2","generateDomains","_ref5","_ref5$padding","updatedChartDomain","updatedPadding","generatedDomain","floored","pow","floor","log10","generateElementsProps","_ref6$dataSets","_ref7$chartTypeVarian","chartTypeVariant","elementsById","stackedElementsById","dataSet","strokeDasharray","strokeWidth","dataColorStroke","chartElementProps","themeVariant","datum","xValue","yValue","isMultiAxis","updatedProps","generateTooltipData","_dataSets$","_ref8$content","_ref8$dataSets","itemsByKey","_data$data","color","_cloneDeep","mockDatum","tooltip","generateXAxisProps","_ref9","_ref9$dataSet","_ref9$xAxisPropDefaul","xAxisPropDefaults","_dataSet$data","reduce","acc","tickFormat","tick","_data$tick","xAxisLabel","tickIndex","previousItem","nextItem","item","generateYAxisProps","_ref10","_ref10$dataSets","_ref10$yAxisPropDefau","yAxisPropDefaults","tickLabels","updatedMaxY","generateAxisProps","xAxisDataSet","_ref12$dataSets","_ref12$individualMaxY","_ref12$xAxisFixLabelO","_ref12$xAxisLabelIncr","fixLabelOverlap","dependentAxis","showGrid","yAxisDataSets","yAxisUseDataSet","xAxisUseDataSet","slice","getSize","size","parseFloat","ChartIcon","symbol","svgProps","iconProps","fontProps","fontSize","emSvgSize","viewBox","role","x1","y1","x2","y2","EyeIcon","EyeSlashIcon","SquareIcon","setIcon","_useToggleData","_chartSettings$paddin","legendProps","chart","hide","revert","toggle","isToggled","marginLeft","marginRight","_ref$chartSettings","_ref$chartContainerRe","_ref$chartTooltipRef","_ref$minChartWidth","minChartWidth","getXCoordinate","tooltipWidth","_ref2$padding","_ref2$minWidth","minWidth","getYCoordinate","tooltipHeight","_ref3$padding","_ref3$minWidth","updatedMultiplier","heightMultiplier","tailPosition","_ref4$padding","_ref4$minWidth","_tooltipDataSetLookUp","_containerRef$current","_containerRef$current2","_tooltipRef$current","_ref5$datum","_chartSettings$toolti","containerBounds","querySelector","getBoundingClientRect","tooltipBounds","isOutsideGraphBottom","isOutsideGraphLeft","isOutsideGraphRight","isOutsideGraphTop","updatedClassName","createMockEvent","persistEvent","_event","checked","_event$currentTarget","currentTarget","keyCode","_event$persist","persist","_event$target","doesNotHaveMinimumCharacters","characters","formHelpers","SplitButtonVariant","action","checkbox","ButtonVariant","PfButtonVariant","SelectButtonVariant","SelectDirection","DropdownDirection","SelectPosition","DropdownPosition","formatOptions","updateSelected","_ref$selectField","selectField","selectedOptions","variant","_selectField$current","domElement","dataAttributes","updatedOptions","isSelectedOptionsStringNumber","activateOptions","option","isSelected","convertedOption","textContent","_findIndex","find","activeOption","selected","SelectVariant","opt","firstChild","setAttribute","formatSelectProps","_memoize","placeholder","hasPlaceholderStyle","formatButtonProps","buttonVariant","onSplitButton","splitButtonCopy","splitButtonVariant","buttonVariantPropLookup","default","toggleVariant","plain","isPlain","toggleIndicator","primary","secondary","isText","splitButtonVariantPropLookup","splitButtonItems","DropdownToggleAction","onClick","DropdownToggleCheckbox","Select","ariaLabel","direction","isDropdownButton","isFlipEnabled","isInline","isToggleText","maxHeight","onSelect","baseOptions","position","toggleIcon","_excluded2","isExpanded","setIsExpanded","setOptions","_useState5","_useState6","setSelected","useShallowCompareEffect","_formatOptions","updatedSelected","expanded","onDropdownSelect","titleSelection","optionsIndex","findIndex","_event$currentTarget$","getAttribute","innerText","mockUpdatedOptions","mockTarget","selectedIndex","mockEvent","Dropdown","isOpen","DropdownToggle","dropdownItems","DropdownItem","btoa","updatedButtonProps","formatButtonParentProps","PfSelect","down","selections","placeholderText","PfSelectOption","generateChartIds","isCapacity","metric","productId","_ref$query","query","metricCategory","RHSM_API_QUERY_SET_TYPES","generateIsToolbarFilter","_ref2$query","generateChartSettings","_ref3$filters","filters","_ref3$settings","settings","graphCardSettings","filtersSettings","combinedSettings","filterSettings","isMultiMetric","isFirst","isLast","remainingCombinedSettings","updatedChartType","isThreshold","baseFilterSettings","isToolbarFilter","chartColorGreenDark","_remainingCombinedSet","_remainingCombinedSet2","isMetricDisplay","cards","isStandalone","groupMetric","Set","metrics","stringId","_filtersSettings","currentLastFiltersSettingsEntry","_filtersSettings2","lastFiltersSettingsEntry","from","groupedMetrics","groupedMetricsSettings","remainingSettings","_excluded3","metricFilter","getChartXAxisLabelIncrement","getTooltipDate","momentDate","callback","previousDate","formattedDate","isNewYear","_helpers$numberDispla","_helpers$numberDispla2","average","mantissa","trimMantissa","lowPrecision","toUpperCase","generateExtendedChartSettings","graphCardHelpers","fallbackLng","loadPath","initialized","setInitialized","i18next","XHR","use","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","e","EMPTY_CONTEXT","noopTranslate","components","updatedKey","updatedValue","updatedComponents","splitContext","_ref$emptyContextValu","emptyContextValue","split","parseContext","translateKey","_ref2$emptyContextVal","_ref2$splitContext","aliasSplitContext","updatedTranslateKey","updatedContext","tempContext","flat","lastContext","pop","join","parseTranslateKey","setI18nTestElement","defaultTestId","testId","updatedDataTest","TestElement","_ref7$i18next","aliasI18next","_ref7$isDebug","isDebug","_ref7$noopTranslate","aliasNoopTranslate","_ref7$parseContext","aliasParseContext","_ref7$parseTranslateK","aliasParseTranslateKey","updatedValues","baseUpdatedTranslateKey","_aliasParseContext","parsedContext","parsedAgainTranslateKey","store","Trans","i18nKey","translateComponent","_ref8$i18next","_ref8$noopTranslate","withTranslation","i18n","displayName","i18nHelpers","Loader","skeletonProps","tableProps","Skeleton","SkeletonSize","TableSkeleton","PageLayout","PageHeader","Spinner","PageSection","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","disableButton","updateAccountOptIn","useAliasSession","optin","Card","Flex","flex","FlexItem","CardTitle","CardBody","CardFooter","Form","ActionGroup","Button","alignSelf","CardHeader","CardHeaderMain","Brand","srcSet","graphPng4x","graphPng2x","src","alt","PageColumns","alignItems","sm","spaceItems","child","grow","productLabel","RcsPageHeader","justifyContent","PageHeaderTitle","ExternalLinkAltIcon","iconPosition","PageMessages","PageToolbar","Main","Section","redirectRoute","routes","useAliasSetRouteDetail","useSetRouteDetail","updatedRoutes","View","Route","path","fallback","Routes","redirect","Navigate","to","useLocation","_ref$useLocation","useAliasLocation","useLocationRRD","_ref$windowLocation","windowLocation","aliasWindowLocation","location","updatedLocation","setUpdatedLocation","_id","hash","search","_ref2$useDispatch","_ref2$useLocation","_ref2$useNavigate","useRRDNavigate","_useAliasLocation","_useAliasLocation$sea","_useAliasLocation$has","pathLocation","pathName","pathname","firstMatch","productPath","reduxTypes","config","useRouteDetail","_ref3$t","_ref3$useChrome","_ref3$useSelector","_useAliasSelector","_view$product","view","product","_useAliasSelector2","detail","setDetail","_passed","_routerHelpers$getRou2","allConfigs","configs","isClosest","productGroup","errorRoute","productConfig","useSearchParams","_ref5$useSearchParams","useAliasSearchParams","useRRDSearchParams","_ref5$useLocation","_useAliasLocation2","_useAliasSearchParams","_useAliasSearchParams2","setAliasSearchParams","setSearchParams","updatedQuery","_ref6$isMerged","isMerged","_ref6$currentSearch","currentSearch","updatedSearch","_ref7$useSelector","_ref7$useDispatch","_ref7$windowLocation","_useAliasSelector3","_view$product2","_useAliasSelector4","updatedPath","dynamicBaseName","_ref$pathName","applicationName","dynamicBasePath","_ref2$pathName","_ref2$appName","routesConfig","disabled","getRouteConfigByPath","_updatedPathName$toLo","_updatedPathName$toLo2","_updatedPathName$toLo3","_updatedPathName$toLo4","_updatedPathName$toLo5","_updatedPathName$toLo6","_updatedPathName$toLo7","_ref4$configs","_configs","byGroup","byAliasGroupProductPathIds","byProductIdConfigs","updatedPathName","trimmedPathName","RegExp","focusedStr","_trimmedPathName$spli","closestStr","closest","configsByGroup","importView","p","parseSearchParams","currentPathAndOrSearch","decodeURIComponent","URLSearchParams","parsedSearch","param","v","_v$split","_v$split2","pathJoin","paths","hasLead","Table","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","state","isCollapsible","isSortable","sortBy","updatedColumnHeaders","updatedRows","onCollapse","fullWidth","cells","expandedContent","setState","onSort","_ref2$data","_this$state","updatedIndex","i","_x","_x2","_data$column","_data$column$header","column","header","_createClass","this","setRowData","prevProps","_this$props","columnHeaders","rows","customizer","valueA","valueB","_isEqualWith","_this$props2","updatedSort","rowObj","parent","cell","columnHeader","sortActive","sortDirection","tempColumnHeader","transforms","sortable","SortByDirection","_this2","_this$state2","_this$props3","borders","isHeader","summary","pfTableProps","emptyTable","TableEmpty","SearchIcon","PfTable","TableHeader","TableBody","Grid","GridItem","span","renderTable","tableHeading","PlatformEmptyTableWrapper","colCount","colWidth","rowCount","updatedHeader","cellWidth","updatedRowCount","Tooltip","isNoWrap","PfTooltip","distance","enableFlip","entryDelay","exitDelay","TooltipPosition","productConfigs","require","console","warn","sortedProductConfigs","viewIdConfigs","productAliases","productIds","productIdConfigs","productPathConfigs","grouped","groupIdConfigs","groupedGroupIds","groupedViewIds","_grouped$productGroup","_grouped$productId","_grouped$productLabel","_grouped$productPath","_productPathConfigs$p","_groupIdConfigs$produ","_groupedGroupIds$prod","_viewIdConfigs$viewId","_groupedViewIds$viewI","aliases","productArchitectures","productVariants","viewId","alias","_productAliases$alias","_grouped$alias","architecture","_productAliases$archi","_grouped$architecture","_productAliases$varia","_grouped$variant","byAlias","byGroupIdConfigs","byGroupIds","byProductPathConfigs","byProductIds","byViewIdConfigs","byViewIds","products","sortedConfigs","activateOnError","RHSM_API_PATH_PRODUCT_TYPES","productDisplay","DISPLAY_TYPES","productContextFilterUom","_query","RHSM_API_QUERY_UOM_TYPES","toISOString","graphTallyQuery","inventoryHostsQuery","_inventoryHostsQuery","INVENTORY_SORT_TYPES","SORT_DIRECTION_TYPES","inventorySubscriptionsQuery","_inventorySubscriptio","SUBSCRIPTIONS_SORT_TYPES","initialOption","initialGraphFilters","RHSM_API_PATH_METRIC_TYPES","isOptional","chartColorBlueLight","chartColorBlueDark","initialGraphSettings","isCardTitleDescription","actions","initialGuestsFilters","inventoryId","inventory","_data$lastSeen","_data$lastSeen2","lastSeen","DateFormat","initialInventoryFilters","INVENTORY_TYPES","_ref2$INVENTORY_TYPES","_ref2$INVENTORY_TYPES2","_ref2$INVENTORY_TYPES3","numberOfGuests","updatedDisplayName","count","PfLabel","isWrappable","initialInventorySettings","initialSubscriptionsInventoryFilters","SUBSCRIPTIONS_INVENTORY_TYPES","uom","hasInfiniteQuantity","totalCapacity","nextEventDate","initialToolbarFilters","chartColorCyanLight","chartColorCyanDark","displayContent","_ref2$meta","meta","totalMonthlyValue","total","_ref4$INVENTORY_TYPES","_ref4$INVENTORY_TYPES2","_ref4$INVENTORY_TYPES3","coreHours","toFixed","instanceHours","RHSM_API_QUERY_INVENTORY_SORT_TYPES","RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES","metricId","dailyHasData","dailyValue","footer","dailyDate","_helpers$numberDispla3","_helpers$numberDispla4","monthlyHasData","monthlyValue","monthlyDate","_helpers$numberDispla7","_helpers$numberDispla8","_helpers$numberDispla5","_helpers$numberDispla6","_ref9$INVENTORY_TYPES","_ref9$INVENTORY_TYPES2","instanceId","provider","_helpers$numberDispla9","_ref13","_ref14","SUBSCRIPTIONS_INVENTORY_META_TYPES","_ref15","subscriptionType","_ref16","isSecondary","RHSM_API_PATH_PRODUCT_ARCHITECTURE_RHEL_TYPES","CATEGORY_TYPES","chartColorPurpleLight","chartColorPurpleDark","chartColorOrangeLight","chartColorOrangeDark","isDisabledLegendClick","cloudProvider","category","sockets","_ref11$INVENTORY_TYPE","_ref11$INVENTORY_TYPE2","_helpers$numberDispla10","_helpers$numberDispla11","_ref17","_ref18","_ref19","_ref20","RHSM_API_PATH_PRODUCT_VARIANT_SATELLITE_TYPES","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","schemas","initialValue","schema","generated","getSingleResponseFromResultArray","results","updatedResults","payload","response","updatedResultsMessage","firstErrorResponse","_get","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","getDateFromResults","getStatusFromResults","setStateProp","_options$state","_options$initialState","initialState","_options$reset","reset","singlePromiseDataResponseFromArray","reduxHelpers","HTTP_STATUS_RANGE","setApiQuery","setNormalizedResponse","parsedResponses","_ref$schema","customResponseEntry","customResponseValue","keyPrefix","_ref$keyCase","keyCase","updatedData","_setResponseSchemas","_setResponseSchemas2$","generatedSchema","parsedResponse","dataObj","_ref2$keyPrefix","keyCaseType","customEntry","_ref2$customValue","customValue","_ref2$update","update","updatedDataObj","generatedData","casedDataObjKey","dataObjKey","dataObjValue","_camelCase","_snakeCase","val","isInteger","generatedPromiseActionReducer","types","expandedTypes","subVal","_expandedTypes$filter","_expandedTypes$filter2","whichType","expandMetaTypes","updatedMeta","fromEntries","baseState","errorMessage","setId","_action$meta","_action$meta2","errorResponse","cancelled","getDataFromResults","useSelectors","selectors","_ref2$equality","equality","shallowEqual","_ref2$useSelector","useReactReduxSelector","updatedSelectors","selectorIds","multiSelector","createSelector","listMultiSelectorResponse","undefinedMultiSelectorResponse","idMultiSelectorResponse","_ref3$useSelectors","useAliasSelectors","customResponse","selectorResponse","isSelectorResponseArray","cancelledById","cancelledByList","cancelledDataById","cancelledDataByList","errorByList","errorById","errorDataById","errorDataByList","fulfilledByList","fulfilledById","fulfilledDataById","fulfilledDataByList","pendingByList","responsesById","responsesByList","dataById","dataByList","idList","updatedSelectorResponse","_cancelledByList","_errorByList","_fulfilledByList","updatedResponse","_errorByList$","isById","list","reactReduxHooks","dispatchEvent","_ref$useSelector","useSelectorsAllSettledResponse","_ref5$useSelectorsRes","baseResponse","useSelectorsAnyResponse","_ref7$useSelectorsRes","keyList","useSelectorsRaceResponse","_ref9$useSelectorsRes","_errorByList$2","reactRedux","camelCase","updatedObj","schemaResponse","casing","_ref5$convert","convert","_ref5$id","validate","_ref6$error","details","_ref7$context","serviceHelpers","passDataToCallback","timeoutFunctionCancel","clearTimer","_ref$timeout","timeout","_ref$errorMessage","timer","_","updatedFunc","sent","clearTimeout","abrupt","execFunction","race","finally","globalXhrTimeout","globalCancelTokens","globalResponseCache","LruCache","ttl","updateAgeOnGet","axiosServiceCall","_ref2$cancelledMessag","cancelledMessage","_ref2$responseCache","responseCache","_ref2$xhrTimeout","xhrTimeout","updatedConfig","responseTransformers","axiosInstance","cacheId","cancelTokensId","cachedResponse","emulateCallback","emulatedResponse","isSuccess","_args","cacheResponse","axios","exposeCacheId","cancel","cancelId","params","CancelToken","cancelToken","token","get","adapter","adapterConfig","transform","_axiosInstance$interc","successTransform","errorTransform","transformers","_serviceHelpers$passD","_serviceHelpers$passD2","interceptors","set","url","Joi","JoiBase","JoiDate","userResponseSchema","object","identity","is_org_admin","boolean","unknown","entitlements","is_entitled","permissionsItem","permission","string","optional","allow","resourceDefinitions","array","permissionsResponseSchema","items","platformSchemas","permissions","platformTransformers","_identity$platformCon","_entitlements$helpers","_ref$platformConstant","platformConstants","_ref$platformConstant2","isAdmin","isEntitled","_ref2$config","rbacConfig","_ref3$platformConstan","definitions","_ref5$","resource","operation","all","resources","RESOURCE_TYPES","OPERATION_TYPES","_updatedResponse$perm","resourcePermissions","_updatedResponse$perm2","_updatedResponse$perm3","_updatedResponse$perm4","res","op","getUser","_callee2","_options$schema","_options$transform","insights","_args2","_context2","_url","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","t1","_callee4","isHidden","_window3","_args4","_context4","platformServices","getUserPermissions","_url2","_options$schema2","_options$transform2","updatedAppName","platformMethod","USER_PERMISSION_TYPES","REACT_APP_DEBUG_PERMISSION_APP_ONE","REACT_APP_DEBUG_PERMISSION_APP_TWO","_callee3","userPermissions","allPermissions","_context3","on","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","platformTypes","serviceConfig","passedConfig","headers","serviceCall","errorItem","code","errorResponseSchema","linksSchema","metaResponseSchema","number","integer","_Joi$string","valid","capacityMetaSchema","metric_id","_Joi$string2","capacityItem","utc","has_data","has_infinite_quantity","capacityResponseSchema","links","guestsMetaSchema","guestsItem","inventory_id","display_name","subscription_manager_id","last_seen","guestsResponseSchema","hostsMetaSchema","hostsItem","cloud_provider","lowercase","hardware_type","measurement_type","number_of_guests","hostsResponseSchema","instancesMetaSchema","measurements","_Joi$string3","instancesItem","instance_id","billing_provider","billing_account_id","instancesResponseSchema","subscriptionsMetaSchema","subscription_type","_Joi$string4","subscriptionsItem","next_event_date","product_name","quantity","service_level","_Joi$string5","total_capacity","_Joi$string$lowercase","subscriptionsResponseSchema","tallyItem","tallyMetaSchema","has_cloudigrade_data","has_cloudigrade_mismatch","_Joi$string6","total_monthly","tallyResponseSchema","rhsmSchemas","capacity","guests","hosts","instances","subscriptions","tally","rhsmTransformers","_ref$rhsmConstants$RH","_ref$rhsmConstants$RH2","_objectSpread2","_HOSTS_DATA_TYPES$NUM","HOSTS_DATA_TYPES","_HOSTS_DATA_TYPES$SUB","subscriptionManagerId","_toPropertyKey","HOSTS_META_TYPES","_ref3$rhsmConstants$R","_ref3$rhsmConstants$R2","metaMeasurements","INSTANCES_META_TYPES","_objectSpread3","_INSTANCES_DATA_TYPES","INSTANCES_DATA_TYPES","_INSTANCES_DATA_TYPES2","_INSTANCES_DATA_TYPES3","tallyCapacity","_meta$TALLY_CAPACITY_","_meta$TALLY_CAPACITY_2","_meta$TALLY_CAPACITY_3","_isCapacity","_ref6$rhsmConstants$R","_ref6$rhsmConstants$R2","currentDate","currentDateStr","futureDateCount","TALLY_CAPACITY_DATA_TYPES","updatedDate","isCurrentDate","isFutureDate","diff","TALLY_CAPACITY_META_TYPES","cloudigradeHasMismatch","totalMonthlyDate","totalMonthlyHasData","rhsmHelpers","_params$RHSM_API_QUER","_params$RHSM_API_QUER2","updatedId","rhsmServices","getApiVersion","_options$cache","_options$cancel","getGraphCapacity","_options$cache4","_options$cancel4","getGraphReports","_options$cache2","_options$cancel2","getGraphTally","_options$cache3","_options$cancel3","getHostsInventory","_options$cache5","_options$cancel5","_options$schema3","_options$transform3","getHostsInventoryGuests","_options$cache6","_options$cancel6","_options$schema4","_options$transform4","getInstancesInventory","_options$cache7","_options$cancel7","_options$schema5","_options$transform5","getSubscriptionsInventory","_options$cache8","_options$cancel8","_options$schema6","_options$transform6","rhsmActions","getGraphMetrics","idMetric","_options$cancelId","multiMetric","multiDispatch","metricQuery","methodService","methodType","rhsmTypes","methodCancelId","generatedId","notifications","getMessageReports","userServices","defaultLang","cookieLang","Cookies","LocaleCode","deleteAccountOptIn","getAccountOptIn","userActions","userTypes","rejected","dismissable","autoDismiss","platform","rhsm","legend","reportCapacity","graphReducer","graphTypes","hostsInventory","hostsGuests","instancesInventory","subscriptionsInventory","tabs","inventoryReducer","inventoryTypes","report","messagesReducer","toolbarReducer","activeFilters","currentFilter","userReducer","appTypes","actionStatus","inventoryGuestsQuery","viewReducer","updateResetQueries","queryIds","queryId","productQuery","RHSM_API_QUERY_TYPES","updateClearQueries","updateClearGuestQuery","clearFilters","reducers","graph","messages","toolbar","reduxReducers","combineReducers","recordAction","_excluded4","_parsedItems","parsedItems","getActions","priorItem","updatedAction","removeUserIdentity","_obj$data","_obj$data$user","platformApiTypes","updatedPayload","sanitizeData","sanitizeActionHeaders","actionObj","timestamp","Date","now","setItem","browser","userAgent","toLocaleString","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","httpStatus","payloadConfig","range","statusMiddleware","promiseMiddleware","actionRecordMiddleware","version","notificationsMiddleware","createStore","applyMiddleware","STATUS_4XX","STATUS_5XX","SET_PRODUCT","SET_GRAPH_LEGEND","CLEAR_INVENTORY_GUESTS","SET_INVENTORY_TAB","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_GLOBAL_FILTER_HIDE","PLATFORM_ON_NAV","PLATFORM_USER_AUTH","queryTypes","SET_QUERY","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST","SET_QUERY_RESET_INVENTORY_LIST","SET_QUERY_RHSM_TYPES","_SET_QUERY_RHSM_TYPES","SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES","_SET_QUERY_RHSM_GUEST","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","_SET_QUERY_RHSM_HOSTS","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","_SET_QUERY_RHSM_SUBSC","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_LOCALE","USER_LOGOUT","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","GET_GRAPH_CAPACITY_RHSM","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_GRAPH_TALLY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","GET_INSTANCES_INVENTORY_RHSM","GET_MESSAGE_REPORTS_RHSM","GET_SUBSCRIPTIONS_INVENTORY_RHSM","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES","ALL","PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES","READ","WRITE","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES","SUBSCRIPTIONS","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","SATELLITE_CAPSULE","SATELLITE_SERVER","RHACS","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHODS","RHOSAK","OPENSHIFT","OPENSHIFT_METRICS","OPENSHIFT_DEDICATED_METRICS","SATELLITE","CORES","SOCKETS","CORE_SECONDS","INSTANCE_HOURS","STORAGE_GIBIBYTES","STORAGE_GIBIBYTE_MONTHS","TRANSFER_GIBIBYTES","RHSM_API_RESPONSE_META_TYPES","COUNT","PRODUCT","RHSM_API_RESPONSE_HOSTS_DATA_TYPES","CORE_HOURS","CLOUD_PROVIDER","DISPLAY_NAME","HARDWARE_TYPE","INVENTORY_ID","LAST_SEEN","MEASUREMENT_TYPE","NUMBER_OF_GUESTS","SUBSCRIPTION_MANAGER_ID","RHSM_API_RESPONSE_HOSTS_META_TYPES","RHSM_API_RESPONSE_INSTANCES_DATA_TYPES","BILLING_PROVIDER","BILLING_ACCOUNT_ID","CATEGORY","INSTANCE_ID","MEASUREMENTS","RHSM_API_RESPONSE_INSTANCES_META_TYPES","RHSM_API_RESPONSE_SUBSCRIPTIONS_DATA_TYPES","HAS_INFINITE_QUANTITY","NEXT_EVENT_DATE","PRODUCT_NAME","QUANTITY","SERVICE_LEVEL","TOTAL_CAPACITY","UOM","RHSM_API_RESPONSE_SUBSCRIPTIONS_META_TYPES","SUBSCRIPTION_TYPE","RHSM_API_RESPONSE_TALLY_CAPACITY_DATA_TYPES","DATE","VALUE","HAS_DATA","RHSM_API_RESPONSE_TALLY_CAPACITY_META_TYPES","HAS_CLOUDIGRADE_DATA","HAS_CLOUDIGRADE_MISMATCH","METRIC_ID","TOTAL_MONTHLY","RHSM_API_RESPONSE_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_RESPONSE_BILLING_PROVIDER_TYPES","RED_HAT","AWS","RHSM_API_RESPONSE_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_RESPONSE_UOM_TYPES","RHSM_API_RESPONSE_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_CATEGORY_TYPES","CLOUD","HYPERVISOR","PHYSICAL","VIRTUAL","RHSM_API_QUERY_GRANULARITY_TYPES","RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES","HARDWARE","MEASUREMENT","NAME","RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","NEXT_EVENT_TYPE","SKU","USAGE","RHSM_API_QUERY_BILLING_PROVIDER_TYPES","RHSM_API_QUERY_SLA_TYPES","RHSM_API_QUERY_USAGE_TYPES","RHSM_API_QUERY_SET_INVENTORY_TYPES","ARCHITECTURE","DIRECTION","END_DATE","LIMIT","OFFSET","SLA","SORT","START_DATE","VARIANT","RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES","GRANULARITY","RHSM_INTERNAL_PRODUCT_DISPLAY_TYPES","DUAL_AXES","HOURLY","LEGACY","PARTIAL","CAPACITY","RHSM_API_RESPONSE_DATA","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_ERRORS","RHSM_API_RESPONSE_ERRORS_TYPES","CODE","RHSM_API_RESPONSE_ERRORS_CODE_TYPES","GENERIC","OPTIN","RHSM_API_RESPONSE_SUBSCRIPTION_TYPES","ANNUAL","ON_DEMAND","webpackContext","req","webpackContextResolve","__webpack_require__","o","webpackAsyncContext","then","ids"],"sourceRoot":""}
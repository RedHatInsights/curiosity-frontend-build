{"version":3,"file":"js/5176.1667579685413.5317cabbb7a70c4a1fb2.js","mappings":"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","sources":["webpack:///./src/components/graphCard/graphCardChartLegend.js","webpack:///./src/components/graphCard/graphCardChartTooltip.js","webpack:///./src/components/graphCard/graphCardHelpers.js","webpack:///./src/components/minHeight/minHeight.js","webpack:///./node_modules/fast-shallow-equal/index.js","webpack:///./node_modules/react-use/esm/useShallowCompareEffect.js","webpack:///./node_modules/react-use/esm/useCustomCompareEffect.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { useMount } from 'react-use';\nimport { useProduct } from '../productView/productViewContext';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { ChartIcon } from '../chart/chartIcon';\n\n/**\n * A custom chart legend.\n *\n * @fires onClick\n * @param {object} props\n * @param {object} props.chart\n * @param {object} props.datum\n * @param {Function} props.t\n * @param {Function} props.useDispatch\n * @param {Function} props.useProduct\n * @param {Function} props.useSelectors\n * @returns {Node}\n */\nconst GraphCardChartLegend = ({\n  chart,\n  datum,\n  t,\n  useDispatch: useAliasDispatch,\n  useSelectors: useAliasSelectors,\n  useProduct: useAliasProduct\n}) => {\n  const { productLabel, viewId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n  const legendItems = useAliasSelectors(\n    datum.dataSets.map(\n      ({ id }) =>\n        ({ graph }) =>\n          graph.legend?.[`${viewId}-${id}`]\n    )\n  );\n\n  useMount(() => {\n    datum.dataSets.forEach(({ id }, index) => {\n      const checkIsToggled = legendItems?.[index] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  });\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  const onClick = id => {\n    const updatedToggle = chart.toggle(id);\n\n    dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      id: `${viewId}-${id}`,\n      value: updatedToggle\n    });\n  };\n\n  return (\n    <React.Fragment>\n      {datum.dataSets.map(({ id, isThreshold, stroke: color, data = [] }, index) => {\n        const isDisabled =\n          !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n        const labelContent = t(\n          [`curiosity-graph.label_${(isThreshold && 'threshold') || id}`, 'curiosity-graph.label_no'],\n          {\n            product: productLabel,\n            context: productLabel\n          }\n        );\n\n        const tooltipContent = t(\n          `curiosity-graph.legendTooltip${(isThreshold && '_threshold') || ''}_${id}`,\n          {\n            product: productLabel,\n            context: productLabel\n          },\n          [<span style={{ whiteSpace: 'nowrap' }} />]\n        );\n\n        const checkIsToggled = legendItems?.[index] || chart.isToggled(id);\n\n        const button = (\n          <Button\n            onClick={() => onClick(id)}\n            onKeyPress={() => onClick(id)}\n            className=\"curiosity-usage-graph__legend-item\"\n            tabIndex={0}\n            key={`curiosity-button-${id}`}\n            variant=\"link\"\n            component=\"a\"\n            isDisabled={isDisabled}\n            icon={\n              ((isDisabled || checkIsToggled) && <ChartIcon symbol=\"eyeSlash\" />) || (\n                <ChartIcon\n                  symbol={(isThreshold && 'dash') || 'square'}\n                  style={{ visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible' }}\n                  fill={color}\n                />\n              )\n            }\n          >\n            {labelContent}\n          </Button>\n        );\n\n        if (tooltipContent) {\n          return (\n            <Tooltip\n              key={`curiosity-tooltip-${id}`}\n              content={<p>{tooltipContent}</p>}\n              position={TooltipPosition.top}\n              enableFlip\n              distance={5}\n            >\n              {button}\n            </Tooltip>\n          );\n        }\n\n        return button;\n      })}\n    </React.Fragment>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum: object, useProduct: Function, t: Function, useDispatch: Function, useSelectors: Function, chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelectors: PropTypes.func,\n  useProduct: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, useProduct: Function, t: Function, useDispatch: Function, useSelectors: Function, chart: object}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelectors: storeHooks.reactRedux.useSelectors,\n  useProduct\n};\n\nexport { GraphCardChartLegend as default, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useProduct, useProductGraphTallyQuery } from '../productView/productViewContext';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\nimport { ChartTypeVariant } from '../chart/chart';\nimport { ChartIcon } from '../chart/chartIcon';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {Function} props.t\n * @param {Function} props.useProduct\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({\n  datum,\n  t,\n  useProduct: useAliasProduct,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery\n}) => {\n  const { productId, productLabel } = useAliasProduct();\n  const { [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: granularity } = useAliasProductGraphTallyQuery();\n\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey)\n    .reverse()\n    .forEach((key, index) => {\n      if (index === 0) {\n        header = getTooltipDate({\n          date: itemsByKey[key]?.data.date,\n          granularity\n        });\n      }\n\n      const tempDataFacet = {\n        color: itemsByKey[key]?.color\n      };\n\n      if (itemsByKey[key]?.chartType === ChartTypeVariant.threshold) {\n        let thresholdStringValue = itemsByKey[key]?.data.y ?? t('curiosity-graph.label_noData');\n\n        if (itemsByKey[key]?.data.hasInfinite) {\n          if (tempDataFacet.color) {\n            thresholdStringValue = (\n              <ChartIcon\n                symbol=\"infinity\"\n                fill=\"#ffffff\"\n                title={t('curiosity-graph.label_threshold', { context: 'infinite' })}\n              />\n            );\n          } else {\n            thresholdStringValue = t('curiosity-graph.label_threshold', { context: 'infinite' });\n          }\n        }\n\n        tempDataFacet.label = t('curiosity-graph.label_threshold');\n        tempDataFacet.value = thresholdStringValue;\n      } else {\n        const dataFactsValue =\n          (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.label_noData')) ||\n          itemsByKey[key]?.data.y ||\n          0;\n\n        tempDataFacet.label = t(`curiosity-graph.label_${key}`, { context: productId, product: productLabel });\n        tempDataFacet.value = dataFactsValue;\n      }\n\n      tempDataFacet.chartType = itemsByKey[key]?.chartType;\n      data.push(tempDataFacet);\n    });\n\n  return (\n    <div className=\"curiosity-usage-graph__tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => {\n              const updatedDataFacetValue =\n                (typeof dataFacet.value === 'number' &&\n                  !Number.isInteger(dataFacet.value) &&\n                  helpers\n                    .numberDisplay(dataFacet.value)\n                    ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n                    ?.toUpperCase()) ||\n                dataFacet.value;\n\n              return (\n                <tr key={`tooltip-${dataFacet.label}`}>\n                  <th>\n                    {dataFacet.chartType === ChartTypeVariant.threshold && (\n                      <ChartIcon size=\"sm\" symbol=\"dash\" fill={dataFacet.color || 'transparent'} />\n                    )}\n                    {dataFacet.chartType !== ChartTypeVariant.threshold && (\n                      <ChartIcon size=\"sm\" fill={dataFacet.color || 'transparent'} />\n                    )}{' '}\n                    {dataFacet.label}\n                  </th>\n                  <td>{updatedDataFacetValue}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.label_noData', { context: 'error' })) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum: object, useProduct: Function, useProductGraphTallyQuery: Function, t: Function}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        chartType: PropTypes.string,\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  t: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductGraphTallyQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, useProduct: Function, useProductGraphTallyQuery: Function, t: Function}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  t: translate,\n  useProduct,\n  useProductGraphTallyQuery\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import moment from 'moment';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { ChartTypeVariant } from '../chart/chart';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../../common';\n\n/**\n * Update chart/graph filters with core settings and styling.\n *\n * @param {Array} filters\n * @param {object} graphCardSettings\n * @returns {{standaloneFilters: Array, groupedFilters: object}}\n */\nconst generateChartSettings = (filters = [], graphCardSettings = {}) => {\n  const standaloneFiltersSettings = [];\n  const groupedFiltersSettings = [];\n\n  filters.forEach(({ id, isStandalone = false, ...filterSettings }) => {\n    if (!id) {\n      return;\n    }\n\n    const isThreshold = filterSettings?.chartType === ChartTypeVariant.threshold;\n    const baseFilterSettings = {\n      id,\n      isStacked: !isThreshold,\n      isStandalone,\n      isThreshold,\n      isCapacity: isThreshold,\n      strokeWidth: 2\n    };\n\n    if (isThreshold) {\n      baseFilterSettings.stroke = chartColorGreenDark.value;\n      baseFilterSettings.strokeDasharray = '4,3';\n      baseFilterSettings.strokeWidth = 3;\n    }\n\n    if (isStandalone) {\n      standaloneFiltersSettings.push({\n        settings: {\n          padding: {\n            bottom: 75,\n            left: 75,\n            right: 45,\n            top: 45\n          },\n          ...graphCardSettings,\n          isStandalone: true,\n          metric: {\n            ...baseFilterSettings,\n            ...filterSettings\n          },\n          metrics: [\n            {\n              ...baseFilterSettings,\n              ...filterSettings\n            }\n          ]\n        }\n      });\n    } else {\n      groupedFiltersSettings.push({\n        ...baseFilterSettings,\n        ...filterSettings\n      });\n    }\n  });\n\n  const updatedGroupedFiltersSettings =\n    (groupedFiltersSettings.length && {\n      settings: {\n        ...graphCardSettings,\n        isStandalone: false,\n        metric: undefined,\n        metrics: groupedFiltersSettings\n      }\n    }) ||\n    undefined;\n\n  return {\n    standaloneFiltersSettings,\n    groupedFiltersSettings: updatedGroupedFiltersSettings\n  };\n};\n\n/**\n * Returns x axis ticks/intervals array for the xAxisTickInterval\n *\n * @param {string} granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {number}\n */\nconst getChartXAxisLabelIncrement = granularity => {\n  switch (granularity) {\n    case GRANULARITY_TYPES.DAILY:\n      return 5;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.MONTHLY:\n      return 2;\n    case GRANULARITY_TYPES.QUARTERLY:\n    default:\n      return 1;\n  }\n};\n\n/**\n * Return a formatted date string.\n *\n * @param {object} params\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @returns {string}\n */\nconst getTooltipDate = ({ date, granularity } = {}) => {\n  const momentDate = moment.utc(date);\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      return `${momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)} - ${momentDate\n        .add(1, 'quarter')\n        .format(dateHelpers.timestampQuarterFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.MONTHLY:\n      return momentDate.format(dateHelpers.timestampMonthFormats.yearLong);\n\n    case GRANULARITY_TYPES.WEEKLY:\n      return `${momentDate.format(dateHelpers.timestampDayFormats.short)} - ${momentDate\n        .add(1, 'week')\n        .format(dateHelpers.timestampDayFormats.yearShort)}`;\n\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return momentDate.format(dateHelpers.timestampDayFormats.long);\n  }\n};\n\n/**\n * Format x axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {Date} params.date\n * @param {string} params.granularity See enum of RHSM_API_QUERY_GRANULARITY_TYPES\n * @param {number|string} params.tick\n * @param {Date} params.previousDate\n * @returns {string|undefined}\n */\nconst xAxisTickFormat = ({ callback, date, granularity, tick, previousDate } = {}) => {\n  if (!date || !granularity) {\n    return undefined;\n  }\n\n  if (callback) {\n    return callback({ callback, date, granularity, tick, previousDate });\n  }\n\n  const momentDate = moment.utc(date);\n  const isNewYear =\n    tick !== 0 && Number.parseInt(momentDate.year(), 10) !== Number.parseInt(moment.utc(previousDate).year(), 10);\n  let formattedDate;\n\n  switch (granularity) {\n    case GRANULARITY_TYPES.QUARTERLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampQuarterFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampQuarterFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.MONTHLY:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampMonthFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampMonthFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s/, '\\n');\n      break;\n    case GRANULARITY_TYPES.WEEKLY:\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      formattedDate = isNewYear\n        ? momentDate.format(dateHelpers.timestampDayFormats.yearShort)\n        : momentDate.format(dateHelpers.timestampDayFormats.short);\n\n      formattedDate = formattedDate.replace(/\\s(\\d{4})$/, '\\n$1');\n      break;\n  }\n\n  return formattedDate;\n};\n\n/**\n * Format y axis ticks.\n *\n * @param {object} params\n * @param {Function} params.callback\n * @param {number|string} params.tick\n * @returns {string}\n */\nconst yAxisTickFormat = ({ callback, tick } = {}) => {\n  if (callback) {\n    return callback({ tick });\n  }\n\n  return helpers\n    .numberDisplay(tick)\n    ?.format({\n      average: true,\n      mantissa: 1,\n      trimMantissa: true,\n      lowPrecision: false\n    })\n    ?.toUpperCase();\n};\n\n/**\n * Generate base chart component props.\n *\n * @param {object} params\n * @param {object} params.settings\n * @param {string} params.granularity\n * @returns {object}\n */\nconst generateExtendedChartSettings = ({ settings, granularity } = {}) => ({\n  ...settings,\n  xAxisLabelIncrement: getChartXAxisLabelIncrement(granularity),\n  xAxisTickFormat: ({ item, previousItem, tick }) =>\n    xAxisTickFormat({\n      callback: settings?.xAxisTickFormat,\n      tick,\n      date: item.date,\n      previousDate: previousItem.date,\n      granularity\n    }),\n  yAxisTickFormat: ({ tick }) =>\n    yAxisTickFormat({\n      callback: settings?.yAxisTickFormat,\n      tick\n    })\n});\n\nconst graphCardHelpers = {\n  generateChartSettings,\n  generateExtendedChartSettings,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n\nexport {\n  graphCardHelpers as default,\n  graphCardHelpers,\n  generateChartSettings,\n  generateExtendedChartSettings,\n  getChartXAxisLabelIncrement,\n  getTooltipDate,\n  xAxisTickFormat,\n  yAxisTickFormat\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","var keyList = Object.keys;\n\nexports.equal = function equal (a, b) {\n  if (a === b) return true;\n  if (!(a instanceof Object) || !(b instanceof Object)) return false;\n\n  var keys = keyList(a);\n  var length = keys.length;\n\n  for (var i = 0; i < length; i++)\n    if (!(keys[i] in b)) return false;\n\n  for (var i = 0; i < length; i++)\n    if (a[keys[i]] !== b[keys[i]]) return false;\n\n  return length === keyList(b).length;\n};\n","import { equal as isShallowEqual } from 'fast-shallow-equal';\nimport useCustomCompareEffect from './useCustomCompareEffect';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar shallowEqualDepsList = function (prevDeps, nextDeps) {\n    return prevDeps.every(function (dep, index) { return isShallowEqual(dep, nextDeps[index]); });\n};\nvar useShallowCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useShallowCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useShallowCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, shallowEqualDepsList);\n};\nexport default useShallowCompareEffect;\n","import { useEffect, useRef } from 'react';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useCustomCompareEffect = function (effect, deps, depsEqual) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useCustomCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useCustomCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n        if (typeof depsEqual !== 'function') {\n            console.warn('`useCustomCompareEffect` should be used with depsEqual callback for comparing deps list');\n        }\n    }\n    var ref = useRef(undefined);\n    if (!ref.current || !depsEqual(deps, ref.current)) {\n        ref.current = deps;\n    }\n    useEffect(effect, ref.current);\n};\nexport default useCustomCompareEffect;\n"],"names":["GraphCardChartLegend","chart","datum","t","useAliasDispatch","useDispatch","useAliasSelectors","useSelectors","useAliasProduct","useProduct","productLabel","viewId","dispatch","legendItems","dataSets","map","id","graph","legend","useMount","forEach","index","isToggled","hide","onClick","updatedToggle","toggle","type","reduxTypes","value","isThreshold","color","stroke","data","isDisabled","find","y","hasData","labelContent","product","context","tooltipContent","style","whiteSpace","checkIsToggled","button","Button","onKeyPress","className","tabIndex","key","variant","component","icon","ChartIcon","symbol","visibility","fill","Tooltip","content","position","TooltipPosition","enableFlip","distance","defaultProps","helpers","translate","storeHooks","GraphCardChartTooltip","useAliasProductGraphTallyQuery","useProductGraphTallyQuery","productId","granularity","RHSM_API_QUERY_SET_TYPES","header","itemsByKey","Object","keys","reverse","getTooltipDate","date","tempDataFacet","chartType","ChartTypeVariant","thresholdStringValue","hasInfinite","title","label","dataFactsValue","push","summary","length","colSpan","dataFacet","updatedDataFacetValue","Number","isInteger","format","average","mantissa","trimMantissa","lowPrecision","toUpperCase","size","generateChartSettings","filters","graphCardSettings","standaloneFiltersSettings","groupedFiltersSettings","isStandalone","filterSettings","baseFilterSettings","isStacked","isCapacity","strokeWidth","chartColorGreenDark","strokeDasharray","settings","padding","bottom","left","right","top","metric","metrics","updatedGroupedFiltersSettings","undefined","getChartXAxisLabelIncrement","GRANULARITY_TYPES","momentDate","moment","dateHelpers","add","xAxisTickFormat","callback","tick","previousDate","formattedDate","isNewYear","parseInt","year","replace","yAxisTickFormat","generateExtendedChartSettings","xAxisLabelIncrement","item","previousItem","graphCardHelpers","MinHeight","containerRef","React","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","props","clientWidth","current","setMinHeight","this","window","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","addEventListener","removeEventListener","children","ref","keyList","exports","a","b","i","shallowEqualDepsList","prevDeps","nextDeps","every","dep","effect","deps","depsEqual","useRef","useEffect"],"sourceRoot":""}
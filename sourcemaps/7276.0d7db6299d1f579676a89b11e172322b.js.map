{"version":3,"file":"js/7276.1678226299833.b9bdca48d2ab9853f2da.js","mappings":"udAsBMA,EAAS,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,IAAAK,GAAAC,EAAAA,EAAAA,GAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAqEZ,OArEYP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACbM,MAAQ,CACNC,aAAc,MACfZ,EAQDa,QAAU,SAAAC,GACR,IAAAC,EAAmCf,EAAKgB,MAAhCC,EAAOF,EAAPE,QAASJ,EAAOE,EAAPF,QAASK,EAAIH,EAAJG,KAClBC,EAA2BL,EAA3BK,cAAeC,EAAYN,EAAZM,QACjBC,GAAWC,EAAAA,EAAAA,GAAA,GAAQR,GAEzBD,GAAQU,EAAAA,EAAAA,iBAAgBT,GAAO,IAEf,KAAZM,IACW,WAATF,GAA6C,KAAxBC,EAAcK,MACrCP,GAAQM,EAAAA,EAAAA,iBAAgBF,IAExBrB,EAAKyB,SAAS,CAAEb,aAAc,KAAM,WAClCK,GACEM,EAAAA,EAAAA,kBAAeD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAID,GAAgB,CAAEF,eAAaG,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOD,EAAYF,eAAa,IAAEK,MAAO,QAEjG,IAGN,EAACxB,EAQD0B,UAAY,SAAAZ,GACV,IAAAa,EAAqC3B,EAAKgB,MAAlCC,EAAOU,EAAPV,QAASS,EAASC,EAATD,UAAWR,EAAIS,EAAJT,KACpBC,EAAkBL,EAAlBK,cACFE,GAAWC,EAAAA,EAAAA,GAAA,GAAQR,GAEzBY,GAAUH,EAAAA,EAAAA,iBAAgBT,GAAO,IAEpB,WAATI,GAA6C,KAAxBC,EAAcK,OAIvCI,YAAW,WACmB,KAAxBT,EAAcK,OAChBP,GAAQM,EAAAA,EAAAA,iBAAgBF,GAE5B,GACF,EAACrB,EASD6B,SAAW,SAACL,EAAOV,GACjB,IAAQe,EAAa7B,EAAKgB,MAAlBa,SACFR,GAAWC,EAAAA,EAAAA,GAAA,GAAQR,GAEzBd,EAAKyB,SAAS,CAAEb,aAAcY,IAAS,WACrCK,GAASN,EAAAA,EAAAA,iBAAgBF,GAC3B,GACF,EAACrB,CAAA,CAyCA,OAzCA8B,EAAAA,EAAAA,GAAAnC,EAAA,EAAAoC,IAAA,SAAAP,MAOD,WAAS,IAAAQ,EACCpB,EAAiBqB,KAAKtB,MAAtBC,aACRsB,EAaID,KAAKjB,MAZPmB,EAASD,EAATC,UACAC,EAAEF,EAAFE,GACAC,EAAUH,EAAVG,WACAC,EAAIJ,EAAJI,KAKAC,GAJQL,EAARL,SACOK,EAAPjB,QACOiB,EAAPrB,QACSqB,EAATR,UACUQ,EAAVK,YACArB,EAAIgB,EAAJhB,KACAM,EAAKU,EAALV,MACGR,GAAKwB,EAAAA,EAAAA,GAAAN,EAAAO,GAEJC,EAAcJ,GAAQK,EAAAA,GAAAA,aACtBC,EAAYR,GAAMM,EAExB,OACEG,IAAAA,cAACC,EAAAA,UAAWC,OAAAC,OAAA,CACVZ,GAAIQ,EACJN,KAAMI,EACNP,UAAS,wBAAAzB,OAA0ByB,GACnCE,WAAYA,IAAc,EAC1BR,SAAUI,KAAKJ,SACfhB,QAASoB,KAAKpB,QACda,UAAWO,KAAKP,UAChBa,WAAYA,IAAc,EAC1BrB,KAAMA,EACNM,MAA4B,QAAvBQ,EAAEpB,QAAAA,EAAgBY,SAAK,IAAAQ,EAAAA,EAAI,IAC5BhB,GAGV,KAACrB,CAAA,CA9GY,CAASkD,IAAAA,WA6IxBlD,EAAUsD,aAAe,CACvBd,UAAW,GACXC,GAAI,KACJC,YAAY,EACZE,YAAY,EACZD,KAAM,KACNT,SAAUc,EAAAA,GAAAA,KACV1B,QAAS0B,EAAAA,GAAAA,KACT9B,QAAS8B,EAAAA,GAAAA,KACTjB,UAAWiB,EAAAA,GAAAA,KACXzB,KAAM,OACNM,MAAO,G,qNC9KL0B,EAAsC,WAStC,OARAA,EAAWH,OAAOC,QAAU,SAASG,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAInD,UAAUC,OAAQiD,EAAIC,EAAGD,IAE5C,IAAK,IAAIE,KADTH,EAAIjD,UAAUkD,GACON,OAAOS,UAAUC,eAAejD,KAAK4C,EAAGG,KACzDJ,EAAEI,GAAKH,EAAEG,IAEjB,OAAOJ,CACX,EACOD,EAASzC,MAAMwB,KAAM9B,UAChC,EAiBA,SAASuD,EAAcC,GACnB,MACW,GAAGjD,OAAOiD,EADjBA,EAAU,GAAKA,EAAU,EACC,WAGA,UAElC,CACA,IAQA,EARmB,SAAUC,GACzB,IAAIC,EACAC,EAAKF,EAAGG,SAAUA,OAAkB,IAAPD,GAAwBA,EAAIH,EAAUC,EAAGD,QAASxB,EAAYyB,EAAGzB,UAAW6B,EAAWJ,EAAGI,SAAUC,EAAWL,EAAGK,SAAUC,EAASN,EAAGM,OAAQC,EAAKP,EAAGQ,SAAUA,OAAkB,IAAPD,GAAuBA,EAAInD,EA1BvM,SAAUoC,EAAGiB,GAC/C,IAAIlB,EAAI,CAAC,EACT,IAAK,IAAII,KAAKH,EAAOL,OAAOS,UAAUC,eAAejD,KAAK4C,EAAGG,IAAMc,EAAEC,QAAQf,GAAK,IAC9EJ,EAAEI,GAAKH,EAAEG,IACb,GAAS,MAALH,GAAqD,mBAAjCL,OAAOwB,sBACtB,KAAIlB,EAAI,EAAb,IAAgBE,EAAIR,OAAOwB,sBAAsBnB,GAAIC,EAAIE,EAAEnD,OAAQiD,IAC3DgB,EAAEC,QAAQf,EAAEF,IAAM,GAAKN,OAAOS,UAAUgB,qBAAqBhE,KAAK4C,EAAGG,EAAEF,MACvEF,EAAEI,EAAEF,IAAMD,EAAEG,EAAEF,IAF4B,CAItD,OAAOF,CACX,CAgBqPsB,CAAOb,EAAI,CAAC,WAAY,UAAW,YAAa,WAAY,WAAY,SAAU,aAC/Tc,EAAsB,IAAW,yBAAyBb,EAAK,CAAC,GAAM,gBAAkBE,EAAUF,GAAK1B,GACvGwC,EAAoB,mBACpBC,GAAc,IAAAC,WAAUF,EAAmBT,EAAQE,GACvD,OAAQ,UAAM,EAAAU,SAAU,CAAEb,SAAU,EAAC,SAAK,EAAAc,QAAS7B,EAAS,CAAEf,UAAWuC,EAAqB,2BAA4BC,EAAmB,yBAA0BC,EAAa,iBAAkBR,GAAYpD,EAAO,CAAEiD,SAAUA,MAAgBN,GAAWA,GAAW,GAAOK,GAAYA,GAAY,KAAQ,UAAM,MAAOd,EAAS,CAAEf,UAAW,gCAAkC,CAAE8B,SAAU,CAACN,GAAWA,GAAW,IAAK,UAAM,OAAQT,EAAS,CAAEf,UAAW,sCAAwC,CAAE8B,SAAU,CAAC,IAAKP,EAAcC,GAAU,QAAUK,GAAYA,GAAY,IAAK,UAAM,OAAQd,EAAS,CAAEf,UAAW,yCAA2C,CAAE8B,SAAU,CAAC,IAAKD,EAAU,uBAC3qB,E,yJCiBMgB,EAAgB,SAAHhD,GAYb,IAXJiD,EAAWjD,EAAXiD,YACA5C,EAAUL,EAAVK,WACA6C,EAAclD,EAAdkD,eACA/B,EAACnB,EAADmB,EACiBgC,EAAoBnD,EAArCoD,gBACWC,EAAcrD,EAAzBsD,UACiBC,EAAoBvD,EAArCwD,gBACYC,EAAezD,EAA3B0D,WAC2BC,EAA8B3D,EAAzD4D,0BAC0BC,EAA6B7D,EAAvD8D,yBACYC,EAAe/D,EAA3BgE,WAEAC,GAAoDC,EAAAA,EAAAA,UAAS,CAAEC,cAAe,GAAIC,KAAM,KAAKC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAAtFM,EAAkBF,EAAA,GAAEG,EAAqBH,EAAA,GAC1CI,EAAcV,IACdW,EAAQb,IACRc,EAAStB,IACTuB,EAAerB,IACbsB,EAAcpB,IAAdoB,UACRC,EAAmDnB,IAAlCoB,EAAmBD,EAA5BE,QAA8BC,EAAQH,EAARG,SACtCC,EAAiD/B,EAAqB,CAAE9C,WAAAA,IAAhE8E,EAAKD,EAALC,MAAOC,EAASF,EAATE,UAAWC,EAAOH,EAAPG,QAAOC,EAAAJ,EAAEK,KAAAA,OAAI,IAAAD,EAAG,CAAC,EAACA,EAC5CE,EAA2CD,EAAnCA,KAAME,OAAQ,IAAAD,EAAG,GAAEA,EAAAE,EAAgBH,EAAdI,KAAAA,OAAI,IAAAD,EAAG,CAAC,EAACA,EAqDtC,IAnDAE,EAAAA,EAAAA,IAAqB,WACnB,IAAIC,EAAuB,GACvBC,EAAc,GAEdV,GAAaK,EAASrH,SACxB0H,EAAcL,EAASM,KAAI,SAAAC,GAAqB,IAAfC,EAAQlF,OAAAC,OAAA,GAAAgF,GACvCE,EAAiCC,EAAqB,qBAArBA,sBAA2C,CAC1EnB,QAASmB,EAAqB,qBAArBA,sBAA2C,CAClDnB,QAASD,EACTqB,OAAQxB,EACRF,MAAAA,IAEFuB,SAAAA,EACAN,KAAAA,EACAU,QAAS5B,EACTI,UAAAA,IATMV,EAAa+B,EAAb/B,cAAemC,EAAKJ,EAALI,MAYvBT,EAAuB1B,EACvB,IAAMoC,EAAwBN,aAAQ,EAARA,EAAUM,sBAClCC,EAAiBP,aAAQ,EAARA,EAAUO,eAUjC,MAAO,CACLF,MAAAA,EACAG,iBARmC,mBAA1BxB,aAAQ,EAARA,EAAUyB,aACNzB,EAASyB,aAAWpH,EAAAA,EAAAA,GAAC,CAAC,EAAI2G,IAAQ3G,EAAAA,EAAAA,GAAA,GAASmF,IAE3C+B,EAAiB,GAAKD,IAO/B1F,IAAAA,cAAC8F,EAAAA,gBAAe,CACd5G,IAAG,UAAArB,OAAY6H,GACfC,eAAgBA,EAChBpG,GAAImG,UAGRK,EAEN,KAGFpC,GAAsB,iBAAO,CAC3BL,cAAe0B,EACfzB,KAAM0B,EACP,GACH,GAAG,CAACf,EAAqBK,EAAWK,IAEhCpF,EACF,OACEQ,IAAAA,cAACgG,EAAAA,KAAI,CAAC1G,UAAU,sCACdU,IAAAA,cAACiG,EAAAA,SAAQ,KACPjG,IAAAA,cAACkG,EAAAA,SAAQ,KAAE5F,EAAE,0BAA2B,CAAE6F,QAAS,gBAM3D,IAAMC,EAAYtB,aAAI,EAAJA,EAAMuB,MAClBC,EAAiBzC,EAAM0C,EAAAA,GAAAA,QAAmClE,EAC1DmE,EAAgB3C,EAAM0C,EAAAA,GAAAA,QACtBE,EAAaC,EAAkB,kBAAlBA,WAA6BF,EAAeF,EAAgBF,GAGzEO,IACW,IAAdpC,GAAsB6B,EAAYE,GAAkB,iBAAJzI,OAAqByI,EAAc,aACrE,IAAd/B,GAAsBkC,GAAc,iBAAJ5I,OAAqByI,EAAc,aACzD,IAAVhC,GAAkB,iBAAJzG,OAAqByI,EAAc,YAAU,iBAAAzI,OAC3CyI,GAEnB,OACEtG,IAAAA,cAACgG,EAAAA,KAAI,CAAC1G,UAAU,4BACdU,IAAAA,cAAC4G,EAAAA,UAAS,CAAC1H,IAAI,kBAAkB2H,iBAAe,GAC9C7G,IAAAA,cAAC8G,EAAAA,WAAU,CAACxH,UAAYgF,EAAS,SAAa,GAAI,cAAaA,IAAS,GACrElC,EACDpC,IAAAA,cAAC+G,EAAAA,YAAW,CAACzH,UAAa8G,EAA+B,GAAlB,cAAsB,eAAcA,IAAa,GACtFpG,IAAAA,cAACgH,EAAAA,QAAU,CACTC,WAAS,EACTzH,WAAYgF,GAAWF,EACvB8B,UAAWA,EACXc,OAAQV,EACR1C,OAAQA,EACRqD,UAAWrD,EACXsD,QAASd,OAKjBtG,IAAAA,cAAC4G,EAAAA,UAAS,CAAC1H,IAAKyH,GAA4BE,iBAAe,GACzD7G,IAAAA,cAACiG,EAAAA,SAAQ,KACPjG,IAAAA,cAAA,OAAKV,WAAYgF,EAAS,OAAYE,GAAW,WAAa,IAC3DA,GACCxE,IAAAA,cAACqH,EAAAA,OAAM,CACLC,QAAQ,QACRC,WAAY,CACVjI,UAAW,2BACXkI,UAAUtD,aAAmB,EAAnBA,EAAqB3G,UAAWqH,aAAQ,EAARA,EAAW,KAAM1E,OAAOuH,KAAK7C,EAAS,IAAIrH,QAAW,EAC/FmK,UACGxD,aAAmB,EAAnBA,EAAqB3G,SAAU2G,EAAoBgB,KAAI,SAAAyC,GAAY,OAAAA,EAATC,SAAyB,KAAM,GAC5FC,UAAUjD,aAAQ,EAARA,EAAUrH,SAAU+I,EAC9BgB,QAASQ,EAAAA,aAAAA,YAIbtD,GACAxE,IAAAA,cAAC+H,EAAAA,QAAK,CACJC,SAAO,EACPV,QAASQ,EAAAA,aAAAA,QACTxI,UAAU,2BACVgE,cAAeI,EAAmBJ,cAClCC,KAAMG,EAAmBH,UAMnCvD,IAAAA,cAAC4G,EAAAA,UAAS,CAAC1H,IAAI,kBAAkB2H,iBAAe,GAC9C7G,IAAAA,cAACiI,EAAAA,WAAU,CACT3I,WAAYgF,EAAS,UAAe8B,GAAa,gBAAkB,GACnE,cAAa9B,IAAU8B,IAAa,GAEpCpG,IAAAA,cAACkI,EAAY,CAAChH,UAAQ,GACpBlB,IAAAA,cAACgH,EAAAA,QAAU,CACTmB,cAAc,KACd3I,WAAYgF,GAAWF,EACvB8B,UAAWA,EACXc,OAAQV,EACR1C,OAAQA,EACRqD,UAAWrD,EACXsD,QAASd,OAOvB,EA8BAnE,EAAc/B,aAAe,CAC3BgC,YACEpC,IAAAA,cAACoI,EAAAA,eAAc,KACbpI,IAAAA,cAACqI,EAAAA,wBAAuB,OAG5B7I,WAAYM,EAAAA,GAAAA,4BACZuC,eAAgB,GAChB/B,EAAGgI,EAAAA,UACH/F,gBAAiBgG,EAAAA,yBACjB9F,UAAW+F,EAAAA,mBACX7F,gBAAiB8F,EAAAA,yBACjB5F,WAAAA,EAAAA,WACAE,0BAA2B2F,EAAAA,+BAC3BzF,yBAA0B0F,EAAAA,8BAC1BxF,WAAAA,EAAAA,W,qfC5OIyF,EAAuB,WAOlB,IAAAzJ,EAAA7B,UAAAC,OAAA,QAAAwI,IAAAzI,UAAA,GAAAA,UAAA,GAAP,CAAC,EAACuL,EAAA1J,EANJK,WAAAA,OAAU,IAAAqJ,GAAQA,EAAAC,EAAA3J,EAClB4J,aAAAA,OAAY,IAAAD,EAAGE,EAAAA,GAAAA,KAAAA,kBAAmCF,EAAAG,EAAA9J,EAClD+J,YAAaC,OAAgB,IAAAF,EAAGG,EAAAA,GAAAA,WAAAA,YAAiCH,EAAAI,EAAAlK,EACjE0D,WAAYD,OAAe,IAAAyG,EAAGxG,EAAAA,WAAUwG,EAAAC,EAAAnK,EACxC8D,yBAA0BD,OAA6B,IAAAsG,EAAGX,EAAAA,8BAA6BW,EAAAC,EAAApK,EACvFqK,qBAAsBC,OAAyB,IAAAF,EAAGH,EAAAA,GAAAA,WAAAA,qBAA0CG,EAE5FG,EAAsB9G,IAAdoB,EAAS0F,EAAT1F,UACFH,EAAQb,IACR2G,EAAWR,IACjBS,EAAkDH,GAChD,SAAAtE,GAAA,IAAA0E,EAAGC,EAAS3E,EAAT2E,UAAS,OAAOA,SAAyB,QAAhBD,EAATC,EAAWC,sBAAc,IAAAF,OAAhB,EAATA,EAA4B7F,EAAU,IADnDgG,EAASJ,EAATI,UAAWxF,EAAOoF,EAAPpF,QAASE,EAAIkF,EAAJlF,KAASuF,GAAQtK,EAAAA,EAAAA,GAAAiK,EAAAhK,GAU7C,OANAsK,EAAAA,EAAAA,IAAwB,WACjB1K,GACHuJ,EAAa/E,EAAWH,EAAxBkF,CAA+BY,EAEnC,GAAG,CAACA,EAAUnK,EAAYwE,EAAWH,KAErCpF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKwL,GAAQ,IACXzF,QAASA,GAAWwF,IAAa,EACjCtF,KAAwB,KAAjBA,aAAI,EAAJA,EAAMnH,SAAgBmH,EAAK,IAAOA,GAAQ,CAAC,GAEtD,EAcM6D,EAA2B,WAOtB,IAAAZ,EAAArK,UAAAC,OAAA,QAAAwI,IAAAzI,UAAA,GAAAA,UAAA,GAAP,CAAC,EAAC6M,EAAAxC,EANJnI,WAAAA,OAAU,IAAA2K,GAAQA,EAAAC,EAAAzC,EAClBoB,aAAAA,OAAY,IAAAqB,EAAGpB,EAAAA,GAAAA,KAAAA,sBAAuCoB,EAAAC,EAAA1C,EACtDuB,YAAaC,OAAgB,IAAAkB,EAAGjB,EAAAA,GAAAA,WAAAA,YAAiCiB,EAAAC,EAAA3C,EACjE9E,WAAYD,OAAe,IAAA0H,EAAGzH,EAAAA,WAAUyH,EAAAC,EAAA5C,EACxC1E,yBAA0BD,OAA6B,IAAAuH,EAAG5B,EAAAA,8BAA6B4B,EAAAC,EAAA7C,EACvF6B,qBAAsBC,OAAyB,IAAAe,EAAGpB,EAAAA,GAAAA,WAAAA,qBAA0CoB,EAE5FC,EAAsB7H,IAAdoB,EAASyG,EAATzG,UACFH,EAAQb,IACR2G,EAAWR,IACjBuB,EAAkDjB,GAChD,SAAAkB,GAAA,IAAAC,EAAGd,EAASa,EAATb,UAAS,OAAOA,SAA6B,QAApBc,EAATd,EAAWe,0BAAkB,IAAAD,OAApB,EAATA,EAAgC5G,EAAU,IADvDgG,EAASU,EAATV,UAAWxF,EAAOkG,EAAPlG,QAASE,EAAIgG,EAAJhG,KAASuF,GAAQtK,EAAAA,EAAAA,GAAA+K,EAAAI,GAU7C,OANAZ,EAAAA,EAAAA,IAAwB,WACjB1K,GACHuJ,EAAa/E,EAAWH,EAAxBkF,CAA+BY,EAEnC,GAAG,CAACA,EAAUnK,EAAYwE,EAAWH,KAErCpF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKwL,GAAQ,IACXzF,QAASA,GAAWwF,IAAa,EACjCtF,KAAwB,KAAjBA,aAAI,EAAJA,EAAMnH,SAAgBmH,EAAK,IAAOA,GAAQ,CAAC,GAEtD,EAUM8D,EAAqB,WAGhB,IAAAuC,EAAAzN,UAAAC,OAAA,QAAAwI,IAAAzI,UAAA,GAAAA,UAAA,GAAP,CAAC,EAAC0N,EAAAD,EAFJ7B,YAAaC,OAAgB,IAAA6B,EAAG5B,EAAAA,GAAAA,WAAAA,YAAiC4B,EAAAC,EAAAF,EACjElI,WAAYD,OAAe,IAAAqI,EAAGpI,EAAAA,WAAUoI,EAExCC,EAAsBtI,IAAdoB,EAASkH,EAATlH,UACF2F,EAAWR,IAWjB,OAAO,SAAAgC,GAAyB,IAAtBjE,EAAMiE,EAANjE,OAAQE,EAAO+D,EAAP/D,QAChBuC,EAAS,EAAAyB,EAAAA,EAAAA,GAAA,CAEL/M,KAAMgN,EAAAA,GAAAA,MAAAA,qCAAsD9E,EAAAA,GAAAA,QAC5D+E,OAAQtH,GACPuC,EAAAA,GAAAA,OAAkCW,IAAMkE,EAAAA,EAAAA,GAAA,CAGzC/M,KAAMgN,EAAAA,GAAAA,MAAAA,qCAAsD9E,EAAAA,GAAAA,OAC5D+E,OAAQtH,GACPuC,EAAAA,GAAAA,MAAiCa,IAGxC,CACF,EAWMmE,EAAuB,WAIlB,IAAAC,EAAAlO,UAAAC,OAAA,QAAAwI,IAAAzI,UAAA,GAAAA,UAAA,GAAP,CAAC,EAACmO,EAAAD,EAHJE,YAAAA,OAAW,IAAAD,EAAGE,EAAAA,GAAgBF,EAAAG,EAAAJ,EAC9BtC,YAAaC,OAAgB,IAAAyC,EAAGxC,EAAAA,GAAAA,WAAAA,YAAiCwC,EAAAC,EAAAL,EACjE3I,WAAYD,OAAe,IAAAiJ,EAAGhJ,EAAAA,WAAUgJ,EAExCC,EAAsBlJ,IAAdoB,EAAS8H,EAAT9H,UACF2F,EAAWR,IAYjB,OAAO,SAAC4C,EAAKC,GAAwB,IAE/BC,EAFWC,EAASF,EAATE,UAAW3M,EAAEyM,EAAFzM,GACpB4M,EAAoBjM,OAAOkM,OAAOV,GAAaW,MAAK,SAAA1N,GAAK,OAAIA,IAAUY,GAAM+M,IAAW3N,KAAWY,CAAE,IAGtG4M,GASDF,EAFIC,IACDK,EAAAA,gBAAAA,KACgBC,EAAAA,GAAAA,WAGAA,EAAAA,GAAAA,UAIvB7C,EAAS,EAAAyB,EAAAA,EAAAA,GAAA,CAEL/M,KAAMgN,EAAAA,GAAAA,MAAAA,qCAAsD9E,EAAAA,GAAAA,WAC5D+E,OAAQtH,GACPuC,EAAAA,GAAAA,UAAqC0F,IAAgBb,EAAAA,EAAAA,GAAA,CAGtD/M,KAAMgN,EAAAA,GAAAA,MAAAA,qCAAsD9E,EAAAA,GAAAA,MAC5D+E,OAAQtH,GACPuC,EAAAA,GAAAA,KAAgC4F,OAxB/BrM,EAAAA,GAAAA,UAAoBA,EAAAA,GAAAA,cACtB2M,QAAQC,KAAK,iEAAD7O,OAAkE0B,EAAE,gBA0BtF,CACF,EAWMkJ,EAA2B,WAItB,IAAAkE,EAAArP,UAAAC,OAAA,QAAAwI,IAAAzI,UAAA,GAAAA,UAAA,GAAP,CAAC,EAACsP,EAAAD,EAHJjB,YAAAA,OAAW,IAAAkB,EAAGC,EAAAA,GAAUD,EAAAE,EAAAH,EACxBzD,YAAaC,OAAgB,IAAA2D,EAAG1D,EAAAA,GAAAA,WAAAA,YAAiC0D,EAAAC,EAAAJ,EACjE9J,WAAYD,OAAe,IAAAmK,EAAGlK,EAAAA,WAAUkK,EAExCC,EAAsBpK,IAAdoB,EAASgJ,EAAThJ,UACF2F,EAAWR,IAYjB,OAAO,SAAC4C,EAAKkB,GAAwB,IAE/BhB,EAFWC,EAASe,EAATf,UAAW3M,EAAE0N,EAAF1N,GACpB4M,EAAoBjM,OAAOkM,OAAOV,GAAaW,MAAK,SAAA1N,GAAK,OAAIA,IAAUY,GAAM+M,IAAW3N,KAAWY,CAAE,IAGtG4M,GASDF,EAFIC,IACDK,EAAAA,gBAAAA,KACgBC,EAAAA,GAAAA,WAGAA,EAAAA,GAAAA,UAIvB7C,EAAS,EAAAyB,EAAAA,EAAAA,GAAA,CAEL/M,KAAMgN,EAAAA,GAAAA,MAAAA,qCAAsD9E,EAAAA,GAAAA,WAC5D+E,OAAQtH,GACPuC,EAAAA,GAAAA,UAAqC0F,IAAgBb,EAAAA,EAAAA,GAAA,CAGtD/M,KAAMgN,EAAAA,GAAAA,MAAAA,qCAAsD9E,EAAAA,GAAAA,MAC5D+E,OAAQtH,GACPuC,EAAAA,GAAAA,KAAgC4F,OAxB/BrM,EAAAA,GAAAA,UAAoBA,EAAAA,GAAAA,cACtB2M,QAAQC,KAAK,iEAAD7O,OAAkE0B,EAAE,gBA0BtF,CACF,EAEM4G,EAAU,CACdyC,qBAAAA,EACAL,yBAAAA,EACAC,mBAAAA,EACA+C,qBAAAA,EACA9C,yBAAAA,E,8LC1PI7B,EAAS,SAAA7J,IAAAC,EAAAA,EAAAA,GAAA4J,EAAA7J,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAA0J,GAAA,SAAAA,IAAA,IAAAzJ,GAAAC,EAAAA,EAAAA,GAAA,KAAAwJ,GAAA,QAAAvJ,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAgDZ,OAhDYP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACb0P,aAAelN,IAAAA,YAAiB7C,EAEhCgQ,kBAAoBnN,IAAAA,YAAiB7C,EAErCiQ,sBAAwB,EAACjQ,EAEzBkQ,eAAiBvN,EAAAA,GAAAA,KAAY3C,EAgC7BmQ,kBAAoB,WAAM,IAAAC,EAAAC,EAChBJ,GAARK,EAAAA,EAAAA,GAAAtQ,GAAQiQ,sBACAM,EAAmBvQ,EAAKgB,MAAxBuP,eACFC,GAA+B,QAAjBJ,EAAApQ,EAAK+P,oBAAY,IAAAK,GAAS,QAATC,EAAjBD,EAAmBK,eAAO,IAAAJ,OAAT,EAAjBA,EAA4BG,cAAe,EAE3DD,GAAkBC,IAAgBP,IACpCjQ,EAAKiQ,sBAAwBO,EAC7BxQ,EAAK0Q,cAAa,GAEtB,EAAC1Q,CAAA,CAkDA,OAlDA8B,EAAAA,EAAAA,GAAA2H,EAAA,EAAA1H,IAAA,oBAAAP,MAvCD,WAAoB,IAAAmP,EAAA,KACVJ,EAAmBtO,KAAKjB,MAAxBuP,eACRK,OAAOhP,YAAW,WAChB+O,EAAKD,cACP,IAEIH,GACFtO,KAAK4O,mBAET,GAAC,CAAA9O,IAAA,qBAAAP,MAED,WAAqB,IAAAsP,EAAA,KACS7O,KAAKjB,MAAzB0I,iBAGNkH,OAAOhP,YAAW,WAChBkP,EAAKJ,cACP,GAEJ,GAAC,CAAA3O,IAAA,uBAAAP,MAED,WACES,KAAKiO,gBACP,GAEA,CAAAnO,IAAA,eAAAP,MAqBA,WAA4B,IAMpBuP,EANKC,EAAK7Q,UAAAC,OAAA,QAAAwI,IAAAzI,UAAA,IAAAA,UAAA,GACG8Q,EAAsBhP,KAAKjB,MAAtCkQ,UACRC,EAAqClP,KAAK8N,aAAlCU,QAASW,OAAU,IAAAD,EAAG,CAAC,EAACA,EAChCE,EAA0CpP,KAAK+N,kBAAvCS,QAASa,OAAe,IAAAD,EAAG,CAAC,EAACA,EAEjCD,SAAAA,EAAYG,QASVN,GALFF,EADEC,GACaM,aAAe,EAAfA,EAAiBP,eAAgB,GAEjCK,aAAU,EAAVA,EAAYL,eAAgB,KAI3CA,EAAeE,GAGjBG,EAAWG,MAAML,UAAY,GAAHxQ,OAAMqQ,EAAY,MAEhD,GAEA,CAAAhP,IAAA,oBAAAP,MAGA,WAAoB,IAAAgQ,EAAA,KAClBZ,OAAOa,iBAAiB,SAAUxP,KAAKkO,mBACvClO,KAAKiO,eAAiB,kBAAMU,OAAOc,oBAAoB,SAAUF,EAAKrB,kBAAkB,CAC1F,GAEA,CAAApO,IAAA,SAAAP,MAKA,WACE,IAAQyC,EAAahC,KAAKjB,MAAlBiD,SAER,OACEpB,IAAAA,cAAA,OAAKV,UAAU,sBAAsBwP,IAAK1P,KAAK8N,cAC7ClN,IAAAA,cAAA,OAAK8O,IAAK1P,KAAK+N,mBAAoB/L,GAGzC,KAACwF,CAAA,CAlGY,CAAS5G,IAAAA,WAsHxB4G,EAAUxG,aAAe,CACvByG,iBAAiB,EACjB6G,gBAAgB,EAChBW,UAAW,E,8JCnGPrH,EAAa,SAAbA,EAAU7H,GAAA,IACdgJ,EAAahJ,EAAbgJ,cACA3I,EAAUL,EAAVK,WACAyH,EAAS9H,EAAT8H,UACAb,EAASjH,EAATiH,UACAc,EAAM/H,EAAN+H,OACApD,EAAM3E,EAAN2E,OACAqD,EAAShI,EAATgI,UACAC,EAAOjI,EAAPiI,QACAE,EAAOnI,EAAPmI,QAAO,OAEPtH,IAAAA,cAAC+O,EAAAA,WAAY,CACX5G,cAAeA,EACflB,UAAWA,EACXzH,WAAYA,IAAe4G,EAC3BA,UAAWA,EACX4I,UAAW,SAAC/Q,EAAOgR,EAAMC,GAAK,OAC5BpL,EAAO,CAAE7F,MAAAA,EAAOmJ,QAAS8H,EAAOhI,OAAQR,EAAAA,kBAAAA,wBAA0CuI,EAAMC,IAAS,EAEnGC,gBAAiB,SAAClR,EAAOiR,GAAK,OAAK/H,EAAU,CAAElJ,MAAAA,EAAOmJ,QAAS8H,EAAOhI,OAAQF,EAAW5G,aAAa8G,QAAS,EAC/G+H,KAAMvI,EAAAA,kBAAAA,wBAA0CQ,GAAUF,EAAW5G,aAAa8G,OAAQE,GAC1FA,QAASA,EACTE,QAASA,GACT,EA6BJN,EAAW5G,aAAe,CACxB+H,cAAe,OACflB,WAAW,EACXzH,YAAY,EACZ4G,UAAW,EACXc,OAAQ,EACRpD,OAAQhE,EAAAA,GAAAA,KACRqH,UAAWrH,EAAAA,GAAAA,KACXsH,QAAS,GACTE,QAAS,K,sOCxFX,IAAM8H,EAA0B,SAACH,EAAM7H,GAAO,OAAKA,GAAW6H,EAAO,IAAM,CAAC,EAStEI,EAA0B,SAACnI,EAAQE,GAAO,OAAKF,EAASE,EAAU,GAAK,CAAC,EAUxEX,EAAa,SAACS,EAAQE,EAAShB,GAAS,OAC5CiJ,EAAwBnI,EAAQE,KAAakI,KAAKC,KAAKnJ,EAAYgB,EAAQ,EAEvEV,EAAoB,CACxB0I,wBAAAA,EACAC,wBAAAA,EACA5I,WAAAA,E,0OCJI4B,EAA0B,SAAHlJ,GAKvB,IAJJmB,EAACnB,EAADmB,EACa6I,EAAgBhK,EAA7B+J,YACYtG,EAAezD,EAA3B0D,WAC+B2M,EAAkCrQ,EAAjEwJ,8BAEQ2C,EAAW1I,IAAX0I,OACyCmE,EAAiBD,IAAzDjJ,EAAAA,GAAAA,cACHoD,EAAWR,IASXuG,EAAW,SAAAC,GAAW,OAC1BhG,EAAS,CACP,CACEtL,KAAMgN,EAAAA,GAAAA,MAAAA,+BACNC,OAAAA,IACDF,EAAAA,EAAAA,GAAA,CAEC/M,KAAMgN,EAAAA,GAAAA,MAAAA,qCAAsD9E,EAAAA,GAAAA,cAC5D+E,OAAAA,GACC/E,EAAAA,GAAAA,cAAwCoJ,aAAW,EAAXA,EAAaC,SAAU,OAElE,EA6BEC,EAAYC,IAAUJ,EAAU,KAqBtC,OACE1P,IAAAA,cAAC+P,EAAAA,WAAU,KACT/P,IAAAA,cAAClD,EAAAA,UAAS,CACR,aAAYwD,EAAE,uCAAwC,CAAE6F,QAAS,gBACjE7G,UAAU,gCACV0Q,YAAY,SACZC,UAAW,IACX7R,QAjDU,WACO,KAAjBqR,GAAwBA,GAI5B9F,EAAS,CACP,CACEtL,KAAMgN,EAAAA,GAAAA,MAAAA,+BACNC,OAAAA,IACDF,EAAAA,EAAAA,GAAA,CAEC/M,KAAMgN,EAAAA,GAAAA,MAAAA,qCAAsD9E,EAAAA,GAAAA,cAC5D+E,OAAAA,GACC/E,EAAAA,GAAAA,aAAwC,OAG/C,EAkCMvI,QArBU,SAAAC,GACd,OAAQA,EAAMM,SACZ,KAAK,GACHmR,EAASzR,EAAMU,OACf,MACF,KAAK,GACH,MACF,QACEkR,EAAU5R,EAAMU,OAGtB,EAWMA,MAAO8Q,EACPS,YAAa5P,EAAE,uCAAwC,CAAE6F,QAAS,gBAClE,YAAU,4BAIlB,EAmBAkC,EAAwBjI,aAAe,CACrCE,EAAGgI,EAAAA,UACHY,YAAaE,EAAAA,GAAAA,WAAAA,YACbvG,WAAAA,EAAAA,WACA8F,8BAAAA,EAAAA,8B","sources":["webpack:///./src/components/form/textInput.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./src/components/inventoryCard/inventoryCard.js","webpack:///./src/components/inventoryCard/inventoryCardContext.js","webpack:///./src/components/minHeight/minHeight.js","webpack:///./src/components/pagination/pagination.js","webpack:///./src/components/pagination/paginationHelpers.js","webpack:///./src/components/toolbar/toolbarFieldDisplayName.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput as PfTextInput } from '@patternfly/react-core';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * Text input with state.\n *\n * @memberof Form\n * @module TextInput\n */\n\n/**\n * A wrapper for Patternfly TextInput. Provides restructured event data,\n * and an onClear event for the search type.\n *\n * @augments React.Component\n * @fires onKeyUp\n * @fires onMouseUp\n * @fires onChange\n */\nclass TextInput extends React.Component {\n  state = {\n    updatedValue: null\n  };\n\n  /**\n   * onKeyUp event, provide additional functionality for onClear event.\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  onKeyUp = event => {\n    const { onClear, onKeyUp, type } = this.props;\n    const { currentTarget, keyCode } = event;\n    const clonedEvent = { ...event };\n\n    onKeyUp(createMockEvent(event, true));\n\n    if (keyCode === 27) {\n      if (type === 'search' && currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      } else {\n        this.setState({ updatedValue: '' }, () => {\n          onClear(\n            createMockEvent({ ...clonedEvent, ...{ currentTarget: { ...clonedEvent.currentTarget, value: '' } } })\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * onMouseUp event, provide additional functionality for onClear event.\n   *\n   * @event onMouseUp\n   * @param {object} event\n   */\n  onMouseUp = event => {\n    const { onClear, onMouseUp, type } = this.props;\n    const { currentTarget } = event;\n    const clonedEvent = { ...event };\n\n    onMouseUp(createMockEvent(event, true));\n\n    if (type !== 'search' || currentTarget.value === '') {\n      return;\n    }\n\n    setTimeout(() => {\n      if (currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      }\n    });\n  };\n\n  /**\n   * onChange event, provide restructured event.\n   *\n   * @event onChange\n   * @param {string} value\n   * @param {object} event\n   */\n  onChange = (value, event) => {\n    const { onChange } = this.props;\n    const clonedEvent = { ...event };\n\n    this.setState({ updatedValue: value }, () => {\n      onChange(createMockEvent(clonedEvent));\n    });\n  };\n\n  /**\n   * Render a text input.\n   *\n   * @returns {React.ReactNode}\n   */\n  render() {\n    const { updatedValue } = this.state;\n    const {\n      className,\n      id,\n      isDisabled,\n      name,\n      onChange,\n      onClear,\n      onKeyUp,\n      onMouseUp,\n      isReadOnly,\n      type,\n      value,\n      ...props\n    } = this.props;\n    const updatedName = name || helpers.generateId();\n    const updatedId = id || updatedName;\n\n    return (\n      <PfTextInput\n        id={updatedId}\n        name={updatedName}\n        className={`curiosity-text-input ${className}`}\n        isDisabled={isDisabled || false}\n        onChange={this.onChange}\n        onKeyUp={this.onKeyUp}\n        onMouseUp={this.onMouseUp}\n        isReadOnly={isReadOnly || false}\n        type={type}\n        value={updatedValue ?? value ?? ''}\n        {...props}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.defaultProps = {\n  className: '',\n  id: null,\n  isDisabled: false,\n  isReadOnly: false,\n  name: null,\n  onChange: helpers.noop,\n  onClear: helpers.noop,\n  onKeyUp: helpers.noop,\n  onMouseUp: helpers.noop,\n  type: 'text',\n  value: ''\n};\n\nexport { TextInput as default, TextInput };\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment } from 'react';\nimport { Toolbar, useOUIAId } from '@patternfly/react-core';\nimport classNames from 'classnames';\nimport '../TableToolbar/TableToolbar.css';\nfunction generateCount(results) {\n    if (results > 1 || results < 1) {\n        return \"\".concat(results, \" Results\");\n    }\n    else {\n        return \"\".concat(results, \" Result\");\n    }\n}\nvar TableToolbar = function (_a) {\n    var _b;\n    var _c = _a.isFooter, isFooter = _c === void 0 ? false : _c, results = _a.results, className = _a.className, selected = _a.selected, children = _a.children, ouiaId = _a.ouiaId, _d = _a.ouiaSafe, ouiaSafe = _d === void 0 ? true : _d, props = __rest(_a, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n    var tableToolbarClasses = classNames('ins-c-table__toolbar', (_b = {}, _b[\"ins-m-footer\"] = isFooter, _b), className);\n    var ouiaComponentType = 'RHI/TableToolbar';\n    var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n    return (_jsxs(Fragment, { children: [_jsx(Toolbar, __assign({ className: tableToolbarClasses, \"data-ouia-component-type\": ouiaComponentType, \"data-ouia-component-id\": ouiaFinalId, \"data-ouia-safe\": ouiaSafe }, props, { children: children })), ((results && results >= 0) || (selected && selected >= 0)) && (_jsxs(\"div\", __assign({ className: \"ins-c-table__toolbar-results\" }, { children: [results && results >= 0 && _jsxs(\"span\", __assign({ className: \"ins-c-table__toolbar-results-count\" }, { children: [\" \", generateCount(results), \" \"] })), selected && selected >= 0 && _jsxs(\"span\", __assign({ className: \"ins-c-table__toolbar-results-selected\" }, { children: [\" \", selected, \" Selected \"] }))] })))] }));\n};\nexport default TableToolbar;\n//# sourceMappingURL=TableToolbar.js.map","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDeepCompareEffect } from 'react-use';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader, CardHeaderMain } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { useSession } from '../authentication/authenticationContext';\nimport {\n  useProduct,\n  useProductInventoryHostsConfig,\n  useProductInventoryHostsQuery\n} from '../productView/productViewContext';\nimport { helpers } from '../../common';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { InventoryGuests } from '../inventoryGuests/inventoryGuests';\nimport { inventoryCardHelpers } from './inventoryCardHelpers';\nimport Pagination from '../pagination/pagination';\nimport { ToolbarFieldDisplayName } from '../toolbar/toolbarFieldDisplayName';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\nimport { useGetInstancesInventory, useOnPageInstances, useOnColumnSortInstances } from './inventoryCardContext';\n\n/**\n * Instances, Hosts, and Subscriptions base inventory card.\n *\n * @memberof Components\n * @module InventoryCard\n * @property {module} InventoryCardContext\n * @property {module} InventoryCardHelpers\n * @property {module} InventoryCardHosts\n */\n\n/**\n * ToDo: Update table component and review the deep comparison use on data\n * The newer table wrapper should remove the need to use the deep comparison,\n * temporarily using to allow the move from the deprecated inventory.\n */\n/**\n * Set up inventory cards. Expand filters with base settings.\n *\n * @param {object} props\n * @param {React.ReactNode} props.cardActions\n * @param {boolean} props.isDisabled\n * @param {number} props.perPageDefault\n * @param {Function} props.t\n * @param {Function} props.useGetInventory\n * @param {Function} props.useOnPage\n * @param {Function} props.useOnColumnSort\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryConfig\n * @param {Function} props.useProductInventoryQuery\n * @param {Function} props.useSession\n * @fires onColumnSort\n * @fires onPage\n * @returns {React.ReactNode}\n */\nconst InventoryCard = ({\n  cardActions,\n  isDisabled,\n  perPageDefault,\n  t,\n  useGetInventory: useAliasGetInventory,\n  useOnPage: useAliasOnPage,\n  useOnColumnSort: useAliasOnColumnSort,\n  useProduct: useAliasProduct,\n  useProductInventoryConfig: useAliasProductInventoryConfig,\n  useProductInventoryQuery: useAliasProductInventoryQuery,\n  useSession: useAliasSession\n}) => {\n  const [updatedColumnsRows, setUpdatedColumnsRows] = useState({ columnHeaders: [], rows: [] });\n  const sessionData = useAliasSession();\n  const query = useAliasProductInventoryQuery();\n  const onPage = useAliasOnPage();\n  const onColumnSort = useAliasOnColumnSort();\n  const { productId } = useAliasProduct();\n  const { filters: filterInventoryData, settings } = useAliasProductInventoryConfig();\n  const { error, fulfilled, pending, data = {} } = useAliasGetInventory({ isDisabled });\n  const { data: listData = [], meta = {} } = data;\n\n  useDeepCompareEffect(() => {\n    let updatedColumnHeaders = [];\n    let updatedRows = [];\n\n    if (fulfilled && listData.length) {\n      updatedRows = listData.map(({ ...cellData }) => {\n        const { columnHeaders, cells } = inventoryCardHelpers.parseRowCellsListData({\n          filters: inventoryCardHelpers.parseInventoryFilters({\n            filters: filterInventoryData,\n            onSort: onColumnSort,\n            query\n          }),\n          cellData,\n          meta,\n          session: sessionData,\n          productId\n        });\n\n        updatedColumnHeaders = columnHeaders;\n        const subscriptionManagerId = cellData?.subscriptionManagerId;\n        const numberOfGuests = cellData?.numberOfGuests;\n        let isSubTable;\n\n        // Is there a subTable, callback, or attempt to determine, return boolean\n        if (typeof settings?.hasSubTable === 'function') {\n          isSubTable = settings.hasSubTable({ ...cellData }, { ...sessionData });\n        } else {\n          isSubTable = numberOfGuests > 0 && subscriptionManagerId;\n        }\n\n        return {\n          cells,\n          expandedContent:\n            (isSubTable && (\n              <InventoryGuests\n                key={`guests-${subscriptionManagerId}`}\n                numberOfGuests={numberOfGuests}\n                id={subscriptionManagerId}\n              />\n            )) ||\n            undefined\n        };\n      });\n    }\n\n    setUpdatedColumnsRows(() => ({\n      columnHeaders: updatedColumnHeaders,\n      rows: updatedRows\n    }));\n  }, [filterInventoryData, fulfilled, listData]);\n\n  if (isDisabled) {\n    return (\n      <Card className=\"curiosity-inventory-card__disabled\">\n        <CardBody>\n          <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n        </CardBody>\n      </Card>\n    );\n  }\n\n  const itemCount = meta?.count;\n  const updatedPerPage = query[RHSM_API_QUERY_SET_TYPES.LIMIT] || perPageDefault;\n  const updatedOffset = query[RHSM_API_QUERY_SET_TYPES.OFFSET];\n  const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n  // Set an updated key to force refresh minHeight\n  const minHeightContentRefreshKey =\n    (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    `bodyMinHeight-${updatedPerPage}`;\n\n  return (\n    <Card className=\"curiosity-inventory-card\">\n      <MinHeight key=\"headerMinHeight\" updateOnContent>\n        <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n          {cardActions}\n          <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n            <Pagination\n              isCompact\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              offset={updatedOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={updatedPerPage}\n            />\n          </CardActions>\n        </CardHeader>\n      </MinHeight>\n      <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n        <CardBody>\n          <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n            {pending && (\n              <Loader\n                variant=\"table\"\n                tableProps={{\n                  className: 'curiosity-inventory-list',\n                  colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                  colWidth:\n                    (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                  rowCount: listData?.length || updatedPerPage,\n                  variant: TableVariant.compact\n                }}\n              />\n            )}\n            {!pending && (\n              <Table\n                borders\n                variant={TableVariant.compact}\n                className=\"curiosity-inventory-list\"\n                columnHeaders={updatedColumnsRows.columnHeaders}\n                rows={updatedColumnsRows.rows}\n              />\n            )}\n          </div>\n        </CardBody>\n      </MinHeight>\n      <MinHeight key=\"footerMinHeight\" updateOnContent>\n        <CardFooter\n          className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n          aria-hidden={error || !itemCount || false}\n        >\n          <TableToolbar isFooter>\n            <Pagination\n              dropDirection=\"up\"\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              offset={updatedOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={updatedPerPage}\n            />\n          </TableToolbar>\n        </CardFooter>\n      </MinHeight>\n    </Card>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{cardActions: React.ReactNode, useSession: Function, useOnPage: Function, useProduct: Function, t: Function,\n *     perPageDefault: number, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCard.propTypes = {\n  cardActions: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  t: PropTypes.func,\n  useGetInventory: PropTypes.func,\n  useOnPage: PropTypes.func,\n  useOnColumnSort: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryConfig: PropTypes.func,\n  useProductInventoryQuery: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{cardActions: React.ReactNode, useSession: Function, useOnPage: Function, useProduct: Function, t: translate,\n *     perPageDefault: number, isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function,\n *     useOnColumnSort: Function, useProductInventoryQuery: Function}}\n */\nInventoryCard.defaultProps = {\n  cardActions: (\n    <CardHeaderMain>\n      <ToolbarFieldDisplayName />\n    </CardHeaderMain>\n  ),\n  isDisabled: helpers.UI_DISABLED_TABLE_INSTANCES,\n  perPageDefault: 10,\n  t: translate,\n  useGetInventory: useGetInstancesInventory,\n  useOnPage: useOnPageInstances,\n  useOnColumnSort: useOnColumnSortInstances,\n  useProduct,\n  useProductInventoryConfig: useProductInventoryHostsConfig,\n  useProductInventoryQuery: useProductInventoryHostsQuery,\n  useSession\n};\n\nexport { InventoryCard as default, InventoryCard };\n","import { useShallowCompareEffect } from 'react-use';\nimport _camelCase from 'lodash/camelCase';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport {\n  RHSM_API_QUERY_INVENTORY_HOSTS_SORT_TYPES as HOSTS_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\n\n/**\n * @memberof InventoryCard\n * @module InventoryCardContext\n */\n\n/**\n * Combined Redux RHSM Actions, getHostsInventory, and inventory selector response.\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}|Array|{}), pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetHostsInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getHostsInventory,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryHostsQuery,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductInventoryQuery();\n  const dispatch = useAliasDispatch();\n  const { cancelled, pending, data, ...response } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.hostsInventory?.[productId]\n  );\n\n  useShallowCompareEffect(() => {\n    if (!isDisabled) {\n      getInventory(productId, query)(dispatch);\n    }\n  }, [dispatch, isDisabled, productId, query]);\n\n  return {\n    ...response,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * Combined Redux RHSM Actions, getInstancesInventory, and inventory selector response.\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}|Array|{}), pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useGetInstancesInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getInstancesInventory,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryHostsQuery,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductInventoryQuery();\n  const dispatch = useAliasDispatch();\n  const { cancelled, pending, data, ...response } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.instancesInventory?.[productId]\n  );\n\n  useShallowCompareEffect(() => {\n    if (!isDisabled) {\n      getInventory(productId, query)(dispatch);\n    }\n  }, [dispatch, isDisabled, productId, query]);\n\n  return {\n    ...response,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * An onPage callback for instances inventory.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnPageInstances = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for instances inventory.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   * @returns {void}\n   */\n  return ({ offset, perPage }) => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n};\n\n/**\n * An onColumnSort callback for hosts inventory.\n *\n * @param {object} options\n * @param {object} options.sortColumns\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnColumnSortHosts = ({\n  sortColumns = HOSTS_SORT_TYPES,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for hosts inventory.\n   *\n   * @event onColumnSort\n   * @param {*} _data\n   * @param {object} params\n   * @param {string} params.direction\n   * @param {string} params.id\n   * @returns {void}\n   */\n  return (_data, { direction, id }) => {\n    const updatedSortColumn = Object.values(sortColumns).find(value => value === id || _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n};\n\n/**\n * An onColumnSort callback for instances inventory.\n *\n * @param {object} options\n * @param {object} options.sortColumns\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnColumnSortInstances = ({\n  sortColumns = SORT_TYPES,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for instances inventory.\n   *\n   * @event onColumnSort\n   * @param {*} _data\n   * @param {object} params\n   * @param {string} params.direction\n   * @param {string} params.id\n   * @returns {void}\n   */\n  return (_data, { direction, id }) => {\n    const updatedSortColumn = Object.values(sortColumns).find(value => value === id || _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n};\n\nconst context = {\n  useGetHostsInventory,\n  useGetInstancesInventory,\n  useOnPageInstances,\n  useOnColumnSortHosts,\n  useOnColumnSortInstances\n};\n\nexport {\n  context as default,\n  context,\n  useGetHostsInventory,\n  useGetInstancesInventory,\n  useOnPageInstances,\n  useOnColumnSortHosts,\n  useOnColumnSortInstances\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Normalize component height on page loads and updates.\n *\n * @memberof Components\n * @module MinHeight\n */\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {React.ReactNode}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: React.ReactNode, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * Inventory paging.\n *\n * @memberof Components\n * @module Pagination\n * @property {module} PaginationHelpers\n */\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {React.ReactNode}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","/**\n * @memberof Pagination\n * @module PaginationHelpers\n */\n\n/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup } from '@patternfly/react-core';\nimport _debounce from 'lodash/debounce';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport { TextInput } from '../form/textInput';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A standalone Display Name input filter.\n *\n * @memberof Toolbar\n * @module ToolbarFieldDisplayName\n */\n\n/**\n * ToDo: evaluate the debounce milliseconds, currently based off platforms default 800 ms\n */\n/**\n * Display a display name input field for search.\n *\n * @fires onSubmit\n * @fires onClear\n * @fires onKeyUp\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.useDispatch\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryHostsQuery\n * @returns {React.ReactNode}\n */\nconst ToolbarFieldDisplayName = ({\n  t,\n  useDispatch: useAliasDispatch,\n  useProduct: useAliasProduct,\n  useProductInventoryHostsQuery: useAliasProductInventoryHostsQuery\n}) => {\n  const { viewId } = useAliasProduct();\n  const { [RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME]: currentValue } = useAliasProductInventoryHostsQuery();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On submit, dispatch type.\n   *\n   * @event onSubmit\n   * @param {string} submitValue\n   * @returns {void}\n   */\n  const onSubmit = submitValue =>\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME]: submitValue?.trim() || null\n      }\n    ]);\n\n  /**\n   * On clear, dispatch type.\n   *\n   * @event onClear\n   * @returns {void}\n   */\n  const onClear = () => {\n    if (currentValue === '' || !currentValue) {\n      return;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME]: null\n      }\n    ]);\n  };\n\n  /**\n   * Set up submit debounce event to allow for bypass.\n   */\n  const debounced = _debounce(onSubmit, 700);\n\n  /**\n   * On enter submit value, on type submit value, and on esc ignore (clear value at component level).\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 13:\n        onSubmit(event.value);\n        break;\n      case 27:\n        break;\n      default:\n        debounced(event.value);\n        break;\n    }\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        aria-label={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        className=\"curiosity-input__display-name\"\n        iconVariant=\"search\"\n        maxLength={255}\n        onClear={onClear}\n        onKeyUp={onKeyUp}\n        value={currentValue}\n        placeholder={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        data-test=\"toolbarFieldDisplayName\"\n      />\n    </InputGroup>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.propTypes = {\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryHostsQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.defaultProps = {\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useProduct,\n  useProductInventoryHostsQuery\n};\n\nexport { ToolbarFieldDisplayName as default, ToolbarFieldDisplayName };\n"],"names":["TextInput","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","updatedValue","onKeyUp","event","_this$props","props","onClear","type","currentTarget","keyCode","clonedEvent","_objectSpread","createMockEvent","value","setState","onMouseUp","_this$props2","setTimeout","onChange","_createClass","key","_ref","this","_this$props3","className","id","isDisabled","name","isReadOnly","_objectWithoutProperties","_excluded","updatedName","helpers","updatedId","React","PfTextInput","Object","assign","defaultProps","__assign","t","s","i","n","p","prototype","hasOwnProperty","generateCount","results","_a","_b","_c","isFooter","selected","children","ouiaId","_d","ouiaSafe","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","tableToolbarClasses","ouiaComponentType","ouiaFinalId","useOUIAId","Fragment","Toolbar","InventoryCard","cardActions","perPageDefault","useAliasGetInventory","useGetInventory","useAliasOnPage","useOnPage","useAliasOnColumnSort","useOnColumnSort","useAliasProduct","useProduct","useAliasProductInventoryConfig","useProductInventoryConfig","useAliasProductInventoryQuery","useProductInventoryQuery","useAliasSession","useSession","_useState","useState","columnHeaders","rows","_useState2","_slicedToArray","updatedColumnsRows","setUpdatedColumnsRows","sessionData","query","onPage","onColumnSort","productId","_useAliasProductInven","filterInventoryData","filters","settings","_useAliasGetInventory","error","fulfilled","pending","_useAliasGetInventory2","data","_data$data","listData","_data$meta","meta","useDeepCompareEffect","updatedColumnHeaders","updatedRows","map","_ref2","cellData","_inventoryCardHelpers","inventoryCardHelpers","onSort","session","cells","subscriptionManagerId","numberOfGuests","expandedContent","hasSubTable","InventoryGuests","undefined","Card","CardBody","Bullseye","context","itemCount","count","updatedPerPage","RHSM_API_QUERY_SET_TYPES","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","MinHeight","updateOnContent","CardHeader","CardActions","Pagination","isCompact","offset","onPerPage","perPage","Loader","variant","tableProps","colCount","keys","colWidth","_ref3","cellWidth","rowCount","TableVariant","Table","borders","CardFooter","TableToolbar","dropDirection","CardHeaderMain","ToolbarFieldDisplayName","translate","useGetInstancesInventory","useOnPageInstances","useOnColumnSortInstances","useProductInventoryHostsConfig","useProductInventoryHostsQuery","useGetHostsInventory","_ref$isDisabled","_ref$getInventory","getInventory","reduxActions","_ref$useDispatch","useDispatch","useAliasDispatch","storeHooks","_ref$useProduct","_ref$useProductInvent","_ref$useSelectorsResp","useSelectorsResponse","useAliasSelectorsResponse","_useAliasProduct","dispatch","_useAliasSelectorsRes","_inventory$hostsInven","inventory","hostsInventory","cancelled","response","useShallowCompareEffect","_ref3$isDisabled","_ref3$getInventory","_ref3$useDispatch","_ref3$useProduct","_ref3$useProductInven","_ref3$useSelectorsRes","_useAliasProduct2","_useAliasSelectorsRes2","_ref4","_inventory$instancesI","instancesInventory","_excluded2","_ref5","_ref5$useDispatch","_ref5$useProduct","_useAliasProduct3","_ref6","_defineProperty","reduxTypes","viewId","useOnColumnSortHosts","_ref9","_ref9$sortColumns","sortColumns","HOSTS_SORT_TYPES","_ref9$useDispatch","_ref9$useProduct","_useAliasProduct4","_data","_ref10","updatedDirection","direction","updatedSortColumn","values","find","_camelCase","SortByDirection","SORT_DIRECTION_TYPES","console","warn","_ref13","_ref13$sortColumns","SORT_TYPES","_ref13$useDispatch","_ref13$useProduct","_useAliasProduct5","_ref14","containerRef","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","_this$containerRef","_this$containerRef$cu","_assertThisInitialized","updateOnResize","clientWidth","current","setMinHeight","_this2","window","setResizeObserver","_this3","clientHeight","reset","overrideMinHeight","minHeight","_this$containerRef$cu2","domElement","_this$innerContainerR","innerDomElement","style","_this4","addEventListener","removeEventListener","ref","PfPagination","onSetPage","page","limit","onPerPageSelect","calculateOffsetFromPage","calculatePageFromOffset","Math","ceil","useAliasProductInventoryHostsQuery","currentValue","onSubmit","submitValue","trim","debounced","_debounce","InputGroup","iconVariant","maxLength","placeholder"],"sourceRoot":""}
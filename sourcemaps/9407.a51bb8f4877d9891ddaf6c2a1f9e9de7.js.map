{"version":3,"file":"js/9407.1670431853948.6a8e7031e202f1445c9d.js","mappings":"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","sources":["webpack:///./src/components/form/select.js","webpack:///./src/components/graphCard/graphCardContext.js","webpack:///./src/components/graphCard/graphCardMetricTotals.js","webpack:///./src/components/minHeight/minHeight.js","webpack:///./src/components/toolbar/toolbarFieldRangedMonthly.js","webpack:///./node_modules/fast-shallow-equal/index.js","webpack:///./node_modules/react-use/esm/useCustomCompareEffect.js","webpack:///./node_modules/react-use/esm/useShallowCompareEffect.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  DropdownDirection,\n  DropdownPosition,\n  Select as PfSelect,\n  SelectOption as PfSelectOption,\n  SelectVariant\n} from '@patternfly/react-core';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport _findIndex from 'lodash/findIndex';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Pass direction as select component variant option.\n *\n * @type {DropdownDirection}\n */\nconst SelectDirection = DropdownDirection;\n\n/**\n * Pass position as select component variant option.\n *\n * @type {DropdownPosition}\n */\nconst SelectPosition = DropdownPosition;\n\n/**\n * FixMe: PF isFlipEnabled busts left/right positioning, we now disable it by default\n * We caught this adjustment through our component code test snapshots. PF positioning for left/right has issues in general on\n * Select (Dropdown used to use the same styling, and functioned correctly, we'd need to reevaluate it now). We patched Select\n * with a minor styling adjustment for position from Dropdown, this worked until isFlipEnabled became defaulted to true.\n * Evaluate on next PF patch.\n */\n/**\n * A wrapper for Patternfly Select. Provides restructured event data for onSelect callback.\n *\n * @augments React.Component\n * @fires onSelect\n * @fires onToggle\n */\nclass Select extends React.Component {\n  state = { isExpanded: false, options: null, selected: null };\n\n  selectField = React.createRef();\n\n  componentDidMount() {\n    const { options } = this.state;\n\n    if (options === null) {\n      this.formatOptions();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedOptions } = this.props;\n\n    if (!_isEqual(prevProps.options, options) || !_isEqual(prevProps.selectedOptions, selectedOptions)) {\n      this.formatOptions();\n    }\n  }\n\n  /**\n   * Emulate select event object, apply to provided onSelect prop.\n   *\n   * @event onSelect\n   * @param {object} event\n   * @param {string} titleSelection\n   */\n  onSelect = (event, titleSelection) => {\n    const { options } = this.state;\n    const { id, name, onSelect, variant } = this.props;\n\n    const updatedOptions = options;\n    const optionsIndex = updatedOptions.findIndex(option => option.title === titleSelection);\n    updatedOptions[optionsIndex].selected =\n      variant === SelectVariant.single ? true : !updatedOptions[optionsIndex].selected;\n\n    if (variant === SelectVariant.single) {\n      updatedOptions.forEach((option, index) => {\n        if (optionsIndex !== index) {\n          updatedOptions[index].selected = false;\n        }\n      });\n    }\n\n    const updateSelected =\n      variant === SelectVariant.single\n        ? titleSelection\n        : updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n\n    this.setState(\n      {\n        options: updatedOptions,\n        selected: updateSelected\n      },\n      () => {\n        const mockUpdatedOptions = _cloneDeep(updatedOptions);\n\n        const mockTarget = {\n          id,\n          name: name || id,\n          value: mockUpdatedOptions[optionsIndex].value,\n          selected:\n            (variant === SelectVariant.single && mockUpdatedOptions[optionsIndex]) || _cloneDeep(updateSelected),\n          selectedIndex: optionsIndex,\n          type: `select-${(variant === SelectVariant.single && 'one') || 'multiple'}`,\n          options: mockUpdatedOptions\n        };\n\n        if (variant === SelectVariant.checkbox) {\n          mockTarget.checked = mockUpdatedOptions[optionsIndex].selected;\n        }\n\n        const mockEvent = {\n          ...mockTarget,\n          target: { ...mockTarget },\n          currentTarget: { ...mockTarget },\n          persist: helpers.noop\n        };\n\n        onSelect({ ...mockEvent }, optionsIndex, mockUpdatedOptions);\n\n        if (variant === SelectVariant.single) {\n          this.setState({\n            isExpanded: false\n          });\n        }\n      }\n    );\n  };\n\n  /**\n   * Patternfly Select's open/closed state.\n   *\n   * @event onToggle\n   * @param {boolean} expanded\n   */\n  onToggle = expanded => {\n    this.setState({\n      isExpanded: expanded\n    });\n  };\n\n  // FixMe: attributes filtered on PF select component. allow data- attributes\n  /**\n   * Format options into a consumable array of objects format.\n   * Note: It is understood that for line 151'ish around \"updatedOptions\" we dump all values regardless\n   * of whether they are plain objects, or not, into updatedOptions. This has been done for speed only,\n   * one less check to perform.\n   */\n  formatOptions() {\n    const { current: domElement = {} } = this.selectField;\n    const { options, selectedOptions, variant } = this.props;\n    const dataAttributes = Object.entries(this.props).filter(([key]) => /^data-/i.test(key));\n    const updatedOptions = _isPlainObject(options)\n      ? Object.entries(options).map(([key, value]) => ({ ...value, title: key, value }))\n      : _cloneDeep(options);\n\n    const activateOptions =\n      (selectedOptions && typeof selectedOptions === 'string') || typeof selectedOptions === 'number'\n        ? [selectedOptions]\n        : selectedOptions;\n\n    updatedOptions.forEach((option, index) => {\n      let convertedOption = option;\n\n      if (typeof convertedOption === 'string') {\n        convertedOption = {\n          title: option,\n          value: option\n        };\n\n        updatedOptions[index] = convertedOption;\n      }\n\n      convertedOption.text = convertedOption.text || convertedOption.title;\n      convertedOption.textContent = convertedOption.textContent || convertedOption.title;\n      convertedOption.label = convertedOption.label || convertedOption.title;\n\n      if (activateOptions) {\n        let isSelected;\n\n        if (_isPlainObject(convertedOption.value)) {\n          isSelected = _findIndex(activateOptions, convertedOption.value) > -1;\n\n          if (!isSelected) {\n            const tempSearch = activateOptions.find(activeOption =>\n              Object.values(convertedOption.value).includes(activeOption)\n            );\n            isSelected = !!tempSearch;\n          }\n        } else {\n          isSelected = activateOptions.includes(convertedOption.value);\n        }\n\n        if (!isSelected) {\n          isSelected = activateOptions.includes(convertedOption.title);\n        }\n\n        updatedOptions[index].selected = isSelected;\n      }\n    });\n\n    let updateSelected;\n\n    if (variant === SelectVariant.single) {\n      updateSelected = (updatedOptions.find(opt => opt.selected === true) || {}).title;\n    } else {\n      updateSelected = updatedOptions.filter(opt => opt.selected === true).map(opt => opt.title);\n    }\n\n    if (domElement?.parentRef?.current) {\n      dataAttributes.forEach(([key, value]) => domElement?.parentRef?.current.setAttribute(key, value));\n    }\n\n    this.setState({\n      options: updatedOptions,\n      selected: updateSelected\n    });\n  }\n\n  /**\n   * Render a select/dropdown list.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { options, selected, isExpanded } = this.state;\n    const {\n      ariaLabel,\n      className,\n      direction,\n      isDisabled,\n      isFlipEnabled,\n      isToggleText,\n      maxHeight,\n      placeholder,\n      position,\n      toggleIcon,\n      variant\n    } = this.props;\n\n    const pfSelectOptions = {\n      direction,\n      isFlipEnabled,\n      maxHeight\n    };\n\n    // FixMe: investigate \"isDisabled\", PFReact quirks?\n    if (!options || !options.length || isDisabled) {\n      pfSelectOptions.isDisabled = true;\n    }\n\n    /**\n     * FixMe: PFReact quirks around PfSelect, requires children\n     * \"Null\" is a typical fallback we use across the board on a multitude of React apps.\n     * In this case \"null\" is a fallback for scenarios where an \"undefined\" list is passed\n     * during initial mount. Converted to an empty list/array \"[]\" to compensate.\n     */\n    /**\n     * Note: PFReact missing select border on compile\n     * Related https://github.com/patternfly/patternfly-react/issues/5650 and\n     * https://github.com/cssnano/cssnano/issues/1051\n     */\n    return (\n      <div className=\"curiosity-select\">\n        <PfSelect\n          menuAppendTo=\"parent\"\n          className={`curiosity-select-pf${(!isToggleText && '__no-toggle-text') || ''} ${\n            (position === DropdownPosition.right && 'curiosity-select-pf__position-right') || ''\n          } ${className}`}\n          variant={variant}\n          aria-label={ariaLabel}\n          onToggle={this.onToggle}\n          onSelect={this.onSelect}\n          selections={selected}\n          isOpen={isExpanded}\n          toggleIcon={toggleIcon}\n          placeholderText={placeholder}\n          ref={this.selectField}\n          {...pfSelectOptions}\n        >\n          {(options &&\n            options.map(option => (\n              <PfSelectOption\n                key={window.btoa(`${option.title}-${option.value}`)}\n                id={window.btoa(`${option.title}-${option.value}`)}\n                value={option.title}\n                data-value={(_isPlainObject(option.value) && JSON.stringify([option.value])) || option.value}\n                data-title={option.title}\n              />\n            ))) ||\n            []}\n        </PfSelect>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{isFlipEnabled: boolean, toggleIcon: React.ReactNode|Function, className: string, ariaLabel: string,\n *     onSelect: Function, isToggleText: boolean, maxHeight: number, name: string, options: Array|object,\n *     selectedOptions: number|string|Array, variant: string, id: string, isDisabled: boolean,\n *     placeholder: string, position: string, direction: string}}\n */\nSelect.propTypes = {\n  ariaLabel: PropTypes.string,\n  className: PropTypes.string,\n  direction: PropTypes.oneOf(Object.values(SelectDirection)),\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isFlipEnabled: PropTypes.bool,\n  isToggleText: PropTypes.bool,\n  maxHeight: PropTypes.number,\n  name: PropTypes.string,\n  onSelect: PropTypes.func,\n  options: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        title: PropTypes.any,\n        value: PropTypes.any.isRequired,\n        selected: PropTypes.bool\n      })\n    ),\n    PropTypes.shape({\n      title: PropTypes.any,\n      value: PropTypes.any.isRequired,\n      selected: PropTypes.bool\n    }),\n    PropTypes.object\n  ]),\n  placeholder: PropTypes.string,\n  position: PropTypes.oneOf(Object.values(SelectPosition)),\n  selectedOptions: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string]))\n  ]),\n  toggleIcon: PropTypes.element,\n  variant: PropTypes.oneOf([...Object.values(SelectVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{isFlipEnabled: boolean, toggleIcon: React.ReactNode|Function, className: string, ariaLabel: string,\n *     onSelect: Function, isToggleText: boolean, maxHeight: null, name: null, options: *[], selectedOptions: null,\n *     variant: SelectVariant.single, id: string, isDisabled: boolean, placeholder: string,\n *     position: DropdownPosition.left, direction: DropdownDirection.down}}\n */\nSelect.defaultProps = {\n  ariaLabel: 'Select option',\n  className: '',\n  direction: SelectDirection.down,\n  id: helpers.generateId(),\n  isDisabled: false,\n  isFlipEnabled: false,\n  isToggleText: true,\n  maxHeight: null,\n  name: null,\n  onSelect: helpers.noop,\n  options: [],\n  placeholder: 'Select option',\n  position: SelectPosition.left,\n  selectedOptions: null,\n  toggleIcon: null,\n  variant: SelectVariant.single\n};\n\nexport { Select as default, Select, SelectDirection, SelectPosition };\n","import React, { useContext } from 'react';\nimport { useShallowCompareEffect } from 'react-use';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { useProduct, useProductGraphTallyQuery } from '../productView/productViewContext';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Chart context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{ settings: { isStandalone: false, metrics: [], metric: undefined } }, helpers.noop];\n\nconst GraphCardContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated graph card context.\n *\n * @returns {React.Context<{}>}\n */\nconst useGraphCardContext = () => useContext(GraphCardContext);\n\n/**\n * Transform multiple metrics from store for chart/graph consumption.\n *\n * @param {object} options\n * @param {Function} options.useGraphCardContext\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: {}, pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, dataSets: unknown[], message: null, error: boolean}}\n */\nconst useMetricsSelector = ({\n  useGraphCardContext: useAliasGraphCardContext = useGraphCardContext,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsAllSettledResponse\n} = {}) => {\n  const { settings = {} } = useAliasGraphCardContext();\n  const { metrics = [] } = settings;\n\n  const {\n    error,\n    fulfilled,\n    pending,\n    data = [],\n    ...response\n  } = useAliasSelectorsResponse(\n    metrics.map(\n      ({ id: metricId, isCapacity }) =>\n        ({ graph }) =>\n          isCapacity ? graph.capacity?.[metricId] : graph.tally?.[metricId]\n    )\n  );\n\n  /**\n   * Apply graph config settings to metric data.\n   */\n  const dataById = {};\n  const dataByList = data?.map((metricData, index) => {\n    const updatedMetricData = {\n      ...metrics[index],\n      ...metricData\n    };\n    dataById[metrics[index].id] = updatedMetricData;\n    return updatedMetricData;\n  });\n\n  return {\n    ...response,\n    data: dataById,\n    dataSets: dataByList,\n    error,\n    fulfilled,\n    pending\n  };\n};\n\n/**\n * Get graph metrics from Tally or Capacity.\n *\n * @param {object} params\n * @param {Function} params.getGraphMetrics\n * @param {Function} params.useDispatch\n * @param {Function} params.useGraphCardContext\n * @param {Function} params.useMetricsSelector\n * @param {Function} params.useProduct\n * @param {Function} params.useProductGraphTallyQuery\n * @returns {{data: {}, pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, dataSets: *[], message: null, error: boolean}}\n */\nconst useGetMetrics = ({\n  getGraphMetrics = reduxActions.rhsm.getGraphMetrics,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useGraphCardContext: useAliasGraphCardContext = useGraphCardContext,\n  useMetricsSelector: useAliasMetricsSelector = useMetricsSelector,\n  useProduct: useAliasProduct = useProduct,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery = useProductGraphTallyQuery\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductGraphTallyQuery();\n  const dispatch = useAliasDispatch();\n  const { settings = {} } = useAliasGraphCardContext();\n  const { metrics = [] } = settings;\n\n  const { pending, ...response } = useAliasMetricsSelector();\n\n  useShallowCompareEffect(() => {\n    if (!pending) {\n      const updatedMetrics = metrics.map(({ metric: metricId, isCapacity, query: metricQuery }) => ({\n        id: productId,\n        metric: metricId,\n        isCapacity,\n        query: metricQuery\n      }));\n      getGraphMetrics(updatedMetrics, query)(dispatch);\n    }\n  }, [metrics, productId, query]);\n\n  return {\n    ...response,\n    pending\n  };\n};\n\nconst context = {\n  GraphCardContext,\n  DEFAULT_CONTEXT,\n  useGetMetrics,\n  useGraphCardContext,\n  useMetricsSelector\n};\n\nexport {\n  context as default,\n  context,\n  GraphCardContext,\n  DEFAULT_CONTEXT,\n  useGetMetrics,\n  useGraphCardContext,\n  useMetricsSelector\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardFooter, CardTitle, Flex, FlexItem } from '@patternfly/react-core';\nimport moment from 'moment';\nimport _camelCase from 'lodash/camelCase';\nimport { useProductGraphTallyQuery } from '../productView/productViewContext';\nimport { useMetricsSelector } from './graphCardContext';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { Loader, SkeletonSize } from '../loader/loader';\nimport { dateHelpers, helpers } from '../../common';\nimport { toolbarFieldOptions } from '../toolbar/toolbarFieldRangedMonthly';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Display totals for a single metric.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {Function} props.t\n * @param {Function} props.useMetricsSelector\n * @param {Function} props.useProductGraphTallyQuery\n * @returns {Node}\n */\nconst GraphCardMetricTotals = ({\n  children,\n  t,\n  useMetricsSelector: useAliasMetricsSelector,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery\n}) => {\n  const { [RHSM_API_QUERY_SET_TYPES.START_DATE]: startDate } = useAliasProductGraphTallyQuery();\n  const { pending, error, fulfilled, dataSets = [] } = useAliasMetricsSelector();\n  const { data = [], id, metric: metricId, meta = {} } = dataSets[0] || {};\n  const { date: lastDate, hasData: lastHasData, y: lastValue } = data[data.length - 1] || {};\n  const {\n    date: currentDate,\n    hasData: currentHasData,\n    y: currentValue\n  } = data.find(({ isCurrentDate }) => isCurrentDate === true) || {};\n\n  const { totalMonthlyDate: monthlyDate, totalMonthlyHasData: monthlyHasData, totalMonthlyValue: monthlyValue } = meta;\n\n  const { title: selectedMonth, isCurrent } =\n    toolbarFieldOptions.find(\n      option => option.title === startDate || option.value.startDate.toISOString() === startDate\n    ) || {};\n\n  const dailyDate = isCurrent ? currentDate : lastDate;\n  const dailyHasData = isCurrent ? currentHasData : lastHasData;\n  const dailyValue = isCurrent ? currentValue : lastValue;\n\n  return (\n    <Flex data-test={`graphMetricTotals-${_camelCase(metricId)}`} className=\"curiosity-usage-graph__totals\">\n      <Flex flex={{ default: 'flex_1' }} direction={{ default: 'column' }} alignSelf={{ default: 'alignSelfStretch' }}>\n        <FlexItem className=\"curiosity-usage-graph__totals-column\">\n          <Card\n            data-test=\"graphDailyTotalCard\"\n            className={`curiosity-usage-graph__totals-column-card ${(error && 'blur') || ''}`}\n          >\n            <CardTitle>\n              {t('curiosity-graph.cardHeadingMetric', {\n                context: ['dailyTotal', id],\n                month: selectedMonth\n              })}\n            </CardTitle>\n            <MinHeight key=\"currentBody\">\n              <CardBody>\n                <div>\n                  {pending && <Loader variant=\"skeleton\" skeletonProps={{ size: SkeletonSize.lg }} />}\n                  {fulfilled &&\n                    t(\n                      'curiosity-graph.cardBodyMetric',\n                      {\n                        context: ['total', dailyHasData && id],\n                        total: helpers\n                          .numberDisplay(dailyValue)\n                          ?.format({\n                            average: true,\n                            mantissa: 5,\n                            trimMantissa: true,\n                            lowPrecision: false\n                          })\n                          ?.toUpperCase()\n                      },\n                      [<strong title={dailyValue} aria-label={dailyValue} />]\n                    )}\n                </div>\n              </CardBody>\n            </MinHeight>\n            <MinHeight key=\"currentFooter\">\n              <CardFooter>\n                <div className={(!dailyHasData && 'hidden') || ''}>\n                  {fulfilled &&\n                    dailyDate &&\n                    t('curiosity-graph.cardFooterMetric', {\n                      date: moment.utc(dailyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort)\n                    })}\n                </div>\n              </CardFooter>\n            </MinHeight>\n          </Card>\n          <Card\n            data-test=\"graphMonthlyTotalCard\"\n            className={`curiosity-usage-graph__totals-column-card ${(error && 'blur') || ''}`}\n          >\n            <CardTitle>\n              {t('curiosity-graph.cardHeadingMetric', {\n                context: ['monthlyTotal', id],\n                month: selectedMonth\n              })}\n            </CardTitle>\n            <MinHeight key=\"totalMonthlyBody\">\n              <CardBody>\n                <div>\n                  {pending && <Loader variant=\"skeleton\" skeletonProps={{ size: SkeletonSize.lg }} />}\n                  {fulfilled &&\n                    t(\n                      'curiosity-graph.cardBodyMetric',\n                      {\n                        context: ['total', monthlyHasData && id],\n                        total: helpers\n                          .numberDisplay(monthlyValue)\n                          ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: false })\n                          ?.toUpperCase()\n                      },\n                      [<strong title={monthlyValue} aria-label={monthlyValue} />]\n                    )}\n                </div>\n              </CardBody>\n            </MinHeight>\n            <MinHeight key=\"totalMonthlyFooter\">\n              <CardFooter>\n                <div className={(!monthlyHasData && 'hidden') || ''}>\n                  {fulfilled &&\n                    monthlyDate &&\n                    t('curiosity-graph.cardFooterMetric', {\n                      date: moment.utc(monthlyDate).format(dateHelpers.timestampUTCTimeFormats.yearTimeShort)\n                    })}\n                </div>\n              </CardFooter>\n            </MinHeight>\n          </Card>\n        </FlexItem>\n      </Flex>\n      <Flex flex={{ default: 'flex_3' }} direction={{ default: 'column' }} alignSelf={{ default: 'alignSelfStretch' }}>\n        <FlexItem className=\"curiosity-usage-graph__totals-graph-column\">{children}</FlexItem>\n      </Flex>\n    </Flex>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProductGraphTallyQuery: Function, t: Function, children: Node, useMetricsSelector: Function}}\n */\nGraphCardMetricTotals.propTypes = {\n  children: PropTypes.node,\n  t: PropTypes.func,\n  useMetricsSelector: PropTypes.func,\n  useProductGraphTallyQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProductGraphTallyQuery: Function, t: Function, children: Node, useMetricsSelector: Function}}\n */\nGraphCardMetricTotals.defaultProps = {\n  children: null,\n  t: translate,\n  useMetricsSelector,\n  useProductGraphTallyQuery\n};\n\nexport { GraphCardMetricTotals as default, GraphCardMetricTotals };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductGraphTallyQuery } from '../productView/productViewContext';\nimport { Select, SelectPosition } from '../form/select';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as FIELD_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { dateHelpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Select field options.\n *\n * @type {{title: (string|Node), value: string, selected: boolean}[]}\n */\nconst toolbarFieldOptions = dateHelpers.getRangedMonthDateTime().listDateTimeRanges.map(dateTime => ({\n  ...dateTime,\n  selected: false\n}));\n\n/**\n * On select update granularity.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnSelect = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { viewId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  return ({ value } = {}) => {\n    const { startDate, endDate } = value;\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_SET_TYPES.GRANULARITY],\n        viewId,\n        [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: FIELD_TYPES.DAILY\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_SET_TYPES.START_DATE],\n        viewId,\n        [RHSM_API_QUERY_SET_TYPES.START_DATE]: startDate?.toISOString()\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_SET_TYPES.END_DATE],\n        viewId,\n        [RHSM_API_QUERY_SET_TYPES.END_DATE]: endDate?.toISOString()\n      }\n    ]);\n  };\n};\n\n/**\n * Display a granularity field with options.\n *\n * @fires onSelect\n * @param {object} props\n * @param {boolean} props.isFilter\n * @param {Array} props.options\n * @param {string} props.position\n * @param {Function} props.t\n * @param {Function} props.useOnSelect\n * @param {Function} props.useProductGraphTallyQuery\n * @returns {Node}\n */\nconst ToolbarFieldRangedMonthly = ({\n  isFilter,\n  options,\n  position,\n  t,\n  useOnSelect: useAliasOnSelect,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery\n}) => {\n  const { [RHSM_API_QUERY_SET_TYPES.START_DATE]: updatedValue } = useAliasProductGraphTallyQuery();\n  const onSelect = useAliasOnSelect();\n\n  const updatedOptions = options.map(option => ({\n    ...option,\n    selected: option.title === updatedValue || option.value.startDate.toISOString() === updatedValue\n  }));\n\n  return (\n    <Select\n      aria-label={t(`curiosity-toolbar.placeholder${(isFilter && '_filter') || ''}`, { context: 'rangedMonthly' })}\n      onSelect={onSelect}\n      options={updatedOptions}\n      placeholder={t(`curiosity-toolbar.placeholder${(isFilter && '_filter') || ''}`, { context: 'rangedMonthly' })}\n      position={position}\n      maxHeight={250}\n      data-test=\"toolbarFieldRangeGranularity\"\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useOnSelect: Function, useProductGraphTallyQuery: Function, t: Function, isFilter: boolean,\n *     options: Array, position: string}}\n */\nToolbarFieldRangedMonthly.propTypes = {\n  isFilter: PropTypes.bool,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.node,\n      value: PropTypes.any,\n      selected: PropTypes.bool\n    })\n  ),\n  position: PropTypes.string,\n  t: PropTypes.func,\n  useOnSelect: PropTypes.func,\n  useProductGraphTallyQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useOnSelect: Function, useProductGraphTallyQuery: Function, t: Function, isFilter: boolean,\n *     options: Array, position: string}}\n */\nToolbarFieldRangedMonthly.defaultProps = {\n  isFilter: false,\n  options: toolbarFieldOptions,\n  position: SelectPosition.left,\n  t: translate,\n  useOnSelect,\n  useProductGraphTallyQuery\n};\n\nexport { ToolbarFieldRangedMonthly as default, ToolbarFieldRangedMonthly, toolbarFieldOptions, useOnSelect };\n","var keyList = Object.keys;\n\nexports.equal = function equal (a, b) {\n  if (a === b) return true;\n  if (!(a instanceof Object) || !(b instanceof Object)) return false;\n\n  var keys = keyList(a);\n  var length = keys.length;\n\n  for (var i = 0; i < length; i++)\n    if (!(keys[i] in b)) return false;\n\n  for (var i = 0; i < length; i++)\n    if (a[keys[i]] !== b[keys[i]]) return false;\n\n  return length === keyList(b).length;\n};\n","import { useEffect, useRef } from 'react';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useCustomCompareEffect = function (effect, deps, depsEqual) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useCustomCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useCustomCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n        if (typeof depsEqual !== 'function') {\n            console.warn('`useCustomCompareEffect` should be used with depsEqual callback for comparing deps list');\n        }\n    }\n    var ref = useRef(undefined);\n    if (!ref.current || !depsEqual(deps, ref.current)) {\n        ref.current = deps;\n    }\n    useEffect(effect, ref.current);\n};\nexport default useCustomCompareEffect;\n","import { equal as isShallowEqual } from 'fast-shallow-equal';\nimport useCustomCompareEffect from './useCustomCompareEffect';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar shallowEqualDepsList = function (prevDeps, nextDeps) {\n    return prevDeps.every(function (dep, index) { return isShallowEqual(dep, nextDeps[index]); });\n};\nvar useShallowCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useShallowCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useShallowCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, shallowEqualDepsList);\n};\nexport default useShallowCompareEffect;\n"],"names":["SelectDirection","DropdownDirection","SelectPosition","DropdownPosition","Select","state","isExpanded","options","selected","selectField","React","onSelect","event","titleSelection","props","id","name","variant","updatedOptions","optionsIndex","findIndex","option","title","SelectVariant","forEach","index","updateSelected","filter","opt","map","setState","mockUpdatedOptions","_cloneDeep","mockTarget","value","selectedIndex","type","checked","mockEvent","target","currentTarget","persist","helpers","onToggle","expanded","this","formatOptions","prevProps","selectedOptions","_isEqual","current","domElement","dataAttributes","Object","entries","key","test","_isPlainObject","activateOptions","isSelected","convertedOption","text","textContent","label","_findIndex","find","activeOption","values","includes","parentRef","setAttribute","ariaLabel","className","direction","isDisabled","isFlipEnabled","isToggleText","maxHeight","placeholder","position","toggleIcon","pfSelectOptions","length","menuAppendTo","selections","isOpen","placeholderText","ref","window","btoa","JSON","stringify","defaultProps","down","left","DEFAULT_CONTEXT","settings","isStandalone","metrics","metric","undefined","GraphCardContext","useGraphCardContext","useContext","useMetricsSelector","useAliasGraphCardContext","useSelectorsResponse","useAliasSelectorsResponse","storeHooks","metricId","isCapacity","graph","capacity","tally","error","fulfilled","pending","data","response","dataById","dataByList","metricData","updatedMetricData","dataSets","useGetMetrics","getGraphMetrics","reduxActions","useDispatch","useAliasDispatch","useAliasMetricsSelector","useProduct","useAliasProduct","useProductGraphTallyQuery","useAliasProductGraphTallyQuery","productId","query","dispatch","useShallowCompareEffect","updatedMetrics","metricQuery","context","GraphCardMetricTotals","children","t","startDate","RHSM_API_QUERY_SET_TYPES","meta","lastDate","date","lastHasData","hasData","lastValue","y","isCurrentDate","currentDate","currentHasData","currentValue","monthlyDate","totalMonthlyDate","monthlyHasData","totalMonthlyHasData","monthlyValue","totalMonthlyValue","toolbarFieldOptions","toISOString","selectedMonth","isCurrent","dailyDate","dailyHasData","dailyValue","Flex","_camelCase","flex","default","alignSelf","FlexItem","Card","CardTitle","month","MinHeight","CardBody","Loader","skeletonProps","size","SkeletonSize","total","format","average","mantissa","trimMantissa","lowPrecision","toUpperCase","CardFooter","moment","dateHelpers","translate","containerRef","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","clientWidth","setMinHeight","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","innerDomElement","style","addEventListener","removeEventListener","listDateTimeRanges","dateTime","useOnSelect","viewId","endDate","reduxTypes","FIELD_TYPES","ToolbarFieldRangedMonthly","isFilter","useAliasOnSelect","updatedValue","keyList","keys","exports","a","b","i","effect","deps","depsEqual","useRef","useEffect","shallowEqualDepsList","prevDeps","nextDeps","every","dep"],"sourceRoot":""}
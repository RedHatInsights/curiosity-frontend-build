{"version":3,"file":"js/8244.1643121555415.01f4c28f8272826bf7dd.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./src/components/inventoryList/inventoryListHelpers.js","webpack:///./src/components/inventorySubscriptions/inventorySubscriptions.js","webpack:///./src/components/minHeight/minHeight.js","webpack:///./src/components/pagination/pagination.js","webpack:///./src/components/pagination/paginationHelpers.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React, { Fragment } from 'react';\nimport { Toolbar } from \"@patternfly/react-core/dist/esm/components/Toolbar/Toolbar.js\";\nimport { useOUIAId } from '@patternfly/react-core/';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\nimport \"../../TableToolbar/./TableToolbar.css\";\n\nfunction generateCount(results) {\n  if (results > 1 || results < 1) {\n    return \"\".concat(results, \" Results\");\n  } else {\n    return \"\".concat(results, \" Result\");\n  }\n}\n\nvar TableToolbar = function TableToolbar(_ref) {\n  var isFooter = _ref.isFooter,\n      results = _ref.results,\n      className = _ref.className,\n      selected = _ref.selected,\n      children = _ref.children,\n      ouiaId = _ref.ouiaId,\n      _ref$ouiaSafe = _ref.ouiaSafe,\n      ouiaSafe = _ref$ouiaSafe === void 0 ? true : _ref$ouiaSafe,\n      props = _objectWithoutProperties(_ref, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n\n  var tableToolbarClasses = classNames('ins-c-table__toolbar', _defineProperty({}, \"ins-m-footer\", isFooter), className);\n  var ouiaComponentType = 'RHI/TableToolbar';\n  var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n  return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(Toolbar, _extends({\n    className: tableToolbarClasses,\n    \"data-ouia-component-type\": ouiaComponentType,\n    \"data-ouia-component-id\": ouiaFinalId,\n    \"data-ouia-safe\": ouiaSafe\n  }, props), children), (results >= 0 || selected >= 0) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ins-c-table__toolbar-results\"\n  }, results >= 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ins-c-table__toolbar-results-count\"\n  }, \" \", generateCount(results), \" \"), selected >= 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ins-c-table__toolbar-results-selected\"\n  }, \" \", selected, \" Selected \")));\n};\n\nexport default TableToolbar;\nTableToolbar.propTypes = {\n  isFooter: propTypes.bool,\n  results: propTypes.number,\n  children: propTypes.any,\n  className: propTypes.string,\n  selected: propTypes.number,\n  ouiaId: propTypes.string,\n  ouiaSafe: propTypes.bool\n};\nTableToolbar.defaultProps = {\n  isFooter: false\n};","import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { helpers } from '../../common';\n\n/**\n * Apply sort filter to filters.\n *\n * @param {object} params\n * @param {{ onSort: Function, sortActive: boolean, sortDirection: string, isSortDefault: boolean,\n *     sortDefaultInitialDirection: string }} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {object}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} }) => {\n  const { id, sortId } = filter;\n  const updatedId = sortId || id;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    (query?.[RHSM_API_QUERY_TYPES.SORT] === updatedId || _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === updatedId)\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  if (\n    hasSort &&\n    !updatedFilter.sortActive &&\n    !query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    updatedFilter.isSortDefault === true\n  ) {\n    updatedFilter.sortActive = true;\n\n    if (updatedFilter.sortDefaultInitialDirection) {\n      updatedFilter.sortDirection = updatedFilter.sortDefaultInitialDirection;\n    }\n  }\n\n  return updatedFilter;\n};\n\nconst applyWrappableFilters = ({ filter = {} }) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Apply additional properties to filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {Array}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} }) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.cellData\n * @param {object} params.session\n * @returns {{columnHeaders: Array, cells: Array, data: object}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, session = {} }) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value]) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value);\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    filters.forEach(({ id, cell, cellWidth, header, onSort, sortId, sortActive, sortDirection, transforms }) => {\n      let headerUpdated;\n      let cellUpdated;\n\n      if (allCells[id]) {\n        headerUpdated = allCells[id]?.title ?? id;\n        cellUpdated = allCells[id]?.value ?? '';\n      } else if (id) {\n        headerUpdated = translate('curiosity-inventory.header', { context: id });\n        cellUpdated = '';\n      }\n\n      // set table header cell filter params\n      if (header) {\n        headerUpdated = (typeof header === 'function' && header({ ...allCells })) || header;\n      }\n\n      if (\n        typeof headerUpdated === 'string' ||\n        typeof headerUpdated === 'number' ||\n        React.isValidElement(headerUpdated)\n      ) {\n        headerUpdated = {\n          title: headerUpdated\n        };\n      }\n\n      if (headerUpdated) {\n        headerUpdated.transforms = [];\n\n        if (Array.isArray(transforms)) {\n          headerUpdated.transforms = headerUpdated.transforms.concat([...transforms]);\n        }\n\n        if (typeof cellWidth === 'number') {\n          headerUpdated.transforms.push(PfCellWidth(cellWidth));\n        }\n      }\n\n      if (typeof onSort === 'function') {\n        headerUpdated = {\n          ...headerUpdated,\n          onSort: obj => onSort({ ...allCells }, { ...obj, id: sortId || id }),\n          sortActive,\n          sortDirection\n        };\n      }\n\n      // set table row cell filter params\n      if (cell) {\n        cellUpdated = typeof cell === 'function' ? cell({ ...allCells }, { ...session }) : cell;\n      }\n\n      if (typeof cellUpdated === 'string' || typeof cellUpdated === 'number' || React.isValidElement(cellUpdated)) {\n        cellUpdated = {\n          title: cellUpdated\n        };\n      } else if (!cellUpdated?.title) {\n        if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n          console.error(\n            `PF table throws an error when cell values don't conform to what it is expecting, or align exactly to column headers.\n            \\n\\nSee cell ID=${id} with VALUE=${cellUpdated}`\n          );\n        }\n\n        cellUpdated = {\n          title: ''\n        };\n      }\n\n      updatedColumnHeaders.push(headerUpdated);\n      updatedCells.push(cellUpdated);\n    });\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryListHelpers = {\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryListHelpers as default,\n  inventoryListHelpers,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A subscriptions system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventorySubscriptions extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getSubscriptionsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getSubscriptionsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterInventoryData, listData, query, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n            <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter\n            className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n            aria-hidden={error || !itemCount || false}\n          >\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, listData: Array, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, error: boolean, getSubscriptionsInventory: Function, itemCount: number,\n *     t: Function, filterInventoryData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventorySubscriptions.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getSubscriptionsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, filterInventoryData: Array, listData: Array, session: object, pending: boolean,\n *     fulfilled: boolean, perPageDefault: number, isDisabled: boolean, error: boolean,\n *     getSubscriptionsInventory: Function, itemCount: number}}\n */\nInventorySubscriptions.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterInventoryData: [],\n  getSubscriptionsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getSubscriptionsInventory: (id, query) => dispatch(reduxActions.rhsm.getSubscriptionsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.subscriptionsList.makeSubscriptionsList();\n\nconst ConnectedInventorySubscriptions = connect(makeMapStateToProps, mapDispatchToProps)(InventorySubscriptions);\n\nexport { ConnectedInventorySubscriptions as default, ConnectedInventorySubscriptions, InventorySubscriptions };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n"],"names":["TableToolbar","_ref","isFooter","results","className","selected","children","ouiaId","_ref$ouiaSafe","ouiaSafe","props","tableToolbarClasses","ouiaComponentType","ouiaFinalId","Fragment","concat","generateCount","propTypes","defaultProps","applySortFilters","filter","onSort","query","id","updatedId","sortId","updatedFilter","hasSort","sortActive","RHSM_API_QUERY_TYPES","_camelCase","sortDirection","SORT_DIRECTION_TYPES","SortByDirection","isSortDefault","sortDefaultInitialDirection","applyWrappableFilters","Array","isArray","transforms","push","wrappable","parseInventoryFilters","filters","map","isSortable","Object","assign","isWrappable","parseRowCellsListData","cellData","session","updatedColumnHeaders","updatedCells","allCells","entries","forEach","key","value","title","translate","context","length","headerUpdated","cellUpdated","cell","cellWidth","header","React","PfCellWidth","obj","helpers","console","error","columnHeaders","cells","data","inventoryListHelpers","InventorySubscriptions","onColumnSort","updatedDirection","direction","productId","updatedSortColumn","values","SORT_TYPES","find","store","type","reduxTypes","viewId","warn","onPage","offset","perPage","onUpdateInventoryData","getSubscriptionsInventory","isDisabled","this","prevProps","_isEqual","filterInventoryData","listData","updatedRows","borders","variant","TableVariant","rows","fulfilled","itemCount","pending","perPageDefault","t","Card","CardBody","Bullseye","updatedPerPage","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","MinHeight","updateOnContent","CardHeader","CardActions","isCompact","onPerPage","Loader","tableProps","colCount","keys","colWidth","rowCount","renderTable","CardFooter","dropDirection","makeMapStateToProps","reduxSelectors","ConnectedInventorySubscriptions","connect","dispatch","reduxActions","containerRef","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","clientWidth","current","setMinHeight","window","setTimeout","setResizeObserver","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","ref","Pagination","onSetPage","event","page","limit","onPerPageSelect","calculateOffsetFromPage","calculatePageFromOffset","Math","ceil"],"sourceRoot":""}
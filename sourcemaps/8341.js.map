{"version":3,"file":"js/8341.1668012320183.3055cd403684971ee96e.js","mappings":"0ZA6BMA,EAAY,SAAH,GAYT,IAXJC,EAAS,EAATA,UACAC,EAAQ,EAARA,SACAC,EAAK,EAALA,MACAC,EAAuB,EAAvBA,wBACAC,EAAS,EAATA,UACAC,EAAI,EAAJA,KACAC,EAAU,EAAVA,WACAC,EAAO,EAAPA,QACYC,EAAe,EAA3BC,WACuBC,EAA0B,EAAjDC,sBAC2BC,EAA8B,EAAzDC,0BAEQC,EAAcN,IAAdM,UACAC,EAAaL,IAAbK,SACFC,EAAQJ,IAcd,IAZAK,EAAAA,EAAAA,IAAwB,WACtB,IACqCC,EAGjCF,EAHDG,EAAAA,GAAAA,YACgCC,EAE/BJ,EAFDG,EAAAA,GAAAA,UACmCE,EAClCL,EADDG,EAAAA,GAAAA,cAGEb,GAAce,GAAeH,GAAaE,GAAWN,GACxDX,EAAwBW,EAAWE,EAEvC,GAAG,CAACb,EAAyBG,EAAYQ,EAAWE,IAEhDV,EACF,OAAO,KAGT,IAAIgB,EAAgB,KAMpB,MAJuC,mBAA5BP,aAAQ,EAARA,EAAUO,iBACnBA,EAAgBP,EAASO,cAAc,CAAEC,MAAM,UAAKnB,GAAaC,MAAM,UAAKA,MAI5E,kBAAC,EAAAmB,KAAI,CAACC,UAAU,yBACd,kBAAC,EAAAC,UAAS,CAACC,IAAI,mBACb,kBAAC,EAAAC,WAAU,KACT,kBAAC,EAAAC,UAAS,KACR,kBAAC,EAAAC,MAAK,CAACC,aAAa,KAAKC,KAAK,MAC3BhC,IAGL,kBAAC,EAAAiC,YAAW,CAACR,UAAYvB,EAAS,OAAW,IAC3C,kBAAC,aAAc,CAACyB,IAAI,iBAAiBL,GACpCrB,KAIP,kBAAC,EAAAyB,UAAS,CAACC,IAAI,iBACb,kBAAC,EAAAO,SAAQ,KACP,yBAAKT,WAAYvB,EAAS,OAAYK,GAAW,WAAa,IAC3DA,GAAW,kBAAC,EAAA4B,OAAM,CAACC,QAAQ,WAC1B7B,GAAW,kBAAC,EAAA8B,eAAc,CAACjC,UAAWA,OAMpD,EA8BAL,EAAUuC,aAAe,CACvBtC,UAAW,KACXC,SAAU,KACVC,OAAO,EACPC,wBAAyBoC,EAAAA,GAAAA,KACzBnC,UAAW,CAAC,EACZE,WAAYiC,EAAAA,GAAAA,kBACZlC,KAAM,CAAC,EACPE,SAAS,EACTE,WAAAA,EAAAA,WACAE,sBAAAA,EAAAA,sBACAE,0BAAAA,EAAAA,2BASF,IASM2B,EAAsBC,EAAAA,GAAAA,UAAAA,gBAEtBC,GAAqBC,EAAAA,EAAAA,IAAQH,GAXR,SAAAI,GAAQ,MAAK,CACtCzC,wBAAyB,SAAC0C,EAAI7B,GAAK,OAAK4B,EAASE,EAAAA,GAAAA,KAAAA,wBAA0CD,EAAI7B,GAAO,EACvG,GAS0B2B,CAAiD5C,E,2NCvItEsC,EAAiB,SAAH,GAId,IAiBsBd,EAClBwB,EArBR3C,EAAS,EAATA,UACuBM,EAA0B,EAAjDC,sBAC2BC,EAA8B,EAAzDC,0BAEQmC,EAAYtC,IAAZsC,QACFhC,EAAQJ,IAC8BS,EAAgBL,EAAnDG,EAAAA,GAAAA,aAEH8B,EAAiB,CACrBC,oBAAqBC,EAAAA,iBAAAA,4BAA6C9B,GAClE+B,gBAAiB,gBAAGC,EAAI,EAAJA,KAAMC,EAAY,EAAZA,aAAcC,EAAI,EAAJA,KAAI,OAC1CJ,EAAAA,iBAAAA,gBAAiC,CAC/BI,KAAAA,EACAC,KAAMH,EAAKG,KACXC,aAAcH,EAAaE,KAC3BnC,YAAAA,GACA,EACJqC,gBAAiBP,EAAAA,iBAAAA,iBA6BnB,OACE,kBAAC,EAAAQ,MAAK,eACJhC,IAAG,gBAAWiC,KAAKC,UAAU7C,KACzBiC,EAAc,CAClBa,UA9BsBvC,EA8BMnB,EA7BxB2C,EAAW,SAAApB,GACf,IAAMoC,EAAe,CACnBxC,KAAMA,EAAKI,GACXkB,GAAIlB,EACJqC,YAAa,EACbC,WAAY,aAAaC,KAAKvC,GAC9BwC,YAAa,aAAaD,KAAKvC,IASjC,MANI,aAAauC,KAAKvC,KACpBoC,EAAaK,OAASC,EAAAA,sBAAAA,MACtBN,EAAaO,gBAAkB,MAC/BP,EAAaC,YAAc,GAGtBD,CACT,EAEIf,SAAAA,EAASuB,OACJvB,EAAQwB,KAAI,SAAAC,GAAK,OAAIC,OAAOC,OAAO5B,EAAS0B,EAAM5B,IAAK4B,EAAM,IAG/DC,OAAOE,KAAKrD,GAAMiD,KAAI,SAAA7C,GAAG,OAAIoB,EAASpB,EAAI,KAQ/CkD,YAAa,gBAAGC,EAAK,EAALA,MAAOC,EAAK,EAALA,MAAK,OAAO,kBAAC,UAAoB,CAACD,MAAOA,EAAOC,MAAOA,GAAS,EACvFC,aAAc,gBAAGD,EAAK,EAALA,MAAK,OAAO,kBAAC,UAAqB,CAACA,MAAOA,GAAS,IAG1E,EAkBA1C,EAAeC,aAAe,CAC5BlC,UAAW,CAAC,EACZO,sBAAAA,EAAAA,sBACAE,0BAAAA,EAAAA,0B,gOCzEIoE,EAAuB,SAAH,GAOpB,IANJH,EAAK,EAALA,MACAC,EAAK,EAALA,MACAG,EAAC,EAADA,EACaC,EAAgB,EAA7BC,YACcC,EAAiB,EAA/BC,aAGA,GAAiC9E,EAFN,EAA3BC,cAEQ8E,EAAY,EAAZA,aAAcC,EAAM,EAANA,OAChB5C,EAAWuC,IACXM,EAAcJ,EAClBN,EAAMjB,SAASU,KACb,gBAAG3B,EAAE,EAAFA,GAAE,OACH,kBAAQ,OACM,QADN,IAAL6C,MACKC,cAAM,aAAZ,YAAkBH,EAAM,YAAI3C,GAAK,OAIzC+C,EAAAA,EAAAA,IAAS,WACPb,EAAMjB,SAAS+B,SAAQ,WAASC,GAAU,IAAhBjD,EAAE,EAAFA,KACD4C,aAAW,EAAXA,EAAcK,KAAUhB,EAAMiB,UAAUlD,KAG7DiC,EAAMkB,KAAKnD,EAEf,GACF,IAQA,IAAMoD,EAAU,SAAApD,GACd,IAAMqD,EAAgBpB,EAAMqB,OAAOtD,GAEnCD,EAAS,CACPwD,KAAMC,EAAAA,GAAAA,MAAAA,iBACNxD,GAAI,GAAF,OAAK2C,EAAM,YAAI3C,GACjB4B,MAAOyB,GAEX,EAEA,OACE,kBAAC,aAAc,KACZnB,EAAMjB,SAASU,KAAI,WAAgDsB,GAAU,IAAvDjD,EAAE,EAAFA,GAAIsB,EAAW,EAAXA,YAAqBmC,EAAK,EAAblC,OAAM,IAAS7C,KAC/CjB,SADmD,IAAG,KAAE,GAEtDiG,MAAK,gBAAGC,EAAC,EAADA,EAAGC,EAAO,EAAPA,QAAO,OAAQD,GAAK,IAAiB,IAAZC,GAAsBD,GAAK,IAAqB,IAAhBrC,CAAqB,MAAK,EAEhGuC,EAAexB,EACnB,CAAC,yBAAD,OAA2Bf,EAAe,YAAgBtB,GAAM,4BAChE,CACE8D,QAASpB,EACTqB,QAASrB,IAIPsB,EAAiB3B,EAAE,gCAAD,OACWf,EAAe,aAAiB,GAAE,YAAItB,GACvE,CACE8D,QAASpB,EACTqB,QAASrB,GAEX,CAAC,0BAAMuB,MAAO,CAAEC,WAAY,cAGxBC,GAAiBvB,aAAW,EAAXA,EAAcK,KAAUhB,EAAMiB,UAAUlD,GAEzDoE,EACJ,kBAAC,EAAAC,OAAM,CACLjB,QAAS,kBAAMA,EAAQpD,EAAG,EAC1BsE,WAAY,kBAAMlB,EAAQpD,EAAG,EAC7BpB,UAAU,qCACV2F,SAAU,EACVzF,IAAG,2BAAsBkB,GACzBT,QAAQ,OACRiF,UAAU,IACV/G,WAAYA,EACZgH,MACIhH,GAAc0G,IAAmB,kBAAC,EAAAO,UAAS,CAACC,OAAO,cACnD,kBAAC,EAAAD,UAAS,CACRC,OAASrD,EAAe,OAAW,SACnC2C,MAAO,CAAEW,WAAanH,GAA4B0G,EAAd,SAA6C,WACjFU,KAAMpB,KAKXI,GAIL,OAAIG,EAEA,kBAAC,EAAAc,QAAO,CACNhG,IAAG,4BAAuBkB,GAC1B+E,QAAS,2BAAIf,GACbgB,SAAUC,EAAAA,gBAAAA,IACVC,YAAU,EACVC,SAAU,GAETf,GAKAA,CACT,IAGN,EAiCAhC,EAAqB3C,aAAe,CAClCwC,MAAO,CACLkB,KAAMzD,EAAAA,GAAAA,KACN4D,OAAQ5D,EAAAA,GAAAA,KACRwD,UAAWxD,EAAAA,GAAAA,MAEbwC,MAAO,CACLjB,SAAU,IAEZoB,EAAG+C,EAAAA,UACH7C,YAAa8C,EAAAA,GAAAA,WAAAA,YACb5C,aAAc4C,EAAAA,GAAAA,WAAAA,aACdzH,WAAAA,EAAAA,W,iOChKI0H,EAAwB,SAAH,GAKrB,IAJJpD,EAAK,EAALA,MACAG,EAAC,EAADA,EACY1E,EAAe,EAA3BC,WAC2BG,EAA8B,EAAzDC,0BAEA,EAAoCL,IAA5BM,EAAS,EAATA,UAAWyE,EAAY,EAAZA,aAC6BlE,EAAgBT,IAAvDwH,EAAAA,GAAAA,aAELC,EAAS,KACP9G,EAAO,GAC0B,GAAXwD,GAAS,CAAC,GAA9BuD,WAAAA,OAAU,IAAG,GAAC,EAAC,EAiDvB,OA/CA5D,OAAOE,KAAK0D,GACTC,UACA1C,SAAQ,SAAClE,EAAKmE,GAAU,UACN,EAAH,IAAVA,IACFuC,GAASG,EAAAA,EAAAA,gBAAe,CACtBhF,KAAqB,QAAjB,EAAE8E,EAAW3G,UAAI,aAAf,EAAiBJ,KAAKiC,KAC5BnC,YAAAA,KAIJ,IAAMoH,EAAgB,CACpBnC,MAAsB,QAAjB,EAAEgC,EAAW3G,UAAI,aAAf,EAAiB2E,OAG1B,IAAmB,QAAf,EAAAgC,EAAW3G,UAAI,aAAf,EAAiB+G,aAAcC,EAAAA,iBAAAA,UAA4B,WACzDC,EAA8C,QAA1B,EAAkB,QAAlB,EAAGN,EAAW3G,UAAI,aAAf,EAAiBJ,KAAKiF,SAAC,QAAItB,EAAE,gCAErC,QAAnB,EAAIoD,EAAW3G,UAAI,OAAf,EAAiBJ,KAAKsH,cAEtBD,EADEH,EAAcnC,MAEd,kBAAC,EAAAiB,UAAS,CACRC,OAAO,WACPE,KAAK,UACLoB,MAAO5D,EAAE,kCAAmC,CAAE0B,QAAS,eAIpC1B,EAAE,kCAAmC,CAAE0B,QAAS,cAI3E6B,EAAcM,MAAQ7D,EAAE,mCACxBuD,EAAchE,MAAQmE,CACxB,KAAO,SACCI,GAC+B,KAAnB,QAAf,EAAAV,EAAW3G,UAAI,aAAf,EAAiBJ,KAAKkF,UAAqBvB,EAAE,kCAC/B,QAD8D,EAC7EoD,EAAW3G,UAAI,aAAf,EAAiBJ,KAAKiF,IACtB,EAEFiC,EAAcM,MAAQ7D,EAAE,yBAAD,OAA0BvD,GAAO,CAAEiF,QAAS9F,EAAW6F,QAASpB,IACvFkD,EAAchE,MAAQuE,CACxB,CAEAP,EAAcC,UAA2B,QAAlB,EAAGJ,EAAW3G,UAAI,aAAf,EAAiB+G,UAC3CnH,EAAK0H,KAAKR,EACZ,IAGA,yBAAKhH,UAAU,kCACb,2BAAOyH,QAAShE,EAAE,mCACd3D,EAAKgD,QAAU8D,GACf,+BACE,4BACE,wBAAIc,QAAS,GAAId,MAIrB,KACA9G,EAAKgD,QACL,+BACGhD,EAAKiD,KAAI,SAAA4E,GAAa,QACfC,EACwB,iBAApBD,EAAU3E,QACf6E,OAAOC,UAAUH,EAAU3E,SAEK,QAFC,EAClClC,EAAAA,GAAAA,cACiB6G,EAAU3E,cAAM,OACiD,QADjD,EADjC,EAEI+E,OAAO,CAAEC,SAAS,EAAMC,SAAU,EAAGC,cAAc,EAAMC,cAAc,WAAO,WADjD,EADjC,EAGIC,gBACNT,EAAU3E,MAEZ,OACE,wBAAI9C,IAAG,kBAAayH,EAAUL,QAC5B,4BACGK,EAAUV,YAAcC,EAAAA,iBAAAA,WACvB,kBAAC,EAAApB,UAAS,CAACvF,KAAK,KAAKwF,OAAO,OAAOE,KAAM0B,EAAU9C,OAAS,gBAE7D8C,EAAUV,YAAcC,EAAAA,iBAAAA,WACvB,kBAAC,EAAApB,UAAS,CAACvF,KAAK,KAAK0F,KAAM0B,EAAU9C,OAAS,gBAC7C,IACF8C,EAAUL,OAEb,4BAAKM,GAGX,MAGF,OAED9H,EAAKgD,QAAUW,EAAE,+BAAgC,CAAE0B,QAAS,WAAe,KAGpF,EAgCAuB,EAAsB7F,aAAe,CACnCyC,MAAO,CAAC,EACRG,EAAG+C,EAAAA,UACHxH,WAAAA,EAAAA,WACAI,0BAAAA,EAAAA,0B,2MCtJIa,EAAS,qJAgDZ,OAhDY,oCACboI,aAAeC,IAAAA,YAAiB,EAEhCC,kBAAoBD,IAAAA,YAAiB,EAErCE,sBAAwB,EAAC,EAEzBC,eAAiB3H,EAAAA,GAAAA,KAAY,EAgC7B4H,kBAAoB,WAAM,QAChBF,GAAR,UAAQA,sBACAG,EAAmB,EAAKC,MAAxBD,eACFE,GAA+B,QAAjB,IAAKR,oBAAY,OAAS,QAAT,EAAjB,EAAmBS,eAAO,WAAT,EAAjB,EAA4BD,cAAe,EAE3DF,GAAkBE,IAAgBL,IACpC,EAAKA,sBAAwBK,EAC7B,EAAKE,cAAa,GAEtB,EAAC,EAkDA,OAlDA,yCAvCD,WAAoB,WACVJ,EAAmBK,KAAKJ,MAAxBD,eACRM,OAAOC,YAAW,WAChB,EAAKH,cACP,IAEIJ,GACFK,KAAKG,mBAET,GAAC,gCAED,WAAqB,WACSH,KAAKJ,MAAzBQ,iBAGNH,OAAOC,YAAW,WAChB,EAAKH,cACP,GAEJ,GAAC,kCAED,WACEC,KAAKP,gBACP,GAEA,0BAqBA,WAA4B,IAMpBY,EANKC,EAAQ,UAAH,8CACGC,EAAsBP,KAAKJ,MAAtCY,UACR,EAAqCR,KAAKX,aAAlCS,QAASW,OAAU,IAAG,GAAC,EAAC,EAChC,EAA0CT,KAAKT,kBAAvCO,QAASY,OAAe,IAAG,GAAC,EAAC,EAEjCD,SAAAA,EAAYpE,QASVkE,GALFF,EADEC,GACaI,aAAe,EAAfA,EAAiBL,eAAgB,GAEjCI,aAAU,EAAVA,EAAYJ,eAAgB,KAI3CA,EAAeE,GAGjBE,EAAWpE,MAAMmE,UAAY,GAAH,OAAMH,EAAY,MAEhD,GAEA,+BAGA,WAAoB,WAClBJ,OAAOU,iBAAiB,SAAUX,KAAKN,mBACvCM,KAAKP,eAAiB,kBAAMQ,OAAOW,oBAAoB,SAAU,EAAKlB,kBAAkB,CAC1F,GAEA,oBAKA,WACE,IAAQlK,EAAawK,KAAKJ,MAAlBpK,SAER,OACE,yBAAKwB,UAAU,sBAAsB6J,IAAKb,KAAKX,cAC7C,yBAAKwB,IAAKb,KAAKT,mBAAoB/J,GAGzC,KAAC,EAlGY,CAAS8J,IAAAA,WAsHxBrI,EAAUY,aAAe,CACvBuI,iBAAiB,EACjBT,gBAAgB,EAChBa,UAAW,E,ogCCvHPM,EAAkB,CAAC,CAAC,EAAGhJ,EAAAA,EAAAA,MAEvBiJ,EAAqBzB,IAAAA,cAAoBwB,GAOzCE,EAAwB,WAAH,OAASC,EAAAA,EAAAA,YAAWF,EAAmB,EAW5DG,EAAyB,SAC7BC,GAEG,6DADyF,CAAC,EAA3FC,EAAU,EAAVA,WAAU,IAAEJ,sBAAuBK,OAA0B,IAAG,EAAAL,EAAqB,EAEvF,EAAyDK,IAApCC,EAAY,EAAxBH,GAA0B9K,EAAS,EAATA,UAAW0E,EAAM,EAANA,OACxCwG,EAAgB9D,EAAAA,GAAAA,WAAAA,aAAkC,kBAAG+D,EAAI,EAAJA,KAAI,OAAOA,SAAiB,QAAb,EAAJA,EAAOL,UAAU,WAAb,EAAJ,EAAoBC,EAAW,QAAEK,GACjGC,EAAejE,EAAAA,GAAAA,WAAAA,aAAkC,kBAAG+D,EAAI,EAAJA,KAAI,OAAOA,SAAiB,QAAb,EAAJA,EAAOL,UAAU,WAAb,EAAJ,EAAoB9K,EAAU,QAAEoL,GAC/FE,EAAYlE,EAAAA,GAAAA,WAAAA,aAAkC,kBAAG+D,EAAI,EAAJA,KAAI,OAAOA,SAAiB,QAAb,EAAJA,EAAOL,UAAU,WAAb,EAAJ,EAAoBpG,EAAO,QAAE0G,GAE/F,OAAO,kCACFH,GACAC,GACAG,GACAC,EAEP,EAUMC,EAAkB,WAAH,6DAAuC,CAAC,EAAC,IAAnCT,UAAAA,OAAS,IAAG,UAAO,EAAEU,EAAO,EAAPA,QAAO,OAAYX,EAAuBC,EAAWU,EAAQ,EAWvGzL,EAA4B,WAAH,6DAI3B,CAAC,EAAC,IAHJ+K,UAAAA,OAAS,IAAG,oBAAiB,MAC7BW,YAAAA,OAAW,IAAG,EAAAC,EAAAA,GAAAA,yCAAqD,EACnEF,EAAO,EAAPA,QAAO,OAEPG,EAAAA,GAAAA,aAAyB,kBAElBJ,KACAV,EAAuBC,EAAWU,IAEvCC,EACD,EAaGG,EAAiC,WAAH,+DAMhC,CAAC,EAAC,IALJC,aAAAA,OAAY,IAAG,MAAG,MAClBC,cAAAA,OAAa,IAAG,IAAC,MACjBhB,UAAAA,OAAS,IAAG,yBAAsB,MAClCW,YAAAA,OAAW,IAAG,EAAAC,EAAAA,GAAAA,0CAAsD,EACpEF,EAAO,EAAPA,QAAO,OAEPG,EAAAA,GAAAA,aAAyB,+BAEpBrE,EAAAA,GAAAA,MAAiCuE,IAAY,SAC7CvE,EAAAA,GAAAA,OAAkCwE,GAAa,GAC7CP,KACAV,EAAuBC,EAAWU,IAEvCC,EACD,EAWGM,EAAgC,WAAH,6DAI/B,CAAC,EAAC,IAHJjB,UAAAA,OAAS,IAAG,wBAAqB,MACjCW,YAAAA,OAAW,IAAG,EAAAC,EAAAA,GAAAA,mCAA+C,EAC7DF,EAAO,EAAPA,QAAO,OAEPG,EAAAA,GAAAA,aAAyB,kBAElBJ,KACAV,EAAuBC,EAAWU,IAEvCC,EACD,EAWGO,EAAwC,WAAH,6DAIvC,CAAC,EAAC,IAHJlB,UAAAA,OAAS,IAAG,gCAA6B,MACzCW,YAAAA,OAAW,IAAG,EAAAC,EAAAA,GAAAA,mCAA+C,EAC7DF,EAAO,EAAPA,QAAO,OAEPG,EAAAA,GAAAA,aAAyB,kBAElBJ,KACAV,EAAuBC,EAAWU,IAEvCC,EACD,EAUGQ,EAAoB,WAGf,6DAAP,CAAC,EAAC,IAFJV,gBAAiBW,OAAoB,IAAG,EAAAX,EAAe,MACvDZ,sBAAuBK,OAA0B,IAAG,EAAAL,EAAqB,EAEzE,EAAkDuB,IAAdC,EAAS,EAApC9L,EAAAA,GAAAA,KACT,EAMI2K,IAA4B,IAL9BoB,oBAAAA,OAAmB,IAAG,KAAE,MACxBC,wBAAAA,OAAuB,IAAG,KAAE,MAC5BC,qCAAAA,OAAoC,IAAG,KAAE,EACzCC,EAAuB,EAAvBA,wBACGC,GAAM,YAGLC,GAAiBC,EAAAA,EAAAA,cAAY,WACjC,IAAgC,IAA5BH,EAAkC,CACpC,IAAMI,EAAgB,SAAH,GAA2B,IAArB5K,EAAE,EAAFA,GACvB,OADqC,EAAV6K,YAIpB,IAAIC,OAAOV,EAAW,KAAK/I,KAAKrB,EACzC,EAEA,OAAO,kBACFyK,GAAM,IACTJ,oBAAqBA,EAAoBU,OAAOH,GAChDN,wBAAyBA,EAAwBS,OAAOH,GACxDL,qCAAsCA,EAAqCQ,OAAOH,IAEtF,CAEA,OAAO,kBACFH,GAAM,IACTJ,oBAAAA,EACAC,wBAAAA,EACAC,qCAAAA,GAEJ,GAAG,CACDE,EACAJ,EACAC,EACAC,EACAC,EACAJ,IAGF,OAAOM,GACT,EASM9M,EAAa,WAAwF,6DAAP,CAAC,EAAC,IAAhFgL,sBAAuBK,OAA0B,IAAG,EAAAL,EAAqB,EAC7F,EAA0DK,IAAlD+B,EAAY,EAAZA,aAAc/M,EAAS,EAATA,UAAWyE,EAAY,EAAZA,aAAcC,EAAM,EAANA,OAC/C,MAAO,CACLqI,aAAAA,EACA/M,UAAAA,EACAyE,aAAAA,EACAC,OAAAA,EAEJ,EASM7E,EAAwB,WAA4E,6DAAP,CAAC,EAAC,IAApEoM,kBAAmBe,OAAsB,IAAG,EAAAf,EAAiB,EAC5F,EAA2De,IAAnDZ,EAAmB,EAAnBA,oBAAmB,IAAEa,qBAAAA,OAAoB,IAAG,GAAC,EAAC,EACtD,MAAO,CACL/K,QAASkK,EACTnM,SAAUgN,EAEd,EASMC,EAAkC,WAA4E,6DAAP,CAAC,EAAC,IAApEjB,kBAAmBe,OAAsB,IAAG,EAAAf,EAAiB,EACtG,EAAwFe,IAAwB,IAAxGG,qBAAAA,OAAoB,IAAG,GAAC,EAAC,EAAEC,EAAoB,EAApBA,qBAAoB,IAAEC,sBAAAA,OAAqB,IAAG,GAAC,EAAC,EACnF,MAAO,CACLnL,QAASkL,EACTnC,aAAckC,EACdlN,SAAUoN,EAEd,EASMC,EAAiC,WAA4E,6DAAP,CAAC,EAAC,IAApErB,kBAAmBe,OAAsB,IAAG,EAAAf,EAAiB,EACrG,EAAmEe,IAA3DX,EAAuB,EAAvBA,wBAAuB,IAAEkB,yBAAAA,OAAwB,IAAG,GAAC,EAAC,EAC9D,MAAO,CACLrL,QAASmK,EACTpM,SAAUsN,EAEd,EASMC,EAAyC,WAEpC,6DAAP,CAAC,EAAC,IADJvB,kBAAmBe,OAAsB,IAAG,EAAAf,EAAiB,EAE7D,EAA6Fe,IAArFV,EAAoC,EAApCA,qCAAoC,IAAEmB,sCAAAA,OAAqC,IAAG,GAAC,EAAC,EACxF,MAAO,CACLvL,QAASoK,EACTrM,SAAUwN,EAEd,EASMC,EAA0B,WAA4E,6DAAP,CAAC,EAAC,IAApEzB,kBAAmBe,OAAsB,IAAG,EAAAf,EAAiB,EAC9F,EAIIe,IAHFW,EAAqB,EAArBA,sBAAqB,IACrBC,uBAAAA,OAAsB,IAAG,GAAC,EAAC,EAC3BC,EAA8B,EAA9BA,+BAEF,MAAO,CACL3L,QAASyL,EACTG,iBAAkBD,EAClB5N,SAAU2N,EAEd,EAEM9H,EAAU,CACd4E,mBAAAA,EACAD,gBAAAA,EACAwB,kBAAAA,EACA8B,SAAUxC,EACVyC,gBAAiBnD,EACjBoD,mBAAoBlO,EACpBmO,wBAAyBtC,EACzBuC,uBAAwBpC,EACxBqC,+BAAgCpC,EAChCrM,WAAAA,EACA0O,eAAgBxO,EAChByO,yBAA0BpB,EAC1BqB,wBAAyBjB,EACzBkB,gCAAiChB,EACjCiB,iBAAkBf,E,sBCpUpB,IAAIgB,EAAU9K,OAAOE,KAErB6K,EAAQ,EAAQ,SAAgBC,EAAGC,GACjC,GAAID,IAAMC,EAAG,OAAO,EACpB,KAAMD,aAAahL,QAAaiL,aAAajL,QAAS,OAAO,EAK7D,IAHA,IAAIE,EAAO4K,EAAQE,GACfnL,EAASK,EAAKL,OAETqL,EAAI,EAAGA,EAAIrL,EAAQqL,IAC1B,KAAMhL,EAAKgL,KAAMD,GAAI,OAAO,EAE9B,IAASC,EAAI,EAAGA,EAAIrL,EAAQqL,IAC1B,GAAIF,EAAE9K,EAAKgL,MAAQD,EAAE/K,EAAKgL,IAAK,OAAO,EAExC,OAAOrL,IAAWiL,EAAQG,GAAGpL,MAC/B,C,+FCbIsL,EAAuB,SAAUC,EAAUC,GAC3C,OAAOD,EAASE,OAAM,SAAUC,EAAKnK,GAAS,OAAO,OAAemK,EAAKF,EAASjK,GAAS,GAC/F,EAYA,EAX8B,SAAUoK,EAAQC,ICJnB,SAAUD,EAAQC,EAAMC,GAYjD,IAAI9E,GAAM,IAAA+E,aAAOnE,GACZZ,EAAIf,SAAY6F,EAAUD,EAAM7E,EAAIf,WACrCe,EAAIf,QAAU4F,IAElB,IAAAG,WAAUJ,EAAQ5E,EAAIf,QAC1B,CDJI,CAAuB2F,EAAQC,EAAMN,EACzC,C","sources":["webpack:///./src/components/graphCard/graphCard.deprecated.js","webpack:///./src/components/graphCard/graphCardChart.deprecated.js","webpack:///./src/components/graphCard/graphCardChartLegend.js","webpack:///./src/components/graphCard/graphCardChartTooltip.js","webpack:///./src/components/minHeight/minHeight.js","webpack:///./src/components/productView/productViewContext.js","webpack:///./node_modules/fast-shallow-equal/index.js","webpack:///./node_modules/react-use/esm/useShallowCompareEffect.js","webpack:///./node_modules/react-use/esm/useCustomCompareEffect.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardTitle, CardHeader, CardActions, CardBody, Title } from '@patternfly/react-core';\nimport { useShallowCompareEffect } from 'react-use';\nimport { connect, reduxActions, reduxSelectors } from '../../redux';\nimport { useProduct, useProductGraphConfig, useProductGraphTallyQuery } from '../productView/productViewContext';\nimport { helpers } from '../../common';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { GraphCardChart } from './graphCardChart.deprecated';\n\n/**\n * A chart/graph card.\n *\n * @param {object} props\n * @param {Node} props.cardTitle\n * @param {Node} props.children\n * @param {boolean} props.error\n * @param {Function} props.getGraphReportsCapacity\n * @param {object} props.graphData\n * @param {object} props.meta\n * @param {boolean} props.isDisabled\n * @param {boolean} props.pending\n * @param {Function} props.useProduct\n * @param {Function} props.useProductGraphConfig\n * @param {Function} props.useProductGraphTallyQuery\n * @returns {Node}\n */\nconst GraphCard = ({\n  cardTitle,\n  children,\n  error,\n  getGraphReportsCapacity,\n  graphData,\n  meta,\n  isDisabled,\n  pending,\n  useProduct: useAliasProduct,\n  useProductGraphConfig: useAliasProductGraphConfig,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery\n}) => {\n  const { productId } = useAliasProduct();\n  const { settings } = useAliasProductGraphConfig();\n  const query = useAliasProductGraphTallyQuery();\n\n  useShallowCompareEffect(() => {\n    const {\n      [RHSM_API_QUERY_TYPES.START_DATE]: startDate,\n      [RHSM_API_QUERY_TYPES.END_DATE]: endDate,\n      [RHSM_API_QUERY_TYPES.GRANULARITY]: granularity\n    } = query;\n\n    if (!isDisabled && granularity && startDate && endDate && productId) {\n      getGraphReportsCapacity(productId, query);\n    }\n  }, [getGraphReportsCapacity, isDisabled, productId, query]);\n\n  if (isDisabled) {\n    return null;\n  }\n\n  let actionDisplay = null;\n\n  if (typeof settings?.actionDisplay === 'function') {\n    actionDisplay = settings.actionDisplay({ data: { ...graphData }, meta: { ...meta } });\n  }\n\n  return (\n    <Card className=\"curiosity-usage-graph\">\n      <MinHeight key=\"headerMinHeight\">\n        <CardHeader>\n          <CardTitle>\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {cardTitle}\n            </Title>\n          </CardTitle>\n          <CardActions className={(error && 'blur') || ''}>\n            <React.Fragment key=\"actionDisplay\">{actionDisplay}</React.Fragment>\n            {children}\n          </CardActions>\n        </CardHeader>\n      </MinHeight>\n      <MinHeight key=\"bodyMinHeight\">\n        <CardBody>\n          <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n            {pending && <Loader variant=\"graph\" />}\n            {!pending && <GraphCardChart graphData={graphData} />}\n          </div>\n        </CardBody>\n      </MinHeight>\n    </Card>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{getGraphReportsCapacity: Function, useProduct: Function, useProductGraphTallyQuery: Function,\n *     useProductGraphConfig: Function, children: Node, meta: object, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: Node}}\n */\nGraphCard.propTypes = {\n  cardTitle: PropTypes.node,\n  children: PropTypes.node,\n  error: PropTypes.bool,\n  getGraphReportsCapacity: PropTypes.func,\n  graphData: PropTypes.object,\n  isDisabled: PropTypes.bool,\n  meta: PropTypes.object,\n  pending: PropTypes.bool,\n  useProduct: PropTypes.func,\n  useProductGraphConfig: PropTypes.func,\n  useProductGraphTallyQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{getGraphReportsCapacity: Function, useProduct: Function, useProductGraphTallyQuery: Function,\n *     useProductGraphConfig: Function, children: Node, meta: object, pending: boolean, graphData: object,\n *     isDisabled: boolean, error: boolean, cardTitle: Node}}\n */\nGraphCard.defaultProps = {\n  cardTitle: null,\n  children: null,\n  error: false,\n  getGraphReportsCapacity: helpers.noop,\n  graphData: {},\n  isDisabled: helpers.UI_DISABLED_GRAPH,\n  meta: {},\n  pending: false,\n  useProduct,\n  useProductGraphConfig,\n  useProductGraphTallyQuery\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getGraphReportsCapacity: (id, query) => dispatch(reduxActions.rhsm.getGraphReportsCapacity(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.graphCard.makeGraphCard();\n\nconst ConnectedGraphCard = connect(makeMapStateToProps, mapDispatchToProps)(GraphCard);\n\nexport { ConnectedGraphCard as default, ConnectedGraphCard, GraphCard };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { chart_color_green_300 as chartColorGreenDark } from '@patternfly/react-tokens';\nimport { useProductGraphConfig, useProductGraphTallyQuery } from '../productView/productViewContext';\nimport { graphCardHelpers } from './graphCardHelpers';\nimport { Chart } from '../chart/chart';\nimport GraphCardChartLegend from './graphCardChartLegend';\nimport GraphCardChartTooltip from './graphCardChartTooltip';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * A chart/graph.\n *\n * @param {object} props\n * @param {object} props.graphData\n * @param {Function} props.useProductGraphConfig\n * @param {Function} props.useProductGraphTallyQuery\n * @returns {Node}\n */\nconst GraphCardChart = ({\n  graphData,\n  useProductGraphConfig: useAliasProductGraphConfig,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery\n}) => {\n  const { filters } = useAliasProductGraphConfig();\n  const query = useAliasProductGraphTallyQuery();\n  const { [RHSM_API_QUERY_TYPES.GRANULARITY]: granularity } = query;\n\n  const chartAreaProps = {\n    xAxisLabelIncrement: graphCardHelpers.getChartXAxisLabelIncrement(granularity),\n    xAxisTickFormat: ({ item, previousItem, tick }) =>\n      graphCardHelpers.xAxisTickFormat({\n        tick,\n        date: item.date,\n        previousDate: previousItem.date,\n        granularity\n      }),\n    yAxisTickFormat: graphCardHelpers.yAxisTickFormat\n  };\n\n  const filteredGraphData = data => {\n    const filtered = key => {\n      const tempFiltered = {\n        data: data[key],\n        id: key,\n        strokeWidth: 2,\n        isStacked: !/^threshold/.test(key),\n        isThreshold: /^threshold/.test(key)\n      };\n\n      if (/^threshold/.test(key)) {\n        tempFiltered.stroke = chartColorGreenDark.value;\n        tempFiltered.strokeDasharray = '4,3';\n        tempFiltered.strokeWidth = 3;\n      }\n\n      return tempFiltered;\n    };\n\n    if (filters?.length) {\n      return filters.map(value => Object.assign(filtered(value.id), value));\n    }\n\n    return Object.keys(data).map(key => filtered(key));\n  };\n\n  return (\n    <Chart\n      key={`chart_${JSON.stringify(query)}`}\n      {...chartAreaProps}\n      dataSets={filteredGraphData(graphData)}\n      chartLegend={({ chart, datum }) => <GraphCardChartLegend chart={chart} datum={datum} />}\n      chartTooltip={({ datum }) => <GraphCardChartTooltip datum={datum} />}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProductGraphTallyQuery: Function, useProductGraphConfig: Function, graphData: object}}\n */\nGraphCardChart.propTypes = {\n  graphData: PropTypes.object,\n  useProductGraphConfig: PropTypes.func,\n  useProductGraphTallyQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProductGraphTallyQuery: Function, useProductGraphConfig: Function, graphData: object}}\n */\nGraphCardChart.defaultProps = {\n  graphData: {},\n  useProductGraphConfig,\n  useProductGraphTallyQuery\n};\n\nexport { GraphCardChart as default, GraphCardChart };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { useMount } from 'react-use';\nimport { useProduct } from '../productView/productViewContext';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { ChartIcon } from '../chart/chartIcon';\n\n/**\n * A custom chart legend.\n *\n * @fires onClick\n * @param {object} props\n * @param {object} props.chart\n * @param {object} props.datum\n * @param {Function} props.t\n * @param {Function} props.useDispatch\n * @param {Function} props.useProduct\n * @param {Function} props.useSelectors\n * @returns {Node}\n */\nconst GraphCardChartLegend = ({\n  chart,\n  datum,\n  t,\n  useDispatch: useAliasDispatch,\n  useSelectors: useAliasSelectors,\n  useProduct: useAliasProduct\n}) => {\n  const { productLabel, viewId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n  const legendItems = useAliasSelectors(\n    datum.dataSets.map(\n      ({ id }) =>\n        ({ graph }) =>\n          graph.legend?.[`${viewId}-${id}`]\n    )\n  );\n\n  useMount(() => {\n    datum.dataSets.forEach(({ id }, index) => {\n      const checkIsToggled = legendItems?.[index] || chart.isToggled(id);\n\n      if (checkIsToggled) {\n        chart.hide(id);\n      }\n    });\n  });\n\n  /**\n   * Toggle legend item and chart.\n   *\n   * @event onClick\n   * @param {string} id\n   */\n  const onClick = id => {\n    const updatedToggle = chart.toggle(id);\n\n    dispatch({\n      type: reduxTypes.graph.SET_GRAPH_LEGEND,\n      id: `${viewId}-${id}`,\n      value: updatedToggle\n    });\n  };\n\n  return (\n    <React.Fragment>\n      {datum.dataSets.map(({ id, isThreshold, stroke: color, data = [] }, index) => {\n        const isDisabled =\n          !data.find(({ y, hasData }) => (y >= 0 && hasData === true) || (y >= 0 && isThreshold === true)) || false;\n\n        const labelContent = t(\n          [`curiosity-graph.label_${(isThreshold && 'threshold') || id}`, 'curiosity-graph.label_no'],\n          {\n            product: productLabel,\n            context: productLabel\n          }\n        );\n\n        const tooltipContent = t(\n          `curiosity-graph.legendTooltip${(isThreshold && '_threshold') || ''}_${id}`,\n          {\n            product: productLabel,\n            context: productLabel\n          },\n          [<span style={{ whiteSpace: 'nowrap' }} />]\n        );\n\n        const checkIsToggled = legendItems?.[index] || chart.isToggled(id);\n\n        const button = (\n          <Button\n            onClick={() => onClick(id)}\n            onKeyPress={() => onClick(id)}\n            className=\"curiosity-usage-graph__legend-item\"\n            tabIndex={0}\n            key={`curiosity-button-${id}`}\n            variant=\"link\"\n            component=\"a\"\n            isDisabled={isDisabled}\n            icon={\n              ((isDisabled || checkIsToggled) && <ChartIcon symbol=\"eyeSlash\" />) || (\n                <ChartIcon\n                  symbol={(isThreshold && 'dash') || 'square'}\n                  style={{ visibility: (isDisabled && 'hidden') || (checkIsToggled && 'hidden') || 'visible' }}\n                  fill={color}\n                />\n              )\n            }\n          >\n            {labelContent}\n          </Button>\n        );\n\n        if (tooltipContent) {\n          return (\n            <Tooltip\n              key={`curiosity-tooltip-${id}`}\n              content={<p>{tooltipContent}</p>}\n              position={TooltipPosition.top}\n              enableFlip\n              distance={5}\n            >\n              {button}\n            </Tooltip>\n          );\n        }\n\n        return button;\n      })}\n    </React.Fragment>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum: object, useProduct: Function, t: Function, useDispatch: Function, useSelectors: Function, chart: object}}\n */\nGraphCardChartLegend.propTypes = {\n  chart: PropTypes.shape({\n    hide: PropTypes.func,\n    toggle: PropTypes.func,\n    isToggled: PropTypes.func\n  }),\n  datum: PropTypes.shape({\n    dataSets: PropTypes.arrayOf(\n      PropTypes.shape({\n        stroke: PropTypes.string.isRequired,\n        id: PropTypes.string.isRequired,\n        isThreshold: PropTypes.bool\n      })\n    )\n  }),\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelectors: PropTypes.func,\n  useProduct: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, useProduct: Function, t: Function, useDispatch: Function, useSelectors: Function, chart: object}}\n */\nGraphCardChartLegend.defaultProps = {\n  chart: {\n    hide: helpers.noop,\n    toggle: helpers.noop,\n    isToggled: helpers.noop\n  },\n  datum: {\n    dataSets: []\n  },\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelectors: storeHooks.reactRedux.useSelectors,\n  useProduct\n};\n\nexport { GraphCardChartLegend as default, GraphCardChartLegend };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useProduct, useProductGraphTallyQuery } from '../productView/productViewContext';\nimport { getTooltipDate } from './graphCardHelpers';\nimport { translate } from '../i18n/i18n';\nimport { ChartTypeVariant } from '../chart/chart';\nimport { ChartIcon } from '../chart/chartIcon';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\n\n/**\n * A custom chart tooltip.\n *\n * @param {object} props\n * @param {object} props.datum\n * @param {Function} props.t\n * @param {Function} props.useProduct\n * @returns {Node}\n */\nconst GraphCardChartTooltip = ({\n  datum,\n  t,\n  useProduct: useAliasProduct,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery\n}) => {\n  const { productId, productLabel } = useAliasProduct();\n  const { [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: granularity } = useAliasProductGraphTallyQuery();\n\n  let header = null;\n  const data = [];\n  const { itemsByKey = {} } = datum || {};\n\n  Object.keys(itemsByKey)\n    .reverse()\n    .forEach((key, index) => {\n      if (index === 0) {\n        header = getTooltipDate({\n          date: itemsByKey[key]?.data.date,\n          granularity\n        });\n      }\n\n      const tempDataFacet = {\n        color: itemsByKey[key]?.color\n      };\n\n      if (itemsByKey[key]?.chartType === ChartTypeVariant.threshold) {\n        let thresholdStringValue = itemsByKey[key]?.data.y ?? t('curiosity-graph.label_noData');\n\n        if (itemsByKey[key]?.data.hasInfinite) {\n          if (tempDataFacet.color) {\n            thresholdStringValue = (\n              <ChartIcon\n                symbol=\"infinity\"\n                fill=\"#ffffff\"\n                title={t('curiosity-graph.label_threshold', { context: 'infinite' })}\n              />\n            );\n          } else {\n            thresholdStringValue = t('curiosity-graph.label_threshold', { context: 'infinite' });\n          }\n        }\n\n        tempDataFacet.label = t('curiosity-graph.label_threshold');\n        tempDataFacet.value = thresholdStringValue;\n      } else {\n        const dataFactsValue =\n          (itemsByKey[key]?.data.hasData === false && t('curiosity-graph.label_noData')) ||\n          itemsByKey[key]?.data.y ||\n          0;\n\n        tempDataFacet.label = t(`curiosity-graph.label_${key}`, { context: productId, product: productLabel });\n        tempDataFacet.value = dataFactsValue;\n      }\n\n      tempDataFacet.chartType = itemsByKey[key]?.chartType;\n      data.push(tempDataFacet);\n    });\n\n  return (\n    <div className=\"curiosity-usage-graph__tooltip\">\n      <table summary={t('curiosity-graph.tooltipSummary')}>\n        {(data.length && header && (\n          <thead>\n            <tr>\n              <th colSpan={2}>{header}</th>\n            </tr>\n          </thead>\n        )) ||\n          null}\n        {(data.length && (\n          <tbody>\n            {data.map(dataFacet => {\n              const updatedDataFacetValue =\n                (typeof dataFacet.value === 'number' &&\n                  !Number.isInteger(dataFacet.value) &&\n                  helpers\n                    .numberDisplay(dataFacet.value)\n                    ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n                    ?.toUpperCase()) ||\n                dataFacet.value;\n\n              return (\n                <tr key={`tooltip-${dataFacet.label}`}>\n                  <th>\n                    {dataFacet.chartType === ChartTypeVariant.threshold && (\n                      <ChartIcon size=\"sm\" symbol=\"dash\" fill={dataFacet.color || 'transparent'} />\n                    )}\n                    {dataFacet.chartType !== ChartTypeVariant.threshold && (\n                      <ChartIcon size=\"sm\" fill={dataFacet.color || 'transparent'} />\n                    )}{' '}\n                    {dataFacet.label}\n                  </th>\n                  <td>{updatedDataFacetValue}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        )) ||\n          null}\n      </table>\n      {(!data.length && t('curiosity-graph.label_noData', { context: 'error' })) || null}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{datum: object, useProduct: Function, useProductGraphTallyQuery: Function, t: Function}}\n */\nGraphCardChartTooltip.propTypes = {\n  datum: PropTypes.shape({\n    itemsByKey: PropTypes.objectOf(\n      PropTypes.shape({\n        chartType: PropTypes.string,\n        color: PropTypes.string,\n        data: PropTypes.shape({\n          date: PropTypes.oneOfType([PropTypes.string, PropTypes.instanceOf(Date)]),\n          hasData: PropTypes.bool,\n          hasInfinite: PropTypes.bool,\n          y: PropTypes.number\n        })\n      })\n    )\n  }),\n  t: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductGraphTallyQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{datum: object, useProduct: Function, useProductGraphTallyQuery: Function, t: Function}}\n */\nGraphCardChartTooltip.defaultProps = {\n  datum: {},\n  t: translate,\n  useProduct,\n  useProductGraphTallyQuery\n};\n\nexport { GraphCardChartTooltip as default, GraphCardChartTooltip };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React, { useCallback, useContext } from 'react';\nimport { reduxHelpers } from '../../redux/common';\nimport { storeHooks } from '../../redux/hooks';\nimport { RHSM_API_QUERY_TYPES, rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst ProductViewContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated product view context.\n *\n * @returns {React.Context<{}>}\n */\nconst useProductViewContext = () => useContext(ProductViewContext);\n\n/**\n * Return a query object from initial product config and Redux store.\n *\n * @param {string} queryType An identifier used to pull from both config and Redux, they should named the same.\n * @param {object} options\n * @param {string} options.overrideId A custom identifier, used for scenarios like the Guest inventory IDs\n * @param {object} options.useProductViewContext\n * @returns {object}\n */\nconst useProductQueryFactory = (\n  queryType,\n  { overrideId, useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}\n) => {\n  const { [queryType]: initialQuery, productId, viewId } = useAliasProductViewContext();\n  const queryOverride = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[overrideId], undefined);\n  const queryProduct = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[productId], undefined);\n  const queryView = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[viewId], undefined);\n\n  return {\n    ...initialQuery,\n    ...queryOverride,\n    ...queryProduct,\n    ...queryView\n  };\n};\n\n/**\n * Return a base product query\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductQuery = ({ queryType = 'query', options } = {}) => useProductQueryFactory(queryType, options);\n\n/**\n * Return the graph query based off of tally and capacity.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductGraphTallyQuery = ({\n  queryType = 'graphTallyQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return the inventory query for guests. Use fallback/defaults for guests offset, limit.\n *\n * @param {object} options\n * @param {number} options.defaultLimit\n * @param {number} options.defaultOffset\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryGuestsQuery = ({\n  defaultLimit = 100,\n  defaultOffset = 0,\n  queryType = 'inventoryGuestsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      [RHSM_API_QUERY_SET_TYPES.LIMIT]: defaultLimit,\n      [RHSM_API_QUERY_SET_TYPES.OFFSET]: defaultOffset,\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for hosts.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryHostsQuery = ({\n  queryType = 'inventoryHostsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for subscriptions.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventorySubscriptionsQuery = ({\n  queryType = 'inventorySubscriptionsQuery',\n  schemaCheck = rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Get a filtered product configuration context.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductViewContext\n * @returns {object}\n */\nconst useProductContext = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductViewContext: useAliasProductViewContext = useProductViewContext\n} = {}) => {\n  const { [RHSM_API_QUERY_TYPES.UOM]: uomFilter } = useAliasProductQuery();\n  const {\n    initialGraphFilters = [],\n    initialInventoryFilters = [],\n    initialSubscriptionsInventoryFilters = [],\n    productContextFilterUom,\n    ...config\n  } = useAliasProductViewContext();\n\n  const applyUomFilter = useCallback(() => {\n    if (productContextFilterUom === true) {\n      const filterFilters = ({ id, isOptional }) => {\n        if (!isOptional) {\n          return true;\n        }\n        return new RegExp(uomFilter, 'i').test(id);\n      };\n\n      return {\n        ...config,\n        initialGraphFilters: initialGraphFilters.filter(filterFilters),\n        initialInventoryFilters: initialInventoryFilters.filter(filterFilters),\n        initialSubscriptionsInventoryFilters: initialSubscriptionsInventoryFilters.filter(filterFilters)\n      };\n    }\n\n    return {\n      ...config,\n      initialGraphFilters,\n      initialInventoryFilters,\n      initialSubscriptionsInventoryFilters\n    };\n  }, [\n    config,\n    initialGraphFilters,\n    initialInventoryFilters,\n    initialSubscriptionsInventoryFilters,\n    productContextFilterUom,\n    uomFilter\n  ]);\n\n  return applyUomFilter();\n};\n\n/**\n * Return product identifiers.\n *\n * @param {object} options\n * @param {Function} options.useProductViewContext\n * @returns {{productLabel: string, viewId: string, productId: string, productGroup: string}}\n */\nconst useProduct = ({ useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}) => {\n  const { productGroup, productId, productLabel, viewId } = useAliasProductViewContext();\n  return {\n    productGroup,\n    productId,\n    productLabel,\n    viewId\n  };\n};\n\n/**\n * Return graph configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductGraphConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialGraphFilters, initialGraphSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGraphFilters,\n    settings: initialGraphSettings\n  };\n};\n\n/**\n * Return guests inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryGuestsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { inventoryGuestsQuery = {}, initialGuestsFilters, initialGuestsSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGuestsFilters,\n    initialQuery: inventoryGuestsQuery,\n    settings: initialGuestsSettings\n  };\n};\n\n/**\n * Return hosts inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryHostsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialInventoryFilters, initialInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialInventoryFilters,\n    settings: initialInventorySettings\n  };\n};\n\n/**\n * Return subscriptions inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventorySubscriptionsConfig = ({\n  useProductContext: useAliasProductContext = useProductContext\n} = {}) => {\n  const { initialSubscriptionsInventoryFilters, initialSubscriptionsInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialSubscriptionsInventoryFilters,\n    settings: initialSubscriptionsInventorySettings\n  };\n};\n\n/**\n * Return primary toolbar configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductToolbarConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const {\n    initialToolbarFilters,\n    initialToolbarSettings = {},\n    initialSecondaryToolbarFilters\n  } = useAliasProductContext();\n  return {\n    filters: initialToolbarFilters,\n    secondaryFilters: initialSecondaryToolbarFilters,\n    settings: initialToolbarSettings\n  };\n};\n\nconst context = {\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useQuery: useProductQuery,\n  useQueryFactory: useProductQueryFactory,\n  useGraphTallyQuery: useProductGraphTallyQuery,\n  useInventoryGuestsQuery: useProductInventoryGuestsQuery,\n  useInventoryHostsQuery: useProductInventoryHostsQuery,\n  useInventorySubscriptionsQuery: useProductInventorySubscriptionsQuery,\n  useProduct,\n  useGraphConfig: useProductGraphConfig,\n  useInventoryGuestsConfig: useProductInventoryGuestsConfig,\n  useInventoryHostsConfig: useProductInventoryHostsConfig,\n  useInventorySubscriptionsConfig: useProductInventorySubscriptionsConfig,\n  useToolbarConfig: useProductToolbarConfig\n};\n\nexport {\n  context as default,\n  context,\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useProductQuery,\n  useProductQueryFactory,\n  useProductGraphTallyQuery,\n  useProductInventoryGuestsQuery,\n  useProductInventoryHostsQuery,\n  useProductInventorySubscriptionsQuery,\n  useProduct,\n  useProductGraphConfig,\n  useProductInventoryGuestsConfig,\n  useProductInventoryHostsConfig,\n  useProductInventorySubscriptionsConfig,\n  useProductToolbarConfig\n};\n","var keyList = Object.keys;\n\nexports.equal = function equal (a, b) {\n  if (a === b) return true;\n  if (!(a instanceof Object) || !(b instanceof Object)) return false;\n\n  var keys = keyList(a);\n  var length = keys.length;\n\n  for (var i = 0; i < length; i++)\n    if (!(keys[i] in b)) return false;\n\n  for (var i = 0; i < length; i++)\n    if (a[keys[i]] !== b[keys[i]]) return false;\n\n  return length === keyList(b).length;\n};\n","import { equal as isShallowEqual } from 'fast-shallow-equal';\nimport useCustomCompareEffect from './useCustomCompareEffect';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar shallowEqualDepsList = function (prevDeps, nextDeps) {\n    return prevDeps.every(function (dep, index) { return isShallowEqual(dep, nextDeps[index]); });\n};\nvar useShallowCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useShallowCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useShallowCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, shallowEqualDepsList);\n};\nexport default useShallowCompareEffect;\n","import { useEffect, useRef } from 'react';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useCustomCompareEffect = function (effect, deps, depsEqual) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useCustomCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useCustomCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n        if (typeof depsEqual !== 'function') {\n            console.warn('`useCustomCompareEffect` should be used with depsEqual callback for comparing deps list');\n        }\n    }\n    var ref = useRef(undefined);\n    if (!ref.current || !depsEqual(deps, ref.current)) {\n        ref.current = deps;\n    }\n    useEffect(effect, ref.current);\n};\nexport default useCustomCompareEffect;\n"],"names":["GraphCard","cardTitle","children","error","getGraphReportsCapacity","graphData","meta","isDisabled","pending","useAliasProduct","useProduct","useAliasProductGraphConfig","useProductGraphConfig","useAliasProductGraphTallyQuery","useProductGraphTallyQuery","productId","settings","query","useShallowCompareEffect","startDate","RHSM_API_QUERY_TYPES","endDate","granularity","actionDisplay","data","Card","className","MinHeight","key","CardHeader","CardTitle","Title","headingLevel","size","CardActions","CardBody","Loader","variant","GraphCardChart","defaultProps","helpers","makeMapStateToProps","reduxSelectors","ConnectedGraphCard","connect","dispatch","id","reduxActions","filtered","filters","chartAreaProps","xAxisLabelIncrement","graphCardHelpers","xAxisTickFormat","item","previousItem","tick","date","previousDate","yAxisTickFormat","Chart","JSON","stringify","dataSets","tempFiltered","strokeWidth","isStacked","test","isThreshold","stroke","chartColorGreenDark","strokeDasharray","length","map","value","Object","assign","keys","chartLegend","chart","datum","chartTooltip","GraphCardChartLegend","t","useAliasDispatch","useDispatch","useAliasSelectors","useSelectors","productLabel","viewId","legendItems","graph","legend","useMount","forEach","index","isToggled","hide","onClick","updatedToggle","toggle","type","reduxTypes","color","find","y","hasData","labelContent","product","context","tooltipContent","style","whiteSpace","checkIsToggled","button","Button","onKeyPress","tabIndex","component","icon","ChartIcon","symbol","visibility","fill","Tooltip","content","position","TooltipPosition","enableFlip","distance","translate","storeHooks","GraphCardChartTooltip","RHSM_API_QUERY_SET_TYPES","header","itemsByKey","reverse","getTooltipDate","tempDataFacet","chartType","ChartTypeVariant","thresholdStringValue","hasInfinite","title","label","dataFactsValue","push","summary","colSpan","dataFacet","updatedDataFacetValue","Number","isInteger","format","average","mantissa","trimMantissa","lowPrecision","toUpperCase","containerRef","React","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","props","clientWidth","current","setMinHeight","this","window","setTimeout","setResizeObserver","updateOnContent","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","addEventListener","removeEventListener","ref","DEFAULT_CONTEXT","ProductViewContext","useProductViewContext","useContext","useProductQueryFactory","queryType","overrideId","useAliasProductViewContext","initialQuery","queryOverride","view","undefined","queryProduct","queryView","useProductQuery","options","schemaCheck","rhsmApiTypes","reduxHelpers","useProductInventoryGuestsQuery","defaultLimit","defaultOffset","useProductInventoryHostsQuery","useProductInventorySubscriptionsQuery","useProductContext","useAliasProductQuery","uomFilter","initialGraphFilters","initialInventoryFilters","initialSubscriptionsInventoryFilters","productContextFilterUom","config","applyUomFilter","useCallback","filterFilters","isOptional","RegExp","filter","productGroup","useAliasProductContext","initialGraphSettings","useProductInventoryGuestsConfig","inventoryGuestsQuery","initialGuestsFilters","initialGuestsSettings","useProductInventoryHostsConfig","initialInventorySettings","useProductInventorySubscriptionsConfig","initialSubscriptionsInventorySettings","useProductToolbarConfig","initialToolbarFilters","initialToolbarSettings","initialSecondaryToolbarFilters","secondaryFilters","useQuery","useQueryFactory","useGraphTallyQuery","useInventoryGuestsQuery","useInventoryHostsQuery","useInventorySubscriptionsQuery","useGraphConfig","useInventoryGuestsConfig","useInventoryHostsConfig","useInventorySubscriptionsConfig","useToolbarConfig","keyList","exports","a","b","i","shallowEqualDepsList","prevDeps","nextDeps","every","dep","effect","deps","depsEqual","useRef","useEffect"],"sourceRoot":""}
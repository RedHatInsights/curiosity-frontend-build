{"version":3,"file":"js/3056.576b596ce72f1899aa35.js","mappings":"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","sources":["webpack:///./src/components/guestsList/guestsList.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { helpers } from '../../common';\nimport { apiQueries, connect, reduxActions, reduxSelectors } from '../../redux';\nimport { Loader } from '../loader/loader';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { Table } from '../table/table';\n\n/**\n * ToDo: Consider removing the query prop entirely.\n * The current API doesn't allow setting more than \"offset\" and \"limit\"\n */\n/**\n * ToDo: Review moving the \"onScroll\" layout into a standalone component.\n */\n/**\n * A system inventory guests component.\n *\n * @augments React.Component\n * @fires onUpdateGuestsData\n * @fires onScroll\n */\nclass GuestsList extends React.Component {\n  state = { currentPage: 0, limit: 100, previousData: [] };\n\n  componentDidMount() {\n    this.onUpdateGuestsData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentPage } = this.state;\n\n    if (currentPage !== prevState.currentPage) {\n      this.onUpdateGuestsData();\n    }\n  }\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateGuestsData\n   */\n  onUpdateGuestsData = () => {\n    const { currentPage, limit } = this.state;\n    const { getHostsInventoryGuests, query, id } = this.props;\n\n    if (id) {\n      const updatedQuery = {\n        ...query,\n        [RHSM_API_QUERY_TYPES.LIMIT]: limit,\n        [RHSM_API_QUERY_TYPES.OFFSET]: currentPage * limit || 0\n      };\n\n      const { inventoryGuestsQuery } = apiQueries.parseRhsmQuery(updatedQuery);\n      getHostsInventoryGuests(id, inventoryGuestsQuery);\n    }\n  };\n\n  /**\n   * Update page state.\n   *\n   * @event onScroll\n   * @param {object} event\n   */\n  onScroll = event => {\n    const { target } = event;\n    const { currentPage, limit, previousData } = this.state;\n    const { numberOfGuests, pending, listData } = this.props;\n\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > (currentPage + 1) * limit && bottom && !pending) {\n      const newPage = currentPage + 1;\n      const updatedData = [...previousData, ...(listData || [])];\n\n      this.setState({\n        previousData: updatedData,\n        currentPage: newPage\n      });\n    }\n  };\n\n  renderLoader() {\n    const { currentPage } = this.state;\n    const { filterGuestsData, listData, pending } = this.props;\n\n    if (currentPage > 0 && pending) {\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n            rowCount: 0,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  }\n\n  /**\n   * ToDo: Consider moving the \"meaning of life\" into the default props on iteration.\n   * For everyone else... move the 42 into default props, possibly the 275.\n   */\n  /**\n   * Render a guests table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { previousData } = this.state;\n    const { filterGuestsData, listData, numberOfGuests, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = [...previousData, ...(listData || [])].map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: filterGuestsData,\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    // Include the table header\n    let updatedHeight = (numberOfGuests + 1) * 42;\n    updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n    return (\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={this.onScroll}\n        >\n          {this.renderLoader()}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    );\n  }\n\n  /**\n   * Render a guest list table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { currentPage } = this.state;\n    const { error, filterGuestsData, listData, numberOfGuests, pending, perPageDefault } = this.props;\n\n    return (\n      <div className={`fadein ${(error && 'blur') || ''}`}>\n        {pending && currentPage === 0 && (\n          <Loader\n            variant=\"table\"\n            tableProps={{\n              borders: false,\n              className: 'curiosity-guests-list',\n              colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n              colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n              rowCount: numberOfGuests < perPageDefault ? numberOfGuests : perPageDefault,\n              variant: TableVariant.compact\n            }}\n          />\n        )}\n        {((!pending && currentPage === 0) || currentPage > 0) && this.renderTable()}\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: object,\n *     pending: boolean, query: object, numberOfGuests: number, perPageDefault: number, id: string,\n *     error: boolean}}\n */\nGuestsList.propTypes = {\n  error: PropTypes.bool,\n  filterGuestsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getHostsInventoryGuests: PropTypes.func,\n  listData: PropTypes.array,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  pending: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object,\n  session: PropTypes.object\n};\n\n/**\n * Default props.\n *\n * @type {{listData: Array, getHostsInventoryGuests: Function, session: object, filterGuestsData: Array,\n *     pending: boolean, query: object, perPageDefault: number, error: boolean}}\n */\nGuestsList.defaultProps = {\n  error: false,\n  filterGuestsData: [],\n  getHostsInventoryGuests: helpers.noop,\n  listData: [],\n  pending: false,\n  perPageDefault: 5,\n  query: {},\n  session: {}\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getHostsInventoryGuests: (id, query) => dispatch(reduxActions.rhsm.getHostsInventoryGuests(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.guestsList.makeGuestsList();\n\nconst ConnectedGuestsList = connect(makeMapStateToProps, mapDispatchToProps)(GuestsList);\n\nexport { ConnectedGuestsList as default, ConnectedGuestsList, GuestsList };\n"],"names":["GuestsList","state","currentPage","limit","previousData","onUpdateGuestsData","props","getHostsInventoryGuests","query","id","updatedQuery","RHSM_API_QUERY_TYPES","apiQueries","inventoryGuestsQuery","onScroll","event","target","numberOfGuests","pending","listData","bottom","scrollHeight","scrollTop","clientHeight","newPage","updatedData","setState","this","prevProps","prevState","filterGuestsData","scrollLoader","Loader","variant","tableProps","borders","colCount","length","Object","keys","colWidth","map","cellWidth","rowCount","TableVariant","className","session","updatedColumnHeaders","updatedRows","cellData","inventoryListHelpers","filters","columnHeaders","cells","updatedHeight","style","height","renderLoader","Table","rows","error","perPageDefault","renderTable","React","defaultProps","helpers","makeMapStateToProps","reduxSelectors","ConnectedGuestsList","connect","dispatch","reduxActions"],"sourceRoot":""}
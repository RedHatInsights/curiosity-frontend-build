{"version":3,"file":"js/6395.1650375317479.edc651764fb1ecfc55a4.js","mappings":"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CA,KAED,wBAAyB,CACxB,MACA,MAED,sBAAuB,CACtB,MACA,KAED,mBAAoB,CACnB,MACA,MAED,sBAAuB,CACtB,MACA,MAED,sCAAuC,CACtC,MACA,KACA,KACA,IACA,MAED,2BAA4B,CAC3B,MACA,KACA,KACA,IACA,KACA,KACA,KAED,2CAA4C,CAC3C,MACA,KACA,KACA,IACA,MAED,gCAAiC,CAChC,MACA,KACA,KACA,IACA,KACA,MAED,sCAAuC,CACtC,MACA,MAED,4CAA6C,CAC5C,MACA,KAED,uCAAwC,CACvC,MACA,MAED,kCAAmC,CAClC,MACA,MAED,kCAAmC,CAClC,MACA,MAED,iCAAkC,CACjC,MACA,KACA,KACA,IACA,KACA,KACA,MAED,uCAAwC,CACvC,MACA,KACA,MAED,kCAAmC,CAClC,MACA,KACA,KACA,IACA,KACA,MAED,iBAAkB,CACjB,OAED,mCAAoC,CACnC,MACA,KACA,KACA,MAED,0CAA2C,CAC1C,MACA,MAED,0CAA2C,CAC1C,MACA,MAED,8CAA+C,CAC9C,MACA,KACA,KACA,MAED,6DAA8D,CAC7D,MACA,KACA,KACA,MAED,oEAAqE,CACpE,MACA,MAED,6CAA8C,CAC7C,MACA,MAED,uCAAwC,CACvC,MACA,MAED,8CAA+C,CAC9C,MACA,MAED,kCAAmC,CAClC,MACA,KAED,mCAAoC,CACnC,MACA,MAED,qBAAsB,CACrB,MAED,+BAAgC,CAC/B,OAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,MACA,MAED,8BAA+B,CAC9B,MAED,6BAA8B,CAC7B,OAED,6BAA8B,CAC7B,OAED,+BAAgC,CAC/B,OAED,8BAA+B,CAC9B,OAED,8BAA+B,CAC9B,OAED,6BAA8B,CAC7B,MACA,MAED,oCAAqC,CACpC,MACA,MAED,+BAAgC,CAC/B,MACA,KACA,KACA,IACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,MAED,sCAAuC,CACtC,MACA,MAED,sCAAuC,CACtC,MACA,MAED,iDAAkD,CACjD,MACA,KACA,KACA,IACA,KACA,KACA,IACA,KACA,KACA,KACA,MAED,iDAAkD,CACjD,MACA,KACA,KACA,IACA,KACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,MAED,oBAAqB,CACpB,OAED,uBAAwB,CACvB,OAED,qBAAsB,CACrB,OAED,4BAA6B,CAC5B,OAED,4BAA6B,CAC5B,OAED,mBAAoB,CACnB,OAED,wBAAyB,CACxB,OAED,2BAA4B,CAC3B,OAED,iBAAkB,CACjB,MACA,IAED,uBAAwB,CACvB,MACA,KACA,IACA,MAED,8BAA+B,CAC9B,MACA,KACA,IACA,MAED,uCAAwC,CACvC,MACA,MAED,uCAAwC,CACvC,KACA,MAED,yCAA0C,CACzC,MACA,KACA,KAED,0CAA2C,CAC1C,MACA,KACA,IACA,MAED,+BAAgC,CAC/B,MACA,MAED,+BAAgC,CAC/B,MACA,MAED,iCAAkC,CACjC,MACA,MAED,uBAAwB,CACvB,OAGF,SAASk9B,EAAoBJ,GAC5B,IAAIE,EAAoBC,EAAEj9B,EAAK88B,GAC9B,OAAOzvC,QAAQC,UAAU6vC,MAAK,KAC7B,IAAI1+B,EAAI,IAAIvQ,MAAM,uBAAyB4uC,EAAM,KAEjD,MADAr+B,EAAE83B,KAAO,mBACH93B,KAIR,IAAI2+B,EAAMp9B,EAAI88B,GAAMpuC,EAAK0uC,EAAI,GAC7B,OAAO/vC,QAAQ6U,IAAIk7B,EAAI3Z,MAAM,GAAGzjB,IAAIg9B,EAAoBv+B,IAAI0+B,MAAK,IACzDH,EAAoBtuC,KAG7BwuC,EAAoBttC,KAAO,IAAOV,OAAOU,KAAKoQ,GAC9Ck9B,EAAoBxuC,GAAK,MACzB7C,EAAOC,QAAUoxC,G","sources":["webpack:///./config/build.empty.js","webpack:///./src/app.js","webpack:///./src/common/helpers.js","webpack:///./src/common/dateHelpers.js","webpack:///./src/common/downloadHelpers.js","webpack:///./src/components/authentication/authentication.js","webpack:///./src/components/authentication/authenticationContext.js","webpack:///./src/components/chart/chartIcon.js","webpack:///./src/components/i18n/i18n.js","webpack:///./src/components/loader/loader.js","webpack:///./src/components/messageView/messageView.js","webpack:///./src/components/pageLayout/pageColumns.js","webpack:///./src/components/pageLayout/pageHeader.js","webpack:///./src/components/pageLayout/pageLayout.js","webpack:///./src/components/pageLayout/pageMessages.js","webpack:///./src/components/pageLayout/pageSection.js","webpack:///./src/components/pageLayout/pageToolbar.js","webpack:///./src/components/router/redirect.js","webpack:///./src/components/router/router.js","webpack:///./src/components/router/routerContext.js","webpack:///./src/components/router/routerHelpers.js","webpack:///./src/components/table/table.js","webpack:///./src/components/table/tableEmpty.js","webpack:///./src/components/table/tableSkeleton.js","webpack:///./src/components/tooltip/tooltip.js","webpack:///./src/config/product.rhel.js","webpack:///./src/config/product.openshiftContainer.js","webpack:///./src/config/product.openshiftMetrics.js","webpack:///./src/config/product.openshiftDedicated.js","webpack:///./src/config/product.rhosak.js","webpack:///./src/config/product.satellite.js","webpack:///./src/config/routes.js","webpack:///./src/hooks/useRouter.js","webpack:///./src/redux/common/apiQueries.js","webpack:///./src/redux/common/reduxHelpers.js","webpack:///./src/redux/hooks/useReactRedux.js","webpack:///./src/redux/hooks/useRhsmActions.js","webpack:///./src/redux/hooks/index.js","webpack:///./src/redux/hooks/useRhsmSelectors.js","webpack:///./src/redux/actions/platformActions.js","webpack:///./src/redux/actions/rhsmActions.js","webpack:///./src/services/user/userServices.js","webpack:///./src/redux/actions/index.js","webpack:///./src/redux/actions/userActions.js","webpack:///./src/redux/reducers/graphReducer.js","webpack:///./src/redux/reducers/inventoryReducer.js","webpack:///./src/redux/reducers/messagesReducer.js","webpack:///./src/redux/reducers/toolbarReducer.js","webpack:///./src/redux/reducers/userReducer.js","webpack:///./src/redux/reducers/viewReducer.js","webpack:///./src/redux/reducers/index.js","webpack:///./src/redux/selectors/appMessagesSelectors.js","webpack:///./src/types/index.js","webpack:///./src/redux/selectors/userSelectors.js","webpack:///./src/redux/selectors/guestsListSelectors.js","webpack:///./src/redux/selectors/graphCardSelectors.js","webpack:///./src/redux/selectors/inventoryListSelectors.js","webpack:///./src/redux/selectors/index.js","webpack:///./src/redux/middleware/actionRecordMiddleware.js","webpack:///./src/redux/middleware/index.js","webpack:///./src/redux/middleware/statusMiddleware.js","webpack:///./src/redux/middleware/multiActionMiddleware.js","webpack:///./src/redux/store.js","webpack:///./src/redux/types/appTypes.js","webpack:///./src/redux/types/graphTypes.js","webpack:///./src/redux/types/inventoryTypes.js","webpack:///./src/redux/types/platformTypes.js","webpack:///./src/redux/types/queryTypes.js","webpack:///./src/redux/types/userTypes.js","webpack:///./src/redux/types/index.js","webpack:///./src/redux/types/toolbarTypes.js","webpack:///./src/redux/types/rhsmTypes.js","webpack:///./src/services/common/helpers.js","webpack:///./src/services/common/serviceConfig.js","webpack:///./src/services/config.js","webpack:///./src/services/platform/platformConstants.js","webpack:///./src/services/platform/platformSchemas.js","webpack:///./src/services/platform/platformTransformers.js","webpack:///./src/services/platform/platformServices.js","webpack:///./src/services/rhsm/rhsmConstants.js","webpack:///./src/services/rhsm/rhsmSchemas.js","webpack:///./src/services/rhsm/rhsmTransformers.js","webpack:///./src/services/rhsm/rhsmServices.js","webpack:///./src/types/rhsmApiTypes.js","webpack:////home/travis/build/RedHatInsights/curiosity-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/components|lazy|/^\\.\\/.*\\.js$/|exclude: /\\.test\\.js$/|groupOptions: {}|namespace object"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMount } from 'react-use';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { reduxActions, storeHooks } from './redux';\nimport { I18n } from './components/i18n/i18n';\nimport { Router } from './components/router';\nimport Authentication from './components/authentication/authentication';\n\n/**\n * Application\n *\n * @param {object} props\n * @param {Function} props.getLocale\n * @param {Function} props.useDispatch\n * @param {Function} props.useSelector\n * @returns {Node}\n */\nconst App = ({ getLocale, useDispatch: useAliasDispatch, useSelector: useAliasSelector }) => {\n  const dispatch = useAliasDispatch();\n  const { value: locale } = useAliasSelector(({ user }) => user?.locale?.data, {});\n\n  useMount(() => {\n    dispatch(getLocale());\n  });\n\n  return (\n    <I18n locale={locale || null}>\n      <NotificationsPortal />\n      <Authentication>\n        <Router />\n      </Authentication>\n    </I18n>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelector: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: reduxActions.user.getLocale,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelector: storeHooks.reactRedux.useSelector\n};\n\nexport { App as default, App };\n","import numbro from 'numbro';\n\n/**\n * Fill for AggregatedError\n *\n * @param {Array|*} errors An array of errors\n * @param {string|*} message\n * @param {object} options\n * @param {string} options.name\n * @returns {Error|window.AggregateError<Error>}\n */\nconst aggregatedError = (errors, message, { name = 'AggregateError' } = {}) => {\n  const { AggregateError, Error } = window;\n  let err;\n\n  if (AggregateError) {\n    err = new AggregateError(errors, message);\n  } else {\n    err = new Error(message);\n    err.name = name;\n    err.errors = (Array.isArray(errors) && errors) || [errors];\n    err.isEmulated = true;\n  }\n  return err;\n};\n\n/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string|Array} key\n * @param {string|object|Array} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) => {\n  const updatedKey = (Array.isArray(key) && `[${key}]`) || key;\n  const updatedValue =\n    (typeof value === 'string' && value) ||\n    (Array.isArray(value) && `[${value}]`) ||\n    (Object.keys(value || '').length && JSON.stringify(value)) ||\n    '';\n  const updatedComponents = (components && `${components}`) || '';\n\n  return `t(${updatedKey}${(updatedValue && `, ${updatedValue}`) || ''}${\n    (updatedComponents && `, ${updatedComponents}`) || ''\n  })`;\n};\n\n/**\n * ToDo: review adding \"locale\" for numbro\n */\n/**\n * Convenience wrapper for numbro. Numbro assumes all values passed to it conform as \"number\".\n * This allows us to optional chain the function results.\n *\n * @param {*} value\n * @returns {numbro.Numbro|*}\n */\nconst numberDisplay = value => {\n  if (typeof value !== 'number' || Number.isNaN(value)) {\n    return value;\n  }\n  return numbro(value);\n};\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the current hosts inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_HOSTS = process.env.REACT_APP_UI_DISABLED_TABLE_HOSTS === 'true';\n\n/**\n * Disable the current instances inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_INSTANCES = process.env.REACT_APP_UI_DISABLED_TABLE_INSTANCES === 'true';\n\n/**\n * Disable the current subscriptions inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_SUBSCRIPTIONS = process.env.REACT_APP_UI_DISABLED_TABLE_SUBSCRIPTIONS === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * A url, or uri, for \"recommend actions\"\n *\n * @type {string}\n */\nconst UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS = process.env.REACT_APP_UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI state logging file name.\n *\n * @type {string}\n */\nconst UI_LOGGER_FILE = process.env.REACT_APP_UI_LOGGER_FILE || 'debug_log_{0}.json';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  aggregatedError,\n  browserExpose,\n  generateId,\n  isDate,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  numberDisplay,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TABLE_HOSTS,\n  UI_DISABLED_TABLE_INSTANCES,\n  UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_LOGGER_FILE,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && moment.utc('20190720').toDate()) ||\n  (helpers.DEV_MODE &&\n    process.env.REACT_APP_DEBUG_DEFAULT_DATETIME &&\n    moment.utc(process.env.REACT_APP_DEBUG_DEFAULT_DATETIME).toDate()) ||\n  moment.utc().toDate();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @param {string} params.endOfMeasurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement, endOfMeasurement = 'days' }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf(endOfMeasurement).toDate()\n});\n\nconst currentDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 1, measurement: 'days' });\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\nconst rangedYearDateTime = setRangedDateTime({\n  date: getCurrentDate(),\n  subtract: 11,\n  measurement: 'months',\n  endOfMeasurement: 'months'\n});\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case 'CURRENT':\n      return { ...currentDateTime };\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Generate a list of months for use in a select list.\n *\n * @param {string} month\n * @returns {{keyDateTimeRanges: {}, listDateTimeRanges: *[]}|*}\n */\nconst getRangedMonthDateTime = month => {\n  const currentYear = Number.parseInt(moment.utc(getCurrentDate()).year(), 10);\n  const { startDate, endDate } = { ...rangedYearDateTime };\n  const keyDateTimeRanges = {};\n  let listDateTimeRanges = [];\n\n  const startDateUpdated = moment.utc(startDate);\n  const endDateUpdated = moment.utc(endDate);\n\n  while (endDateUpdated > startDateUpdated || startDateUpdated.format('M') === endDateUpdated.format('M')) {\n    const dateTime = {\n      value: {\n        startDate: startDateUpdated.toDate()\n      }\n    };\n\n    const titleYear = startDateUpdated.format('MMMM YYYY');\n    const title = startDateUpdated.format('MMMM');\n    const titleIndex = startDateUpdated.format('M');\n    const isNextYear = currentYear !== Number.parseInt(startDateUpdated.year(), 10);\n\n    dateTime.title = (isNextYear && titleYear) || title;\n    dateTime._title = title.toLowerCase();\n    dateTime.value.endDate = moment.utc(startDateUpdated).endOf('month').toDate();\n\n    startDateUpdated.add(1, 'month');\n\n    dateTime.title = translate('curiosity-toolbar.granularityRangedMonthly', { context: dateTime.title });\n    keyDateTimeRanges[title.toLowerCase()] = { ...dateTime };\n    keyDateTimeRanges[titleIndex] = { ...dateTime };\n    listDateTimeRanges.push(dateTime);\n  }\n\n  listDateTimeRanges = listDateTimeRanges.reverse();\n  listDateTimeRanges[0] = {\n    ...listDateTimeRanges[0],\n    isCurrent: true,\n    _title: 'current',\n    title: translate('curiosity-toolbar.granularityRangedMonthly', { context: 'current' })\n  };\n\n  keyDateTimeRanges.current = { ...listDateTimeRanges[0] };\n\n  if (month) {\n    return keyDateTimeRanges?.[month] || undefined;\n  }\n\n  return { keyDateTimeRanges, listDateTimeRanges };\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\n/**\n * Consistent timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampTimeFormats = {\n  timeLong: 'MMMM D h:mm:ss A',\n  yearTimeLong: 'MMMM D YYYY h:mm:ss A',\n  timeShort: 'MMM D h:mm A',\n  yearTimeShort: 'MMM D YYYY h:mm A'\n};\n\n/**\n * Consistent UTC timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampUTCTimeFormats = {\n  timeLong: 'DD MMMM HH:mm:ss UTC',\n  yearTimeLong: 'DD MMMM YYYY HH:mm:ss UTC',\n  timeShort: 'DD MMM HH:mm UTC',\n  yearTimeShort: 'DD MMM YYYY HH:mm UTC'\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { dateHelpers } from './dateHelpers';\n\n/**\n * Download data to a file\n *\n * @param {object} options\n * @param {string} options.data\n * @param {string} options.fileName\n * @param {string} options.fileType\n * @returns {Promise}\n */\nconst downloadData = options => {\n  const { data = '', fileName = 'download.txt', fileType = 'text/plain' } = options || {};\n  return new Promise((resolve, reject) => {\n    try {\n      const { document, navigator, URL } = window;\n      const blob = new Blob([data], { type: fileType });\n\n      if (navigator?.msSaveBlob) {\n        navigator.msSaveBlob(blob, fileName);\n        resolve({ fileName, data });\n      } else {\n        const anchorTag = document.createElement('a');\n\n        anchorTag.href = URL.createObjectURL(blob);\n        anchorTag.style.display = 'none';\n        anchorTag.download = fileName;\n\n        document.body.appendChild(anchorTag);\n\n        anchorTag.click();\n\n        setTimeout(() => {\n          document.body.removeChild(anchorTag);\n          URL.revokeObjectURL(blob);\n          resolve({ fileName, data });\n        }, 250);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\n/**\n * Download the debug log file.\n */\nconst debugLog = async () => {\n  try {\n    const { sessionStorage } = window;\n    const fileName = `${helpers.UI_LOGGER_FILE}`.replace(\n      '{0}',\n      moment(dateHelpers.getCurrentDate()).format('YYYYMMDD_HHmmss')\n    );\n    const data = JSON.stringify(JSON.parse(sessionStorage.getItem(`${helpers.UI_LOGGER_ID}`)), null, 2);\n\n    await downloadData({ data, fileName, fileType: 'application/json' });\n  } catch (e) {\n    throw new Error(`debuglog error, ${e.message}`);\n  }\n};\n\nconst downloadHelpers = {\n  downloadData,\n  debugLog\n};\n\nhelpers.browserExpose({ debugLog }, { limit: false });\n\nexport { downloadHelpers as default, downloadHelpers, downloadData, debugLog };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { useMount, useUnmount } from 'react-use';\nimport { reduxActions, storeHooks } from '../../redux';\nimport { routerHooks } from '../../hooks/useRouter';\nimport { routerHelpers, Redirect } from '../router';\nimport { rhsmConstants } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\nimport MessageView from '../messageView/messageView';\nimport { translate } from '../i18n/i18n';\nimport { AuthenticationContext, useAuth } from './authenticationContext';\n\n/**\n * An authentication pass-through component.\n *\n * @param {object} props\n * @param {string} props.appName\n * @param {Function} props.authorizeUser\n * @param {React.ReactNode} props.children\n * @param {Function} props.hideGlobalFilter\n * @param {Function} props.initializeChrome\n * @param {boolean} props.isDisabled\n * @param {Function} props.onNavigation\n * @param {Function} props.setAppName\n * @param {Function} props.t\n * @param {Function} props.useAuth\n * @param {Function} props.useDispatch\n * @param {Function} props.useHistory\n * @returns {React.ReactNode}\n */\nconst Authentication = ({\n  appName,\n  authorizeUser,\n  children,\n  hideGlobalFilter,\n  initializeChrome,\n  isDisabled,\n  onNavigation,\n  setAppName,\n  t,\n  useAuth: useAliasAuth,\n  useDispatch: useAliasDispatch,\n  useHistory: useAliasHistory\n}) => {\n  const [unregister, setUnregister] = useState(() => helpers.noop);\n  const dispatch = useAliasDispatch();\n  const history = useAliasHistory();\n\n  const { pending, data: authData = {} } = useAliasAuth();\n  const { authorized = {}, errorCodes, errorStatus } = authData;\n  const { [appName]: isAuthorized } = authorized;\n\n  useMount(async () => {\n    if (!isAuthorized) {\n      await dispatch(authorizeUser());\n    }\n\n    dispatch([initializeChrome(), setAppName(appName), hideGlobalFilter()]);\n    setUnregister(() => dispatch(onNavigation(event => history.push(event.navId))));\n  });\n\n  useUnmount(() => {\n    unregister();\n  });\n\n  const renderContent = () => {\n    if (isDisabled) {\n      return (\n        <MessageView>\n          <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n        </MessageView>\n      );\n    }\n\n    if (isAuthorized) {\n      return children;\n    }\n\n    if (pending) {\n      return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n    }\n\n    if (\n      (errorCodes && errorCodes.includes(rhsmConstants.RHSM_API_RESPONSE_ERRORS_CODE_TYPES.OPTIN)) ||\n      errorStatus === 418\n    ) {\n      return <Redirect route={routerHelpers.getErrorRoute.path} />;\n    }\n\n    return (\n      <MessageView>\n        <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n      </MessageView>\n    );\n  };\n\n  return <AuthenticationContext.Provider value={authData}>{renderContent()}</AuthenticationContext.Provider>;\n};\n\n/**\n * Prop types.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, useHistory: Function, setAppName: Function, t: Function,\n *     children: React.ReactNode, appName: string, initializeChrome: Function, useDispatch: Function,\n *     isDisabled: boolean, useAuth: Function,hideGlobalFilter: Function}}\n */\nAuthentication.propTypes = {\n  appName: PropTypes.string,\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  hideGlobalFilter: PropTypes.func,\n  initializeChrome: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  onNavigation: PropTypes.func,\n  setAppName: PropTypes.func,\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useHistory: PropTypes.func,\n  useAuth: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, useHistory: Function, setAppName: Function, t: Function,\n *     appName: string, initializeChrome: Function, useDispatch: Function, isDisabled: boolean, useAuth: Function,\n *     hideGlobalFilter: Function}}\n */\nAuthentication.defaultProps = {\n  appName: routerHelpers.appName,\n  authorizeUser: reduxActions.platform.authorizeUser,\n  hideGlobalFilter: reduxActions.platform.hideGlobalFilter,\n  initializeChrome: reduxActions.platform.initializeChrome,\n  isDisabled: helpers.UI_DISABLED,\n  onNavigation: reduxActions.platform.onNavigation,\n  setAppName: reduxActions.platform.setAppName,\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useHistory: routerHooks.useHistory,\n  useAuth\n};\n\nexport { Authentication as default, Authentication };\n","import React, { useContext } from 'react';\nimport { storeHooks } from '../../redux';\nimport { helpers } from '../../common';\n\n/**\n * Base context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst AuthenticationContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated authentication context.\n *\n * @returns {React.Context<{}>}\n */\nconst useAuthContext = () => useContext(AuthenticationContext);\n\n/**\n * Return a combined state store that includes authorization, locale, and API errors\n *\n * @param {Function} useSelectorsAllSettledResponse\n * @returns {{data: {errorCodes, errorStatus: *, locale}, pending: boolean, fulfilled: boolean, error: boolean}}\n */\nconst useAuth = ({\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { data, error, fulfilled, pending, responses } = useAliasSelectorsResponse([\n    { id: 'auth', selector: ({ user }) => user?.auth },\n    { id: 'locale', selector: ({ user }) => user?.locale },\n    {\n      id: 'errors',\n      selector: ({ user }) => (user?.errors?.error === true && user.errors) || { fulfilled: true, data: [] }\n    }\n  ]);\n\n  const [user = {}, app = {}] = (Array.isArray(data.auth) && data.auth) || [];\n  const errorStatus = (error && responses?.id?.errors?.status) || null;\n\n  return {\n    data: {\n      ...user,\n      ...app,\n      locale: data.locale,\n      errorCodes: data.errors,\n      errorStatus\n    },\n    error,\n    fulfilled,\n    pending\n  };\n};\n\n/**\n * Return session data from authentication context.\n *\n * @param {Function} useAliasAuthContext\n * @returns {{errorCodes, errorStatus: *, locale}}\n */\nconst useSession = ({ useAuthContext: useAliasAuthContext = useAuthContext } = {}) => {\n  const session = useAliasAuthContext();\n  return {\n    ...session\n  };\n};\n\nconst context = {\n  AuthenticationContext,\n  DEFAULT_CONTEXT,\n  useAuthContext,\n  useAuth,\n  useSession\n};\n\nexport { context as default, context, AuthenticationContext, DEFAULT_CONTEXT, useAuthContext, useAuth, useSession };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EyeIcon, EyeSlashIcon, SquareIcon, IconSize } from '@patternfly/react-icons';\n\n/**\n * Emulate pf icon sizing for custom SVGs\n *\n * @param {string} size\n * @returns {string} em measurement\n */\nconst getSize = size => {\n  if (!Number.isNaN(Number.parseFloat(size))) {\n    return size;\n  }\n\n  switch (size) {\n    case 'md':\n      return '1.5em';\n    case 'lg':\n      return '2em';\n    case 'xl':\n      return '3em';\n    case 'sm':\n    default:\n      return '1em';\n  }\n};\n\n/**\n * Render an icon for use outside of Victory charts.\n *\n * @param {object} props\n * @param {string} props.fill\n * @param {string} props.symbol\n * @param {string} props.size\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\nconst ChartIcon = ({ fill, symbol, size, title, ...props }) => {\n  const svgProps = { ...props };\n  const iconProps = { size, title, ...props };\n  const fontProps = { style: { fontSize: getSize(size) }, title, ...props };\n  const emSvgSize = getSize(size);\n\n  if (title) {\n    svgProps['aria-labelledby'] = title;\n  } else {\n    svgProps['aria-hidden'] = true;\n  }\n\n  if (fill) {\n    iconProps.color = fill;\n    fontProps.style.color = fill;\n  }\n\n  const setIcon = () => {\n    switch (symbol) {\n      case 'dash':\n        return (\n          <span\n            style={{\n              width: emSvgSize,\n              height: `${Number.parseFloat(emSvgSize) / 2}em`\n            }}\n          >\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 38 10\" role=\"img\" {...svgProps}>\n              <rect y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"14\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n              <rect x=\"28\" y=\"5\" width=\"10\" height=\"10\" fill={fill} />\n            </svg>\n          </span>\n        );\n      case 'threshold':\n        return (\n          <span style={{ width: `${Number.parseFloat(emSvgSize) * 2}em`, height: emSvgSize }}>\n            <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 18 10\" role=\"img\" {...svgProps}>\n              <line\n                x1={0}\n                y1={(Number.parseFloat(emSvgSize) * 16) / 2}\n                x2={Number.parseFloat(emSvgSize) * 16 * 3}\n                y2={(Number.parseFloat(emSvgSize) * 16) / 2}\n                stroke={fill}\n                strokeWidth={3}\n                strokeDasharray=\"4,3\"\n              />\n            </svg>\n          </span>\n        );\n      case 'eye':\n        return <EyeIcon {...iconProps} />;\n      case 'eyeSlash':\n        return <EyeSlashIcon {...iconProps} />;\n      case 'infinity':\n        return (\n          <span className=\"curiosity-icon__f-infinity\" {...fontProps}>\n            <span aria-hidden>&#x221e;</span>\n          </span>\n        );\n\n      case 'square':\n      default:\n        return <SquareIcon {...iconProps} />;\n    }\n  };\n\n  return <span className={`curiosity-chartarea__icon curiosity-chartarea__icon-${symbol}`}>{setIcon()}</span>;\n};\n\n/**\n * Prop types.\n *\n * @type {{symbol: string, size: string, fill: string, title: string}}\n */\nChartIcon.propTypes = {\n  fill: PropTypes.string,\n  size: PropTypes.oneOf([...Object.keys(IconSize)]),\n  symbol: PropTypes.oneOf(['dash', 'eye', 'eyeSlash', 'infinity', 'square', 'threshold']),\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{symbol: string, size: string, fill: null, title: null}}\n */\nChartIcon.defaultProps = {\n  fill: null,\n  size: 'sm',\n  symbol: 'square',\n  title: null\n};\n\nexport { ChartIcon as default, ChartIcon };\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, Trans } from 'react-i18next';\nimport { useMount } from 'react-use';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string|Array} translateKey A key reference, or an array of a primary key with fallback keys.\n * @param {string|object|Array} values A default string if the key can't be found. An object with i18next settings. Or an array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @returns {string|React.ReactNode}\n */\nconst translate = (translateKey, values = null, components) => {\n  const updatedValues = values;\n  let updatedTranslateKey = translateKey;\n\n  if (Array.isArray(updatedTranslateKey)) {\n    updatedTranslateKey = updatedTranslateKey.filter(value => typeof value === 'string' && value.length > 0);\n  }\n\n  if (Array.isArray(updatedValues?.context)) {\n    updatedValues.context = updatedValues.context\n      .filter(value => typeof value === 'string' && value.length > 0)\n      .join('_');\n  }\n\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(updatedTranslateKey, updatedValues, components);\n  }\n\n  if (components) {\n    return (\n      (i18next.store && <Trans i18nKey={updatedTranslateKey} values={updatedValues} components={components} />) || (\n        <React.Fragment>t({updatedTranslateKey})</React.Fragment>\n      )\n    );\n  }\n\n  return (i18next.store && i18next.t(updatedTranslateKey, updatedValues)) || `t([${updatedTranslateKey}])`;\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {React.ReactNode} Component\n * @returns {React.ReactNode}\n */\nconst translateComponent = Component => {\n  const withTranslation = ({ ...props }) => (\n    <Component\n      {...props}\n      t={(i18next.store && translate) || helpers.noopTranslate}\n      i18n={(i18next.store && i18next) || helpers.noop}\n    />\n  );\n\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\n/**\n * Load I18n.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {string} props.fallbackLng\n * @param {string} props.loadPath\n * @param {string} props.locale\n * @returns {React.ReactNode}\n */\nconst I18n = ({ children, fallbackLng, loadPath, locale }) => {\n  const [initialized, setInitialized] = useState(false);\n\n  /**\n   * Initialize i18next\n   */\n  useMount(async () => {\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: undefined,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      //\n    }\n\n    setInitialized(true);\n  });\n\n  /**\n   * Update locale.\n   */\n  useEffect(() => {\n    if (initialized) {\n      try {\n        i18next.changeLanguage(locale);\n      } catch (e) {\n        //\n      }\n    }\n  }, [initialized, locale]);\n\n  return (initialized && children) || <React.Fragment />;\n};\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: React.ReactNode, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    colWidth: PropTypes.array,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader, SkeletonSize };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {Node|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {Node}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, icon: Node|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { helpers } from '../../common';\n\n/**\n * Render page columns based on children.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageColumns = ({ children, className }) => (\n  <Flex\n    alignItems={{ sm: 'alignItemsStretch' }}\n    spaceItems={{ sm: 'spaceItemsNone' }}\n    className={`curiosity-page-columns ${className}`}\n  >\n    {React.Children.toArray(children)\n      .filter(child => React.isValidElement(child))\n      .map(child => (\n        <FlexItem\n          key={(child.key && `page-column-${child.key}`) || helpers.generateId()}\n          grow={{ sm: 'grow' }}\n          className=\"curiosity-page-columns-column\"\n        >\n          {child}\n        </FlexItem>\n      ))}\n  </Flex>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageColumns.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageColumns.defaultProps = {\n  className: ''\n};\n\nexport { PageColumns as default, PageColumns };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader as RcsPageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Flex, FlexItem } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst PageHeader = ({ children, productLabel, t }) => (\n  <RcsPageHeader>\n    <Flex justifyContent={{ sm: 'justifyContentSpaceBetween' }}>\n      <FlexItem>\n        <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n      </FlexItem>\n    </Flex>\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, productLabel: string, t: Function}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{includeTour: boolean, productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageColumns } from './pageColumns';\nimport { PageMessages } from './pageMessages';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageLayout = ({ children, className }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageMessages)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className={`curiosity ${className}`}>\n      {React.Children.toArray(children).filter(\n        child => child.type !== PageHeader && child.type !== PageMessages && child.type !== PageToolbar\n      )}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageLayout.defaultProps = {\n  className: ''\n};\n\nexport { PageLayout as default, PageLayout, PageColumns, PageHeader, PageMessages, PageSection, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageMessages = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-messages ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageMessages.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageMessages.defaultProps = {\n  className: ''\n};\n\nexport { PageMessages as default, PageMessages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageSection = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-section ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageSection.defaultProps = {\n  className: ''\n};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageToolbar = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-toolbar ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageToolbar.defaultProps = {\n  className: ''\n};\n\nexport { PageToolbar as default, PageToolbar };\n","import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Router } from './router';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\n/**\n * A routing redirect.\n *\n * @param {object} props\n * @param {boolean} props.isForced\n * @param {string} props.route\n * @param {string} props.routes\n * @param {string} props.url\n * @returns {Node}\n */\nconst Redirect = ({ isForced, route, routes, url }) => {\n  const baseName = routerHelpers.dynamicBaseName();\n\n  /**\n   * Bypass router, force the location.\n   */\n  const forceNavigation = () => {\n    const { hash = '', search = '' } = window.location;\n    const forcePath = url || (route && `${path.join(baseName, route)}${search}${hash}`);\n\n    window.location.replace(forcePath);\n  };\n\n  const { path: matchedRoutePath, ...matchedRoute } = routerHelpers.getRouteConfig({ pathName: route, id: route });\n\n  if (!isForced && matchedRoutePath) {\n    return <Router routes={[{ ...matchedRoute, path: '*' }, ...routes]} />;\n  }\n\n  forceNavigation();\n\n  return (helpers.TEST_MODE && <React.Fragment>Redirected towards {url || route}</React.Fragment>) || null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, routes: Array, isReplace: boolean, url: string,\n *    isForced: boolean}}\n */\nRedirect.propTypes = {\n  isForced: PropTypes.bool,\n  route: PropTypes.string,\n  routes: PropTypes.array,\n  url: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isRedirect: boolean, route: string, routes: Array, isReplace: boolean, url: string,\n *    isForced: boolean}}\n */\nRedirect.defaultProps = {\n  isForced: false,\n  route: null,\n  routes: routerHelpers.routes,\n  url: null\n};\n\nexport { Redirect as default, Redirect };\n","/* eslint-disable react/jsx-no-constructed-context-values */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport { useMount } from 'react-use';\nimport { RouterContext } from './routerContext';\nimport { routerHelpers } from './routerHelpers';\nimport { Loader } from '../loader/loader';\n\n/**\n * Load routes.\n *\n * @param {object} props\n * @param {Array} props.routes\n * @returns {Node}\n */\nconst Router = ({ routes } = {}) => {\n  const [updatedRoutes, setUpdatedRoutes] = useState([]);\n  const [redirectDefault, setRedirectDefault] = useState(null);\n\n  /**\n   * Initialize routes.\n   */\n  useMount(async () => {\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    const results = await Promise.all(\n      routes.map(async item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        const View = await routerHelpers.importView(item.component);\n\n        return (\n          <Route\n            exact={item.exact}\n            key={item.path}\n            path={item.path}\n            strict={item.strict}\n            render={({ location, ...routeProps }) => {\n              const routeConfig = item.id && routerHelpers.getRouteConfig({ id: item.id });\n              const { URLSearchParams, decodeURIComponent } = window;\n              const parsedSearch = {};\n\n              [\n                ...new Set(\n                  [...new URLSearchParams(decodeURIComponent(location.search))].map(\n                    ([param, value]) => `${param}~${value}`\n                  )\n                )\n              ].forEach(v => {\n                const [param, value] = v.split('~');\n                parsedSearch[param] = value;\n              });\n\n              const updatedLocation = {\n                ...location,\n                parsedSearch\n              };\n\n              const routeDetail = {\n                baseName: routerHelpers.dynamicBaseName(),\n                errorRoute: activateOnErrorRoute,\n                routes,\n                routeItem: { ...item },\n                ...routeConfig\n              };\n\n              return (\n                <RouterContext.Provider value={{ routeDetail }}>\n                  <View routeDetail={routeDetail} location={updatedLocation} {...routeProps} />\n                </RouterContext.Provider>\n              );\n            }}\n          />\n        );\n      })\n    );\n\n    setUpdatedRoutes(results);\n    setRedirectDefault(routes.find(({ disabled, redirect }) => !disabled && redirect) ?? null);\n  });\n\n  return (\n    <React.Suspense fallback={<Loader variant=\"title\" />}>\n      <Switch>\n        {updatedRoutes}\n        {redirectDefault && <ReactRouterDomRedirect to={redirectDefault.redirect} />}\n      </Switch>\n    </React.Suspense>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.bool,\n      component: PropTypes.string.isRequired,\n      disabled: PropTypes.bool,\n      exact: PropTypes.bool,\n      id: PropTypes.string,\n      path: PropTypes.string.isRequired,\n      redirect: PropTypes.string,\n      render: PropTypes.bool,\n      strict: PropTypes.bool\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerHelpers.routes\n};\n\nexport { Router as default, Router };\n","import React, { useContext } from 'react';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { routeDetail: { baseName: null, errorRoute: null, routes: [], routeItem: {} } },\n  helpers.noop\n];\n\nconst RouterContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated router context.\n *\n * @returns {React.Context<{}>}\n */\nconst useRouterContext = () => useContext(RouterContext);\n\n/**\n * Get a route detail from router context.\n *\n * @param {object} options\n * @param {Function} options.useRouterContext\n * @returns {{routes: Array, routeItem: object, baseName: string, errorRoute: object}}\n */\nconst useRouteDetail = ({ useRouterContext: useAliasRouterContext = useRouterContext } = {}) => {\n  const { routeDetail } = useAliasRouterContext();\n  return routeDetail;\n};\n\nconst context = {\n  RouterContext,\n  DEFAULT_CONTEXT,\n  useRouterContext,\n  useRouteDetail\n};\n\nexport { context as default, context, RouterContext, DEFAULT_CONTEXT, useRouterContext, useRouteDetail };\n","import React from 'react';\nimport path from 'path';\nimport { helpers } from '../../common/helpers';\nimport { routesConfig } from '../../config';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformLandingRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/');\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformModalRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return an assumed route baseName directory based on existing app name.\n * App name is defined in dotenv and package.json/insights.appname\n * [environment]/[OPTIONAL]/[OPTIONAL]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  `${pathName.split(applicationName)[0]}${applicationName}`;\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName = (helpers.TEST_MODE && '/') || dynamicBaseName();\n\n/**\n * Return a base path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBasePath = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  pathName.split(applicationName)[0];\n\n/**\n * App basePath.\n *\n * @type {string}\n */\nconst basePath = (helpers.TEST_MODE && '/') || dynamicBasePath();\n\n/**\n * Generate product groups for applying query filter resets.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateProductGroups = (config = routesConfig) => {\n  const productGroups = {};\n\n  config.forEach(({ pathParameter, productParameter }) => {\n    const viewIds = ((Array.isArray(productParameter) && productParameter) || [productParameter]).map(\n      id => (id && `view${id}`) || id\n    );\n\n    viewIds.forEach((id, index) => {\n      if (id) {\n        if (!productGroups[id]) {\n          productGroups[id] = [];\n        }\n\n        if (pathParameter) {\n          productGroups[id].push((Array.isArray(pathParameter) && pathParameter?.[index]) || pathParameter);\n        }\n      }\n    });\n  });\n\n  return productGroups;\n};\n\n/**\n * Reference for products grouped by view.\n */\nconst productGroups = generateProductGroups();\n\n/**\n * Generate routes to be consumed by router.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateRoutes = (config = routesConfig) =>\n  config.map(({ activateOnError, component, disabled, id, path: routePath, redirect }) => ({\n    activateOnError,\n    component,\n    disabled,\n    exact: true,\n    id,\n    path: routePath,\n    redirect\n  }));\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = generateRoutes();\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Match route config entries by path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {Array} params.config\n * @returns {{configs: Array, configFirstMatch: object, configsById: object}}\n */\nconst getRouteConfigByPath = ({ pathName = dynamicBasePath(), config = routesConfig } = {}) => {\n  const basePathDirs = pathName?.split('/').filter(str => str.length > 0);\n  const configs = [];\n  const allConfigs = [];\n  const configsById = {};\n  const allConfigsById = {};\n\n  const findConfig = dir => {\n    config.forEach(({ id, path: configPath, pathParameter, productParameter, aliases, ...configItem }) => {\n      const updatedConfigItem = {\n        aliases,\n        id,\n        path: configPath,\n        pathParameter,\n        productParameter,\n        ...configItem\n      };\n\n      if (\n        dir &&\n        (new RegExp(dir, 'i').test(configPath) ||\n          new RegExp(dir, 'i').test(productParameter?.toString()) ||\n          new RegExp(dir, 'i').test(pathParameter?.toString()) ||\n          new RegExp(dir, 'i').test(aliases?.toString()))\n      ) {\n        if (!configsById[id]) {\n          configsById[id] = { ...updatedConfigItem };\n          configs.push({ ...updatedConfigItem });\n        }\n      }\n\n      if (!allConfigsById[id]) {\n        allConfigsById[id] = { ...updatedConfigItem };\n        allConfigs.push({ ...updatedConfigItem });\n      }\n    });\n  };\n\n  if (basePathDirs?.length) {\n    basePathDirs.forEach(dir => {\n      if (dir) {\n        const decodedDir = window.decodeURI(dir);\n        findConfig(decodedDir);\n      }\n    });\n  } else {\n    findConfig();\n  }\n\n  return { allConfigs, allConfigsById, configs, configsById, firstMatch: configs?.[0] };\n};\n\n/**\n * Return a route config object.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathName\n * @param {boolean} params.returnDefault\n * @param {Array} params.config\n * @returns {object}\n */\nconst getRouteConfig = ({ id = null, pathName, returnDefault = false, config = routesConfig } = {}) => {\n  let navRouteItem;\n\n  if (id) {\n    navRouteItem = config.find(item => item.id === id);\n  }\n\n  if ((!navRouteItem && pathName) || (!navRouteItem && !pathName && !returnDefault)) {\n    navRouteItem = getRouteConfigByPath({ pathName, config }).firstMatch;\n  }\n\n  if (!navRouteItem && returnDefault) {\n    navRouteItem = config.find(item => item.default === true);\n  }\n\n  if (navRouteItem) {\n    const { search = '', hash = '' } = window.location;\n    navRouteItem.routeHref = `${navRouteItem.path}${search}${hash}`;\n\n    const { pathParameter, productParameter } = navRouteItem;\n    navRouteItem.pathParameter = (Array.isArray(pathParameter) && pathParameter[0]) || pathParameter;\n    navRouteItem.productParameter = (Array.isArray(productParameter) && productParameter[0]) || productParameter;\n    navRouteItem.viewParameter =\n      (productParameter && `view${(Array.isArray(productParameter) && productParameter[0]) || productParameter}`) ||\n      productParameter;\n  }\n\n  return { ...(navRouteItem || {}) };\n};\n\n/**\n * Import a route component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst importView = component => {\n  if (!helpers.TEST_MODE) {\n    return React.lazy(() => import(/* webpackExclude: /\\.test\\.js$/ */ `../${component}.js`));\n  }\n\n  return p => <React.Fragment>{JSON.stringify({ ...p, component }, null, 2)}</React.Fragment>;\n};\n\nconst routerHelpers = {\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  importView,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  importView,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  Table as PfTable,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * FixMe: PF tables uses sequentially ordered lists/arrays to denote expandable sections\n * Ideal solution is to nest expandable sections within their respective parents. There\n * are scenarios where manipulating a sequentially ordered list/array can, and will,\n * lead to unintended results. And forces an equal, if not greater, amount of effort on\n * state tracking in the consuming GUI/app. Compounding the issue, the index is used/returned\n * during events for a particular row being \"expanded\". This ends up making after-the-fact\n * application of the expandable list/array items problematic since said index is\n * constantly updating/shifting as rows are dynamically added. Add in a \"not every row\n * needs to be expandable\" scenario, you can start to see the issues. All of that\n * effort means that in some cases it may actually be quicker to simply use PF styles and\n * a HTML table directly, bypassing PF-React entirely.\n *\n * Applying a React node as content in the sequentially ordered list/array appears to\n * automatically \"mount\" said node. How this handles in child components where subsequent\n * AJAX/XHR calls are called means you are potentially hitting an API with dozens of calls,\n * row dependent, even when a user may not expand the nested row/child. This could easily\n * be resolved by nesting and applying the expandable contents after-the-fact.\n */\n/**\n * FixMe: PF tables misalignment of the column headers list/array and row cells breaks the component\n * The related PF error for this is cryptic. An immediate solution would be to simply fix the error\n * messaging, or do a length check before consuming the lists/arrays. This happens when a consumer\n * places more or less column header cells than row cells.\n */\n/**\n * FixMe: PF tables break when an empty list/array is used for the column headers\n * This appears related to the mismatched column header and row cells. The solution is to simply not\n * render the header row instead of throwing an error. This is similar to how the empty rows\n * list/array is handled.\n */\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n * @fires onSort\n */\nclass Table extends React.Component {\n  state = {\n    isCollapsible: false,\n    isSortable: false,\n    sortBy: {},\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (\n      !_isEqualWith(prevProps.rows, rows, customizer) ||\n      !_isEqualWith(prevProps.columnHeaders, columnHeaders, customizer)\n    ) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * FixMe: PF table sort callback doesn't use a zero based index when expandable?\n   * Educated guess there's a cell count happening instead of \"[you have this many data/entry cells]\"\n   * This is really confusing to implement in a consuming application, especially on first\n   * implementation. Special \"collapsible index\" logic had to be implemented to compensate for this\n   * odd behavior.\n   */\n  /**\n   * On column sort\n   *\n   * @event onSort\n   * @param {object} params\n   * @param {number} params.index\n   * @param {string} params.direction\n   * @param {object} params.data\n   */\n  onSort = ({ index, direction, data = {} }) => {\n    const { isCollapsible, updatedColumnHeaders, updatedRows } = this.state;\n    const updatedIndex = isCollapsible ? index - 1 : index;\n\n    updatedRows.forEach(async ({ isOpen }, i) => {\n      if (isOpen === true) {\n        await this.onCollapse({ index: i, isOpen: false });\n      }\n    });\n\n    this.setState(\n      {\n        sortBy: {\n          index,\n          direction\n        }\n      },\n      () =>\n        updatedColumnHeaders[updatedIndex].onSort({\n          direction,\n          index: updatedIndex,\n          label: data?.column?.header?.label\n        })\n    );\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n    const updatedSort = {};\n    let isCollapsible = false;\n    let isSortable = false;\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        isCollapsible = true;\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell?.title !== undefined) {\n          const { title, ...settings } = cell;\n          rowObj.cells.push({ title, ...settings });\n        } else {\n          rowObj.cells.push({\n            title: (React.isValidElement(cell) && cell) || (typeof cell === 'object' && `${cell}`) || cell\n          });\n        }\n      });\n    });\n\n    columnHeaders.forEach((columnHeader, index) => {\n      if (columnHeader?.title !== undefined) {\n        const { onSort, sortActive, sortDirection, title, ...settings } = columnHeader;\n        const tempColumnHeader = {\n          title,\n          ...settings\n        };\n\n        if (onSort) {\n          isSortable = true;\n          tempColumnHeader.transforms = [...(tempColumnHeader?.transforms || []), sortable];\n          tempColumnHeader.onSort = onSort;\n\n          if (sortActive) {\n            updatedSort.sortBy = { index: isCollapsible ? index + 1 : index };\n            updatedSort.sortBy.direction = SortByDirection.asc;\n          }\n\n          if (sortDirection) {\n            updatedSort.sortBy = { ...updatedSort.sortBy, direction: sortDirection };\n          }\n        } else if (tempColumnHeader.transforms) {\n          tempColumnHeader.transforms = tempColumnHeader.transforms.filter(v => v !== sortable);\n        }\n\n        updatedColumnHeaders.push(tempColumnHeader);\n      } else {\n        updatedColumnHeaders.push({\n          title:\n            (React.isValidElement(columnHeader) && columnHeader) ||\n            (typeof columnHeader === 'object' && `${columnHeader}`) ||\n            columnHeader\n        });\n      }\n    });\n\n    this.setState({\n      isCollapsible,\n      isSortable,\n      updatedColumnHeaders,\n      updatedRows,\n      ...updatedSort\n    });\n  }\n\n  /**\n   * FixMe: PF Tables automatically applies an expandable className when using the \"onCollapse\" prop?\n   * Not every row may need to be expandable. In certain scenarios a table may have no expandable\n   * sections, however it appears the \"onCollapse\" styling, and additionally added \"table cells\" are still\n   * applied.\n   */\n  /**\n   * Apply props to table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { isCollapsible, isSortable, sortBy, updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    const pfTableProps = {};\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    if (isCollapsible) {\n      pfTableProps.onCollapse = (event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data });\n    }\n\n    if (isSortable) {\n      pfTableProps.sortBy = sortBy;\n      pfTableProps.onSort = (event, index, direction, data) => this.onSort({ event, index, direction, data });\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n          {...pfTableProps}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: Node,\n *     isHeader: boolean, variant: string, className: string, rows: Array, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        onSort: PropTypes.func,\n        sortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)]),\n        title: PropTypes.node.isRequired\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.instanceOf(Date),\n          PropTypes.shape({\n            title: PropTypes.oneOfType([PropTypes.node, PropTypes.instanceOf(Date)]).isRequired\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {Node|Function} props.icon\n * @param {Node} props.message\n * @param {string} props.tableHeading\n * @param {Node} props.title\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, variant: string, message: Node, title: Node, tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cellWidth, TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {Array} props.colWidth\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableSkeleton = ({ className, borders, colCount, colWidth, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map((value, index) => {\n    const updatedHeader = { title: <Skeleton size={SkeletonSize.md} /> };\n\n    if (typeof colWidth[index] === 'number') {\n      updatedHeader.transforms = [cellWidth(colWidth[index])];\n    }\n\n    return updatedHeader;\n  });\n\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />)\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: string,\n *     className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.arrayOf(PropTypes.number),\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: null,\n *     className: null, rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  colWidth: [],\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip as PfTooltip, TooltipProps, TooltipPosition } from '@patternfly/react-core';\n\n/**\n * PF tooltip wrapper component.\n *\n * @param {object} props\n * @param {React.ReactNode} props.children\n * @param {React.ReactNode} props.content\n * @param {boolean} props.isNoWrap\n * @param {TooltipProps} props.props\n * @returns {React.ReactNode}\n */\nconst Tooltip = ({ children, content, isNoWrap, ...props }) => (\n  <PfTooltip\n    className={`curiosity-tooltip${(isNoWrap && '__nowrap') || ''}`}\n    content={(React.isValidElement(content) && content) || <p>{content || ''}</p>}\n    {...props}\n  >\n    {(React.isValidElement(children) && children) || <span className=\"curiosity-tooltip-children\">{children}</span>}\n  </PfTooltip>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, content: React.ReactNode}}\n */\nTooltip.propTypes = {\n  children: PropTypes.node.isRequired,\n  content: PropTypes.node,\n  distance: PropTypes.number,\n  enableFlip: PropTypes.bool,\n  entryDelay: PropTypes.number,\n  exitDelay: PropTypes.number,\n  isNoWrap: PropTypes.bool,\n  position: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{content: string}}\n */\nTooltip.defaultProps = {\n  content: '...',\n  distance: 5,\n  enableFlip: false,\n  entryDelay: 100,\n  exitDelay: 0,\n  isNoWrap: false,\n  position: TooltipPosition.top\n};\n\nexport { Tooltip as default, Tooltip };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.RHEL;\n\nconst productId = null;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.RHEL;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.SOCKETS,\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'physicalSockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'hypervisorSockets',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value\n    },\n    {\n      id: 'cloudSockets',\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value\n    },\n    { id: 'thresholdSockets', chartType: 'threshold' }\n  ],\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'measurementType',\n      cell: (data = {}) => {\n        const { cloudProvider = {}, measurementType = {} } = data;\n        return (\n          <React.Fragment>\n            {translate('curiosity-inventory.measurementType', { context: measurementType.value })}{' '}\n            {(cloudProvider.value && (\n              <PfLabel color=\"purple\">\n                {translate('curiosity-inventory.cloudProvider', { context: cloudProvider.value })}\n              </PfLabel>\n            )) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'sockets',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: 'productName',\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: 'serviceLevel',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'quantity',\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: 'totalCapacity',\n      header: data => translate('curiosity-inventory.header', { context: ['subscriptions', data?.uom?.value] }),\n      cell: (data = {}) => {\n        const { hasInfiniteQuantity, totalCapacity, uom } = data;\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate('curiosity-inventory.label', { context: ['hasInfiniteQuantity', uom?.value] });\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: 'nextEventDate',\n      cell: data => (data?.nextEventDate?.value && moment.utc(data?.nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      selected: true\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  productContextFilterUom: true,\n  query: {\n    [RHSM_API_QUERY_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.CORES,\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialOption: RHSM_API_QUERY_UOM_TYPES.CORES,\n  initialGraphFilters: [\n    {\n      id: 'cores',\n      isOptional: true,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'sockets',\n      isOptional: true,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    { id: 'thresholdSockets', chartType: 'threshold', isOptional: true },\n    { id: 'thresholdCores', chartType: 'threshold', isOptional: true }\n  ],\n  initialGraphSettings: {},\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'sockets',\n      header: () => translate('curiosity-inventory.header', { context: ['sockets', 'OpenShift Container Platform'] }),\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'cores',\n      header: () => translate('curiosity-inventory.header', { context: ['cores', 'OpenShift Container Platform'] }),\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 25\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: 'productName',\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: 'serviceLevel',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'quantity',\n      isSortable: true,\n      cellWidth: 20,\n      isWrappable: true\n    },\n    {\n      id: 'totalCapacity',\n      header: data => translate('curiosity-inventory.header', { context: ['subscriptions', data?.uom?.value] }),\n      cell: (data = {}) => {\n        const { hasInfiniteQuantity, totalCapacity, uom } = data;\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate('curiosity-inventory.label', { context: ['hasInfiniteQuantity', uom?.value] });\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: 'nextEventDate',\n      cell: data => (data?.nextEventDate?.value && moment.utc(data?.nextEventDate?.value).format('YYYY-MM-DD')) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'coreHours',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    }\n  ],\n  initialGraphSettings: {\n    actionDisplay: (data = {}) => {\n      const {\n        meta: { totalCoreHours }\n      } = data;\n      let displayContent;\n\n      if (totalCoreHours) {\n        displayContent = translate('curiosity-graph.cardActionTotal', {\n          context: 'coreHours',\n          total: helpers\n            .numberDisplay(totalCoreHours)\n            ?.format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n            ?.toUpperCase()\n        });\n      }\n\n      return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data = {}) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'coreHours',\n      cell: data =>\n        (typeof data?.coreHours?.value === 'number' && Number.parseFloat(data?.coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 25\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'coreHours',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: 'line',\n      isStacked: false,\n      yAxisUseDataSet: true\n    },\n    {\n      id: 'instanceHours',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: 'line',\n      isStacked: false,\n      yAxisUseDataSet: true\n    }\n  ],\n  initialGraphSettings: {\n    actionDisplay: (data = {}) => {\n      const {\n        meta: { totalCoreHours }\n      } = data;\n      let displayContent;\n\n      if (totalCoreHours) {\n        displayContent = translate('curiosity-graph.cardActionTotal', {\n          context: 'coreHours',\n          total: helpers\n            .numberDisplay(totalCoreHours)\n            ?.format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n            ?.toUpperCase()\n        });\n      }\n\n      return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data = {}) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'coreHours',\n      cell: data =>\n        (typeof data?.coreHours?.value === 'number' && Number.parseFloat(data?.coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'instanceHours',\n      cell: data =>\n        (typeof data?.instanceHours?.value === 'number' && Number.parseFloat(data?.instanceHours?.value).toFixed(2)) ||\n        `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport { RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES } from '../types/rhsmApiTypes';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { dateHelpers, helpers } from '../common';\nimport { Tooltip } from '../components/tooltip/tooltip';\nimport { ChartIcon } from '../components/chart/chartIcon';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: 'line',\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTES,\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value,\n      chartType: 'line',\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: 'line',\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick }) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return updatedDisplayName;\n      },\n      isSortable: true\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n      header: {\n        tooltip: () =>\n          translate('curiosity-inventory.header', {\n            context: ['tooltip', RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES]\n          })\n      },\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTES,\n      header: {\n        tooltip: () =>\n          translate('curiosity-inventory.header', {\n            context: ['tooltip', RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTES]\n          })\n      },\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: 'productName',\n      isSortable: true,\n      isWrappable: true\n    },\n    {\n      id: 'serviceLevel',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'quantity',\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: 'totalCapacity',\n      header: data => translate('curiosity-inventory.header', { context: ['subscriptions', data?.uom?.value] }),\n      cell: (data = {}) => {\n        const { hasInfiniteQuantity, totalCapacity, uom } = data;\n        if (hasInfiniteQuantity?.value === true) {\n          const content = translate('curiosity-inventory.label', { context: ['hasInfiniteQuantity', uom?.value] });\n          return (\n            <Tooltip content={content}>\n              <ChartIcon symbol=\"infinity\" aria-label={content} />\n            </Tooltip>\n          );\n        }\n        return totalCapacity?.value;\n      },\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: 'nextEventDate',\n      cell: data =>\n        (data?.nextEventDate?.value &&\n          helpers.isDate(data?.nextEventDate?.value) &&\n          moment.utc(data?.nextEventDate?.value).format('YYYY-MM-DD')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: 'rangedMonthly'\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.SATELLITE;\n\nconst productId = null;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.SATELLITE;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'physicalSockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'hypervisorSockets',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value\n    },\n    {\n      id: 'cloudSockets',\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value\n    },\n    { id: 'thresholdSockets', chartType: 'threshold' }\n  ],\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'measurementType',\n      cell: (data = {}) => {\n        const { cloudProvider = {}, measurementType = {} } = data;\n        return (\n          <React.Fragment>\n            {translate('curiosity-inventory.measurementType', { context: measurementType.value })}{' '}\n            {(cloudProvider.value && (\n              <PfLabel color=\"purple\">\n                {translate('curiosity-inventory.cloudProvider', { context: cloudProvider.value })}\n              </PfLabel>\n            )) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'sockets',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      selected: true\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import { config as rhelConfig } from './product.rhel';\nimport { config as openshiftContainerConfig } from './product.openshiftContainer';\nimport { config as openshiftMetricsConfig } from './product.openshiftMetrics';\nimport { config as openshiftDedicatedConfig } from './product.openshiftDedicated';\nimport { config as rhosakConfig } from './product.rhosak';\nimport { config as satelliteProductConfig } from './product.satellite';\nimport { RHSM_API_PATH_ID_TYPES } from '../types/rhsmApiTypes';\nimport { helpers } from '../common';\n\nconst routes = [\n  {\n    id: 'rhel',\n    path: '/rhel',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL }],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['insights'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-arm',\n    path: '/rhel-arm',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_ARM],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_ARM }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-ibmpower',\n    path: '/rhel-ibmpower',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-ibmz',\n    path: '/rhel-ibmz',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-x86',\n    path: '/rhel-x86',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_X86],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_X86 }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'openshift-container',\n    path: '/openshift-container',\n    pathParameter: [openshiftContainerConfig.productId, openshiftMetricsConfig.productId],\n    productParameter: [openshiftContainerConfig.productGroup, openshiftMetricsConfig.productGroup],\n    productConfig: [openshiftContainerConfig, openshiftMetricsConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewOpenShiftContainer'\n  },\n  {\n    id: 'openshift-dedicated',\n    path: '/openshift-dedicated',\n    pathParameter: [openshiftDedicatedConfig.productId],\n    productParameter: [openshiftDedicatedConfig.productGroup],\n    productConfig: [openshiftDedicatedConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewOpenShiftDedicated'\n  },\n  {\n    id: 'rhosak',\n    path: '/streams',\n    pathParameter: [rhosakConfig.productId],\n    productParameter: [rhosakConfig.productGroup],\n    productConfig: [rhosakConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['application-services', 'streams', 'rhosak'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'satellite',\n    path: '/satellite',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [{ ...satelliteProductConfig, productId: RHSM_API_PATH_ID_TYPES.SATELLITE }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'satellite-capsule',\n    path: '/satellite-capsule',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE_CAPSULE],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [{ ...satelliteProductConfig, productId: RHSM_API_PATH_ID_TYPES.SATELLITE_CAPSULE }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'satellite-server',\n    path: '/satellite-server',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE_SERVER],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [{ ...satelliteProductConfig, productId: RHSM_API_PATH_ID_TYPES.SATELLITE_SERVER }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'optin',\n    path: '/optin',\n    pathParameter: null,\n    productParameter: null,\n    productConfig: null,\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'optinView/optinView'\n  },\n  {\n    id: 'missing',\n    path: '/',\n    pathParameter: null,\n    productParameter: null,\n    productConfig: null,\n    redirect: '/',\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: true,\n    component: 'productView/productViewMissing'\n  }\n];\n\nexport { routes as default, routes };\n","import { useHistory as useHistoryRRD, useLocation, useParams, useRouteMatch } from 'react-router-dom';\nimport { useRouteDetail } from '../components/router/routerContext';\nimport { routerHelpers } from '../components/router/routerHelpers';\nimport { reduxActions, storeHooks } from '../redux';\n\n/**\n * Pass useHistory methods. Proxy useHistory push with Platform specific navigation update.\n *\n * @param {object} options\n * @param {boolean} options.isSetAppNav Allow setting the Platform's left navigation if conditions are met or fallback to history.push.\n * @param {Function} options.useHistory\n * @param {Function} options.useDispatch\n * @returns {object}\n */\nconst useHistory = ({\n  isSetAppNav = false,\n  useHistory: useAliasHistory = useHistoryRRD,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch\n} = {}) => {\n  const history = useAliasHistory();\n  const dispatch = useAliasDispatch();\n\n  return {\n    ...history,\n    push: (pathLocation, historyState) => {\n      const pathName = (typeof pathLocation === 'string' && pathLocation) || pathLocation?.pathname;\n      const { productParameter, id, routeHref } = routerHelpers.getRouteConfig({ pathName, id: pathName });\n      const { hash, search } = window.location;\n\n      if (isSetAppNav && productParameter) {\n        return dispatch(reduxActions.platform.setAppNav(id));\n      }\n\n      return history?.push(routeHref || (pathName && `${pathName}${search}${hash}`) || pathLocation, historyState);\n    }\n  };\n};\n\nconst routerHooks = {\n  useHistory,\n  useLocation,\n  useParams,\n  useRouteDetail,\n  useRouteMatch\n};\n\nexport { routerHooks as default, routerHooks, useHistory, useLocation, useParams, useRouteDetail, useRouteMatch };\n","import { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from './reduxHelpers';\n\n/**\n * Parse a query object against a schema for specific RHSM endpoints.\n *\n * @param {object} query\n * @param {object} queries\n * @returns {{graphTallyQuery: object, inventoryHostsQuery: object, inventorySubscriptionsQuery: object,\n *     query: object, inventoryGuestsQuery: object, toolbarQuery: object}}\n */\nconst parseRhsmQuery = (query = {}, queries = {}) => {\n  const { graphTallyQuery, inventoryGuestsQuery, inventoryHostsQuery, inventorySubscriptionsQuery } = queries;\n\n  const updatedGraphTallyQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES);\n  const updatedInventoryGuestsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES\n  );\n  const updatedInventoryHostsQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES);\n  const updatedInventorySubscriptionsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES\n  );\n\n  return {\n    query,\n    graphTallyQuery: { ...updatedGraphTallyQuery, ...graphTallyQuery },\n    inventoryGuestsQuery: { ...updatedInventoryGuestsQuery, ...inventoryGuestsQuery },\n    inventoryHostsQuery: { ...updatedInventoryHostsQuery, ...inventoryHostsQuery },\n    inventorySubscriptionsQuery: { ...updatedInventorySubscriptionsQuery, ...inventorySubscriptionsQuery },\n    toolbarQuery: query\n  };\n};\n\nconst apiQueries = {\n  parseRhsmQuery\n};\n\nexport { apiQueries as default, apiQueries };\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport _snakeCase from 'lodash/snakeCase';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {string} responses.response.keyCase\n * @param {Function} responses.response.customResponseEntry\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(\n    ({ schema = {}, data, customResponseEntry, customResponseValue, keyPrefix: prefix, keyCase = 'camel' }) => {\n      const isArray = Array.isArray(data);\n      const updatedData = (isArray && data) || (data && [data]) || [];\n      const [generatedSchema = {}] = setResponseSchemas([schema]);\n      const parsedResponse = [];\n\n      updatedData.forEach((value, index) => {\n        const generateReflectedData = ({\n          dataObj,\n          keyPrefix = '',\n          keyCaseType,\n          customEntry,\n          customValue = null,\n          update = helpers.noop\n        }) => {\n          let updatedDataObj = {};\n\n          Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n            let casedDataObjKey;\n\n            switch (keyCaseType) {\n              case 'camel':\n                casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'snake':\n                casedDataObjKey = _snakeCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'default':\n              default:\n                casedDataObjKey = `${dataObjKey}`.trim();\n                break;\n            }\n\n            let val = dataObjValue;\n\n            if (typeof val === 'number') {\n              val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n            }\n\n            if (typeof customValue === 'function') {\n              updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n            } else {\n              updatedDataObj[casedDataObjKey] = val;\n            }\n          });\n\n          if (typeof customEntry === 'function') {\n            updatedDataObj = customEntry(updatedDataObj, index);\n          }\n\n          update(updatedDataObj);\n        };\n\n        generateReflectedData({\n          keyPrefix: prefix,\n          dataObj: { ...generatedSchema, ...value },\n          keyCaseType: keyCase,\n          customEntry: customResponseEntry,\n          customValue: customResponseValue,\n          update: generatedData => parsedResponse.push(generatedData)\n        });\n      });\n\n      parsedResponses.push(parsedResponse);\n    }\n  );\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 400 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults?.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    return {\n      meta: { ...updatedMeta },\n      ...Object.fromEntries(Object.entries(meta).map(([key, value]) => [_camelCase(`meta ${key}`), value]))\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (typeof action.meta?.id === 'string' && action.meta?.id && { [action.meta.id]: { ...baseState, ...data } }) || {\n      ...baseState,\n      ...data\n    };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { useSelector as useReactReduxSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { store } from '../store';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Appears to be an issue in trying to use Redux Promise with the default \"useDispatch\"\n */\n/**\n * Wrapper for store.dispatch, emulating useDispatch.\n *\n * @returns {Function}\n */\nconst useDispatch = () => dispatchEvent => store.dispatch(dispatchEvent);\n\n/**\n * Wrapper for Redux hook, useSelector. Applies test mode and a fallback value.\n *\n * @param {Function} selector\n * @param {*} value\n * @param {object} options\n * @param {*} options.equality\n * @param {Function} options.useSelector\n * @returns {*}\n */\nconst useSelector = (\n  selector,\n  value = null,\n  { equality, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => useAliasSelector(selector, equality) ?? value;\n\n/**\n * Generate a selector from multiple selectors for use in \"useSelector\".\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {*} value Pass-through value similar to charging the response.\n * @param {object} options\n * @param {Function} options.useSelector\n * @param {*} options.equality\n * @returns {Array|object}\n */\nconst useSelectors = (\n  selectors,\n  value,\n  { equality = shallowEqual, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => {\n  let updatedSelectors = Array.isArray(selectors) ? selectors : [selectors];\n  const selectorIds = new Set();\n\n  updatedSelectors = updatedSelectors.map(selector => {\n    if (selector.selector && selector.id) {\n      selectorIds.add(selector.id);\n      return selector.selector;\n    }\n    return selector;\n  });\n\n  const multiSelector = createSelector(updatedSelectors, (...results) => results);\n\n  let listMultiSelectorResponse = (useAliasSelector(multiSelector, equality) ?? value) || [];\n  const undefinedMultiSelectorResponse = listMultiSelectorResponse.filter(response => response === undefined);\n\n  if (undefinedMultiSelectorResponse.length === listMultiSelectorResponse.length) {\n    listMultiSelectorResponse = [];\n  } else {\n    listMultiSelectorResponse = _cloneDeep(listMultiSelectorResponse);\n  }\n\n  if (selectorIds.size && selectorIds.size === listMultiSelectorResponse.length) {\n    const idMultiSelectorResponse = {};\n\n    Array.from(selectorIds).forEach((id, index) => {\n      idMultiSelectorResponse[id] = listMultiSelectorResponse[index];\n    });\n\n    return idMultiSelectorResponse;\n  }\n\n  return listMultiSelectorResponse;\n};\n\n/**\n * Return a combined selector response using a \"Promise.all\" like response.\n *\n * @param {Array|Function} selectors A selector function or array of functions. Or an array of objects in the form of\n *     { selector: Function, id: string } If an \"ID\" is used for each selector the returned response will be in the\n *     form of an object whose properties reflect said IDs with the associated selector value.\n * @param {object} options\n * @param {Function} options.useSelectors\n * @param {Function} options.customResponse Callback for customizing your own response\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsResponse = (selectors, { useSelectors: useAliasSelectors = useSelectors, customResponse } = {}) => {\n  const selectorResponse = useAliasSelectors(selectors, []);\n  const isSelectorResponseArray = Array.isArray(selectorResponse);\n\n  const cancelledById = {};\n  const cancelledByList = [];\n  const cancelledDataById = {};\n  const cancelledDataByList = [];\n\n  const errorByList = [];\n  const errorById = {};\n  const errorDataById = {};\n  const errorDataByList = [];\n\n  const fulfilledByList = [];\n  const fulfilledById = {};\n  const fulfilledDataById = {};\n  const fulfilledDataByList = [];\n\n  const pendingByList = [];\n\n  const responsesById = {};\n  const responsesByList = [];\n  const dataById = {};\n  const dataByList = [];\n\n  const idList = [];\n\n  const updatedSelectorResponse = _cloneDeep(\n    (isSelectorResponseArray && selectorResponse) || Object.entries(selectorResponse)\n  );\n\n  updatedSelectorResponse.forEach(response => {\n    const id = (!isSelectorResponseArray && response?.[0]) || null;\n\n    const updatedResponse = (isSelectorResponseArray && response) || response?.[1] || response;\n    const isServiceResponse =\n      typeof updatedResponse.cancelled === 'boolean' ||\n      typeof updatedResponse.error === 'boolean' ||\n      typeof updatedResponse.fulfilled === 'boolean' ||\n      typeof updatedResponse.pending === 'boolean';\n\n    const { pending, fulfilled, error, cancelled, message } = (isServiceResponse && updatedResponse) || {};\n\n    if (id !== null) {\n      idList.push(id);\n      updatedResponse.id = id;\n    }\n\n    if (cancelled) {\n      cancelledByList.push(updatedResponse);\n      cancelledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        cancelledById[id] = cancelledByList[cancelledByList.length - 1];\n        cancelledDataById[id] =\n          cancelledByList[cancelledByList.length - 1]?.data || cancelledByList[cancelledByList.length - 1];\n      }\n    }\n\n    if (error) {\n      errorByList.push({\n        ...updatedResponse,\n        ...new Error(message || `Error: useSelectorsAllResponse${(id && `, ${id}`) || ''}`)\n      });\n      errorDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        errorById[id] = errorByList[errorByList.length - 1];\n        errorDataById[id] = errorByList[errorByList.length - 1]?.data || errorByList[errorByList.length - 1];\n      }\n    }\n\n    if (fulfilled) {\n      fulfilledByList.push(updatedResponse);\n      fulfilledDataByList.push(updatedResponse?.data || updatedResponse);\n\n      if (id !== null) {\n        fulfilledById[id] = fulfilledByList[fulfilledByList.length - 1];\n        fulfilledDataById[id] =\n          fulfilledByList[fulfilledByList.length - 1]?.data || fulfilledByList[fulfilledByList.length - 1];\n      }\n    }\n\n    if (pending) {\n      pendingByList.push(updatedResponse);\n    }\n\n    if (id !== null) {\n      responsesById[id] = updatedResponse;\n      dataById[id] = updatedResponse?.data || updatedResponse;\n    }\n\n    responsesByList.push(updatedResponse);\n    dataByList.push(updatedResponse?.data || updatedResponse);\n  });\n\n  const isById = idList.length === updatedSelectorResponse.length;\n\n  const response = {\n    responses: {\n      id: responsesById,\n      list: responsesByList\n    },\n    cancelled: false,\n    data: (isById && {}) || [],\n    error: false,\n    fulfilled: false,\n    message: null,\n    pending: false\n  };\n\n  if (typeof customResponse === 'function') {\n    Object.assign(response, {\n      ...customResponse(\n        { ...response, responses: { ...response.responses } },\n        {\n          cancelledById,\n          cancelledByList,\n          cancelledDataById,\n          cancelledDataByList,\n          dataById,\n          dataByList,\n          errorByList,\n          errorById,\n          errorDataById,\n          errorDataByList,\n          fulfilledByList,\n          fulfilledById,\n          fulfilledDataById,\n          fulfilledDataByList,\n          idList,\n          isById,\n          pendingByList,\n          responsesByList,\n          responsesById,\n          updatedSelectorResponse\n        }\n      )\n    });\n\n    return response;\n  }\n\n  if (errorByList.length) {\n    response.message = new Error(errorByList[0]?.message || `useSelectorsResponse, ${JSON.stringify(errorByList[0])}`);\n    response.error = true;\n    response.data = (isById && errorDataById) || errorDataByList;\n    return response;\n  }\n\n  if (pendingByList.length) {\n    response.pending = true;\n    return response;\n  }\n\n  if (cancelledByList.length && cancelledByList.length === responsesByList.length) {\n    response.message = new Error('Cancelled useSelectorsResponse');\n    response.cancelled = true;\n    response.data = (isById && cancelledById) || cancelledByList;\n    return response;\n  }\n\n  if (\n    fulfilledByList.length &&\n    (fulfilledByList.length === responsesByList.length ||\n      cancelledByList.length + fulfilledByList.length === responsesByList.length)\n  ) {\n    response.fulfilled = true;\n    response.data = (isById && dataById) || dataByList;\n    return response;\n  }\n\n  return response;\n};\n\n/**\n * Return a combined selector response using a \"Promise.allSettled\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAllSettledResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    { cancelledByList, errorByList, fulfilledByList, pendingByList, dataById, dataByList, isById }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length + fulfilledByList?.length + cancelledByList?.length === dataByList?.length ||\n      errorByList?.length === dataByList?.length ||\n      fulfilledByList?.length === dataByList?.length ||\n      cancelledByList?.length === dataByList?.length\n    ) {\n      response.fulfilled = true;\n      response.data = (isById && dataById) || dataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.any\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsAnyResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (\n      errorByList?.length &&\n      (errorByList?.length === responsesByList?.length ||\n        cancelledByList?.length + errorByList?.length === responsesByList?.length)\n    ) {\n      response.message = helpers.aggregatedError(errorByList, 'useSelectorsAnyResponse');\n      response.error = true;\n      response.data = (isById && errorDataById) || errorDataByList;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      response.message = new Error('Cancelled useSelectorsAnyResponse');\n      response.cancelled = true;\n      response.data = (isById && cancelledDataById) || cancelledDataByList;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\n/**\n * Return a combined selector response using a \"Promise.race\" like response.\n *\n * @param {Array|Function} selectors\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: ({}|*[]), pending: boolean, fulfilled: boolean, responses: {errorList: *[], errorId: {},\n *     id: {}, list: *[]}, cancelled: boolean, error: boolean, message: null}}\n */\nconst useSelectorsRaceResponse = (\n  selectors,\n  { useSelectorsResponse: useAliasSelectorsResponse = useSelectorsResponse } = {}\n) => {\n  const customResponse = (\n    baseResponse,\n    {\n      cancelledByList,\n      cancelledDataById,\n      cancelledDataByList,\n      errorByList,\n      errorDataById,\n      errorDataByList,\n      fulfilledByList,\n      fulfilledDataById,\n      fulfilledDataByList,\n      pendingByList,\n      responsesByList,\n      isById\n    }\n  ) => {\n    const response = { ...baseResponse };\n\n    if (fulfilledByList?.length) {\n      let data = fulfilledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(fulfilledDataById);\n        data = (keyList?.[0] && fulfilledDataById[keyList[0]]) || undefined;\n      }\n\n      response.fulfilled = true;\n      response.data = data;\n      return response;\n    }\n\n    if (errorByList?.length) {\n      let data = errorDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(errorDataById);\n        data = (keyList?.[0] && errorDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error(\n        errorByList[0]?.message || `useSelectorsRaceResponse, ${JSON.stringify(errorByList[0])}`\n      );\n      response.error = true;\n      response.data = data;\n      return response;\n    }\n\n    if (pendingByList?.length) {\n      response.pending = true;\n      return response;\n    }\n\n    if (cancelledByList?.length && cancelledByList?.length === responsesByList?.length) {\n      let data = cancelledDataByList?.[0];\n\n      if (isById) {\n        const keyList = Object.keys(cancelledDataById);\n        data = (keyList?.[0] && cancelledDataById[keyList[0]]) || undefined;\n      }\n\n      response.message = new Error('Cancelled useSelectorsRaceResponse');\n      response.cancelled = true;\n      response.data = data;\n      return response;\n    }\n\n    return response;\n  };\n\n  return useAliasSelectorsResponse(selectors, { customResponse });\n};\n\nconst reactReduxHooks = {\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n\nexport {\n  reactReduxHooks as default,\n  reactReduxHooks,\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors,\n  useSelectorsResponse,\n  useSelectorsAllSettledResponse,\n  useSelectorsAnyResponse,\n  useSelectorsRaceResponse\n};\n","import { reactReduxHooks } from './useReactRedux';\nimport { rhsmTypes } from '../types/rhsmTypes';\nimport { rhsmServices } from '../../services/rhsm/rhsmServices';\n\n/**\n * Get an updated store RHSM response from message reporting.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst useGetMessageReports = (id = null, query = {}) =>\n  reactReduxHooks.useDispatch()({\n    type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM,\n    payload: rhsmServices.getGraphReports(id, query, { cancelId: 'messageReport' }),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActionsHooks = {\n  useGetMessageReports\n};\n\nexport { rhsmActionsHooks as default, rhsmActionsHooks, useGetMessageReports };\n","import { reactReduxHooks } from './useReactRedux';\nimport { rhsmActionsHooks } from './useRhsmActions';\nimport { rhsmSelectorsHooks } from './useRhsmSelectors';\n\nconst storeHooks = {\n  reactRedux: reactReduxHooks,\n  rhsmActions: rhsmActionsHooks,\n  rhsmSelectors: rhsmSelectorsHooks\n};\n\nexport { storeHooks as default, storeHooks, reactReduxHooks, rhsmActionsHooks, rhsmSelectorsHooks };\n","import { useSelector } from 'react-redux';\nimport { useRouteDetail } from '../../components/router/routerContext';\nimport { reduxSelectors } from '../selectors';\n\n/**\n * Get app messages selector results.\n *\n * @param {object} options\n * @param {Function} options.useRouteDetail\n * @param {Function} options.useSelector\n * @returns {object}\n */\nconst useAppMessages = ({\n  useRouteDetail: useAliasRouteDetail = useRouteDetail,\n  useSelector: useAliasSelector = useSelector\n} = {}) => {\n  const { pathParameter: productId, productParameter: viewId } = useAliasRouteDetail() || {};\n  const result = useAliasSelector(state => reduxSelectors.appMessages.appMessages(state, { productId, viewId }));\n  return {\n    ...result\n  };\n};\n\nconst rhsmSelectorsHooks = {\n  useAppMessages\n};\n\nexport { rhsmSelectorsHooks as default, rhsmSelectorsHooks, useAppMessages };\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platform/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Get an emulated and combined API response from the platforms \"getUser\" and \"getUserPermissions\" global methods.\n *\n * @param {string|Array} appName\n * @returns {Function}\n */\nconst authorizeUser = appName => dispatch =>\n  dispatch({\n    type: platformTypes.PLATFORM_USER_AUTH,\n    payload: Promise.all([platformServices.getUser(), platformServices.getUserPermissions(appName)])\n  });\n\n/**\n * Hide platform global filter.\n *\n * @param {boolean} isHidden\n * @returns {{Function}}\n */\nconst hideGlobalFilter = isHidden => ({\n  type: platformTypes.PLATFORM_GLOBAL_FILTER_HIDE,\n  payload: platformServices.hideGlobalFilter(isHidden)\n});\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for changing routes via the left-nav navigation.\n *\n * @param {string} id\n * @param {object} options\n * @param {string} options.appName\n * @param {boolean} options.secondaryNav\n * @returns {Function}\n */\nconst setAppNav =\n  (id, { appName, secondaryNav } = {}) =>\n  dispatch =>\n    dispatch({\n      type: platformTypes.PLATFORM_SET_NAV,\n      payload: platformServices.setAppNav(id, { appName, secondaryNav }),\n      meta: {\n        id,\n        appName,\n        secondaryNav\n      }\n    });\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  authorizeUser,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsm/rhsmServices';\n\n/**\n * Get a combined RHSM response from reporting and capacity.\n *\n * @param {string} id\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphReportsCapacity =\n  (id = null, query = {}, options = {}) =>\n  dispatch => {\n    const { cancelId = 'graphReportsCapacity' } = options;\n\n    return dispatch({\n      type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n      payload: Promise.all([\n        rhsmServices.getGraphReports(id, query, { cancelId }),\n        rhsmServices.getGraphCapacity(id, query, { cancelId })\n      ]),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n  };\n\n/**\n * Get a RHSM response from multiple Tally IDs and metrics.\n *\n * @param {object|Array} idMetric An object, or an Array of objects, in the form of { id: PRODUCT_ID, metric: METRIC_ID }\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphTally =\n  (idMetric = {}, query = {}, options = {}) =>\n  dispatch => {\n    const { cancelId = 'graphTally' } = options;\n    const multiMetric = (Array.isArray(idMetric) && idMetric) || [idMetric];\n    const multiDispatch = [];\n\n    multiMetric.forEach(({ id, metric }) => {\n      multiDispatch.push({\n        type: rhsmTypes.GET_GRAPH_TALLY_RHSM,\n        payload: rhsmServices.getGraphTally([id, metric], query, {\n          cancelId: `${cancelId}_${id}_${metric}`\n        }),\n        meta: {\n          id: `${id}_${metric}`,\n          idMetric: { id, metric },\n          query,\n          notifications: {}\n        }\n      });\n    });\n\n    return Promise.all(dispatch(multiDispatch));\n  };\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n      payload: rhsmServices.getHostsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n      payload: rhsmServices.getHostsInventoryGuests(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get an instances response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getInstancesInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM,\n      payload: rhsmServices.getInstancesInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a RHSM response from message reporting.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getMessageReports =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM,\n      payload: rhsmServices.getGraphReports(id, query, { cancelId: 'messageReport' }),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a subscriptions response from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getSubscriptionsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM,\n      payload: rhsmServices.getSubscriptionsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\nconst rhsmActions = {\n  getGraphReportsCapacity,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n\nexport {\n  rhsmActions as default,\n  rhsmActions,\n  getGraphReportsCapacity,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport { serviceCall } from '../config';\nimport { helpers } from '../../common';\n\n/**\n * ToDo: Review moving the getLocale function under platformServices.\n * Also review using window.navigator.language as the primary pull for language.\n */\n/**\n * Return a browser locale, or fallback towards the platform locale cookie\n *\n * @returns {Promise<*>}\n */\nconst getLocale = () => {\n  const defaultLang = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n  const parseLang = value => {\n    const key = (value && LocaleCode.getLanguageName(value)) || null;\n    return (key && { value, key }) || undefined;\n  };\n\n  return serviceCall({\n    url: async () => {\n      const cookieLang = await (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace(\n        '_',\n        '-'\n      );\n\n      return parseLang(cookieLang) || defaultLang;\n    }\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = (options = {}) => {\n  const { cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport { userServices as default, userServices, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/user/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_LOCALE,\n    payload: userServices.getLocale()\n  });\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn =\n  (query = {}) =>\n  dispatch =>\n    dispatch({\n      type: userTypes.UPDATE_USER_OPTIN,\n      payload: userServices.updateAccountOptIn(query),\n      meta: {\n        query,\n        notifications: {\n          rejected: {\n            variant: 'danger',\n            title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsErrorDescription'),\n            dismissable: true\n          },\n          fulfilled: {\n            variant: 'success',\n            title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsSuccessDescription'),\n            dismissable: true,\n            autoDismiss: false\n          }\n        }\n      }\n    });\n\nconst userActions = { getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport { userActions as default, userActions, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}, tally: {}}}\n */\nconst initialState = {\n  legend: {},\n  reportCapacity: {},\n  tally: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          [action.id]: action.value\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM },\n          { ref: 'tally', type: rhsmTypes.GET_GRAPH_TALLY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { inventoryTypes } from '../types';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{subscriptionsInventory: {}, instancesInventory: {}, tabs: {}, hostsInventory: {}, hostsGuests: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {},\n  instancesInventory: {},\n  subscriptionsInventory: {},\n  tabs: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system and subscriptions inventory to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inventoryTypes.SET_INVENTORY_TAB:\n      return reduxHelpers.setStateProp(\n        'tabs',\n        {\n          ...action.tabs\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n          { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM },\n          { ref: 'instancesInventory', type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM },\n          { ref: 'subscriptionsInventory', type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{report: {}}}\n */\nconst initialState = {\n  report: {}\n};\n\n/**\n * Generated daily observer/reducer for report to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst messagesReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [{ ref: 'report', type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM }],\n    state,\n    action\n  );\n\nmessagesReducer.initialState = initialState;\n\nexport { messagesReducer as default, initialState, messagesReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, platformTypes, userTypes } from '../types';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{auth: {}, optin: {}, locale: null, errors: {}}}\n */\nconst initialState = {\n  auth: {},\n  errors: {},\n  locale: {},\n  optin: {}\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(\n          reduxHelpers.getDataFromResults(action),\n          [rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA],\n          []\n        );\n\n        return reduxHelpers.setStateProp(\n          'errors',\n          {\n            error: true,\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            data: errorCodes.map(value => value[rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE]),\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'locale', type: userTypes.USER_LOCALE },\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'auth', type: platformTypes.PLATFORM_USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { routerHelpers } from '../../components/router';\nimport { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphTallyQuery: {}, inventoryHostsQuery: {}, inventorySubscriptionsQuery: {}, query: {},\n *     inventoryGuestsQuery: {}}}\n */\nconst initialState = {\n  query: {},\n  graphTallyQuery: {},\n  inventoryGuestsQuery: {},\n  inventoryHostsQuery: {},\n  inventorySubscriptionsQuery: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST:\n      const updateResetQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n\n          delete productQuery[RHSM_API_QUERY_TYPES.DIRECTION];\n          delete productQuery[RHSM_API_QUERY_TYPES.SORT];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateResetQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateResetQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updateClearQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateClearQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateClearQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST:\n      const updateClearGuestQuery = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryGuestsQuery: updateClearGuestQuery(state.inventoryGuestsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'graphTallyQuery',\n        {\n          [action.viewId]: {\n            ...state.graphTallyQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.START_DATE]: action[RHSM_API_QUERY_TYPES.START_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.END_DATE]: action[RHSM_API_QUERY_TYPES.END_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryGuestsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryGuestsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: action[RHSM_API_QUERY_TYPES.DISPLAY_NAME]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport messagesReducer from './messagesReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  messages: messagesReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  messagesReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{data: {object}}}\n */\nconst selectorCache = { data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  report: state.messages?.report?.[props.productId],\n  viewId: props.viewId,\n  productId: props.productId\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => ({\n  ...props.query,\n  ...state.view?.query?.[props.productId],\n  ...state.view?.query?.[props.viewId]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{appMessages: {cloudigradeMismatch: boolean}}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (data, query = {}) => {\n  const { viewId = null, productId = null, report = {} } = data || {};\n  const appMessages = {\n    cloudigradeMismatch: false\n  };\n\n  const cache = (viewId && productId && selectorCache.data[`${viewId}_${productId}`]) || undefined;\n\n  Object.assign(appMessages, { ...cache });\n\n  // Scan Tally response for Cloud Meter flags\n  if (report.fulfilled && appMessages.cloudigradeMismatch !== true) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA]: reportData = [] } = report.data || {};\n\n    const cloudigradeMismatch = reportData\n      .reverse()\n      .find(\n        ({ [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]: mismatch }) =>\n          mismatch === true\n      );\n\n    appMessages.cloudigradeMismatch = cloudigradeMismatch !== undefined;\n\n    selectorCache.data[`${viewId}_${productId}`] = {\n      ...appMessages\n    };\n  }\n\n  return { appMessages, query };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{appMessages: {cloudigradeMismatch: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst appMessagesSelectors = {\n  appMessages: selector,\n  makeAppMessages: makeSelector\n};\n\nexport { appMessagesSelectors as default, appMessagesSelectors, selector, makeSelector };\n","import { rhsmApiTypes } from './rhsmApiTypes';\n\nconst apiTypes = {\n  rhsmApi: rhsmApiTypes\n};\n\nexport { apiTypes as default, apiTypes, rhsmApiTypes };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\n\n/**\n * ToDo: This selector can be removed after guestsList.deprecated and inventoryList.deprecated components are removed\n */\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @returns {object}\n */\nconst statePropsFilter = state => ({\n  auth: {\n    ...state.user?.auth\n  },\n  errors: {\n    ...state.user?.errors\n  }\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{session: {entitled: boolean, permissions: object, authorized: object, admin: boolean,\n *     error: boolean}}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter], response => {\n  const { errors = {}, auth = {} } = response || {};\n  const updatedSession = {\n    ...errors,\n    admin: false,\n    entitled: false,\n    error: errors?.error || false,\n    authorized: {},\n    permissions: {}\n  };\n\n  if (!updatedSession?.error && auth?.fulfilled) {\n    const [user = {}, responsePermissions = {}] = auth?.data || [];\n    updatedSession.admin = user.isAdmin;\n    updatedSession.entitled = user.isEntitled;\n    updatedSession.permissions = responsePermissions.permissions;\n    updatedSession.authorized = responsePermissions.authorized;\n  }\n\n  return { session: updatedSession };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{session: {entitled: boolean, permissions: Array, authorized: boolean, admin: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst userSessionSelectors = {\n  userSession: selector,\n  makeUserSession: makeSelector\n};\n\nexport { userSessionSelectors as default, userSessionSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsGuests?.[props.id]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter], response => {\n  const { metaId, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    status: responseData.status\n  };\n\n  if (responseData.fulfilled) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [] } = responseData.data || {};\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n      data: listData,\n      customResponseValue: customInventoryValue\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    updatedResponseData.listData = updatedListData;\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst guestsListSelectors = {\n  guestsList: selector,\n  makeGuestsList: makeSelector\n};\n\nexport { guestsListSelectors as default, guestsListSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport LruCache from 'lru-cache';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  ttl: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  allowStale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.graph?.reportCapacity?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { graphTallyQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      graphTallyQuery: { ...state.view?.graphTallyQuery?.[props.viewId] }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    graphData: {},\n    meta: {},\n    query,\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, responseMetaQuery)) {\n    const [report, capacity] = responseData.data;\n    const reportData = report?.[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA] || [];\n    const reportMeta = report?.[rhsmApiTypes.RHSM_API_RESPONSE_META] || {};\n    const capacityData = capacity?.[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA] || [];\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Reporting graph entries\n    const customReportValue = (data, key, presetData) => ({\n      ...presetData,\n      hasData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_DATA],\n      hasCloudigradeData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_DATA],\n      hasCloudigradeMismatch: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]\n    });\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y,\n      hasInfinite: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE]\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment.utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE]).startOf('day').toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY =\n                (Number.isInteger(graphDataObj[graphDataObjKey]) &&\n                  Number.parseInt(graphDataObj[graphDataObjKey], 10)) ||\n                Number.parseFloat(Number.parseFloat(graphDataObj[graphDataObjKey]).toFixed(2));\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value }, customValue: customReportValue });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Generate normalized properties\n    const [updatedReportMeta] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n      data: reportMeta\n    });\n\n    const [meta = {}] = updatedReportMeta || [];\n\n    // Update response and cache\n    Object.assign(updatedResponseData.meta, meta);\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst graphCardSelectors = {\n  graphCard: selector,\n  makeGraphCard: makeSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport LruCache from 'lru-cache';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  ttl: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  allowStale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventoryHostsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventoryHostsQuery: {\n        ...state.view?.inventoryHostsQuery?.[props.productId],\n        ...state.view?.inventoryHostsQuery?.[props.viewId]\n      }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Note: We use an in-memory cache to provide the user a pleasant UX experience. To\n * aid in that UX we need \"pending\" to fire in scenarios that are not loaded in-memory. Because\n * we load the cache first there are scenarios where the previous XHR call is still in state\n * when a subsequent fulfilled XHR call comes through. Without the _isEqual(query, metaQuery) check\n * the overlap of the prior fulfilled call interferes with the pending of the subsequent call.\n */\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, metaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.CLOUD_PROVIDER:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.HARDWARE:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.MEASUREMENT:\n          return value?.toLowerCase() || null;\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst inventoryListSelectors = {\n  inventoryList: selector,\n  makeInventoryList: makeSelector\n};\n\nexport { inventoryListSelectors as default, inventoryListSelectors, selector, makeSelector };\n","import appMessagesSelectors from './appMessagesSelectors';\nimport guestsListSelectors from './guestsListSelectors';\nimport graphCardSelectors from './graphCardSelectors';\nimport inventoryListSelectors from './inventoryListSelectors';\nimport userSelectors from './userSelectors';\n\nconst reduxSelectors = {\n  appMessages: appMessagesSelectors,\n  guestsList: guestsListSelectors,\n  graphCard: graphCardSelectors,\n  inventoryList: inventoryListSelectors,\n  user: userSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { platformConstants as platformApiTypes } from '../../services/platform/platformConstants';\n\n/**\n * Modify actions' payload for privacy.\n *\n * @param {object} action\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeActionHeaders = ({ payload, ...action }) => {\n  if (payload) {\n    let updatedPayload = { ...payload, headers: {} };\n\n    if (Array.isArray(payload)) {\n      updatedPayload = payload.map(({ headers, ...obj }) => ({ ...obj, headers: {} }));\n    }\n\n    return { payload: updatedPayload, ...action };\n  }\n\n  return { ...action };\n};\n\n/**\n * Modify actions' payload data for privacy.\n *\n * @param {object} action\n * @param {string} action.type\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeData = ({ type, payload, ...action }) => {\n  const removeUserIdentity = obj => {\n    if (obj?.data?.user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]) {\n      return {\n        ...obj,\n        data: {\n          ...obj.data,\n          user: {\n            ...obj.data.user,\n            [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]: {\n              ...obj.data.user[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY],\n              [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]: {}\n            }\n          }\n        }\n      };\n    }\n\n    return undefined;\n  };\n\n  const updatedPayload = removeUserIdentity(payload) || payload;\n  const updatedAction = removeUserIdentity(action) || action;\n\n  if (updatedPayload) {\n    return { type, payload: updatedPayload, ...updatedAction };\n  }\n\n  return { type, ...updatedAction };\n};\n\n/**\n * Return existing sessionStorage log.\n *\n * @param {string} id\n * @param {number} limit\n * @returns {Array}\n */\nconst getActions = (id, limit) => {\n  const { sessionStorage } = window;\n  const item = sessionStorage.getItem(id);\n  let parsedItems = (item && (JSON.parse(item) || {})?.actions) || [];\n\n  if (parsedItems?.length && limit > 0) {\n    parsedItems = parsedItems.slice(limit * -1);\n  }\n\n  return parsedItems;\n};\n\n/**\n * Store actions against an id in sessionStorage.\n *\n * @param {object} action\n * @param {object} config\n * @param {number} config.id\n * @param {number} config.limit\n */\nconst recordAction = (action, { id, limit, ...config }) => {\n  const { navigator, sessionStorage } = window;\n  const items = getActions(id, limit) || [];\n  const priorItem = items[items.length - 1];\n  const updatedAction = sanitizeData(sanitizeActionHeaders(action));\n  const actionObj = {\n    diff: 0,\n    timestamp: Date.now(),\n    action: updatedAction\n  };\n\n  if (priorItem && priorItem.timestamp) {\n    actionObj.diff = actionObj.timestamp - priorItem.timestamp;\n  }\n\n  items.push(actionObj);\n  sessionStorage.setItem(\n    id,\n    JSON.stringify({\n      browser: navigator.userAgent,\n      timestamp: new Date().toLocaleString(),\n      ...config,\n      actions: items\n    })\n  );\n};\n\n/**\n * Expose settings and record middleware.\n *\n * @param {object} config\n * @returns {Function}\n */\nconst actionRecordMiddleware =\n  (config = {}) =>\n  () =>\n  next =>\n  action => {\n    recordAction(action, {\n      id: 'actionRecordMiddleware/v1',\n      limit: 100,\n      ...config\n    });\n\n    return next(action);\n  };\n\nexport { actionRecordMiddleware as default, actionRecordMiddleware };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { actionRecordMiddleware } from './actionRecordMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  actionRecordMiddleware({\n    id: process.env.REACT_APP_UI_LOGGER_ID,\n    app: { version: process.env.REACT_APP_UI_VERSION }\n  }),\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","const SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","const SET_INVENTORY_TAB = 'SET_INVENTORY_TAB';\n\n/**\n * Inventory action, reducer types.\n *\n * @type {{SET_INVENTORY_TAB: string}}\n */\nconst inventoryTypes = {\n  SET_INVENTORY_TAB\n};\n\nexport { inventoryTypes as default, inventoryTypes, SET_INVENTORY_TAB };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_GLOBAL_FILTER_HIDE = 'PLATFORM_GLOBAL_FILTER_HIDE';\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\nconst PLATFORM_USER_AUTH = 'PLATFORM_USER_AUTH';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_USER_AUTH: string, PLATFORM_GLOBAL_FILTER_HIDE: string,\n *     PLATFORM_INIT: string, PLATFORM_SET_NAV: string, PLATFORM_CLEAR_NOTIFICATIONS: string,\n *     PLATFORM_ADD_NOTIFICATION: string, PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV,\n  PLATFORM_USER_AUTH\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV,\n  PLATFORM_USER_AUTH\n};\n","import { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\nconst SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST = 'SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST';\nconst SET_QUERY_RESET_INVENTORY_LIST = 'SET_QUERY_RESET_INVENTORY_LIST';\n\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.END_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.END_DATE}`,\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.START_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.START_DATE}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\nconst SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_GUESTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\nconst SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DISPLAY_NAME}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\nconst SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES: object, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES: object, SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string,\n *     SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST: string, SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES: object,\n *     SET_QUERY_RESET_INVENTORY_LIST: string}}\n */\nconst queryTypes = {\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_LOCALE: string, GET_USER_OPTIN: string,\n *     UPDATE_USER_OPTIN: string, DELETE_USER_OPTIN: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { inventoryTypes } from './inventoryTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  inventory: inventoryTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  inventoryTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","const SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","const GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_GRAPH_TALLY_RHSM = 'GET_GRAPH_TALLY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\nconst GET_INSTANCES_INVENTORY_RHSM = 'GET_INSTANCES_INVENTORY_RHSM';\nconst GET_MESSAGE_REPORTS_RHSM = 'GET_MESSAGE_REPORTS_RHSM';\nconst GET_SUBSCRIPTIONS_INVENTORY_RHSM = 'GET_SUBSCRIPTIONS_INVENTORY_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_MESSAGE_REPORTS_RHSM: string, GET_HOSTS_INVENTORY_GUESTS_RHSM: string,\n *     GET_SUBSCRIPTIONS_INVENTORY_RHSM: string, GET_HOSTS_INVENTORY_RHSM: string, GET_INSTANCES_INVENTORY_RHSM: string,\n *     GET_GRAPH_TALLY_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n","import _camelCase from 'lodash/camelCase';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\n/**\n * A timeout cancel for function calls.\n *\n * @param {Function} func Callback to be executed or cancelled\n * @param {object} options\n * @param {number} options.timeout Function timeout in milliseconds\n * @param {string} options.errorMessage What the error message will read\n * @returns {Promise<*>}\n */\nconst timeoutFunctionCancel = (func, { timeout = 3000, errorMessage = 'function timeout' } = {}) => {\n  let clearTimer;\n\n  const timer = () =>\n    new Promise((_, reject) => {\n      clearTimer = window.setTimeout(reject, timeout, new Error(errorMessage));\n    });\n\n  const updatedFunc = async () => {\n    const response = await func();\n    window.clearTimeout(clearTimer);\n    return response;\n  };\n\n  const execFunction = () =>\n    Promise.race([timer(), updatedFunc()]).finally(() => {\n      window.clearTimeout(clearTimer);\n    });\n\n  return execFunction();\n};\n\n/**\n * Return objects with the keys camelCased. Normally applied to an array of objects.\n *\n * @param {object|Array|*} obj\n * @returns {object|Array|*}\n */\nconst camelCase = obj => {\n  if (Array.isArray(obj)) {\n    return obj.map(camelCase);\n  }\n\n  if (_isPlainObject(obj)) {\n    const updatedObj = {};\n\n    Object.entries(obj).forEach(([key, val]) => {\n      updatedObj[_camelCase(key)] = camelCase(val);\n    });\n\n    return updatedObj;\n  }\n\n  return obj;\n};\n\n/**\n * Apply data to a callback, pass original data on error.\n *\n * @param {Function} callback\n * @param {Array} data\n * @returns {{data: *, error}}\n */\nconst passDataToCallback = (callback, ...data) => {\n  let error;\n  let updatedData = data;\n\n  try {\n    updatedData = callback(...data);\n  } catch (e) {\n    error = e;\n  }\n\n  return { data: updatedData, error };\n};\n\n/**\n * A callback for schema validation, and after-the-fact casing adjustments.\n *\n * @param {object} options\n * @param {string} options.casing\n * @param {boolean} options.convert\n * @param {string} options.id\n * @param {object|Array} options.response\n * @param {*} options.schema\n * @returns {*|{}}\n */\nconst schemaResponse = ({ casing, convert = true, id = null, response, schema } = {}) => {\n  const { value, error = { details: [] } } = schema?.validate(response, { convert }) || {};\n\n  if (error.details.length && !helpers.TEST_MODE) {\n    console.error(\n      new Error(\n        `Passing original API response. Schema validation failed for ${id || '...'}: ${error.details\n          .map(({ context = {}, message, type }) => `${message}:${type}, ${JSON.stringify(context)}`)\n          .join(', ')}`\n      )\n    );\n  }\n\n  switch (casing) {\n    case 'camel':\n      return camelCase(value);\n    default:\n      return value;\n  }\n};\n\nconst serviceHelpers = {\n  camelCase,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n\nexport {\n  serviceHelpers as default,\n  serviceHelpers,\n  camelCase,\n  passDataToCallback,\n  schemaResponse,\n  timeoutFunctionCancel\n};\n","import axios, { CancelToken } from 'axios';\nimport LruCache from 'lru-cache';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { serviceHelpers } from './helpers';\n\n/**\n * Set Axios XHR default timeout.\n */\nconst globalXhrTimeout = Number.parseInt(process.env.REACT_APP_AJAX_TIMEOUT, 10) || 60000;\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {{}}\n */\nconst globalCancelTokens = {};\n\n/**\n * Cache Axios service call responses.\n *\n * @type {object}\n */\nconst globalResponseCache = new LruCache({\n  ttl: Number.parseInt(process.env.REACT_APP_AJAX_CACHE, 10) || 30000,\n  max: 100,\n  updateAgeOnGet: true\n});\n\n// ToDo: consider another way of hashing cacheIDs. base64 could get a little large depending on settings, i.e. md5\n/**\n * Set Axios configuration. This includes response schema validation and caching.\n * Call platform \"getUser\" auth method, and apply service config. Service configuration\n * includes the ability to cancel all and specific calls, cache and normalize a response\n * based on both a provided schema and a successful API response. The cache will refresh\n * its timeout on continuous calls. To reset it a user will either need to refresh the\n * page or wait the \"maxAge\".\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @param {object} options\n * @param {string} options.cancelledMessage\n * @param {object} options.responseCache\n * @param {number} options.xhrTimeout\n * @returns {Promise<*>}\n */\nconst axiosServiceCall = async (\n  config = {},\n  { cancelledMessage = 'cancelled request', responseCache = globalResponseCache, xhrTimeout = globalXhrTimeout } = {}\n) => {\n  const updatedConfig = {\n    timeout: xhrTimeout,\n    ...config,\n    cache: undefined,\n    cacheResponse: config.cache,\n    method: config.method || 'get'\n  };\n  const responseTransformers = [];\n  const axiosInstance = axios.create();\n\n  // don't cache responses if \"get\" isn't used\n  updatedConfig.cacheResponse = updatedConfig.cacheResponse === true && updatedConfig.method === 'get';\n\n  // account for alterations to transforms, and other config props\n  const cacheId =\n    (updatedConfig.cacheResponse === true &&\n      `${window.btoa(\n        JSON.stringify(updatedConfig, (key, value) => {\n          if (value !== updatedConfig && _isPlainObject(value)) {\n            return JSON.stringify(Object.entries(value).sort(([a], [b]) => a.localeCompare(b)) || []);\n          }\n          if (typeof value === 'function') {\n            return value.toString();\n          }\n          return value;\n        })\n      )}`) ||\n    null;\n\n  // simple check to place responsibility on consumer, primarily used for testing\n  if (updatedConfig.exposeCacheId === true) {\n    updatedConfig.cacheId = cacheId;\n  }\n\n  if (updatedConfig.cancel === true) {\n    const cancelTokensId = `${updatedConfig.cancelId || ''}-${updatedConfig.method}-${\n      (typeof updatedConfig.url === 'function' && updatedConfig.url.toString()) || updatedConfig.url\n    }`;\n\n    if (globalCancelTokens[cancelTokensId]) {\n      globalCancelTokens[cancelTokensId].cancel(cancelledMessage);\n    }\n\n    globalCancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = globalCancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  if (updatedConfig.cacheResponse === true) {\n    const cachedResponse = responseCache.get(cacheId);\n\n    if (cachedResponse) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          ...cachedResponse,\n          status: 304,\n          statusText: 'Not Modified',\n          config: adapterConfig\n        });\n\n      return axiosInstance(updatedConfig);\n    }\n  }\n\n  if (updatedConfig.schema) {\n    responseTransformers.push(updatedConfig.schema);\n  }\n\n  if (updatedConfig.transform) {\n    responseTransformers.push(updatedConfig.transform);\n  }\n\n  responseTransformers.forEach(([successTransform, errorTransform]) => {\n    const transformers = [undefined, response => Promise.reject(response)];\n\n    if (successTransform) {\n      transformers[0] = response => {\n        const updatedResponse = { ...response };\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          successTransform,\n          updatedResponse.data,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.data = data;\n        }\n\n        return updatedResponse;\n      };\n    }\n\n    if (errorTransform) {\n      transformers[1] = response => {\n        const updatedResponse = { ...(response.response || response) };\n\n        if (updatedResponse?.message === cancelledMessage) {\n          return Promise.reject(updatedResponse);\n        }\n\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          errorTransform,\n          updatedResponse?.data || updatedResponse?.message,\n          updatedResponse.config\n        );\n\n        if (!normalizeError) {\n          updatedResponse.response = { ...updatedResponse, data };\n        }\n\n        return Promise.reject(updatedResponse);\n      };\n    }\n\n    axiosInstance.interceptors.response.use(...transformers);\n  });\n\n  if (updatedConfig.cacheResponse === true) {\n    axiosInstance.interceptors.response.use(\n      response => {\n        const updatedResponse = { ...response };\n        responseCache.set(cacheId, updatedResponse);\n        return updatedResponse;\n      },\n      response => Promise.reject(response)\n    );\n  }\n\n  if (typeof updatedConfig.url === 'function') {\n    const emulateCallback = updatedConfig.url;\n    updatedConfig.url = '/emulated';\n\n    let message = 'success, emulated';\n    let emulatedResponse;\n    let isSuccess = true;\n\n    try {\n      emulatedResponse = await serviceHelpers.timeoutFunctionCancel(emulateCallback, { timeout: xhrTimeout });\n    } catch (e) {\n      isSuccess = false;\n      message = e.message || e;\n    }\n\n    if (isSuccess) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          data: emulatedResponse,\n          status: 200,\n          statusText: message,\n          config: adapterConfig\n        });\n    } else {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.reject({ // eslint-disable-line\n          ...new Error(message),\n          message,\n          status: 418,\n          config: adapterConfig\n        });\n    }\n  }\n\n  return axiosInstance(updatedConfig);\n};\n\nconst serviceConfig = { axiosServiceCall, globalXhrTimeout, globalCancelTokens, globalResponseCache };\n\nexport {\n  serviceConfig as default,\n  serviceConfig,\n  axiosServiceCall,\n  globalXhrTimeout,\n  globalCancelTokens,\n  globalResponseCache\n};\n","import { axiosServiceCall } from './common/serviceConfig';\nimport { platformServices } from './platform/platformServices';\n\n/**\n * Apply a global custom service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  ...passedConfig\n});\n\n/**\n * Use a global Axios configuration.\n *\n * @param {object} config\n * @param {object} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {object} config.params\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @param {string|Function} config.url\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n  return axiosServiceCall(serviceConfig(config));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string, RESOURCE_DEFS: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\n// ToDo: clean up this app name piece, these facets come through the helpers and src/config/rbac.json\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\nconst platformConstants = {\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformConstants as default,\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\n\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * User response item.\n *\n * @type {*} Joi schema\n */\nconst userResponseSchema = Joi.object()\n  .keys({\n    identity: Joi.object({\n      user: Joi.object({\n        is_org_admin: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({}),\n    entitlements: Joi.object({\n      [process.env.REACT_APP_UI_NAME]: Joi.object({\n        is_entitled: Joi.boolean().default(false)\n      })\n        .unknown(true)\n        .default({})\n    })\n      .unknown(true)\n      .default({})\n  })\n  .unknown(true)\n  .default({});\n\n/**\n * Permissions response item.\n *\n * @type {*} Joi schema\n */\nconst permissionsItem = Joi.object({\n  permission: Joi.string().optional().allow(null),\n  resourceDefinitions: Joi.array().optional().default([])\n})\n  .unknown(true)\n  .default();\n\n/**\n * Authorize response.\n *\n * @type {*} Joi schema\n */\nconst permissionsResponseSchema = Joi.array().items(permissionsItem).default([]);\n\nconst platformSchemas = {\n  user: response => schemaResponse({ response, schema: userResponseSchema, id: 'User auth' }),\n  permissions: response => schemaResponse({ response, schema: permissionsResponseSchema, id: 'Permissions auth' })\n};\n\nexport { platformSchemas as default, platformSchemas };\n","import { rbacConfig } from '../../config';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES\n} from './platformConstants';\nimport { helpers } from '../../common';\n\n/**\n * Parse platform getUser response.\n *\n * @param {object} response\n * @returns {object}\n */\nconst user = response => {\n  const updatedResponse = {};\n  const {\n    [platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY]: identity = {},\n    [platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]: entitlements = {}\n  } = response || {};\n\n  updatedResponse.isAdmin =\n    identity?.[platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]?.[\n      platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n    ] || false;\n\n  updatedResponse.isEntitled =\n    entitlements?.[helpers.UI_NAME]?.[platformConstants.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED] ||\n    false;\n\n  return updatedResponse;\n};\n\n/**\n * Parse platform getUserPermissions response.\n *\n * @param {object} response\n * @param {object} options\n * @param {object} options.config Pass in a configuration object, RBAC\n * @returns {object}\n */\nconst userPermissions = (response, { config = rbacConfig } = {}) => {\n  const updatedResponse = {\n    permissions: {},\n    authorized: {}\n  };\n\n  response?.forEach(\n    ({\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n      [platformConstants.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n    }) => {\n      const [app = '', resource, operation] = permission?.split(':') || [];\n\n      if (!updatedResponse.permissions[app]) {\n        updatedResponse.permissions[app] = {\n          all: false,\n          resources: {}\n        };\n      }\n\n      if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n        updatedResponse.permissions[app].all = true;\n      }\n\n      if (!updatedResponse.permissions[app].resources[resource]) {\n        updatedResponse.permissions[app].resources[resource] = {};\n      }\n\n      updatedResponse.permissions[app].resources[resource][operation] = definitions;\n    }\n  );\n\n  // Alias specific app permissions checks\n  Object.entries(config).forEach(([key, { permissions: resourcePermissions }]) => {\n    updatedResponse.authorized[key] = updatedResponse.permissions[key]?.all || false;\n\n    resourcePermissions.forEach(({ resource: res, operation: op }) => {\n      if (updatedResponse.permissions[key]?.resources?.[res]?.[op]) {\n        updatedResponse.authorized[key] = true;\n      }\n    });\n  });\n\n  return updatedResponse;\n};\n\nconst platformTransformers = {\n  user,\n  permissions: userPermissions\n};\n\nexport { platformTransformers as default, platformTransformers, user, userPermissions };\n","import _set from 'lodash/set';\nimport { rbacConfig } from '../../config';\nimport { axiosServiceCall } from '../common/serviceConfig';\nimport { platformSchemas } from './platformSchemas';\nimport { platformTransformers } from './platformTransformers';\nimport { helpers } from '../../common';\nimport {\n  platformConstants,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES\n} from './platformConstants';\n\n/**\n * Basic user authentication.\n *\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUser = async (options = {}) => {\n  const { schema = [platformSchemas.user], transform = [platformTransformers.user] } = options;\n  const { insights } = window;\n  return axiosServiceCall({\n    url: async () => {\n      try {\n        return (\n          (helpers.DEV_MODE &&\n            _set(\n              {},\n              [\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n                platformConstants.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n              ],\n              process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n            )) ||\n          (await insights.chrome.auth.getUser())\n        );\n      } catch (e) {\n        throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n      }\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @param {object} options\n * @returns {Promise<*>}\n */\nconst getUserPermissions = (appName = Object.keys(rbacConfig), options = {}) => {\n  const { schema = [platformSchemas.permissions], transform = [platformTransformers.permissions] } = options;\n  const updatedAppName = (Array.isArray(appName) && appName) || [appName];\n  const { insights } = window;\n  const platformMethod = name =>\n    (helpers.DEV_MODE && [\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_ONE\n      },\n      {\n        [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_TWO\n      }\n    ]) ||\n    insights.chrome.getUserPermissions(name);\n\n  return axiosServiceCall({\n    url: async () => {\n      let userPermissions;\n\n      try {\n        const allPermissions = await Promise.all(updatedAppName.map(name => platformMethod(name)));\n\n        if (Array.isArray(allPermissions)) {\n          userPermissions = [...allPermissions.flat()];\n        }\n      } catch (e) {\n        throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n      }\n\n      return userPermissions;\n    },\n    schema,\n    transform\n  });\n};\n\n/**\n * Disables the Platform's global filter display.\n *\n * @param {boolean} isHidden\n * @returns {Promise<*>}\n */\nconst hideGlobalFilter = async (isHidden = true) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.hideGlobalFilter(isHidden);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<*>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<*>}\n */\nconst setAppName = (name = null) => {\n  const { insights } = window;\n  return axiosServiceCall({\n    url: async () => {\n      try {\n        await insights.chrome.identifyApp(name);\n      } catch (e) {\n        throw new Error(`{ identifyApp } = insights.chrome, ${e.message}`);\n      }\n    }\n  });\n};\n\n/**\n * Set app routes via the platform left-nav navigation.\n *\n * @param {string} id The navigation ID associated with internal route config, and external platform nav config\n * @param {object} options\n * @param {string} options.appName\n * @param {boolean} options.secondaryNav\n * @returns {Promise<*>}\n */\nconst setAppNav = async (id, { appName = helpers.UI_NAME, secondaryNav = true } = {}) => {\n  const { insights } = window;\n  try {\n    return await insights.chrome.appNavClick({ id, secondaryNav, parentId: appName });\n  } catch (e) {\n    throw new Error(`{ appNavClick } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = {\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n","/**\n * ToDo: migrate to using rhsmConstants only!\n * Exporting rhsmConstants through rhsmApiTypes is currently considered a stop-gap during migration to the\n * schema validator.\n */\n/**\n * RHSM path IDs for products.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string,\n *     RHOSAK: string, RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string,\n *     OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string}}\n */\nconst RHSM_API_PATH_PRODUCT_TYPES = {\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  RHOSAK: 'rhosak',\n  OPENSHIFT: 'OpenShift Container Platform',\n  OPENSHIFT_METRICS: 'OpenShift-metrics',\n  OPENSHIFT_DEDICATED_METRICS: 'OpenShift-dedicated-metrics',\n  SATELLITE: 'Satellite',\n  SATELLITE_CAPSULE: 'Satellite Capsule',\n  SATELLITE_SERVER: 'Satellite Server'\n};\n\n/**\n * RHSM path IDs for metrics.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     TRANSFER_GIBIBYTES: string, CORE_SECONDS: string}}\n */\nconst RHSM_API_PATH_METRIC_TYPES = {\n  CORES: 'Cores',\n  SOCKETS: 'Sockets',\n  CORE_SECONDS: 'Core-seconds',\n  INSTANCE_HOURS: 'Instance-hours',\n  STORAGE_GIBIBYTES: 'Storage-gibibytes',\n  TRANSFER_GIBIBYTES: 'Transfer-gibibytes'\n};\n\n/**\n * RHSM response data type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_DATA = 'data';\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response general meta types.\n *\n * @type {{PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  PRODUCT: 'product'\n};\n\n/**\n * RHSM response errors type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERRORS = 'errors';\n\n/**\n * RHSM response errors types.\n *\n * @type {{CODE: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_TYPES = {\n  CODE: 'code'\n};\n\n/**\n * RHSM response error codes.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERRORS_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response Instance DATA types.\n *\n * @type {{MEASUREMENTS: string, SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string, NUMBER_OF_GUESTS: string,\n *     DISPLAY_NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_DATA_TYPES = {\n  DISPLAY_NAME: 'display_name',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENTS: 'measurements',\n  NUMBER_OF_GUESTS: 'number_of_guests',\n  SUBSCRIPTION_MANAGER_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response Instances META types.\n *\n * @type {{MEASUREMENTS: string, PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  MEASUREMENTS: 'measurements'\n};\n\n/**\n * RHSM response Tally DATA types.\n *\n * @type {{DATE: string, HAS_DATA: string, VALUE: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_DATA_TYPES = {\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM response Tally META types.\n *\n * @type {{TOTAL_MONTHLY: string, DATE: string, PRODUCT: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string, VALUE: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data',\n  METRIC_ID: 'metric_id',\n  TOTAL_MONTHLY: 'total_monthly'\n};\n\n/**\n * RHSM response, query parameters for GRANULARITY.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_RESPONSE_GRANULARITY_TYPES = {\n  DAILY: 'Daily',\n  WEEKLY: 'Weekly',\n  MONTHLY: 'Monthly',\n  QUARTERLY: 'Quarterly'\n};\n\n/**\n * RHSM response, query parameters for SLA.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_RESPONSE_SLA_TYPES = {\n  PREMIUM: 'Premium',\n  STANDARD: 'Standard',\n  SELF: 'Self-Support',\n  NONE: ''\n};\n\n/**\n * RHSM response, query parameters for UOM.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_RESPONSE_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM response, query parameters for USAGE.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_RESPONSE_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\nconst RHSM_API_QUERY_GRANULARITY_TYPES = RHSM_API_RESPONSE_GRANULARITY_TYPES;\n\n/**\n * ToDo: Clean up sort params once hosts is fully deprecated\n * These sort params are focused on the instances api NOT hosts. Since there\n * are minor differences, hosts sort params are maintained in /types/rhsmApiTypes.js as\n * we migrate towards hosts deprecation. Subscriptions sorts\n */\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, MEASUREMENT: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_TYPES = {\n  ...RHSM_API_PATH_METRIC_TYPES,\n  LAST_SEEN: 'last_seen',\n  NAME: 'display_name'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string,\n *     TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES = {\n  NEXT_EVENT_DATE: 'next_event_date',\n  NEXT_EVENT_TYPE: 'next_event_type',\n  PRODUCT_NAME: 'product_name',\n  QUANTITY: 'quantity',\n  SKU: 'sku',\n  SERVICE_LEVEL: 'service_level',\n  TOTAL_CAPACITY: 'total_capacity',\n  USAGE: 'usage'\n};\n\nconst RHSM_API_QUERY_SLA_TYPES = RHSM_API_RESPONSE_SLA_TYPES;\n\nconst RHSM_API_QUERY_UOM_TYPES = RHSM_API_RESPONSE_UOM_TYPES;\n\nconst RHSM_API_QUERY_USAGE_TYPES = RHSM_API_RESPONSE_USAGE_TYPES;\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, END_DATE: string, OFFSET: string,\n *     SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  DIRECTION: 'dir',\n  DISPLAY_NAME: 'display_name_contains',\n  END_DATE: 'ending',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  START_DATE: 'beginning',\n  UOM: 'uom',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM query parameter options for TALLY, CAPACITY endpoints.\n *\n * @type {{GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string}}\n */\nconst RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES = {\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage'\n};\n\n/**\n * Aggregate all query set types.\n *\n * @type {{UOM: string, GRANULARITY: string, USAGE: string, DIRECTION: string, SORT: string, END_DATE: string,\n *     OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string}}\n */\nconst RHSM_API_QUERY_SET_TYPES = {\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES\n};\n\n/**\n * RHSM constants.\n *\n * @type {{RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string,\n *     START_DATE: string}, RHSM_API_RESPONSE_DATA: string, RHSM_API_PATH_METRIC_TYPES: {CORES: string, STORAGE_GIBIBYTES: string,\n *     SOCKETS: string, INSTANCE_HOURS: string, TRANSFER_GIBIBYTES: string, CORE_SECONDS: string},\n *     RHSM_API_RESPONSE_TALLY_DATA_TYPES: {DATE: string, HAS_DATA: string, VALUE: string},\n *     RHSM_API_RESPONSE_INSTANCES_META_TYPES: {MEASUREMENTS: string, PRODUCT: string, COUNT: string},\n *     RHSM_API_RESPONSE_INSTANCES_DATA_TYPES: {MEASUREMENTS: string, SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string,\n *     NUMBER_OF_GUESTS: string, DISPLAY_NAME: string, LAST_SEEN: string}, RHSM_API_RESPONSE_SLA_TYPES: {PREMIUM: string,\n *     SELF: string, NONE: string, STANDARD: string}, RHSM_API_RESPONSE_META_TYPES: {PRODUCT: string, COUNT: string},\n *     RHSM_API_RESPONSE_ERRORS_CODE_TYPES: {GENERIC: string, OPTIN: string}, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string,\n *     QUARTERLY: string, DAILY: string, MONTHLY: string}, RHSM_API_RESPONSE_UOM_TYPES: {CORES: string, SOCKETS: string},\n *     RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES: {ASCENDING: string, DESCENDING: string},\n *     RHSM_API_QUERY_INVENTORY_SORT_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string,\n *     MEASUREMENT: string, LAST_SEEN: string, NAME: string}, RHSM_API_PATH_PRODUCT_TYPES: {RHEL_ARM: string,\n *     OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string, RHOSAK: string, RHEL_COMPUTE_NODE: string,\n *     RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string,\n *     RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string,\n *     RHEL_IBM_POWER: string}, RHSM_API_RESPONSE_ERRORS_TYPES: {CODE: string},\n *     RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_SET_INVENTORY_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string, END_DATE: string,\n *     OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string},\n *     RHSM_API_RESPONSE_ERRORS: string, RHSM_API_RESPONSE_TALLY_META_TYPES: {TOTAL_MONTHLY: string, DATE: string,\n *     PRODUCT: string, HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string,\n *     COUNT: string, VALUE: string}, RHSM_API_QUERY_UOM_TYPES: {CORES: string, SOCKETS: string},\n *     RHSM_API_RESPONSE_META: string, RHSM_API_RESPONSE_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string,\n *     MONTHLY: string}, RHSM_API_QUERY_SET_TYPES: {UOM: string, GRANULARITY: string, USAGE: string, DIRECTION: string,\n *     SORT: string, END_DATE: string, OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string},\n *     RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES: {QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string,\n *     NEXT_EVENT_DATE: string, TOTAL_CAPACITY: string, PRODUCT_NAME: string, SKU: string, SERVICE_LEVEL: string},\n *     RHSM_API_RESPONSE_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}}\n */\nconst rhsmConstants = {\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n};\n\nexport {\n  rhsmConstants as default,\n  rhsmConstants,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_ERRORS,\n  RHSM_API_RESPONSE_ERRORS_TYPES,\n  RHSM_API_RESPONSE_ERRORS_CODE_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_META_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n};\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\nimport { rhsmConstants } from './rhsmConstants';\n\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * Error response item.\n *\n * @type {*} Joi schema\n */\nconst errorItem = Joi.object({\n  code: Joi.string().default(null),\n  detail: Joi.string().default(null)\n}).unknown(true);\n\n/**\n * Error response.\n *\n * @type {*} Joi schema\n */\nconst errorResponseSchema = Joi.object()\n  .keys({\n    errors: Joi.array().items(errorItem).default([])\n  })\n  .unknown(true);\n\nconst linksSchema = Joi.object();\n\n/**\n * RHSM base response meta field.\n *\n * @type {*} Joi schema\n */\nconst metaResponseSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0),\n    product: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_PRODUCT_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Guests response meta field.\n *\n * @type {*} Joi schema\n */\nconst guestsMetaSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0)\n  })\n  .unknown(true);\n\n/**\n * Instances response item.\n *\n * @type {*} Joi schema\n */\nconst guestsItem = Joi.object({\n  inventory_id: Joi.string().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Instances response.\n *\n * @type {*} Joi schema\n */\nconst guestsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(guestsItem).default([]),\n  links: linksSchema.default({}),\n  meta: guestsMetaSchema.default({})\n});\n\n/**\n * Instances response meta field.\n *\n * @type {*} Joi schema\n */\nconst instancesMetaSchema = metaResponseSchema\n  .keys({\n    measurements: Joi.array()\n      .items(Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)))\n      .default([])\n  })\n  .unknown(true);\n\n/**\n * Instances response item.\n *\n * @type {*} Joi schema\n */\nconst instancesItem = Joi.object({\n  inventory_id: Joi.string().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  measurements: Joi.array().default([]),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Instances response.\n *\n * @type {*} Joi schema\n */\nconst instancesResponseSchema = Joi.object().keys({\n  data: Joi.array().items(instancesItem).default([]),\n  links: linksSchema.default({}),\n  meta: instancesMetaSchema.default({})\n});\n\n/**\n * Subscriptions response meta field.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsMetaSchema = metaResponseSchema;\n\n/**\n * Subscriptions response item.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsItem = Joi.object({\n  has_infinite_quantity: Joi.boolean().optional().allow(null),\n  next_event_date: Joi.date().utc().allow(null),\n  product_name: Joi.string().optional().allow(null),\n  quantity: Joi.number().allow(null).default(0),\n  service_level: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_SLA_TYPES)),\n  total_capacity: Joi.number().allow(null).default(0),\n  uom: Joi.string()\n    .lowercase()\n    .valid(...Object.values(rhsmConstants.RHSM_API_RESPONSE_UOM_TYPES))\n})\n  .unknown(true)\n  .default();\n\n/**\n * Subscriptions response.\n *\n * @type {*} Joi schema\n */\nconst subscriptionsResponseSchema = Joi.object().keys({\n  data: Joi.array().items(subscriptionsItem).default([]),\n  links: linksSchema.default({}),\n  meta: subscriptionsMetaSchema.default({})\n});\n\n/**\n * Tally response item.\n *\n * @type {*} Joi schema\n */\nconst tallyItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Tally response meta field.\n *\n * @type {*} Joi schema\n */\nconst tallyMetaSchema = metaResponseSchema\n  .keys({\n    has_cloudigrade_data: Joi.boolean().optional().allow(null),\n    has_cloudigrade_mismatch: Joi.boolean().optional().allow(null),\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)),\n    total_monthly: tallyItem\n  })\n  .unknown(true);\n\n/**\n * Tally response.\n *\n * @type {*} Joi schema\n */\nconst tallyResponseSchema = Joi.object().keys({\n  data: Joi.array().items(tallyItem).default([]),\n  links: linksSchema.default({}),\n  meta: tallyMetaSchema.default({})\n});\n\nconst rhsmSchemas = {\n  errors: response => schemaResponse({ response, schema: errorResponseSchema, id: 'RHSM errors' }),\n  guests: response => schemaResponse({ response, casing: 'camel', schema: guestsResponseSchema, id: 'RHSM guests' }),\n  instances: response => schemaResponse({ response, schema: instancesResponseSchema, id: 'RHSM instances' }),\n  subscriptions: response =>\n    schemaResponse({ response, casing: 'camel', schema: subscriptionsResponseSchema, id: 'RHSM subscriptions' }),\n  tally: response => schemaResponse({ response, schema: tallyResponseSchema, id: 'RHSM tally' })\n};\n\nexport { rhsmSchemas as default, rhsmSchemas };\n","import moment from 'moment';\nimport {\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES as INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_DATA_TYPES as TALLY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_META_TYPES as TALLY_META_TYPES,\n  rhsmConstants\n} from './rhsmConstants';\nimport { dateHelpers } from '../../common';\n\n/**\n * FixMe: If RHSM Instances is deprecating Hosts we're missing a property, number_of_guests\n */\n/**\n * Parse RHSM instances response for caching.\n *\n * @param {object} response\n * @returns {object}\n */\nconst rhsmInstances = response => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const metaMeasurements = meta[INSTANCES_META_TYPES.MEASUREMENTS];\n\n  updatedResponse.data = data.map(\n    ({\n      [INSTANCES_DATA_TYPES.MEASUREMENTS]: measurements,\n      [INSTANCES_DATA_TYPES.SUBSCRIPTION_MANAGER_ID]: subscriptionManagerId,\n      [INSTANCES_DATA_TYPES.NUMBER_OF_GUESTS]: numberOfGuests,\n      ...dataResponse\n    }) => {\n      const updatedData = {\n        numberOfGuests,\n        subscriptionManagerId,\n        ...dataResponse\n      };\n\n      metaMeasurements?.forEach((measurement, index) => {\n        updatedData[measurement] = measurements[index];\n      });\n\n      return updatedData;\n    }\n  );\n\n  updatedResponse.meta = {\n    count: meta[INSTANCES_META_TYPES.COUNT],\n    productId: meta[INSTANCES_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * Parse RHSM tally response for caching.\n *\n * @param {object} response\n * @returns {object}\n */\nconst rhsmTally = response => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const currentDay = moment.utc(dateHelpers.getCurrentDate()).format('MM-D-YYYY');\n\n  updatedResponse.data = data.map(\n    (\n      { [TALLY_DATA_TYPES.DATE]: date, [TALLY_DATA_TYPES.VALUE]: value, [TALLY_DATA_TYPES.HAS_DATA]: hasData },\n      index\n    ) => ({\n      x: index,\n      y: value,\n      date,\n      hasData,\n      isCurrentDate: moment.utc(date).format('MM-D-YYYY') === currentDay\n    })\n  );\n\n  updatedResponse.meta = {\n    count: meta[TALLY_META_TYPES.COUNT],\n    metricId: meta[TALLY_META_TYPES.METRIC_ID],\n    productId: meta[TALLY_META_TYPES.PRODUCT],\n    totalMonthlyDate: meta[TALLY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_META_TYPES.DATE],\n    totalMonthlyHasData: meta[TALLY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_META_TYPES.HAS_DATA],\n    totalMonthlyValue: meta[TALLY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_META_TYPES.VALUE]\n  };\n\n  return updatedResponse;\n};\n\nconst rhsmTransformers = {\n  instances: rhsmInstances,\n  tally: rhsmTally\n};\n\nexport { rhsmTransformers as default, rhsmTransformers, rhsmInstances, rhsmTally };\n","import { serviceCall } from '../config';\nimport { rhsmSchemas } from './rhsmSchemas';\nimport { helpers } from '../../common';\nimport { rhsmTransformers } from './rhsmTransformers';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getApiVersion = (options = {}) => {\n  const { cache = false, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {string} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {string} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {object} links\n * @apiSuccess {object} meta\n * @apiSuccess {string} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {string} meta.product\n * - RHEL\n * @apiSuccess {number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 12\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 4\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000.057890,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"has_cloudigrade_data\": true,\n *           \"has_cloudigrade_mismatch\": true,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\",\n *         \"total_core_hours\": 30500.04,\n *         \"total_instance_hours\": 35\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.20,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.15,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.11,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.32,\n *           \"instance_hours\": 23\n *         },\n *         {\n *           \"date\": \"2020-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.42,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 999.06,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\",\n *         \"total_core_hours\": 200.03,\n *         \"total_instance_hours\": 26\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 400,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\",\n *         \"total_core_hours\": 2050.04\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/:metric_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Cores\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Transfer-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Transfer-gibibytes\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 1024,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibytes\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Instance-hours Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Instance-hours\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2000,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/* Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of IDs\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getGraphTally = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.tally, rhsmSchemas.errors],\n    transform = [rhsmTransformers.tally]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_TALLY}`;\n  updatedId.forEach((value, index) => {\n    url = url.replace(`{${index}}`, value);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 500\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-123456789012\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.05,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 70,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6N\",\n *           \"cloud_provider\": \"AZURE\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.00,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"CLOUD\",\n *           \"measurement_type\": \"CLOUD\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6M\",\n *           \"cores\": 4,\n *           \"core_hours\": 1000.20,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 10,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"display_name\": \"dolor.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6L\",\n *           \"cores\": 4,\n *           \"core_hours\": 1001.60,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 1,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"display_name\": \"lorem.test.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YX\",\n *           \"cores\": 4,\n *           \"core_hours\": 999.60,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"display_name\": \"lorem.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YZ\",\n *           \"cores\": 0,\n *           \"core_hours\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"display_name\": \"lorem.another.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YA\",\n *           \"cores\": 0,\n *           \"core_hours\": 0.01,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-21T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YB\",\n *           \"cores\": 0,\n *           \"core_hours\": 999.61,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-22T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YC\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-23T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YD\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-24T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YEE\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-26T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YF\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-29T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 11\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = false,\n    cancelId,\n    schema = [rhsmSchemas.guests, rhsmSchemas.errors],\n    transform = []\n  } = options;\n\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', id),\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 750\n * @api {get} /api/rhsm-subscriptions/v1/instances/products/:product_id Get RHSM instances table/inventory data\n * @apiDescription Retrieve instances table/inventory data.\n *\n * Reference [RHSM for instances table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"number_of_guests\": 70,\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"display_name\": \"rhv.example.com\",\n *           \"measurements\": [\n *              42,\n *              0.000003563,\n *              1\n *           ],\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"inventory_id\": \"XXXXXX-b344-4778-831c-XXXXXXXX\",\n *           \"subscription_manager_id\": \"XXXXXX-5b00-42fa-XXXX-75801d45cc6d\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"measurements\": [\n *              20,\n *              null,\n *              1000\n *           ],\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"inventory_id\": \"BBBBB-b344-4778-831c-BBBBBBB\",\n *           \"subscription_manager_id\": \"BBBBB-5b00-42fa-BBBBB-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              4000,\n *              10000.0000345678,\n *              3000\n *           ],\n *           \"last_seen\": \"2020-04-03T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3,\n *         \"measurements\": [\n *           \"Instance-hours\",\n *           \"Storage-gibibytes\",\n *           \"Transfer-gibibytes\"\n *         ],\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"Premium\",\n *         \"usage\": \"Production\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API instances data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getInstancesInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.instances, rhsmSchemas.errors],\n    transform = [rhsmTransformers.instances]\n  } = options;\n\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_INSTANCES}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 0\n * @api {get} /api/rhsm-subscriptions/v1/subscriptions/products/:product_id Get RHSM subscriptions table/inventory data\n * @apiDescription Retrieve subscriptions table/inventory data.\n *\n * Reference [RHSM for subscriptions table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"sku\": \"RH00011\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" },\n *              { \"id\": \"ipsum\", \"number\": \"1234567890\" },\n *              { \"id\": \"lorem\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 1,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"sku\": \"RH00010\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server\",\n *           \"service_level\": \"Self-Support\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [],\n *           \"next_event_date\": \"2020-04-02T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 15,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\",\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"sku\": \"RH00009\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription End\",\n *           \"quantity\": 3000,\n *           \"physical_capacity\": 2,\n *           \"virtual_capacity\": 2,\n *           \"total_capacity\": 4,\n *           \"uom\": \"Cores\",\n *           \"has_infinite_quantity\": false\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API subscriptions data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cache\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getSubscriptionsInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.subscriptions, rhsmSchemas.errors],\n    transform = []\n  } = options;\n\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_SUBSCRIPTIONS}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\nconst rhsmServices = {\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n","import { rhsmConstants } from '../services/rhsm/rhsmConstants';\n\n/**\n * ToDo: Clean up params, see userReducer.\n */\n/**\n * RHSM response Error DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA = rhsmConstants.RHSM_API_RESPONSE_ERRORS;\n\n/**\n * ToDo: Clean up params, see userReducer.\n */\n/**\n * RHSM response Error DATA types.\n * Schema/map of expected Error data response properties.\n *\n * @type {{CODE: string, DETAIL: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_TYPES = {\n  ...rhsmConstants.RHSM_API_RESPONSE_ERRORS_TYPES\n};\n\n/**\n * RHSM response Error DATA CODE types.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES = {\n  ...rhsmConstants.RHSM_API_RESPONSE_ERRORS_CODE_TYPES\n};\n\n/**\n * ToDo: Clean up params, unused.\n */\n/**\n * RHSM response links type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS = 'links';\n\n/**\n * ToDo: Clean up params, unused.\n */\n/**\n * RHSM response LINKS type.\n * Schema/map of expected inventory LINKS response properties.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS_TYPES = {\n  FIRST: 'first',\n  LAST: 'last',\n  PREVIOUS: 'previous',\n  NEXT: 'next'\n};\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * ToDo: Clean up params, used by deprecated graph component selector and deprecated inventory component selector.\n * It appears some of these may need to move over towards rhsmSchemas.js\n */\n/**\n * RHSM response META types.\n * Schema/map of expected META response properties.\n *\n * @type {{COUNT: string, TOTAL_INSTANCE_HOURS: string, TOTAL_CORE_HOURS: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  TOTAL_CORE_HOURS: 'total_core_hours',\n  TOTAL_INSTANCE_HOURS: 'total_instance_hours'\n};\n\n/**\n * RHSM response data type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_DATA = 'data';\n\n/**\n * RHSM response Capacity DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA = RHSM_API_RESPONSE_DATA;\n\n/**\n * ToDo: Clean up params, used by deprecated graph component selector.\n * We may need to relocate this as part of a \"capacity\" schema some of these params towards rhsmSchemas.js\n */\n/**\n * RHSM response Capacity DATA types.\n * Schema/map of expected Capacity data response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string,\n *     HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response inventory DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA = RHSM_API_RESPONSE_DATA;\n\n/**\n * ToDo: Clean up params, used by deprecated inventory component and related selector.\n */\n/**\n * RHSM response inventory DATA types.\n * Schema/map of expected inventory DATA response properties.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, SUBSCRIPTION_ID: string,\n *     INVENTORY_ID: string, MEASUREMENT: string, ID: string, GUESTS: string, CLOUD_PROVIDER: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA_TYPES = {\n  CLOUD_PROVIDER: 'cloud_provider',\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  GUESTS: 'number_of_guests',\n  HARDWARE: 'hardware_type',\n  ID: 'insights_id',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets',\n  SUBSCRIPTION_ID: 'subscription_manager_id'\n};\n\n/**\n * ToDo: Clean up params, used by deprecated guests component selector.\n */\n/**\n * RHSM response inventory guests DATA types.\n * Schema/map of expected inventory guests DATA response properties.\n *\n * @type {{SUBSCRIPTION_ID: string, ID: string, NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES = {\n  ID: 'insights_id',\n  NAME: 'display_name',\n  SUBSCRIPTION_ID: 'subscription_manager_id',\n  LAST_SEEN: 'last_seen'\n};\n\n/**\n * RHSM response Reporting/Tally DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = RHSM_API_RESPONSE_DATA;\n\n/**\n * ToDo: Clean up params, used by app message component, deprecated graph component, and Tally response selectors.\n * May need to move part of this towards rhsmConstants.js\n */\n/**\n * RHSM response Reporting/Tally DATA types.\n * Schema/map of expected Reporting/Tally DATA response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, INSTANCE_HOURS: string, SOCKETS: string, CLOUD_CORES: string,\n *     HAS_DATA: string, PHYSICAL_SOCKETS: string, PHYSICAL_CORES: string, CLOUD_INSTANCES: string, DATE: string,\n *     CORE_HOURS: string, CLOUD_SOCKETS: string, HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string,\n *     HYPERVISOR_CORES: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORE_HOURS: 'core_hours',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  INSTANCE_HOURS: 'instance_hours',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM product id type values.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string,\n *     RHOSAK: string, RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string,\n *     OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string}}\n */\nconst RHSM_API_PATH_ID_TYPES = {\n  ...rhsmConstants.RHSM_API_PATH_PRODUCT_TYPES\n};\n\n/**\n * RHSM API query/search parameter of GRANULARITY type values.\n * Schema/map of expected query/search parameter granularity types.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_GRANULARITY_TYPES\n};\n\n/**\n * ToDo: Clean up sort params since they're hosts API specific.\n * Hosts is being deprecated in favor of instances API. Instances sort params\n * can be found in /services/rhsm/rhsmConstants.js\n */\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, MEASUREMENT: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_SORT_TYPES = {\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  HARDWARE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string, SKU: string,\n *     SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_SORT_DIRECTION_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES\n};\n\n/**\n * RHSM API query/search parameter SLA type values.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_QUERY_SLA_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_SLA_TYPES\n};\n\n/**\n * RHSM API query/search parameter UOM type values.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_QUERY_UOM_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_UOM_TYPES\n};\n\n/**\n * RHSM API query/search parameter USAGE type values.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_QUERY_USAGE_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_USAGE_TYPES\n};\n\n/**\n * ToDo: Clean up params, unused.\n */\n/**\n * RHSM API query/search parameter OPTIN type values.\n *\n * @type {{TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_SET_OPTIN_TYPES = {\n  CONDUIT_SYNC: 'enable_conduit_sync',\n  TALLY_REPORT: 'enable_tally_reporting',\n  TALLY_SYNC: 'enable_tally_sync'\n};\n\n/**\n * RHSM API query/search parameter CAPACITY type values.\n *\n * @type {{GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string}}\n */\nconst RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES\n};\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES\n};\n\n/**\n * RHSM API query/search parameter GUESTS INVENTORY type values.\n *\n * @type {{OFFSET: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES\n};\n\n/**\n * RHSM API query/search parameter SUBSCRIPTIONS INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string, SLA: string,\n *     LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES\n};\n\n/**\n * RHSM API query/search parameter values.\n *\n * @type {{GRANULARITY: string, TALLY_SYNC: string, DIRECTION: string, END_DATE: string,\n *     SLA: string, START_DATE: string, LIMIT: string, UOM: string, TALLY_REPORT: string,\n *     USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_TYPES = {\n  ...RHSM_API_QUERY_SET_OPTIN_TYPES,\n  ...RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\n/**\n * RHSM API types.\n *\n * @type {{RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}, RHSM_API_RESPONSE_DATA: string, RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES: {GENERIC: string,\n *     OPTIN: string}, RHSM_API_RESPONSE_INVENTORY_DATA: string, RHSM_API_RESPONSE_CAPACITY_DATA: string,\n *     RHSM_API_RESPONSE_ERROR_DATA_TYPES: {CODE: string, DETAIL: string},\n *     RHSM_API_RESPONSE_CAPACITY_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string},\n *     RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES: {QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string,\n *     SKU: string, SERVICE_LEVEL: string}, RHSM_API_RESPONSE_META_TYPES: {COUNT: string, TOTAL_INSTANCE_HOURS: string,\n *     TOTAL_CORE_HOURS: string}, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string,\n *     MONTHLY: string}, RHSM_API_QUERY_SORT_DIRECTION_TYPES: {ASCENDING: string, DESCENDING: string},\n *     RHSM_API_RESPONSE_PRODUCTS_DATA: string, RHSM_API_QUERY_TYPES: {GRANULARITY: string, TALLY_SYNC: string, DIRECTION: string,\n *     END_DATE: string, SLA: string, START_DATE: string, LIMIT: string, UOM: string, TALLY_REPORT: string, USAGE: string,\n *     SORT: string, OFFSET: string, CONDUIT_SYNC: string}, RHSM_API_RESPONSE_LINKS: string,\n *     RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES: {OFFSET: string, LIMIT: string}, RHSM_API_PATH_ID_TYPES: {RHEL_ARM: string,\n *     OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string, RHOSAK: string, RHEL_COMPUTE_NODE: string,\n *     RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string,\n *     RHEL: string, SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string},\n *     RHSM_API_QUERY_SET_OPTIN_TYPES: {TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string},\n *     RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_SET_INVENTORY_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string, SLA: string,\n *     LIMIT: string}, RHSM_API_QUERY_SORT_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string,\n *     MEASUREMENT: string, LAST_SEEN: string, NAME: string}, RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES: {HYPERVISOR_SOCKETS: string,\n *     CORES: string, INSTANCE_HOURS: string, SOCKETS: string, CLOUD_CORES: string, HAS_DATA: string, PHYSICAL_SOCKETS: string,\n *     PHYSICAL_CORES: string, CLOUD_INSTANCES: string, DATE: string, CORE_HOURS: string, CLOUD_SOCKETS: string,\n *     HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string, HYPERVISOR_CORES: string},\n *     RHSM_API_QUERY_UOM_TYPES: {CORES: string, SOCKETS: string}, RHSM_API_RESPONSE_LINKS_TYPES: string,\n *     RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES: {SUBSCRIPTION_ID: string, ID: string, NAME: string, LAST_SEEN: string},\n *     RHSM_API_RESPONSE_ERROR_DATA: string, RHSM_API_RESPONSE_META: string, RHSM_API_RESPONSE_INVENTORY_DATA_TYPES: {CORES: string,\n *     CORE_HOURS: string, HARDWARE: string, SOCKETS: string, SUBSCRIPTION_ID: string, INVENTORY_ID: string, MEASUREMENT: string,\n *     ID: string, GUESTS: string, CLOUD_PROVIDER: string, LAST_SEEN: string, NAME: string},\n *     RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string,\n *     START_DATE: string}}}\n */\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var map = {\n\t\"./authentication/authentication.js\": [\n\t\t67719\n\t],\n\t\"./authentication/authenticationContext.js\": [\n\t\t98944\n\t],\n\t\"./bannerMessages/bannerMessages.js\": [\n\t\t87585,\n\t\t7585\n\t],\n\t\"./chart/chart.js\": [\n\t\t60930,\n\t\t8683,\n\t\t7535,\n\t\t930\n\t],\n\t\"./chart/chartAxisLabel.js\": [\n\t\t76395,\n\t\t4314\n\t],\n\t\"./chart/chartContext.js\": [\n\t\t98326,\n\t\t8326\n\t],\n\t\"./chart/chartElements.js\": [\n\t\t54096,\n\t\t8683,\n\t\t7535,\n\t\t4096\n\t],\n\t\"./chart/chartHelpers.js\": [\n\t\t61026,\n\t\t1026\n\t],\n\t\"./chart/chartIcon.js\": [\n\t\t1138\n\t],\n\t\"./chart/chartLegend.js\": [\n\t\t52902,\n\t\t2902\n\t],\n\t\"./chart/chartTooltip.js\": [\n\t\t78213,\n\t\t8213\n\t],\n\t\"./form/checkbox.js\": [\n\t\t34467,\n\t\t7235,\n\t\t190\n\t],\n\t\"./form/formHelpers.js\": [\n\t\t44044,\n\t\t4044\n\t],\n\t\"./form/formState.js\": [\n\t\t90384,\n\t\t384\n\t],\n\t\"./form/select.js\": [\n\t\t49844,\n\t\t9844\n\t],\n\t\"./form/textInput.js\": [\n\t\t18710,\n\t\t8710\n\t],\n\t\"./graphCard/graphCard.deprecated.js\": [\n\t\t28341,\n\t\t8683,\n\t\t7535,\n\t\t930,\n\t\t8341\n\t],\n\t\"./graphCard/graphCard.js\": [\n\t\t10608,\n\t\t8683,\n\t\t7535,\n\t\t930,\n\t\t5876,\n\t\t1799,\n\t\t608\n\t],\n\t\"./graphCard/graphCardChart.deprecated.js\": [\n\t\t89270,\n\t\t8683,\n\t\t7535,\n\t\t930,\n\t\t9270\n\t],\n\t\"./graphCard/graphCardChart.js\": [\n\t\t91799,\n\t\t8683,\n\t\t7535,\n\t\t930,\n\t\t1799,\n\t\t1858\n\t],\n\t\"./graphCard/graphCardChartLegend.js\": [\n\t\t64418,\n\t\t4418\n\t],\n\t\"./graphCard/graphCardChartTitleTooltip.js\": [\n\t\t99171,\n\t\t939\n\t],\n\t\"./graphCard/graphCardChartTooltip.js\": [\n\t\t44024,\n\t\t4024\n\t],\n\t\"./graphCard/graphCardContext.js\": [\n\t\t25394,\n\t\t5394\n\t],\n\t\"./graphCard/graphCardHelpers.js\": [\n\t\t78139,\n\t\t8139\n\t],\n\t\"./graphCard/graphCardMetric.js\": [\n\t\t49877,\n\t\t8683,\n\t\t7535,\n\t\t930,\n\t\t5876,\n\t\t1799,\n\t\t9877\n\t],\n\t\"./graphCard/graphCardMetricTotals.js\": [\n\t\t29407,\n\t\t5876,\n\t\t6873\n\t],\n\t\"./graphCard/graphCardMetrics.js\": [\n\t\t11014,\n\t\t8683,\n\t\t7535,\n\t\t930,\n\t\t1799,\n\t\t1014\n\t],\n\t\"./i18n/i18n.js\": [\n\t\t83109\n\t],\n\t\"./inventoryCard/inventoryCard.js\": [\n\t\t82195,\n\t\t7471,\n\t\t2195,\n\t\t9373\n\t],\n\t\"./inventoryCard/inventoryCardContext.js\": [\n\t\t42896,\n\t\t2896\n\t],\n\t\"./inventoryCard/inventoryCardHelpers.js\": [\n\t\t12243,\n\t\t2243\n\t],\n\t\"./inventoryCard/inventoryList.deprecated.js\": [\n\t\t88191,\n\t\t7471,\n\t\t8191,\n\t\t2130\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptions.js\": [\n\t\t16696,\n\t\t7471,\n\t\t2195,\n\t\t4486\n\t],\n\t\"./inventoryCardSubscriptions/inventoryCardSubscriptionsContext.js\": [\n\t\t62881,\n\t\t2881\n\t],\n\t\"./inventoryGuests/guestsList.deprecated.js\": [\n\t\t95473,\n\t\t5473\n\t],\n\t\"./inventoryGuests/inventoryGuests.js\": [\n\t\t15242,\n\t\t5242\n\t],\n\t\"./inventoryGuests/inventoryGuestsContext.js\": [\n\t\t32293,\n\t\t2293\n\t],\n\t\"./inventoryTabs/inventoryTab.js\": [\n\t\t80931,\n\t\t931\n\t],\n\t\"./inventoryTabs/inventoryTabs.js\": [\n\t\t69051,\n\t\t9051\n\t],\n\t\"./loader/loader.js\": [\n\t\t1797\n\t],\n\t\"./messageView/messageView.js\": [\n\t\t79719\n\t],\n\t\"./minHeight/minHeight.js\": [\n\t\t91339,\n\t\t1339\n\t],\n\t\"./optinView/optinView.js\": [\n\t\t78255,\n\t\t8255\n\t],\n\t\"./pageLayout/pageColumns.js\": [\n\t\t5937\n\t],\n\t\"./pageLayout/pageHeader.js\": [\n\t\t58816\n\t],\n\t\"./pageLayout/pageLayout.js\": [\n\t\t52422\n\t],\n\t\"./pageLayout/pageMessages.js\": [\n\t\t54803\n\t],\n\t\"./pageLayout/pageSection.js\": [\n\t\t99781\n\t],\n\t\"./pageLayout/pageToolbar.js\": [\n\t\t89484\n\t],\n\t\"./pagination/pagination.js\": [\n\t\t68900,\n\t\t8900\n\t],\n\t\"./pagination/paginationHelpers.js\": [\n\t\t65020,\n\t\t5020\n\t],\n\t\"./productView/productView.js\": [\n\t\t29175,\n\t\t8683,\n\t\t7535,\n\t\t930,\n\t\t5876,\n\t\t1799,\n\t\t7471,\n\t\t136,\n\t\t2195,\n\t\t8191,\n\t\t8526,\n\t\t9175,\n\t\t2085\n\t],\n\t\"./productView/productViewContext.js\": [\n\t\t51858,\n\t\t9942\n\t],\n\t\"./productView/productViewMissing.js\": [\n\t\t91233,\n\t\t1233\n\t],\n\t\"./productView/productViewOpenShiftContainer.js\": [\n\t\t81114,\n\t\t8683,\n\t\t7535,\n\t\t930,\n\t\t5876,\n\t\t7471,\n\t\t136,\n\t\t2195,\n\t\t8191,\n\t\t8526,\n\t\t7191\n\t],\n\t\"./productView/productViewOpenShiftDedicated.js\": [\n\t\t84944,\n\t\t8683,\n\t\t7535,\n\t\t930,\n\t\t5876,\n\t\t1799,\n\t\t7471,\n\t\t136,\n\t\t2195,\n\t\t8191,\n\t\t8526,\n\t\t9175,\n\t\t8731\n\t],\n\t\"./router/index.js\": [\n\t\t94976\n\t],\n\t\"./router/redirect.js\": [\n\t\t57304\n\t],\n\t\"./router/router.js\": [\n\t\t27097\n\t],\n\t\"./router/routerContext.js\": [\n\t\t43301\n\t],\n\t\"./router/routerHelpers.js\": [\n\t\t97712\n\t],\n\t\"./table/table.js\": [\n\t\t78697\n\t],\n\t\"./table/tableEmpty.js\": [\n\t\t30817\n\t],\n\t\"./table/tableSkeleton.js\": [\n\t\t62540\n\t],\n\t\"./tabs/tabs.js\": [\n\t\t70031,\n\t\t31\n\t],\n\t\"./toolbar/toolbar.js\": [\n\t\t92227,\n\t\t5876,\n\t\t136,\n\t\t9297\n\t],\n\t\"./toolbar/toolbarContext.js\": [\n\t\t83280,\n\t\t5876,\n\t\t136,\n\t\t8232\n\t],\n\t\"./toolbar/toolbarFieldDisplayName.js\": [\n\t\t89517,\n\t\t9517\n\t],\n\t\"./toolbar/toolbarFieldGranularity.js\": [\n\t\t2738,\n\t\t2738\n\t],\n\t\"./toolbar/toolbarFieldRangedMonthly.js\": [\n\t\t65876,\n\t\t5876,\n\t\t998\n\t],\n\t\"./toolbar/toolbarFieldSelectCategory.js\": [\n\t\t70136,\n\t\t5876,\n\t\t136,\n\t\t7891\n\t],\n\t\"./toolbar/toolbarFieldSla.js\": [\n\t\t33267,\n\t\t3267\n\t],\n\t\"./toolbar/toolbarFieldUom.js\": [\n\t\t74097,\n\t\t4097\n\t],\n\t\"./toolbar/toolbarFieldUsage.js\": [\n\t\t49928,\n\t\t9928\n\t],\n\t\"./tooltip/tooltip.js\": [\n\t\t3969\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 58908;\nmodule.exports = webpackAsyncContext;"],"names":["module","exports","App","getLocale","useAliasDispatch","useDispatch","useAliasSelector","useSelector","dispatch","locale","user","data","value","useMount","I18n","NotificationsPortal","Router","defaultProps","reduxActions","storeHooks","noop","Function","prototype","noopPromise","Promise","resolve","PROD_MODE","process","UI_WINDOW_ID","helpers","aggregatedError","errors","message","err","name","window","AggregateError","Error","Array","isArray","isEmulated","browserExpose","obj","options","limit","id","generateId","prefix","Math","ceil","random","isDate","date","Object","toString","call","isPromise","test","noopTranslate","key","components","updatedKey","updatedValue","keys","length","JSON","stringify","updatedComponents","numberDisplay","Number","isNaN","numbro","DEV_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_TABLE","UI_DISABLED_TABLE_HOSTS","UI_DISABLED_TABLE_INSTANCES","UI_DISABLED_TABLE_SUBSCRIPTIONS","UI_DISABLED_TOOLBAR","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_LEARN_MORE","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_LOGGER_FILE","UI_NAME","UI_PATH","UI_VERSION","getCurrentDate","moment","toDate","REACT_APP_DEBUG_DEFAULT_DATETIME","setRangedDateTime","subtract","measurement","endOfMeasurement","startDate","startOf","endDate","endOf","currentDateTime","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","rangedYearDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedMonthDateTime","month","currentYear","parseInt","year","keyDateTimeRanges","listDateTimeRanges","startDateUpdated","endDateUpdated","format","dateTime","titleYear","title","titleIndex","isNextYear","_title","toLowerCase","add","translate","context","push","reverse","isCurrent","current","undefined","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","timestampTimeFormats","timeLong","yearTimeLong","timeShort","yearTimeShort","timestampUTCTimeFormats","downloadData","fileName","fileType","reject","document","navigator","URL","blob","Blob","type","msSaveBlob","anchorTag","createElement","href","createObjectURL","style","display","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","error","debugLog","sessionStorage","replace","parse","getItem","Authentication","appName","authorizeUser","children","hideGlobalFilter","initializeChrome","isDisabled","onNavigation","setAppName","t","useAliasAuth","useAuth","useAliasHistory","useHistory","useState","unregister","setUnregister","history","pending","authData","authorized","errorCodes","errorStatus","isAuthorized","event","navId","useUnmount","AuthenticationContext","description","pageTitle","icon","BinocularsIcon","includes","rhsmConstants","Redirect","route","routerHelpers","serviceName","routerHooks","DEFAULT_CONTEXT","React","useAuthContext","useContext","useSelectorsResponse","useAliasSelectorsResponse","selector","auth","fulfilled","responses","app","status","useSession","useAliasAuthContext","session","getSize","size","parseFloat","ChartIcon","fill","symbol","props","svgProps","iconProps","fontProps","fontSize","emSvgSize","color","className","width","height","viewBox","role","y","x","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","EyeIcon","EyeSlashIcon","SquareIcon","setIcon","translateKey","values","updatedValues","updatedTranslateKey","filter","join","i18next","i18nKey","translateComponent","Component","withTranslation","i18n","displayName","fallbackLng","loadPath","initialized","setInitialized","XHR","use","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","useEffect","e","Loader","skeletonProps","tableProps","variant","SkeletonSize","TableSkeleton","PageLayout","PageHeader","MessageView","PageSection","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","PageColumns","Flex","alignItems","sm","spaceItems","child","map","FlexItem","grow","productLabel","justifyContent","Button","isInline","component","ExternalLinkAltIcon","iconPosition","target","PageMessages","PageToolbar","padding","default","hash","search","forcePath","isForced","routes","url","baseName","pathName","matchedRoutePath","path","matchedRoute","location","updatedRoutes","setUpdatedRoutes","redirectDefault","setRedirectDefault","activateOnErrorRoute","find","activateOnError","all","item","disabled","View","Route","exact","strict","render","routeProps","routeConfig","URLSearchParams","decodeURIComponent","parsedSearch","Set","param","forEach","v","split","updatedLocation","routeDetail","errorRoute","routeItem","RouterContext","results","redirect","fallback","Switch","to","useRouterContext","useRouteDetail","useAliasRouterContext","platformLandingRedirect","platformModalRedirect","dynamicBaseName","pathname","applicationName","dynamicBasePath","basePath","generateProductGroups","config","routesConfig","productGroups","pathParameter","productParameter","index","generateRoutes","getErrorRoute","getRouteConfigByPath","basePathDirs","str","configs","allConfigs","configsById","allConfigsById","findConfig","dir","configPath","aliases","configItem","updatedConfigItem","RegExp","decodedDir","decodeURI","firstMatch","getRouteConfig","navRouteItem","returnDefault","routeHref","viewParameter","importView","p","Table","state","isCollapsible","isSortable","sortBy","updatedColumnHeaders","updatedRows","onCollapse","isOpen","fullWidth","cells","expandedContent","setState","onSort","direction","updatedIndex","i","label","column","header","this","setRowData","prevProps","columnHeaders","rows","customizer","valueA","valueB","_isEqualWith","updatedSort","isExpanded","rowObj","parent","cell","settings","columnHeader","sortActive","sortDirection","tempColumnHeader","transforms","sortable","SortByDirection","ariaLabel","borders","isHeader","summary","pfTableProps","emptyTable","TableEmpty","SearchIcon","TableHeader","TableBody","Grid","GridItem","span","renderTable","tableHeading","colCount","colWidth","rowCount","updatedHeader","cellWidth","updatedRowCount","Tooltip","content","isNoWrap","distance","enableFlip","entryDelay","exitDelay","position","TooltipPosition","productGroup","RHSM_API_PATH_ID_TYPES","productId","viewId","query","RHSM_API_QUERY_TYPES","RHSM_API_QUERY_UOM_TYPES","toISOString","graphTallyQuery","inventoryHostsQuery","RHSM_API_QUERY_SORT_TYPES","SORT_DIRECTION_TYPES","inventorySubscriptionsQuery","RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES","initialGraphFilters","chartColorBlueLight","chartColorBlueDark","chartColorCyanLight","chartColorCyanDark","chartColorPurpleLight","chartColorPurpleDark","chartType","initialGuestsFilters","inventoryId","inventory","lastSeen","DateFormat","initialInventoryFilters","numberOfGuests","updatedDisplayName","count","cloudProvider","measurementType","isWrappable","initialInventorySettings","initialSubscriptionsInventoryFilters","uom","hasInfiniteQuantity","totalCapacity","nextEventDate","initialToolbarFilters","selected","productContextFilterUom","initialOption","isOptional","initialGraphSettings","actionDisplay","displayContent","totalCoreHours","meta","total","average","mantissa","trimMantissa","lowPrecision","toUpperCase","coreHours","toFixed","isStacked","yAxisUseDataSet","instanceHours","RHSM_API_PATH_PRODUCT_TYPES","RHSM_API_QUERY_SET_TYPES","RHSM_API_QUERY_INVENTORY_SORT_TYPES","RHSM_API_PATH_METRIC_TYPES","isStandalone","yAxisChartLabel","isCardTitleDescription","xAxisChartLabel","yAxisTickFormat","tick","INVENTORY_TYPES","tooltip","rhelConfig","productConfig","isSearchable","openshiftContainerConfig","openshiftMetricsConfig","openshiftDedicatedConfig","rhosakConfig","satelliteProductConfig","isSetAppNav","useHistoryRRD","pathLocation","historyState","useLocation","useParams","useRouteMatch","apiQueries","parseRhsmQuery","queries","inventoryGuestsQuery","updatedGraphTallyQuery","reduxHelpers","rhsmApiTypes","updatedInventoryGuestsQuery","updatedInventoryHostsQuery","updatedInventorySubscriptionsQuery","toolbarQuery","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","schemas","initialValue","schema","generated","getSingleResponseFromResultArray","updatedResults","payload","response","updatedResultsMessage","firstErrorResponse","_get","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","_isPlainObject","getDateFromResults","getStatusFromResults","setStateProp","prop","initialState","reset","console","warn","singlePromiseDataResponseFromArray","HTTP_STATUS_RANGE","setApiQuery","setNormalizedResponse","parsedResponses","customResponseEntry","customResponseValue","keyPrefix","keyCase","updatedData","generatedSchema","parsedResponse","dataObj","keyCaseType","customEntry","customValue","update","updatedDataObj","generatedData","entries","casedDataObjKey","dataObjKey","dataObjValue","_camelCase","_snakeCase","val","isInteger","generatedPromiseActionReducer","types","action","expandedTypes","subVal","ref","whichType","expandMetaTypes","updatedMeta","fromEntries","baseState","errorMessage","setId","errorResponse","cancelled","getDataFromResults","useSelectors","selectors","equality","shallowEqual","useReactReduxSelector","updatedSelectors","selectorIds","multiSelector","createSelector","listMultiSelectorResponse","undefinedMultiSelectorResponse","_cloneDeep","idMultiSelectorResponse","from","useAliasSelectors","customResponse","selectorResponse","isSelectorResponseArray","cancelledById","cancelledByList","cancelledDataById","cancelledDataByList","errorByList","errorById","errorDataById","errorDataByList","fulfilledByList","fulfilledById","fulfilledDataById","fulfilledDataByList","pendingByList","responsesById","responsesByList","dataById","dataByList","idList","updatedSelectorResponse","updatedResponse","isById","list","assign","reactReduxHooks","dispatchEvent","store","useSelectorsAllSettledResponse","baseResponse","useSelectorsAnyResponse","keyList","useSelectorsRaceResponse","rhsmActionsHooks","useGetMessageReports","rhsmTypes","rhsmServices","cancelId","notifications","reactRedux","rhsmActions","rhsmSelectors","useAppMessages","useAliasRouteDetail","result","reduxSelectors","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","platformTypes","platformServices","isHidden","callback","setAppNav","secondaryNav","getGraphReportsCapacity","getGraphTally","idMetric","multiMetric","multiDispatch","metric","getHostsInventory","getHostsInventoryGuests","getInstancesInventory","getMessageReports","getSubscriptionsInventory","userServices","defaultLang","serviceCall","Cookies","cookieLang","LocaleCode","deleteAccountOptIn","method","getAccountOptIn","cancel","updateAccountOptIn","params","actions","platform","rhsm","userTypes","rejected","dismissable","autoDismiss","legend","reportCapacity","tally","graphReducer","graphTypes","hostsInventory","hostsGuests","instancesInventory","subscriptionsInventory","tabs","inventoryReducer","inventoryTypes","report","messagesReducer","filters","toolbarReducer","reduxTypes","activeFilters","currentFilter","optin","userReducer","appTypes","actionStatus","viewReducer","updateResetQueries","queryIds","updatedQuery","queryId","productQuery","updateClearQueries","updateClearGuestQuery","clearFilters","reducers","graph","messages","toolbar","view","reduxReducers","combineReducers","selectorCache","appMessages","cloudigradeMismatch","cache","reportData","appMessagesSelectors","makeAppMessages","createSelectorCreator","defaultMemoize","_isEqual","createDeepEqualSelector","updatedSession","admin","entitled","permissions","responsePermissions","isAdmin","isEntitled","userSessionSelectors","userSession","makeUserSession","responseData","metaId","updatedResponseData","listData","Date","updatedListData","guestsListSelectors","guestsList","makeGuestsList","LruCache","ttl","max","allowStale","updateAgeOnGet","metaQuery","graphData","responseMetaQuery","get","capacity","reportMeta","capacityData","graphDataKey","tallySchema","capacitySchema","customReportValue","presetData","hasData","hasCloudigradeData","hasCloudigradeMismatch","customCapacityValue","hasInfinite","generateGraphData","graphDataObj","graphDataObjKey","generatedY","casedGraphDataObjKey","updatedItem","updatedReportMeta","set","graphCardSelectors","graphCard","makeGraphCard","itemCount","listMeta","customInventoryValue","updatedListMeta","inventoryList","makeInventoryList","userSelectors","recordAction","items","parsedItems","slice","getActions","priorItem","updatedAction","removeUserIdentity","platformApiTypes","updatedPayload","sanitizeData","headers","sanitizeActionHeaders","actionObj","diff","timestamp","now","setItem","browser","userAgent","toLocaleString","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","next","httpStatus","payloadConfig","range","floor","statusMiddleware","a","promiseMiddleware","actionRecordMiddleware","version","notificationsMiddleware","createStore","applyMiddleware","STATUS_4XX","STATUS_5XX","SET_GRAPH_LEGEND","SET_INVENTORY_TAB","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_GLOBAL_FILTER_HIDE","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","PLATFORM_USER_AUTH","queryTypes","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST","SET_QUERY_RESET_INVENTORY_LIST","SET_QUERY_RHSM_TYPES","SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_LOCALE","USER_LOGOUT","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_GRAPH_TALLY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","GET_INSTANCES_INVENTORY_RHSM","GET_MESSAGE_REPORTS_RHSM","GET_SUBSCRIPTIONS_INVENTORY_RHSM","camelCase","updatedObj","schemaResponse","casing","convert","validate","details","serviceHelpers","passDataToCallback","timeoutFunctionCancel","func","clearTimer","timeout","timer","_","updatedFunc","clearTimeout","execFunction","race","globalXhrTimeout","globalCancelTokens","globalResponseCache","axiosServiceCall","cancelledMessage","responseCache","xhrTimeout","updatedConfig","cacheResponse","responseTransformers","axiosInstance","axios","cacheId","btoa","sort","b","localeCompare","exposeCacheId","cancelTokensId","CancelToken","cancelToken","token","cachedResponse","adapter","adapterConfig","transform","successTransform","errorTransform","transformers","interceptors","emulateCallback","isSuccess","emulatedResponse","serviceConfig","passedConfig","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES","ALL","PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES","READ","WRITE","platformConstants","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES","SUBSCRIPTIONS","Joi","JoiBase","JoiDate","userResponseSchema","object","identity","is_org_admin","unknown","entitlements","is_entitled","permissionsItem","permission","string","optional","allow","resourceDefinitions","array","permissionsResponseSchema","platformSchemas","platformTransformers","rbacConfig","definitions","resource","operation","resources","RESOURCE_TYPES","OPERATION_TYPES","resourcePermissions","res","op","getUser","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","getUserPermissions","updatedAppName","platformMethod","USER_PERMISSION_TYPES","REACT_APP_DEBUG_PERMISSION_APP_ONE","REACT_APP_DEBUG_PERMISSION_APP_TWO","allPermissions","userPermissions","flat","on","identifyApp","appNavClick","parentId","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","RHOSAK","OPENSHIFT","OPENSHIFT_METRICS","OPENSHIFT_DEDICATED_METRICS","SATELLITE","SATELLITE_CAPSULE","SATELLITE_SERVER","CORES","SOCKETS","CORE_SECONDS","INSTANCE_HOURS","STORAGE_GIBIBYTES","TRANSFER_GIBIBYTES","RHSM_API_RESPONSE_META_TYPES","COUNT","PRODUCT","RHSM_API_RESPONSE_INSTANCES_DATA_TYPES","DISPLAY_NAME","INVENTORY_ID","LAST_SEEN","MEASUREMENTS","NUMBER_OF_GUESTS","SUBSCRIPTION_MANAGER_ID","RHSM_API_RESPONSE_INSTANCES_META_TYPES","RHSM_API_RESPONSE_TALLY_DATA_TYPES","DATE","VALUE","HAS_DATA","RHSM_API_RESPONSE_TALLY_META_TYPES","HAS_CLOUDIGRADE_DATA","HAS_CLOUDIGRADE_MISMATCH","METRIC_ID","TOTAL_MONTHLY","RHSM_API_RESPONSE_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_RESPONSE_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_RESPONSE_UOM_TYPES","RHSM_API_RESPONSE_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_GRANULARITY_TYPES","NAME","RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","RHSM_API_QUERY_INVENTORY_SUBSCRIPTIONS_SORT_TYPES","NEXT_EVENT_DATE","NEXT_EVENT_TYPE","PRODUCT_NAME","QUANTITY","SKU","SERVICE_LEVEL","TOTAL_CAPACITY","USAGE","RHSM_API_QUERY_SLA_TYPES","RHSM_API_QUERY_USAGE_TYPES","RHSM_API_QUERY_SET_INVENTORY_TYPES","DIRECTION","END_DATE","LIMIT","OFFSET","SLA","SORT","START_DATE","UOM","RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES","GRANULARITY","RHSM_API_RESPONSE_DATA","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_ERRORS","RHSM_API_RESPONSE_ERRORS_TYPES","CODE","RHSM_API_RESPONSE_ERRORS_CODE_TYPES","GENERIC","OPTIN","errorItem","code","detail","errorResponseSchema","linksSchema","metaResponseSchema","number","integer","product","valid","guestsMetaSchema","guestsItem","inventory_id","display_name","subscription_manager_id","last_seen","utc","guestsResponseSchema","links","instancesMetaSchema","measurements","instancesItem","instancesResponseSchema","subscriptionsMetaSchema","subscriptionsItem","has_infinite_quantity","next_event_date","product_name","quantity","service_level","total_capacity","lowercase","subscriptionsResponseSchema","tallyItem","has_data","tallyMetaSchema","has_cloudigrade_data","has_cloudigrade_mismatch","metric_id","total_monthly","tallyResponseSchema","rhsmSchemas","guests","instances","subscriptions","rhsmTransformers","metaMeasurements","INSTANCES_META_TYPES","INSTANCES_DATA_TYPES","subscriptionManagerId","currentDay","TALLY_DATA_TYPES","isCurrentDate","TALLY_META_TYPES","metricId","totalMonthlyDate","totalMonthlyHasData","totalMonthlyValue","getApiVersion","getGraphCapacity","getGraphReports","updatedId","RHSM_API_RESPONSE_ERROR_DATA","RHSM_API_RESPONSE_ERROR_DATA_TYPES","RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES","CORE_HOURS","HARDWARE","MEASUREMENT","RHSM_API_QUERY_SORT_DIRECTION_TYPES","RHSM_API_QUERY_SET_OPTIN_TYPES","CONDUIT_SYNC","TALLY_REPORT","TALLY_SYNC","RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES","RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES","RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES","RHSM_API_RESPONSE_LINKS","RHSM_API_RESPONSE_LINKS_TYPES","FIRST","LAST","PREVIOUS","NEXT","TOTAL_CORE_HOURS","TOTAL_INSTANCE_HOURS","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","CLOUD_CORES","CLOUD_INSTANCES","CLOUD_SOCKETS","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_INVENTORY_DATA","RHSM_API_RESPONSE_INVENTORY_DATA_TYPES","CLOUD_PROVIDER","GUESTS","ID","SUBSCRIPTION_ID","RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","webpackContext","req","webpackContextResolve","__webpack_require__","o","webpackAsyncContext","then","ids"],"sourceRoot":""}
{"version":3,"file":"js/3280.2c5e380631f37e5d77f6.js","mappings":"iUAcMA,EAAyB,WAGpB,+DAAP,GAAO,IAFTC,gBAAiBC,OAER,MAF+BD,EAAAA,gBAE/B,MADTE,0BAA2BC,OAClB,MADmDD,EAAAA,0BACnD,IAKLD,IAH0BG,EAFrB,EAENC,EAAAA,GAAAA,KAC2BC,EAHrB,EAGND,EAAAA,GAAAA,KAC6BE,EAJvB,EAINF,EAAAA,GAAAA,OAJM,EAMmDF,IAAhBK,EANnC,EAMAH,EAAAA,GAAAA,aAET,sBACGA,EAAAA,GAAAA,YAAmCG,IADtC,SAEGH,EAAAA,GAAAA,IAA2BD,IAF9B,SAGGC,EAAAA,GAAAA,IAA2BC,IAH9B,SAIGD,EAAAA,GAAAA,MAA6BE,GAJhC,GAgBIE,EAAuB,WAGlB,6DAAP,GAAO,IAFTC,eAAgBC,OAEP,MAF6BD,EAAAA,YAE7B,MADTE,iBAAkBC,OACT,MADiCD,EAAAA,YACjC,EACHE,EAAcH,IACdI,EAAgBF,IAEtB,OAAO,SAAAG,GACL,OAAQA,GACN,KAAKX,EAAAA,GAAAA,IACHS,IACA,MACF,KAAKT,EAAAA,GAAAA,MACHU,OAkBFE,EAA0B,WAKrB,6DAAP,GAAO,IAJTjB,gBAAiBC,OAIR,MAJ+BD,EAAAA,gBAI/B,MAHTkB,0BAA2BC,OAGlB,MAHmDD,EAAAA,YAGnD,MAFTR,eAAgBC,OAEP,MAF6BD,EAAAA,YAE7B,MADTE,iBAAkBC,OACT,MADiCD,EAAAA,YACjC,IACwEX,IAA7CG,EAD3B,EACAC,EAAAA,GAAAA,KAA8DE,EAD9D,EACiCF,EAAAA,GAAAA,OACpCS,EAAcH,IACdI,EAAgBF,IAChBO,EAAyBD,IAE/B,OAAO,SAAAE,GACc,iBAARjB,GACTU,IAGmB,iBAAVP,GACTQ,IAGEM,GACFD,MAKAE,EAAU,CACdb,qBAAAA,EACAQ,wBAAAA,EACAlB,uBAAAA","sources":["webpack:///./src/components/toolbar/toolbarContext.js"],"sourcesContent":["import { useProductQuery, useProductGraphTallyQuery } from '../productView/productViewContext';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\nimport { useOnSelect as useSelectCategoryOnSelect } from './toolbarFieldSelectCategory';\nimport { useOnSelect as useSlaOnSelect } from './toolbarFieldSla';\nimport { useOnSelect as useUsageOnSelect } from './toolbarFieldUsage';\n\n/**\n * Return current values for categories/queries.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductGraphTallyQuery\n * @returns {object}\n */\nconst useToolbarFieldQueries = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery = useProductGraphTallyQuery\n} = {}) => {\n  const {\n    [RHSM_API_QUERY_TYPES.SLA]: sla,\n    [RHSM_API_QUERY_TYPES.UOM]: uom,\n    [RHSM_API_QUERY_TYPES.USAGE]: usage\n  } = useAliasProductQuery();\n  const { [RHSM_API_QUERY_TYPES.GRANULARITY]: granularity } = useAliasProductGraphTallyQuery();\n\n  return {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: granularity,\n    [RHSM_API_QUERY_TYPES.SLA]: sla,\n    [RHSM_API_QUERY_TYPES.UOM]: uom,\n    [RHSM_API_QUERY_TYPES.USAGE]: usage\n  };\n};\n\n/**\n * Clear a specific toolbar category.\n *\n * @param {object} options\n * @param {Function} options.useSlaOnSelect\n * @param {Function} options.useUsageOnSelect\n * @returns {Function}\n */\nconst useToolbarFieldClear = ({\n  useSlaOnSelect: useAliasSlaOnSelect = useSlaOnSelect,\n  useUsageOnSelect: useAliasUsageOnSelect = useUsageOnSelect\n} = {}) => {\n  const slaOnSelect = useAliasSlaOnSelect();\n  const usageOnSelect = useAliasUsageOnSelect();\n\n  return field => {\n    switch (field) {\n      case RHSM_API_QUERY_TYPES.SLA:\n        slaOnSelect();\n        break;\n      case RHSM_API_QUERY_TYPES.USAGE:\n        usageOnSelect();\n        break;\n      default:\n        break;\n    }\n  };\n};\n\n/**\n * Clear all available toolbar categories.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useSelectCategoryOnSelect\n * @param {Function} options.useSlaOnSelect\n * @param {Function} options.useUsageOnSelect\n * @returns {Function}\n */\nconst useToolbarFieldClearAll = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useSelectCategoryOnSelect: useAliasSelectCategoryOnSelect = useSelectCategoryOnSelect,\n  useSlaOnSelect: useAliasSlaOnSelect = useSlaOnSelect,\n  useUsageOnSelect: useAliasUsageOnSelect = useUsageOnSelect\n} = {}) => {\n  const { [RHSM_API_QUERY_TYPES.SLA]: sla, [RHSM_API_QUERY_TYPES.USAGE]: usage } = useAliasProductQuery();\n  const slaOnSelect = useAliasSlaOnSelect();\n  const usageOnSelect = useAliasUsageOnSelect();\n  const selectCategoryOnSelect = useAliasSelectCategoryOnSelect();\n\n  return hardFilterReset => {\n    if (typeof sla === 'string') {\n      slaOnSelect();\n    }\n\n    if (typeof usage === 'string') {\n      usageOnSelect();\n    }\n\n    if (hardFilterReset) {\n      selectCategoryOnSelect();\n    }\n  };\n};\n\nconst context = {\n  useToolbarFieldClear,\n  useToolbarFieldClearAll,\n  useToolbarFieldQueries\n};\n\nexport { context as default, context, useToolbarFieldClear, useToolbarFieldClearAll, useToolbarFieldQueries };\n"],"names":["useToolbarFieldQueries","useProductQuery","useAliasProductQuery","useProductGraphTallyQuery","useAliasProductGraphTallyQuery","sla","RHSM_API_QUERY_TYPES","uom","usage","granularity","useToolbarFieldClear","useSlaOnSelect","useAliasSlaOnSelect","useUsageOnSelect","useAliasUsageOnSelect","slaOnSelect","usageOnSelect","field","useToolbarFieldClearAll","useSelectCategoryOnSelect","useAliasSelectCategoryOnSelect","selectCategoryOnSelect","hardFilterReset","context"],"sourceRoot":""}
{"version":3,"file":"js/8255.1646852517796.a03b510161603cee9187.js","mappings":"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","sources":["webpack:///./src/components/optinView/optinView.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Brand,\n  Button,\n  Card,\n  CardHeaderMain,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  CardTitle,\n  Flex,\n  FlexItem,\n  Form,\n  ActionGroup,\n  Spinner,\n  Title\n} from '@patternfly/react-core';\nimport { connect, reduxActions, reduxSelectors, storeHooks } from '../../redux';\nimport { translate } from '../i18n/i18n';\nimport { PageLayout } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\nimport graphPng2x from '../../images/graph2x.png';\nimport graphPng4x from '../../images/graph4x.png';\n\n/**\n * An account opt-in view.\n *\n * @param {object} props\n * @param {object} props.session\n * @param {Function} props.t\n * @param {Function} props.updateAccountOptIn\n * @param {Function} props.useSelectorsResponse\n * @param {Function} props.useDispatch\n * @fires onSubmitOptIn\n * @returns {Node}\n */\nconst OptinView = ({\n  session,\n  t,\n  updateAccountOptIn,\n  useDispatch: useAliasDispatch,\n  useSelectorsResponse: useAliasSelectorsResponse\n}) => {\n  const dispatch = useAliasDispatch();\n  const { error, fulfilled, pending } = useAliasSelectorsResponse(({ user }) => user?.optin);\n\n  /**\n   * Submit and update account opt-in.\n   *\n   * @event onSubmitOptIn\n   * @returns {void}\n   */\n  const onSubmitOptIn = () => updateAccountOptIn()(dispatch);\n\n  /**\n   * Render opt-in form states.\n   *\n   * @returns {Node}\n   */\n  const renderOptinForm = () => {\n    const disableButton = session.status !== 403;\n\n    if (pending) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              <Spinner size=\"sm\" /> {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n        </Form>\n      );\n    }\n\n    if (error) {\n      return (\n        <p>\n          {t('curiosity-optin.cardIsErrorDescription', { appName: helpers.UI_DISPLAY_NAME }, [\n            <Button isInline component=\"a\" variant=\"link\" target=\"_blank\" href={helpers.UI_LINK_CONTACT_US} />\n          ])}\n        </p>\n      );\n    }\n\n    if (disableButton || fulfilled) {\n      return (\n        <Form>\n          <ActionGroup>\n            <Button variant=\"primary\" isDisabled>\n              {t('curiosity-optin.buttonIsActive', { appName: helpers.UI_DISPLAY_NAME })}\n            </Button>\n          </ActionGroup>\n          {fulfilled && <p>{t('curiosity-optin.cardIsActiveDescription')}</p>}\n        </Form>\n      );\n    }\n\n    return (\n      <Form>\n        <ActionGroup>\n          <Button variant=\"primary\" onClick={onSubmitOptIn}>\n            {t('curiosity-optin.buttonActivate', { appName: helpers.UI_DISPLAY_NAME })}\n          </Button>\n        </ActionGroup>\n      </Form>\n    );\n  };\n\n  /**\n   * Render tour copy and button.\n   *\n   * @returns {Node}\n   */\n  const renderTour = () => (\n    <Card className=\"curiosity-optin-tour\">\n      <CardHeader>\n        <CardHeaderMain>\n          <Brand\n            srcSet={`${graphPng4x} 1064w, ${graphPng2x} 600w`}\n            src={graphPng4x}\n            alt={t('curiosity-optin.tourTitleImageAlt')}\n            aria-hidden\n            className=\"curiosity-optin-image\"\n          />\n        </CardHeaderMain>\n      </CardHeader>\n      <CardTitle>\n        <Title headingLevel=\"h3\" size=\"2xl\">\n          {t('curiosity-optin.tourTitle')}\n        </Title>\n      </CardTitle>\n      <CardBody>{t('curiosity-optin.tourDescription')}</CardBody>\n      <CardFooter>\n        <Button variant=\"secondary\" className=\"uxui-curiosity__button-tour\">\n          {t('curiosity-optin.buttonTour')}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n\n  return (\n    <PageLayout>\n      <Card>\n        <Flex>\n          <Flex flex={{ default: 'flex_2' }}>\n            <FlexItem>\n              <CardTitle key=\"heading1Title\">\n                <Title headingLevel=\"h1\" size=\"2xl\">\n                  {t('curiosity-optin.cardTitle', { appName: helpers.UI_DISPLAY_NAME })}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading1Desc\">\n                {t('curiosity-optin.cardDescription', { appName: helpers.UI_DISPLAY_NAME })}\n              </CardBody>\n\n              <CardTitle key=\"heading2Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardSeeTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading2Desc\">{t('curiosity-optin.cardSeeDescription')}</CardBody>\n\n              <CardTitle key=\"heading3Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardReportTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading3Desc\">{t('curiosity-optin.cardReportDescription')}</CardBody>\n\n              <CardTitle key=\"heading4Title\">\n                <Title headingLevel=\"h2\" size=\"xl\">\n                  {t('curiosity-optin.cardFilterTitle')}\n                </Title>\n              </CardTitle>\n              <CardBody key=\"heading4Desc\">{t('curiosity-optin.cardFilterDescription')}</CardBody>\n\n              <CardFooter>{renderOptinForm()}</CardFooter>\n            </FlexItem>\n          </Flex>\n          <Flex flex={{ default: 'flex_1' }} alignSelf={{ default: 'alignSelfCenter' }}>\n            <FlexItem>\n              <CardBody>{renderTour()}</CardBody>\n            </FlexItem>\n          </Flex>\n        </Flex>\n      </Card>\n    </PageLayout>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{t: Function, session:object, updateAccountOptIn: Function, useDispatch: Function, useSelectorsResponse: Function}}\n */\nOptinView.propTypes = {\n  session: PropTypes.shape({\n    status: PropTypes.number\n  }),\n  t: PropTypes.func,\n  updateAccountOptIn: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelectorsResponse: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: Function, session:object, updateAccountOptIn: Function, useDispatch: Function, useSelectorsResponse: Function}}\n */\nOptinView.defaultProps = {\n  session: {\n    status: null\n  },\n  t: translate,\n  updateAccountOptIn: reduxActions.user.updateAccountOptIn,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelectorsResponse: storeHooks.reactRedux.useSelectorsResponse\n};\n\n/**\n * Apply state to props.\n *\n * @param {object} state\n * @param {object} state.user\n * @returns {object}\n */\nconst makeMapStateToProps = reduxSelectors.user.makeUserSession();\n\nconst ConnectedOptinView = connect(makeMapStateToProps)(OptinView);\n\nexport { ConnectedOptinView as default, ConnectedOptinView, OptinView };\n"],"names":["OptinView","disableButton","session","t","updateAccountOptIn","useAliasDispatch","useDispatch","useAliasSelectorsResponse","useSelectorsResponse","dispatch","user","optin","error","fulfilled","pending","PageLayout","Card","Flex","flex","default","FlexItem","CardTitle","key","Title","headingLevel","size","appName","helpers","CardBody","CardFooter","status","Form","ActionGroup","Button","variant","isDisabled","Spinner","isInline","component","target","href","onClick","alignSelf","className","CardHeader","CardHeaderMain","Brand","srcSet","graphPng4x","graphPng2x","src","alt","defaultProps","translate","reduxActions","storeHooks","makeMapStateToProps","reduxSelectors","ConnectedOptinView","connect"],"sourceRoot":""}
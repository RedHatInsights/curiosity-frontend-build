{"version":3,"file":"js/2293.1669670579179.11b1bbfe0e6f5132d371.js","mappings":"6eAcMA,EAA8B,SAClCC,GAEG,6DADgG,CAAC,EAAC,IAAnGC,qBAAsBC,OAAyB,IAAG,EAAAC,EAAAA,GAAAA,WAAAA,qBAA0C,EAE9F,EAAuDD,GACrD,kBAAGE,EAAS,EAATA,UAAS,OAAOA,SAAsB,QAAb,EAATA,EAAWC,mBAAW,WAAb,EAAT,EAAyBL,EAAG,IADzCM,EAAK,EAALA,MAAOC,EAAS,EAATA,UAAWC,EAAS,EAATA,UAAWC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAI9C,MAAO,CACLJ,MAAAA,EACAE,UAAAA,EACAC,QAASA,GAAWF,IAAa,EACjCG,KAAwB,KAAjBA,aAAI,EAAJA,EAAMC,SAAgBD,EAAK,IAAOA,GAAQ,CAAC,EAEtD,EAaME,EAAwB,SAC5BZ,GAOG,6DADC,CAAC,EAAC,IAJJa,aAAAA,OAAY,IAAG,EAAAC,EAAAA,GAAAA,KAAAA,wBAAyC,MACxDC,YAAaC,OAAgB,IAAG,EAAAb,EAAAA,GAAAA,WAAAA,YAAiC,MACjEc,yBAA0BC,OAA6B,IAAG,EAAAC,EAAAA,+BAA8B,MACxFC,sBAAuBC,OAA0B,IAAG,EAAAtB,EAA2B,EAGjF,GAAsCuB,EAAAA,EAAAA,UAAS,IAAG,eAA3CC,EAAW,KAAEC,EAAc,KAC5BC,EAAQP,EAA8B,CAAEQ,QAAS,CAAEC,WAAY3B,KAC/D4B,EAAWZ,IACjB,EAAsDK,EAA2BrB,GAAG,IAA5EU,KAAAA,OAAI,IAAG,GAAC,EAAC,MAAEF,UAAAA,OAAS,IAAG,GAAK,EAAKqB,GAAQ,YACjD,EAAgCnB,EAAxBA,KAAMoB,OAAQ,IAAG,KAAE,EAY3B,OAVAC,EAAAA,EAAAA,IAAwB,WACtBlB,EAAab,EAAIyB,EAAjBZ,CAAwBe,EAC1B,GAAG,CAACA,EAAU5B,EAAIyB,KAElBO,EAAAA,EAAAA,IAAqB,WACfxB,GACFgB,GAAe,SAAAS,GAAS,wBAAQA,IAAS,OAAKH,GAAQ,GAE1D,GAAG,CAACtB,EAAWsB,KAER,QACLpB,KAAMa,EACNf,UAAAA,GACGqB,EAEP,EAYMK,EAAc,SAClBlC,GAMG,6DADC,CAAC,EAAC,IAHJe,YAAaC,OAAgB,IAAG,EAAAb,EAAAA,GAAAA,WAAAA,YAAiC,MACjEiB,sBAAuBC,OAA0B,IAAG,EAAAtB,EAA2B,MAC/EkB,yBAA0BC,OAA6B,IAAG,EAAAC,EAAAA,+BAA8B,EAGpFS,EAAWZ,IACjB,EAA+BK,EAA2BrB,GAAlDS,EAAO,EAAPA,QAAO,IAAEC,KAAAA,OAAI,IAAG,GAAC,EAAC,EAC1B,GAAkCA,aAAI,EAAJA,EAAMyB,OAAQ,CAAC,EAAlCC,EAAc,EAArBC,MAEFZ,EAAQP,EAA8B,CAAEQ,QAAS,CAAEC,WAAY3B,KAC3BsC,EAA0Db,EAA3Fc,EAAAA,GAAAA,OAA2EC,EAAgBf,EAAlDc,EAAAA,GAAAA,QAyBlD,OApBAE,EAAAA,EAAAA,IAAW,WACTb,EAAS,CACP,CACEc,KAAMC,EAAAA,GAAAA,MAAAA,sCACNC,OAAQ5C,GAEV,CACE0C,KAAMC,EAAAA,GAAAA,UAAAA,uBACN3C,GAAAA,IAGN,IASO,SAAA6C,GACL,IAAQC,EAAWD,EAAXC,OACFC,EAASD,EAAOE,aAAeF,EAAOG,YAAcH,EAAOI,aAE7Dd,EAAiBI,EAAcF,GAASS,IAAWtC,GACrDmB,EAAS,EAAC,QAENc,KAAMC,EAAAA,GAAAA,MAAAA,sCAAuDJ,EAAAA,GAAAA,QAC7DK,OAAQ5C,GACPuC,EAAAA,GAAAA,OAAkCC,EAAcF,IAAK,QAGtDI,KAAMC,EAAAA,GAAAA,MAAAA,sCAAuDJ,EAAAA,GAAAA,OAC7DK,OAAQ5C,GACPuC,EAAAA,GAAAA,MAAiCD,IAI1C,CACF,EAEMa,EAAU,CACdvC,sBAAAA,EACAsB,YAAAA,EACAnC,4BAAAA,E,y/BCtIIqD,EAAkB,CAAC,CAAC,EAAGC,EAAAA,EAAAA,MAEvBC,EAAqBC,IAAAA,cAAoBH,GAOzCI,EAAwB,WAAH,OAASC,EAAAA,EAAAA,YAAWH,EAAmB,EAW5DI,EAAyB,SAC7BC,GAEG,6DADyF,CAAC,EAA3FhC,EAAU,EAAVA,WAAU,IAAE6B,sBAAuBI,OAA0B,IAAG,EAAAJ,EAAqB,EAEvF,EAAyDI,IAApCC,EAAY,EAAxBF,GAA0BG,EAAS,EAATA,UAAWlB,EAAM,EAANA,OACxCmB,EAAgB5D,EAAAA,GAAAA,WAAAA,aAAkC,kBAAG6D,EAAI,EAAJA,KAAI,OAAOA,SAAiB,QAAb,EAAJA,EAAOL,UAAU,WAAb,EAAJ,EAAoBhC,EAAW,QAAEsC,GACjGC,EAAe/D,EAAAA,GAAAA,WAAAA,aAAkC,kBAAG6D,EAAI,EAAJA,KAAI,OAAOA,SAAiB,QAAb,EAAJA,EAAOL,UAAU,WAAb,EAAJ,EAAoBG,EAAU,QAAEG,GAC/FE,EAAYhE,EAAAA,GAAAA,WAAAA,aAAkC,kBAAG6D,EAAI,EAAJA,KAAI,OAAOA,SAAiB,QAAb,EAAJA,EAAOL,UAAU,WAAb,EAAJ,EAAoBf,EAAO,QAAEqB,GAE/F,OAAO,kCACFJ,GACAE,GACAG,GACAC,EAEP,EAUMC,EAAkB,WAAH,6DAAuC,CAAC,EAAC,IAAnCT,UAAAA,OAAS,IAAG,UAAO,EAAEjC,EAAO,EAAPA,QAAO,OAAYgC,EAAuBC,EAAWjC,EAAQ,EAWvG2C,EAA4B,WAAH,6DAI3B,CAAC,EAAC,IAHJV,UAAAA,OAAS,IAAG,oBAAiB,MAC7BW,YAAAA,OAAW,IAAG,EAAAC,EAAAA,GAAAA,wCAAqD,EACnE7C,EAAO,EAAPA,QAAO,OAEP8C,EAAAA,GAAAA,aAAyB,kBAElBJ,KACAV,EAAuBC,EAAWjC,IAEvC4C,EACD,EAaGnD,EAAiC,WAAH,+DAMhC,CAAC,EAAC,IALJsD,aAAAA,OAAY,IAAG,MAAG,MAClBC,cAAAA,OAAa,IAAG,IAAC,MACjBf,UAAAA,OAAS,IAAG,yBAAsB,MAClCW,YAAAA,OAAW,IAAG,EAAAC,EAAAA,GAAAA,mCAAgD,EAC9D7C,EAAO,EAAPA,QAAO,OAEP8C,EAAAA,GAAAA,aAAyB,+BAEpBjC,EAAAA,GAAAA,MAAiCkC,IAAY,SAC7ClC,EAAAA,GAAAA,OAAkCmC,GAAa,GAC7CN,KACAV,EAAuBC,EAAWjC,IAEvC4C,EACD,EAWGK,EAAgC,WAAH,6DAI/B,CAAC,EAAC,IAHJhB,UAAAA,OAAS,IAAG,wBAAqB,MACjCW,YAAAA,OAAW,IAAG,EAAAC,EAAAA,GAAAA,mCAAgD,EAC9D7C,EAAO,EAAPA,QAAO,OAEP8C,EAAAA,GAAAA,aAAyB,kBAElBJ,KACAV,EAAuBC,EAAWjC,IAEvC4C,EACD,EAWGM,EAAwC,WAAH,6DAIvC,CAAC,EAAC,IAHJjB,UAAAA,OAAS,IAAG,gCAA6B,MACzCW,YAAAA,OAAW,IAAG,EAAAC,EAAAA,GAAAA,mCAAgD,EAC9D7C,EAAO,EAAPA,QAAO,OAEP8C,EAAAA,GAAAA,aAAyB,kBAElBJ,KACAV,EAAuBC,EAAWjC,IAEvC4C,EACD,EAUGO,EAAoB,WAGf,6DAAP,CAAC,EAAC,IAFJT,gBAAiBU,OAAoB,IAAG,EAAAV,EAAe,MACvDZ,sBAAuBI,OAA0B,IAAG,EAAAJ,EAAqB,EAEzE,EAAsDsB,IAAdC,EAAS,EAAxCxC,EAAAA,GAAAA,KACT,EAMIqB,IAA4B,IAL9BoB,oBAAAA,OAAmB,IAAG,KAAE,MACxBC,wBAAAA,OAAuB,IAAG,KAAE,MAC5BC,qCAAAA,OAAoC,IAAG,KAAE,EACzCC,EAAuB,EAAvBA,wBACGC,GAAM,YAGLC,GAAiBC,EAAAA,EAAAA,cAAY,WACjC,IAAgC,IAA5BH,EAAkC,CACpC,IAAMI,EAAgB,SAAH,GAAmC,IAA7BvF,EAAE,EAAFA,GAAIwF,EAAM,EAANA,OAC3B,OAD6C,EAAVC,YAI5B,IAAIC,OAAOX,EAAW,KAAKY,KAAKH,IAAW,IAAIE,OAAOX,EAAW,KAAKY,KAAK3F,EACpF,EAEA,OAAO,kBACFoF,GAAM,IACTJ,oBAAqBA,EAAoBY,OAAOL,GAChDN,wBAAyBA,EAAwBW,OAAOL,GACxDL,qCAAsCA,EAAqCU,OAAOL,IAEtF,CAEA,OAAO,kBACFH,GAAM,IACTJ,oBAAAA,EACAC,wBAAAA,EACAC,qCAAAA,GAEJ,GAAG,CACDE,EACAJ,EACAC,EACAC,EACAC,EACAJ,IAGF,OAAOM,GACT,EASMQ,EAAa,WAAwF,6DAAP,CAAC,EAAC,IAAhFrC,sBAAuBI,OAA0B,IAAG,EAAAJ,EAAqB,EAC7F,EAA0DI,IAAlDkC,EAAY,EAAZA,aAAchC,EAAS,EAATA,UAAWiC,EAAY,EAAZA,aAAcnD,EAAM,EAANA,OAC/C,MAAO,CACLkD,aAAAA,EACAhC,UAAAA,EACAiC,aAAAA,EACAnD,OAAAA,EAEJ,EASMoD,EAAwB,WAA4E,6DAAP,CAAC,EAAC,IAApEnB,kBAAmBoB,OAAsB,IAAG,EAAApB,EAAiB,EAC5F,EAA2DoB,IAAnDjB,EAAmB,EAAnBA,oBAAmB,IAAEkB,qBAAAA,OAAoB,IAAG,GAAC,EAAC,EACtD,MAAO,CACLC,QAASnB,EACToB,SAAUF,EAEd,EASMG,EAAkC,WAA4E,6DAAP,CAAC,EAAC,IAApExB,kBAAmBoB,OAAsB,IAAG,EAAApB,EAAiB,EACtG,EAAwFoB,IAAwB,IAAxGK,qBAAAA,OAAoB,IAAG,GAAC,EAAC,EAAEC,EAAoB,EAApBA,qBAAoB,IAAEC,sBAAAA,OAAqB,IAAG,GAAC,EAAC,EACnF,MAAO,CACLL,QAASI,EACT1C,aAAcyC,EACdF,SAAUI,EAEd,EASMC,EAAiC,WAA4E,6DAAP,CAAC,EAAC,IAApE5B,kBAAmBoB,OAAsB,IAAG,EAAApB,EAAiB,EACrG,EAAmEoB,IAA3DhB,EAAuB,EAAvBA,wBAAuB,IAAEyB,yBAAAA,OAAwB,IAAG,GAAC,EAAC,EAC9D,MAAO,CACLP,QAASlB,EACTmB,SAAUM,EAEd,EASMC,EAAyC,WAEpC,6DAAP,CAAC,EAAC,IADJ9B,kBAAmBoB,OAAsB,IAAG,EAAApB,EAAiB,EAE7D,EAA6FoB,IAArFf,EAAoC,EAApCA,qCAAoC,IAAE0B,sCAAAA,OAAqC,IAAG,GAAC,EAAC,EACxF,MAAO,CACLT,QAASjB,EACTkB,SAAUQ,EAEd,EASMC,EAA0B,WAA4E,6DAAP,CAAC,EAAC,IAApEhC,kBAAmBoB,OAAsB,IAAG,EAAApB,EAAiB,EAC9F,EAIIoB,IAHFa,EAAqB,EAArBA,sBAAqB,IACrBC,uBAAAA,OAAsB,IAAG,GAAC,EAAC,EAC3BC,EAA8B,EAA9BA,+BAEF,MAAO,CACLb,QAASW,EACTG,iBAAkBD,EAClBZ,SAAUW,EAEd,EAEM5D,EAAU,CACdG,mBAAAA,EACAF,gBAAAA,EACAyB,kBAAAA,EACAqC,SAAU9C,EACV+C,gBAAiBzD,EACjB0D,mBAAoB/C,EACpBgD,wBAAyBlG,EACzBmG,uBAAwB3C,EACxB4C,+BAAgC3C,EAChCiB,WAAAA,EACA2B,eAAgBxB,EAChByB,yBAA0BpB,EAC1BqB,wBAAyBjB,EACzBkB,gCAAiChB,EACjCiB,iBAAkBf,E,iCC7TpBgB,EAAOC,QAAU,SAASC,EAAMC,EAAGC,GACjC,GAAID,IAAMC,EAAG,OAAO,EAEpB,GAAID,GAAKC,GAAiB,iBAALD,GAA6B,iBAALC,EAAe,CAC1D,GAAID,EAAEE,cAAgBD,EAAEC,YAAa,OAAO,EAE5C,IAAIvH,EAAQwH,EAAGC,EACf,GAAIC,MAAMC,QAAQN,GAAI,CAEpB,IADArH,EAASqH,EAAErH,SACGsH,EAAEtH,OAAQ,OAAO,EAC/B,IAAKwH,EAAIxH,EAAgB,GAARwH,KACf,IAAKJ,EAAMC,EAAEG,GAAIF,EAAEE,IAAK,OAAO,EACjC,OAAO,CACT,CAIA,GAAIH,EAAEE,cAAgBxC,OAAQ,OAAOsC,EAAEO,SAAWN,EAAEM,QAAUP,EAAEQ,QAAUP,EAAEO,MAC5E,GAAIR,EAAES,UAAYC,OAAOC,UAAUF,QAAS,OAAOT,EAAES,YAAcR,EAAEQ,UACrE,GAAIT,EAAEY,WAAaF,OAAOC,UAAUC,SAAU,OAAOZ,EAAEY,aAAeX,EAAEW,WAIxE,IADAjI,GADAyH,EAAOM,OAAON,KAAKJ,IACLrH,UACC+H,OAAON,KAAKH,GAAGtH,OAAQ,OAAO,EAE7C,IAAKwH,EAAIxH,EAAgB,GAARwH,KACf,IAAKO,OAAOC,UAAUE,eAAeC,KAAKb,EAAGG,EAAKD,IAAK,OAAO,EAEhE,IAAKA,EAAIxH,EAAgB,GAARwH,KAAY,CAC3B,IAAIY,EAAMX,EAAKD,GAEf,KAAY,WAARY,GAAoBf,EAAEgB,UAOrBjB,EAAMC,EAAEe,GAAMd,EAAEc,KAAO,OAAO,CACrC,CAEA,OAAO,CACT,CAGA,OAAOf,GAAIA,GAAKC,GAAIA,CACtB,C,sBCpDA,IAAIgB,EAAUP,OAAON,KAErBN,EAAQ,EAAQ,SAAgBE,EAAGC,GACjC,GAAID,IAAMC,EAAG,OAAO,EACpB,KAAMD,aAAaU,QAAaT,aAAaS,QAAS,OAAO,EAK7D,IAHA,IAAIN,EAAOa,EAAQjB,GACfrH,EAASyH,EAAKzH,OAETwH,EAAI,EAAGA,EAAIxH,EAAQwH,IAC1B,KAAMC,EAAKD,KAAMF,GAAI,OAAO,EAE9B,IAASE,EAAI,EAAGA,EAAIxH,EAAQwH,IAC1B,GAAIH,EAAEI,EAAKD,MAAQF,EAAEG,EAAKD,IAAK,OAAO,EAExC,OAAOxH,IAAWsI,EAAQhB,GAAGtH,MAC/B,C,oDCIA,IAlB6B,SAAUuI,EAAQC,EAAMC,GAYjD,IAAIC,GAAM,IAAAC,aAAOrF,GACZoF,EAAIE,SAAYH,EAAUD,EAAME,EAAIE,WACrCF,EAAIE,QAAUJ,IAElB,IAAAK,WAAUN,EAAQG,EAAIE,QAC1B,C,+FClBA,E,MAAA,GCaA,EAX2B,SAAUL,EAAQC,IASzC,EAAAM,EAAA,GAAuBP,EAAQC,EAAMO,EACzC,C,+DCVIC,EAAuB,SAAUC,EAAUC,GAC3C,OAAOD,EAASE,OAAM,SAAUC,EAAKC,GAAS,OAAO,OAAeD,EAAKF,EAASG,GAAS,GAC/F,EAYA,IAX8B,SAAUd,EAAQC,IAS5C,OAAuBD,EAAQC,EAAMQ,EACzC,C","sources":["webpack:///./src/components/inventoryGuests/inventoryGuestsContext.js","webpack:///./src/components/productView/productViewContext.js","webpack:///./node_modules/fast-deep-equal/react.js","webpack:///./node_modules/fast-shallow-equal/index.js","webpack:///./node_modules/react-use/esm/useCustomCompareEffect.js","webpack:///./node_modules/react-use/esm/misc/isDeepEqual.js","webpack:///./node_modules/react-use/esm/useDeepCompareEffect.js","webpack:///./node_modules/react-use/esm/useShallowCompareEffect.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDeepCompareEffect, useUnmount, useShallowCompareEffect } from 'react-use';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProductInventoryGuestsQuery } from '../productView/productViewContext';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * Guests inventory selector response.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}), pending: (*|boolean), fulfilled, error}}\n */\nconst useSelectorsGuestsInventory = (\n  id,\n  { useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse } = {}\n) => {\n  const { error, cancelled, fulfilled, pending, data } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.hostsGuests?.[id]\n  );\n\n  return {\n    error,\n    fulfilled,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * Combined Redux RHSM Actions, getHostsInventoryGuests, and inventory selector response.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsInventory\n * @returns {Function}\n */\nconst useGetGuestsInventory = (\n  id,\n  {\n    getInventory = reduxActions.rhsm.getHostsInventoryGuests,\n    useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n    useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryGuestsQuery,\n    useSelectorsInventory: useAliasSelectorsInventory = useSelectorsGuestsInventory\n  } = {}\n) => {\n  const [updatedData, setUpdatedData] = useState([]);\n  const query = useAliasProductInventoryQuery({ options: { overrideId: id } });\n  const dispatch = useAliasDispatch();\n  const { data = {}, fulfilled = false, ...response } = useAliasSelectorsInventory(id);\n  const { data: listData = [] } = data;\n\n  useShallowCompareEffect(() => {\n    getInventory(id, query)(dispatch);\n  }, [dispatch, id, query]);\n\n  useDeepCompareEffect(() => {\n    if (fulfilled) {\n      setUpdatedData(prevState => [...prevState, ...listData]);\n    }\n  }, [fulfilled, listData]);\n\n  return {\n    data: updatedData,\n    fulfilled,\n    ...response\n  };\n};\n\n/**\n * Use paging as onScroll event for guests inventory.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useSelectorsInventory\n * @param {Function} options.useProductInventoryQuery\n * @returns {Function}\n */\nconst useOnScroll = (\n  id,\n  {\n    useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n    useSelectorsInventory: useAliasSelectorsInventory = useSelectorsGuestsInventory,\n    useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryGuestsQuery\n  } = {}\n) => {\n  const dispatch = useAliasDispatch();\n  const { pending, data = {} } = useAliasSelectorsInventory(id);\n  const { count: numberOfGuests } = data?.meta || {};\n\n  const query = useAliasProductInventoryQuery({ options: { overrideId: id } });\n  const { [RHSM_API_QUERY_SET_TYPES.LIMIT]: limit, [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage } = query;\n\n  /**\n   * Reset paging in scenarios where inventory is filtered, or guests is collapsed.\n   */\n  useUnmount(() => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n        viewId: id\n      },\n      {\n        type: reduxTypes.inventory.CLEAR_INVENTORY_GUESTS,\n        id\n      }\n    ]);\n  });\n\n  /**\n   * On scroll, dispatch type.\n   *\n   * @event onScroll\n   * @param {object} event\n   * @returns {void}\n   */\n  return event => {\n    const { target } = event;\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > currentPage + limit && bottom && !pending) {\n      dispatch([\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n          viewId: id,\n          [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage + limit\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n          viewId: id,\n          [RHSM_API_QUERY_SET_TYPES.LIMIT]: limit\n        }\n      ]);\n    }\n  };\n};\n\nconst context = {\n  useGetGuestsInventory,\n  useOnScroll,\n  useSelectorsGuestsInventory\n};\n\nexport { context as default, context, useGetGuestsInventory, useOnScroll, useSelectorsGuestsInventory };\n","import React, { useCallback, useContext } from 'react';\nimport { reduxHelpers } from '../../redux/common';\nimport { storeHooks } from '../../redux/hooks';\nimport { rhsmConstants, RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst ProductViewContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated product view context.\n *\n * @returns {React.Context<{}>}\n */\nconst useProductViewContext = () => useContext(ProductViewContext);\n\n/**\n * Return a query object from initial product config and Redux store.\n *\n * @param {string} queryType An identifier used to pull from both config and Redux, they should named the same.\n * @param {object} options\n * @param {string} options.overrideId A custom identifier, used for scenarios like the Guest inventory IDs\n * @param {object} options.useProductViewContext\n * @returns {object}\n */\nconst useProductQueryFactory = (\n  queryType,\n  { overrideId, useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}\n) => {\n  const { [queryType]: initialQuery, productId, viewId } = useAliasProductViewContext();\n  const queryOverride = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[overrideId], undefined);\n  const queryProduct = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[productId], undefined);\n  const queryView = storeHooks.reactRedux.useSelector(({ view }) => view?.[queryType]?.[viewId], undefined);\n\n  return {\n    ...initialQuery,\n    ...queryOverride,\n    ...queryProduct,\n    ...queryView\n  };\n};\n\n/**\n * Return a base product query\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductQuery = ({ queryType = 'query', options } = {}) => useProductQueryFactory(queryType, options);\n\n/**\n * Return the graph query based off of tally and capacity.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductGraphTallyQuery = ({\n  queryType = 'graphTallyQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return the inventory query for guests. Use fallback/defaults for guests offset, limit.\n *\n * @param {object} options\n * @param {number} options.defaultLimit\n * @param {number} options.defaultOffset\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryGuestsQuery = ({\n  defaultLimit = 100,\n  defaultOffset = 0,\n  queryType = 'inventoryGuestsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      [RHSM_API_QUERY_SET_TYPES.LIMIT]: defaultLimit,\n      [RHSM_API_QUERY_SET_TYPES.OFFSET]: defaultOffset,\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for hosts.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryHostsQuery = ({\n  queryType = 'inventoryHostsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for subscriptions.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventorySubscriptionsQuery = ({\n  queryType = 'inventorySubscriptionsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useProductQuery(),\n      ...useProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Get a filtered product configuration context.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductViewContext\n * @returns {object}\n */\nconst useProductContext = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductViewContext: useAliasProductViewContext = useProductViewContext\n} = {}) => {\n  const { [RHSM_API_QUERY_SET_TYPES.UOM]: uomFilter } = useAliasProductQuery();\n  const {\n    initialGraphFilters = [],\n    initialInventoryFilters = [],\n    initialSubscriptionsInventoryFilters = [],\n    productContextFilterUom,\n    ...config\n  } = useAliasProductViewContext();\n\n  const applyUomFilter = useCallback(() => {\n    if (productContextFilterUom === true) {\n      const filterFilters = ({ id, metric, isOptional }) => {\n        if (!isOptional) {\n          return true;\n        }\n        return new RegExp(uomFilter, 'i').test(metric) || new RegExp(uomFilter, 'i').test(id);\n      };\n\n      return {\n        ...config,\n        initialGraphFilters: initialGraphFilters.filter(filterFilters),\n        initialInventoryFilters: initialInventoryFilters.filter(filterFilters),\n        initialSubscriptionsInventoryFilters: initialSubscriptionsInventoryFilters.filter(filterFilters)\n      };\n    }\n\n    return {\n      ...config,\n      initialGraphFilters,\n      initialInventoryFilters,\n      initialSubscriptionsInventoryFilters\n    };\n  }, [\n    config,\n    initialGraphFilters,\n    initialInventoryFilters,\n    initialSubscriptionsInventoryFilters,\n    productContextFilterUom,\n    uomFilter\n  ]);\n\n  return applyUomFilter();\n};\n\n/**\n * Return product identifiers.\n *\n * @param {object} options\n * @param {Function} options.useProductViewContext\n * @returns {{productLabel: string, viewId: string, productId: string, productGroup: string}}\n */\nconst useProduct = ({ useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}) => {\n  const { productGroup, productId, productLabel, viewId } = useAliasProductViewContext();\n  return {\n    productGroup,\n    productId,\n    productLabel,\n    viewId\n  };\n};\n\n/**\n * Return graph configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductGraphConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialGraphFilters, initialGraphSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGraphFilters,\n    settings: initialGraphSettings\n  };\n};\n\n/**\n * Return guests inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryGuestsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { inventoryGuestsQuery = {}, initialGuestsFilters, initialGuestsSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGuestsFilters,\n    initialQuery: inventoryGuestsQuery,\n    settings: initialGuestsSettings\n  };\n};\n\n/**\n * Return hosts inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryHostsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialInventoryFilters, initialInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialInventoryFilters,\n    settings: initialInventorySettings\n  };\n};\n\n/**\n * Return subscriptions inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventorySubscriptionsConfig = ({\n  useProductContext: useAliasProductContext = useProductContext\n} = {}) => {\n  const { initialSubscriptionsInventoryFilters, initialSubscriptionsInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialSubscriptionsInventoryFilters,\n    settings: initialSubscriptionsInventorySettings\n  };\n};\n\n/**\n * Return primary toolbar configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductToolbarConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const {\n    initialToolbarFilters,\n    initialToolbarSettings = {},\n    initialSecondaryToolbarFilters\n  } = useAliasProductContext();\n  return {\n    filters: initialToolbarFilters,\n    secondaryFilters: initialSecondaryToolbarFilters,\n    settings: initialToolbarSettings\n  };\n};\n\nconst context = {\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useQuery: useProductQuery,\n  useQueryFactory: useProductQueryFactory,\n  useGraphTallyQuery: useProductGraphTallyQuery,\n  useInventoryGuestsQuery: useProductInventoryGuestsQuery,\n  useInventoryHostsQuery: useProductInventoryHostsQuery,\n  useInventorySubscriptionsQuery: useProductInventorySubscriptionsQuery,\n  useProduct,\n  useGraphConfig: useProductGraphConfig,\n  useInventoryGuestsConfig: useProductInventoryGuestsConfig,\n  useInventoryHostsConfig: useProductInventoryHostsConfig,\n  useInventorySubscriptionsConfig: useProductInventorySubscriptionsConfig,\n  useToolbarConfig: useProductToolbarConfig\n};\n\nexport {\n  context as default,\n  context,\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useProductQuery,\n  useProductQueryFactory,\n  useProductGraphTallyQuery,\n  useProductInventoryGuestsQuery,\n  useProductInventoryHostsQuery,\n  useProductInventorySubscriptionsQuery,\n  useProduct,\n  useProductGraphConfig,\n  useProductInventoryGuestsConfig,\n  useProductInventoryHostsConfig,\n  useProductInventorySubscriptionsConfig,\n  useProductToolbarConfig\n};\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        continue;\n      }\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","var keyList = Object.keys;\n\nexports.equal = function equal (a, b) {\n  if (a === b) return true;\n  if (!(a instanceof Object) || !(b instanceof Object)) return false;\n\n  var keys = keyList(a);\n  var length = keys.length;\n\n  for (var i = 0; i < length; i++)\n    if (!(keys[i] in b)) return false;\n\n  for (var i = 0; i < length; i++)\n    if (a[keys[i]] !== b[keys[i]]) return false;\n\n  return length === keyList(b).length;\n};\n","import { useEffect, useRef } from 'react';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useCustomCompareEffect = function (effect, deps, depsEqual) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useCustomCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useCustomCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n        if (typeof depsEqual !== 'function') {\n            console.warn('`useCustomCompareEffect` should be used with depsEqual callback for comparing deps list');\n        }\n    }\n    var ref = useRef(undefined);\n    if (!ref.current || !depsEqual(deps, ref.current)) {\n        ref.current = deps;\n    }\n    useEffect(effect, ref.current);\n};\nexport default useCustomCompareEffect;\n","import isDeepEqualReact from 'fast-deep-equal/react';\nexport default isDeepEqualReact;\n","import useCustomCompareEffect from './useCustomCompareEffect';\nimport isDeepEqual from './misc/isDeepEqual';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useDeepCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useDeepCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useDeepCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, isDeepEqual);\n};\nexport default useDeepCompareEffect;\n","import { equal as isShallowEqual } from 'fast-shallow-equal';\nimport useCustomCompareEffect from './useCustomCompareEffect';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar shallowEqualDepsList = function (prevDeps, nextDeps) {\n    return prevDeps.every(function (dep, index) { return isShallowEqual(dep, nextDeps[index]); });\n};\nvar useShallowCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useShallowCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useShallowCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, shallowEqualDepsList);\n};\nexport default useShallowCompareEffect;\n"],"names":["useSelectorsGuestsInventory","id","useSelectorsResponse","useAliasSelectorsResponse","storeHooks","inventory","hostsGuests","error","cancelled","fulfilled","pending","data","length","useGetGuestsInventory","getInventory","reduxActions","useDispatch","useAliasDispatch","useProductInventoryQuery","useAliasProductInventoryQuery","useProductInventoryGuestsQuery","useSelectorsInventory","useAliasSelectorsInventory","useState","updatedData","setUpdatedData","query","options","overrideId","dispatch","response","listData","useShallowCompareEffect","useDeepCompareEffect","prevState","useOnScroll","meta","numberOfGuests","count","limit","RHSM_API_QUERY_SET_TYPES","currentPage","useUnmount","type","reduxTypes","viewId","event","target","bottom","scrollHeight","scrollTop","clientHeight","context","DEFAULT_CONTEXT","helpers","ProductViewContext","React","useProductViewContext","useContext","useProductQueryFactory","queryType","useAliasProductViewContext","initialQuery","productId","queryOverride","view","undefined","queryProduct","queryView","useProductQuery","useProductGraphTallyQuery","schemaCheck","rhsmConstants","reduxHelpers","defaultLimit","defaultOffset","useProductInventoryHostsQuery","useProductInventorySubscriptionsQuery","useProductContext","useAliasProductQuery","uomFilter","initialGraphFilters","initialInventoryFilters","initialSubscriptionsInventoryFilters","productContextFilterUom","config","applyUomFilter","useCallback","filterFilters","metric","isOptional","RegExp","test","filter","useProduct","productGroup","productLabel","useProductGraphConfig","useAliasProductContext","initialGraphSettings","filters","settings","useProductInventoryGuestsConfig","inventoryGuestsQuery","initialGuestsFilters","initialGuestsSettings","useProductInventoryHostsConfig","initialInventorySettings","useProductInventorySubscriptionsConfig","initialSubscriptionsInventorySettings","useProductToolbarConfig","initialToolbarFilters","initialToolbarSettings","initialSecondaryToolbarFilters","secondaryFilters","useQuery","useQueryFactory","useGraphTallyQuery","useInventoryGuestsQuery","useInventoryHostsQuery","useInventorySubscriptionsQuery","useGraphConfig","useInventoryGuestsConfig","useInventoryHostsConfig","useInventorySubscriptionsConfig","useToolbarConfig","module","exports","equal","a","b","constructor","i","keys","Array","isArray","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","$$typeof","keyList","effect","deps","depsEqual","ref","useRef","current","useEffect","useCustomCompareEffect","isDeepEqual","shallowEqualDepsList","prevDeps","nextDeps","every","dep","index"],"sourceRoot":""}
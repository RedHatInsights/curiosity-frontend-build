{"version":3,"file":"js/9517.25c12ad4a9ce3db3d651.js","mappings":"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","sources":["webpack:///./src/components/form/textInput.js","webpack:///./src/components/productView/productViewContext.js","webpack:///./src/components/toolbar/toolbarFieldDisplayName.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TextInput as PfTextInput } from '@patternfly/react-core';\nimport { createMockEvent } from './formHelpers';\nimport { helpers } from '../../common';\n\n/**\n * Text input with state.\n *\n * @memberof Form\n * @module TextInput\n */\n\n/**\n * A wrapper for Patternfly TextInput. Provides restructured event data,\n * and an onClear event for the search type.\n *\n * @augments React.Component\n * @fires onKeyUp\n * @fires onMouseUp\n * @fires onChange\n */\nclass TextInput extends React.Component {\n  state = {\n    updatedValue: null\n  };\n\n  /**\n   * onKeyUp event, provide additional functionality for onClear event.\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  onKeyUp = event => {\n    const { onClear, onKeyUp, type } = this.props;\n    const { currentTarget, keyCode } = event;\n    const clonedEvent = { ...event };\n\n    onKeyUp(createMockEvent(event, true));\n\n    if (keyCode === 27) {\n      if (type === 'search' && currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      } else {\n        this.setState({ updatedValue: '' }, () => {\n          onClear(\n            createMockEvent({ ...clonedEvent, ...{ currentTarget: { ...clonedEvent.currentTarget, value: '' } } })\n          );\n        });\n      }\n    }\n  };\n\n  /**\n   * onMouseUp event, provide additional functionality for onClear event.\n   *\n   * @event onMouseUp\n   * @param {object} event\n   */\n  onMouseUp = event => {\n    const { onClear, onMouseUp, type } = this.props;\n    const { currentTarget } = event;\n    const clonedEvent = { ...event };\n\n    onMouseUp(createMockEvent(event, true));\n\n    if (type !== 'search' || currentTarget.value === '') {\n      return;\n    }\n\n    setTimeout(() => {\n      if (currentTarget.value === '') {\n        onClear(createMockEvent(clonedEvent));\n      }\n    });\n  };\n\n  /**\n   * onChange event, provide restructured event.\n   *\n   * @event onChange\n   * @param {string} value\n   * @param {object} event\n   */\n  onChange = (value, event) => {\n    const { onChange } = this.props;\n    const clonedEvent = { ...event };\n\n    this.setState({ updatedValue: value }, () => {\n      onChange(createMockEvent(clonedEvent));\n    });\n  };\n\n  /**\n   * Render a text input.\n   *\n   * @returns {React.ReactNode}\n   */\n  render() {\n    const { updatedValue } = this.state;\n    const {\n      className,\n      id,\n      isDisabled,\n      name,\n      onChange,\n      onClear,\n      onKeyUp,\n      onMouseUp,\n      isReadOnly,\n      type,\n      value,\n      ...props\n    } = this.props;\n    const updatedName = name || helpers.generateId();\n    const updatedId = id || updatedName;\n\n    return (\n      <PfTextInput\n        id={updatedId}\n        name={updatedName}\n        className={`curiosity-text-input ${className}`}\n        isDisabled={isDisabled || false}\n        onChange={this.onChange}\n        onKeyUp={this.onKeyUp}\n        onMouseUp={this.onMouseUp}\n        isReadOnly={isReadOnly || false}\n        type={type}\n        value={updatedValue ?? value ?? ''}\n        {...props}\n      />\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.propTypes = {\n  className: PropTypes.string,\n  id: PropTypes.string,\n  isDisabled: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  name: PropTypes.string,\n  onChange: PropTypes.func,\n  onClear: PropTypes.func,\n  onKeyUp: PropTypes.func,\n  onMouseUp: PropTypes.func,\n  type: PropTypes.string,\n  value: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{onKeyUp: Function, isReadOnly: boolean, onChange: Function, onClear: Function,\n *     name: string, className: string, id: string, isDisabled: boolean, onMouseUp: Function,\n *     type: string, value: string}}\n */\nTextInput.defaultProps = {\n  className: '',\n  id: null,\n  isDisabled: false,\n  isReadOnly: false,\n  name: null,\n  onChange: helpers.noop,\n  onClear: helpers.noop,\n  onKeyUp: helpers.noop,\n  onMouseUp: helpers.noop,\n  type: 'text',\n  value: ''\n};\n\nexport { TextInput as default, TextInput };\n","import React, { useCallback, useContext } from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { reduxHelpers } from '../../redux/common';\nimport { storeHooks } from '../../redux/hooks';\nimport { rhsmConstants, RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common/helpers';\n\n/**\n * @memberof ProductView\n * @module ProductViewContext\n */\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst ProductViewContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated product view context.\n *\n * @returns {React.Context<{}>}\n */\nconst useProductViewContext = () => useContext(ProductViewContext);\n\n/**\n * Return a query object from initial product config and Redux store.\n *\n * @param {string} queryType An identifier used to pull from both config and Redux, they should named the same.\n * @param {object} options\n * @param {string} options.overrideId A custom identifier, used for scenarios like the Guest inventory IDs\n * @param {object} options.useProductViewContext\n * @param {Function} options.useSelectors\n * @returns {object}\n */\nconst useProductQueryFactory = (\n  queryType,\n  {\n    overrideId,\n    useProductViewContext: useAliasProductViewContext = useProductViewContext,\n    useSelectors: useAliasSelectors = storeHooks.reactRedux.useSelectors\n  } = {}\n) => {\n  const { [queryType]: initialQuery, productId, viewId } = useAliasProductViewContext();\n  const [queryOverride, queryProduct, queryView] = useAliasSelectors([\n    ({ view }) => view?.[queryType]?.[overrideId],\n    ({ view }) => view?.[queryType]?.[productId],\n    ({ view }) => view?.[queryType]?.[viewId]\n  ]);\n\n  return {\n    ...initialQuery,\n    ...queryOverride,\n    ...queryProduct,\n    ...queryView\n  };\n};\n\n/**\n * Return a base product query\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductQuery = ({\n  queryType = 'query',\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) => useAliasProductQueryFactory(queryType, options);\n\n/**\n * Return the graph query based off of tally and capacity.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductGraphTallyQuery = ({\n  queryType = 'graphTallyQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return the inventory query for guests. Use fallback/defaults for guests offset, limit.\n *\n * @param {object} options\n * @param {number} options.defaultLimit\n * @param {number} options.defaultOffset\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryGuestsQuery = ({\n  defaultLimit = 100,\n  defaultOffset = 0,\n  queryType = 'inventoryGuestsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      [RHSM_API_QUERY_SET_TYPES.LIMIT]: defaultLimit,\n      [RHSM_API_QUERY_SET_TYPES.OFFSET]: defaultOffset,\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for hosts.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryHostsQuery = ({\n  queryType = 'inventoryHostsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for subscriptions.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventorySubscriptionsQuery = ({\n  queryType = 'inventorySubscriptionsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return a unified query for toolbars\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductGraphTallyQuery\n * @param {Function} options.useProductInventoryHostsQuery\n * @param {Function} options.useProductInventorySubscriptionsQuery\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductToolbarQuery = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery = useProductGraphTallyQuery,\n  useProductInventoryHostsQuery: useAliasProductInventoryHostsQuery = useProductInventoryHostsQuery,\n  useProductInventorySubscriptionsQuery:\n    useAliasProductInventorySubscriptionsQuery = useProductInventorySubscriptionsQuery,\n  options\n} = {}) => ({\n  ...useAliasProductQuery({ options }),\n  ...useAliasProductGraphTallyQuery({ options }),\n  ...useAliasProductInventoryHostsQuery({ options }),\n  ...useAliasProductInventorySubscriptionsQuery({ options })\n});\n\n/**\n * Get a filtered product configuration context.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductViewContext\n * @returns {object}\n */\nconst useProductContext = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductViewContext: useAliasProductViewContext = useProductViewContext\n} = {}) => {\n  const { [RHSM_API_QUERY_SET_TYPES.UOM]: uomFilter } = useAliasProductQuery();\n  const {\n    initialGraphFilters = [],\n    initialInventoryFilters = [],\n    initialSubscriptionsInventoryFilters = [],\n    productContextFilterUom,\n    ...config\n  } = useAliasProductViewContext();\n\n  const applyUomFilter = useCallback(() => {\n    if (productContextFilterUom === true) {\n      const filterFilters = ({ id, metric, isOptional }) => {\n        if (!isOptional) {\n          return true;\n        }\n        return new RegExp(uomFilter, 'i').test(metric) || new RegExp(uomFilter, 'i').test(id);\n      };\n\n      /**\n       * Allowing nested filters beside normal filters we take the quick path, just run the loop twice.\n       * Make sure to set \"isOptional\" false when it comes to nested filters in the event someone\n       * combined a config setting in the subsequent loop.\n       */\n      const updatedGraphFilters = _cloneDeep(initialGraphFilters)\n        .map(({ filters, ...rest }) => ({\n          ...rest,\n          filters: filters.filter(filterFilters),\n          isOptional: false\n        }))\n        .filter(filterFilters);\n\n      return {\n        ...config,\n        initialGraphFilters: updatedGraphFilters,\n        initialInventoryFilters: initialInventoryFilters.filter(filterFilters),\n        initialSubscriptionsInventoryFilters: initialSubscriptionsInventoryFilters.filter(filterFilters)\n      };\n    }\n\n    return {\n      ...config,\n      initialGraphFilters,\n      initialInventoryFilters,\n      initialSubscriptionsInventoryFilters\n    };\n  }, [\n    config,\n    initialGraphFilters,\n    initialInventoryFilters,\n    initialSubscriptionsInventoryFilters,\n    productContextFilterUom,\n    uomFilter\n  ]);\n\n  return applyUomFilter();\n};\n\n/**\n * Return product identifiers.\n *\n * @param {object} options\n * @param {Function} options.useProductViewContext\n * @returns {{productLabel, viewId, productId, productGroup, productVariants}}\n */\nconst useProduct = ({ useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}) => {\n  const { productGroup, productId, productLabel, productVariants, viewId } = useAliasProductViewContext();\n  return {\n    productGroup,\n    productId,\n    productLabel,\n    productVariants,\n    viewId\n  };\n};\n\n/**\n * Return graph configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductGraphConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialGraphFilters, initialGraphSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGraphFilters,\n    settings: initialGraphSettings\n  };\n};\n\n/**\n * Return guests inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryGuestsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { inventoryGuestsQuery = {}, initialGuestsFilters, initialGuestsSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGuestsFilters,\n    initialQuery: inventoryGuestsQuery,\n    settings: initialGuestsSettings\n  };\n};\n\n/**\n * Return hosts inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryHostsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialInventoryFilters, initialInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialInventoryFilters,\n    settings: initialInventorySettings\n  };\n};\n\n/**\n * Return subscriptions inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventorySubscriptionsConfig = ({\n  useProductContext: useAliasProductContext = useProductContext\n} = {}) => {\n  const { initialSubscriptionsInventoryFilters, initialSubscriptionsInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialSubscriptionsInventoryFilters,\n    settings: initialSubscriptionsInventorySettings\n  };\n};\n\n/**\n * Return primary toolbar configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductToolbarConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialToolbarFilters, initialToolbarSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialToolbarFilters,\n    settings: initialToolbarSettings\n  };\n};\n\nconst context = {\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useQuery: useProductQuery,\n  useQueryFactory: useProductQueryFactory,\n  useGraphTallyQuery: useProductGraphTallyQuery,\n  useInventoryGuestsQuery: useProductInventoryGuestsQuery,\n  useInventoryHostsQuery: useProductInventoryHostsQuery,\n  useInventorySubscriptionsQuery: useProductInventorySubscriptionsQuery,\n  useProduct,\n  useGraphConfig: useProductGraphConfig,\n  useInventoryGuestsConfig: useProductInventoryGuestsConfig,\n  useInventoryHostsConfig: useProductInventoryHostsConfig,\n  useInventorySubscriptionsConfig: useProductInventorySubscriptionsConfig,\n  useToolbarConfig: useProductToolbarConfig,\n  useToolbarQuery: useProductToolbarQuery\n};\n\nexport {\n  context as default,\n  context,\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useProductQuery,\n  useProductQueryFactory,\n  useProductGraphTallyQuery,\n  useProductInventoryGuestsQuery,\n  useProductInventoryHostsQuery,\n  useProductInventorySubscriptionsQuery,\n  useProduct,\n  useProductGraphConfig,\n  useProductInventoryGuestsConfig,\n  useProductInventoryHostsConfig,\n  useProductInventorySubscriptionsConfig,\n  useProductToolbarConfig,\n  useProductToolbarQuery\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup } from '@patternfly/react-core';\nimport _debounce from 'lodash/debounce';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport { TextInput } from '../form/textInput';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A standalone Display Name input filter.\n *\n * @memberof Toolbar\n * @module ToolbarFieldDisplayName\n */\n\n/**\n * ToDo: evaluate the debounce milliseconds, currently based off platforms default 800 ms\n */\n/**\n * Display a display name input field for search.\n *\n * @fires onSubmit\n * @fires onClear\n * @fires onKeyUp\n * @param {object} props\n * @param {Function} props.t\n * @param {Function} props.useDispatch\n * @param {Function} props.useProduct\n * @param {Function} props.useProductInventoryHostsQuery\n * @returns {React.ReactNode}\n */\nconst ToolbarFieldDisplayName = ({\n  t,\n  useDispatch: useAliasDispatch,\n  useProduct: useAliasProduct,\n  useProductInventoryHostsQuery: useAliasProductInventoryHostsQuery\n}) => {\n  const { viewId } = useAliasProduct();\n  const { [RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME]: currentValue } = useAliasProductInventoryHostsQuery();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On submit, dispatch type.\n   *\n   * @event onSubmit\n   * @param {string} submitValue\n   * @returns {void}\n   */\n  const onSubmit = submitValue =>\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME]: submitValue?.trim() || null\n      }\n    ]);\n\n  /**\n   * On clear, dispatch type.\n   *\n   * @event onClear\n   * @returns {void}\n   */\n  const onClear = () => {\n    if (currentValue === '' || !currentValue) {\n      return;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST,\n        viewId\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME],\n        viewId,\n        [RHSM_API_QUERY_SET_TYPES.DISPLAY_NAME]: null\n      }\n    ]);\n  };\n\n  /**\n   * Set up submit debounce event to allow for bypass.\n   */\n  const debounced = _debounce(onSubmit, 700);\n\n  /**\n   * On enter submit value, on type submit value, and on esc ignore (clear value at component level).\n   *\n   * @event onKeyUp\n   * @param {object} event\n   */\n  const onKeyUp = event => {\n    switch (event.keyCode) {\n      case 13:\n        onSubmit(event.value);\n        break;\n      case 27:\n        break;\n      default:\n        debounced(event.value);\n        break;\n    }\n  };\n\n  return (\n    <InputGroup>\n      <TextInput\n        aria-label={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        className=\"curiosity-input__display-name\"\n        iconVariant=\"search\"\n        maxLength={255}\n        onClear={onClear}\n        onKeyUp={onKeyUp}\n        value={currentValue}\n        placeholder={t('curiosity-toolbar.placeholder_filter', { context: 'displayName' })}\n        data-test=\"toolbarFieldDisplayName\"\n      />\n    </InputGroup>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.propTypes = {\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useProduct: PropTypes.func,\n  useProductInventoryHostsQuery: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProduct: Function, t: translate, useDispatch: Function, useProductInventoryHostsQuery: Function}}\n */\nToolbarFieldDisplayName.defaultProps = {\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useProduct,\n  useProductInventoryHostsQuery\n};\n\nexport { ToolbarFieldDisplayName as default, ToolbarFieldDisplayName };\n"],"names":["TextInput","React","constructor","arguments","_defineProperty","updatedValue","event","onClear","onKeyUp","type","this","props","currentTarget","keyCode","clonedEvent","createMockEvent","value","setState","onMouseUp","setTimeout","onChange","render","_ref","state","className","id","isDisabled","name","isReadOnly","updatedName","helpers","updatedId","PfTextInput","_extends","concat","propTypes","PropTypes","defaultProps","DEFAULT_CONTEXT","ProductViewContext","useProductViewContext","useContext","useProductQueryFactory","queryType","overrideId","useAliasProductViewContext","useSelectors","useAliasSelectors","storeHooks","length","undefined","initialQuery","productId","viewId","queryOverride","queryProduct","queryView","_view$queryType","view","_ref2","_view$queryType2","_ref3","_view$queryType3","useProductQuery","useAliasProductQueryFactory","options","useProductGraphTallyQuery","schemaCheck","rhsmConstants","useAliasProductQuery","reduxHelpers","useProductInventoryGuestsQuery","defaultLimit","defaultOffset","RHSM_API_QUERY_SET_TYPES","useProductInventoryHostsQuery","useProductInventorySubscriptionsQuery","useProductToolbarQuery","useAliasProductGraphTallyQuery","useAliasProductInventoryHostsQuery","useAliasProductInventorySubscriptionsQuery","useProductContext","uomFilter","initialGraphFilters","initialInventoryFilters","initialSubscriptionsInventoryFilters","productContextFilterUom","config","useCallback","filterFilters","_ref4","metric","isOptional","RegExp","test","updatedGraphFilters","_cloneDeep","map","_ref5","filters","rest","filter","applyUomFilter","useProduct","productGroup","productLabel","productVariants","useProductGraphConfig","useAliasProductContext","initialGraphSettings","settings","useProductInventoryGuestsConfig","inventoryGuestsQuery","initialGuestsFilters","initialGuestsSettings","useProductInventoryHostsConfig","initialInventorySettings","useProductInventorySubscriptionsConfig","initialSubscriptionsInventorySettings","useProductToolbarConfig","initialToolbarFilters","initialToolbarSettings","context","useQuery","useQueryFactory","useGraphTallyQuery","useInventoryGuestsQuery","useInventoryHostsQuery","useInventorySubscriptionsQuery","useGraphConfig","useInventoryGuestsConfig","useInventoryHostsConfig","useInventorySubscriptionsConfig","useToolbarConfig","useToolbarQuery","ToolbarFieldDisplayName","t","useDispatch","useAliasDispatch","useAliasProduct","currentValue","dispatch","onSubmit","submitValue","reduxTypes","trim","debounced","_debounce","InputGroup","iconVariant","maxLength","placeholder","translate"],"sourceRoot":""}
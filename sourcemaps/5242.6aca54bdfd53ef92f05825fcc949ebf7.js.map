{"version":3,"file":"js/5242.e2752445d1751c8ad977.js","mappings":"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","sources":["webpack:///./src/components/inventoryCard/inventoryCardHelpers.js","webpack:///./src/components/inventoryGuests/inventoryGuests.js","webpack:///./node_modules/react-use/esm/useUnmount.js","webpack:///./src/components/inventoryGuests/inventoryGuestsContext.js","webpack:///./node_modules/fast-deep-equal/react.js","webpack:///./node_modules/react-use/esm/misc/isDeepEqual.js","webpack:///./node_modules/react-use/esm/useDeepCompareEffect.js"],"sourcesContent":["import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { Tooltip } from '../tooltip/tooltip';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\n\n/**\n * @memberof InventoryCard\n * @module InventoryCardHelpers\n */\n\n/**\n * ToDo: review setting up a transformed cell cache for already transformed cells.\n * - review using a simple state and key memoized component\n * - review using lru cache in a inventoryCardContext custom hook\n */\n\n/**\n * Apply product inventory config properties consistently.\n *\n * @param {Function|string|number} prop\n * @param {object} options\n * @param {Array|*} options.params\n * @returns {React.ReactNode}\n */\nconst applyConfigProperty = (prop, { params = [] } = {}) => {\n  let updatedProp = prop;\n\n  if (typeof prop === 'function') {\n    updatedProp = prop(...((Array.isArray(params) && params) || [params]));\n  }\n\n  if (typeof updatedProp === 'string' || typeof updatedProp === 'number' || React.isValidElement(updatedProp)) {\n    return updatedProp;\n  }\n\n  return undefined;\n};\n\n/**\n * Generate header and row cell configuration from filters.\n *\n * @param {object} params\n * @param {Array<{id: string, isStandalone: boolean, cell:(React.ReactNode|{ title: string }), cellWidth: number,\n *     header:(React.ReactNode|{ title: string }), onSort: Function, showEmptyCell: boolean, sortId: string,\n *     sortActive: boolean, sortDirection: string, transforms: Array}>} params.filters\n * @param {object} params.cellData\n * @param {object} params.meta\n * @param {string} params.productId\n * @param {object} params.session\n * @returns {{bodyCells: Array<{ title: React.ReactNode }>, headerCells: Array<{ title: React.ReactNode }>}}\n */\nconst applyHeaderRowCellFilters = ({ filters = [], cellData = {}, meta = {}, productId, session = {} } = {}) => {\n  const headerCells = [];\n  const bodyCells = [];\n\n  filters.forEach(\n    ({\n      isStandalone,\n      id,\n      cell,\n      cellWidth,\n      header,\n      onSort,\n      showEmptyCell = true,\n      sortId,\n      sortActive,\n      sortDirection,\n      transforms\n    }) => {\n      const headerCellUpdated = {\n        title: translate('curiosity-inventory.header', { context: [id, productId] }),\n        transforms: []\n      };\n      const bodyCellUpdated = { title: '' };\n\n      // set filtered base header and body cells, or if filter doesn't exist skip\n      if (cellData[id]) {\n        headerCellUpdated.title = cellData[id]?.title ?? id;\n        bodyCellUpdated.title = cellData[id]?.value ?? '';\n      } else if (isStandalone === true) {\n        headerCellUpdated.title = '';\n        bodyCellUpdated.title = '';\n      } else {\n        if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n          console.warn(`Warning: Filter \"${id}\" not found in \"table row\" response data.`, cellData);\n        }\n        if (showEmptyCell === false) {\n          return;\n        }\n      }\n\n      // set header cell title\n      if (header) {\n        const updatedHeaderCellTitle = applyConfigProperty(header, {\n          params: [{ ...cellData }, { ...session }, { ...meta }]\n        });\n        if (updatedHeaderCellTitle) {\n          headerCellUpdated.title = updatedHeaderCellTitle;\n        } else if (_isPlainObject(header)) {\n          Object.assign(headerCellUpdated, { ...header });\n        }\n\n        // set header cell tooltip\n        if (header.tooltip && headerCellUpdated.title) {\n          const updatedHeaderCellTooltip = applyConfigProperty(header.tooltip, {\n            params: [{ ...cellData }, { ...session }, { ...meta }]\n          });\n          if (updatedHeaderCellTooltip) {\n            headerCellUpdated.title = <Tooltip content={updatedHeaderCellTooltip}>{headerCellUpdated.title}</Tooltip>;\n          }\n\n          delete headerCellUpdated.tooltip;\n        }\n      }\n\n      // set header cell transforms\n      if (Array.isArray(headerCellUpdated.transforms)) {\n        if (Array.isArray(transforms)) {\n          headerCellUpdated.transforms = headerCellUpdated.transforms.concat([...transforms]);\n        }\n\n        if (typeof cellWidth === 'number') {\n          headerCellUpdated.transforms.push(PfCellWidth(cellWidth));\n        }\n      }\n\n      // set header cell onSort\n      if (typeof onSort === 'function') {\n        headerCellUpdated.onSort = obj => onSort({ ...cellData }, { ...obj, id: sortId || id });\n        headerCellUpdated.sortActive = sortActive;\n        headerCellUpdated.sortDirection = sortDirection;\n      }\n\n      // set body cell title\n      if (cell) {\n        const updatedBodyCellTitle = applyConfigProperty(cell, {\n          params: [{ ...cellData }, { ...session }, { ...meta }]\n        });\n        if (updatedBodyCellTitle) {\n          bodyCellUpdated.title = updatedBodyCellTitle;\n        } else if (_isPlainObject(cell)) {\n          Object.assign(bodyCellUpdated, { ...cell });\n        }\n\n        // set body cell tooltip\n        if (cell.tooltip && bodyCellUpdated.title) {\n          const updatedBodyCellTooltip = applyConfigProperty(cell.tooltip, {\n            params: [{ ...cellData }, { ...session }, { ...meta }]\n          });\n          if (updatedBodyCellTooltip) {\n            bodyCellUpdated.title = <Tooltip content={updatedBodyCellTooltip}>{bodyCellUpdated.title}</Tooltip>;\n          }\n\n          delete bodyCellUpdated.tooltip;\n        }\n      }\n\n      headerCells.push(headerCellUpdated);\n      bodyCells.push(bodyCellUpdated);\n    }\n  );\n\n  return {\n    headerCells,\n    bodyCells\n  };\n};\n\n/**\n * Shallow clone filter, and apply a column sort filter.\n *\n * @param {object} params\n * @param {{onSort: Function, sortActive: boolean, sortDirection: string, isSortDefault: boolean,\n *     sortDefaultInitialDirection: string}} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {{}}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} } = {}) => {\n  const { id, sortId } = filter;\n  const updatedId = sortId || id;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_SET_TYPES.SORT] &&\n    (query?.[RHSM_API_QUERY_SET_TYPES.SORT] === updatedId ||\n      _camelCase(query?.[RHSM_API_QUERY_SET_TYPES.SORT]) === updatedId)\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_SET_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_SET_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  if (\n    hasSort &&\n    !updatedFilter.sortActive &&\n    !query?.[RHSM_API_QUERY_SET_TYPES.SORT] &&\n    updatedFilter.isSortDefault === true\n  ) {\n    updatedFilter.sortActive = true;\n\n    if (updatedFilter.sortDefaultInitialDirection) {\n      updatedFilter.sortDirection = updatedFilter.sortDefaultInitialDirection;\n    }\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Shallow clone and apply a consistent PF \"wrappable\" transformation config allowing column content to wrap.\n *\n * @param {object} params\n * @param {object} params.filter\n * @returns {{}}\n */\nconst applyWrappableFilters = ({ filter = {} } = {}) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Shallow clone and apply, sequence specific, additional properties to filters.\n *\n * @param {object} params\n * @param {Array<{id: string, cell:*, cellWidth: number, header:*, onSort: Function,\n *     showEmptyCell: boolean, sortId: string, sortActive: boolean,\n *     sortDirection: string, transforms: Array, isSortDefault: boolean,\n *     sortDefaultInitialDirection: string}>} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {Array}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} } = {}) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array<{id: string, cell:(React.ReactNode|{ title: string }), cellWidth: number,\n *     header:(React.ReactNode|{ title: string }), onSort: Function, showEmptyCell: boolean,\n *     sortId: string, sortActive: boolean, sortDirection: string,\n *     transforms: Array}>} params.filters\n * @param {object} params.cellData\n * @param {object} params.meta\n * @param {string} params.productId\n * @param {object} params.session\n * @returns {{columnHeaders: Array<{ title: React.ReactNode }>, cells: Array<{ title: React.ReactNode }>, data: {}}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, meta = {}, productId, session = {} } = {}) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value = '']) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: [key, productId] }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value || '...');\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length && Object.keys(allCells).length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    const { headerCells = [], bodyCells = [] } = applyHeaderRowCellFilters({\n      filters,\n      cellData: allCells,\n      meta,\n      productId,\n      session\n    });\n\n    updatedColumnHeaders.push(...headerCells);\n    updatedCells.push(...bodyCells);\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryCardHelpers = {\n  applyConfigProperty,\n  applyHeaderRowCellFilters,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryCardHelpers as default,\n  inventoryCardHelpers,\n  applyConfigProperty,\n  applyHeaderRowCellFilters,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { useSession } from '../authentication/authenticationContext';\nimport { useProductInventoryGuestsConfig, useProductInventoryGuestsQuery } from '../productView/productViewContext';\nimport { Loader } from '../loader/loader';\nimport { inventoryCardHelpers } from '../inventoryCard/inventoryCardHelpers';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { Table } from '../table/table';\nimport { useGetGuestsInventory, useOnScroll } from './inventoryGuestsContext';\n\n/**\n * Guests inventory table wrapper.\n *\n * @memberof Components\n * @module InventoryGuests\n * @property {module} InventoryGuestsContext\n */\n\n/**\n * A system inventory guests component.\n *\n * @param {object} props\n * @param {number} props.defaultPerPage\n * @param {string} props.id\n * @param {number} props.numberOfGuests\n * @param {Function} props.useGetGuestsInventory\n * @param {Function} props.useOnScroll\n * @param {Function} props.useProductInventoryGuestsQuery\n * @param {Function} props.useProductInventoryGuestsConfig\n * @param {Function} props.useSession\n * @fires onScroll\n * @returns {React.ReactNode}\n */\nconst InventoryGuests = ({\n  defaultPerPage,\n  id,\n  numberOfGuests,\n  useGetGuestsInventory: useAliasGetGuestsInventory,\n  useOnScroll: useAliasOnScroll,\n  useProductInventoryGuestsQuery: useAliasProductInventoryGuestsQuery,\n  useProductInventoryGuestsConfig: useAliasProductInventoryGuestsConfig,\n  useSession: useAliasSession\n}) => {\n  const sessionData = useAliasSession();\n  const { filters: filterGuestsData } = useAliasProductInventoryGuestsConfig();\n  const { pending, data: listData = [] } = useAliasGetGuestsInventory(id);\n  const onScroll = useAliasOnScroll(id);\n  const query = useAliasProductInventoryGuestsQuery({ options: { overrideId: id } });\n  const { [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage } = query;\n\n  /**\n   * Render a scroll table loader.\n   *\n   * @param {boolean} isFirstPage\n   * @returns {React.ReactNode}\n   */\n  const renderLoader = isFirstPage => {\n    if (pending) {\n      let updatedRowCount = 0;\n\n      if (isFirstPage) {\n        if (numberOfGuests < defaultPerPage) {\n          updatedRowCount = numberOfGuests;\n        } else {\n          updatedRowCount = defaultPerPage;\n        }\n      }\n\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            className: (isFirstPage && 'curiosity-guests-list') || undefined,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n            rowCount: updatedRowCount,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  };\n\n  let updatedColumnHeaders = [];\n  const updatedRows = listData.map(({ ...cellData }) => {\n    const { columnHeaders, cells } = inventoryCardHelpers.parseRowCellsListData({\n      filters: filterGuestsData,\n      cellData,\n      session: sessionData\n    });\n\n    updatedColumnHeaders = columnHeaders;\n\n    return {\n      cells\n    };\n  });\n\n  // ToDo: Review having the height be a calc value\n  // Include the table header\n  let updatedHeight = (numberOfGuests + 1) * 42;\n  updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n  return (\n    <div className=\"fadein\">\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={onScroll}\n        >\n          {renderLoader(currentPage === 0)}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProductInventoryGuestsConfig: Function, useSession: Function, numberOfGuests: number, id: string,\n *     useOnScroll: Function, useGetGuestsInventory: Function, useProductInventoryGuestsQuery: Function,\n *     defaultPerPage: number}}\n */\nInventoryGuests.propTypes = {\n  defaultPerPage: PropTypes.number,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  useGetGuestsInventory: PropTypes.func,\n  useOnScroll: PropTypes.func,\n  useProductInventoryGuestsConfig: PropTypes.func,\n  useProductInventoryGuestsQuery: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProductInventoryGuestsConfig: Function, useSession: Function, useOnScroll: Function,\n *     useGetGuestsInventory: Function, useProductInventoryGuestsQuery: Function, defaultPerPage: number}}\n */\nInventoryGuests.defaultProps = {\n  defaultPerPage: 5,\n  useGetGuestsInventory,\n  useOnScroll,\n  useProductInventoryGuestsConfig,\n  useProductInventoryGuestsQuery,\n  useSession\n};\n\nexport { InventoryGuests as default, InventoryGuests };\n","import { useRef } from 'react';\nimport useEffectOnce from './useEffectOnce';\nvar useUnmount = function (fn) {\n    var fnRef = useRef(fn);\n    // update the ref each render so if it change the newest callback will be invoked\n    fnRef.current = fn;\n    useEffectOnce(function () { return function () { return fnRef.current(); }; });\n};\nexport default useUnmount;\n","import { useState } from 'react';\nimport { useDeepCompareEffect, useUnmount, useShallowCompareEffect } from 'react-use';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProductInventoryGuestsQuery } from '../productView/productViewContext';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * @memberof InventoryGuests\n * @module InventoryGuestsContext\n */\n\n/**\n * Guests inventory selector response.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}), pending: (*|boolean), fulfilled, error}}\n */\nconst useSelectorsGuestsInventory = (\n  id,\n  { useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse } = {}\n) => {\n  const { error, cancelled, fulfilled, pending, data } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.hostsGuests?.[id]\n  );\n\n  return {\n    error,\n    fulfilled,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * Combined Redux RHSM Actions, getHostsInventoryGuests, and inventory selector response.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsInventory\n * @returns {Function}\n */\nconst useGetGuestsInventory = (\n  id,\n  {\n    getInventory = reduxActions.rhsm.getHostsInventoryGuests,\n    useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n    useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryGuestsQuery,\n    useSelectorsInventory: useAliasSelectorsInventory = useSelectorsGuestsInventory\n  } = {}\n) => {\n  const [updatedData, setUpdatedData] = useState([]);\n  const query = useAliasProductInventoryQuery({ options: { overrideId: id } });\n  const dispatch = useAliasDispatch();\n  const { data = {}, fulfilled = false, ...response } = useAliasSelectorsInventory(id);\n  const { data: listData = [] } = data;\n\n  useShallowCompareEffect(() => {\n    getInventory(id, query)(dispatch);\n  }, [dispatch, id, query]);\n\n  useDeepCompareEffect(() => {\n    if (fulfilled) {\n      setUpdatedData(prevState => [...prevState, ...listData]);\n    }\n  }, [fulfilled, listData]);\n\n  return {\n    data: updatedData,\n    fulfilled,\n    ...response\n  };\n};\n\n/**\n * Use paging as onScroll event for guests inventory.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useSelectorsInventory\n * @param {Function} options.useProductInventoryQuery\n * @returns {Function}\n */\nconst useOnScroll = (\n  id,\n  {\n    useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n    useSelectorsInventory: useAliasSelectorsInventory = useSelectorsGuestsInventory,\n    useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryGuestsQuery\n  } = {}\n) => {\n  const dispatch = useAliasDispatch();\n  const { pending, data = {} } = useAliasSelectorsInventory(id);\n  const { count: numberOfGuests } = data?.meta || {};\n\n  const query = useAliasProductInventoryQuery({ options: { overrideId: id } });\n  const { [RHSM_API_QUERY_SET_TYPES.LIMIT]: limit, [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage } = query;\n\n  /**\n   * Reset paging in scenarios where inventory is filtered, or guests is collapsed.\n   */\n  useUnmount(() => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n        viewId: id\n      },\n      {\n        type: reduxTypes.inventory.CLEAR_INVENTORY_GUESTS,\n        id\n      }\n    ]);\n  });\n\n  /**\n   * On scroll, dispatch type.\n   *\n   * @event onScroll\n   * @param {object} event\n   * @returns {void}\n   */\n  return event => {\n    const { target } = event;\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > currentPage + limit && bottom && !pending) {\n      dispatch([\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n          viewId: id,\n          [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage + limit\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n          viewId: id,\n          [RHSM_API_QUERY_SET_TYPES.LIMIT]: limit\n        }\n      ]);\n    }\n  };\n};\n\nconst context = {\n  useGetGuestsInventory,\n  useOnScroll,\n  useSelectorsGuestsInventory\n};\n\nexport { context as default, context, useGetGuestsInventory, useOnScroll, useSelectorsGuestsInventory };\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (key === '_owner' && a.$$typeof) {\n        // React-specific: avoid traversing React elements' _owner.\n        //  _owner contains circular references\n        // and is not needed when comparing the actual elements (and not their owners)\n        continue;\n      }\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import isDeepEqualReact from 'fast-deep-equal/react';\nexport default isDeepEqualReact;\n","import useCustomCompareEffect from './useCustomCompareEffect';\nimport isDeepEqual from './misc/isDeepEqual';\nvar isPrimitive = function (val) { return val !== Object(val); };\nvar useDeepCompareEffect = function (effect, deps) {\n    if (process.env.NODE_ENV !== 'production') {\n        if (!(deps instanceof Array) || !deps.length) {\n            console.warn('`useDeepCompareEffect` should not be used with no dependencies. Use React.useEffect instead.');\n        }\n        if (deps.every(isPrimitive)) {\n            console.warn('`useDeepCompareEffect` should not be used with dependencies that are all primitive values. Use React.useEffect instead.');\n        }\n    }\n    useCustomCompareEffect(effect, deps, isDeepEqual);\n};\nexport default useDeepCompareEffect;\n"],"names":["applyConfigProperty","prop","_ref","arguments","length","undefined","_ref$params","params","updatedProp","apply","_toConsumableArray","Array","isArray","React","applyHeaderRowCellFilters","_ref2","_ref2$filters","filters","_ref2$cellData","cellData","_ref2$meta","meta","productId","_ref2$session","session","headerCells","bodyCells","forEach","_ref3","_cellData$id$title","_cellData$id","_cellData$id$value","_cellData$id2","isStandalone","id","cell","cellWidth","header","onSort","_ref3$showEmptyCell","showEmptyCell","sortId","sortActive","sortDirection","transforms","headerCellUpdated","title","translate","context","bodyCellUpdated","value","helpers","console","warn","concat","updatedHeaderCellTitle","_objectSpread","_isPlainObject","Object","assign","tooltip","updatedHeaderCellTooltip","Tooltip","content","push","PfCellWidth","obj","updatedBodyCellTitle","updatedBodyCellTooltip","applySortFilters","_ref4","_ref4$filter","filter","_ref4$query","query","updatedId","updatedFilter","hasSort","RHSM_API_QUERY_SET_TYPES","_camelCase","SORT_DIRECTION_TYPES","SortByDirection","isSortDefault","sortDefaultInitialDirection","applyWrappableFilters","_ref5","_ref5$filter","wrappable","parseInventoryFilters","_ref6","_ref6$filters","_ref6$query","map","isSortable","isWrappable","parseRowCellsListData","_ref7","_ref7$filters","_ref7$cellData","_ref7$meta","_ref7$session","updatedColumnHeaders","updatedCells","allCells","entries","_ref8","_ref9","_slicedToArray","key","_ref9$","keys","_applyHeaderRowCellFi","_applyHeaderRowCellFi2","_applyHeaderRowCellFi3","columnHeaders","cells","data","inventoryCardHelpers","InventoryGuests","defaultPerPage","numberOfGuests","useAliasGetGuestsInventory","useGetGuestsInventory","useAliasOnScroll","useOnScroll","useAliasProductInventoryGuestsQuery","useProductInventoryGuestsQuery","useAliasProductInventoryGuestsConfig","useProductInventoryGuestsConfig","sessionData","useAliasSession","useSession","filterGuestsData","_useAliasGetGuestsInv","pending","_useAliasGetGuestsInv2","listData","onScroll","currentPage","options","overrideId","updatedRows","_inventoryCardHelpers","updatedHeight","className","style","height","isFirstPage","updatedRowCount","scrollLoader","Loader","variant","tableProps","borders","colCount","colWidth","rowCount","TableVariant","renderLoader","Table","rows","defaultProps","fn","fnRef","useRef","current","useEffectOnce","useSelectorsGuestsInventory","_ref$useSelectorsResp","useSelectorsResponse","useAliasSelectorsResponse","storeHooks","_useAliasSelectorsRes","_inventory$hostsGuest","inventory","hostsGuests","error","cancelled","fulfilled","_ref3$getInventory","getInventory","reduxActions","_ref3$useDispatch","useDispatch","useAliasDispatch","_ref3$useProductInven","useProductInventoryQuery","useAliasProductInventoryQuery","_ref3$useSelectorsInv","useSelectorsInventory","useAliasSelectorsInventory","_useState","useState","_useState2","updatedData","setUpdatedData","dispatch","_useAliasSelectorsInv","_useAliasSelectorsInv2","_useAliasSelectorsInv3","response","_objectWithoutProperties","_excluded","_data$data","useShallowCompareEffect","useDeepCompareEffect","prevState","_ref4$useDispatch","_ref4$useSelectorsInv","_ref4$useProductInven","_useAliasSelectorsInv4","_useAliasSelectorsInv5","count","limit","useUnmount","type","reduxTypes","viewId","event","target","bottom","scrollHeight","scrollTop","clientHeight","_defineProperty","module","exports","equal","a","b","constructor","i","RegExp","source","flags","valueOf","prototype","toString","hasOwnProperty","call","$$typeof","effect","deps","useCustomCompareEffect","isDeepEqual"],"sourceRoot":""}
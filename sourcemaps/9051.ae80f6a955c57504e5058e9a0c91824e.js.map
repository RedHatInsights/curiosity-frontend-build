{"version":3,"file":"js/9051.de967ee493fc89738e67.js","mappings":"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","sources":["webpack:///./src/components/inventoryTabs/inventoryTab.js","webpack:///./src/components/inventoryTabs/inventoryTabs.js","webpack:///./src/components/productView/productViewContext.js","webpack:///./src/components/tabs/tabs.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n/**\n * @memberof InventoryTabs\n * @module InventoryTab\n */\n\n/**\n * A tab pass-through component for passing props to InventoryTabs.\n *\n * @param {object} props\n * @param {boolean} props.active\n * @param {React.ReactNode} props.children\n * @param {string} props.title\n * @returns {React.ReactNode}\n */\n// eslint-disable-next-line no-unused-vars\nconst InventoryTab = ({ active, children, title }) => children;\n\n/**\n * Prop types.\n *\n * @type {{children: React.ReactNode, className: string}}\n */\nInventoryTab.propTypes = {\n  children: PropTypes.node.isRequired,\n  active: PropTypes.bool,\n  title: PropTypes.node.isRequired\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nInventoryTab.defaultProps = {\n  active: false\n};\n\nexport { InventoryTab as default, InventoryTab };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Title } from '@patternfly/react-core';\nimport { reduxTypes, storeHooks } from '../../redux';\nimport { useProduct } from '../productView/productViewContext';\nimport { Tabs } from '../tabs/tabs';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\nimport { InventoryTab } from './inventoryTab';\n\n/**\n * An inventory tabs display with state. Consume Tabs.\n *\n * @see Tabs\n * @memberof Components\n * @module InventoryTabs\n * @property {module} InventoryTab\n */\n\n/**\n * Update tab state.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnTab = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  return ({ index } = {}) => {\n    dispatch({\n      type: reduxTypes.inventory.SET_INVENTORY_TAB,\n      tabs: {\n        [productId]: index\n      }\n    });\n  };\n};\n\n/**\n * An inventory tabs component.\n * Render inventory tabs using Inventory tab passed props only.\n *\n * @fires onTab\n * @param {object} props\n * @param {number} props.activeTab\n * @param {React.ReactNode} props.children\n * @param {number} props.defaultActiveTab\n * @param {boolean} props.isDisabled\n * @param {Function} props.t\n * @param {Function} props.useOnTab\n * @param {Function} props.useProduct\n * @param {Function} props.useSelector\n * @returns {React.ReactNode|null}\n */\nconst InventoryTabs = ({\n  activeTab,\n  children,\n  defaultActiveTab,\n  isDisabled,\n  t,\n  useOnTab: useAliasOnTab,\n  useProduct: useAliasProduct,\n  useSelector: useAliasSelector\n}) => {\n  const { productId } = useAliasProduct();\n  const updatedActiveTab = useAliasSelector(({ inventory }) => inventory.tabs?.[productId], activeTab);\n  const onTab = useAliasOnTab();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  const updatedChildren = React.Children.toArray(children).map((child, index) => {\n    const { props: childProps = {} } = child;\n\n    return {\n      active: childProps.active || false,\n      content: childProps.children || child,\n      title: childProps.title || t('curiosity-inventory.tabSubHeading', { count: index })\n    };\n  });\n\n  return (\n    <React.Fragment>\n      <Title headingLevel=\"h2\" className=\"sr-only\">\n        {t('curiosity-inventory.tabHeading', { count: updatedChildren.length })}\n      </Title>\n      <Tabs activeTab={updatedActiveTab} defaultActiveTab={defaultActiveTab} onTab={onTab} tabs={updatedChildren} />\n    </React.Fragment>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useOnTab: Function, useProduct: Function, t: Function, children: React.ReactNode,\n *     useSelector: Function, defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.propTypes = {\n  activeTab: PropTypes.number,\n  children: PropTypes.node.isRequired,\n  defaultActiveTab: PropTypes.number,\n  isDisabled: PropTypes.bool,\n  t: PropTypes.func,\n  useOnTab: PropTypes.func,\n  useProduct: PropTypes.func,\n  useSelector: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useOnTab: Function, useProduct: Function, t: translate, useSelector: Function,\n *     defaultActiveTab: number, isDisabled: boolean, activeTab: number}}\n */\nInventoryTabs.defaultProps = {\n  activeTab: 0,\n  defaultActiveTab: 0,\n  isDisabled: helpers.UI_DISABLED_TABLE,\n  t: translate,\n  useOnTab,\n  useProduct,\n  useSelector: storeHooks.reactRedux.useSelector\n};\n\nexport { InventoryTabs as default, InventoryTabs, InventoryTab, useOnTab };\n","import React, { useCallback, useContext } from 'react';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport { reduxHelpers } from '../../redux/common';\nimport { storeHooks } from '../../redux/hooks';\nimport { rhsmConstants, RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common/helpers';\n\n/**\n * @memberof ProductView\n * @module ProductViewContext\n */\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [{}, helpers.noop];\n\nconst ProductViewContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated product view context.\n *\n * @returns {React.Context<{}>}\n */\nconst useProductViewContext = () => useContext(ProductViewContext);\n\n/**\n * Return a query object from initial product config and Redux store.\n *\n * @param {string} queryType An identifier used to pull from both config and Redux, they should named the same.\n * @param {object} options\n * @param {string} options.overrideId A custom identifier, used for scenarios like the Guest inventory IDs\n * @param {object} options.useProductViewContext\n * @param {Function} options.useSelectors\n * @returns {object}\n */\nconst useProductQueryFactory = (\n  queryType,\n  {\n    overrideId,\n    useProductViewContext: useAliasProductViewContext = useProductViewContext,\n    useSelectors: useAliasSelectors = storeHooks.reactRedux.useSelectors\n  } = {}\n) => {\n  const { [queryType]: initialQuery, productId, viewId } = useAliasProductViewContext();\n  const [queryOverride, queryProduct, queryView] = useAliasSelectors([\n    ({ view }) => view?.[queryType]?.[overrideId],\n    ({ view }) => view?.[queryType]?.[productId],\n    ({ view }) => view?.[queryType]?.[viewId]\n  ]);\n\n  return {\n    ...initialQuery,\n    ...queryOverride,\n    ...queryProduct,\n    ...queryView\n  };\n};\n\n/**\n * Return a base product query\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductQuery = ({\n  queryType = 'query',\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) => useAliasProductQueryFactory(queryType, options);\n\n/**\n * Return the graph query based off of tally and capacity.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductGraphTallyQuery = ({\n  queryType = 'graphTallyQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return the inventory query for guests. Use fallback/defaults for guests offset, limit.\n *\n * @param {object} options\n * @param {number} options.defaultLimit\n * @param {number} options.defaultOffset\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryGuestsQuery = ({\n  defaultLimit = 100,\n  defaultOffset = 0,\n  queryType = 'inventoryGuestsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      [RHSM_API_QUERY_SET_TYPES.LIMIT]: defaultLimit,\n      [RHSM_API_QUERY_SET_TYPES.OFFSET]: defaultOffset,\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for hosts.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventoryHostsQuery = ({\n  queryType = 'inventoryHostsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return an inventory query for subscriptions.\n *\n * @param {object} options\n * @param {string} options.queryType\n * @param {object} options.schemaCheck\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductQueryFactory\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductInventorySubscriptionsQuery = ({\n  queryType = 'inventorySubscriptionsQuery',\n  schemaCheck = rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductQueryFactory: useAliasProductQueryFactory = useProductQueryFactory,\n  options\n} = {}) =>\n  reduxHelpers.setApiQuery(\n    {\n      ...useAliasProductQuery(),\n      ...useAliasProductQueryFactory(queryType, options)\n    },\n    schemaCheck\n  );\n\n/**\n * Return a unified query for toolbars\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductGraphTallyQuery\n * @param {Function} options.useProductInventoryHostsQuery\n * @param {Function} options.useProductInventorySubscriptionsQuery\n * @param {object} options.options\n * @returns {object}\n */\nconst useProductToolbarQuery = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductGraphTallyQuery: useAliasProductGraphTallyQuery = useProductGraphTallyQuery,\n  useProductInventoryHostsQuery: useAliasProductInventoryHostsQuery = useProductInventoryHostsQuery,\n  useProductInventorySubscriptionsQuery:\n    useAliasProductInventorySubscriptionsQuery = useProductInventorySubscriptionsQuery,\n  options\n} = {}) => ({\n  ...useAliasProductQuery({ options }),\n  ...useAliasProductGraphTallyQuery({ options }),\n  ...useAliasProductInventoryHostsQuery({ options }),\n  ...useAliasProductInventorySubscriptionsQuery({ options })\n});\n\n/**\n * Get a filtered product configuration context.\n *\n * @param {object} options\n * @param {Function} options.useProductQuery\n * @param {Function} options.useProductViewContext\n * @returns {object}\n */\nconst useProductContext = ({\n  useProductQuery: useAliasProductQuery = useProductQuery,\n  useProductViewContext: useAliasProductViewContext = useProductViewContext\n} = {}) => {\n  const { [RHSM_API_QUERY_SET_TYPES.UOM]: uomFilter } = useAliasProductQuery();\n  const {\n    initialGraphFilters = [],\n    initialInventoryFilters = [],\n    initialSubscriptionsInventoryFilters = [],\n    productContextFilterUom,\n    ...config\n  } = useAliasProductViewContext();\n\n  const applyUomFilter = useCallback(() => {\n    if (productContextFilterUom === true) {\n      const filterFilters = ({ id, metric, isOptional }) => {\n        if (!isOptional) {\n          return true;\n        }\n        return new RegExp(uomFilter, 'i').test(metric) || new RegExp(uomFilter, 'i').test(id);\n      };\n\n      /**\n       * Allowing nested filters beside normal filters we take the quick path, just run the loop twice.\n       * Make sure to set \"isOptional\" false when it comes to nested filters in the event someone\n       * combined a config setting in the subsequent loop.\n       */\n      const updatedGraphFilters = _cloneDeep(initialGraphFilters)\n        .map(({ filters, ...rest }) => ({\n          ...rest,\n          filters: filters.filter(filterFilters),\n          isOptional: false\n        }))\n        .filter(filterFilters);\n\n      return {\n        ...config,\n        initialGraphFilters: updatedGraphFilters,\n        initialInventoryFilters: initialInventoryFilters.filter(filterFilters),\n        initialSubscriptionsInventoryFilters: initialSubscriptionsInventoryFilters.filter(filterFilters)\n      };\n    }\n\n    return {\n      ...config,\n      initialGraphFilters,\n      initialInventoryFilters,\n      initialSubscriptionsInventoryFilters\n    };\n  }, [\n    config,\n    initialGraphFilters,\n    initialInventoryFilters,\n    initialSubscriptionsInventoryFilters,\n    productContextFilterUom,\n    uomFilter\n  ]);\n\n  return applyUomFilter();\n};\n\n/**\n * Return product identifiers.\n *\n * @param {object} options\n * @param {Function} options.useProductViewContext\n * @returns {{productLabel, viewId, productId, productGroup, productVariants}}\n */\nconst useProduct = ({ useProductViewContext: useAliasProductViewContext = useProductViewContext } = {}) => {\n  const { productGroup, productId, productLabel, productVariants, viewId } = useAliasProductViewContext();\n  return {\n    productGroup,\n    productId,\n    productLabel,\n    productVariants,\n    viewId\n  };\n};\n\n/**\n * Return graph configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductGraphConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialGraphFilters, initialGraphSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGraphFilters,\n    settings: initialGraphSettings\n  };\n};\n\n/**\n * Return guests inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryGuestsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { inventoryGuestsQuery = {}, initialGuestsFilters, initialGuestsSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialGuestsFilters,\n    initialQuery: inventoryGuestsQuery,\n    settings: initialGuestsSettings\n  };\n};\n\n/**\n * Return hosts inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventoryHostsConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialInventoryFilters, initialInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialInventoryFilters,\n    settings: initialInventorySettings\n  };\n};\n\n/**\n * Return subscriptions inventory configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductInventorySubscriptionsConfig = ({\n  useProductContext: useAliasProductContext = useProductContext\n} = {}) => {\n  const { initialSubscriptionsInventoryFilters, initialSubscriptionsInventorySettings = {} } = useAliasProductContext();\n  return {\n    filters: initialSubscriptionsInventoryFilters,\n    settings: initialSubscriptionsInventorySettings\n  };\n};\n\n/**\n * Return primary toolbar configuration.\n *\n * @param {object} options\n * @param {Function} options.useProductContext\n * @returns {{settings: object, filters: Array}}\n */\nconst useProductToolbarConfig = ({ useProductContext: useAliasProductContext = useProductContext } = {}) => {\n  const { initialToolbarFilters, initialToolbarSettings = {} } = useAliasProductContext();\n  return {\n    filters: initialToolbarFilters,\n    settings: initialToolbarSettings\n  };\n};\n\nconst context = {\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useQuery: useProductQuery,\n  useQueryFactory: useProductQueryFactory,\n  useGraphTallyQuery: useProductGraphTallyQuery,\n  useInventoryGuestsQuery: useProductInventoryGuestsQuery,\n  useInventoryHostsQuery: useProductInventoryHostsQuery,\n  useInventorySubscriptionsQuery: useProductInventorySubscriptionsQuery,\n  useProduct,\n  useGraphConfig: useProductGraphConfig,\n  useInventoryGuestsConfig: useProductInventoryGuestsConfig,\n  useInventoryHostsConfig: useProductInventoryHostsConfig,\n  useInventorySubscriptionsConfig: useProductInventorySubscriptionsConfig,\n  useToolbarConfig: useProductToolbarConfig,\n  useToolbarQuery: useProductToolbarQuery\n};\n\nexport {\n  context as default,\n  context,\n  ProductViewContext,\n  DEFAULT_CONTEXT,\n  useProductContext,\n  useProductQuery,\n  useProductQueryFactory,\n  useProductGraphTallyQuery,\n  useProductInventoryGuestsQuery,\n  useProductInventoryHostsQuery,\n  useProductInventorySubscriptionsQuery,\n  useProduct,\n  useProductGraphConfig,\n  useProductInventoryGuestsConfig,\n  useProductInventoryHostsConfig,\n  useProductInventorySubscriptionsConfig,\n  useProductToolbarConfig,\n  useProductToolbarQuery\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs as PfTabs, Tab, TabTitleText, Grid, GridItem } from '@patternfly/react-core';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { helpers } from '../../common';\n\n/**\n * PF tabs with state.\n *\n * @memberof Components\n * @module Tabs\n */\n\n/**\n * FixMe: PF tabs misinterprets \"isElementInView\" when tab title nodes are loaded dynamically\n * It appears the use of isElementInView within PF tabs is trying to be predicative in using\n * \"getBoundingClientRect\" but produces questionable results in scenarios where content is\n * async created. isElementInView assumes some form of the content will always be there\n * instead of scenarios where someone tries to dynamically apply components. It may be good to\n * review using a window.setTimeout(() => handleScrollButtons()) in componentDidMount.\n *\n * Our temporary solution is to simply hide the buttons with a manual set flag affecting the\n * CSS class. This will most likely cause long-term issues.\n */\n/**\n * ToDo: Insights frontend components uses a custom tabs layout, investigate related CSS classes\n * Originally we applied the CSS classes, but they appeared to provide nothing. Since Insights\n * rolled its own tabs we're hesitant to apply said classes without understanding what they provide.\n */\n/**\n * A set of tabs.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass Tabs extends React.Component {\n  state = {\n    updatedActiveTab: null,\n    updatedTabs: null\n  };\n\n  componentDidMount() {\n    const { updatedTabs } = this.state;\n\n    if (updatedTabs === null) {\n      this.setTabData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tabs } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (!_isEqualWith(prevProps.tabs, tabs, customizer)) {\n      this.setTabData();\n    }\n  }\n\n  /**\n   * On tab selected\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {number} params.index\n   */\n  onTab = ({ index }) => {\n    const { onTab } = this.props;\n\n    this.setState(\n      {\n        updatedActiveTab: index\n      },\n      () => onTab({ index })\n    );\n  };\n\n  /**\n   * Convert tab objects into the required PF Tab format.\n   */\n  setTabData() {\n    const { activeTab, defaultActiveTab, tabs } = this.props;\n    let updatedActiveTab = defaultActiveTab;\n\n    const updatedTabs = tabs.map(({ active, content, title }, index) => {\n      updatedActiveTab = active ? index : updatedActiveTab;\n\n      return (\n        <Tab key={title} eventKey={index} title={<TabTitleText>{title}</TabTitleText>}>\n          {content}\n        </Tab>\n      );\n    });\n\n    if (typeof activeTab === 'number') {\n      updatedActiveTab = activeTab;\n    }\n\n    this.setState({\n      updatedActiveTab,\n      updatedTabs\n    });\n  }\n\n  /**\n   * Apply props to tabs.\n   *\n   * @returns {React.ReactNode}\n   */\n  renderTabs() {\n    const { updatedActiveTab, updatedTabs } = this.state;\n    const { className, hasOverflowScroll } = this.props;\n\n    return (\n      <PfTabs\n        className={`curiosity-tabs${(!hasOverflowScroll && '__no-scroll') || ''} ${className || ''}`}\n        activeKey={updatedActiveTab}\n        onSelect={(event, index) => this.onTab({ event, index })}\n        mountOnEnter\n        unmountOnExit\n        id={helpers.generateId()}\n        inset={{\n          default: 'insetNone',\n          md: 'insetLg'\n        }}\n      >\n        {updatedTabs}\n      </PfTabs>\n    );\n  }\n\n  /**\n   * Render tabs.\n   *\n   * @returns {React.ReactNode}\n   */\n  render() {\n    return (\n      <Grid className=\"curiosity-tabs-container\">\n        <GridItem span={12}>{this.renderTabs()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.propTypes = {\n  activeTab: PropTypes.number,\n  className: PropTypes.string,\n  defaultActiveTab: PropTypes.number,\n  hasOverflowScroll: PropTypes.bool,\n  onTab: PropTypes.func,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      content: PropTypes.node.isRequired,\n      title: PropTypes.node.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.defaultProps = {\n  activeTab: null,\n  className: '',\n  defaultActiveTab: 0,\n  hasOverflowScroll: false,\n  onTab: helpers.noop,\n  tabs: []\n};\n\nexport { Tabs as default, Tabs };\n"],"names":["InventoryTab","_ref","active","children","title","propTypes","PropTypes","defaultProps","useOnTab","useDispatch","useAliasDispatch","storeHooks","useProduct","useAliasProduct","arguments","length","undefined","productId","dispatch","index","type","reduxTypes","tabs","InventoryTabs","activeTab","defaultActiveTab","isDisabled","t","useAliasOnTab","useSelector","useAliasSelector","updatedActiveTab","_ref2","_inventory$tabs","inventory","onTab","updatedChildren","React","map","child","props","childProps","content","count","Title","headingLevel","className","Tabs","helpers","translate","DEFAULT_CONTEXT","ProductViewContext","useProductViewContext","useContext","useProductQueryFactory","queryType","overrideId","useAliasProductViewContext","useSelectors","useAliasSelectors","initialQuery","viewId","queryOverride","queryProduct","queryView","_view$queryType","view","_view$queryType2","_ref3","_view$queryType3","useProductQuery","useAliasProductQueryFactory","options","useProductGraphTallyQuery","schemaCheck","rhsmConstants","useAliasProductQuery","reduxHelpers","useProductInventoryGuestsQuery","defaultLimit","defaultOffset","RHSM_API_QUERY_SET_TYPES","useProductInventoryHostsQuery","useProductInventorySubscriptionsQuery","useProductToolbarQuery","useAliasProductGraphTallyQuery","useAliasProductInventoryHostsQuery","useAliasProductInventorySubscriptionsQuery","useProductContext","uomFilter","initialGraphFilters","initialInventoryFilters","initialSubscriptionsInventoryFilters","productContextFilterUom","config","useCallback","filterFilters","_ref4","id","metric","isOptional","RegExp","test","updatedGraphFilters","_cloneDeep","_ref5","filters","rest","filter","applyUomFilter","productGroup","productLabel","productVariants","useProductGraphConfig","useAliasProductContext","initialGraphSettings","settings","useProductInventoryGuestsConfig","inventoryGuestsQuery","initialGuestsFilters","initialGuestsSettings","useProductInventoryHostsConfig","initialInventorySettings","useProductInventorySubscriptionsConfig","initialSubscriptionsInventorySettings","useProductToolbarConfig","initialToolbarFilters","initialToolbarSettings","context","useQuery","useQueryFactory","useGraphTallyQuery","useInventoryGuestsQuery","useInventoryHostsQuery","useInventorySubscriptionsQuery","useGraphConfig","useInventoryGuestsConfig","useInventoryHostsConfig","useInventorySubscriptionsConfig","useToolbarConfig","useToolbarQuery","constructor","_defineProperty","updatedTabs","this","setState","componentDidMount","state","setTabData","componentDidUpdate","prevProps","_isEqualWith","customizer","valueA","valueB","toString","Tab","key","eventKey","TabTitleText","renderTabs","hasOverflowScroll","PfTabs","concat","activeKey","onSelect","event","mountOnEnter","unmountOnExit","inset","default","md","render","Grid","GridItem","span"],"sourceRoot":""}
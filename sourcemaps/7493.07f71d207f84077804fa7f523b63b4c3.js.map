{"version":3,"file":"js/7493.1643133385890.308e73071abdbf78f55e.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/helpers/OUIA/ouia.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/TableToolbar/TableToolbar.js","webpack:///./src/components/inventoryList/inventoryListHelpers.js","webpack:///./src/components/inventorySubscriptions/inventorySubscriptions.js","webpack:///./src/components/minHeight/minHeight.js","webpack:///./src/components/pagination/pagination.js","webpack:///./src/components/pagination/paginationHelpers.js"],"sourcesContent":["import { useMemo } from 'react';\nlet uid = 0;\nconst ouiaPrefix = 'OUIA-Generated-';\nconst ouiaIdByRoute = {};\n/** Get props to conform to OUIA spec\n *\n * For functional components, use the useOUIAProps function instead\n *\n * In class based components, create a state variable ouiaStateId to create a static generated ID:\n * state = {\n *  ouiaStateId: getDefaultOUIAId(Chip.displayName)\n * }\n * This generated ID should remain alive as long as the component is not unmounted.\n *\n * Then add the attributes to the component\n * {...getOUIAProps('OverflowChip', this.props.ouiaId !== undefined ? this.props.ouiaId : this.state.ouiaStateId)}\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n */\nexport function getOUIAProps(componentType, id, ouiaSafe = true) {\n    return {\n        'data-ouia-component-type': `PF4/${componentType}`,\n        'data-ouia-safe': ouiaSafe,\n        'data-ouia-component-id': id\n    };\n}\n/**\n * Hooks version of the getOUIAProps function that also memoizes the generated ID\n * Can only be used in functional components\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {boolean} ouiaSafe false if in animation\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAProps = (componentType, id, ouiaSafe = true, variant) => ({\n    'data-ouia-component-type': `PF4/${componentType}`,\n    'data-ouia-safe': ouiaSafe,\n    'data-ouia-component-id': useOUIAId(componentType, id, variant)\n});\n/**\n * Returns the ID or the memoized generated ID\n *\n * @param {string} componentType OUIA component type\n * @param {number|string} id OUIA component id\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport const useOUIAId = (componentType, id, variant) => {\n    if (id !== undefined) {\n        return id;\n    }\n    return useMemo(() => getDefaultOUIAId(componentType, variant), [componentType, variant]);\n};\n/**\n * Returns a generated id based on the URL location\n *\n * @param {string} componentType OUIA component type\n * @param {string} variant Optional variant to add to the generated ID\n */\nexport function getDefaultOUIAId(componentType, variant) {\n    /*\n    ouiaIdByRoute = {\n      [route+componentType]: [number]\n    }\n    */\n    try {\n        let key;\n        if (typeof window !== 'undefined') {\n            // browser environments\n            key = `${window.location.href}-${componentType}-${variant || ''}`;\n        }\n        else {\n            // node/SSR environments\n            key = `${componentType}-${variant || ''}`;\n        }\n        if (!ouiaIdByRoute[key]) {\n            ouiaIdByRoute[key] = 0;\n        }\n        return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++ouiaIdByRoute[key]}`;\n    }\n    catch (exception) {\n        return `${ouiaPrefix}${componentType}-${variant ? `${variant}-` : ''}${++uid}`;\n    }\n}\n//# sourceMappingURL=ouia.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { Fragment } from 'react';\nimport { Toolbar } from '@patternfly/react-core';\nimport { useOUIAId } from '@patternfly/react-core/';\nimport classNames from 'classnames';\nimport propTypes from 'prop-types';\nimport './TableToolbar.css';\nfunction generateCount(results) {\n    if (results > 1 || results < 1) {\n        return (\"\".concat(results, \" Results\"));\n    }\n    else {\n        return (\"\".concat(results, \" Result\"));\n    }\n}\nvar TableToolbar = function (_a) {\n    var _b;\n    var isFooter = _a.isFooter, results = _a.results, className = _a.className, selected = _a.selected, children = _a.children, ouiaId = _a.ouiaId, _c = _a.ouiaSafe, ouiaSafe = _c === void 0 ? true : _c, props = __rest(_a, [\"isFooter\", \"results\", \"className\", \"selected\", \"children\", \"ouiaId\", \"ouiaSafe\"]);\n    var tableToolbarClasses = classNames('ins-c-table__toolbar', (_b = {}, _b[\"ins-m-footer\"] = isFooter, _b), className);\n    var ouiaComponentType = 'RHI/TableToolbar';\n    var ouiaFinalId = useOUIAId(ouiaComponentType, ouiaId, ouiaSafe);\n    return (React.createElement(Fragment, null,\n        React.createElement(Toolbar, __assign({ className: tableToolbarClasses, \"data-ouia-component-type\": ouiaComponentType, \"data-ouia-component-id\": ouiaFinalId, \"data-ouia-safe\": ouiaSafe }, props), children),\n        (results >= 0 || selected >= 0) &&\n            React.createElement(\"div\", { className: 'ins-c-table__toolbar-results' },\n                results >= 0 &&\n                    React.createElement(\"span\", { className: 'ins-c-table__toolbar-results-count' },\n                        \" \",\n                        generateCount(results),\n                        \" \"),\n                selected >= 0 &&\n                    React.createElement(\"span\", { className: 'ins-c-table__toolbar-results-selected' },\n                        \" \",\n                        selected,\n                        \" Selected \"))));\n};\nexport default TableToolbar;\nTableToolbar.propTypes = {\n    isFooter: propTypes.bool,\n    results: propTypes.number,\n    children: propTypes.any,\n    className: propTypes.string,\n    selected: propTypes.number,\n    ouiaId: propTypes.string,\n    ouiaSafe: propTypes.bool\n};\nTableToolbar.defaultProps = {\n    isFooter: false\n};\n//# sourceMappingURL=TableToolbar.js.map","import React from 'react';\nimport { cellWidth as PfCellWidth, SortByDirection, wrappable } from '@patternfly/react-table';\nimport _camelCase from 'lodash/camelCase';\nimport { translate } from '../i18n/i18n';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { helpers } from '../../common';\n\n/**\n * Apply sort filter to filters.\n *\n * @param {object} params\n * @param {{ onSort: Function, sortActive: boolean, sortDirection: string, isSortDefault: boolean,\n *     sortDefaultInitialDirection: string }} params.filter\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {object}\n */\nconst applySortFilters = ({ filter = {}, onSort, query = {} }) => {\n  const { id, sortId } = filter;\n  const updatedId = sortId || id;\n  const updatedFilter = { ...filter };\n  const hasSort = updatedFilter.onSort || onSort;\n\n  if (!updatedFilter.onSort && onSort) {\n    updatedFilter.onSort = onSort;\n  }\n\n  // set fallback for the active sorted column based on query\n  if (\n    hasSort &&\n    typeof updatedFilter.sortActive !== 'boolean' &&\n    query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    (query?.[RHSM_API_QUERY_TYPES.SORT] === updatedId || _camelCase(query?.[RHSM_API_QUERY_TYPES.SORT]) === updatedId)\n  ) {\n    updatedFilter.sortActive = true;\n  }\n\n  // set sort direction\n  if (hasSort && !updatedFilter.sortDirection && query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n    switch (query?.[RHSM_API_QUERY_TYPES.DIRECTION]) {\n      case SORT_DIRECTION_TYPES.DESCENDING:\n        updatedFilter.sortDirection = SortByDirection.desc;\n        break;\n      default:\n        updatedFilter.sortDirection = SortByDirection.asc;\n        break;\n    }\n  }\n\n  if (\n    hasSort &&\n    !updatedFilter.sortActive &&\n    !query?.[RHSM_API_QUERY_TYPES.SORT] &&\n    updatedFilter.isSortDefault === true\n  ) {\n    updatedFilter.sortActive = true;\n\n    if (updatedFilter.sortDefaultInitialDirection) {\n      updatedFilter.sortDirection = updatedFilter.sortDefaultInitialDirection;\n    }\n  }\n\n  return updatedFilter;\n};\n\nconst applyWrappableFilters = ({ filter = {} }) => {\n  const updatedFilter = { ...filter };\n\n  if (Array.isArray(updatedFilter.transforms)) {\n    updatedFilter.transforms.push(wrappable);\n  } else {\n    updatedFilter.transforms = [wrappable];\n  }\n\n  return updatedFilter;\n};\n\n/**\n * Apply additional properties to filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {Function} params.onSort\n * @param {object} params.query\n * @returns {Array}\n */\nconst parseInventoryFilters = ({ filters = [], onSort, query = {} }) =>\n  [...filters].map(filter => {\n    const updatedFilter = { ...filter };\n\n    if (updatedFilter.isSortable) {\n      Object.assign(updatedFilter, applySortFilters({ filter: updatedFilter, onSort, query }));\n    }\n\n    if (updatedFilter.isWrappable) {\n      Object.assign(updatedFilter, applyWrappableFilters({ filter: updatedFilter }));\n    }\n\n    return updatedFilter;\n  });\n\n/**\n * Parse and return formatted/filtered table cells, and apply table filters.\n *\n * @param {object} params\n * @param {Array} params.filters\n * @param {object} params.cellData\n * @param {object} params.session\n * @returns {{columnHeaders: Array, cells: Array, data: object}}\n */\nconst parseRowCellsListData = ({ filters = [], cellData = {}, session = {} }) => {\n  const updatedColumnHeaders = [];\n  const updatedCells = [];\n  const allCells = {};\n\n  // Apply basic translation and value\n  Object.entries(cellData).forEach(([key, value]) => {\n    allCells[key] = {\n      title: translate('curiosity-inventory.header', { context: key }),\n      value\n    };\n\n    updatedColumnHeaders.push(allCells[key].title);\n    updatedCells.push(value);\n  });\n\n  // Apply filters to header and cell values\n  if (filters?.length) {\n    updatedColumnHeaders.length = 0;\n    updatedCells.length = 0;\n\n    filters.forEach(({ id, cell, cellWidth, header, onSort, sortId, sortActive, sortDirection, transforms }) => {\n      let headerUpdated;\n      let cellUpdated;\n\n      if (allCells[id]) {\n        headerUpdated = allCells[id]?.title ?? id;\n        cellUpdated = allCells[id]?.value ?? '';\n      } else if (id) {\n        headerUpdated = translate('curiosity-inventory.header', { context: id });\n        cellUpdated = '';\n      }\n\n      // set table header cell filter params\n      if (header) {\n        headerUpdated = (typeof header === 'function' && header({ ...allCells })) || header;\n      }\n\n      if (\n        typeof headerUpdated === 'string' ||\n        typeof headerUpdated === 'number' ||\n        React.isValidElement(headerUpdated)\n      ) {\n        headerUpdated = {\n          title: headerUpdated\n        };\n      }\n\n      if (headerUpdated) {\n        headerUpdated.transforms = [];\n\n        if (Array.isArray(transforms)) {\n          headerUpdated.transforms = headerUpdated.transforms.concat([...transforms]);\n        }\n\n        if (typeof cellWidth === 'number') {\n          headerUpdated.transforms.push(PfCellWidth(cellWidth));\n        }\n      }\n\n      if (typeof onSort === 'function') {\n        headerUpdated = {\n          ...headerUpdated,\n          onSort: obj => onSort({ ...allCells }, { ...obj, id: sortId || id }),\n          sortActive,\n          sortDirection\n        };\n      }\n\n      // set table row cell filter params\n      if (cell) {\n        cellUpdated = typeof cell === 'function' ? cell({ ...allCells }, { ...session }) : cell;\n      }\n\n      if (typeof cellUpdated === 'string' || typeof cellUpdated === 'number' || React.isValidElement(cellUpdated)) {\n        cellUpdated = {\n          title: cellUpdated\n        };\n      } else if (!cellUpdated?.title) {\n        if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n          console.error(\n            `PF table throws an error when cell values don't conform to what it is expecting, or align exactly to column headers.\n            \\n\\nSee cell ID=${id} with VALUE=${cellUpdated}`\n          );\n        }\n\n        cellUpdated = {\n          title: ''\n        };\n      }\n\n      updatedColumnHeaders.push(headerUpdated);\n      updatedCells.push(cellUpdated);\n    });\n  }\n\n  return {\n    columnHeaders: updatedColumnHeaders,\n    cells: updatedCells,\n    data: { ...allCells }\n  };\n};\n\nconst inventoryListHelpers = {\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n\nexport {\n  inventoryListHelpers as default,\n  inventoryListHelpers,\n  applySortFilters,\n  applyWrappableFilters,\n  parseInventoryFilters,\n  parseRowCellsListData\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEqual from 'lodash/isEqual';\nimport { SortByDirection, TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport _camelCase from 'lodash/camelCase';\nimport { helpers } from '../../common';\nimport { connect, reduxActions, reduxSelectors, reduxTypes, store } from '../../redux';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport { inventoryListHelpers } from '../inventoryList/inventoryListHelpers';\nimport Pagination from '../pagination/pagination';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_TYPES\n} from '../../types/rhsmApiTypes';\nimport { translate } from '../i18n/i18n';\n\n/**\n * A subscriptions system inventory component.\n *\n * @augments React.Component\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n */\nclass InventorySubscriptions extends React.Component {\n  componentDidMount() {\n    this.onUpdateInventoryData();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { productId, query } = this.props;\n\n    if (productId !== prevProps.productId || !_isEqual(query, prevProps.query)) {\n      this.onUpdateInventoryData();\n    }\n  }\n\n  /**\n   * On column sort update state.\n   *\n   * @event onColumnSort\n   * @param {object} data pass-through inventory data.\n   * @param {object} sortParams\n   * @param {string} sortParams.direction\n   * @param {string} sortParams.id column identifier\n   */\n  onColumnSort = (data, { direction, id }) => {\n    const { productId } = this.props;\n    const updatedSortColumn = Object.values(SORT_TYPES).find(value => _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n\n  /**\n   * On paging and on perPage events.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   */\n  onPage = ({ offset, perPage }) => {\n    const { productId } = this.props;\n\n    store.dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n\n  /**\n   * Call the RHSM APIs, apply filters.\n   *\n   * @event onUpdateInventoryData\n   */\n  onUpdateInventoryData = () => {\n    const { getSubscriptionsInventory, isDisabled, productId, query } = this.props;\n\n    if (!isDisabled && productId) {\n      getSubscriptionsInventory(productId, query);\n    }\n  };\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { filterInventoryData, listData, query, session } = this.props;\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryListHelpers.parseRowCellsListData({\n        filters: inventoryListHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: this.onColumnSort,\n          query\n        }),\n        cellData,\n        session\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  }\n\n  /**\n   * Render an inventory card.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const {\n      error,\n      filterInventoryData,\n      fulfilled,\n      isDisabled,\n      itemCount,\n      listData,\n      pending,\n      perPageDefault,\n      query,\n      t\n    } = this.props;\n\n    if (isDisabled) {\n      return (\n        <Card className=\"curiosity-inventory-card__disabled\">\n          <CardBody>\n            <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n          </CardBody>\n        </Card>\n      );\n    }\n\n    const updatedPerPage = query[RHSM_API_QUERY_TYPES.LIMIT] || perPageDefault;\n    const updatedOffset = query[RHSM_API_QUERY_TYPES.OFFSET];\n    const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n    // Set an updated key to force refresh minHeight\n    const minHeightContentRefreshKey =\n      (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n      `bodyMinHeight-${updatedPerPage}`;\n\n    return (\n      <Card className=\"curiosity-inventory-card\">\n        <MinHeight key=\"headerMinHeight\" updateOnContent>\n          <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n            <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n              <Pagination\n                isCompact\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </CardActions>\n          </CardHeader>\n        </MinHeight>\n        <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n          <CardBody>\n            <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n              {pending && (\n                <Loader\n                  variant=\"table\"\n                  tableProps={{\n                    className: 'curiosity-inventory-list',\n                    colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                    colWidth:\n                      (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                    rowCount: listData?.length || updatedPerPage,\n                    variant: TableVariant.compact\n                  }}\n                />\n              )}\n              {!pending && this.renderTable()}\n            </div>\n          </CardBody>\n        </MinHeight>\n        <MinHeight key=\"footerMinHeight\" updateOnContent>\n          <CardFooter\n            className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n            aria-hidden={error || !itemCount || false}\n          >\n            <TableToolbar isFooter>\n              <Pagination\n                dropDirection=\"up\"\n                isDisabled={pending || error}\n                itemCount={itemCount}\n                offset={updatedOffset}\n                onPage={this.onPage}\n                onPerPage={this.onPage}\n                perPage={updatedPerPage}\n              />\n            </TableToolbar>\n          </CardFooter>\n        </MinHeight>\n      </Card>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{productId: string, listData: Array, session: object, pending: boolean, query: object,\n *     fulfilled: boolean, error: boolean, getSubscriptionsInventory: Function, itemCount: number,\n *     t: Function, filterInventoryData: Array, perPageDefault: number, isDisabled: boolean}}\n */\nInventorySubscriptions.propTypes = {\n  error: PropTypes.bool,\n  fulfilled: PropTypes.bool,\n  filterInventoryData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      header: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ]),\n      cell: PropTypes.oneOfType([\n        PropTypes.shape({\n          title: PropTypes.node.isRequired\n        }),\n        PropTypes.func,\n        PropTypes.node\n      ])\n    }).isRequired\n  ),\n  getSubscriptionsInventory: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  listData: PropTypes.array,\n  pending: PropTypes.bool,\n  productId: PropTypes.string.isRequired,\n  perPageDefault: PropTypes.number,\n  query: PropTypes.object.isRequired,\n  session: PropTypes.object,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, filterInventoryData: Array, listData: Array, session: object, pending: boolean,\n *     fulfilled: boolean, perPageDefault: number, isDisabled: boolean, error: boolean,\n *     getSubscriptionsInventory: Function, itemCount: number}}\n */\nInventorySubscriptions.defaultProps = {\n  error: false,\n  fulfilled: false,\n  filterInventoryData: [],\n  getSubscriptionsInventory: helpers.noop,\n  isDisabled: helpers.UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  itemCount: 0,\n  listData: [],\n  pending: false,\n  perPageDefault: 10,\n  session: {},\n  t: translate\n};\n\n/**\n * Apply actions to props.\n *\n * @param {Function} dispatch\n * @returns {object}\n */\nconst mapDispatchToProps = dispatch => ({\n  getSubscriptionsInventory: (id, query) => dispatch(reduxActions.rhsm.getSubscriptionsInventory(id, query))\n});\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.subscriptionsList.makeSubscriptionsList();\n\nconst ConnectedInventorySubscriptions = connect(makeMapStateToProps, mapDispatchToProps)(InventorySubscriptions);\n\nexport { ConnectedInventorySubscriptions as default, ConnectedInventorySubscriptions, InventorySubscriptions };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { helpers } from '../../common';\n\n/**\n * Set a min-height to prevent page jump component.\n *\n * @augments React.Component\n * @fires onResizeContainer\n */\nclass MinHeight extends React.Component {\n  containerRef = React.createRef();\n\n  innerContainerRef = React.createRef();\n\n  updatedContainerWidth = 0;\n\n  resizeObserver = helpers.noop;\n\n  componentDidMount() {\n    const { updateOnResize } = this.props;\n    window.setTimeout(() => {\n      this.setMinHeight();\n    });\n\n    if (updateOnResize) {\n      this.setResizeObserver();\n    }\n  }\n\n  componentDidUpdate() {\n    const { updateOnContent } = this.props;\n\n    if (updateOnContent) {\n      window.setTimeout(() => {\n        this.setMinHeight();\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.resizeObserver();\n  }\n\n  /**\n   * On resize adjust graph display.\n   *\n   * @event onResizeContainer\n   */\n  onResizeContainer = () => {\n    const { updatedContainerWidth } = this;\n    const { updateOnResize } = this.props;\n    const clientWidth = this.containerRef?.current?.clientWidth || 0;\n\n    if (updateOnResize && clientWidth !== updatedContainerWidth) {\n      this.updatedContainerWidth = clientWidth;\n      this.setMinHeight(true);\n    }\n  };\n\n  /**\n   * Set minHeight on mount or update.\n   *\n   * @param {boolean} reset\n   */\n  setMinHeight(reset = false) {\n    const { minHeight: overrideMinHeight } = this.props;\n    const { current: domElement = {} } = this.containerRef;\n    const { current: innerDomElement = {} } = this.innerContainerRef;\n\n    if (domElement?.style) {\n      let clientHeight;\n\n      if (reset) {\n        clientHeight = innerDomElement?.clientHeight || 0;\n      } else {\n        clientHeight = domElement?.clientHeight || 0;\n      }\n\n      if (overrideMinHeight > clientHeight) {\n        clientHeight = overrideMinHeight;\n      }\n\n      domElement.style.minHeight = `${clientHeight}px`;\n    }\n  }\n\n  /**\n   * Set ResizeObserver for scenarios when min-height needs to be updated.\n   */\n  setResizeObserver() {\n    window.addEventListener('resize', this.onResizeContainer);\n    this.resizeObserver = () => window.removeEventListener('resize', this.onResizeContainer);\n  }\n\n  /**\n   * Render a min-height div with children.\n   *\n   * @returns {Node}\n   */\n  render() {\n    const { children } = this.props;\n\n    return (\n      <div className=\"curiosity-minheight\" ref={this.containerRef}>\n        <div ref={this.innerContainerRef}>{children}</div>\n      </div>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{minHeight: number, children: Node, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.propTypes = {\n  updateOnContent: PropTypes.bool,\n  updateOnResize: PropTypes.bool,\n  children: PropTypes.node.isRequired,\n  minHeight: PropTypes.number\n};\n\n/**\n * Default props.\n *\n * @type {{minHeight: number, updateOnContent: boolean, updateOnResize: boolean}}\n */\nMinHeight.defaultProps = {\n  updateOnContent: false,\n  updateOnResize: true,\n  minHeight: 0\n};\n\nexport { MinHeight as default, MinHeight };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PfPagination } from '@patternfly/react-core';\nimport { helpers } from '../../common';\nimport { paginationHelpers } from './paginationHelpers';\n\n/**\n * ToDo: Apply locale/translation to the PF Pagination \"titles\" prop.\n */\n/**\n * FixMe: PF Pagination component offset property is either broken, confusing to implement, ...\n * or requires an equivalent effort to using page. There appears to be confusing behavior in how\n * the next offset range is calculated. It fails to update when passing in the next expected\n * sequence using the returned starting index. We'll continue emulating the use of \"offset\"\n * by performing our own calculation and applying it to the page property instead.\n */\n/**\n * Pagination component.\n *\n * @param {object} props\n * @param {string} props.dropDirection\n * @param {boolean} props.isDisabled\n * @param {boolean} props.isCompact\n * @param {number} props.itemCount\n * @param {number} props.offset\n * @param {Function} props.onPage\n * @param {Function} props.onPerPage\n * @param {number} props.perPage\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Pagination = ({\n  dropDirection,\n  isDisabled,\n  isCompact,\n  itemCount,\n  offset,\n  onPage,\n  onPerPage,\n  perPage,\n  variant\n}) => (\n  <PfPagination\n    dropDirection={dropDirection}\n    isCompact={isCompact}\n    isDisabled={isDisabled || !itemCount}\n    itemCount={itemCount}\n    onSetPage={(event, page, limit) =>\n      onPage({ event, perPage: limit, offset: paginationHelpers.calculateOffsetFromPage(page, limit) })\n    }\n    onPerPageSelect={(event, limit) => onPerPage({ event, perPage: limit, offset: Pagination.defaultProps.offset })}\n    page={paginationHelpers.calculatePageFromOffset(offset || Pagination.defaultProps.offset, perPage)}\n    perPage={perPage}\n    variant={variant}\n  />\n);\n\n/**\n * Prop types\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.propTypes = {\n  dropDirection: PropTypes.oneOf(['up', 'down']),\n  isCompact: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  itemCount: PropTypes.number,\n  offset: PropTypes.number,\n  onPage: PropTypes.func,\n  onPerPage: PropTypes.func,\n  perPage: PropTypes.number,\n  variant: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isCompact: boolean, onPage: Function, perPage: number, offset: number,\n *     dropDirection: string, onPerPage: Function, variant: null, isDisabled: boolean,\n *     itemCount: number}}\n */\nPagination.defaultProps = {\n  dropDirection: 'down',\n  isCompact: false,\n  isDisabled: false,\n  itemCount: 0,\n  offset: 0,\n  onPage: helpers.noop,\n  onPerPage: helpers.noop,\n  perPage: 10,\n  variant: null\n};\n\nexport { Pagination as default, Pagination };\n","/**\n * Calculate offset from page and perPage/limit.\n *\n * @param {number} page\n * @param {number} perPage\n * @returns {number}\n */\nconst calculateOffsetFromPage = (page, perPage) => perPage * (page - 1) || 0;\n\n/**\n * Calculate page from offset and perPage/limit\n *\n * @param {number} offset\n * @param {number} perPage\n * @returns {number}\n */\nconst calculatePageFromOffset = (offset, perPage) => offset / perPage + 1 || 1;\n\n/**\n * Determine if paging is on the last page.\n *\n * @param {number} offset\n * @param {number} perPage\n * @param {number} itemCount\n * @returns {boolean}\n */\nconst isLastPage = (offset, perPage, itemCount) =>\n  calculatePageFromOffset(offset, perPage) === Math.ceil(itemCount / perPage);\n\nconst paginationHelpers = {\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n\nexport {\n  paginationHelpers as default,\n  paginationHelpers,\n  calculateOffsetFromPage,\n  calculatePageFromOffset,\n  isLastPage\n};\n"],"names":["uid","ouiaPrefix","ouiaIdByRoute","getOUIAProps","componentType","id","ouiaSafe","useOUIAProps","variant","useOUIAId","undefined","useMemo","getDefaultOUIAId","key","window","location","href","exception","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","TableToolbar","_a","_b","isFooter","results","className","selected","children","ouiaId","_c","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","tableToolbarClasses","ouiaComponentType","ouiaFinalId","Fragment","Toolbar","concat","generateCount","propTypes","defaultProps","applySortFilters","filter","onSort","query","updatedId","sortId","updatedFilter","hasSort","sortActive","RHSM_API_QUERY_TYPES","_camelCase","sortDirection","SORT_DIRECTION_TYPES","SortByDirection","isSortDefault","sortDefaultInitialDirection","applyWrappableFilters","Array","isArray","transforms","push","wrappable","parseInventoryFilters","filters","map","isSortable","isWrappable","parseRowCellsListData","cellData","session","updatedColumnHeaders","updatedCells","allCells","entries","forEach","value","title","translate","context","headerUpdated","cellUpdated","cell","cellWidth","header","React","PfCellWidth","obj","helpers","console","error","columnHeaders","cells","data","inventoryListHelpers","InventorySubscriptions","onColumnSort","updatedDirection","direction","productId","updatedSortColumn","values","SORT_TYPES","find","store","type","reduxTypes","viewId","warn","onPage","offset","perPage","onUpdateInventoryData","getSubscriptionsInventory","isDisabled","prevProps","_isEqual","filterInventoryData","listData","updatedRows","borders","TableVariant","rows","fulfilled","itemCount","pending","perPageDefault","Card","CardBody","Bullseye","updatedPerPage","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","MinHeight","updateOnContent","CardHeader","CardActions","isCompact","onPerPage","Loader","tableProps","colCount","keys","colWidth","rowCount","renderTable","CardFooter","dropDirection","makeMapStateToProps","reduxSelectors","ConnectedInventorySubscriptions","connect","dispatch","reduxActions","containerRef","innerContainerRef","updatedContainerWidth","resizeObserver","onResizeContainer","updateOnResize","clientWidth","current","setMinHeight","setTimeout","setResizeObserver","clientHeight","reset","overrideMinHeight","minHeight","domElement","innerDomElement","style","addEventListener","removeEventListener","ref","Pagination","onSetPage","event","page","limit","onPerPageSelect","calculateOffsetFromPage","calculatePageFromOffset","Math","ceil"],"sourceRoot":""}
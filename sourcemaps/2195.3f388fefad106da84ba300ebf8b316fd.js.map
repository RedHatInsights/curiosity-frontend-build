{"version":3,"file":"js/2195.1659452088388.ae305033ee4a837150c3.js","mappings":"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","sources":["webpack:///./src/components/inventoryCard/inventoryCard.js","webpack:///./src/components/inventoryCard/inventoryCardContext.js","webpack:///./src/components/inventoryGuests/inventoryGuests.js","webpack:///./src/components/inventoryGuests/inventoryGuestsContext.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { Bullseye, Card, CardActions, CardBody, CardFooter, CardHeader, CardHeaderMain } from '@patternfly/react-core';\nimport { TableToolbar } from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { useSession } from '../authentication/authenticationContext';\nimport { useProductInventoryHostsConfig, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport { helpers } from '../../common';\nimport Table from '../table/table';\nimport { Loader } from '../loader/loader';\nimport { MinHeight } from '../minHeight/minHeight';\nimport InventoryGuests from '../inventoryGuests/inventoryGuests';\nimport { inventoryCardHelpers } from './inventoryCardHelpers';\nimport Pagination from '../pagination/pagination';\nimport { ToolbarFieldDisplayName } from '../toolbar/toolbarFieldDisplayName';\nimport { paginationHelpers } from '../pagination/paginationHelpers';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { translate } from '../i18n/i18n';\nimport { useGetInstancesInventory, useOnPageInstances, useOnColumnSortInstances } from './inventoryCardContext';\n\n/**\n * Set up inventory cards. Expand filters with base settings.\n *\n * @param {object} props\n * @param {Node} props.cardActions\n * @param {boolean} props.isDisabled\n * @param {number} props.perPageDefault\n * @param {Function} props.t\n * @param {Function} props.useGetInventory\n * @param {Function} props.useOnPage\n * @param {Function} props.useOnColumnSort\n * @param {Function} props.useProductInventoryConfig\n * @param {Function} props.useProductInventoryQuery\n * @param {Function} props.useSession\n * @fires onColumnSort\n * @fires onPage\n * @fires onUpdateInventoryData\n * @returns {Node}\n */\nconst InventoryCard = ({\n  cardActions,\n  isDisabled,\n  perPageDefault,\n  t,\n  useGetInventory: useAliasGetInventory,\n  useOnPage: useAliasOnPage,\n  useOnColumnSort: useAliasOnColumnSort,\n  useProductInventoryConfig: useAliasProductInventoryConfig,\n  useProductInventoryQuery: useAliasProductInventoryQuery,\n  useSession: useAliasSession\n}) => {\n  const sessionData = useAliasSession();\n  const query = useAliasProductInventoryQuery();\n  const onPage = useAliasOnPage();\n  const onColumnSort = useAliasOnColumnSort();\n  const { filters: filterInventoryData, settings } = useAliasProductInventoryConfig();\n  const { error, fulfilled, pending, data = {} } = useAliasGetInventory({ isDisabled });\n  const { data: listData = [], meta = {} } = data;\n\n  if (isDisabled) {\n    return (\n      <Card className=\"curiosity-inventory-card__disabled\">\n        <CardBody>\n          <Bullseye>{t('curiosity-inventory.tab', { context: 'disabled' })}</Bullseye>\n        </CardBody>\n      </Card>\n    );\n  }\n\n  const itemCount = meta?.count;\n  const updatedPerPage = query[RHSM_API_QUERY_SET_TYPES.LIMIT] || perPageDefault;\n  const updatedOffset = query[RHSM_API_QUERY_SET_TYPES.OFFSET];\n  const isLastPage = paginationHelpers.isLastPage(updatedOffset, updatedPerPage, itemCount);\n\n  // Set an updated key to force refresh minHeight\n  const minHeightContentRefreshKey =\n    (fulfilled === true && itemCount < updatedPerPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    (fulfilled === true && isLastPage && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    (error === true && `bodyMinHeight-${updatedPerPage}-resize`) ||\n    `bodyMinHeight-${updatedPerPage}`;\n\n  /**\n   * Render an inventory table.\n   *\n   * @returns {Node}\n   */\n  const renderTable = () => {\n    let updatedColumnHeaders = [];\n\n    const updatedRows = listData.map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryCardHelpers.parseRowCellsListData({\n        filters: inventoryCardHelpers.parseInventoryFilters({\n          filters: filterInventoryData,\n          onSort: onColumnSort,\n          query\n        }),\n        cellData,\n        meta,\n        session: sessionData\n      });\n\n      updatedColumnHeaders = columnHeaders;\n      const subscriptionManagerId = cellData?.subscriptionManagerId;\n      const numberOfGuests = cellData?.numberOfGuests;\n      let isSubTable;\n\n      // Is there a subTable, callback, or attempt to determine, return boolean\n      if (typeof settings?.hasSubTable === 'function') {\n        isSubTable = settings.hasSubTable({ ...cellData }, { ...sessionData });\n      } else {\n        isSubTable = numberOfGuests > 0 && subscriptionManagerId;\n      }\n\n      return {\n        cells,\n        expandedContent:\n          (isSubTable && <InventoryGuests numberOfGuests={numberOfGuests} id={subscriptionManagerId} />) || undefined\n      };\n    });\n\n    return (\n      <Table\n        borders\n        variant={TableVariant.compact}\n        className=\"curiosity-inventory-list\"\n        columnHeaders={updatedColumnHeaders}\n        rows={updatedRows}\n      />\n    );\n  };\n\n  return (\n    <Card className=\"curiosity-inventory-card\">\n      <MinHeight key=\"headerMinHeight\" updateOnContent>\n        <CardHeader className={(error && 'hidden') || ''} aria-hidden={error || false}>\n          {cardActions}\n          <CardActions className={(!itemCount && 'transparent') || ''} aria-hidden={!itemCount || false}>\n            <Pagination\n              isCompact\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              offset={updatedOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={updatedPerPage}\n            />\n          </CardActions>\n        </CardHeader>\n      </MinHeight>\n      <MinHeight key={minHeightContentRefreshKey} updateOnContent>\n        <CardBody>\n          <div className={(error && 'blur') || (pending && 'fadein') || ''}>\n            {pending && (\n              <Loader\n                variant=\"table\"\n                tableProps={{\n                  className: 'curiosity-inventory-list',\n                  colCount: filterInventoryData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n                  colWidth:\n                    (filterInventoryData?.length && filterInventoryData.map(({ cellWidth }) => cellWidth)) || [],\n                  rowCount: listData?.length || updatedPerPage,\n                  variant: TableVariant.compact\n                }}\n              />\n            )}\n            {!pending && renderTable()}\n          </div>\n        </CardBody>\n      </MinHeight>\n      <MinHeight key=\"footerMinHeight\" updateOnContent>\n        <CardFooter\n          className={(error && 'hidden') || (!itemCount && 'transparent') || ''}\n          aria-hidden={error || !itemCount || false}\n        >\n          <TableToolbar isFooter>\n            <Pagination\n              dropDirection=\"up\"\n              isDisabled={pending || error}\n              itemCount={itemCount}\n              offset={updatedOffset}\n              onPage={onPage}\n              onPerPage={onPage}\n              perPage={updatedPerPage}\n            />\n          </TableToolbar>\n        </CardFooter>\n      </MinHeight>\n    </Card>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{cardActions: React.ReactNode, useSession: Function, useOnPage: Function, t: Function, perPageDefault: number,\n *     isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function, useOnColumnSort: Function,\n *     useProductInventoryQuery: Function}}\n */\nInventoryCard.propTypes = {\n  cardActions: PropTypes.node,\n  isDisabled: PropTypes.bool,\n  perPageDefault: PropTypes.number,\n  t: PropTypes.func,\n  useGetInventory: PropTypes.func,\n  useOnPage: PropTypes.func,\n  useOnColumnSort: PropTypes.func,\n  useProductInventoryConfig: PropTypes.func,\n  useProductInventoryQuery: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{cardActions: React.ReactNode, useSession: Function, useOnPage: Function, t: Function, perPageDefault: number,\n *     isDisabled: boolean, useProductInventoryConfig: Function, useGetInventory: Function, useOnColumnSort: Function,\n *     useProductInventoryQuery: Function}}\n */\nInventoryCard.defaultProps = {\n  cardActions: (\n    <CardHeaderMain>\n      <ToolbarFieldDisplayName />\n    </CardHeaderMain>\n  ),\n  isDisabled: helpers.UI_DISABLED_TABLE_INSTANCES,\n  perPageDefault: 10,\n  t: translate,\n  useGetInventory: useGetInstancesInventory,\n  useOnPage: useOnPageInstances,\n  useOnColumnSort: useOnColumnSortInstances,\n  useProductInventoryConfig: useProductInventoryHostsConfig,\n  useProductInventoryQuery: useProductInventoryHostsQuery,\n  useSession\n};\n\nexport { InventoryCard as default, InventoryCard };\n","import { useShallowCompareEffect } from 'react-use';\nimport _camelCase from 'lodash/camelCase';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProduct, useProductInventoryHostsQuery } from '../productView/productViewContext';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES as SORT_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n} from '../../services/rhsm/rhsmConstants';\nimport { helpers } from '../../common';\n\n/**\n * Combined Redux RHSM Actions, getInstancesInventory, and inventory selector response.\n *\n * @param {object} options\n * @param {boolean} options.isDisabled\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsResponse\n * @returns {Function}\n */\nconst useGetInstancesInventory = ({\n  isDisabled = false,\n  getInventory = reduxActions.rhsm.getInstancesInventory,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct,\n  useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryHostsQuery,\n  useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const query = useAliasProductInventoryQuery();\n  const dispatch = useAliasDispatch();\n  const { error, cancelled, fulfilled, pending, data } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.instancesInventory?.[productId]\n  );\n\n  useShallowCompareEffect(() => {\n    if (!isDisabled) {\n      getInventory(productId, query)(dispatch);\n    }\n  }, [dispatch, isDisabled, productId, query]);\n\n  return {\n    error,\n    fulfilled,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * An onPage callback for instances inventory.\n *\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnPageInstances = ({\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for instances inventory.\n   *\n   * @event onPage\n   * @param {object} params\n   * @param {number} params.offset\n   * @param {number} params.perPage\n   * @returns {void}\n   */\n  return ({ offset, perPage }) => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.OFFSET]: offset\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.LIMIT]: perPage\n      }\n    ]);\n  };\n};\n\n/**\n * An onColumnSort callback for instances inventory.\n *\n * @param {object} options\n * @param {object} options.sortColumns\n * @param {Function} options.useDispatch\n * @param {Function} options.useProduct\n * @returns {Function}\n */\nconst useOnColumnSortInstances = ({\n  sortColumns = SORT_TYPES,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n  useProduct: useAliasProduct = useProduct\n} = {}) => {\n  const { productId } = useAliasProduct();\n  const dispatch = useAliasDispatch();\n\n  /**\n   * On event update state for instances inventory.\n   *\n   * @event onColumnSort\n   * @param {*} _data\n   * @param {object} params\n   * @param {string} params.direction\n   * @param {string} params.id\n   * @returns {void}\n   */\n  return (_data, { direction, id }) => {\n    const updatedSortColumn = Object.values(sortColumns).find(value => value === id || _camelCase(value) === id);\n    let updatedDirection;\n\n    if (!updatedSortColumn) {\n      if (helpers.DEV_MODE || helpers.REVIEW_MODE) {\n        console.warn(`Sorting can only be performed on select fields, confirm field ${id} is allowed.`);\n      }\n      return;\n    }\n\n    switch (direction) {\n      case SortByDirection.desc:\n        updatedDirection = SORT_DIRECTION_TYPES.DESCENDING;\n        break;\n      default:\n        updatedDirection = SORT_DIRECTION_TYPES.ASCENDING;\n        break;\n    }\n\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.DIRECTION],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.DIRECTION]: updatedDirection\n      },\n      {\n        type: reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.SORT],\n        viewId: productId,\n        [RHSM_API_QUERY_SET_TYPES.SORT]: updatedSortColumn\n      }\n    ]);\n  };\n};\n\nconst context = {\n  useGetInstancesInventory,\n  useOnPageInstances,\n  useOnColumnSortInstances\n};\n\nexport { context as default, context, useGetInstancesInventory, useOnPageInstances, useOnColumnSortInstances };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { TableVariant } from '@patternfly/react-table';\nimport { useSession } from '../authentication/authenticationContext';\nimport { useProductInventoryGuestsConfig, useProductInventoryGuestsQuery } from '../productView/productViewContext';\nimport { Loader } from '../loader/loader';\nimport { inventoryCardHelpers } from '../inventoryCard/inventoryCardHelpers';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\nimport { Table } from '../table/table';\nimport { useGetGuestsInventory, useOnScroll } from './inventoryGuestsContext';\n\n/**\n * A system inventory guests component.\n *\n * @param {object} props\n * @param {number} props.defaultPerPage\n * @param {string} props.id\n * @param {number} props.numberOfGuests\n * @param {Function} props.useGetGuestsInventory\n * @param {Function} props.useOnScroll\n * @param {Function} props.useProductInventoryGuestsQuery\n * @param {Function} props.useProductInventoryGuestsConfig\n * @param {Function} props.useSession\n * @fires onScroll\n * @returns {Node}\n */\nconst InventoryGuests = ({\n  defaultPerPage,\n  id,\n  numberOfGuests,\n  useGetGuestsInventory: useAliasGetGuestsInventory,\n  useOnScroll: useAliasOnScroll,\n  useProductInventoryGuestsQuery: useAliasProductInventoryGuestsQuery,\n  useProductInventoryGuestsConfig: useAliasProductInventoryGuestsConfig,\n  useSession: useAliasSession\n}) => {\n  const [previousData, setPreviousData] = useState([]);\n  const sessionData = useAliasSession();\n  const { filters: filterGuestsData } = useAliasProductInventoryGuestsConfig();\n\n  const query = useAliasProductInventoryGuestsQuery({ options: { overrideId: id } });\n  const { [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage } = query;\n\n  const { error, pending, data = {} } = useAliasGetGuestsInventory(id);\n  const { data: listData = [] } = data;\n\n  const onScroll = useAliasOnScroll(id, () => {\n    const updatedData = [...previousData, ...(listData || [])];\n    setPreviousData(updatedData);\n  });\n\n  /**\n   * Render a scroll table loader.\n   *\n   * @returns {Node}\n   */\n  const renderLoader = () => {\n    if (currentPage > 0 && pending) {\n      const scrollLoader = (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n            rowCount: 0,\n            variant: TableVariant.compact\n          }}\n        />\n      );\n\n      return <div className=\"curiosity-table-scroll-loader__custom\">{scrollLoader}</div>;\n    }\n\n    return null;\n  };\n\n  /**\n   * Render a guests table.\n   *\n   * @returns {Node}\n   */\n  const renderTable = () => {\n    let updatedColumnHeaders = [];\n\n    const updatedRows = [...previousData, ...(listData || [])].map(({ ...cellData }) => {\n      const { columnHeaders, cells } = inventoryCardHelpers.parseRowCellsListData({\n        filters: filterGuestsData,\n        cellData,\n        session: sessionData\n      });\n\n      updatedColumnHeaders = columnHeaders;\n\n      return {\n        cells\n      };\n    });\n\n    // ToDo: Review having the height be a calc value\n    // Include the table header\n    let updatedHeight = (numberOfGuests + 1) * 42;\n    updatedHeight = (updatedHeight < 275 && updatedHeight) || 275;\n\n    return (\n      <div className=\"curiosity-table-scroll\" style={{ height: `${updatedHeight}px` }}>\n        <div\n          className={`curiosity-table-scroll-list${(updatedHeight < 275 && '__no-scroll') || ''}`}\n          onScroll={onScroll}\n        >\n          {renderLoader()}\n          {(updatedRows.length && (\n            <Table\n              borders={false}\n              variant={TableVariant.compact}\n              className=\"curiosity-guests-list\"\n              columnHeaders={updatedColumnHeaders}\n              rows={updatedRows}\n            />\n          )) ||\n            null}\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className={`fadein ${(error && 'blur') || ''}`}>\n      {pending && currentPage === 0 && (\n        <Loader\n          variant=\"table\"\n          tableProps={{\n            borders: false,\n            className: 'curiosity-guests-list',\n            colCount: filterGuestsData?.length || (listData?.[0] && Object.keys(listData[0]).length) || 1,\n            colWidth: (filterGuestsData?.length && filterGuestsData.map(({ cellWidth }) => cellWidth)) || [],\n            rowCount: numberOfGuests < defaultPerPage ? numberOfGuests : defaultPerPage,\n            variant: TableVariant.compact\n          }}\n        />\n      )}\n      {((!pending && currentPage === 0) || currentPage > 0) && renderTable()}\n    </div>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useProductInventoryGuestsConfig: Function, useSession: Function, numberOfGuests: number, id: string,\n *     useOnScroll: Function, useGetGuestsInventory: Function, useProductInventoryGuestsQuery: Function,\n *     defaultPerPage: number}}\n */\nInventoryGuests.propTypes = {\n  defaultPerPage: PropTypes.number,\n  id: PropTypes.string.isRequired,\n  numberOfGuests: PropTypes.number.isRequired,\n  useGetGuestsInventory: PropTypes.func,\n  useOnScroll: PropTypes.func,\n  useProductInventoryGuestsConfig: PropTypes.func,\n  useProductInventoryGuestsQuery: PropTypes.func,\n  useSession: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useProductInventoryGuestsConfig: Function, useSession: Function, useOnScroll: Function,\n *     useGetGuestsInventory: Function, useProductInventoryGuestsQuery: Function, defaultPerPage: number}}\n */\nInventoryGuests.defaultProps = {\n  defaultPerPage: 5,\n  useGetGuestsInventory,\n  useOnScroll,\n  useProductInventoryGuestsConfig,\n  useProductInventoryGuestsQuery,\n  useSession\n};\n\nexport { InventoryGuests as default, InventoryGuests };\n","import { useUnmount, useShallowCompareEffect } from 'react-use';\nimport { reduxActions, reduxTypes, storeHooks } from '../../redux';\nimport { useProductInventoryGuestsQuery } from '../productView/productViewContext';\nimport { RHSM_API_QUERY_SET_TYPES } from '../../services/rhsm/rhsmConstants';\n\n/**\n * Guests inventory selector response.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.useSelectorsResponse\n * @returns {{data: (*|{}), pending: (*|boolean), fulfilled, error}}\n */\nconst useSelectorsGuestsInventory = (\n  id,\n  { useSelectorsResponse: useAliasSelectorsResponse = storeHooks.reactRedux.useSelectorsResponse } = {}\n) => {\n  const { error, cancelled, fulfilled, pending, data } = useAliasSelectorsResponse(\n    ({ inventory }) => inventory?.hostsGuests?.[id]\n  );\n\n  return {\n    error,\n    fulfilled,\n    pending: pending || cancelled || false,\n    data: (data?.length === 1 && data[0]) || data || {}\n  };\n};\n\n/**\n * Combined Redux RHSM Actions, getHostsInventoryGuests, and inventory selector response.\n *\n * @param {string} id\n * @param {object} options\n * @param {Function} options.getInventory\n * @param {Function} options.useDispatch\n * @param {Function} options.useProductInventoryQuery\n * @param {Function} options.useSelectorsInventory\n * @returns {Function}\n */\nconst useGetGuestsInventory = (\n  id,\n  {\n    getInventory = reduxActions.rhsm.getHostsInventoryGuests,\n    useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n    useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryGuestsQuery,\n    useSelectorsInventory: useAliasSelectorsInventory = useSelectorsGuestsInventory\n  } = {}\n) => {\n  const query = useAliasProductInventoryQuery({ options: { overrideId: id } });\n  const dispatch = useAliasDispatch();\n  const response = useAliasSelectorsInventory(id);\n\n  useShallowCompareEffect(() => {\n    getInventory(id, query)(dispatch);\n  }, [dispatch, id, query]);\n\n  return {\n    ...response\n  };\n};\n\n/**\n * Use paging as onScroll event for guests inventory.\n *\n * @param {string} id\n * @param {Function} successCallback\n * @param {object} options\n * @param {Function} options.useDispatch\n * @param {Function} options.useSelectorsInventory\n * @param {Function} options.useProductInventoryQuery\n * @returns {Function}\n */\nconst useOnScroll = (\n  id,\n  successCallback,\n  {\n    useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch,\n    useSelectorsInventory: useAliasSelectorsInventory = useSelectorsGuestsInventory,\n    useProductInventoryQuery: useAliasProductInventoryQuery = useProductInventoryGuestsQuery\n  } = {}\n) => {\n  const dispatch = useAliasDispatch();\n  const { pending, data = {} } = useAliasSelectorsInventory(id);\n  const { count: numberOfGuests } = data?.meta || {};\n\n  const query = useAliasProductInventoryQuery({ options: { overrideId: id } });\n  const { [RHSM_API_QUERY_SET_TYPES.LIMIT]: limit, [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage } = query;\n\n  /**\n   * Reset paging in scenarios where inventory is filtered, or guests is collapsed.\n   */\n  useUnmount(() => {\n    dispatch([\n      {\n        type: reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_GUESTS_LIST,\n        viewId: id\n      }\n    ]);\n  });\n\n  /**\n   * On scroll, dispatch type.\n   *\n   * @event onScroll\n   * @param {object} event\n   * @returns {void}\n   */\n  return event => {\n    const { target } = event;\n    const bottom = target.scrollHeight - target.scrollTop === target.clientHeight;\n\n    if (numberOfGuests > (currentPage + 1) * limit && bottom && !pending) {\n      if (typeof successCallback === 'function') {\n        successCallback(event);\n      }\n\n      dispatch([\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.OFFSET],\n          viewId: id,\n          [RHSM_API_QUERY_SET_TYPES.OFFSET]: currentPage + 1\n        },\n        {\n          type: reduxTypes.query.SET_QUERY_RHSM_GUESTS_INVENTORY_TYPES[RHSM_API_QUERY_SET_TYPES.LIMIT],\n          viewId: id,\n          [RHSM_API_QUERY_SET_TYPES.LIMIT]: limit\n        }\n      ]);\n    }\n  };\n};\n\nconst context = {\n  useGetGuestsInventory,\n  useOnScroll,\n  useSelectorsGuestsInventory\n};\n\nexport { context as default, context, useGetGuestsInventory, useOnScroll, useSelectorsGuestsInventory };\n"],"names":["InventoryCard","cardActions","isDisabled","perPageDefault","t","useAliasGetInventory","useGetInventory","useAliasOnPage","useOnPage","useAliasOnColumnSort","useOnColumnSort","useAliasProductInventoryConfig","useProductInventoryConfig","useAliasProductInventoryQuery","useProductInventoryQuery","sessionData","useAliasSession","useSession","query","onPage","onColumnSort","filterInventoryData","filters","settings","error","fulfilled","pending","data","listData","meta","Card","className","CardBody","Bullseye","context","updatedColumnHeaders","updatedRows","itemCount","count","updatedPerPage","RHSM_API_QUERY_SET_TYPES","updatedOffset","isLastPage","paginationHelpers","minHeightContentRefreshKey","MinHeight","key","updateOnContent","CardHeader","CardActions","isCompact","offset","onPerPage","perPage","Loader","variant","tableProps","colCount","length","Object","keys","colWidth","map","cellWidth","rowCount","TableVariant","cellData","inventoryCardHelpers","onSort","session","columnHeaders","cells","subscriptionManagerId","numberOfGuests","expandedContent","hasSubTable","id","undefined","borders","rows","CardFooter","isFooter","dropDirection","defaultProps","CardHeaderMain","ToolbarFieldDisplayName","helpers","translate","useGetInstancesInventory","useOnPageInstances","useOnColumnSortInstances","useProductInventoryHostsConfig","useProductInventoryHostsQuery","getInventory","reduxActions","useDispatch","useAliasDispatch","storeHooks","useProduct","useAliasProduct","useSelectorsResponse","useAliasSelectorsResponse","productId","dispatch","inventory","instancesInventory","cancelled","useShallowCompareEffect","type","reduxTypes","viewId","sortColumns","SORT_TYPES","_data","updatedDirection","direction","updatedSortColumn","values","find","value","_camelCase","SortByDirection","SORT_DIRECTION_TYPES","console","warn","InventoryGuests","updatedHeight","defaultPerPage","useAliasGetGuestsInventory","useGetGuestsInventory","useAliasOnScroll","useOnScroll","useAliasProductInventoryGuestsQuery","useProductInventoryGuestsQuery","useAliasProductInventoryGuestsConfig","useProductInventoryGuestsConfig","useState","previousData","setPreviousData","filterGuestsData","currentPage","options","overrideId","onScroll","updatedData","style","height","scrollLoader","renderLoader","Table","useSelectorsGuestsInventory","hostsGuests","useSelectorsInventory","useAliasSelectorsInventory","response","successCallback","limit","useUnmount","event","target","bottom","scrollHeight","scrollTop","clientHeight"],"sourceRoot":""}
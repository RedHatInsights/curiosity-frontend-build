{"version":3,"file":"js/384.d62c5a75289a8e87f666.js","mappings":"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","sources":["webpack:///./src/components/form/formState.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport _cloneDeep from 'lodash/cloneDeep';\nimport _isEqual from 'lodash/isEqual';\nimport helpers from '../../common/helpers';\n\n/**\n * Internal form state tracking for submitting forms.\n *\n * @memberof Form\n * @module FormState\n */\n\n/**\n * Initial component state values.\n *\n * @type {{submitCount: number, isValid: null, isUpdating: boolean, isSubmitting: boolean, isValidating: boolean}}\n */\nconst initialState = {\n  isUpdating: false,\n  isSubmitting: false,\n  isValid: null,\n  isValidating: false,\n  submitCount: 0\n};\n\n/**\n * Maintain a form's state/context.\n *\n * @augments React.Component\n * @fires onEvent\n * @fires onEventCustom\n * @fires onReset\n * @fires onSubmit\n */\nclass FormState extends React.Component {\n  /**\n   * Infer a field value is \"checked\" from a boolean value.\n   *\n   * @param {object} params\n   * @param {boolean} params.setValuesAssumeBoolIsChecked\n   * @param {object} params.setValues\n   * @returns {{}}\n   */\n  static checkedSetValues({ setValuesAssumeBoolIsChecked, setValues }) {\n    const checked = {};\n\n    if (setValuesAssumeBoolIsChecked) {\n      Object.keys(setValues).forEach(key => {\n        if (typeof setValues[key] === 'boolean') {\n          checked[key] = setValues[key];\n        }\n      });\n    }\n\n    return checked;\n  }\n\n  /**\n   * Check if \"is a promise\".\n   *\n   * @param {*} obj\n   * @returns {boolean}\n   */\n  static isPromise(obj) {\n    return Object.prototype.toString.call(obj) === '[object Promise]';\n  }\n\n  state = {\n    ...initialState\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.touched = {};\n    this.checked = FormState.checkedSetValues(props);\n\n    this.refValues =\n      props.resetUsingSetValues === true || props.setValuesOnUpdate === true ? _cloneDeep(props.setValues) : null;\n\n    this.errors = {};\n    this.values = _cloneDeep(props.setValues);\n  }\n\n  componentDidMount() {\n    const { validateOnMount } = this.props;\n\n    if (validateOnMount === true) {\n      this.validateOnMount();\n    }\n  }\n\n  componentDidUpdate() {\n    const { refValues } = this;\n    const { setValuesOnUpdate, setValues } = this.props;\n\n    if (setValuesOnUpdate === true && !_isEqual(refValues, setValues)) {\n      this.updateComponentValues();\n    }\n  }\n\n  /**\n   * Apply form values with a custom event.\n   *\n   * @event onEventCustom\n   * @param {Array|object} custom\n   */\n  onEventCustom = custom => {\n    const eventArray = (Array.isArray(custom) && custom) || (custom && [custom]);\n\n    if (!eventArray.length) {\n      return;\n    }\n\n    eventArray\n      .filter(event => 'name' in event && ('value' in event || 'checked' in event))\n      .forEach(event => this.onEvent({ target: { ...event }, persist: helpers.noop, type: 'custom' }));\n  };\n\n  /**\n   * Generic \"on event\" for handling returned event objects.\n   *\n   * @event onEvent\n   * @param {object} event\n   */\n  onEvent = event => {\n    const { touched, values } = this;\n    const { id, name, value, checked } = event.options ? { ...event } : event.target;\n\n    event.persist();\n\n    const targetName = name || id || 'generated form state target, add name or id attr to field';\n\n    this.touched = { ...touched, [targetName]: true };\n    this.values = { ...values, [targetName]: value };\n\n    if (checked !== undefined) {\n      this.checked = { ...this.checked, [targetName]: checked };\n    }\n\n    this.setState(\n      {\n        isUpdating: true,\n        isValidating: true\n      },\n      () =>\n        this.validate(event).then(updatedErrors => {\n          const setUpdateErrors = { ...((updatedErrors && updatedErrors[0]) || updatedErrors || {}) };\n          const checkIsValid = !Object.values(setUpdateErrors).filter(val => val === true).length;\n\n          this.errors = setUpdateErrors;\n\n          this.setState({\n            isUpdating: false,\n            isValid: checkIsValid,\n            isValidating: false\n          });\n        })\n    );\n  };\n\n  /**\n   * Reset FormState's form state. Apply prop onReset function.\n   *\n   * @event onReset\n   * @param {object} event\n   */\n  onReset = event => {\n    const { refValues, values } = this;\n    const { setValuesAssumeBoolIsChecked, onReset, resetUsingSetValues } = this.props;\n\n    event.persist();\n\n    const isResetWithSetValues = refValues && resetUsingSetValues === true;\n    const updatedValues = (isResetWithSetValues && _cloneDeep(refValues)) || {};\n    const updatedChecked =\n      (isResetWithSetValues && FormState.checkedSetValues(setValuesAssumeBoolIsChecked, updatedValues)) || {};\n\n    this.values = updatedValues;\n    this.checked = updatedChecked;\n    this.errors = {};\n    this.touched = {};\n\n    this.setState({\n      ...initialState\n    });\n\n    if (isResetWithSetValues) {\n      onReset({ event, ..._cloneDeep({ values: updatedValues, prevValues: values }) });\n    } else {\n      // Resetting the values, potentially, will throw the controlled vs uncontrolled messaging.\n      onReset({ event, values: {}, ..._cloneDeep({ prevValues: values }) });\n    }\n  };\n\n  /**\n   * Validate form, then submit.\n   *\n   * @event onSubmit\n   * @param {object} event\n   */\n  onSubmit = event => {\n    const { submitCount } = this.state;\n\n    event.persist();\n    event.preventDefault();\n\n    this.setState(\n      {\n        submitCount: submitCount + 1,\n        isSubmitting: true,\n        isUpdating: true,\n        isValidating: true\n      },\n      () =>\n        this.validate(event).then(updatedErrors => {\n          const setUpdateErrors = { ...((updatedErrors && updatedErrors[0]) || updatedErrors || {}) };\n          const checkIsValid = !Object.values(setUpdateErrors).filter(val => val === true).length;\n\n          this.errors = setUpdateErrors;\n          this.touched = {};\n\n          this.setState(\n            {\n              isValid: checkIsValid,\n              isValidating: false\n            },\n            () =>\n              checkIsValid &&\n              this.submit(event).then(() => {\n                this.setState({\n                  isSubmitting: false,\n                  isUpdating: false\n                });\n              })\n          );\n        })\n    );\n  };\n\n  /**\n   * Handle submitted form, check and return Promise, or emulate for consistency.\n   *\n   * @param {object} event\n   * @returns {Promise}\n   */\n  submit(event = { type: 'submit' }) {\n    const { checked, errors, values, touched } = this;\n    const { onSubmit } = this.props;\n\n    const checkPromise = onSubmit({\n      event,\n      ..._cloneDeep({ ...this.state, checked, errors, values, touched })\n    });\n\n    if (FormState.isPromise(checkPromise)) {\n      return checkPromise;\n    }\n\n    return {\n      then: callback => callback()\n    };\n  }\n\n  /**\n   * Handle validated form data, check and return Promise, or emulate for consistency.\n   *\n   * @param {object} event\n   * @returns {Promise}\n   */\n  validate(event = { type: 'validate' }) {\n    const { checked, errors, values, touched } = this;\n    const { validate } = this.props;\n\n    const checkPromise = validate({\n      event,\n      ..._cloneDeep({ ...this.state, checked, errors, values, touched })\n    });\n\n    if (FormState.isPromise(checkPromise)) {\n      return checkPromise;\n    }\n\n    return {\n      then: callback => callback(checkPromise)\n    };\n  }\n\n  /**\n   * Shortcut, activate validation on component mount.\n   *\n   * @param {object} event\n   */\n  validateOnMount(event = { type: 'mount' }) {\n    this.validateOnUpdate(event);\n  }\n\n  /**\n   * Validate on component update.\n   *\n   * @param {object} event\n   */\n  validateOnUpdate(event = { type: 'update' }) {\n    this.setState(\n      {\n        isUpdating: true,\n        isValidating: true\n      },\n      () =>\n        this.validate(event).then(updatedErrors => {\n          const setUpdateErrors = { ...((updatedErrors && updatedErrors[0]) || updatedErrors || {}) };\n          const checkIsValid = !Object.values(setUpdateErrors).filter(val => val === true).length;\n\n          this.errors = setUpdateErrors;\n\n          this.setState({\n            isUpdating: false,\n            isValidating: false,\n            isValid: checkIsValid\n          });\n        })\n    );\n  }\n\n  /**\n   * On component update, update state.\n   */\n  updateComponentValues() {\n    const { setValues, setValuesAssumeBoolIsChecked, validateOnUpdate } = this.props;\n\n    this.setState(\n      {\n        isUpdating: true\n      },\n      () => {\n        this.checked = FormState.checkedSetValues(setValuesAssumeBoolIsChecked, setValues);\n        this.refValues = _cloneDeep(setValues);\n        this.values = _cloneDeep(setValues);\n\n        if (validateOnUpdate) {\n          this.validateOnUpdate();\n        } else {\n          this.setState({\n            isUpdating: false\n          });\n        }\n      }\n    );\n  }\n\n  /**\n   * Pass child components, integrate and apply form context.\n   *\n   * @returns {React.ReactNode}\n   */\n  render() {\n    const { checked, errors, values, touched } = this;\n    const { children } = this.props;\n\n    return (\n      <React.Fragment>\n        {children({\n          handleOnEventCustom: this.onEventCustom,\n          handleOnEvent: this.onEvent,\n          handleOnReset: this.onReset,\n          handleOnSubmit: this.onSubmit,\n          ..._cloneDeep({ ...this.state, checked, errors, values, touched })\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{setValuesOnUpdate: boolean, validateOnMount: boolean, children: Function,\n *     setValues: object, onSubmit: Function, resetUsingSetValues: boolean,\n *     setValuesAssumeBoolIsChecked: boolean, onReset: Function, validate: Function,\n *     validateOnUpdate: boolean}}\n */\nFormState.propTypes = {\n  children: PropTypes.func.isRequired,\n  onReset: PropTypes.func,\n  onSubmit: PropTypes.func,\n  resetUsingSetValues: PropTypes.bool,\n  setValues: PropTypes.object,\n  setValuesOnUpdate: PropTypes.bool,\n  setValuesAssumeBoolIsChecked: PropTypes.bool,\n  validate: PropTypes.func,\n  validateOnMount: PropTypes.bool,\n  validateOnUpdate: PropTypes.bool\n};\n\n/**\n * Default props.\n *\n * @type {{setValuesOnUpdate: boolean, validateOnMount: boolean, setValues: {},\n *     onSubmit: Function, resetUsingSetValues: boolean, setValuesAssumeBoolIsChecked: boolean,\n *     onReset: Function, validate: Function, validateOnUpdate: boolean}}\n */\nFormState.defaultProps = {\n  onReset: helpers.noop,\n  onSubmit: helpers.noop,\n  resetUsingSetValues: true,\n  setValues: {},\n  setValuesOnUpdate: false,\n  setValuesAssumeBoolIsChecked: true,\n  validate: helpers.noop,\n  validateOnMount: false,\n  validateOnUpdate: false\n};\n\nexport { FormState as default, FormState };\n"],"names":["initialState","isUpdating","isSubmitting","isValid","isValidating","submitCount","FormState","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","_objectSpread","onEventCustom","custom","eventArray","Array","isArray","length","filter","event","forEach","onEvent","target","persist","helpers","type","_assertThisInitialize","_assertThisInitialized","touched","values","_ref","options","id","name","value","checked","targetName","_defineProperty","undefined","setState","validate","then","updatedErrors","setUpdateErrors","checkIsValid","Object","val","errors","onReset","_assertThisInitialize2","refValues","_this$props","setValuesAssumeBoolIsChecked","resetUsingSetValues","isResetWithSetValues","updatedValues","_cloneDeep","updatedChecked","checkedSetValues","prevValues","onSubmit","preventDefault","submit","setValuesOnUpdate","setValues","_createClass","key","this","validateOnMount","_this$props2","_isEqual","updateComponentValues","arguments","checkPromise","isPromise","callback","validateOnUpdate","_this2","_this3","_this$props3","children","React","handleOnEventCustom","handleOnEvent","handleOnReset","handleOnSubmit","_ref2","keys","obj","prototype","toString","defaultProps"],"sourceRoot":""}
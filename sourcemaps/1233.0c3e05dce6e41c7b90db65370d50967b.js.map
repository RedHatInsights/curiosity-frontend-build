{"version":3,"file":"js/1233.1677634343176.41d4133ca779b27ff98b.js","mappings":"6SAyBMA,EAAqB,SAAHC,GAKlB,IAJJC,EAAyBD,EAAzBC,0BACAC,EAACF,EAADE,EACaC,EAAgBH,EAA7BI,YACgBC,EAAmBL,EAAnCM,eAEMC,EAAWJ,IACjBK,EAAmCH,IAA3BI,EAAUD,EAAVC,WAAYC,EAAUF,EAAVE,WACdC,EAAqBF,GAAc,CAACA,IAAgBC,EAE1D,IAAIC,aAAiB,EAAjBA,EAAmBC,SAAUX,EAE/B,OADAM,EAASI,EAAkB,GAAGE,aACvB,KAUT,IAAMC,EAAa,SAAAC,GAAI,OAAIR,EAASQ,EAAK,EAEzC,OACEC,IAAAA,cAACC,EAAAA,WAAU,CAACC,UAAU,0BACpBF,IAAAA,cAACG,EAAAA,WAAU,CAACC,aAAa,WAAWlB,EAAE,uBAAwB,CAAEmB,QAASC,EAAAA,GAAAA,mBACzEN,IAAAA,cAACO,EAAAA,YAAW,CAACC,UAAQ,GACnBR,IAAAA,cAACS,EAAAA,QAAO,CAACC,WAAS,GACff,aAAiB,EAAjBA,EAAmBgB,KAAI,SAAAC,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAASF,EAATE,UAAWjB,EAAWe,EAAXf,YAAW,OAC7DG,IAAAA,cAACe,EAAAA,KAAI,CACHC,IAAG,mBAAAC,OAAqBH,EAAS,KAAAG,OAAIX,EAAAA,GAAAA,cACrCY,aAAW,EACXC,QAAS,kBAAMrB,EAAWD,EAAY,GAEtCG,IAAAA,cAACoB,EAAAA,UAAS,KACRpB,IAAAA,cAACqB,EAAAA,MAAK,CAACC,aAAa,KAAKC,KAAK,MAC3BrC,EAAE,uBAAwB,CACzBmB,QAASC,EAAAA,GAAAA,gBACTkB,QAASV,MAIfd,IAAAA,cAACyB,EAAAA,SAAQ,CAACvB,UAAU,4CACjBhB,EAAE,6BAA8B,CAC/BmB,QAASC,EAAAA,GAAAA,gBACTkB,QAASX,KAGbb,IAAAA,cAAC0B,EAAAA,WAAU,KACT1B,IAAAA,cAAC2B,EAAAA,OAAM,CACLC,QAAQ,OACRC,UAAQ,EACRV,QAAS,SAAAW,GACPA,EAAMC,iBACNjC,EAAWD,EACb,EACAmC,KAAMhC,IAAAA,cAACiC,EAAAA,eAAc,MACrBC,aAAa,SAAO,SAKnB,MAMnB,EAmBAnD,EAAmBoD,aAAe,CAChClD,0BAA2B,EAC3BC,EAAGkD,EAAAA,UACHhD,YAAaiD,EAAAA,cAAAA,YACb/C,eAAgB+C,EAAAA,cAAAA,e","sources":["webpack:///./src/components/productView/productViewMissing.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Card, CardBody, CardFooter, CardTitle, Gallery, Title, PageSection } from '@patternfly/react-core';\nimport { ArrowRightIcon } from '@patternfly/react-icons';\nimport { PageLayout, PageHeader } from '../pageLayout/pageLayout';\nimport { routerContext } from '../router';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * @memberof ProductView\n * @module ProductViewMissing\n */\n\n/**\n * Render a missing product view.\n *\n * @fires onNavigate\n * @param {object} props\n * @param {number} props.availableProductsRedirect\n * @param {Function} props.t\n * @param {Function} props.useNavigate\n * @param {Function} props.useRouteDetail\n * @returns {React.ReactNode}\n */\nconst ProductViewMissing = ({\n  availableProductsRedirect,\n  t,\n  useNavigate: useAliasNavigate,\n  useRouteDetail: useAliasRouteDetail\n}) => {\n  const navigate = useAliasNavigate();\n  const { firstMatch, allConfigs } = useAliasRouteDetail();\n  const availableProducts = (firstMatch && [firstMatch]) || allConfigs;\n\n  if (availableProducts?.length <= availableProductsRedirect) {\n    navigate(availableProducts[0].productPath);\n    return null;\n  }\n\n  /**\n   * On click, update history.\n   *\n   * @event onNavigate\n   * @param {string} path\n   * @returns {void}\n   */\n  const onNavigate = path => navigate(path);\n\n  return (\n    <PageLayout className=\"curiosity-missing-view\">\n      <PageHeader productLabel=\"missing\">{t(`curiosity-view.title`, { appName: helpers.UI_DISPLAY_NAME })}</PageHeader>\n      <PageSection isFilled>\n        <Gallery hasGutter>\n          {availableProducts?.map(({ productGroup, productId, productPath }) => (\n            <Card\n              key={`missingViewCard-${productId}-${helpers.generateId()}`}\n              isHoverable\n              onClick={() => onNavigate(productPath)}\n            >\n              <CardTitle>\n                <Title headingLevel=\"h2\" size=\"lg\">\n                  {t('curiosity-view.title', {\n                    appName: helpers.UI_DISPLAY_NAME,\n                    context: productId\n                  })}\n                </Title>\n              </CardTitle>\n              <CardBody className=\"curiosity-missing-view__card-description\">\n                {t('curiosity-view.description', {\n                  appName: helpers.UI_DISPLAY_NAME,\n                  context: productGroup\n                })}\n              </CardBody>\n              <CardFooter>\n                <Button\n                  variant=\"link\"\n                  isInline\n                  onClick={event => {\n                    event.preventDefault();\n                    onNavigate(productPath);\n                  }}\n                  icon={<ArrowRightIcon />}\n                  iconPosition=\"right\"\n                >\n                  Open\n                </Button>\n              </CardFooter>\n            </Card>\n          ))}\n        </Gallery>\n      </PageSection>\n    </PageLayout>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useNavigate: Function, availableProductsRedirect: number, t: Function, useRouteDetail: Function}}\n */\nProductViewMissing.propTypes = {\n  availableProductsRedirect: PropTypes.number,\n  t: PropTypes.func,\n  useNavigate: PropTypes.func,\n  useRouteDetail: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useNavigate: Function, availableProductsRedirect: number, t: translate, useRouteDetail: Function}}\n */\nProductViewMissing.defaultProps = {\n  availableProductsRedirect: 4,\n  t: translate,\n  useNavigate: routerContext.useNavigate,\n  useRouteDetail: routerContext.useRouteDetail\n};\n\nexport { ProductViewMissing as default, ProductViewMissing };\n"],"names":["ProductViewMissing","_ref","availableProductsRedirect","t","useAliasNavigate","useNavigate","useAliasRouteDetail","useRouteDetail","navigate","_useAliasRouteDetail","firstMatch","allConfigs","availableProducts","length","productPath","onNavigate","path","React","PageLayout","className","PageHeader","productLabel","appName","helpers","PageSection","isFilled","Gallery","hasGutter","map","_ref2","productGroup","productId","Card","key","concat","isHoverable","onClick","CardTitle","Title","headingLevel","size","context","CardBody","CardFooter","Button","variant","isInline","event","preventDefault","icon","ArrowRightIcon","iconPosition","defaultProps","translate","routerContext"],"sourceRoot":""}
{"version":3,"file":"js/31.1677634343176.41d4133ca779b27ff98b.js","mappings":"kTAmCMA,EAAI,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,IAAAK,GAAAC,EAAAA,EAAAA,GAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GA6CP,OA7COP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACRM,MAAQ,CACNC,iBAAkB,KAClBC,YAAa,MACdb,EAgCDc,MAAQ,SAAAC,GAAe,IAAZC,EAAKD,EAALC,MACDF,EAAUd,EAAKiB,MAAfH,MAERd,EAAKkB,SACH,CACEN,iBAAkBI,IAEpB,kBAAMF,EAAM,CAAEE,MAAAA,GAAQ,GAE1B,EAAChB,CAAA,CAkEA,OAlEAmB,EAAAA,EAAAA,GAAAxB,EAAA,EAAAyB,IAAA,oBAAAC,MAvCD,WAGsB,OAFIC,KAAKX,MAArBE,aAGNS,KAAKC,YAET,GAAC,CAAAH,IAAA,qBAAAC,MAED,SAAmBG,GACjB,IAAQC,EAASH,KAAKL,MAAdQ,KASHC,IAAaF,EAAUC,KAAMA,GARf,SAACE,EAAQC,GAC1B,GAAsB,mBAAXD,GAA2C,mBAAXC,EACzC,OAAOD,EAAOE,aAAeD,EAAOC,UAIxC,KAGEP,KAAKC,YAET,GAEA,CAAAH,IAAA,aAAAC,MAqBA,WACE,IAAAS,EAA8CR,KAAKL,MAA3Cc,EAASD,EAATC,UAAWC,EAAgBF,EAAhBE,iBAAkBP,EAAIK,EAAJL,KACjCb,EAAmBoB,EAEjBnB,EAAcY,EAAKQ,KAAI,SAAAC,EAA6BlB,GAAU,IAApCmB,EAAMD,EAANC,OAAQC,EAAOF,EAAPE,QAASC,EAAKH,EAALG,MAG/C,OAFAzB,EAAmBuB,EAASnB,EAAQJ,EAGlC0B,IAAAA,cAACC,EAAAA,IAAG,CAACnB,IAAKiB,EAAOG,SAAUxB,EAAOqB,MAAOC,IAAAA,cAACG,EAAAA,aAAY,KAAEJ,IACrDD,EAGP,IAEyB,iBAAdL,IACTnB,EAAmBmB,GAGrBT,KAAKJ,SAAS,CACZN,iBAAAA,EACAC,YAAAA,GAEJ,GAEA,CAAAO,IAAA,aAAAC,MAKA,WAAa,IAAAqB,EAAA,KACXC,EAA0CrB,KAAKX,MAAvCC,EAAgB+B,EAAhB/B,iBAAkBC,EAAW8B,EAAX9B,YAC1B+B,EAAyCtB,KAAKL,MAAtC4B,EAASD,EAATC,UAAWC,EAAiBF,EAAjBE,kBAEnB,OACER,IAAAA,cAACS,EAAAA,KAAM,CACLF,UAAS,iBAAAnC,OAAqBoC,EAAuC,GAAlB,cAAoB,KAAApC,OAAImC,GAAa,IACxFG,UAAWpC,EACXqC,SAAU,SAACC,EAAOlC,GAAK,OAAK0B,EAAK5B,MAAM,CAAEoC,MAAAA,EAAOlC,MAAAA,GAAQ,EACxDmC,cAAY,EACZC,eAAa,EACbC,MAAO,CACLC,QAAS,YACTC,GAAI,YAGL1C,EAGP,GAEA,CAAAO,IAAA,SAAAC,MAKA,WACE,OACEiB,IAAAA,cAACkB,EAAAA,KAAI,CAACX,UAAU,4BACdP,IAAAA,cAACmB,EAAAA,SAAQ,CAACC,KAAM,IAAKpC,KAAKqC,cAGhC,KAAChE,CAAA,CA/GO,CAAS2C,IAAAA,WA6InB3C,EAAKiE,aAAe,CAClB7B,UAAW,KACXc,UAAW,GACXb,iBAAkB,EAClBc,mBAAmB,EACnBhC,MAAO+C,EAAAA,GAAAA,KACPpC,KAAM,G","sources":["webpack:///./src/components/tabs/tabs.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tabs as PfTabs, Tab, TabTitleText, Grid, GridItem } from '@patternfly/react-core';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { helpers } from '../../common';\n\n/**\n * PF tabs with state.\n *\n * @memberof Components\n * @module Tabs\n */\n\n/**\n * FixMe: PF tabs misinterprets \"isElementInView\" when tab title nodes are loaded dynamically\n * It appears the use of isElementInView within PF tabs is trying to be predicative in using\n * \"getBoundingClientRect\" but produces questionable results in scenarios where content is\n * async created. isElementInView assumes some form of the content will always be there\n * instead of scenarios where someone tries to dynamically apply components. It may be good to\n * review using a window.setTimeout(() => handleScrollButtons()) in componentDidMount.\n *\n * Our temporary solution is to simply hide the buttons with a manual set flag affecting the\n * CSS class. This will most likely cause long-term issues.\n */\n/**\n * ToDo: Insights frontend components uses a custom tabs layout, investigate related CSS classes\n * Originally we applied the CSS classes, but they appeared to provide nothing. Since Insights\n * rolled its own tabs we're hesitant to apply said classes without understanding what they provide.\n */\n/**\n * A set of tabs.\n *\n * @augments React.Component\n * @fires onTab\n */\nclass Tabs extends React.Component {\n  state = {\n    updatedActiveTab: null,\n    updatedTabs: null\n  };\n\n  componentDidMount() {\n    const { updatedTabs } = this.state;\n\n    if (updatedTabs === null) {\n      this.setTabData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { tabs } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (!_isEqualWith(prevProps.tabs, tabs, customizer)) {\n      this.setTabData();\n    }\n  }\n\n  /**\n   * On tab selected\n   *\n   * @event onTab\n   * @param {object} params\n   * @param {number} params.index\n   */\n  onTab = ({ index }) => {\n    const { onTab } = this.props;\n\n    this.setState(\n      {\n        updatedActiveTab: index\n      },\n      () => onTab({ index })\n    );\n  };\n\n  /**\n   * Convert tab objects into the required PF Tab format.\n   */\n  setTabData() {\n    const { activeTab, defaultActiveTab, tabs } = this.props;\n    let updatedActiveTab = defaultActiveTab;\n\n    const updatedTabs = tabs.map(({ active, content, title }, index) => {\n      updatedActiveTab = active ? index : updatedActiveTab;\n\n      return (\n        <Tab key={title} eventKey={index} title={<TabTitleText>{title}</TabTitleText>}>\n          {content}\n        </Tab>\n      );\n    });\n\n    if (typeof activeTab === 'number') {\n      updatedActiveTab = activeTab;\n    }\n\n    this.setState({\n      updatedActiveTab,\n      updatedTabs\n    });\n  }\n\n  /**\n   * Apply props to tabs.\n   *\n   * @returns {React.ReactNode}\n   */\n  renderTabs() {\n    const { updatedActiveTab, updatedTabs } = this.state;\n    const { className, hasOverflowScroll } = this.props;\n\n    return (\n      <PfTabs\n        className={`curiosity-tabs${(!hasOverflowScroll && '__no-scroll') || ''} ${className || ''}`}\n        activeKey={updatedActiveTab}\n        onSelect={(event, index) => this.onTab({ event, index })}\n        mountOnEnter\n        unmountOnExit\n        inset={{\n          default: 'insetNone',\n          md: 'insetLg'\n        }}\n      >\n        {updatedTabs}\n      </PfTabs>\n    );\n  }\n\n  /**\n   * Render tabs.\n   *\n   * @returns {React.ReactNode}\n   */\n  render() {\n    return (\n      <Grid className=\"curiosity-tabs-container\">\n        <GridItem span={12}>{this.renderTabs()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.propTypes = {\n  activeTab: PropTypes.number,\n  className: PropTypes.string,\n  defaultActiveTab: PropTypes.number,\n  hasOverflowScroll: PropTypes.bool,\n  onTab: PropTypes.func,\n  tabs: PropTypes.arrayOf(\n    PropTypes.shape({\n      active: PropTypes.bool,\n      content: PropTypes.node.isRequired,\n      title: PropTypes.node.isRequired\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{tabs: Array, hasOverflowScroll: boolean, onTab: Function, className: string,\n *     defaultActiveTab: number, activeTab: number}}\n */\nTabs.defaultProps = {\n  activeTab: null,\n  className: '',\n  defaultActiveTab: 0,\n  hasOverflowScroll: false,\n  onTab: helpers.noop,\n  tabs: []\n};\n\nexport { Tabs as default, Tabs };\n"],"names":["Tabs","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","updatedActiveTab","updatedTabs","onTab","_ref","index","props","setState","_createClass","key","value","this","setTabData","prevProps","tabs","_isEqualWith","valueA","valueB","toString","_this$props","activeTab","defaultActiveTab","map","_ref2","active","content","title","React","Tab","eventKey","TabTitleText","_this2","_this$state","_this$props2","className","hasOverflowScroll","PfTabs","activeKey","onSelect","event","mountOnEnter","unmountOnExit","inset","default","md","Grid","GridItem","span","renderTabs","defaultProps","helpers"],"sourceRoot":""}
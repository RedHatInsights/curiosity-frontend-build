{"version":3,"file":"js/2436.1643121555415.01f4c28f8272826bf7dd.js","mappings":"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AAW,MACX,aAAc,OAIf,SAASs4B,EAAeC,GACvB,IAAI1nC,EAAK2nC,EAAsBD,GAC/B,OAAOE,EAAoB5nC,GAE5B,SAAS2nC,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAE14B,EAAKu4B,GAAM,CACpC,IAAIj6B,EAAI,IAAIxE,MAAM,uBAAyBy+B,EAAM,KAEjD,MADAj6B,EAAEiyB,KAAO,mBACHjyB,EAEP,OAAO0B,EAAIu4B,GAEZD,EAAepmC,KAAO,WACrB,OAAOZ,OAAOY,KAAK8N,IAEpBs4B,EAAeloC,QAAUooC,EACzB7pC,EAAOC,QAAU0pC,EACjBA,EAAeznC,GAAK,O,gBCnSpB,IAAImP,EAAM,CACT,qCAAsC,CACrC,OAED,qCAAsC,CACrC,MACA,MAED,mBAAoB,CACnB,MACA,IACA,KACA,KACA,KAED,4BAA6B,CAC5B,MACA,MAED,0BAA2B,CAC1B,MACA,MAED,2BAA4B,CAC3B,MACA,IACA,KACA,KACA,MAED,0BAA2B,CAC1B,MACA,IACA,MAED,uBAAwB,CACvB,KACA,MAED,yBAA0B,CACzB,MACA,IACA,MAED,0BAA2B,CAC1B,MACA,MAED,qBAAsB,CACrB,MACA,KACA,KACA,MAED,wBAAyB,CACxB,MACA,MAED,sBAAuB,CACtB,MACA,IACA,KAED,mBAAoB,CACnB,MACA,IACA,MAED,sBAAuB,CACtB,MACA,MAED,sCAAuC,CACtC,MACA,IACA,KACA,KACA,IACA,MAED,2BAA4B,CAC3B,MACA,IACA,KACA,KACA,IACA,KACA,KACA,KAED,2CAA4C,CAC3C,MACA,IACA,KACA,KACA,IACA,MAED,gCAAiC,CAChC,MACA,IACA,KACA,KACA,IACA,KACA,MAED,sCAAuC,CACtC,MACA,MAED,4CAA6C,CAC5C,MACA,KAED,uCAAwC,CACvC,MACA,MAED,kCAAmC,CAClC,MACA,MAED,kCAAmC,CAClC,MACA,MAED,iCAAkC,CACjC,MACA,IACA,KACA,KACA,IACA,KACA,KACA,MAED,uCAAwC,CACvC,MACA,IACA,KACA,MAED,kCAAmC,CAClC,MACA,IACA,KACA,KACA,IACA,KACA,MAED,6BAA8B,CAC7B,MACA,MAED,iBAAkB,CACjB,OAED,8CAA+C,CAC9C,MACA,KACA,KACA,KACA,MAED,mCAAoC,CACnC,MACA,KACA,KACA,MAED,0CAA2C,CAC1C,MACA,MAED,qDAAsD,CACrD,MACA,KACA,MAED,kCAAmC,CAClC,MACA,KAED,mCAAoC,CACnC,MACA,MAED,qBAAsB,CACrB,MAED,+BAAgC,CAC/B,OAED,2BAA4B,CAC3B,MACA,MAED,2BAA4B,CAC3B,MACA,MAED,8BAA+B,CAC9B,MAED,6BAA8B,CAC7B,OAED,6BAA8B,CAC7B,OAED,+BAAgC,CAC/B,OAED,8BAA+B,CAC9B,OAED,8BAA+B,CAC9B,OAED,6BAA8B,CAC7B,MACA,MAED,oCAAqC,CACpC,MACA,MAED,+BAAgC,CAC/B,MACA,IACA,KACA,KACA,KACA,IACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,MAED,sCAAuC,CACtC,MACA,MAED,sCAAuC,CACtC,MACA,MAED,iDAAkD,CACjD,MACA,IACA,KACA,KACA,KACA,IACA,KACA,IACA,KACA,KACA,KACA,MAED,iDAAkD,CACjD,MACA,IACA,KACA,KACA,KACA,IACA,KACA,KACA,IACA,KACA,KACA,KACA,KACA,MAED,oBAAqB,CACpB,OAED,uBAAwB,CACvB,OAED,qBAAsB,CACrB,OAED,4BAA6B,CAC5B,OAED,4BAA6B,CAC5B,OAED,mBAAoB,CACnB,OAED,wBAAyB,CACxB,OAED,2BAA4B,CAC3B,OAED,iBAAkB,CACjB,MACA,IAED,uBAAwB,CACvB,MACA,IACA,KACA,IACA,MAED,8BAA+B,CAC9B,MACA,IACA,KACA,IACA,MAED,uCAAwC,CACvC,MACA,MAED,uCAAwC,CACvC,KACA,IACA,MAED,yCAA0C,CACzC,MACA,IACA,KACA,KAED,0CAA2C,CAC1C,MACA,IACA,KACA,IACA,MAED,+BAAgC,CAC/B,MACA,IACA,MAED,+BAAgC,CAC/B,MACA,IACA,MAED,iCAAkC,CACjC,MACA,IACA,OAGF,SAAS24B,EAAoBJ,GAC5B,IAAIE,EAAoBC,EAAE14B,EAAKu4B,GAC9B,OAAOpoC,QAAQC,UAAUwoC,MAAK,KAC7B,IAAIt6B,EAAI,IAAIxE,MAAM,uBAAyBy+B,EAAM,KAEjD,MADAj6B,EAAEiyB,KAAO,mBACHjyB,KAIR,IAAIu6B,EAAM74B,EAAIu4B,GAAM1nC,EAAKgoC,EAAI,GAC7B,OAAO1oC,QAAQiS,IAAIy2B,EAAIlW,MAAM,GAAG3iB,IAAIy4B,EAAoBn6B,IAAIs6B,MAAK,IACzDH,EAAoB5nC,KAG7B8nC,EAAoBzmC,KAAO,IAAOZ,OAAOY,KAAK8N,GAC9C24B,EAAoB9nC,GAAK,MACzBlC,EAAOC,QAAU+pC,G","sources":["webpack:///./config/build.empty.js","webpack:///./src/app.js","webpack:///./src/common/helpers.js","webpack:///./src/common/dateHelpers.js","webpack:///./src/common/downloadHelpers.js","webpack:///./src/components/authentication/authentication.js","webpack:///./src/components/i18n/i18n.js","webpack:///./src/components/loader/loader.js","webpack:///./src/components/messageView/messageView.js","webpack:///./src/components/pageLayout/pageColumns.js","webpack:///./src/components/pageLayout/pageHeader.js","webpack:///./src/components/pageLayout/pageLayout.js","webpack:///./src/components/pageLayout/pageMessages.js","webpack:///./src/components/pageLayout/pageSection.js","webpack:///./src/components/pageLayout/pageToolbar.js","webpack:///./src/components/router/redirect.js","webpack:///./src/components/router/router.js","webpack:///./src/components/router/routerContext.js","webpack:///./src/components/router/routerHelpers.js","webpack:///./src/components/table/table.js","webpack:///./src/components/table/tableEmpty.js","webpack:///./src/components/table/tableSkeleton.js","webpack:///./src/config/product.rhel.js","webpack:///./src/config/product.openshiftContainer.js","webpack:///./src/config/product.openshiftMetrics.js","webpack:///./src/config/product.openshiftDedicated.js","webpack:///./src/config/product.rhosak.js","webpack:///./src/config/product.satellite.js","webpack:///./src/config/routes.js","webpack:///./src/hooks/useRouter.js","webpack:///./src/redux/common/apiQueries.js","webpack:///./src/redux/common/reduxHelpers.js","webpack:///./src/redux/hooks/useReactRedux.js","webpack:///./src/redux/hooks/useRhsmActions.js","webpack:///./src/redux/hooks/index.js","webpack:///./src/redux/hooks/useRhsmSelectors.js","webpack:///./src/redux/actions/platformActions.js","webpack:///./src/redux/actions/rhsmActions.js","webpack:///./src/services/userServices.js","webpack:///./src/redux/actions/index.js","webpack:///./src/redux/actions/userActions.js","webpack:///./src/redux/reducers/graphReducer.js","webpack:///./src/redux/reducers/inventoryReducer.js","webpack:///./src/redux/reducers/messagesReducer.js","webpack:///./src/redux/reducers/toolbarReducer.js","webpack:///./src/redux/reducers/userReducer.js","webpack:///./src/redux/reducers/viewReducer.js","webpack:///./src/redux/reducers/index.js","webpack:///./src/redux/selectors/appMessagesSelectors.js","webpack:///./src/redux/selectors/userSelectors.js","webpack:///./src/redux/selectors/guestsListSelectors.js","webpack:///./src/redux/selectors/graphCardSelectors.js","webpack:///./src/redux/selectors/inventoryListSelectors.js","webpack:///./src/redux/selectors/instancesListSelectors.js","webpack:///./src/redux/selectors/subscriptionsListSelectors.js","webpack:///./src/redux/selectors/index.js","webpack:///./src/redux/middleware/actionRecordMiddleware.js","webpack:///./src/redux/middleware/index.js","webpack:///./src/redux/middleware/statusMiddleware.js","webpack:///./src/redux/middleware/multiActionMiddleware.js","webpack:///./src/redux/store.js","webpack:///./src/redux/types/appTypes.js","webpack:///./src/redux/types/graphTypes.js","webpack:///./src/redux/types/inventoryTypes.js","webpack:///./src/redux/types/platformTypes.js","webpack:///./src/redux/types/queryTypes.js","webpack:///./src/redux/types/userTypes.js","webpack:///./src/redux/types/index.js","webpack:///./src/redux/types/toolbarTypes.js","webpack:///./src/redux/types/rhsmTypes.js","webpack:///./src/services/common/helpers.js","webpack:///./src/services/config.js","webpack:///./src/services/platformServices.js","webpack:///./src/services/rhsm/rhsmConstants.js","webpack:///./src/services/rhsm/rhsmSchemas.js","webpack:///./src/services/rhsm/rhsmTranformers.js","webpack:///./src/services/rhsm/rhsmServices.js","webpack:///./src/types/index.js","webpack:///./src/types/platformApiTypes.js","webpack:///./src/types/rhsmApiTypes.js","webpack:////home/travis/build/RedHatInsights/curiosity-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/components|lazy|/^\\.\\/.*\\.js$/|exclude: /\\.test\\.js$/|groupOptions: {}|namespace object"],"sourcesContent":["// Used as an empty module to save bundle size\nmodule.exports = {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useMount } from 'react-use';\nimport { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { reduxActions, storeHooks } from './redux';\nimport { I18n } from './components/i18n/i18n';\nimport { Router } from './components/router';\nimport Authentication from './components/authentication/authentication';\n\n/**\n * Application\n *\n * @param {object} props\n * @param {Function} props.getLocale\n * @param {Function} props.useDispatch\n * @param {Function} props.useSelector\n * @returns {Node}\n */\nconst App = ({ getLocale, useDispatch: useAliasDispatch, useSelector: useAliasSelector }) => {\n  const dispatch = useAliasDispatch();\n  const { value: locale } = useAliasSelector(({ user }) => user.session?.locale, {});\n\n  useMount(() => {\n    dispatch(getLocale());\n  });\n\n  return (\n    <I18n locale={locale || null}>\n      <NotificationsPortal />\n      <Authentication>\n        <Router />\n      </Authentication>\n    </I18n>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.propTypes = {\n  getLocale: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useSelector: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{useSelector: Function, useDispatch: Function, getLocale: Function}}\n */\nApp.defaultProps = {\n  getLocale: reduxActions.user.getLocale,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useSelector: storeHooks.reactRedux.useSelector\n};\n\nexport { App as default, App };\n","import numbro from 'numbro';\n\n/**\n * Generate a random'ish ID.\n *\n * @param {string} prefix\n * @returns {string}\n */\nconst generateId = prefix =>\n  `${prefix || 'generatedid'}-${(process.env.REACT_APP_ENV !== 'test' && Math.ceil(1e5 * Math.random())) || ''}`;\n\n/**\n * Check if \"is a Date\"\n *\n * @param {Date|*} date\n * @returns {boolean}\n */\nconst isDate = date => Object.prototype.toString.call(date) === '[object Date]';\n\n/**\n * Check if \"is a Promise\", \"Promise like\".\n *\n * @param {Promise|*} obj\n * @returns {boolean}\n */\nconst isPromise = obj => /^\\[object (Promise|Async|AsyncFunction)]/.test(Object.prototype.toString.call(obj));\n\n/**\n * An empty function.\n * Typically used as a default prop.\n */\nconst noop = Function.prototype;\n\n/**\n * An empty promise.\n * Typically used as a default prop, or during testing.\n *\n * @type {Promise<{}>}\n */\nconst noopPromise = Promise.resolve({});\n\n/**\n * A placeholder for \"t\", translation method.\n * Associated with the i18n package, and typically used as a default prop.\n *\n * @param {string|Array} key\n * @param {string|object|Array} value\n * @param {Array} components\n * @returns {string}\n */\nconst noopTranslate = (key, value, components) => {\n  const updatedKey = (Array.isArray(key) && `[${key}]`) || key;\n  const updatedValue =\n    (typeof value === 'string' && value) ||\n    (Array.isArray(value) && `[${value}]`) ||\n    (Object.keys(value || '').length && JSON.stringify(value)) ||\n    '';\n  const updatedComponents = (components && `${components}`) || '';\n\n  return `t(${updatedKey}${(updatedValue && `, ${updatedValue}`) || ''}${\n    (updatedComponents && `, ${updatedComponents}`) || ''\n  })`;\n};\n\n/**\n * ToDo: review adding \"locale\" for numbro\n */\n/**\n * Convenience wrapper for numbro. Numbro assumes all values passed to it conform as \"number\".\n * This allows us to optional chain the function results.\n *\n * @param {*} value\n * @returns {numbro.Numbro|*}\n */\nconst numberDisplay = value => {\n  if (typeof value !== 'number' || Number.isNaN(value)) {\n    return value;\n  }\n  return numbro(value);\n};\n\n/**\n * Is dev mode active.\n * Associated with using the NPM script \"start\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst DEV_MODE = process.env.REACT_APP_ENV === 'development';\n\n/**\n * Is prod mode active.\n * Associated with production builds. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst PROD_MODE = process.env.REACT_APP_ENV === 'production';\n\n/**\n * Is review/proxy mode active.\n * Associated with using the NPM script \"start:proxy\". See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst REVIEW_MODE = process.env.REACT_APP_ENV === 'review';\n\n/**\n * Is test mode active.\n * Associated with running unit tests. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst TEST_MODE = process.env.REACT_APP_ENV === 'test';\n\n/**\n * Apply a path prefix for routing.\n * Typically associated with applying a \"beta\" path prefix. See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_DEPLOY_PATH_PREFIX = process.env.REACT_APP_UI_DEPLOY_PATH_PREFIX;\n\n/**\n * Disable an aspect of the UI.\n * Typically associated with disabling views through route settings. See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED = process.env.REACT_APP_UI_DISABLED === 'true';\n\n/**\n * Disable the graph card aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_GRAPH = process.env.REACT_APP_UI_DISABLED_GRAPH === 'true';\n\n/**\n * Disable the inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE = process.env.REACT_APP_UI_DISABLED_TABLE === 'true';\n\n/**\n * Disable the current hosts inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_HOSTS = process.env.REACT_APP_UI_DISABLED_TABLE_HOSTS === 'true';\n\n/**\n * Disable the current instances inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_INSTANCES = process.env.REACT_APP_UI_DISABLED_TABLE_INSTANCES === 'true';\n\n/**\n * Disable the current subscriptions inventory/table aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TABLE_SUBSCRIPTIONS = process.env.REACT_APP_UI_DISABLED_TABLE_SUBSCRIPTIONS === 'true';\n\n/**\n * Disable the filter toolbar aspect of the UI.\n * See dotenv config files for activation.\n *\n * @type {boolean}\n */\nconst UI_DISABLED_TOOLBAR = process.env.REACT_APP_UI_DISABLED_TOOLBAR === 'true';\n\n/**\n * UI application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_NAME = process.env.REACT_APP_UI_DISPLAY_NAME;\n\n/**\n * UI application configuration name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_CONFIG_NAME = process.env.REACT_APP_UI_DISPLAY_CONFIG_NAME;\n\n/**\n * UI application sentence start name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_DISPLAY_START_NAME = process.env.REACT_APP_UI_DISPLAY_START_NAME;\n\n/**\n * A url, or uri, for \"contact us\".\n *\n * @type {string}\n */\nconst UI_LINK_CONTACT_US = process.env.REACT_APP_UI_LINK_CONTACT_US;\n\n/**\n * A url, or uri, for \"learn more\".\n *\n * @type {string}\n */\nconst UI_LINK_LEARN_MORE = process.env.REACT_APP_UI_LINK_LEARN_MORE;\n\n/**\n * A url, or uri, for \"recommend actions\"\n *\n * @type {string}\n */\nconst UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS = process.env.REACT_APP_UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS;\n\n/**\n * UI locale default.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG;\n\n/**\n * UI locale default description.\n *\n * @type {string}\n */\nconst UI_LOCALE_DEFAULT_DESC = process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG_DESC;\n\n/**\n * UI state logging name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_LOGGER_ID = process.env.REACT_APP_UI_LOGGER_ID || 'GUI';\n\n/**\n * UI state logging file name.\n *\n * @type {string}\n */\nconst UI_LOGGER_FILE = process.env.REACT_APP_UI_LOGGER_FILE || 'debug_log_{0}.json';\n\n/**\n * UI packaged application name.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_NAME = process.env.REACT_APP_UI_NAME;\n\n/**\n * UI packaged application path, with generated prefix.\n * See dotenv config files for updating. See build scripts for generated prefix.\n *\n * @type {string}\n */\nconst UI_PATH = process.env.PUBLIC_URL || '/';\n\n/**\n * UI packaged application version, with generated hash.\n * See dotenv config files for updating. See build scripts for generated hash.\n *\n * @type {string}\n */\nconst UI_VERSION = process.env.REACT_APP_UI_VERSION;\n\n/**\n * UI exposed window name/id.\n * See dotenv config files for updating.\n *\n * @type {string}\n */\nconst UI_WINDOW_ID = process.env.REACT_APP_UI_WINDOW_ID || 'GUI';\n\n/**\n * Expose an application specific object.\n * Associated with access on a browser's developer console. Limits exposed additions to\n * test and non-production environments only. Exposes helpers across all environments.\n *\n * @param {object} obj\n * @param {object} options\n * @property {boolean} limit\n * @property {string} id\n */\nconst browserExpose = (obj = {}, options) => {\n  const { limit = PROD_MODE, id = UI_WINDOW_ID } = options || {};\n  window[id] = (limit && { ...window[id] }) || { ...window[id], ...obj };\n};\n\nconst helpers = {\n  browserExpose,\n  generateId,\n  isDate,\n  isPromise,\n  noop,\n  noopPromise,\n  noopTranslate,\n  numberDisplay,\n  DEV_MODE,\n  PROD_MODE,\n  REVIEW_MODE,\n  TEST_MODE,\n  UI_DEPLOY_PATH_PREFIX,\n  UI_DISABLED,\n  UI_DISABLED_GRAPH,\n  UI_DISABLED_TABLE,\n  UI_DISABLED_TABLE_HOSTS,\n  UI_DISABLED_TABLE_INSTANCES,\n  UI_DISABLED_TABLE_SUBSCRIPTIONS,\n  UI_DISABLED_TOOLBAR,\n  UI_DISPLAY_NAME,\n  UI_DISPLAY_CONFIG_NAME,\n  UI_DISPLAY_START_NAME,\n  UI_LINK_CONTACT_US,\n  UI_LINK_LEARN_MORE,\n  UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS,\n  UI_LOCALE_DEFAULT,\n  UI_LOCALE_DEFAULT_DESC,\n  UI_LOGGER_ID,\n  UI_LOGGER_FILE,\n  UI_NAME,\n  UI_PATH,\n  UI_VERSION,\n  UI_WINDOW_ID\n};\n\n/**\n * Expose helpers to the browser's developer console.\n */\nhelpers.browserExpose({ ...helpers }, { limit: false });\n\nexport { helpers as default, helpers };\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES } from '../types/rhsmApiTypes';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * Return a date.\n *\n * @returns {string|Date}\n */\nconst getCurrentDate = () =>\n  (helpers.TEST_MODE && moment.utc('20190720').toDate()) ||\n  (helpers.DEV_MODE &&\n    process.env.REACT_APP_DEBUG_DEFAULT_DATETIME &&\n    moment.utc(process.env.REACT_APP_DEBUG_DEFAULT_DATETIME).toDate()) ||\n  moment.utc().toDate();\n\n/**\n * Set a date range based on a granularity type.\n *\n * @param {object} params\n * @param {Date} params.date Start date, typically the current date.\n * @param {number} params.subtract Number of granularity type to subtract from the current date.\n * @param {string} params.measurement Granularity type.\n * @param {string} params.endOfMeasurement Granularity type.\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst setRangedDateTime = ({ date, subtract, measurement, endOfMeasurement = 'days' }) => ({\n  startDate: moment.utc(date).startOf(measurement).subtract(subtract, measurement).toDate(),\n  endDate: moment.utc(date).startOf(measurement).endOf(endOfMeasurement).toDate()\n});\n\nconst currentDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 1, measurement: 'days' });\nconst defaultDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 30, measurement: 'days' });\nconst weeklyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'weeks' });\nconst monthlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 12, measurement: 'months' });\nconst quarterlyDateTime = setRangedDateTime({ date: getCurrentDate(), subtract: 36, measurement: 'months' });\nconst rangedYearDateTime = setRangedDateTime({\n  date: getCurrentDate(),\n  subtract: 11,\n  measurement: 'months',\n  endOfMeasurement: 'months'\n});\n\n/**\n * Return a range of time based on known granularity types.\n *\n * @param {string} granularity\n * @returns {{endDate: Date, startDate: Date}}\n */\nconst getRangedDateTime = granularity => {\n  switch (granularity) {\n    case 'CURRENT':\n      return { ...currentDateTime };\n    case GRANULARITY_TYPES.WEEKLY:\n      return { ...weeklyDateTime };\n    case GRANULARITY_TYPES.MONTHLY:\n      return { ...monthlyDateTime };\n    case GRANULARITY_TYPES.QUARTERLY:\n      return { ...quarterlyDateTime };\n    case GRANULARITY_TYPES.DAILY:\n    default:\n      return { ...defaultDateTime };\n  }\n};\n\n/**\n * Generate a list of months for use in a select list.\n *\n * @param {string} month\n * @returns {{keyDateTimeRanges: {}, listDateTimeRanges: *[]}|*}\n */\nconst getRangedMonthDateTime = month => {\n  const currentYear = Number.parseInt(moment.utc(getCurrentDate()).year(), 10);\n  const { startDate, endDate } = { ...rangedYearDateTime };\n  const keyDateTimeRanges = {};\n  let listDateTimeRanges = [];\n\n  const startDateUpdated = moment.utc(startDate);\n  const endDateUpdated = moment.utc(endDate);\n\n  while (endDateUpdated > startDateUpdated || startDateUpdated.format('M') === endDateUpdated.format('M')) {\n    const dateTime = {\n      value: {\n        startDate: startDateUpdated.toDate()\n      }\n    };\n\n    const titleYear = startDateUpdated.format('MMMM YYYY');\n    const title = startDateUpdated.format('MMMM');\n    const titleIndex = startDateUpdated.format('M');\n    const isNextYear = currentYear !== Number.parseInt(startDateUpdated.year(), 10);\n\n    dateTime.title = (isNextYear && titleYear) || title;\n    dateTime._title = title.toLowerCase();\n    dateTime.value.endDate = moment.utc(startDateUpdated).endOf('month').toDate();\n\n    startDateUpdated.add(1, 'month');\n\n    dateTime.title = translate('curiosity-toolbar.granularityRangedMonthly', { context: dateTime.title });\n    keyDateTimeRanges[title.toLowerCase()] = { ...dateTime };\n    keyDateTimeRanges[titleIndex] = { ...dateTime };\n    listDateTimeRanges.push(dateTime);\n  }\n\n  listDateTimeRanges = listDateTimeRanges.reverse();\n  listDateTimeRanges[0] = {\n    ...listDateTimeRanges[0],\n    isCurrent: true,\n    _title: 'current',\n    title: translate('curiosity-toolbar.granularityRangedMonthly', { context: 'current' })\n  };\n\n  keyDateTimeRanges.current = { ...listDateTimeRanges[0] };\n\n  if (month) {\n    return keyDateTimeRanges?.[month] || undefined;\n  }\n\n  return { keyDateTimeRanges, listDateTimeRanges };\n};\n\n/**\n * Consistent timestamp day formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampDayFormats = {\n  long: 'MMMM D',\n  yearLong: 'MMMM D YYYY',\n  short: 'MMM D',\n  yearShort: 'MMM D YYYY'\n};\n\n/**\n * Consistent timestamp month formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampMonthFormats = {\n  long: 'MMMM',\n  yearLong: 'MMMM YYYY',\n  short: 'MMM',\n  yearShort: 'MMM YYYY'\n};\n\n/**\n * Consistent timestamp quarter formats.\n *\n * @type {{short: string, yearShort: string, yearLong: string, long: string}}\n */\nconst timestampQuarterFormats = {\n  ...timestampMonthFormats\n};\n\n/**\n * Consistent timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampTimeFormats = {\n  timeLong: 'MMMM D h:mm:ss A',\n  yearTimeLong: 'MMMM D YYYY h:mm:ss A',\n  timeShort: 'MMM D h:mm A',\n  yearTimeShort: 'MMM D YYYY h:mm A'\n};\n\n/**\n * Consistent UTC timestamp time formats.\n *\n * @type {{yearTimeShort: string, timeLong: string, yearTimeLong: string, timeShort: string}}\n */\nconst timestampUTCTimeFormats = {\n  timeLong: 'DD MMMM HH:mm:ss UTC',\n  yearTimeLong: 'DD MMMM YYYY HH:mm:ss UTC',\n  timeShort: 'DD MMM HH:mm UTC',\n  yearTimeShort: 'DD MMM YYYY HH:mm UTC'\n};\n\nconst dateHelpers = {\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n\nexport {\n  dateHelpers as default,\n  getCurrentDate,\n  getRangedMonthDateTime,\n  getRangedDateTime,\n  setRangedDateTime,\n  currentDateTime,\n  dateHelpers,\n  defaultDateTime,\n  monthlyDateTime,\n  quarterlyDateTime,\n  weeklyDateTime,\n  rangedYearDateTime,\n  timestampDayFormats,\n  timestampMonthFormats,\n  timestampQuarterFormats,\n  timestampTimeFormats,\n  timestampUTCTimeFormats\n};\n","import moment from 'moment/moment';\nimport { helpers } from './helpers';\nimport { dateHelpers } from './dateHelpers';\n\n/**\n * Download data to a file\n *\n * @param {object} options\n * @param {string} options.data\n * @param {string} options.fileName\n * @param {string} options.fileType\n * @returns {Promise}\n */\nconst downloadData = options => {\n  const { data = '', fileName = 'download.txt', fileType = 'text/plain' } = options || {};\n  return new Promise((resolve, reject) => {\n    try {\n      const { document, navigator, URL } = window;\n      const blob = new Blob([data], { type: fileType });\n\n      if (navigator?.msSaveBlob) {\n        navigator.msSaveBlob(blob, fileName);\n        resolve({ fileName, data });\n      } else {\n        const anchorTag = document.createElement('a');\n\n        anchorTag.href = URL.createObjectURL(blob);\n        anchorTag.style.display = 'none';\n        anchorTag.download = fileName;\n\n        document.body.appendChild(anchorTag);\n\n        anchorTag.click();\n\n        setTimeout(() => {\n          document.body.removeChild(anchorTag);\n          URL.revokeObjectURL(blob);\n          resolve({ fileName, data });\n        }, 250);\n      }\n    } catch (error) {\n      reject(error);\n    }\n  });\n};\n\n/**\n * Download the debug log file.\n */\nconst debugLog = async () => {\n  try {\n    const { sessionStorage } = window;\n    const fileName = `${helpers.UI_LOGGER_FILE}`.replace(\n      '{0}',\n      moment(dateHelpers.getCurrentDate()).format('YYYYMMDD_HHmmss')\n    );\n    const data = JSON.stringify(JSON.parse(sessionStorage.getItem(`${helpers.UI_LOGGER_ID}`)), null, 2);\n\n    await downloadData({ data, fileName, fileType: 'application/json' });\n  } catch (e) {\n    throw new Error(`debuglog error, ${e.message}`);\n  }\n};\n\nconst downloadHelpers = {\n  downloadData,\n  debugLog\n};\n\nhelpers.browserExpose({ debugLog }, { limit: false });\n\nexport { downloadHelpers as default, downloadHelpers, downloadData, debugLog };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { Maintenance } from '@redhat-cloud-services/frontend-components/Maintenance';\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { useMount, useUnmount } from 'react-use';\nimport { connect, reduxActions, reduxSelectors, storeHooks } from '../../redux';\nimport { routerHooks } from '../../hooks/useRouter';\nimport { routerHelpers, Redirect } from '../router';\nimport { rhsmApiTypes } from '../../types';\nimport { helpers } from '../../common';\nimport MessageView from '../messageView/messageView';\nimport { translate } from '../i18n/i18n';\n\n/**\n * An authentication pass-through component.\n *\n * @param {object} props\n * @param {string} props.appName\n * @param {Function} props.authorizeUser\n * @param {Node} props.children\n * @param {Function} props.hideGlobalFilter\n * @param {Function} props.initializeChrome\n * @param {boolean} props.isDisabled\n * @param {Function} props.onNavigation\n * @param {object} props.session\n * @param {Function} props.setAppName\n * @param {Function} props.t\n * @param {Function} props.useDispatch\n * @param {Function} props.useHistory\n * @returns {Node}\n */\nconst Authentication = ({\n  appName,\n  authorizeUser,\n  children,\n  hideGlobalFilter,\n  initializeChrome,\n  isDisabled,\n  onNavigation,\n  session,\n  setAppName,\n  t,\n  useDispatch: useAliasDispatch,\n  useHistory: useAliasHistory\n}) => {\n  const [unregister, setUnregister] = useState(() => helpers.noop);\n  const dispatch = useAliasDispatch();\n  const history = useAliasHistory();\n  const { errorCodes, pending, status: httpStatus, authorized } = session || {};\n  const { [appName]: isAuthorized } = authorized || {};\n\n  useMount(async () => {\n    if (!isAuthorized) {\n      await dispatch(authorizeUser());\n    }\n\n    dispatch([initializeChrome(), setAppName(appName), hideGlobalFilter()]);\n    setUnregister(() => dispatch(onNavigation(event => history.push(event.navId))));\n  });\n\n  useUnmount(() => {\n    unregister();\n  });\n\n  if (isDisabled) {\n    return (\n      <MessageView>\n        <Maintenance description={t('curiosity-auth.maintenanceCopy', '...')} />\n      </MessageView>\n    );\n  }\n\n  if (isAuthorized) {\n    return <React.Fragment>{children}</React.Fragment>;\n  }\n\n  if (pending) {\n    return <MessageView pageTitle=\"&nbsp;\" message={t('curiosity-auth.pending', '...')} icon={BinocularsIcon} />;\n  }\n\n  if (\n    (errorCodes && errorCodes.includes(rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES.OPTIN)) ||\n    httpStatus === 418\n  ) {\n    return <Redirect route={routerHelpers.getErrorRoute.path} />;\n  }\n\n  return (\n    <MessageView>\n      <NotAuthorized serviceName={helpers.UI_DISPLAY_NAME} />\n    </MessageView>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, useHistory: Function, setAppName: Function,\n *     t: Function, children: Node, appName: string, initializeChrome: Function, session: object,\n *     useDispatch: Function, isDisabled: boolean, hideGlobalFilter: Function}}\n */\nAuthentication.propTypes = {\n  appName: PropTypes.string,\n  authorizeUser: PropTypes.func,\n  children: PropTypes.node.isRequired,\n  hideGlobalFilter: PropTypes.func,\n  initializeChrome: PropTypes.func,\n  isDisabled: PropTypes.bool,\n  onNavigation: PropTypes.func,\n  setAppName: PropTypes.func,\n  session: PropTypes.shape({\n    authorized: PropTypes.shape({\n      [routerHelpers.appName]: PropTypes.bool\n    }),\n    errorCodes: PropTypes.arrayOf(PropTypes.string),\n    pending: PropTypes.bool,\n    status: PropTypes.number\n  }),\n  t: PropTypes.func,\n  useDispatch: PropTypes.func,\n  useHistory: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{authorizeUser: Function, onNavigation: Function, useHistory: Function, setAppName: Function,\n *     t: Function, appName: string, initializeChrome: Function, session: object, useDispatch: Function,\n *     isDisabled: boolean, hideGlobalFilter: Function}}\n */\nAuthentication.defaultProps = {\n  appName: routerHelpers.appName,\n  authorizeUser: reduxActions.user.authorizeUser,\n  hideGlobalFilter: reduxActions.platform.hideGlobalFilter,\n  initializeChrome: reduxActions.platform.initializeChrome,\n  isDisabled: helpers.UI_DISABLED,\n  onNavigation: reduxActions.platform.onNavigation,\n  setAppName: reduxActions.platform.setAppName,\n  session: {\n    authorized: {},\n    errorCodes: [],\n    pending: false,\n    status: null\n  },\n  t: translate,\n  useDispatch: storeHooks.reactRedux.useDispatch,\n  useHistory: routerHooks.useHistory\n};\n\n/**\n * Create a selector from applied state, props.\n *\n * @type {Function}\n */\nconst makeMapStateToProps = reduxSelectors.user.makeUserSession();\n\nconst ConnectedAuthentication = connect(makeMapStateToProps)(Authentication);\n\nexport { ConnectedAuthentication as default, ConnectedAuthentication, Authentication };\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport i18next from 'i18next';\nimport XHR from 'i18next-xhr-backend';\nimport { initReactI18next, Trans } from 'react-i18next';\nimport { useMount } from 'react-use';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Apply a string towards a key. Optional replacement values and component/nodes.\n * See, https://react.i18next.com/\n *\n * @param {string|Array} translateKey A key reference, or an array of a primary key with fallback keys.\n * @param {string|object|Array} values A default string if the key can't be found. An object with i18next settings. Or an array of objects (key/value) pairs used to replace string tokes. i.e. \"[{ hello: 'world' }]\"\n * @param {Array} components An array of HTML/React nodes used to replace string tokens. i.e. \"[<span />, <React.Fragment />]\"\n * @returns {string|Node}\n */\nconst translate = (translateKey, values = null, components) => {\n  const updatedValues = values;\n  let updatedTranslateKey = translateKey;\n\n  if (Array.isArray(updatedTranslateKey)) {\n    updatedTranslateKey = updatedTranslateKey.filter(value => typeof value === 'string' && value.length > 0);\n  }\n\n  if (Array.isArray(updatedValues?.context)) {\n    updatedValues.context = updatedValues.context\n      .filter(value => typeof value === 'string' && value.length > 0)\n      .join('_');\n  }\n\n  if (helpers.TEST_MODE) {\n    return helpers.noopTranslate(updatedTranslateKey, updatedValues, components);\n  }\n\n  if (components) {\n    return (\n      (i18next.store && <Trans i18nKey={updatedTranslateKey} values={updatedValues} components={components} />) || (\n        <React.Fragment>t({updatedTranslateKey})</React.Fragment>\n      )\n    );\n  }\n\n  return (i18next.store && i18next.t(updatedTranslateKey, updatedValues)) || `t([${updatedTranslateKey}])`;\n};\n\n/**\n * Apply string replacements against a component, HOC.\n *\n * @param {Node} Component\n * @returns {Node}\n */\nconst translateComponent = Component => {\n  const withTranslation = ({ ...props }) => (\n    <Component\n      {...props}\n      t={(i18next.store && translate) || helpers.noopTranslate}\n      i18n={(i18next.store && i18next) || helpers.noop}\n    />\n  );\n\n  withTranslation.displayName = 'withTranslation';\n  return withTranslation;\n};\n\n/**\n * Load I18n.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.fallbackLng\n * @param {string} props.loadPath\n * @param {string} props.locale\n * @returns {Node}\n */\nconst I18n = ({ children, fallbackLng, loadPath, locale }) => {\n  const [initialized, setInitialized] = useState(false);\n\n  /**\n   * Initialize i18next\n   */\n  useMount(async () => {\n    try {\n      await i18next\n        .use(XHR)\n        .use(initReactI18next)\n        .init({\n          backend: {\n            loadPath\n          },\n          fallbackLng,\n          lng: undefined,\n          debug: !helpers.PROD_MODE,\n          ns: ['default'],\n          defaultNS: 'default',\n          react: {\n            useSuspense: false\n          }\n        });\n    } catch (e) {\n      //\n    }\n\n    setInitialized(true);\n  });\n\n  /**\n   * Update locale.\n   */\n  useEffect(() => {\n    if (initialized) {\n      try {\n        i18next.changeLanguage(locale);\n      } catch (e) {\n        //\n      }\n    }\n  }, [initialized, locale]);\n\n  return (initialized && <React.Fragment>{children}</React.Fragment>) || <React.Fragment />;\n};\n\n/**\n * Prop types.\n *\n * @type {{loadPath: string, children: Node, locale: string, fallbackLng: string}}\n */\nI18n.propTypes = {\n  children: PropTypes.node.isRequired,\n  fallbackLng: PropTypes.string,\n  loadPath: PropTypes.string,\n  locale: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{loadPath: string, locale: null, fallbackLng: string}}\n */\nI18n.defaultProps = {\n  fallbackLng: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_DEFAULT_LNG,\n  loadPath: process.env.REACT_APP_CONFIG_SERVICE_LOCALES_PATH,\n  locale: null\n};\n\nexport { I18n as default, I18n, i18next, translate, translateComponent };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { TableVariant } from '@patternfly/react-table';\nimport { PageHeader, PageLayout } from '../pageLayout/pageLayout';\nimport { TableSkeleton } from '../table/tableSkeleton';\n\n/**\n * Render skeleton and spinner loaders.\n *\n * @param {object} props\n * @param {string} props.skeletonProps\n * @param {object} props.tableProps\n * @param {string} props.variant\n * @returns {Node}\n */\nconst Loader = ({ skeletonProps, tableProps, variant }) => {\n  switch (variant) {\n    case 'chart':\n    case 'graph':\n      return (\n        <div className=\"curiosity-skeleton-container curiosity-skeleton-container-chart\">\n          <Skeleton size={SkeletonSize.lg} />\n          <Skeleton size={SkeletonSize.md} />\n        </div>\n      );\n    case 'paragraph':\n      return (\n        <div className=\"curiosity-skeleton-container\">\n          <Skeleton size={SkeletonSize.xs} />\n          <Skeleton size={SkeletonSize.sm} />\n          <Skeleton size={SkeletonSize.md} />\n          <Skeleton size={SkeletonSize.lg} />\n        </div>\n      );\n    case 'skeleton':\n      return <Skeleton {...skeletonProps} />;\n    case 'table':\n      return <TableSkeleton {...tableProps} />;\n    case 'title':\n      return (\n        <PageLayout>\n          <PageHeader>\n            <Skeleton size=\"sm\" />\n          </PageHeader>\n        </PageLayout>\n      );\n    case 'spinner':\n    default:\n      return <Spinner />;\n  }\n};\n\n/**\n * Prop types.\n *\n * @type {{variant: string, skeletonProps: object, tableProps: object}}\n */\nLoader.propTypes = {\n  skeletonProps: PropTypes.shape({\n    size: PropTypes.oneOf([...Object.values(SkeletonSize)])\n  }),\n  tableProps: PropTypes.shape({\n    borders: PropTypes.bool,\n    className: PropTypes.string,\n    colCount: PropTypes.number,\n    colWidth: PropTypes.array,\n    rowCount: PropTypes.number,\n    variant: PropTypes.oneOf([...Object.values(TableVariant)])\n  }),\n  variant: PropTypes.oneOf(['chart', 'graph', 'paragraph', 'skeleton', 'spinner', 'table', 'title'])\n};\n\n/**\n * Default props.\n *\n * @type {{skeletonProps: {size: *}, variant: string, tableProps: {}}}\n */\nLoader.defaultProps = {\n  skeletonProps: {\n    size: SkeletonSize.sm\n  },\n  tableProps: {},\n  variant: 'spinner'\n};\n\nexport { Loader as default, Loader, SkeletonSize };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PageLayout, PageHeader, PageSection } from '../pageLayout/pageLayout';\nimport { helpers } from '../../common';\n\n/**\n * FixMe: Patternfly EmptyStateIcon PropType registers as function?\n */\n/**\n * Render a message view.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {Node|Function} props.icon\n * @param {string} props.message\n * @param {string} props.pageTitle\n * @param {string} props.title\n * @returns {Node}\n */\nconst MessageView = ({ children, icon, message, pageTitle, title }) => (\n  <PageLayout>\n    <PageHeader>{pageTitle || helpers.UI_DISPLAY_NAME}</PageHeader>\n    <PageSection>\n      {children ?? (\n        <EmptyState variant={EmptyStateVariant.full} className=\"fadein\">\n          {icon && <EmptyStateIcon icon={icon} />}\n          {title && (\n            <Title headingLevel=\"h2\" size=\"lg\">\n              {title}\n            </Title>\n          )}\n          {message && <EmptyStateBody>{message}</EmptyStateBody>}\n        </EmptyState>\n      )}\n    </PageSection>\n  </PageLayout>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, icon: Node|Function, message: string, pageTitle: string, title: string}}\n */\nMessageView.propTypes = {\n  children: PropTypes.node,\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.string,\n  pageTitle: PropTypes.string,\n  title: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{children: null, icon: null, message: null, pageTitle: null, title: null}}\n */\nMessageView.defaultProps = {\n  children: null,\n  icon: null,\n  message: null,\n  pageTitle: null,\n  title: null\n};\n\nexport { MessageView as default, MessageView };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport { helpers } from '../../common';\n\n/**\n * Render page columns based on children.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageColumns = ({ children, className }) => (\n  <Flex\n    alignItems={{ sm: 'alignItemsStretch' }}\n    spaceItems={{ sm: 'spaceItemsNone' }}\n    className={`curiosity-page-columns ${className}`}\n  >\n    {React.Children.toArray(children)\n      .filter(child => React.isValidElement(child))\n      .map(child => (\n        <FlexItem\n          key={(child.key && `page-column-${child.key}`) || helpers.generateId()}\n          grow={{ sm: 'grow' }}\n          className=\"curiosity-page-columns-column\"\n        >\n          {child}\n        </FlexItem>\n      ))}\n  </Flex>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageColumns.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageColumns.defaultProps = {\n  className: ''\n};\n\nexport { PageColumns as default, PageColumns };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageHeader as RcsPageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Flex, FlexItem, Label as PfLabel } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * ToDo: Review removing the \"includeTour\" prop and associated button code.\n * ...instead of disabling it, ENT-4247\n */\n/**\n * Render a platform page header.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {boolean} props.includeTour\n * @param {string} props.productLabel\n * @param {Function} props.t\n * @returns {Node}\n */\nconst PageHeader = ({ children, includeTour, productLabel, t }) => (\n  <RcsPageHeader>\n    <Flex justifyContent={{ sm: 'justifyContentSpaceBetween' }}>\n      <FlexItem>\n        <PageHeaderTitle title={children} className=\"pf-u-mb-sm\" />\n      </FlexItem>\n      <FlexItem>\n        {includeTour && (\n          <Button variant=\"link\" className=\"uxui-curiosity__button-tour\" isInline>\n            <PfLabel color=\"blue\">{t('curiosity-optin.buttonTour')}</PfLabel>\n          </Button>\n        )}\n      </FlexItem>\n    </Flex>\n    {productLabel && (\n      <p>\n        {t(`curiosity-view.subtitle`, { appName: helpers.UI_DISPLAY_NAME, context: productLabel }, [\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            icon={<ExternalLinkAltIcon />}\n            iconPosition=\"right\"\n            target=\"_blank\"\n            href={helpers.UI_LINK_LEARN_MORE}\n          />\n        ])}\n      </p>\n    )}\n  </RcsPageHeader>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, includeTour: boolean, productLabel: string, t: Function}}\n */\nPageHeader.propTypes = {\n  children: PropTypes.node.isRequired,\n  includeTour: PropTypes.bool,\n  productLabel: PropTypes.string,\n  t: PropTypes.func\n};\n\n/**\n * Default props.\n *\n * @type {{includeTour: boolean, productLabel: null, t: translate}}\n */\nPageHeader.defaultProps = {\n  includeTour: false,\n  productLabel: null,\n  t: translate\n};\n\nexport { PageHeader as default, PageHeader };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { PageSection as Main } from '@patternfly/react-core';\nimport { PageHeader } from './pageHeader';\nimport { PageColumns } from './pageColumns';\nimport { PageMessages } from './pageMessages';\nimport { PageSection } from './pageSection';\nimport { PageToolbar } from './pageToolbar';\n\n/**\n * ToDo: Reevaluate, import for Main component from @redhat-cloud-services/frontend-components\n * Fallback towards PF PageSection. Named export for Main is overridden by default connected export.\n */\n/**\n * Render a platform page layout.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageLayout = ({ children, className }) => (\n  <React.Fragment>\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageHeader)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageMessages)}\n    {React.Children.toArray(children).filter(child => React.isValidElement(child) && child.type === PageToolbar)}\n    <Main padding={{ default: 'noPadding' }} className={`curiosity ${className}`}>\n      {React.Children.toArray(children).filter(\n        child => child.type !== PageHeader && child.type !== PageMessages && child.type !== PageToolbar\n      )}\n    </Main>\n  </React.Fragment>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageLayout.defaultProps = {\n  className: ''\n};\n\nexport { PageLayout as default, PageLayout, PageColumns, PageHeader, PageMessages, PageSection, PageToolbar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageMessages = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-messages ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageMessages.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageMessages.defaultProps = {\n  className: ''\n};\n\nexport { PageMessages as default, PageMessages };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform page section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageSection = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-section ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageSection.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageSection.defaultProps = {\n  className: ''\n};\n\nexport { PageSection as default, PageSection };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Section } from '@redhat-cloud-services/frontend-components/Section';\n\n/**\n * Render a platform toolbar section.\n *\n * @param {object} props\n * @param {Node} props.children\n * @param {string} props.className\n * @returns {Node}\n */\nconst PageToolbar = ({ children, className, ...props }) => (\n  <Section className={`curiosity-page-toolbar ${className}`} {...props}>\n    {children}\n  </Section>\n);\n\n/**\n * Prop types.\n *\n * @type {{children: Node, className: string}}\n */\nPageToolbar.propTypes = {\n  children: PropTypes.node.isRequired,\n  className: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{className: string}}\n */\nPageToolbar.defaultProps = {\n  className: ''\n};\n\nexport { PageToolbar as default, PageToolbar };\n","import path from 'path';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Router } from './router';\nimport { routerHelpers } from './routerHelpers';\nimport { helpers } from '../../common';\n/**\n * A routing redirect.\n *\n * @param {object} props\n * @param {boolean} props.isForced\n * @param {string} props.route\n * @param {string} props.routes\n * @param {string} props.url\n * @returns {Node}\n */\nconst Redirect = ({ isForced, route, routes, url }) => {\n  const baseName = routerHelpers.dynamicBaseName();\n\n  /**\n   * Bypass router, force the location.\n   */\n  const forceNavigation = () => {\n    const { hash = '', search = '' } = window.location;\n    const forcePath = url || (route && `${path.join(baseName, route)}${search}${hash}`);\n\n    window.location.replace(forcePath);\n  };\n\n  const { path: matchedRoutePath, ...matchedRoute } = routerHelpers.getRouteConfig({ pathName: route, id: route });\n\n  if (!isForced && matchedRoutePath) {\n    return <Router routes={[{ ...matchedRoute, path: '*' }, ...routes]} />;\n  }\n\n  forceNavigation();\n\n  return (helpers.TEST_MODE && <React.Fragment>Redirected towards {url || route}</React.Fragment>) || null;\n};\n\n/**\n * Prop types.\n *\n * @type {{isRedirect: boolean, route: string, routes: Array, isReplace: boolean, url: string,\n *    isForced: boolean}}\n */\nRedirect.propTypes = {\n  isForced: PropTypes.bool,\n  route: PropTypes.string,\n  routes: PropTypes.array,\n  url: PropTypes.string\n};\n\n/**\n * Default props.\n *\n * @type {{isRedirect: boolean, route: string, routes: Array, isReplace: boolean, url: string,\n *    isForced: boolean}}\n */\nRedirect.defaultProps = {\n  isForced: false,\n  route: null,\n  routes: routerHelpers.routes,\n  url: null\n};\n\nexport { Redirect as default, Redirect };\n","/* eslint-disable react/jsx-no-constructed-context-values */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect as ReactRouterDomRedirect, Route, Switch } from 'react-router-dom';\nimport { useMount } from 'react-use';\nimport { RouterContext } from './routerContext';\nimport { routerHelpers } from './routerHelpers';\nimport { Loader } from '../loader/loader';\n\n/**\n * Load routes.\n *\n * @param {object} props\n * @param {Array} props.routes\n * @returns {Node}\n */\nconst Router = ({ routes } = {}) => {\n  const [updatedRoutes, setUpdatedRoutes] = useState([]);\n  const [redirectDefault, setRedirectDefault] = useState(null);\n\n  /**\n   * Initialize routes.\n   */\n  useMount(async () => {\n    const activateOnErrorRoute = routes.find(route => route.activateOnError === true);\n\n    const results = await Promise.all(\n      routes.map(async item => {\n        if (item.disabled) {\n          return null;\n        }\n\n        const View = await routerHelpers.importView(item.component);\n\n        return (\n          <Route\n            exact={item.exact}\n            key={item.path}\n            path={item.path}\n            strict={item.strict}\n            render={({ location, ...routeProps }) => {\n              const routeConfig = item.id && routerHelpers.getRouteConfig({ id: item.id });\n              const { URLSearchParams, decodeURIComponent } = window;\n              const parsedSearch = {};\n\n              [\n                ...new Set(\n                  [...new URLSearchParams(decodeURIComponent(location.search))].map(\n                    ([param, value]) => `${param}~${value}`\n                  )\n                )\n              ].forEach(v => {\n                const [param, value] = v.split('~');\n                parsedSearch[param] = value;\n              });\n\n              const updatedLocation = {\n                ...location,\n                parsedSearch\n              };\n\n              const routeDetail = {\n                baseName: routerHelpers.dynamicBaseName(),\n                errorRoute: activateOnErrorRoute,\n                routes,\n                routeItem: { ...item },\n                ...routeConfig\n              };\n\n              return (\n                <RouterContext.Provider value={{ routeDetail }}>\n                  <View routeDetail={routeDetail} location={updatedLocation} {...routeProps} />\n                </RouterContext.Provider>\n              );\n            }}\n          />\n        );\n      })\n    );\n\n    setUpdatedRoutes(results);\n    setRedirectDefault(routes.find(({ disabled, redirect }) => !disabled && redirect) ?? null);\n  });\n\n  return (\n    <React.Suspense fallback={<Loader variant=\"title\" />}>\n      <Switch>\n        {updatedRoutes}\n        {redirectDefault && <ReactRouterDomRedirect to={redirectDefault.redirect} />}\n      </Switch>\n    </React.Suspense>\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{routes: Array}}\n */\nRouter.propTypes = {\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      activateOnError: PropTypes.boolean,\n      component: PropTypes.string.isRequired,\n      disabled: PropTypes.boolean,\n      exact: PropTypes.boolean,\n      id: PropTypes.string,\n      path: PropTypes.string.isRequired,\n      redirect: PropTypes.string,\n      render: PropTypes.boolean,\n      strict: PropTypes.boolean\n    })\n  )\n};\n\n/**\n * Default props.\n *\n * @type {{routes: Array}}\n */\nRouter.defaultProps = {\n  routes: routerHelpers.routes\n};\n\nexport { Router as default, Router };\n","import React, { useContext } from 'react';\nimport { helpers } from '../../common/helpers';\n\n/**\n * Route context.\n *\n * @type {React.Context<{}>}\n */\nconst DEFAULT_CONTEXT = [\n  { routeDetail: { baseName: null, errorRoute: null, routes: [], routeItem: {} } },\n  helpers.noop\n];\n\nconst RouterContext = React.createContext(DEFAULT_CONTEXT);\n\n/**\n * Get an updated router context.\n *\n * @returns {React.Context<{}>}\n */\nconst useRouterContext = () => useContext(RouterContext);\n\n/**\n * Get a route detail from router context.\n *\n * @param {object} options\n * @param {Function} options.useRouterContext\n * @returns {{routes: Array, routeItem: object, baseName: string, errorRoute: object}}\n */\nconst useRouteDetail = ({ useRouterContext: useAliasRouterContext = useRouterContext } = {}) => {\n  const { routeDetail } = useAliasRouterContext();\n  return routeDetail;\n};\n\nconst context = {\n  RouterContext,\n  DEFAULT_CONTEXT,\n  useRouterContext,\n  useRouteDetail\n};\n\nexport { context as default, context, RouterContext, DEFAULT_CONTEXT, useRouterContext, useRouteDetail };\n","import React from 'react';\nimport path from 'path';\nimport { helpers } from '../../common/helpers';\nimport { routesConfig } from '../../config';\n\n/**\n * Platform name/id.\n *\n * @type {string}\n */\nconst appName = helpers.UI_NAME;\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformLandingRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/');\n\n/**\n * Return a string that describes a platform redirect.\n *\n * @returns {Array}\n */\nconst platformModalRedirect = path.join(helpers.UI_DEPLOY_PATH_PREFIX, '/?not_entitled=subscriptions');\n\n/**\n * Return an assumed route baseName directory based on existing app name.\n * App name is defined in dotenv and package.json/insights.appname\n * [environment]/[OPTIONAL]/[OPTIONAL]/[APP NAME]\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBaseName = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  `${pathName.split(applicationName)[0]}${applicationName}`;\n\n/**\n * The app baseName.\n *\n * @type {string}\n */\nconst baseName = (helpers.TEST_MODE && '/') || dynamicBaseName();\n\n/**\n * Return a base path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {string} params.appName\n * @returns {string}\n */\nconst dynamicBasePath = ({ pathName = window.location.pathname, appName: applicationName = helpers.UI_NAME } = {}) =>\n  pathName.split(applicationName)[0];\n\n/**\n * App basePath.\n *\n * @type {string}\n */\nconst basePath = (helpers.TEST_MODE && '/') || dynamicBasePath();\n\n/**\n * Generate product groups for applying query filter resets.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateProductGroups = (config = routesConfig) => {\n  const productGroups = {};\n\n  config.forEach(({ pathParameter, productParameter }) => {\n    const viewIds = ((Array.isArray(productParameter) && productParameter) || [productParameter]).map(\n      id => (id && `view${id}`) || id\n    );\n\n    viewIds.forEach((id, index) => {\n      if (id) {\n        if (!productGroups[id]) {\n          productGroups[id] = [];\n        }\n\n        if (pathParameter) {\n          productGroups[id].push((Array.isArray(pathParameter) && pathParameter?.[index]) || pathParameter);\n        }\n      }\n    });\n  });\n\n  return productGroups;\n};\n\n/**\n * Reference for products grouped by view.\n */\nconst productGroups = generateProductGroups();\n\n/**\n * Generate routes to be consumed by router.\n *\n * @param {Array} config\n * @returns {Array}\n */\nconst generateRoutes = (config = routesConfig) =>\n  config.map(({ activateOnError, component, disabled, id, path: routePath, redirect }) => ({\n    activateOnError,\n    component,\n    disabled,\n    exact: true,\n    id,\n    path: routePath,\n    redirect\n  }));\n\n/**\n * Return array of objects that describes routing.\n *\n * @returns {Array}\n */\nconst routes = generateRoutes();\n\n/**\n * The first error route.\n *\n * @type {object}\n */\nconst getErrorRoute = routes.find(route => route.activateOnError === true) || {};\n\n/**\n * Match route config entries by path.\n *\n * @param {object} params\n * @param {string} params.pathName\n * @param {Array} params.config\n * @returns {{configs: Array, configFirstMatch: object, configsById: object}}\n */\nconst getRouteConfigByPath = ({ pathName = dynamicBasePath(), config = routesConfig } = {}) => {\n  const basePathDirs = pathName?.split('/').filter(str => str.length > 0);\n  const configs = [];\n  const allConfigs = [];\n  const configsById = {};\n  const allConfigsById = {};\n\n  const findConfig = dir => {\n    config.forEach(({ id, path: configPath, pathParameter, productParameter, aliases, ...configItem }) => {\n      const updatedConfigItem = {\n        aliases,\n        id,\n        path: configPath,\n        pathParameter,\n        productParameter,\n        ...configItem\n      };\n\n      if (\n        dir &&\n        (new RegExp(dir, 'i').test(configPath) ||\n          new RegExp(dir, 'i').test(productParameter?.toString()) ||\n          new RegExp(dir, 'i').test(pathParameter?.toString()) ||\n          new RegExp(dir, 'i').test(aliases?.toString()))\n      ) {\n        if (!configsById[id]) {\n          configsById[id] = { ...updatedConfigItem };\n          configs.push({ ...updatedConfigItem });\n        }\n      }\n\n      if (!allConfigsById[id]) {\n        allConfigsById[id] = { ...updatedConfigItem };\n        allConfigs.push({ ...updatedConfigItem });\n      }\n    });\n  };\n\n  if (basePathDirs?.length) {\n    basePathDirs.forEach(dir => {\n      if (dir) {\n        const decodedDir = window.decodeURI(dir);\n        findConfig(decodedDir);\n      }\n    });\n  } else {\n    findConfig();\n  }\n\n  return { allConfigs, allConfigsById, configs, configsById, firstMatch: configs?.[0] };\n};\n\n/**\n * Return a route config object.\n *\n * @param {object} params\n * @param {string} params.id\n * @param {string} params.pathName\n * @param {boolean} params.returnDefault\n * @param {Array} params.config\n * @returns {object}\n */\nconst getRouteConfig = ({ id = null, pathName, returnDefault = false, config = routesConfig } = {}) => {\n  let navRouteItem;\n\n  if (id) {\n    navRouteItem = config.find(item => item.id === id);\n  }\n\n  if ((!navRouteItem && pathName) || (!navRouteItem && !pathName && !returnDefault)) {\n    navRouteItem = getRouteConfigByPath({ pathName, config }).firstMatch;\n  }\n\n  if (!navRouteItem && returnDefault) {\n    navRouteItem = config.find(item => item.default === true);\n  }\n\n  if (navRouteItem) {\n    const { search = '', hash = '' } = window.location;\n    navRouteItem.routeHref = `${navRouteItem.path}${search}${hash}`;\n\n    const { pathParameter, productParameter } = navRouteItem;\n    navRouteItem.pathParameter = (Array.isArray(pathParameter) && pathParameter[0]) || pathParameter;\n    navRouteItem.productParameter = (Array.isArray(productParameter) && productParameter[0]) || productParameter;\n    navRouteItem.viewParameter =\n      (productParameter && `view${(Array.isArray(productParameter) && productParameter[0]) || productParameter}`) ||\n      productParameter;\n  }\n\n  return { ...(navRouteItem || {}) };\n};\n\n/**\n * Import a route component.\n *\n * @param {Node} component\n * @returns {Node}\n */\nconst importView = component => {\n  if (!helpers.TEST_MODE) {\n    return React.lazy(() => import(/* webpackExclude: /\\.test\\.js$/ */ `../${component}.js`));\n  }\n\n  return p => <React.Fragment>{JSON.stringify({ ...p, component }, null, 2)}</React.Fragment>;\n};\n\nconst routerHelpers = {\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  importView,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n\nexport {\n  routerHelpers as default,\n  routerHelpers,\n  appName,\n  baseName,\n  basePath,\n  dynamicBaseName,\n  dynamicBasePath,\n  generateProductGroups,\n  generateRoutes,\n  getErrorRoute,\n  getRouteConfig,\n  getRouteConfigByPath,\n  importView,\n  platformLandingRedirect,\n  platformModalRedirect,\n  productGroups,\n  routes,\n  routesConfig\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport {\n  Table as PfTable,\n  TableBody,\n  TableHeader,\n  TableVariant,\n  sortable,\n  SortByDirection\n} from '@patternfly/react-table';\nimport _isEqualWith from 'lodash/isEqualWith';\nimport { TableEmpty } from './tableEmpty';\nimport { helpers } from '../../common';\nimport { translate } from '../i18n/i18n';\n\n/**\n * FixMe: PF tables uses sequentially ordered lists/arrays to denote expandable sections\n * Ideal solution is to nest expandable sections within their respective parents. There\n * are scenarios where manipulating a sequentially ordered list/array can, and will,\n * lead to unintended results. And forces an equal, if not greater, amount of effort on\n * state tracking in the consuming GUI/app. Compounding the issue, the index is used/returned\n * during events for a particular row being \"expanded\". This ends up making after-the-fact\n * application of the expandable list/array items problematic since said index is\n * constantly updating/shifting as rows are dynamically added. Add in a \"not every row\n * needs to be expandable\" scenario, you can start to see the issues. All of that\n * effort means that in some cases it may actually be quicker to simply use PF styles and\n * a HTML table directly, bypassing PF-React entirely.\n *\n * Applying a React node as content in the sequentially ordered list/array appears to\n * automatically \"mount\" said node. How this handles in child components where subsequent\n * AJAX/XHR calls are called means you are potentially hitting an API with dozens of calls,\n * row dependent, even when a user may not expand the nested row/child. This could easily\n * be resolved by nesting and applying the expandable contents after-the-fact.\n */\n/**\n * FixMe: PF tables misalignment of the column headers list/array and row cells breaks the component\n * The related PF error for this is cryptic. An immediate solution would be to simply fix the error\n * messaging, or do a length check before consuming the lists/arrays. This happens when a consumer\n * places more or less column header cells than row cells.\n */\n/**\n * FixMe: PF tables break when an empty list/array is used for the column headers\n * This appears related to the mismatched column header and row cells. The solution is to simply not\n * render the header row instead of throwing an error. This is similar to how the empty rows\n * list/array is handled.\n */\n/**\n * A table.\n *\n * @augments React.Component\n * @fires onCollapse\n * @fires onSort\n */\nclass Table extends React.Component {\n  state = {\n    isCollapsible: false,\n    isSortable: false,\n    sortBy: {},\n    updatedColumnHeaders: null,\n    updatedRows: null\n  };\n\n  componentDidMount() {\n    const { updatedRows } = this.state;\n\n    if (updatedRows === null) {\n      this.setRowData();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { columnHeaders, rows } = this.props;\n    const customizer = (valueA, valueB) => {\n      if (typeof valueA === 'function' && typeof valueB === 'function') {\n        return valueA.toString() === valueB.toString();\n      }\n\n      return undefined;\n    };\n\n    if (\n      !_isEqualWith(prevProps.rows, rows, customizer) ||\n      !_isEqualWith(prevProps.columnHeaders, columnHeaders, customizer)\n    ) {\n      this.setRowData();\n    }\n  }\n\n  /**\n   * Apply expanded row content.\n   *\n   * @event onCollapse\n   * @param {object} params\n   * @param {number} params.index\n   * @param {boolean} params.isOpen\n   */\n  onCollapse = ({ index, isOpen }) => {\n    const { updatedRows } = this.state;\n    updatedRows[index].isOpen = isOpen;\n\n    if (isOpen) {\n      updatedRows[index + 1].fullWidth = false;\n      updatedRows[index + 1].cells = [{ title: updatedRows[index + 1].expandedContent }];\n    } else {\n      updatedRows[index + 1].cells = [{ title: '' }];\n    }\n\n    this.setState({\n      updatedRows\n    });\n  };\n\n  /**\n   * FixMe: PF table sort callback doesn't use a zero based index when expandable?\n   * Educated guess there's a cell count happening instead of \"[you have this many data/entry cells]\"\n   * This is really confusing to implement in a consuming application, especially on first\n   * implementation. Special \"collapsible index\" logic had to be implemented to compensate for this\n   * odd behavior.\n   */\n  /**\n   * On column sort\n   *\n   * @event onSort\n   * @param {object} params\n   * @param {number} params.index\n   * @param {string} params.direction\n   * @param {object} params.data\n   */\n  onSort = ({ index, direction, data = {} }) => {\n    const { isCollapsible, updatedColumnHeaders, updatedRows } = this.state;\n    const updatedIndex = isCollapsible ? index - 1 : index;\n\n    updatedRows.forEach(async ({ isOpen }, i) => {\n      if (isOpen === true) {\n        await this.onCollapse({ index: i, isOpen: false });\n      }\n    });\n\n    this.setState(\n      {\n        sortBy: {\n          index,\n          direction\n        }\n      },\n      () =>\n        updatedColumnHeaders[updatedIndex].onSort({\n          direction,\n          index: updatedIndex,\n          label: data?.column?.header?.label\n        })\n    );\n  };\n\n  /**\n   * Convert row objects into the required PF Table format.\n   */\n  setRowData() {\n    const { columnHeaders, rows } = this.props;\n    const updatedColumnHeaders = [];\n    const updatedRows = [];\n    const updatedSort = {};\n    let isCollapsible = false;\n    let isSortable = false;\n\n    rows.forEach(({ expandedContent, cells, isExpanded }) => {\n      const rowObj = {\n        cells: []\n      };\n      updatedRows.push(rowObj);\n\n      if (expandedContent) {\n        isCollapsible = true;\n        rowObj.isOpen = isExpanded || false;\n\n        updatedRows.push({\n          parent: updatedRows.length - 1,\n          fullWidth: true,\n          cells: [{ title: '' }],\n          expandedContent\n        });\n      }\n\n      cells.forEach(cell => {\n        if (cell?.title !== undefined) {\n          const { title, ...settings } = cell;\n          rowObj.cells.push({ title, ...settings });\n        } else {\n          rowObj.cells.push({\n            title: (React.isValidElement(cell) && cell) || (typeof cell === 'object' && `${cell}`) || cell\n          });\n        }\n      });\n    });\n\n    columnHeaders.forEach((columnHeader, index) => {\n      if (columnHeader?.title !== undefined) {\n        const { onSort, sortActive, sortDirection, title, ...settings } = columnHeader;\n        const tempColumnHeader = {\n          title,\n          ...settings\n        };\n\n        if (onSort) {\n          isSortable = true;\n          tempColumnHeader.transforms = [...(tempColumnHeader?.transforms || []), sortable];\n          tempColumnHeader.onSort = onSort;\n\n          if (sortActive) {\n            updatedSort.sortBy = { index: isCollapsible ? index + 1 : index };\n            updatedSort.sortBy.direction = SortByDirection.asc;\n          }\n\n          if (sortDirection) {\n            updatedSort.sortBy = { ...updatedSort.sortBy, direction: sortDirection };\n          }\n        } else if (tempColumnHeader.transforms) {\n          tempColumnHeader.transforms = tempColumnHeader.transforms.filter(v => v !== sortable);\n        }\n\n        updatedColumnHeaders.push(tempColumnHeader);\n      } else {\n        updatedColumnHeaders.push({\n          title:\n            (React.isValidElement(columnHeader) && columnHeader) ||\n            (typeof columnHeader === 'object' && `${columnHeader}`) ||\n            columnHeader\n        });\n      }\n    });\n\n    this.setState({\n      isCollapsible,\n      isSortable,\n      updatedColumnHeaders,\n      updatedRows,\n      ...updatedSort\n    });\n  }\n\n  /**\n   * FixMe: PF Tables automatically applies an expandable className when using the \"onCollapse\" prop?\n   * Not every row may need to be expandable. In certain scenarios a table may have no expandable\n   * sections, however it appears the \"onCollapse\" styling, and additionally added \"table cells\" are still\n   * applied.\n   */\n  /**\n   * Apply props to table.\n   *\n   * @returns {Node}\n   */\n  renderTable() {\n    const { isCollapsible, isSortable, sortBy, updatedColumnHeaders, updatedRows } = this.state;\n    const { ariaLabel, borders, children, className, isHeader, summary, t, variant } = this.props;\n    const pfTableProps = {};\n    let emptyTable = null;\n\n    if (!updatedRows?.length) {\n      emptyTable = children || (\n        <TableEmpty\n          icon={SearchIcon}\n          title={t('curiosity-inventory.tableEmptyInventoryTitle')}\n          message={t('curiosity-inventory.tableEmptyInventoryMessage')}\n        />\n      );\n    }\n\n    if (isCollapsible) {\n      pfTableProps.onCollapse = (event, index, isOpen, data) => this.onCollapse({ event, index, isOpen, data });\n    }\n\n    if (isSortable) {\n      pfTableProps.sortBy = sortBy;\n      pfTableProps.onSort = (event, index, direction, data) => this.onSort({ event, index, direction, data });\n    }\n\n    return (\n      <React.Fragment>\n        <PfTable\n          className={`curiosity-table${(!borders && '-no-border') || ''} ${className || ''}`}\n          borders={borders}\n          aria-label={ariaLabel || t('curiosity-inventory.tableAriaLabel', { appName: helpers.UI_DISPLAY_NAME })}\n          summary={summary || t('curiosity-inventory.tableSummary')}\n          variant={variant}\n          rows={(updatedRows?.length && updatedRows) || []}\n          cells={updatedColumnHeaders || []}\n          {...pfTableProps}\n        >\n          {isHeader && <TableHeader />}\n          <TableBody />\n        </PfTable>\n        {emptyTable}\n      </React.Fragment>\n    );\n  }\n\n  /**\n   * Render a table.\n   *\n   * @returns {Node}\n   */\n  render() {\n    return (\n      <Grid className=\"ins-inventory-list\">\n        <GridItem span={12}>{this.renderTable()}</GridItem>\n      </Grid>\n    );\n  }\n}\n\n/**\n * Prop types.\n *\n * @type {{summary: string, columnHeaders: Array, t: Function, borders: boolean, children: Node,\n *     isHeader: boolean, variant: string, className: string, rows: Array, ariaLabel: string}}\n */\nTable.propTypes = {\n  ariaLabel: PropTypes.string,\n  borders: PropTypes.bool,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  columnHeaders: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        onSort: PropTypes.func,\n        sortActive: PropTypes.bool,\n        sortDirection: PropTypes.oneOf([...Object.values(SortByDirection)]),\n        title: PropTypes.node.isRequired\n      })\n    ])\n  ).isRequired,\n  isHeader: PropTypes.bool,\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      expandedContent: PropTypes.node,\n      cells: PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.node,\n          PropTypes.instanceOf(Date),\n          PropTypes.shape({\n            title: PropTypes.oneOfType([PropTypes.node, PropTypes.instanceOf(Date)]).isRequired\n          })\n        ])\n      ),\n      isExpanded: PropTypes.bool\n    })\n  ),\n  summary: PropTypes.string,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{summary: null, t: translate, borders: boolean, children: null, isHeader: boolean,\n *     variant: null, className: null, rows: Array, ariaLabel: null}}\n */\nTable.defaultProps = {\n  ariaLabel: null,\n  borders: true,\n  children: null,\n  className: null,\n  isHeader: true,\n  rows: [],\n  summary: null,\n  t: translate,\n  variant: null\n};\n\nexport { Table as default, Table };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { EmptyState, EmptyStateIcon, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable as PlatformEmptyTableWrapper } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\n/**\n * Render an empty table.\n *\n * @param {object} props\n * @param {Node|Function} props.icon\n * @param {Node} props.message\n * @param {string} props.tableHeading\n * @param {Node} props.title\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableEmpty = ({ icon, message, tableHeading, title, variant }) => (\n  <PlatformEmptyTableWrapper>\n    <EmptyState variant={variant}>\n      {icon && <EmptyStateIcon icon={icon} />}\n      <Title headingLevel={tableHeading} size=\"lg\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n  </PlatformEmptyTableWrapper>\n);\n\n/**\n * Prop types.\n *\n * @type {{icon: Node|Function, variant: string, message: Node, title: Node, tableHeading: string}}\n */\nTableEmpty.propTypes = {\n  icon: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  message: PropTypes.node.isRequired,\n  tableHeading: PropTypes.string,\n  title: PropTypes.node.isRequired,\n  variant: PropTypes.oneOf(Object.keys(EmptyStateVariant))\n};\n\n/**\n * Default props.\n *\n * @type {{icon: null, variant: EmptyStateVariant.small, tableHeading: string}}\n */\nTableEmpty.defaultProps = {\n  icon: null,\n  tableHeading: 'h2',\n  variant: EmptyStateVariant.small\n};\n\nexport { TableEmpty as default, TableEmpty };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { cellWidth, TableVariant } from '@patternfly/react-table';\nimport { Skeleton, SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Table from './table';\nimport { translate } from '../i18n/i18n';\n\n/**\n * Render a table with skeleton loaders.\n *\n * @param {object} props\n * @param {string} props.className\n * @param {boolean} props.borders\n * @param {number} props.colCount\n * @param {Array} props.colWidth\n * @param {boolean} props.isHeader\n * @param {number} props.rowCount\n * @param {Function} props.t\n * @param {string} props.variant\n * @returns {Node}\n */\nconst TableSkeleton = ({ className, borders, colCount, colWidth, isHeader, rowCount, t, variant }) => {\n  const updatedColumnHeaders = [...new Array(colCount)].map((value, index) => {\n    const updatedHeader = { title: <Skeleton size={SkeletonSize.md} /> };\n\n    if (typeof colWidth[index] === 'number') {\n      updatedHeader.transforms = [cellWidth(colWidth[index])];\n    }\n\n    return updatedHeader;\n  });\n\n  const updatedRowCount = rowCount || 1;\n\n  const updatedRows = [...new Array(updatedRowCount)].map(() => ({\n    cells: [...new Array(colCount)].map(() => <Skeleton size={SkeletonSize.md} />)\n  }));\n\n  return (\n    <Table\n      ariaLabel={t('curiosity-inventory.tableSkeletonAriaLabel')}\n      borders={borders}\n      className={`curiosity-skeleton-table${(!rowCount && ' curiosity-skeleton-table__hidden-rows') || ''} ${\n        className || ''\n      }`}\n      columnHeaders={updatedColumnHeaders}\n      isHeader={isHeader}\n      rows={updatedRows}\n      variant={variant}\n    />\n  );\n};\n\n/**\n * Prop types.\n *\n * @type {{borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: string,\n *     className: string, rowCount: number}}\n */\nTableSkeleton.propTypes = {\n  borders: PropTypes.bool,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.arrayOf(PropTypes.number),\n  isHeader: PropTypes.bool,\n  rowCount: PropTypes.number,\n  t: PropTypes.func,\n  variant: PropTypes.oneOf([...Object.values(TableVariant)])\n};\n\n/**\n * Default props.\n *\n * @type {{t: translate, borders: boolean, isHeader: boolean, colCount: number, colWidth: Array, variant: null,\n *     className: null, rowCount: number}}\n */\nTableSkeleton.defaultProps = {\n  borders: true,\n  className: null,\n  colCount: 1,\n  colWidth: [],\n  isHeader: true,\n  rowCount: 5,\n  t: translate,\n  variant: null\n};\n\nexport { TableSkeleton as default, TableSkeleton };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.RHEL;\n\nconst productId = null;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.RHEL;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.SOCKETS,\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'physicalSockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'hypervisorSockets',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value\n    },\n    {\n      id: 'cloudSockets',\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value\n    },\n    { id: 'thresholdSockets', chartType: 'threshold' }\n  ],\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'measurementType',\n      cell: (data = {}) => {\n        const { cloudProvider = {}, measurementType = {} } = data;\n        return (\n          <React.Fragment>\n            {translate('curiosity-inventory.measurementType', { context: measurementType.value })}{' '}\n            {(cloudProvider.value && (\n              <PfLabel color=\"purple\">\n                {translate('curiosity-inventory.cloudProvider', { context: cloudProvider.value })}\n              </PfLabel>\n            )) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'sockets',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: 'productName',\n      isSortable: false,\n      isWrappable: true\n    },\n    {\n      id: 'serviceLevel',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'quantity',\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: 'totalCapacity',\n      header: data => translate('curiosity-inventory.header', { context: ['subscriptions', data?.uom?.value] }),\n      isSortable: false,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: 'nextEventDate',\n      cell: data =>\n        (data?.nextEventDate?.value &&\n          helpers.isDate(data?.nextEventDate?.value) &&\n          moment.utc(data?.nextEventDate?.value).format('YYYY-DD-MM')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      selected: true\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.OPENSHIFT;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  productContextFilterUom: true,\n  query: {\n    [RHSM_API_QUERY_TYPES.UOM]: RHSM_API_QUERY_UOM_TYPES.CORES,\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialOption: RHSM_API_QUERY_UOM_TYPES.CORES,\n  initialGraphFilters: [\n    {\n      id: 'cores',\n      isOptional: true,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'sockets',\n      isOptional: true,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    { id: 'thresholdSockets', chartType: 'threshold', isOptional: true },\n    { id: 'thresholdCores', chartType: 'threshold', isOptional: true }\n  ],\n  initialGraphSettings: {},\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'sockets',\n      header: () => translate('curiosity-inventory.header', { context: ['sockets', 'OpenShift Container Platform'] }),\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'cores',\n      header: () => translate('curiosity-inventory.header', { context: ['cores', 'OpenShift Container Platform'] }),\n      isOptional: true,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 25\n    }\n  ],\n  initialInventorySettings: {},\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: 'productName',\n      isSortable: false,\n      isWrappable: true\n    },\n    {\n      id: 'serviceLevel',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'quantity',\n      isSortable: true,\n      cellWidth: 20,\n      isWrappable: true\n    },\n    {\n      id: 'totalCapacity',\n      header: data => translate('curiosity-inventory.header', { context: ['subscriptions', data?.uom?.value] }),\n      isSortable: false,\n      cellWidth: 15,\n      isWrappable: true\n    },\n    {\n      id: 'nextEventDate',\n      cell: data =>\n        (data?.nextEventDate?.value &&\n          helpers.isDate(data?.nextEventDate?.value) &&\n          moment.utc(data?.nextEventDate?.value).format('YYYY-DD-MM')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n// ToDo: evaluate the need for \"productLabel\" or using productId\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.OPENSHIFT_METRICS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'coreHours',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    }\n  ],\n  initialGraphSettings: {\n    actionDisplay: (data = {}) => {\n      const {\n        meta: { totalCoreHours }\n      } = data;\n      let displayContent;\n\n      if (totalCoreHours) {\n        displayContent = translate('curiosity-graph.cardActionTotal', {\n          context: 'coreHours',\n          total: helpers\n            .numberDisplay(totalCoreHours)\n            ?.format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n            ?.toUpperCase()\n        });\n      }\n\n      return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data = {}) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'coreHours',\n      cell: data =>\n        (typeof data?.coreHours?.value === 'number' && Number.parseFloat(data?.coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 25\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark\n} from '@patternfly/react-tokens';\nimport { Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productId = RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.OPENSHIFT_DEDICATED_METRICS;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'coreHours',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: 'line',\n      isStacked: false,\n      yAxisUseDataSet: true\n    },\n    {\n      id: 'instanceHours',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: 'line',\n      isStacked: false,\n      yAxisUseDataSet: true\n    }\n  ],\n  initialGraphSettings: {\n    actionDisplay: (data = {}) => {\n      const {\n        meta: { totalCoreHours }\n      } = data;\n      let displayContent;\n\n      if (totalCoreHours) {\n        displayContent = translate('curiosity-graph.cardActionTotal', {\n          context: 'coreHours',\n          total: helpers\n            .numberDisplay(totalCoreHours)\n            ?.format({ average: true, mantissa: 2, trimMantissa: true, lowPrecision: false })\n            ?.toUpperCase()\n        });\n      }\n\n      return <div className=\"curiosity-usage-graph__total\">{displayContent || null}</div>;\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data = {}) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        const updatedDisplayName = displayName.value || inventoryId.value;\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'coreHours',\n      cell: data =>\n        (typeof data?.coreHours?.value === 'number' && Number.parseFloat(data?.coreHours?.value).toFixed(2)) || `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'instanceHours',\n      cell: data =>\n        (typeof data?.instanceHours?.value === 'number' && Number.parseFloat(data?.instanceHours?.value).toFixed(2)) ||\n        `0.00`,\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: undefined\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport moment from 'moment';\nimport { RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES } from '../types/rhsmApiTypes';\nimport {\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INVENTORY_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES\n} from '../services/rhsm/rhsmConstants';\nimport { translate } from '../components/i18n/i18n';\nimport { dateHelpers, helpers } from '../common';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst productId = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst productLabel = RHSM_API_PATH_PRODUCT_TYPES.RHOSAK;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_SET_TYPES.START_DATE]: dateHelpers.getRangedMonthDateTime('current').value.startDate.toISOString(),\n    [RHSM_API_QUERY_SET_TYPES.END_DATE]: dateHelpers.getRangedMonthDateTime('current').value.endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_SET_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_INVENTORY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_SET_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_SET_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_SET_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_SET_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value,\n      chartType: 'line',\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTES,\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value,\n      chartType: 'line',\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value,\n      chartType: 'line',\n      isStacked: false,\n      isStandalone: true,\n      yAxisChartLabel: ({ id }) => translate('curiosity-graph.label_axisY', { context: id })\n    }\n  ],\n  initialGraphSettings: {\n    isCardTitleDescription: true,\n    xAxisChartLabel: () => translate('curiosity-graph.label_axisX', { context: GRANULARITY_TYPES.DAILY }),\n    yAxisTickFormat: ({ tick }) => {\n      if (tick > 1) {\n        return helpers\n          .numberDisplay(tick)\n          ?.format({ average: true, mantissa: 1, trimMantissa: true, lowPrecision: false })\n          ?.toUpperCase();\n      }\n      return helpers\n        .numberDisplay(tick)\n        ?.format({ average: true, mantissa: 5, trimMantissa: true, lowPrecision: true })\n        ?.toUpperCase();\n    }\n  },\n  initialInventoryFilters: [\n    {\n      id: INVENTORY_TYPES.DISPLAY_NAME,\n      cell: (\n        { [INVENTORY_TYPES.DISPLAY_NAME]: displayName = {}, [INVENTORY_TYPES.INVENTORY_ID]: inventoryId = {} },\n        session\n      ) => {\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return <React.Fragment>{updatedDisplayName}</React.Fragment>;\n      },\n      isSortable: true\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.TRANSFER_GIBIBYTES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTES,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTES]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.STORAGE_GIBIBYTES,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n      cell: ({ [RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS]: total }) =>\n        translate('curiosity-inventory.measurement', {\n          context: RHSM_API_PATH_METRIC_TYPES.INSTANCE_HOURS,\n          total: helpers.numberDisplay(total?.value)?.format({ mantissa: 5, trimMantissa: true }) || 0\n        }),\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: INVENTORY_TYPES.LAST_SEEN,\n      cell: ({ [INVENTORY_TYPES.LAST_SEEN]: lastSeen }) =>\n        (lastSeen?.value && <DateFormat date={lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialSubscriptionsInventoryFilters: [\n    {\n      id: 'productName',\n      isSortable: false,\n      isWrappable: true\n    },\n    {\n      id: 'serviceLevel',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'quantity',\n      isSortable: true,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: 'totalCapacity',\n      header: data => translate('curiosity-inventory.header', { context: ['subscriptions', data?.uom?.value] }),\n      isSortable: false,\n      cellWidth: 10,\n      isWrappable: true\n    },\n    {\n      id: 'nextEventDate',\n      cell: data =>\n        (data?.nextEventDate?.value &&\n          helpers.isDate(data?.nextEventDate?.value) &&\n          moment.utc(data?.nextEventDate?.value).format('YYYY-DD-MM')) ||\n        '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialToolbarFilters: [\n    {\n      id: 'rangedMonthly'\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import React from 'react';\nimport {\n  chart_color_blue_100 as chartColorBlueLight,\n  chart_color_blue_300 as chartColorBlueDark,\n  chart_color_cyan_100 as chartColorCyanLight,\n  chart_color_cyan_300 as chartColorCyanDark,\n  chart_color_purple_100 as chartColorPurpleLight,\n  chart_color_purple_300 as chartColorPurpleDark\n} from '@patternfly/react-tokens';\nimport { Button, Label as PfLabel } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  RHSM_API_QUERY_GRANULARITY_TYPES as GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES as SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_PATH_ID_TYPES\n} from '../types/rhsmApiTypes';\nimport { dateHelpers, helpers } from '../common';\nimport { translate } from '../components/i18n/i18n';\n\n/**\n * ToDo: evaluate separating products/product tags into individual configs...\n * or using anArray/List then generating \"routes.js\"\n */\n\nconst productGroup = RHSM_API_PATH_ID_TYPES.SATELLITE;\n\nconst productId = null;\n\nconst productLabel = RHSM_API_PATH_ID_TYPES.SATELLITE;\n\nconst config = {\n  productGroup,\n  productId,\n  productLabel,\n  viewId: `view${productGroup}`,\n  query: {\n    [RHSM_API_QUERY_TYPES.START_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).startDate.toISOString(),\n    [RHSM_API_QUERY_TYPES.END_DATE]: dateHelpers.getRangedDateTime(GRANULARITY_TYPES.DAILY).endDate.toISOString()\n  },\n  graphTallyQuery: {\n    [RHSM_API_QUERY_TYPES.GRANULARITY]: GRANULARITY_TYPES.DAILY\n  },\n  inventoryHostsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SORT_TYPES.LAST_SEEN,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  inventorySubscriptionsQuery: {\n    [RHSM_API_QUERY_TYPES.SORT]: RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES.NEXT_EVENT_DATE,\n    [RHSM_API_QUERY_TYPES.DIRECTION]: SORT_DIRECTION_TYPES.DESCENDING,\n    [RHSM_API_QUERY_TYPES.LIMIT]: 100,\n    [RHSM_API_QUERY_TYPES.OFFSET]: 0\n  },\n  initialGraphFilters: [\n    {\n      id: 'physicalSockets',\n      fill: chartColorBlueLight.value,\n      stroke: chartColorBlueDark.value,\n      color: chartColorBlueDark.value\n    },\n    {\n      id: 'hypervisorSockets',\n      fill: chartColorCyanLight.value,\n      stroke: chartColorCyanDark.value,\n      color: chartColorCyanDark.value\n    },\n    {\n      id: 'cloudSockets',\n      fill: chartColorPurpleLight.value,\n      stroke: chartColorPurpleDark.value,\n      color: chartColorPurpleDark.value\n    },\n    { id: 'thresholdSockets', chartType: 'threshold' }\n  ],\n  initialGuestsFilters: [\n    {\n      id: 'displayName',\n      header: () => translate('curiosity-inventory.header', { context: 'guestsDisplayName' }),\n      cell: (data, session) => {\n        const { displayName, inventoryId } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId?.value) {\n          return displayName?.value;\n        }\n\n        if (!authorized) {\n          return displayName?.value || inventoryId?.value;\n        }\n\n        return (\n          <Button\n            isInline\n            component=\"a\"\n            variant=\"link\"\n            href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n          >\n            {displayName.value || inventoryId.value}\n          </Button>\n        );\n      }\n    },\n    {\n      id: 'inventoryId',\n      cellWidth: 40\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      cellWidth: 15\n    }\n  ],\n  initialInventoryFilters: [\n    {\n      id: 'displayName',\n      cell: (data, session) => {\n        const { displayName = {}, inventoryId = {}, numberOfGuests = {} } = data;\n        const { inventory: authorized } = session?.authorized || {};\n\n        if (!inventoryId.value) {\n          return displayName.value;\n        }\n\n        let updatedDisplayName = displayName.value || inventoryId.value;\n\n        if (authorized) {\n          updatedDisplayName = (\n            <Button\n              isInline\n              component=\"a\"\n              variant=\"link\"\n              href={`${helpers.UI_DEPLOY_PATH_PREFIX}/insights/inventory/${inventoryId.value}/`}\n            >\n              {displayName.value || inventoryId.value}\n            </Button>\n          );\n        }\n\n        return (\n          <React.Fragment>\n            {updatedDisplayName}{' '}\n            {(numberOfGuests.value &&\n              translate('curiosity-inventory.label', { context: 'numberOfGuests', count: numberOfGuests.value }, [\n                <PfLabel color=\"blue\" />\n              ])) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true\n    },\n    {\n      id: 'measurementType',\n      cell: (data = {}) => {\n        const { cloudProvider = {}, measurementType = {} } = data;\n        return (\n          <React.Fragment>\n            {translate('curiosity-inventory.measurementType', { context: measurementType.value })}{' '}\n            {(cloudProvider.value && (\n              <PfLabel color=\"purple\">\n                {translate('curiosity-inventory.cloudProvider', { context: cloudProvider.value })}\n              </PfLabel>\n            )) ||\n              ''}\n          </React.Fragment>\n        );\n      },\n      isSortable: true,\n      cellWidth: 20\n    },\n    {\n      id: 'sockets',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    },\n    {\n      id: 'lastSeen',\n      cell: data => (data?.lastSeen?.value && <DateFormat date={data?.lastSeen?.value} />) || '',\n      isSortable: true,\n      isWrappable: true,\n      cellWidth: 15\n    }\n  ],\n  initialInventorySettings: {},\n  initialToolbarFilters: [\n    {\n      id: RHSM_API_QUERY_TYPES.SLA\n    },\n    {\n      id: RHSM_API_QUERY_TYPES.USAGE,\n      selected: true\n    }\n  ]\n};\n\nexport { config as default, config, productGroup, productId };\n","import { config as rhelConfig } from './product.rhel';\nimport { config as openshiftContainerConfig } from './product.openshiftContainer';\nimport { config as openshiftMetricsConfig } from './product.openshiftMetrics';\nimport { config as openshiftDedicatedConfig } from './product.openshiftDedicated';\nimport { config as rhosakConfig } from './product.rhosak';\nimport { config as satelliteProductConfig } from './product.satellite';\nimport { RHSM_API_PATH_ID_TYPES } from '../types/rhsmApiTypes';\nimport { helpers } from '../common';\n\nconst routes = [\n  {\n    id: 'rhel',\n    path: '/rhel',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL }],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['insights'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-arm',\n    path: '/rhel-arm',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_ARM],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_ARM }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-ibmpower',\n    path: '/rhel-ibmpower',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_IBM_POWER }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-ibmz',\n    path: '/rhel-ibmz',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_IBM_Z }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'rhel-x86',\n    path: '/rhel-x86',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.RHEL_X86],\n    productParameter: [rhelConfig.productGroup],\n    productConfig: [{ ...rhelConfig, productId: RHSM_API_PATH_ID_TYPES.RHEL_X86 }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'openshift-container',\n    path: '/openshift-container',\n    pathParameter: [openshiftContainerConfig.productId, openshiftMetricsConfig.productId],\n    productParameter: [openshiftContainerConfig.productGroup, openshiftMetricsConfig.productGroup],\n    productConfig: [openshiftContainerConfig, openshiftMetricsConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewOpenShiftContainer'\n  },\n  {\n    id: 'openshift-dedicated',\n    path: '/openshift-dedicated',\n    pathParameter: [openshiftDedicatedConfig.productId],\n    productParameter: [openshiftDedicatedConfig.productGroup],\n    productConfig: [openshiftDedicatedConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productViewOpenShiftDedicated'\n  },\n  {\n    id: 'rhosak',\n    path: '/streams',\n    pathParameter: [rhosakConfig.productId],\n    productParameter: [rhosakConfig.productGroup],\n    productConfig: [rhosakConfig],\n    redirect: null,\n    isSearchable: true,\n    aliases: ['application-services', 'streams', 'rhosak'],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'satellite',\n    path: '/satellite',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [{ ...satelliteProductConfig, productId: RHSM_API_PATH_ID_TYPES.SATELLITE }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'satellite-capsule',\n    path: '/satellite-capsule',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE_CAPSULE],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [{ ...satelliteProductConfig, productId: RHSM_API_PATH_ID_TYPES.SATELLITE_CAPSULE }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'satellite-server',\n    path: '/satellite-server',\n    pathParameter: [RHSM_API_PATH_ID_TYPES.SATELLITE_SERVER],\n    productParameter: [satelliteProductConfig.productGroup],\n    productConfig: [{ ...satelliteProductConfig, productId: RHSM_API_PATH_ID_TYPES.SATELLITE_SERVER }],\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'productView/productView'\n  },\n  {\n    id: 'optin',\n    path: '/optin',\n    pathParameter: null,\n    productParameter: null,\n    productConfig: null,\n    redirect: null,\n    isSearchable: false,\n    aliases: [],\n    activateOnError: true,\n    disabled: helpers.UI_DISABLED,\n    default: false,\n    component: 'optinView/optinView'\n  },\n  {\n    id: 'missing',\n    path: '/',\n    pathParameter: null,\n    productParameter: null,\n    productConfig: null,\n    redirect: '/',\n    isSearchable: false,\n    aliases: [],\n    activateOnError: false,\n    disabled: helpers.UI_DISABLED,\n    default: true,\n    component: 'productView/productViewMissing'\n  }\n];\n\nexport { routes as default, routes };\n","import { useHistory as useHistoryRRD, useLocation, useParams, useRouteMatch } from 'react-router-dom';\nimport { useRouteDetail } from '../components/router/routerContext';\nimport { routerHelpers } from '../components/router/routerHelpers';\nimport { reduxActions, storeHooks } from '../redux';\n\n/**\n * Pass useHistory methods. Proxy useHistory push with Platform specific navigation update.\n *\n * @param {object} options\n * @param {boolean} options.isSetAppNav Allow setting the Platform's left navigation if conditions are met or fallback to history.push.\n * @param {Function} options.useHistory\n * @param {Function} options.useDispatch\n * @returns {object}\n */\nconst useHistory = ({\n  isSetAppNav = false,\n  useHistory: useAliasHistory = useHistoryRRD,\n  useDispatch: useAliasDispatch = storeHooks.reactRedux.useDispatch\n} = {}) => {\n  const history = useAliasHistory();\n  const dispatch = useAliasDispatch();\n\n  return {\n    ...history,\n    push: (pathLocation, historyState) => {\n      const pathName = (typeof pathLocation === 'string' && pathLocation) || pathLocation?.pathname;\n      const { productParameter, id, routeHref } = routerHelpers.getRouteConfig({ pathName, id: pathName });\n      const { hash, search } = window.location;\n\n      if (isSetAppNav && productParameter) {\n        return dispatch(reduxActions.platform.setAppNav(id));\n      }\n\n      return history?.push(routeHref || (pathName && `${pathName}${search}${hash}`) || pathLocation, historyState);\n    }\n  };\n};\n\nconst routerHooks = {\n  useHistory,\n  useLocation,\n  useParams,\n  useRouteDetail,\n  useRouteMatch\n};\n\nexport { routerHooks as default, routerHooks, useHistory, useLocation, useParams, useRouteDetail, useRouteMatch };\n","import { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from './reduxHelpers';\n\n/**\n * Parse a query object against a schema for specific RHSM endpoints.\n *\n * @param {object} query\n * @param {object} queries\n * @returns {{graphTallyQuery: object, inventoryHostsQuery: object, inventorySubscriptionsQuery: object,\n *     query: object, inventoryGuestsQuery: object, toolbarQuery: object}}\n */\nconst parseRhsmQuery = (query = {}, queries = {}) => {\n  const { graphTallyQuery, inventoryGuestsQuery, inventoryHostsQuery, inventorySubscriptionsQuery } = queries;\n\n  const updatedGraphTallyQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES);\n  const updatedInventoryGuestsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES\n  );\n  const updatedInventoryHostsQuery = reduxHelpers.setApiQuery(query, rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES);\n  const updatedInventorySubscriptionsQuery = reduxHelpers.setApiQuery(\n    query,\n    rhsmApiTypes.RHSM_API_QUERY_SET_INVENTORY_TYPES\n  );\n\n  return {\n    query,\n    graphTallyQuery: { ...updatedGraphTallyQuery, ...graphTallyQuery },\n    inventoryGuestsQuery: { ...updatedInventoryGuestsQuery, ...inventoryGuestsQuery },\n    inventoryHostsQuery: { ...updatedInventoryHostsQuery, ...inventoryHostsQuery },\n    inventorySubscriptionsQuery: { ...updatedInventorySubscriptionsQuery, ...inventorySubscriptionsQuery },\n    toolbarQuery: query\n  };\n};\n\nconst apiQueries = {\n  parseRhsmQuery\n};\n\nexport { apiQueries as default, apiQueries };\n","import _get from 'lodash/get';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _camelCase from 'lodash/camelCase';\nimport _snakeCase from 'lodash/snakeCase';\nimport { helpers } from '../../common';\n\n/**\n * Apply a \"fulfilled\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst FULFILLED_ACTION = (base = '') => `${base}_FULFILLED`;\n\n/**\n * Apply a \"pending\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst PENDING_ACTION = (base = '') => `${base}_PENDING`;\n\n/**\n * Apply a \"rejected\" suffix for Redux Promise Middleware action responses.\n *\n * @param {string} base\n * @returns {string}\n */\nconst REJECTED_ACTION = (base = '') => `${base}_REJECTED`;\n\n/**\n * Apply a \"status range\" suffix for Status Middleware action responses.\n *\n * @param {string} status\n * @returns {string}\n */\nconst HTTP_STATUS_RANGE = status => `${status}_STATUS_RANGE`;\n\n/**\n * Set an API query based on specific API \"acceptable values\" schema.\n *\n * @param {object} values\n * @param {object} schema\n * @param {*} [initialValue]\n * @returns {object}\n */\nconst setApiQuery = (values, schema, initialValue) => {\n  const generated = {};\n  const schemaArr = (schema && Object.values(schema)) || [];\n\n  schemaArr.forEach(value => {\n    if (initialValue === undefined) {\n      if (value in values) {\n        generated[value] = values?.[value];\n      }\n    } else {\n      generated[value] = values?.[value] || initialValue;\n    }\n  });\n\n  return generated;\n};\n\n// ToDo: research applying a maintained schema map/normalizer such as, normalizr\n/**\n * Apply a set of schemas using either an array of objects in the\n * form of [{ madeUpKey: 'some_api_key' }], or an array of arrays\n * in the form of [['some_api_key','another_api_key']]\n *\n * @param {Array} schemas\n * @param {*} [initialValue]\n * @returns {Array}\n */\nconst setResponseSchemas = (schemas = [], initialValue) =>\n  schemas.map(schema => {\n    const generated = {};\n    const arr = (Array.isArray(schema) && schema) || Object.values(schema);\n\n    arr.forEach(value => {\n      generated[value] = initialValue;\n    });\n\n    return generated;\n  });\n\n/**\n * Normalize an API response.\n *\n * @param {*} responses\n * @param {object} responses.response\n * @param {object} responses.response.schema\n * @param {Array|object} responses.response.data\n * @param {string} responses.response.keyCase\n * @param {Function} responses.response.customResponseEntry\n * @param {Function} responses.response.customResponseValue\n * @param {string} responses.response.keyPrefix\n * @returns {Array}\n */\nconst setNormalizedResponse = (...responses) => {\n  const parsedResponses = [];\n\n  responses.forEach(\n    ({ schema = {}, data, customResponseEntry, customResponseValue, keyPrefix: prefix, keyCase = 'camel' }) => {\n      const isArray = Array.isArray(data);\n      const updatedData = (isArray && data) || (data && [data]) || [];\n      const [generatedSchema = {}] = setResponseSchemas([schema]);\n      const parsedResponse = [];\n\n      updatedData.forEach((value, index) => {\n        const generateReflectedData = ({\n          dataObj,\n          keyPrefix = '',\n          keyCaseType,\n          customEntry,\n          customValue = null,\n          update = helpers.noop\n        }) => {\n          let updatedDataObj = {};\n\n          Object.entries(dataObj).forEach(([dataObjKey, dataObjValue]) => {\n            let casedDataObjKey;\n\n            switch (keyCaseType) {\n              case 'camel':\n                casedDataObjKey = _camelCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'snake':\n                casedDataObjKey = _snakeCase(`${keyPrefix} ${dataObjKey}`).trim();\n                break;\n              case 'default':\n              default:\n                casedDataObjKey = `${dataObjKey}`.trim();\n                break;\n            }\n\n            let val = dataObjValue;\n\n            if (typeof val === 'number') {\n              val = (Number.isInteger(val) && Number.parseInt(val, 10)) || Number.parseFloat(val) || val;\n            }\n\n            if (typeof customValue === 'function') {\n              updatedDataObj[casedDataObjKey] = customValue({ data: dataObj, key: dataObjKey, value: val, index });\n            } else {\n              updatedDataObj[casedDataObjKey] = val;\n            }\n          });\n\n          if (typeof customEntry === 'function') {\n            updatedDataObj = customEntry(updatedDataObj, index);\n          }\n\n          update(updatedDataObj);\n        };\n\n        generateReflectedData({\n          keyPrefix: prefix,\n          dataObj: { ...generatedSchema, ...value },\n          keyCaseType: keyCase,\n          customEntry: customResponseEntry,\n          customValue: customResponseValue,\n          update: generatedData => parsedResponse.push(generatedData)\n        });\n      });\n\n      parsedResponses.push(parsedResponse);\n    }\n  );\n\n  return parsedResponses;\n};\n\n/**\n * Create a single response from an array of service call responses.\n * Aids in handling a Promise.all response.\n *\n * @param {Array|object} results\n * @returns {object}\n */\nconst getSingleResponseFromResultArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n  const updatedResultsMessage =\n    (results.payload && results.payload.message && { message: results.payload.message }) ||\n    (results.message && { message: results.message });\n\n  if (Array.isArray(updatedResults)) {\n    const firstErrorResponse = updatedResults.find(value => _get(value, 'response.status', value.status) >= 300);\n    const firstSuccessResponse = updatedResults.find(value => _get(value, 'response.status', value.status) < 300);\n\n    return (\n      (firstErrorResponse && { ...firstErrorResponse, ...updatedResultsMessage }) ||\n      (firstSuccessResponse && { ...firstSuccessResponse, ...updatedResultsMessage })\n    );\n  }\n\n  return { ...updatedResults, ...updatedResultsMessage };\n};\n\n/**\n * Get a http status message from a service call.\n *\n * @param {Array|object} results\n * @returns {string|null|*}\n */\nconst getMessageFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  const status = updatedResults.status || 0;\n  const statusResponse = updatedResults.statusText || '';\n  const messageResponse = updatedResults.message;\n  const dataResponse = updatedResults.data || null;\n  const formattedStatus = (status && `${status} `) || '';\n\n  if (messageResponse && typeof messageResponse === 'string') {\n    return messageResponse.trim();\n  }\n\n  if (dataResponse && typeof dataResponse === 'string') {\n    return `${formattedStatus}${dataResponse}`.trim();\n  }\n\n  if (status >= 400 && _isPlainObject(dataResponse)) {\n    return `${formattedStatus}${JSON.stringify(dataResponse)}`;\n  }\n\n  return (statusResponse && statusResponse.trim()) || null;\n};\n\n/**\n * Get a date string from a service call.\n *\n * @param {Array|object} results\n * @returns {null|string|Date}\n */\nconst getDateFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return null;\n  }\n\n  return _get(updatedResults, 'headers.date', null);\n};\n\n/**\n * Get a http status from a service call response.\n *\n * @param {Array|object} results\n * @returns {number}\n */\nconst getStatusFromResults = results => {\n  const updatedResults = getSingleResponseFromResultArray(results);\n\n  if (helpers.isPromise(updatedResults)) {\n    return 0;\n  }\n\n  return updatedResults?.status || 0;\n};\n\n/**\n * Convenience method for setting object properties, specifically Redux reducer based state objects.\n *\n * @param {string} prop\n * @param {object} data\n * @param {object} options\n * @property {object} state\n * @property {object} initialState\n * @property {boolean} reset\n * @returns {object}\n */\nconst setStateProp = (prop, data, options) => {\n  const { state = {}, initialState = {}, reset = true } = options;\n  let obj = { ...state };\n\n  if (helpers.DEV_MODE && prop && !state[prop]) {\n    console.error(`Error: Property ${prop} does not exist within the passed state.`, state);\n  }\n\n  if (helpers.DEV_MODE && reset && prop && !initialState[prop]) {\n    console.warn(`Warning: Property ${prop} does not exist within the passed initialState.`, initialState);\n  }\n\n  if (reset && prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...initialState[prop],\n      ...data\n    };\n  } else if (reset && !prop) {\n    obj = {\n      ...state,\n      ...initialState,\n      ...data\n    };\n  } else if (prop) {\n    obj[prop] = {\n      ...state[prop],\n      ...data\n    };\n  } else {\n    obj = {\n      ...state,\n      ...data\n    };\n  }\n\n  return obj;\n};\n\n/**\n * Retrieve a data property either from an array of responses, or a single response.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst singlePromiseDataResponseFromArray = results => {\n  const updatedResults =\n    (results.payload && results.payload.response) || results.payload || results.response || results;\n\n  if (Array.isArray(updatedResults)) {\n    return updatedResults.map(value => value.data || {});\n  }\n  return updatedResults.data || {};\n};\n\n/**\n * Alias for singlePromiseDataResponseFromArray.\n *\n * @param {Array|object} results\n * @returns {Array|object}\n */\nconst getDataFromResults = results => singlePromiseDataResponseFromArray(results);\n\n/**\n * Automatically apply reducer logic to state by handling promise responses from redux-promise-middleware.\n *\n * @param {Array} types\n * @param {object} state\n * @param {object} action\n * @property { string } type\n * @returns {object}\n */\nconst generatedPromiseActionReducer = (types = [], state = {}, action = {}) => {\n  const { type } = action;\n  const expandedTypes = [];\n\n  types.forEach(\n    val =>\n      (Array.isArray(val.type) && val.type.forEach(subVal => expandedTypes.push({ ref: val.ref, type: subVal }))) ||\n      expandedTypes.push(val)\n  );\n\n  const [whichType] = expandedTypes.filter(val =>\n    new RegExp(\n      `^(${REJECTED_ACTION(val.type || val)}|${PENDING_ACTION(val.type || val)}|${FULFILLED_ACTION(val.type || val)})$`\n    ).test(type)\n  );\n\n  if (!whichType) {\n    return state;\n  }\n\n  const expandMetaTypes = (meta = {}) => {\n    const updatedMeta = { ...meta };\n\n    return {\n      meta: { ...updatedMeta },\n      ...Object.fromEntries(Object.entries(meta).map(([key, value]) => [_camelCase(`meta ${key}`), value]))\n    };\n  };\n\n  const baseState = {\n    error: false,\n    errorMessage: '',\n    fulfilled: false,\n    pending: false,\n    ...expandMetaTypes(action.meta)\n  };\n\n  // Automatically apply data and state to a contextual ID if meta.id exists.\n  const setId = data =>\n    (typeof action.meta?.id === 'string' && action.meta?.id && { [action.meta.id]: { ...baseState, ...data } }) || {\n      ...baseState,\n      ...data\n    };\n\n  switch (type) {\n    case REJECTED_ACTION(whichType.type || whichType):\n      const errorMessage = getMessageFromResults(action);\n      let errorResponse;\n\n      if (errorMessage === 'cancelled request') {\n        errorResponse = {\n          date: getDateFromResults(action),\n          cancelled: true\n        };\n      } else {\n        errorResponse = {\n          error: true,\n          errorMessage,\n          status: getStatusFromResults(action)\n        };\n      }\n\n      return setStateProp(whichType.ref || null, setId(errorResponse), {\n        state\n      });\n    case PENDING_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          pending: true\n        }),\n        {\n          state\n        }\n      );\n\n    case FULFILLED_ACTION(whichType.type || whichType):\n      return setStateProp(\n        whichType.ref || null,\n        setId({\n          date: getDateFromResults(action),\n          data: singlePromiseDataResponseFromArray(action),\n          fulfilled: true,\n          status: getStatusFromResults(action)\n        }),\n        {\n          state\n        }\n      );\n\n    default:\n      return state;\n  }\n};\n\nconst reduxHelpers = {\n  FULFILLED_ACTION,\n  PENDING_ACTION,\n  REJECTED_ACTION,\n  HTTP_STATUS_RANGE,\n  setApiQuery,\n  setResponseSchemas,\n  setNormalizedResponse,\n  generatedPromiseActionReducer,\n  getDataFromResults,\n  getDateFromResults,\n  getMessageFromResults,\n  getSingleResponseFromResultArray,\n  getStatusFromResults,\n  setStateProp,\n  singlePromiseDataResponseFromArray\n};\n\nexport { reduxHelpers as default, reduxHelpers };\n","import { useSelector as useReactReduxSelector, shallowEqual } from 'react-redux';\nimport { createSelector } from 'reselect';\nimport { store } from '../store';\n\n/**\n * FixMe: Appears to be an issue in trying to use Redux Promise with the default \"useDispatch\"\n */\n/**\n * Wrapper for store.dispatch, emulating useDispatch.\n *\n * @returns {Function}\n */\nconst useDispatch = () => dispatchEvent => store.dispatch(dispatchEvent);\n\n/**\n * Wrapper for Redux hook, useSelector. Applies test mode and a fallback value.\n *\n * @param {Function} selector\n * @param {*} value\n * @param {object} options\n * @param {*} options.equality\n * @param {Function} options.useSelector\n * @returns {*}\n */\nconst useSelector = (\n  selector,\n  value = null,\n  { equality, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => useAliasSelector(selector, equality) ?? value;\n\n/**\n * Generate a selector from multiple selectors for use in \"useSelector\".\n *\n * @param {Array} selectors\n * @param {*} value\n * @param {object} options\n * @param {Function} options.useSelector\n * @param {*} options.equality\n * @returns {Array}\n */\nconst useSelectors = (\n  selectors,\n  value,\n  { equality = shallowEqual, useSelector: useAliasSelector = useReactReduxSelector } = {}\n) => {\n  const multiSelector = createSelector(selectors, (...results) => results);\n  return useAliasSelector(multiSelector, equality) ?? value;\n};\n\nconst reactReduxHooks = {\n  shallowEqual,\n  useDispatch,\n  useSelector,\n  useSelectors\n};\n\nexport { reactReduxHooks as default, reactReduxHooks, shallowEqual, useDispatch, useSelector, useSelectors };\n","import { reactReduxHooks } from './useReactRedux';\nimport { rhsmTypes } from '../types/rhsmTypes';\nimport { rhsmServices } from '../../services/rhsm/rhsmServices';\n\n/**\n * Get an updated store RHSM response from message reporting.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst useGetMessageReports = (id = null, query = {}) =>\n  reactReduxHooks.useDispatch()({\n    type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM,\n    payload: rhsmServices.getGraphReports(id, query, { cancelId: 'messageReport' }),\n    meta: {\n      id,\n      query,\n      notifications: {}\n    }\n  });\n\nconst rhsmActionsHooks = {\n  useGetMessageReports\n};\n\nexport { rhsmActionsHooks as default, rhsmActionsHooks, useGetMessageReports };\n","import { reactReduxHooks } from './useReactRedux';\nimport { rhsmActionsHooks } from './useRhsmActions';\nimport { rhsmSelectorsHooks } from './useRhsmSelectors';\n\nconst storeHooks = {\n  reactRedux: reactReduxHooks,\n  rhsmActions: rhsmActionsHooks,\n  rhsmSelectors: rhsmSelectorsHooks\n};\n\nexport { storeHooks as default, storeHooks, reactReduxHooks, rhsmActionsHooks, rhsmSelectorsHooks };\n","import { useSelector } from 'react-redux';\nimport { useRouteDetail } from '../../components/router/routerContext';\nimport { reduxSelectors } from '../selectors';\n\n/**\n * Get app messages selector results.\n *\n * @param {object} options\n * @param {Function} options.useRouteDetail\n * @param {Function} options.useSelector\n * @returns {object}\n */\nconst useAppMessages = ({\n  useRouteDetail: useAliasRouteDetail = useRouteDetail,\n  useSelector: useAliasSelector = useSelector\n} = {}) => {\n  const { pathParameter: productId, productParameter: viewId } = useAliasRouteDetail() || {};\n  const result = useAliasSelector(state => reduxSelectors.appMessages.appMessages(state, { productId, viewId }));\n  return {\n    ...result\n  };\n};\n\nconst rhsmSelectorsHooks = {\n  useAppMessages\n};\n\nexport { rhsmSelectorsHooks as default, rhsmSelectorsHooks, useAppMessages };\n","import {\n  addNotification as RcsAddNotification,\n  removeNotification as RcsRemoveNotification,\n  clearNotifications as RcsClearNotifications\n} from '@redhat-cloud-services/frontend-components-notifications';\nimport { platformTypes } from '../types';\nimport { platformServices } from '../../services/platformServices';\n\n/**\n * Add a platform plugin toast notification.\n *\n * @param {object} data\n * @returns {*}\n */\nconst addNotification = data => RcsAddNotification(data);\n\n/**\n * Remove a platform plugin toast notification.\n *\n * @param {string} id\n * @returns {*}\n */\nconst removeNotification = id => RcsRemoveNotification(id);\n\n/**\n * Clear all platform plugin toast notifications.\n *\n * @returns {*}\n */\nconst clearNotifications = () => RcsClearNotifications();\n\n/**\n * Hide platform global filter.\n *\n * @param {boolean} isHidden\n * @returns {{Function}}\n */\nconst hideGlobalFilter = isHidden => ({\n  type: platformTypes.PLATFORM_GLOBAL_FILTER_HIDE,\n  payload: platformServices.hideGlobalFilter(isHidden)\n});\n\n/**\n * Apply platform method for initializing chrome, i.e. header, left-nav.\n *\n * @returns {{payload: Promise<void>, type: string}}\n */\nconst initializeChrome = () => ({\n  type: platformTypes.PLATFORM_INIT,\n  payload: platformServices.initializeChrome()\n});\n\n/**\n * Apply platform method for updating routing history on \"navigating\" with the left-nav.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => dispatch => {\n  dispatch({\n    type: platformTypes.PLATFORM_ON_NAV\n  });\n  return platformServices.onNavigation(callback);\n};\n\n/**\n * Apply platform method for setting the application name/identifier.\n *\n * @param {string} name\n * @returns {{payload: Promise<void>, meta: {data: {name: *}}, type: string}}\n */\nconst setAppName = name => ({\n  type: platformTypes.PLATFORM_APP_NAME,\n  payload: platformServices.setAppName(name),\n  meta: {\n    data: { name }\n  }\n});\n\n/**\n * Apply platform method for changing routes via the left-nav navigation.\n *\n * @param {string} id\n * @param {object} options\n * @param {string} options.appName\n * @param {boolean} options.secondaryNav\n * @returns {Function}\n */\nconst setAppNav =\n  (id, { appName, secondaryNav } = {}) =>\n  dispatch =>\n    dispatch({\n      type: platformTypes.PLATFORM_SET_NAV,\n      payload: platformServices.setAppNav(id, { appName, secondaryNav }),\n      meta: {\n        id,\n        appName,\n        secondaryNav\n      }\n    });\n\nconst platformActions = {\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n\nexport {\n  platformActions as default,\n  platformActions,\n  addNotification,\n  removeNotification,\n  clearNotifications,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n","import { rhsmTypes } from '../types';\nimport { rhsmServices } from '../../services/rhsm/rhsmServices';\n\n/**\n * Get a combined RHSM response from reporting and capacity.\n *\n * @param {string} id\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphReportsCapacity =\n  (id = null, query = {}, options = {}) =>\n  dispatch => {\n    const { cancelId = 'graphReportsCapacity' } = options;\n\n    return dispatch({\n      type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM,\n      payload: Promise.all([\n        rhsmServices.getGraphReports(id, query, { cancelId }),\n        rhsmServices.getGraphCapacity(id, query, { cancelId })\n      ]),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n  };\n\n/**\n * Get a RHSM response from multiple Tally IDs and metrics.\n *\n * @param {object|Array} idMetric An object, or an Array of objects, in the form of { id: PRODUCT_ID, metric: METRIC_ID }\n * @param {object} query\n * @param {object} options\n * @param {string} options.cancelId\n * @returns {Function}\n */\nconst getGraphTally =\n  (idMetric = {}, query = {}, options = {}) =>\n  dispatch => {\n    const { cancelId = 'graphTally' } = options;\n    const multiMetric = (Array.isArray(idMetric) && idMetric) || [idMetric];\n    const multiDispatch = [];\n\n    multiMetric.forEach(({ id, metric }) => {\n      multiDispatch.push({\n        type: rhsmTypes.GET_GRAPH_TALLY_RHSM,\n        payload: rhsmServices.getGraphTally([id, metric], query, {\n          cancelId: `${cancelId}_${id}_${metric}`\n        }),\n        meta: {\n          id: `${id}_${metric}`,\n          idMetric: { id, metric },\n          query,\n          notifications: {}\n        }\n      });\n    });\n\n    return Promise.all(dispatch(multiDispatch));\n  };\n\n/**\n * Get a hosts response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM,\n      payload: rhsmServices.getHostsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a host's guest response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getHostsInventoryGuests =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM,\n      payload: rhsmServices.getHostsInventoryGuests(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get an instances response listing from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getInstancesInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM,\n      payload: rhsmServices.getInstancesInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a RHSM response from message reporting.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getMessageReports =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM,\n      payload: rhsmServices.getGraphReports(id, query, { cancelId: 'messageReport' }),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\n/**\n * Get a subscriptions response from RHSM subscriptions.\n *\n * @param {string} id\n * @param {object} query\n * @returns {Function}\n */\nconst getSubscriptionsInventory =\n  (id = null, query = {}) =>\n  dispatch =>\n    dispatch({\n      type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM,\n      payload: rhsmServices.getSubscriptionsInventory(id, query),\n      meta: {\n        id,\n        query,\n        notifications: {}\n      }\n    });\n\nconst rhsmActions = {\n  getGraphReportsCapacity,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n\nexport {\n  rhsmActions as default,\n  rhsmActions,\n  getGraphReportsCapacity,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getMessageReports,\n  getSubscriptionsInventory\n};\n","import Cookies from 'js-cookie';\nimport LocaleCode from 'locale-code';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { rbacConfig as permissions } from '../config';\nimport { getUser, getUserPermissions } from './platformServices';\nimport { serviceCall } from './config';\nimport { helpers } from '../common';\n\n/**\n * Apply an emulated API response to the platforms getUser method.\n *\n * @returns {Promise<{data: {permissions: (void|*[]), user: void}, message: string, status: number}>}\n */\nconst authorizeUser = async () => {\n  const updatedPermissions = Object.keys(permissions);\n  let message = '{ auth.getUser, getUserPermissions } = insights.chrome';\n  let userData;\n  let userPermissions;\n\n  try {\n    userData = await getUser();\n\n    if (updatedPermissions.length) {\n      const allPermissions = await Promise.all(updatedPermissions.map(app => getUserPermissions(app)));\n\n      if (Array.isArray(allPermissions)) {\n        userPermissions = [...allPermissions.flat()];\n      }\n    } else {\n      userPermissions = await getUserPermissions();\n    }\n  } catch (e) {\n    message = e.message;\n  }\n\n  if (_isPlainObject(userData) && Object.keys(userData).length) {\n    return Promise.resolve({ data: { user: userData, permissions: userPermissions || [] }, message, status: 200 });\n  }\n\n  const emulatedErrorResponse = {\n    ...new Error(message),\n    message,\n    status: 418\n  };\n\n  return Promise.reject(emulatedErrorResponse);\n};\n\n/**\n * Return a platform locale value from a cookie.\n *\n * @private\n * @returns {{value: string, key: string | null}|null}\n */\nconst getLocaleFromCookie = () => {\n  const value = (Cookies.get(process.env.REACT_APP_CONFIG_SERVICE_LOCALES_COOKIE) || '').replace('_', '-');\n  const key = (value && LocaleCode.getLanguageName(value)) || null;\n\n  return (key && { value, key }) || null;\n};\n\n/**\n * Return platform locale.\n *\n * @returns {Promise<{data: void}>}\n */\nconst getLocale = () => {\n  const defaultLocale = {\n    value: helpers.UI_LOCALE_DEFAULT,\n    key: helpers.UI_LOCALE_DEFAULT_DESC\n  };\n\n  return new Promise(resolve =>\n    resolve({\n      data: getLocaleFromCookie() || defaultLocale\n    })\n  );\n};\n\nconst logoutUser = () =>\n  new Promise(resolve => {\n    resolve({});\n  });\n\n/**\n * @apiMock {DelayResponse} 2000\n * @api {delete} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Delete a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {text} Success-Response:\n *     HTTP/1.1 204 OK\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Not Found\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Delete a RHSM account opt-in config.\n *\n * @returns {Promise<*>}\n */\nconst deleteAccountOptIn = () =>\n  serviceCall({\n    method: 'delete',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN\n  });\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Get a RHSM account opt-in config\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get a RHSM account opt-in config.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getAccountOptIn = (options = {}) => {\n  const { cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 1000\n * @apiMock {ForceStatus} 200\n * @api {put} /api/rhsm-subscriptions/v1/opt-in\n * @apiDescription Create/Update an account's opt-in configuration. Account and Org ID are defined by\n * the identity header. If no parameters are specified, everything will be enabled.\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *        \"data\": {\n *          \"opt_in_complete\": true,\n *          \"account\": {\n *            \"account_number\": 12345,\n *            \"tally_sync_enabled\": true,\n *            \"tally_reporting_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          },\n *          \"org\": {\n *            \"org_id\": 1111,\n *            \"conduit_sync_enabled\": true,\n *            \"opt_in_type\": \"API\",\n *            \"created\": \"2017-08-04T17:32:05Z\",\n *            \"last_updated\": \"2017-08-04T17:32:05Z\"\n *          }\n *        },\n *        \"meta\": {\n *          \"account_number\": 12345,\n *          \"org_id\": 1111\n *        }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Update a RHSM account opt-in config.\n *\n * @param {object} params Query/search params\n * @returns {Promise<*>}\n */\nconst updateAccountOptIn = (params = {}) =>\n  serviceCall({\n    method: 'put',\n    url: process.env.REACT_APP_SERVICES_RHSM_OPTIN,\n    params\n  });\n\nconst userServices = { authorizeUser, getLocale, logoutUser, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ userServices });\n\nexport {\n  userServices as default,\n  userServices,\n  authorizeUser,\n  getLocale,\n  logoutUser,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { platformActions } from './platformActions';\nimport { rhsmActions } from './rhsmActions';\nimport { userActions } from './userActions';\n\nconst actions = {\n  platform: platformActions,\n  rhsm: rhsmActions,\n  user: userActions\n};\n\nconst reduxActions = { ...actions };\n\nexport { reduxActions as default, reduxActions, platformActions, rhsmActions, userActions };\n","import { userTypes } from '../types';\nimport { userServices } from '../../services/userServices';\nimport { helpers } from '../../common/helpers';\nimport { translate } from '../../components/i18n/i18n';\n\n/**\n * Get an emulated API response from the platforms \"getUser\" method.\n *\n * @returns {Function}\n */\nconst authorizeUser = () => dispatch =>\n  dispatch({\n    type: userTypes.USER_AUTH,\n    payload: userServices.authorizeUser()\n  });\n\n/**\n * Get a user's locale.\n *\n * @returns {{payload: Promise<{data: void}>, type: string}}\n */\nconst getLocale = () => ({\n  type: userTypes.USER_LOCALE,\n  payload: userServices.getLocale()\n});\n\n/**\n * Delete a user's opt-in.\n *\n * @returns {Function}\n */\nconst deleteAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.DELETE_USER_OPTIN,\n    payload: userServices.deleteAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Get a user's opt-in config.\n *\n * @returns {Function}\n */\nconst getAccountOptIn = () => dispatch =>\n  dispatch({\n    type: userTypes.GET_USER_OPTIN,\n    payload: userServices.getAccountOptIn(),\n    meta: {\n      notifications: {}\n    }\n  });\n\n/**\n * Update a user's opt-in.\n *\n * @param {object} query\n * @returns {Function}\n */\nconst updateAccountOptIn =\n  (query = {}) =>\n  dispatch =>\n    dispatch({\n      type: userTypes.UPDATE_USER_OPTIN,\n      payload: userServices.updateAccountOptIn(query),\n      meta: {\n        query,\n        notifications: {\n          rejected: {\n            variant: 'danger',\n            title: translate('curiosity-optin.notificationsErrorTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsErrorDescription'),\n            dismissable: true\n          },\n          fulfilled: {\n            variant: 'success',\n            title: translate('curiosity-optin.notificationsSuccessTitle', { appName: helpers.UI_DISPLAY_NAME }),\n            description: translate('curiosity-optin.notificationsSuccessDescription'),\n            dismissable: true,\n            autoDismiss: false\n          }\n        }\n      }\n    });\n\nconst userActions = { authorizeUser, getLocale, deleteAccountOptIn, getAccountOptIn, updateAccountOptIn };\n\nexport {\n  userActions as default,\n  userActions,\n  authorizeUser,\n  getLocale,\n  deleteAccountOptIn,\n  getAccountOptIn,\n  updateAccountOptIn\n};\n","import { rhsmTypes, graphTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{reportCapacity: {}, legend: {}, tally: {}}}\n */\nconst initialState = {\n  legend: {},\n  reportCapacity: {},\n  tally: {}\n};\n\n/**\n * Apply graph interaction, and generated graph observer/reducer for reportCapacity to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst graphReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case graphTypes.SET_GRAPH_LEGEND:\n      return reduxHelpers.setStateProp(\n        'legend',\n        {\n          [action.id]: action.value\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'reportCapacity', type: rhsmTypes.GET_GRAPH_REPORT_CAPACITY_RHSM },\n          { ref: 'tally', type: rhsmTypes.GET_GRAPH_TALLY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ngraphReducer.initialState = initialState;\n\nexport { graphReducer as default, initialState, graphReducer };\n","import { rhsmTypes } from '../types/rhsmTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { inventoryTypes } from '../types';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{subscriptionsInventory: {}, instancesInventory: {}, tabs: {}, hostsInventory: {}, hostsGuests: {}}}\n */\nconst initialState = {\n  hostsInventory: {},\n  hostsGuests: {},\n  instancesInventory: {},\n  subscriptionsInventory: {},\n  tabs: {}\n};\n\n/**\n * Apply generated inventory observer/reducer for hosts/system and subscriptions inventory to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst inventoryReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case inventoryTypes.SET_INVENTORY_TAB:\n      return reduxHelpers.setStateProp(\n        'tabs',\n        {\n          ...action.tabs\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'hostsInventory', type: rhsmTypes.GET_HOSTS_INVENTORY_RHSM },\n          { ref: 'hostsGuests', type: rhsmTypes.GET_HOSTS_INVENTORY_GUESTS_RHSM },\n          { ref: 'instancesInventory', type: rhsmTypes.GET_INSTANCES_INVENTORY_RHSM },\n          { ref: 'subscriptionsInventory', type: rhsmTypes.GET_SUBSCRIPTIONS_INVENTORY_RHSM }\n        ],\n        state,\n        action\n      );\n  }\n};\n\ninventoryReducer.initialState = initialState;\n\nexport { inventoryReducer as default, initialState, inventoryReducer };\n","import { rhsmTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{report: {}}}\n */\nconst initialState = {\n  report: {}\n};\n\n/**\n * Generated daily observer/reducer for report to state,\n * against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst messagesReducer = (state = initialState, action) =>\n  reduxHelpers.generatedPromiseActionReducer(\n    [{ ref: 'report', type: rhsmTypes.GET_MESSAGE_REPORTS_RHSM }],\n    state,\n    action\n  );\n\nmessagesReducer.initialState = initialState;\n\nexport { messagesReducer as default, initialState, messagesReducer };\n","import { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{filters: {}}}\n */\nconst initialState = {\n  filters: {}\n};\n\n/**\n * Apply user observer/reducer logic for toolbar to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst toolbarReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.toolbar.SET_ACTIVE_FILTERS:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            activeFilters: action.activeFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.toolbar.SET_FILTER_TYPE:\n      return reduxHelpers.setStateProp(\n        'filters',\n        {\n          [action.viewId]: {\n            ...state.filters[action.viewId],\n            currentFilter: action.currentFilter\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\ntoolbarReducer.initialState = initialState;\n\nexport { toolbarReducer as default, initialState, toolbarReducer };\n","import _get from 'lodash/get';\nimport { appTypes, userTypes } from '../types';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{session: {errorCodes: Array, locale: string}, optin: {}}}\n */\nconst initialState = {\n  optin: {},\n  session: {\n    errorCodes: [],\n    locale: null\n  }\n};\n\n/**\n * Apply user observer/reducer logic for session to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxHelpers.FULFILLED_ACTION(userTypes.USER_LOCALE):\n      return reduxHelpers.setStateProp(\n        'session',\n        {\n          locale: action.payload.data\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n\n    case reduxHelpers.HTTP_STATUS_RANGE(appTypes.STATUS_4XX):\n      const actionStatus = reduxHelpers.getStatusFromResults(action);\n\n      if (actionStatus === 401 || actionStatus === 403) {\n        const errorCodes = _get(\n          reduxHelpers.getDataFromResults(action),\n          [rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA],\n          []\n        );\n\n        return reduxHelpers.setStateProp(\n          'session',\n          {\n            error: true,\n            errorCodes: errorCodes.map(value => value[rhsmApiTypes.RHSM_API_RESPONSE_ERROR_DATA_TYPES.CODE]),\n            errorMessage: reduxHelpers.getMessageFromResults(action),\n            locale: state.session.locale,\n            status: reduxHelpers.getStatusFromResults(action)\n          },\n          {\n            state,\n            initialState\n          }\n        );\n      }\n\n      return state;\n\n    default:\n      return reduxHelpers.generatedPromiseActionReducer(\n        [\n          { ref: 'optin', type: userTypes.DELETE_USER_OPTIN },\n          { ref: 'optin', type: userTypes.GET_USER_OPTIN },\n          { ref: 'optin', type: userTypes.UPDATE_USER_OPTIN },\n          { ref: 'session', type: userTypes.USER_AUTH }\n        ],\n        state,\n        action\n      );\n  }\n};\n\nuserReducer.initialState = initialState;\n\nexport { userReducer as default, initialState, userReducer };\n","import { routerHelpers } from '../../components/router';\nimport { reduxTypes } from '../types';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\n/**\n * Initial state.\n *\n * @private\n * @type {{graphTallyQuery: {}, inventoryHostsQuery: {}, inventorySubscriptionsQuery: {}, query: {},\n *     inventoryGuestsQuery: {}}}\n */\nconst initialState = {\n  query: {},\n  graphTallyQuery: {},\n  inventoryGuestsQuery: {},\n  inventoryHostsQuery: {},\n  inventorySubscriptionsQuery: {}\n};\n\n/**\n * Apply user observer/reducer logic for views to state, against actions.\n *\n * @param {object} state\n * @param {object} action\n * @returns {object|{}}\n */\nconst viewReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case reduxTypes.query.SET_QUERY_RESET_INVENTORY_LIST:\n      const updateResetQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n\n          delete productQuery[RHSM_API_QUERY_TYPES.DIRECTION];\n          delete productQuery[RHSM_API_QUERY_TYPES.SORT];\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateResetQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateResetQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR_INVENTORY_LIST:\n      const updateClearQueries = (query = {}, id) => {\n        const queryIds = routerHelpers.productGroups[id] || (query[id] && [id]) || [];\n        const updatedQuery = { ...query };\n\n        queryIds.forEach(queryId => {\n          const productQuery = updatedQuery[queryId] || {};\n\n          if (typeof productQuery[RHSM_API_QUERY_TYPES.OFFSET] === 'number') {\n            productQuery[RHSM_API_QUERY_TYPES.OFFSET] = 0;\n          }\n        });\n\n        return updatedQuery;\n      };\n\n      return reduxHelpers.setStateProp(\n        null,\n        {\n          ...state,\n          inventoryHostsQuery: updateClearQueries(state.inventoryHostsQuery, action.viewId),\n          inventorySubscriptionsQuery: updateClearQueries(state.inventorySubscriptionsQuery, action.viewId)\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_CLEAR:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            ...action.clearFilters\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.GRANULARITY]:\n      return reduxHelpers.setStateProp(\n        'graphTallyQuery',\n        {\n          [action.viewId]: {\n            ...state.graphTallyQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.GRANULARITY]: action[RHSM_API_QUERY_TYPES.GRANULARITY]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.START_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.START_DATE]: action[RHSM_API_QUERY_TYPES.START_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.END_DATE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.END_DATE]: action[RHSM_API_QUERY_TYPES.END_DATE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.SLA]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.SLA]: action[RHSM_API_QUERY_TYPES.SLA]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.UOM]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.UOM]: action[RHSM_API_QUERY_TYPES.UOM]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_TYPES[RHSM_API_QUERY_TYPES.USAGE]:\n      return reduxHelpers.setStateProp(\n        'query',\n        {\n          [action.viewId]: {\n            ...state.query[action.viewId],\n            [RHSM_API_QUERY_TYPES.USAGE]: action[RHSM_API_QUERY_TYPES.USAGE]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DISPLAY_NAME]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: action[RHSM_API_QUERY_TYPES.DISPLAY_NAME]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventoryHostsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventoryHostsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.LIMIT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.LIMIT]: action[RHSM_API_QUERY_TYPES.LIMIT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.OFFSET]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.OFFSET]: action[RHSM_API_QUERY_TYPES.OFFSET]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.DIRECTION]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.DIRECTION]: action[RHSM_API_QUERY_TYPES.DIRECTION]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    case reduxTypes.query.SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES[RHSM_API_QUERY_TYPES.SORT]:\n      return reduxHelpers.setStateProp(\n        'inventorySubscriptionsQuery',\n        {\n          [action.viewId]: {\n            ...state.inventorySubscriptionsQuery[action.viewId],\n            [RHSM_API_QUERY_TYPES.SORT]: action[RHSM_API_QUERY_TYPES.SORT]\n          }\n        },\n        {\n          state,\n          reset: false\n        }\n      );\n    default:\n      return state;\n  }\n};\n\nviewReducer.initialState = initialState;\n\nexport { viewReducer as default, initialState, viewReducer };\n","import { combineReducers } from 'redux';\nimport { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport graphReducer from './graphReducer';\nimport inventoryReducer from './inventoryReducer';\nimport messagesReducer from './messagesReducer';\nimport toolbarReducer from './toolbarReducer';\nimport userReducer from './userReducer';\nimport viewReducer from './viewReducer';\n\nconst reducers = {\n  notifications,\n  graph: graphReducer,\n  inventory: inventoryReducer,\n  messages: messagesReducer,\n  toolbar: toolbarReducer,\n  user: userReducer,\n  view: viewReducer\n};\n\nconst reduxReducers = combineReducers(reducers);\n\nexport {\n  reduxReducers as default,\n  reduxReducers,\n  graphReducer,\n  inventoryReducer,\n  messagesReducer,\n  toolbarReducer,\n  userReducer,\n  viewReducer\n};\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {{data: {object}}}\n */\nconst selectorCache = { data: {} };\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  report: state.messages?.report?.[props.productId],\n  viewId: props.viewId,\n  productId: props.productId\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => ({\n  ...props.query,\n  ...state.view?.query?.[props.productId],\n  ...state.view?.query?.[props.viewId]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{appMessages: {cloudigradeMismatch: boolean}}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (data, query = {}) => {\n  const { viewId = null, productId = null, report = {} } = data || {};\n  const appMessages = {\n    cloudigradeMismatch: false\n  };\n\n  const cache = (viewId && productId && selectorCache.data[`${viewId}_${productId}`]) || undefined;\n\n  Object.assign(appMessages, { ...cache });\n\n  // Scan Tally response for Cloud Meter flags\n  if (report.fulfilled && appMessages.cloudigradeMismatch !== true) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA]: reportData = [] } = report.data || {};\n\n    const cloudigradeMismatch = reportData\n      .reverse()\n      .find(\n        ({ [rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]: mismatch }) =>\n          mismatch === true\n      );\n\n    appMessages.cloudigradeMismatch = cloudigradeMismatch !== undefined;\n\n    selectorCache.data[`${viewId}_${productId}`] = {\n      ...appMessages\n    };\n  }\n\n  return { appMessages, query };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{appMessages: {cloudigradeMismatch: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst appMessagesSelectors = {\n  appMessages: selector,\n  makeAppMessages: makeSelector\n};\n\nexport { appMessagesSelectors as default, appMessagesSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport _isEqual from 'lodash/isEqual';\nimport { rbacConfig as permissions } from '../../config';\nimport {\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES as APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES as RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES as OPERATION_TYPES\n} from '../../types/platformApiTypes';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @returns {object}\n */\nconst statePropsFilter = state => ({\n  ...state.user?.session\n});\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{session: {entitled: boolean, permissions: object, authorized: object, admin: boolean,\n *     error: boolean}}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter], response => {\n  const { error = false, fulfilled = false, data = {}, ...rest } = response || {};\n  const updatedSession = {\n    ...rest,\n    admin: false,\n    entitled: false,\n    error,\n    authorized: {},\n    permissions: {}\n  };\n\n  if (!error && fulfilled) {\n    const { user = {}, permissions: responsePermissions = [] } = data;\n\n    updatedSession.admin =\n      user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]?.[\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER\n      ]?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN] || false;\n\n    updatedSession.entitled =\n      user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS]?.[APP_TYPES.SUBSCRIPTIONS]?.[\n        platformApiTypes.PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES.ENTITLED\n      ] || false;\n\n    // All permissions breakdown\n    responsePermissions.forEach(\n      ({\n        [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.PERMISSION]: permission,\n        [platformApiTypes.PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES.RESOURCE_DEFS]: definitions = []\n      }) => {\n        const [app = '', resource, operation] = permission?.split(':') || [];\n\n        if (!updatedSession.permissions[app]) {\n          updatedSession.permissions[app] = {\n            all: false,\n            resources: {}\n          };\n        }\n\n        if (resource === RESOURCE_TYPES.ALL && operation === OPERATION_TYPES.ALL) {\n          updatedSession.permissions[app].all = true;\n        }\n\n        if (!updatedSession.permissions[app].resources[resource]) {\n          updatedSession.permissions[app].resources[resource] = {};\n        }\n\n        updatedSession.permissions[app].resources[resource][operation] = definitions;\n      }\n    );\n\n    // Alias specific app permissions checks\n    Object.entries(permissions).forEach(([key, { permissions: resourcePermissions }]) => {\n      updatedSession.authorized[key] = updatedSession.permissions[key]?.all || false;\n\n      resourcePermissions.forEach(({ resource: res, operation: op }) => {\n        if (updatedSession.permissions[key]?.resources?.[res]?.[op]) {\n          updatedSession.authorized[key] = true;\n        }\n      });\n    });\n  }\n\n  return { session: updatedSession };\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{session: {entitled: boolean, permissions: Array, authorized: boolean, admin: boolean}}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst userSessionSelectors = {\n  userSession: selector,\n  makeUserSession: makeSelector\n};\n\nexport { userSessionSelectors as default, userSessionSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsGuests?.[props.id]\n});\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter], response => {\n  const { metaId, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    status: responseData.status\n  };\n\n  if (responseData.fulfilled) {\n    const { [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [] } = responseData.data || {};\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n      data: listData,\n      customResponseValue: customInventoryValue\n    });\n\n    // Update response and cache\n    updatedResponseData.fulfilled = true;\n    updatedResponseData.listData = updatedListData;\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{listData: Array, pending: boolean, fulfilled: boolean, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst guestsListSelectors = {\n  guestsList: selector,\n  makeGuestsList: makeSelector\n};\n\nexport { guestsListSelectors as default, guestsListSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport LruCache from 'lru-cache';\nimport moment from 'moment';\nimport _isEqual from 'lodash/isEqual';\nimport _camelCase from 'lodash/camelCase';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.graph?.reportCapacity?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { graphTallyQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      graphTallyQuery: { ...state.view?.graphTallyQuery?.[props.viewId] }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable graph/charting object.\n *\n * @type {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    graphData: {},\n    meta: {},\n    query,\n    status: responseData.status\n  };\n\n  const responseMetaQuery = { ...metaQuery };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, responseMetaQuery)) {\n    const [report, capacity] = responseData.data;\n    const reportData = report?.[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA] || [];\n    const reportMeta = report?.[rhsmApiTypes.RHSM_API_RESPONSE_META] || {};\n    const capacityData = capacity?.[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA] || [];\n\n    /**\n     * ToDo: Reevaluate this reset on graphData when working with Reselect's memoize.\n     * Creating a new object i.e. updatedResponseData.graphData = {}; causes an update,\n     * which in turn causes the graph to reload and flash.\n     */\n    Object.keys(updatedResponseData.graphData).forEach(graphDataKey => {\n      updatedResponseData.graphData[graphDataKey] = [];\n    });\n\n    // Populate expected API response values with undefined\n    const [tallySchema = {}, capacitySchema = {}] = reduxHelpers.setResponseSchemas([\n      rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n      rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES\n    ]);\n\n    // Apply \"display logic\" then return a custom value for Reporting graph entries\n    const customReportValue = (data, key, presetData) => ({\n      ...presetData,\n      hasData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_DATA],\n      hasCloudigradeData: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_DATA],\n      hasCloudigradeMismatch: data[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.HAS_CLOUDIGRADE_MISMATCH]\n    });\n\n    // Apply \"display logic\" then return a custom value for Capacity graph entries\n    const customCapacityValue = (data, key, { date, x, y }) => ({\n      date,\n      x,\n      y: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE] === true ? null : y,\n      hasInfinite: data[rhsmApiTypes.RHSM_API_RESPONSE_CAPACITY_DATA_TYPES.HAS_INFINITE]\n    });\n\n    // Generate reflected graph data for number, undefined, and null\n    reportData.forEach((value, index) => {\n      const date = moment.utc(value[rhsmApiTypes.RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES.DATE]).startOf('day').toDate();\n\n      const generateGraphData = ({ graphDataObj, keyPrefix = '', customValue = null }) => {\n        Object.keys(graphDataObj).forEach(graphDataObjKey => {\n          if (\n            typeof graphDataObj[graphDataObjKey] === 'number' ||\n            graphDataObj[graphDataObjKey] === undefined ||\n            graphDataObj[graphDataObjKey] === null\n          ) {\n            const casedGraphDataObjKey = _camelCase(`${keyPrefix} ${graphDataObjKey}`).trim();\n\n            if (!updatedResponseData.graphData[casedGraphDataObjKey]) {\n              updatedResponseData.graphData[casedGraphDataObjKey] = [];\n            }\n\n            let generatedY;\n\n            if (typeof graphDataObj[graphDataObjKey] === 'number') {\n              generatedY =\n                (Number.isInteger(graphDataObj[graphDataObjKey]) &&\n                  Number.parseInt(graphDataObj[graphDataObjKey], 10)) ||\n                Number.parseFloat(Number.parseFloat(graphDataObj[graphDataObjKey]).toFixed(2));\n            } else if (graphDataObj[graphDataObjKey] === undefined) {\n              generatedY = 0;\n            } else if (graphDataObj[graphDataObjKey] === null) {\n              generatedY = graphDataObj[graphDataObjKey];\n            }\n\n            const updatedItem =\n              (typeof customValue === 'function' &&\n                customValue(graphDataObj, graphDataObjKey, { date, x: index, y: generatedY })) ||\n              {};\n\n            updatedResponseData.graphData[casedGraphDataObjKey][index] = {\n              date,\n              x: index,\n              y: generatedY,\n              ...updatedItem\n            };\n          }\n        });\n      };\n\n      generateGraphData({ graphDataObj: { ...tallySchema, ...value }, customValue: customReportValue });\n      generateGraphData({\n        graphDataObj: { ...capacitySchema, ...capacityData[index] },\n        keyPrefix: 'threshold',\n        customValue: customCapacityValue\n      });\n    });\n\n    // Generate normalized properties\n    const [updatedReportMeta] = reduxHelpers.setNormalizedResponse({\n      schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n      data: reportMeta\n    });\n\n    const [meta = {}] = updatedReportMeta || [];\n\n    // Update response and cache\n    Object.assign(updatedResponseData.meta, meta);\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...selector(state, props, defaultProps)\n});\n\nconst graphCardSelectors = {\n  graphCard: selector,\n  makeGraphCard: makeSelector\n};\n\nexport { graphCardSelectors as default, graphCardSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport LruCache from 'lru-cache';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.hostsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventoryHostsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventoryHostsQuery: {\n        ...state.view?.inventoryHostsQuery?.[props.productId],\n        ...state.view?.inventoryHostsQuery?.[props.viewId]\n      }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Note: We use an in-memory cache to provide the user a pleasant UX experience. To\n * aid in that UX we need \"pending\" to fire in scenarios that are not loaded in-memory. Because\n * we load the cache first there are scenarios where the previous XHR call is still in state\n * when a subsequent fulfilled XHR call comes through. Without the _isEqual(query, metaQuery) check\n * the overlap of the prior fulfilled call interferes with the pending of the subsequent call.\n */\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, metaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.CLOUD_PROVIDER:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.HARDWARE:\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.MEASUREMENT:\n          return value?.toLowerCase() || null;\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES.LAST_SEEN:\n          return (value && new Date(value)) || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst inventoryListSelectors = {\n  inventoryList: selector,\n  makeInventoryList: makeSelector\n};\n\nexport { inventoryListSelectors as default, inventoryListSelectors, selector, makeSelector };\n","import { createSelector } from 'reselect';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.instancesInventory?.[props.productId]\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventoryHostsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventoryHostsQuery: {\n        ...state.view?.inventoryHostsQuery?.[props.productId],\n        ...state.view?.inventoryHostsQuery?.[props.viewId]\n      }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{query: object}}\n */\nconst selector = createSelector([statePropsFilter, queryFilter], (response, query = {}) => ({\n  ...response,\n  ...response?.data,\n  query\n}));\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst instancesListSelectors = {\n  instancesList: selector,\n  makeInstancesList: makeSelector\n};\n\nexport { instancesListSelectors as default, instancesListSelectors, selector, makeSelector };\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport LruCache from 'lru-cache';\nimport _isEqual from 'lodash/isEqual';\nimport { rhsmApiTypes } from '../../types/rhsmApiTypes';\nimport { reduxHelpers } from '../common/reduxHelpers';\nimport { apiQueries } from '../common';\nimport { selector as userSession } from './userSelectors';\n\n/**\n * ToDo: Consider consolidating inventory selectors, and/or create API specific selectors, i.e. RHSM, etc\n * Breaking out the inventory selectors is a temporary solution until the API is finalized. Aspects\n * of the caching and applying the API schemas is now consistent enough to allow for grouping/refinement.\n */\n\n/**\n * Create a custom \"are objects equal\" selector.\n *\n * @private\n * @type {Function}}\n */\nconst createDeepEqualSelector = createSelectorCreator(defaultMemoize, _isEqual);\n\n/**\n * Selector cache.\n *\n * @private\n * @type {object}\n */\nconst selectorCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_SELECTOR_CACHE, 10),\n  max: 10,\n  stale: true,\n  updateAgeOnGet: true\n});\n\n/**\n * Return a combined state, props object.\n *\n * @private\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst statePropsFilter = (state, props = {}) => ({\n  ...state.inventory?.subscriptionsInventory?.[props.productId],\n  ...{\n    viewId: props.viewId,\n    productId: props.productId\n  }\n});\n\n/**\n * Return a combined query object.\n *\n * @param {object} state\n * @param {object} props\n * @returns {object}\n */\nconst queryFilter = (state, props = {}) => {\n  const { inventorySubscriptionsQuery: query } = apiQueries.parseRhsmQuery(\n    {\n      ...props.query,\n      ...state.view?.query?.[props.productId],\n      ...state.view?.query?.[props.viewId]\n    },\n    {\n      inventorySubscriptionsQuery: {\n        ...state.view?.inventorySubscriptionsQuery?.[props.productId],\n        ...state.view?.inventorySubscriptionsQuery?.[props.viewId]\n      }\n    }\n  );\n\n  return query;\n};\n\n/**\n * Create selector, transform combined state, props into a consumable object.\n *\n * @type {{pending: boolean, fulfilled: boolean, listData: object, error: boolean, status: (*|number)}}\n */\nconst selector = createDeepEqualSelector([statePropsFilter, queryFilter], (response, query = {}) => {\n  const { viewId = null, productId = null, metaId, metaQuery = {}, ...responseData } = response || {};\n\n  const updatedResponseData = {\n    error: responseData.error || false,\n    fulfilled: false,\n    pending: responseData.pending || responseData.cancelled || false,\n    listData: [],\n    itemCount: 0,\n    query,\n    status: responseData.status\n  };\n\n  const cache =\n    (viewId && productId && selectorCache.get(`${viewId}_${productId}_${JSON.stringify(query)}`)) || undefined;\n\n  Object.assign(updatedResponseData, { ...cache });\n\n  if (responseData.fulfilled && productId === metaId && _isEqual(query, metaQuery)) {\n    const {\n      [rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_DATA]: listData = [],\n      [rhsmApiTypes.RHSM_API_RESPONSE_META]: listMeta = {}\n    } = responseData.data || {};\n\n    updatedResponseData.listData.length = 0;\n\n    // Apply \"display logic\" then return a custom value for entries\n    const customInventoryValue = ({ key, value }) => {\n      switch (key) {\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES.NEXT_EVENT_DATE:\n          return (value && new Date(value)) || null;\n        case rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES.UOM:\n          return value?.toLowerCase() || null;\n        default:\n          return value ?? null;\n      }\n    };\n\n    // Generate normalized properties\n    const [updatedListData, updatedListMeta] = reduxHelpers.setNormalizedResponse(\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n        data: listData,\n        customResponseValue: customInventoryValue\n      },\n      {\n        schema: rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES,\n        data: listMeta\n      }\n    );\n\n    const [meta = {}] = updatedListMeta || [];\n\n    // Update response and cache\n    updatedResponseData.itemCount = meta[rhsmApiTypes.RHSM_API_RESPONSE_META_TYPES.COUNT] ?? 0;\n    updatedResponseData.listData = updatedListData;\n    updatedResponseData.fulfilled = true;\n    selectorCache.set(`${viewId}_${productId}_${JSON.stringify(query)}`, { ...updatedResponseData });\n  }\n\n  return updatedResponseData;\n});\n\n/**\n * Expose selector instance. For scenarios where a selector is reused across component instances.\n *\n * @param {object} defaultProps\n * @returns {{pending: boolean, fulfilled: boolean, graphData: object, error: boolean, session: object,\n *     status: (*|number)}}\n */\nconst makeSelector = defaultProps => (state, props) => ({\n  ...userSession(state, props, defaultProps),\n  ...selector(state, props, defaultProps)\n});\n\nconst subscriptionsListSelectors = {\n  subscriptionsList: selector,\n  makeSubscriptionsList: makeSelector\n};\n\nexport { subscriptionsListSelectors as default, subscriptionsListSelectors, selector, makeSelector };\n","import appMessagesSelectors from './appMessagesSelectors';\nimport guestsListSelectors from './guestsListSelectors';\nimport graphCardSelectors from './graphCardSelectors';\nimport inventoryListSelectors from './inventoryListSelectors';\nimport instancesListSelectors from './instancesListSelectors';\nimport subscriptionsListSelectors from './subscriptionsListSelectors';\nimport userSelectors from './userSelectors';\n\nconst reduxSelectors = {\n  appMessages: appMessagesSelectors,\n  guestsList: guestsListSelectors,\n  graphCard: graphCardSelectors,\n  inventoryList: inventoryListSelectors,\n  instancesList: instancesListSelectors,\n  subscriptionsList: subscriptionsListSelectors,\n  user: userSelectors\n};\n\nexport { reduxSelectors as default, reduxSelectors };\n","import { platformApiTypes } from '../../types';\n\n/**\n * Modify actions' payload for privacy.\n *\n * @param {object} action\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeActionHeaders = ({ payload, ...action }) => {\n  if (payload) {\n    let updatedPayload = { ...payload, headers: {} };\n\n    if (Array.isArray(payload)) {\n      updatedPayload = payload.map(({ headers, ...obj }) => ({ ...obj, headers: {} }));\n    }\n\n    return { payload: updatedPayload, ...action };\n  }\n\n  return { ...action };\n};\n\n/**\n * Modify actions' payload data for privacy.\n *\n * @param {object} action\n * @param {string} action.type\n * @param {object} action.payload\n * @returns {object}\n */\nconst sanitizeData = ({ type, payload, ...action }) => {\n  const removeUserIdentity = obj => {\n    if (obj?.data?.user?.[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]) {\n      return {\n        ...obj,\n        data: {\n          ...obj.data,\n          user: {\n            ...obj.data.user,\n            [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY]: {\n              ...obj.data.user[platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY],\n              [platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER]: {}\n            }\n          }\n        }\n      };\n    }\n\n    return undefined;\n  };\n\n  const updatedPayload = removeUserIdentity(payload) || payload;\n  const updatedAction = removeUserIdentity(action) || action;\n\n  if (updatedPayload) {\n    return { type, payload: updatedPayload, ...updatedAction };\n  }\n\n  return { type, ...updatedAction };\n};\n\n/**\n * Return existing sessionStorage log.\n *\n * @param {string} id\n * @param {number} limit\n * @returns {Array}\n */\nconst getActions = (id, limit) => {\n  const { sessionStorage } = window;\n  const item = sessionStorage.getItem(id);\n  let parsedItems = (item && (JSON.parse(item) || {})?.actions) || [];\n\n  if (parsedItems?.length && limit > 0) {\n    parsedItems = parsedItems.slice(limit * -1);\n  }\n\n  return parsedItems;\n};\n\n/**\n * Store actions against an id in sessionStorage.\n *\n * @param {object} action\n * @param {object} config\n * @param {number} config.id\n * @param {number} config.limit\n */\nconst recordAction = (action, { id, limit, ...config }) => {\n  const { navigator, sessionStorage } = window;\n  const items = getActions(id, limit) || [];\n  const priorItem = items[items.length - 1];\n  const updatedAction = sanitizeData(sanitizeActionHeaders(action));\n  const actionObj = {\n    diff: 0,\n    timestamp: Date.now(),\n    action: updatedAction\n  };\n\n  if (priorItem && priorItem.timestamp) {\n    actionObj.diff = actionObj.timestamp - priorItem.timestamp;\n  }\n\n  items.push(actionObj);\n  sessionStorage.setItem(\n    id,\n    JSON.stringify({\n      browser: navigator.userAgent,\n      timestamp: new Date().toLocaleString(),\n      ...config,\n      actions: items\n    })\n  );\n};\n\n/**\n * Expose settings and record middleware.\n *\n * @param {object} config\n * @returns {Function}\n */\nconst actionRecordMiddleware =\n  (config = {}) =>\n  () =>\n  next =>\n  action => {\n    recordAction(action, {\n      id: 'actionRecordMiddleware/v1',\n      limit: 100,\n      ...config\n    });\n\n    return next(action);\n  };\n\nexport { actionRecordMiddleware as default, actionRecordMiddleware };\n","import { createLogger } from 'redux-logger';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport thunkMiddleware from 'redux-thunk';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport { multiActionMiddleware } from './multiActionMiddleware';\nimport { statusMiddleware } from './statusMiddleware';\nimport { actionRecordMiddleware } from './actionRecordMiddleware';\nimport { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Platform notifications settings.\n *\n * @private\n * @type {{errorDescriptionKey: string, autoDismiss: boolean, errorTitleKey: string, fulfilledSuffix: string,\n *     dispatchDefaultFailure: boolean, pendingSuffix: string, rejectedSuffix: string, dismissDelay: number}}\n */\nconst notificationsOptions = {\n  dispatchDefaultFailure: false, // automatic error notifications\n  pendingSuffix: reduxHelpers.PENDING_ACTION(), // pending state action suffix\n  fulfilledSuffix: reduxHelpers.FULFILLED_ACTION(), // fulfilled state action suffix\n  rejectedSuffix: reduxHelpers.REJECTED_ACTION(), // rejected state action suffix\n  autoDismiss: true, // autoDismiss pending and success notifications\n  dismissDelay: 3000, // autoDismiss delay in ms\n  errorTitleKey: 'title', // path to notification title in error response\n  errorDescriptionKey: 'detail' // path to notification description in error response\n};\n\n/**\n * Redux middleware.\n *\n * @type {Array}\n */\nconst reduxMiddleware = [\n  thunkMiddleware,\n  statusMiddleware(),\n  multiActionMiddleware,\n  promiseMiddleware,\n  actionRecordMiddleware({\n    id: process.env.REACT_APP_UI_LOGGER_ID,\n    app: { version: process.env.REACT_APP_UI_VERSION }\n  }),\n  notificationsMiddleware(notificationsOptions)\n];\n\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_DEBUG_MIDDLEWARE === 'true') {\n  reduxMiddleware.push(createLogger());\n}\n\nexport {\n  reduxMiddleware as default,\n  reduxMiddleware,\n  createLogger,\n  notificationsMiddleware,\n  promiseMiddleware,\n  statusMiddleware,\n  thunkMiddleware\n};\n","import { reduxHelpers } from '../common/reduxHelpers';\n\n/**\n * Apply a status type based on actions, such as those generated from redux-promise-middleware.\n *\n * @param {object} config\n * @property {string} statusSuffix\n * @property {string} rangeSuffix\n * @property {string} rangeFiller\n * @property {string} statusDelimiter\n * @property {boolean} statusRange\n * @property {boolean} dispatchStatus\n * @returns {Function}\n */\nconst statusMiddleware = (config = {}) => {\n  const statusSuffix = config.statusSuffix || 'STATUS';\n  const rangeSuffix = config.rangeSuffix || 'STATUS_RANGE';\n  const rangeFiller = config.rangeFiller || 'XX';\n  const statusDelimiter = config.statusDelimiter || '_';\n  const dispatchRange = config.statusRange || true;\n  const dispatchStatus = config.dispatchStatus || false;\n\n  return store => {\n    const { dispatch } = store;\n\n    return next => action => {\n      if (action.payload) {\n        const httpStatus = reduxHelpers.getStatusFromResults({ ...action });\n\n        if (httpStatus > 99) {\n          const message = reduxHelpers.getMessageFromResults({ ...action });\n          const data = reduxHelpers.getDataFromResults({ ...action });\n          const payloadConfig = { ...(action.payload.config || {}) };\n          const range = `${Math.floor(httpStatus / 100)}${rangeFiller}`;\n\n          if (dispatchRange) {\n            dispatch({\n              type: `${range}${statusDelimiter}${rangeSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n\n          if (dispatchStatus) {\n            dispatch({\n              type: `${httpStatus}${statusDelimiter}${statusSuffix}`,\n              config: payloadConfig,\n              data,\n              message,\n              range,\n              status: httpStatus\n            });\n          }\n        }\n      }\n\n      return next(action);\n    };\n  };\n};\n\nexport { statusMiddleware as default, statusMiddleware };\n","/**\n * Allow passing an array of actions for batch dispatch.\n *\n * @param {object} store\n * @returns {Function}\n */\nconst multiActionMiddleware = store => next => action =>\n  (Array.isArray(action) && action.map(a => store.dispatch(a))) || next(action);\n\nexport { multiActionMiddleware as default, multiActionMiddleware };\n","import { createStore, applyMiddleware } from 'redux';\nimport { reduxMiddleware } from './middleware';\nimport { reduxReducers } from './reducers';\n\n/**\n * Create a Redux store.\n */\nconst store = createStore(reduxReducers, applyMiddleware(...reduxMiddleware));\n\nexport { store as default, store };\n","const STATUS_4XX = '4XX';\nconst STATUS_5XX = '5XX';\n\n/**\n * Application action, reducer types.\n *\n * @type {{STATUS_4XX: string, STATUS_5XX: string}}\n */\nconst appTypes = {\n  STATUS_4XX,\n  STATUS_5XX\n};\n\nexport { appTypes as default, appTypes, STATUS_4XX, STATUS_5XX };\n","const SET_GRAPH_LEGEND = 'SET_GRAPH_LEGEND';\n\n/**\n * Graph action, reducer types.\n *\n * @type {{SET_GRAPH_LEGEND: string}}\n */\nconst graphTypes = {\n  SET_GRAPH_LEGEND\n};\n\nexport { graphTypes as default, graphTypes, SET_GRAPH_LEGEND };\n","const SET_INVENTORY_TAB = 'SET_INVENTORY_TAB';\n\n/**\n * Inventory action, reducer types.\n *\n * @type {{SET_INVENTORY_TAB: string}}\n */\nconst inventoryTypes = {\n  SET_INVENTORY_TAB\n};\n\nexport { inventoryTypes as default, inventoryTypes, SET_INVENTORY_TAB };\n","import {\n  ADD_NOTIFICATION,\n  REMOVE_NOTIFICATION,\n  CLEAR_NOTIFICATIONS\n} from '@redhat-cloud-services/frontend-components-notifications';\n\nconst PLATFORM_ADD_NOTIFICATION = ADD_NOTIFICATION;\nconst PLATFORM_REMOVE_NOTIFICATION = REMOVE_NOTIFICATION;\nconst PLATFORM_CLEAR_NOTIFICATIONS = CLEAR_NOTIFICATIONS;\nconst PLATFORM_GLOBAL_FILTER_HIDE = 'PLATFORM_GLOBAL_FILTER_HIDE';\nconst PLATFORM_INIT = 'PLATFORM_INIT';\nconst PLATFORM_APP_NAME = 'PLATFORM_APP_NAME';\nconst PLATFORM_ON_NAV = 'PLATFORM_ON_NAV';\nconst PLATFORM_SET_NAV = 'PLATFORM_SET_NAV';\n\n/**\n * Platform action, reducer types.\n *\n * @type {{PLATFORM_APP_NAME: string, PLATFORM_GLOBAL_FILTER_HIDE: string, PLATFORM_INIT: string,\n *     PLATFORM_SET_NAV: string, PLATFORM_CLEAR_NOTIFICATIONS: string, PLATFORM_ADD_NOTIFICATION: string,\n *     PLATFORM_REMOVE_NOTIFICATION: string, PLATFORM_ON_NAV: string}}\n */\nconst platformTypes = {\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n\nexport {\n  platformTypes as default,\n  platformTypes,\n  PLATFORM_ADD_NOTIFICATION,\n  PLATFORM_REMOVE_NOTIFICATION,\n  PLATFORM_CLEAR_NOTIFICATIONS,\n  PLATFORM_GLOBAL_FILTER_HIDE,\n  PLATFORM_INIT,\n  PLATFORM_APP_NAME,\n  PLATFORM_ON_NAV,\n  PLATFORM_SET_NAV\n};\n","import { RHSM_API_QUERY_TYPES } from '../../types/rhsmApiTypes';\n\nconst SET_QUERY_CLEAR = 'SET_QUERY_CLEAR';\nconst SET_QUERY_CLEAR_INVENTORY_LIST = 'SET_QUERY_CLEAR_INVENTORY_LIST';\nconst SET_QUERY_RESET_INVENTORY_LIST = 'SET_QUERY_RESET_INVENTORY_LIST';\n\nconst SET_QUERY_RHSM_TYPES = {\n  [RHSM_API_QUERY_TYPES.END_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.END_DATE}`,\n  [RHSM_API_QUERY_TYPES.GRANULARITY]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.GRANULARITY}`,\n  [RHSM_API_QUERY_TYPES.SLA]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.SLA}`,\n  [RHSM_API_QUERY_TYPES.START_DATE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.START_DATE}`,\n  [RHSM_API_QUERY_TYPES.UOM]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.UOM}`,\n  [RHSM_API_QUERY_TYPES.USAGE]: `SET_QUERY_RHSM_${RHSM_API_QUERY_TYPES.USAGE}`\n};\n\nconst SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.DISPLAY_NAME]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.DISPLAY_NAME}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_HOSTS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\nconst SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES = {\n  [RHSM_API_QUERY_TYPES.DIRECTION]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.DIRECTION}`,\n  [RHSM_API_QUERY_TYPES.SORT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.SORT}`,\n  [RHSM_API_QUERY_TYPES.LIMIT]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.LIMIT}`,\n  [RHSM_API_QUERY_TYPES.OFFSET]: `SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_${RHSM_API_QUERY_TYPES.OFFSET}`\n};\n\n/**\n * Query/filter reducer types.\n *\n * @type {{SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES: object, SET_QUERY_RHSM_TYPES: object,\n *     SET_QUERY_CLEAR: string, SET_QUERY_CLEAR_INVENTORY_LIST: string,\n *     SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES: object, SET_QUERY_RESET_INVENTORY_LIST: string}}\n */\nconst queryTypes = {\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n\nexport {\n  queryTypes as default,\n  queryTypes,\n  SET_QUERY_CLEAR,\n  SET_QUERY_CLEAR_INVENTORY_LIST,\n  SET_QUERY_RESET_INVENTORY_LIST,\n  SET_QUERY_RHSM_TYPES,\n  SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES,\n  SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES\n};\n","const DELETE_USER_OPTIN = 'DELETE_USER_OPTIN';\nconst GET_USER_OPTIN = 'GET_USER_OPTIN';\nconst UPDATE_USER_OPTIN = 'UPDATE_USER_OPTIN';\nconst USER_AUTH = 'USER_AUTH';\nconst USER_LOCALE = 'USER_LOCALE';\nconst USER_LOGOUT = 'USER_LOGOUT';\n\n/**\n * User action, reducer types.\n *\n * @type {{USER_LOGOUT: string, USER_AUTH: string, USER_LOCALE: string}}\n */\nconst userTypes = { DELETE_USER_OPTIN, GET_USER_OPTIN, UPDATE_USER_OPTIN, USER_AUTH, USER_LOCALE, USER_LOGOUT };\n\nexport {\n  userTypes as default,\n  userTypes,\n  DELETE_USER_OPTIN,\n  GET_USER_OPTIN,\n  UPDATE_USER_OPTIN,\n  USER_AUTH,\n  USER_LOCALE,\n  USER_LOGOUT\n};\n","import { appTypes } from './appTypes';\nimport { graphTypes } from './graphTypes';\nimport { inventoryTypes } from './inventoryTypes';\nimport { platformTypes } from './platformTypes';\nimport { queryTypes } from './queryTypes';\nimport { rhsmTypes } from './rhsmTypes';\nimport { toolbarTypes } from './toolbarTypes';\nimport { userTypes } from './userTypes';\n\nconst reduxTypes = {\n  app: appTypes,\n  graph: graphTypes,\n  inventory: inventoryTypes,\n  platform: platformTypes,\n  query: queryTypes,\n  rhsm: rhsmTypes,\n  toolbar: toolbarTypes,\n  user: userTypes\n};\n\nexport {\n  reduxTypes as default,\n  reduxTypes,\n  appTypes,\n  graphTypes,\n  inventoryTypes,\n  platformTypes,\n  queryTypes,\n  rhsmTypes,\n  toolbarTypes,\n  userTypes\n};\n","const SET_ACTIVE_FILTERS = 'SET_ACTIVE_FILTERS';\nconst SET_FILTER_TYPE = 'SET_FILTER_TYPE';\n\n/**\n * Filter, toolbar reducer types.\n *\n * @type {{SET_FILTER_TYPE: string, SET_ACTIVE_FILTERS: string}}\n */\nconst toolbarTypes = {\n  SET_ACTIVE_FILTERS,\n  SET_FILTER_TYPE\n};\n\nexport { toolbarTypes as default, toolbarTypes, SET_ACTIVE_FILTERS, SET_FILTER_TYPE };\n","const GET_GRAPH_REPORT_CAPACITY_RHSM = 'GET_GRAPH_REPORT_CAPACITY_RHSM';\nconst GET_GRAPH_TALLY_RHSM = 'GET_GRAPH_TALLY_RHSM';\nconst GET_HOSTS_INVENTORY_RHSM = 'GET_HOSTS_INVENTORY_RHSM';\nconst GET_HOSTS_INVENTORY_GUESTS_RHSM = 'GET_HOSTS_INVENTORY_GUESTS_RHSM';\nconst GET_INSTANCES_INVENTORY_RHSM = 'GET_INSTANCES_INVENTORY_RHSM';\nconst GET_MESSAGE_REPORTS_RHSM = 'GET_MESSAGE_REPORTS_RHSM';\nconst GET_SUBSCRIPTIONS_INVENTORY_RHSM = 'GET_SUBSCRIPTIONS_INVENTORY_RHSM';\n\n/**\n * RHSM API action, reducer types.\n *\n * @type {{GET_GRAPH_REPORT_CAPACITY_RHSM: string, GET_MESSAGE_REPORTS_RHSM: string, GET_HOSTS_INVENTORY_GUESTS_RHSM: string,\n *     GET_SUBSCRIPTIONS_INVENTORY_RHSM: string, GET_HOSTS_INVENTORY_RHSM: string, GET_INSTANCES_INVENTORY_RHSM: string,\n *     GET_GRAPH_TALLY_RHSM: string}}\n */\nconst rhsmTypes = {\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n\nexport {\n  rhsmTypes as default,\n  rhsmTypes,\n  GET_GRAPH_REPORT_CAPACITY_RHSM,\n  GET_GRAPH_TALLY_RHSM,\n  GET_HOSTS_INVENTORY_RHSM,\n  GET_HOSTS_INVENTORY_GUESTS_RHSM,\n  GET_INSTANCES_INVENTORY_RHSM,\n  GET_MESSAGE_REPORTS_RHSM,\n  GET_SUBSCRIPTIONS_INVENTORY_RHSM\n};\n","import _camelCase from 'lodash/camelCase';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport { helpers } from '../../common';\n\n/**\n * Return objects with the keys camelCased. Normally applied to an array of objects.\n *\n * @param {object|Array|*} obj\n * @returns {object|Array|*}\n */\nconst camelCase = obj => {\n  if (Array.isArray(obj)) {\n    return obj.map(camelCase);\n  }\n\n  if (_isPlainObject(obj)) {\n    const updatedObj = {};\n\n    Object.entries(obj).forEach(([key, val]) => {\n      updatedObj[_camelCase(key)] = camelCase(val);\n    });\n\n    return updatedObj;\n  }\n\n  return obj;\n};\n\n/**\n * Apply data to a callback, pass original data on error.\n *\n * @param {object} data\n * @param {Function} callback\n * @returns {{data: *, error}}\n */\nconst passDataToCallback = (data, callback) => {\n  let error;\n  let updatedData = data;\n\n  try {\n    updatedData = callback(data);\n  } catch (e) {\n    error = e;\n  }\n\n  return { data: updatedData, error };\n};\n\n/**\n * A callback for schema validation, and after-the-fact casing adjustments.\n *\n * @param {object} options\n * @param {string} options.casing\n * @param {boolean} options.convert\n * @param {string} options.id\n * @param {object|Array} options.response\n * @param {*} options.schema\n * @returns {*|{}}\n */\nconst schemaResponse = ({ casing, convert = true, id = null, response, schema } = {}) => {\n  const { value, error = { details: [] } } = schema?.validate(response, { convert }) || {};\n\n  if (error.details.length && !helpers.TEST_MODE) {\n    console.error(\n      new Error(\n        `Passing original API response. Schema validation failed for ${id || '...'}: ${error.details\n          .map(({ context = {}, message, type }) => `${message}:${type}, ${JSON.stringify(context)}`)\n          .join(', ')}`\n      )\n    );\n  }\n\n  switch (casing) {\n    case 'camel':\n      return camelCase(value);\n    default:\n      return value;\n  }\n};\n\nconst serviceHelpers = {\n  camelCase,\n  passDataToCallback,\n  schemaResponse\n};\n\nexport { serviceHelpers as default, serviceHelpers, camelCase, passDataToCallback, schemaResponse };\n","import axios, { CancelToken } from 'axios';\nimport LruCache from 'lru-cache';\nimport { platformServices } from './platformServices';\nimport { serviceHelpers } from './common/helpers';\n\n/**\n * Apply consistent service configuration.\n *\n * @param {object} passedConfig\n * @returns {object}\n */\nconst serviceConfig = (passedConfig = {}) => ({\n  headers: {},\n  timeout: process.env.REACT_APP_AJAX_TIMEOUT,\n  ...passedConfig\n});\n\n/**\n * Cache Axios service call cancel tokens.\n *\n * @private\n * @type {object}\n */\nconst cancelTokens = {};\n\n/**\n * Cache Axios service call responses.\n *\n * @type {object}\n */\nconst responseCache = new LruCache({\n  maxAge: Number.parseInt(process.env.REACT_APP_AJAX_CACHE, 10),\n  max: 100,\n  updateAgeOnGet: true\n});\n\n/**\n * Set Axios configuration, which includes response schema validation and caching.\n * Call platform \"getUser\" auth method, and apply service config. Service configuration\n * includes the ability to cancel all and specific calls, cache and normalize a response\n * based on both a provided schema and a successful API response. The cache will refresh\n * its timeout on continuous calls. To reset it a user will either need to refresh the\n * page or wait the \"maxAge\".\n *\n * @param {object} config\n * @param {string} config.url\n * @param {object} config.params\n * @param {boolean} config.cache\n * @param {boolean} config.cancel\n * @param {string} config.cancelId\n * @param {Array} config.schema\n * @param {Array} config.transform\n * @returns {Promise<*>}\n */\nconst serviceCall = async config => {\n  await platformServices.getUser();\n\n  const updatedConfig = { ...config, cache: undefined, cacheResponse: config.cache };\n  const responseTransformers = [];\n  const cancelledMessage = 'cancelled request';\n  const axiosInstance = axios.create();\n  const sortedParams =\n    (updatedConfig.params && Object.entries(updatedConfig.params).sort(([a], [b]) => a.localeCompare(b))) || [];\n  const cacheId = `${updatedConfig.url}-${JSON.stringify(sortedParams)}`;\n\n  if (updatedConfig.cancel === true) {\n    const cancelTokensId = `${updatedConfig.cancelId || ''}-${updatedConfig.url}`;\n\n    if (cancelTokens[cancelTokensId]) {\n      cancelTokens[cancelTokensId].cancel(cancelledMessage);\n    }\n\n    cancelTokens[cancelTokensId] = CancelToken.source();\n    updatedConfig.cancelToken = cancelTokens[cancelTokensId].token;\n\n    delete updatedConfig.cancel;\n  }\n\n  if (updatedConfig.cacheResponse === true) {\n    const cachedResponse = responseCache.get(cacheId);\n\n    if (cachedResponse) {\n      updatedConfig.adapter = adapterConfig =>\n        Promise.resolve({\n          ...cachedResponse,\n          status: 304,\n          statusText: 'Not Modified',\n          config: adapterConfig\n        });\n\n      return axiosInstance(serviceConfig(updatedConfig));\n    }\n  }\n\n  if (updatedConfig.schema) {\n    responseTransformers.push(updatedConfig.schema);\n  }\n\n  if (updatedConfig.transform) {\n    responseTransformers.push(updatedConfig.transform);\n  }\n\n  responseTransformers.forEach(([successTransform, errorTransform]) => {\n    const transformers = [undefined, response => Promise.reject(response)];\n\n    if (successTransform) {\n      transformers[0] = response => {\n        const updatedResponse = { ...response };\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          updatedResponse.data,\n          successTransform\n        );\n\n        if (!normalizeError) {\n          updatedResponse.data = data;\n        }\n\n        return updatedResponse;\n      };\n    }\n\n    if (errorTransform) {\n      transformers[1] = response => {\n        const updatedResponse = { ...response };\n\n        if (updatedResponse?.message === cancelledMessage) {\n          return Promise.reject(updatedResponse);\n        }\n\n        const { data, error: normalizeError } = serviceHelpers.passDataToCallback(\n          updatedResponse?.response?.data,\n          errorTransform\n        );\n\n        if (!normalizeError) {\n          updatedResponse.response = { ...updatedResponse.response, data };\n        }\n\n        return Promise.reject(updatedResponse);\n      };\n    }\n\n    axiosInstance.interceptors.response.use(...transformers);\n  });\n\n  if (updatedConfig.cacheResponse === true) {\n    axiosInstance.interceptors.response.use(\n      response => {\n        const updatedResponse = { ...response };\n        responseCache.set(cacheId, updatedResponse);\n        return updatedResponse;\n      },\n      response => Promise.reject(response)\n    );\n  }\n\n  return axiosInstance(serviceConfig(updatedConfig));\n};\n\nconst config = { serviceCall, serviceConfig };\n\nexport { config as default, config, serviceCall, serviceConfig };\n","import _set from 'lodash/set';\nimport { helpers } from '../common';\nimport {\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES as USER_PERMISSION_TYPES\n} from '../types/platformApiTypes';\n\n/**\n * Basic user authentication.\n *\n * @returns {Promise<void>}\n */\nconst getUser = async () => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE &&\n        _set(\n          {},\n          [\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES.USER,\n            platformApiTypes.PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES.ORG_ADMIN\n          ],\n          process.env.REACT_APP_DEBUG_ORG_ADMIN === 'true'\n        )) ||\n      (await insights.chrome.auth.getUser())\n    );\n  } catch (e) {\n    throw new Error(`{ getUser } = insights.chrome.auth, ${e.message}`);\n  }\n};\n\n/**\n * FixMe: revert this back towards async/await\n * Removed because there appears to be some quirky behavior where permissions will not come through\n * unless the function, and/or await are specifically returned, i.e. \"return await insights.chrome...\".\n */\n/**\n * Basic user permissions.\n *\n * @param {string} appName\n * @returns {Promise<void>}\n */\nconst getUserPermissions = appName => {\n  const { insights } = window;\n  try {\n    return (\n      (helpers.DEV_MODE && [\n        {\n          [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_ONE\n        },\n        {\n          [USER_PERMISSION_TYPES.PERMISSION]: process.env.REACT_APP_DEBUG_PERMISSION_APP_TWO\n        }\n      ]) ||\n      insights.chrome.getUserPermissions(appName)\n    );\n  } catch (e) {\n    throw new Error(`{ getUserPermissions } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Disables the Platform's global filter display.\n *\n * @param {boolean} isHidden\n * @returns {Promise<*>}\n */\nconst hideGlobalFilter = async (isHidden = true) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.hideGlobalFilter(isHidden);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Help initialize global platform methods.\n *\n * @returns {Promise<void>}\n */\nconst initializeChrome = async () => {\n  const { insights } = window;\n  try {\n    await insights.chrome.init();\n  } catch (e) {\n    throw new Error(`{ init } = insights.chrome, ${e.message}`);\n  }\n};\n\n/**\n * Apply on \"app_navigation\" event. Return an un-listener.\n *\n * @param {Function} callback\n * @returns {Function}\n */\nconst onNavigation = callback => {\n  const { insights } = window;\n  try {\n    return insights.chrome.on('APP_NAVIGATION', callback);\n  } catch (e) {\n    throw new Error(`{ on } = insights.chrome, ${e.message}`);\n  }\n};\n\n// FixMe: Revert catch to throwing an error. Relaxed for development\n/**\n * Set application ID.\n *\n * @param {string} name\n * @returns {Promise<void>}\n */\nconst setAppName = async (name = null) => {\n  const { insights } = window;\n  try {\n    await insights.chrome.identifyApp(name);\n  } catch (e) {\n    const error = `{ identifyApp } = insights.chrome, ${e.message}`;\n    await Promise.reject(error);\n  }\n};\n\n/**\n * Set app routes via the platform left-nav navigation.\n *\n * @param {string} id The navigation ID associated with internal route config, and external platform nav config\n * @param {object} options\n * @param {string} options.appName\n * @param {boolean} options.secondaryNav\n * @returns {Promise<object>}\n */\nconst setAppNav = async (id, { appName = helpers.UI_NAME, secondaryNav = true } = {}) => {\n  const { insights } = window;\n  try {\n    return await insights.chrome.appNavClick({ id, secondaryNav, parentId: appName });\n  } catch (e) {\n    throw new Error(`{ appNavClick } = insights.chrome, ${e.message}`);\n  }\n};\n\nconst platformServices = {\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n\nexport {\n  platformServices as default,\n  platformServices,\n  getUser,\n  getUserPermissions,\n  hideGlobalFilter,\n  initializeChrome,\n  onNavigation,\n  setAppName,\n  setAppNav\n};\n","/**\n * ToDo: migrate to using rhsmConstants only!\n * Exporting rhsmConstants through rhsmApiTypes is currently considered a stop-gap during migration to the\n * schema validator.\n */\n/**\n * RHSM path IDs for products.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string,\n *     RHOSAK: string, RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string,\n *     OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string}}\n */\nconst RHSM_API_PATH_PRODUCT_TYPES = {\n  RHEL: 'RHEL',\n  RHEL_COMPUTE_NODE: 'RHEL Compute Node',\n  RHEL_DESKTOP: 'RHEL Desktop',\n  RHEL_SERVER: 'RHEL Server',\n  RHEL_WORKSTATION: 'RHEL Workstation',\n  RHEL_ARM: 'RHEL for ARM',\n  RHEL_IBM_POWER: 'RHEL for IBM Power',\n  RHEL_IBM_Z: 'RHEL for IBM z',\n  RHEL_X86: 'RHEL for x86',\n  RHOSAK: 'rhosak',\n  OPENSHIFT: 'OpenShift Container Platform',\n  OPENSHIFT_METRICS: 'OpenShift-metrics',\n  OPENSHIFT_DEDICATED_METRICS: 'OpenShift-dedicated-metrics',\n  SATELLITE: 'Satellite',\n  SATELLITE_CAPSULE: 'Satellite Capsule',\n  SATELLITE_SERVER: 'Satellite Server'\n};\n\n/**\n * RHSM path IDs for metrics.\n *\n * @type {{CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string, INSTANCE_HOURS: string,\n *     TRANSFER_GIBIBYTES: string, CORE_SECONDS: string}}\n */\nconst RHSM_API_PATH_METRIC_TYPES = {\n  CORES: 'Cores',\n  SOCKETS: 'Sockets',\n  CORE_SECONDS: 'Core-seconds',\n  INSTANCE_HOURS: 'Instance-hours',\n  STORAGE_GIBIBYTES: 'Storage-gibibytes',\n  TRANSFER_GIBIBYTES: 'Transfer-gibibytes'\n};\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_DATA = 'data';\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response general meta types.\n *\n * @type {{PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  PRODUCT: 'product'\n};\n\n/**\n * RHSM response Instance DATA types.\n *\n * @type {{MEASUREMENTS: string, SUBSCRIPTION_MANAGER_ID: string, INVENTORY_ID: string, DISPLAY_NAME: string,\n *     LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_DATA_TYPES = {\n  DISPLAY_NAME: 'display_name',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENTS: 'measurements',\n  SUBSCRIPTION_MANAGER_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response Instances META types.\n *\n * @type {{MEASUREMENTS: string, PRODUCT: string, COUNT: string}}\n */\nconst RHSM_API_RESPONSE_INSTANCES_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  MEASUREMENTS: 'measurements'\n};\n\n/**\n * RHSM response Tally DATA types.\n *\n * @type {{DATE: string, HAS_DATA: string, VALUE: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_DATA_TYPES = {\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM response Tally META types.\n *\n * @type {{TOTAL_MONTHLY: string, DATE: string, PRODUCT: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string, METRIC_ID: string, COUNT: string, VALUE: string}}\n */\nconst RHSM_API_RESPONSE_TALLY_META_TYPES = {\n  ...RHSM_API_RESPONSE_META_TYPES,\n  DATE: 'date',\n  VALUE: 'value',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data',\n  METRIC_ID: 'metric_id',\n  TOTAL_MONTHLY: 'total_monthly'\n};\n\n/**\n * RHSM response error codes.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_CODE_TYPES = {\n  GENERIC: 'SUBSCRIPTIONS1003',\n  OPTIN: 'SUBSCRIPTIONS1004'\n};\n\n/**\n * RHSM response, query parameters for GRANULARITY.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_RESPONSE_GRANULARITY_TYPES = {\n  DAILY: 'Daily',\n  WEEKLY: 'Weekly',\n  MONTHLY: 'Monthly',\n  QUARTERLY: 'Quarterly'\n};\n\n/**\n * RHSM response, query parameters for SLA.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_RESPONSE_SLA_TYPES = {\n  PREMIUM: 'Premium',\n  STANDARD: 'Standard',\n  SELF: 'Self-Support',\n  NONE: ''\n};\n\n/**\n * RHSM response, query parameters for UOM.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_RESPONSE_UOM_TYPES = {\n  CORES: 'cores',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM response, query parameters for USAGE.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_RESPONSE_USAGE_TYPES = {\n  PRODUCTION: 'Production',\n  DEVELOPMENT: 'Development/Test',\n  DISASTER: 'Disaster Recovery',\n  UNSPECIFIED: ''\n};\n\nconst RHSM_API_QUERY_GRANULARITY_TYPES = RHSM_API_RESPONSE_GRANULARITY_TYPES;\n\n/**\n * ToDo: Clean up sort params once hosts is fully deprecated\n * These sort params are focused on the instances api NOT hosts. Since there\n * are minor differences, hosts sort params are maintained in /types/rhsmApiTypes.js as\n * we migrate towards hosts deprecation. Subscriptions sorts\n */\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, MEASUREMENT: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_TYPES = {\n  ...RHSM_API_PATH_METRIC_TYPES,\n  LAST_SEEN: 'last_seen',\n  NAME: 'display_name'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES = {\n  ASCENDING: 'asc',\n  DESCENDING: 'desc'\n};\n\nconst RHSM_API_QUERY_SLA_TYPES = RHSM_API_RESPONSE_SLA_TYPES;\n\nconst RHSM_API_QUERY_UOM_TYPES = RHSM_API_RESPONSE_UOM_TYPES;\n\nconst RHSM_API_QUERY_USAGE_TYPES = RHSM_API_RESPONSE_USAGE_TYPES;\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, END_DATE: string, OFFSET: string,\n *     SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  DIRECTION: 'dir',\n  DISPLAY_NAME: 'display_name_contains',\n  END_DATE: 'ending',\n  LIMIT: 'limit',\n  OFFSET: 'offset',\n  SLA: 'sla',\n  SORT: 'sort',\n  START_DATE: 'beginning',\n  UOM: 'uom',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM query parameter options for TALLY, CAPACITY endpoints.\n *\n * @type {{GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string}}\n */\nconst RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES = {\n  END_DATE: 'ending',\n  GRANULARITY: 'granularity',\n  SLA: 'sla',\n  START_DATE: 'beginning',\n  USAGE: 'usage'\n};\n\n/**\n * Aggregate all query set types.\n *\n * @type {{UOM: string, GRANULARITY: string, USAGE: string, DIRECTION: string, SORT: string, END_DATE: string,\n *     OFFSET: string, SLA: string, LIMIT: string, START_DATE: string, DISPLAY_NAME: string}}\n */\nconst RHSM_API_QUERY_SET_TYPES = {\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES\n};\n\n/**\n * RHSM constants.\n *\n * @type {{RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string,\n *     START_DATE: string}, RHSM_API_RESPONSE_DATA: string, RHSM_API_PATH_PRODUCT_TYPES: {RHEL_ARM: string,\n *     OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string, RHOSAK: string, RHEL_COMPUTE_NODE: string,\n *     RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string,\n *     RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string,\n *     RHEL_IBM_POWER: string}, RHSM_API_PATH_METRIC_TYPES: {CORES: string, STORAGE_GIBIBYTES: string, SOCKETS: string,\n *     INSTANCE_HOURS: string, TRANSFER_GIBIBYTES: string, CORE_SECONDS: string},\n *     RHSM_API_RESPONSE_TALLY_DATA_TYPES: {DATE: string, HAS_DATA: string, VALUE: string},\n *     RHSM_API_RESPONSE_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_RESPONSE_ERROR_CODE_TYPES: {GENERIC: string, OPTIN: string}, RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string,\n *     SELF: string, NONE: string, STANDARD: string}, RHSM_API_RESPONSE_TALLY_META_TYPES: {TOTAL_MONTHLY: string,\n *     DATE: string, HAS_CLOUDIGRADE_DATA: string, PRODUCT: string, HAS_CLOUDIGRADE_MISMATCH: string, HAS_DATA: string,\n *     METRIC_ID: string, COUNT: string, VALUE: string}, RHSM_API_QUERY_UOM_TYPES: {CORES: string, SOCKETS: string},\n *     RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *     RHSM_API_RESPONSE_META: string, RHSM_API_RESPONSE_UOM_TYPES: {CORES: string, SOCKETS: string},\n *     RHSM_API_RESPONSE_GRANULARITY_TYPES: {WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string},\n *     RHSM_API_QUERY_SET_TYPES: {GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string},\n *     RHSM_API_RESPONSE_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}}\n */\nconst rhsmConstants = {\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_META_TYPES,\n  RHSM_API_RESPONSE_ERROR_CODE_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n};\n\nexport {\n  rhsmConstants as default,\n  rhsmConstants,\n  RHSM_API_PATH_PRODUCT_TYPES,\n  RHSM_API_PATH_METRIC_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_META_TYPES,\n  RHSM_API_RESPONSE_ERROR_CODE_TYPES,\n  RHSM_API_RESPONSE_GRANULARITY_TYPES,\n  RHSM_API_RESPONSE_SLA_TYPES,\n  RHSM_API_RESPONSE_UOM_TYPES,\n  RHSM_API_RESPONSE_USAGE_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_TYPES,\n  RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_TYPES\n};\n","import JoiBase from 'joi';\nimport JoiDate from '@joi/date';\nimport { schemaResponse } from '../common/helpers';\nimport { rhsmConstants } from './rhsmConstants';\n\nconst Joi = JoiBase.extend(JoiDate);\n\n/**\n * Error response item.\n *\n * @type {*} Joi schema\n */\nconst errorItem = Joi.object({\n  code: Joi.string().default(null),\n  detail: Joi.string().default(null)\n}).unknown(true);\n\n/**\n * Error response.\n *\n * @type {*} Joi schema\n */\nconst errorResponseSchema = Joi.object()\n  .keys({\n    errors: Joi.array().items(errorItem).default([])\n  })\n  .unknown(true);\n\nconst linksSchema = Joi.object();\n\n/**\n * RHSM base response meta field.\n *\n * @type {*} Joi schema\n */\nconst metaResponseSchema = Joi.object()\n  .keys({\n    count: Joi.number().integer().default(0),\n    product: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_PRODUCT_TYPES))\n  })\n  .unknown(true);\n\n/**\n * Instances response meta field.\n *\n * @type {*} Joi schema\n */\nconst instancesMetaSchema = metaResponseSchema\n  .keys({\n    measurements: Joi.array()\n      .items(Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)))\n      .default([])\n  })\n  .unknown(true);\n\n/**\n * Instances response item.\n *\n * @type {*} Joi schema\n */\nconst instancesItem = Joi.object({\n  inventory_id: Joi.string().optional().allow(null),\n  display_name: Joi.string().optional().allow(null),\n  measurements: Joi.array().default([]),\n  subscription_manager_id: Joi.string().optional().allow(null),\n  last_seen: Joi.date().utc().allow(null)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Instances response.\n *\n * @type {*} Joi schema\n */\nconst instancesResponseSchema = Joi.object().keys({\n  data: Joi.array().items(instancesItem).default([]),\n  links: linksSchema.default({}),\n  meta: instancesMetaSchema.default({})\n});\n\n/**\n * Tally response item.\n *\n * @type {*} Joi schema\n */\nconst tallyItem = Joi.object({\n  date: Joi.date().utc().allow(null),\n  has_data: Joi.boolean().optional().allow(null),\n  value: Joi.number().allow(null).default(0)\n})\n  .unknown(true)\n  .default();\n\n/**\n * Tally response meta field.\n *\n * @type {*} Joi schema\n */\nconst tallyMetaSchema = metaResponseSchema\n  .keys({\n    has_cloudigrade_data: Joi.boolean().optional().allow(null),\n    has_cloudigrade_mismatch: Joi.boolean().optional().allow(null),\n    metric_id: Joi.string().valid(...Object.values(rhsmConstants.RHSM_API_PATH_METRIC_TYPES)),\n    total_monthly: tallyItem\n  })\n  .unknown(true);\n\n/**\n * Tally response.\n *\n * @type {*} Joi schema\n */\nconst tallyResponseSchema = Joi.object().keys({\n  data: Joi.array().items(tallyItem).default([]),\n  links: linksSchema.default({}),\n  meta: tallyMetaSchema.default({})\n});\n\nconst rhsmSchemas = {\n  errors: response => schemaResponse({ response, schema: errorResponseSchema, id: 'RHSM errors' }),\n  instances: response => schemaResponse({ response, schema: instancesResponseSchema, id: 'RHSM instances' }),\n  tally: response => schemaResponse({ response, schema: tallyResponseSchema, id: 'RHSM tally' })\n};\n\nexport { rhsmSchemas as default, rhsmSchemas };\n","import moment from 'moment';\nimport {\n  RHSM_API_RESPONSE_INSTANCES_DATA_TYPES as INSTANCES_DATA_TYPES,\n  RHSM_API_RESPONSE_INSTANCES_META_TYPES as INSTANCES_META_TYPES,\n  RHSM_API_RESPONSE_TALLY_DATA_TYPES as TALLY_DATA_TYPES,\n  RHSM_API_RESPONSE_TALLY_META_TYPES as TALLY_META_TYPES,\n  rhsmConstants\n} from './rhsmConstants';\nimport { dateHelpers } from '../../common';\n\n/**\n * FixMe: If RHSM Instances is deprecating Hosts we're missing a property, number_of_guests\n */\n/**\n * Parse RHSM instances response for caching.\n *\n * @param {object} response\n * @returns {object}\n */\nconst rhsmInstances = response => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const metaMeasurements = meta[INSTANCES_META_TYPES.MEASUREMENTS];\n\n  updatedResponse.data = data.map(({ [INSTANCES_DATA_TYPES.MEASUREMENTS]: measurements, ...dataResponse }) => {\n    const updatedData = {\n      ...dataResponse\n    };\n\n    metaMeasurements?.forEach((measurement, index) => {\n      updatedData[measurement] = measurements[index];\n    });\n\n    return updatedData;\n  });\n\n  updatedResponse.meta = {\n    count: meta[INSTANCES_META_TYPES.COUNT],\n    productId: meta[INSTANCES_META_TYPES.PRODUCT]\n  };\n\n  return updatedResponse;\n};\n\n/**\n * Parse RHSM tally response for caching.\n *\n * @param {object} response\n * @returns {object}\n */\nconst rhsmTally = response => {\n  const updatedResponse = {};\n  const { [rhsmConstants.RHSM_API_RESPONSE_DATA]: data = [], [rhsmConstants.RHSM_API_RESPONSE_META]: meta = {} } =\n    response || {};\n  const currentDay = moment.utc(dateHelpers.getCurrentDate()).format('MM-D-YYYY');\n\n  updatedResponse.data = data.map(\n    (\n      { [TALLY_DATA_TYPES.DATE]: date, [TALLY_DATA_TYPES.VALUE]: value, [TALLY_DATA_TYPES.HAS_DATA]: hasData },\n      index\n    ) => ({\n      x: index,\n      y: value,\n      date,\n      hasData,\n      isCurrentDate: moment.utc(date).format('MM-D-YYYY') === currentDay\n    })\n  );\n\n  updatedResponse.meta = {\n    count: meta[TALLY_META_TYPES.COUNT],\n    metricId: meta[TALLY_META_TYPES.METRIC_ID],\n    productId: meta[TALLY_META_TYPES.PRODUCT],\n    totalMonthlyDate: meta[TALLY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_META_TYPES.DATE],\n    totalMonthlyHasData: meta[TALLY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_META_TYPES.HAS_DATA],\n    totalMonthlyValue: meta[TALLY_META_TYPES.TOTAL_MONTHLY]?.[TALLY_META_TYPES.VALUE]\n  };\n\n  return updatedResponse;\n};\n\nconst rhsmTranformers = {\n  instances: rhsmInstances,\n  tally: rhsmTally\n};\n\nexport { rhsmTranformers as default, rhsmTranformers, rhsmInstances, rhsmTally };\n","import { serviceCall } from '../config';\nimport { rhsmSchemas } from './rhsmSchemas';\nimport { helpers } from '../../common';\nimport { rhsmTranformers } from './rhsmTranformers';\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/version\n * @apiDescription Retrieve API version information\n *\n * Reference [RHSM API](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"build\": {\n *         \"version\": \"0.0.0\",\n *         \"gitDescription\": \"lorem ipsum\",\n *         \"artifact\": \"dolor sit\",\n *         \"name\": \"lorem\",\n *         \"group\": \"ipsum\",\n *         \"gitHash\": \"0000000000000000\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API version information.\n *\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getApiVersion = (options = {}) => {\n  const { cache = false, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_VERSION,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * Reference [RHSM for report params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiParam {string} product_id The ID for the product we wish to query.\n * - RHEL\n *\n * @apiParam (Query string) {string} granularity The level of granularity to return.\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiParam (Query string) {Date} beginning Defines the start of the report period. Dates should be provided in ISO 8601 format but the only accepted offset is UTC. E.g. 2017-07-21T17:32:28Z\n * @apiParam (Query string) {Date} ending Defines the end of the report period. Defaults to the current time. Dates should be provided in UTC.\n * @apiParam (Query string) {Number} [limit] The numbers of items to return.\n * @apiParam (Query string) {Number} [offset] The number of items to skip before starting to collect the result set.\n *\n * @apiSuccess {Array} data\n * @apiSuccess {object} links\n * @apiSuccess {object} meta\n * @apiSuccess {string} meta.granularity\n * - DAILY\n * - WEEKLY\n * - MONTHLY\n * - QUARTERLY\n * - YEARLY\n * @apiSuccess {string} meta.product\n * - RHEL\n * @apiSuccess {number} meta.resultSetSize\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 12\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 80,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 4\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 10,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000.057890,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 2\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": 1000,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 3\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 24,\n *           \"physical_sockets\": 24,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 20,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": 76,\n *           \"physical_sockets\": 36,\n *           \"hypervisor_sockets\": 40,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 40,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 104,\n *           \"physical_sockets\": 44,\n *           \"hypervisor_sockets\": 60,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 78,\n *           \"physical_sockets\": 48,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 82,\n *           \"physical_sockets\": 52,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 90,\n *           \"physical_sockets\": 60,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 144,\n *           \"physical_sockets\": 64,\n *           \"hypervisor_sockets\": 80,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 40,\n *           \"core_hours\": null,\n *           \"has_cloudigrade_data\": true,\n *           \"has_cloudigrade_mismatch\": true,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 12,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\",\n *         \"total_core_hours\": 30500.04,\n *         \"total_instance_hours\": 35\n *       }\n *     }\n *\n * @apiSuccessExample {json} WEEKLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-05-19T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.20,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-05-26T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.15,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-02T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 10.11,\n *           \"instance_hours\": 1\n *         },\n *         {\n *           \"date\": \"2020-06-09T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.32,\n *           \"instance_hours\": 23\n *         },\n *         {\n *           \"date\": \"2020-06-16T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 2000.42,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-23T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": 999.06,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-06-30T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-08-04T00:00:00Z\",\n *           \"sockets\": 86,\n *           \"physical_sockets\": 56,\n *           \"hypervisor_sockets\": 30,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 60,\n *           \"core_hours\": null,\n *           \"instance_hours\": 0\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=weekly&beginning=2020-05-26T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 10,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"weekly\",\n *         \"total_core_hours\": 200.03,\n *         \"total_instance_hours\": 26\n *       }\n *     }\n *\n * @apiSuccessExample {json} MONTHLY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2019-08-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-09-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 200,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-10-01T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 25,\n *           \"hypervisor_sockets\": 50,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 25,\n *           \"core_hours\": 400,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-11-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2019-12-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-01-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-02-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": null,\n *           \"has_data\": false,\n *           \"cloud_sockets\": 0,\n *           \"core_hours\": 0,\n *           \"instance_hours\": 0\n *         },\n *         {\n *           \"date\": \"2020-03-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-04-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-05-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-06-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 3000,\n *           \"physical_sockets\": 500,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         },\n *         {\n *           \"date\": \"2020-08-01T00:00:00Z\",\n *           \"sockets\": 2600,\n *           \"physical_sockets\": 100,\n *           \"hypervisor_sockets\": 2000,\n *           \"has_data\": true,\n *           \"cloud_sockets\": 500\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/tally/products/RHEL?granularity=monthly&beginning=2019-08-01T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 6,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"monthly\",\n *         \"total_core_hours\": 2050.04\n *       }\n *     }\n *\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 403 Forbidden\n *     {\n *        \"errors\": [\n *          {\n *            \"code\": \"SUBSCRIPTIONS1004\",\n *            \"detail\": \"Opt-in required.\",\n *            \"status\": \"403\",\n *            \"title\": \"Access Denied\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphReports = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_REPORT}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 2000\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/:metric_id Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50.090125,\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"has_data\": null\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": false,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Cores\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Transfer-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Transfer-gibibytes\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 1024,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Storage-gibibytes Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 31,\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Storage-gibibytes\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2048,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/**\n * @apiMock {DelayResponse} 250\n * @apiMock {RandomSuccess}\n * @api {get} /api/rhsm-subscriptions/v1/tally/products/:product_id/Instance-hours Get RHSM graph data\n * @apiDescription Retrieve graph data.\n *\n * @apiSuccessExample {json} DAILY, Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"value\": 25,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"value\": 1000,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"value\": 50,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"value\": null,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"value\": 0,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"value\": 104,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"value\": 70,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"value\": 82,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"value\": 86,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"value\": 90,\n *           \"has_data\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 144,\n *           \"has_data\": true\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"granularity\": \"daily\",\n *         \"has_cloudigrade_data\": true,\n *         \"has_cloudigrade_mismatch\": true,\n *         \"metric_id\": \"Instance-hours\",\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"\",\n *         \"total_monthly\": {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"value\": 2000,\n *           \"has_data\": true\n *         },\n *         \"usage\": \"\"\n *       }\n *     }\n */\n/* Get RHSM API reporting/tally graph/chart data.\n *\n * @param {string|Array} id String ID, or an array of IDs\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @param {Array} options.schema An array of callbacks used to transform the response, ie. [SUCCESS SCHEMA, ERROR SCHEMA]\n * @param {Array} options.transform An array of callbacks used to transform the response, ie. [SUCCESS TRANSFORM, ERROR TRANSFORM]\n * @returns {Promise<*>}\n */\nconst getGraphTally = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.tally, rhsmSchemas.errors],\n    transform = [rhsmTranformers.tally]\n  } = options;\n  const updatedId = (typeof id === 'string' && [id]) || (Array.isArray(id) && id) || [];\n\n  let url = `${process.env.REACT_APP_SERVICES_RHSM_TALLY}`;\n  updatedId.forEach((value, index) => {\n    url = url.replace(`{${index}}`, value);\n  });\n\n  return serviceCall({\n    url,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @api {get} /api/rhsm-subscriptions/v1/capacity/products/:product_id Get RHSM graph capacity data, i.e. thresholds\n * @apiDescription Retrieve graph capacity data, such as thresholds.\n *\n * Reference [RHSM for capacity params and commands](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\": [\n *         {\n *           \"date\": \"2020-07-01T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-02T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-03T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-04T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-05T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-06T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-07T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-08T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-09T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-10T00:00:00Z\",\n *           \"sockets\": 0,\n *           \"physical_sockets\": 0,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-11T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-12T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-13T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-14T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-15T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-16T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-17T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-18T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-19T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 50,\n *           \"hypervisor_sockets\": 0,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-20T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-21T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-22T00:00:00Z\",\n *           \"sockets\": 50,\n *           \"physical_sockets\": 32,\n *           \"hypervisor_sockets\": 18,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-23T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": false\n *         },\n *         {\n *           \"date\": \"2020-07-24T00:00:00Z\",\n *           \"sockets\": null,\n *           \"physical_sockets\": null,\n *           \"hypervisor_sockets\": null,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-25T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-26T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-27T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-28T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-29T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-30T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         },\n *         {\n *           \"date\": \"2020-07-31T00:00:00Z\",\n *           \"sockets\": 100,\n *           \"physical_sockets\": 75,\n *           \"hypervisor_sockets\": 25,\n *           \"has_infinite_quantity\": true\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/capacity/products/RHEL?granularity=daily&beginning=2020-07-20T00:00:00.000Z&ending=2020-08-19T23:59:59.999Z&offset=0\"\n *       },\n *       \"meta\": {\n *         \"count\": 11,\n *         \"product\": \"RHEL\",\n *         \"granularity\": \"daily\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 400 Bad Request\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 404 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API capacity/threshold graph/chart data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getGraphCapacity = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_CAPACITY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 500\n * @api {get} /api/rhsm-subscriptions/v1/hosts/products/:product_id Get RHSM hosts/systems table/inventory data\n * @apiDescription Retrieve hosts/systems table/inventory data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-123456789012\",\n *           \"display_name\": \"ipsum.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-123456789012\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.05,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 70,\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6N\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6N\",\n *           \"cloud_provider\": \"AZURE\",\n *           \"cores\": 4,\n *           \"core_hours\": 10.00,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"CLOUD\",\n *           \"measurement_type\": \"CLOUD\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6M\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6M\",\n *           \"cores\": 4,\n *           \"core_hours\": 1000.20,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 10,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-X3bXe4XXfD6L\",\n *           \"display_name\": \"dolor.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b122-X3bXe4XXfD6L\",\n *           \"cores\": 4,\n *           \"core_hours\": 1001.60,\n *           \"sockets\": 2,\n *           \"hardware_type\": \"VIRTUALIZED\",\n *           \"measurement_type\": \"VIRTUAL\",\n *           \"number_of_guests\": 1,\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YX\",\n *           \"display_name\": \"lorem.test.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YX\",\n *           \"cores\": 4,\n *           \"core_hours\": 999.60,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YZ\",\n *           \"display_name\": \"lorem.again.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YZ\",\n *           \"cores\": 0,\n *           \"core_hours\": 0,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-20T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YA\",\n *           \"display_name\": \"lorem.another.com\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YA\",\n *           \"cores\": 0,\n *           \"core_hours\": 0.01,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-21T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YB\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YB\",\n *           \"cores\": 0,\n *           \"core_hours\": 999.61,\n *           \"sockets\": 6,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"PHYSICAL\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-22T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YC\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YC\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-23T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YD\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YD\",\n *           \"cores\": 3,\n *           \"sockets\": 1,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-24T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YEE\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YEE\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-26T00:00:00Z\"\n *         },\n *         {\n *            \"insights_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"inventory_id\": \"499cff02-8b4b-46f8-a6xx-X3bXe4XXfD6YF\",\n *           \"subscription_manager_id\": \"b6028fa4-cd26-449a-b123-X3bXe4XXfD6YF\",\n *           \"cores\": 3,\n *           \"sockets\": 0,\n *           \"hardware_type\": \"PHYSICAL\",\n *           \"measurement_type\": \"HYPERVISOR\",\n *           \"number_of_guests\": 0,\n *           \"last_seen\": \"2020-06-29T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/RHEL?granularity=DAILY&sla=Premium&usage=Production&offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 11\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventory = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/hosts/:hypervisor_uuid/guests Get RHSM hosts/systems table/inventory guests data\n * @apiDescription Retrieve hosts/systems table/inventory guests data.\n *\n * Reference [RHSM for hosts/system table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"insights_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"display_name\": \"guest01.example.com\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-dcef6e970852\",\n *           \"display_name\": \"guest02.example.com\",\n *           \"subscription_manager_id\": \"b101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest03.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"inventory_id\": \"498cff02-8b4b-46f8-a655-XLef312123456\",\n *           \"display_name\": \"guest04.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest05.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest06.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest07.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest08.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest09.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         },\n *         {\n *           \"insights_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"inventory_id\": \"9358e312-1c9f-42f4-8910-XLef312123456\",\n *           \"display_name\": \"guest10.example.com\",\n *           \"subscription_manager_id\": \"c101a72f-1859-4489-acb8-d6d31c2578c4\",\n *           \"last_seen\": \"2020-07-01T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {\n *         \"first\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=0&limit=5\",\n *         \"last\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\",\n *         \"previous\": null,\n *         \"next\": \"/api/rhsm-subscriptions/v1/hosts/a283ffb6-e0f3-4dbe-9732-ccfdb297ba07/guests?offset=5&limit=5\"\n *       },\n *       \"meta\": {\n *         \"count\": 70\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API hosts table/inventory guests data.\n *\n * @param {string} id Subscription Manager ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getHostsInventoryGuests = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = false, cancelId } = options;\n  return serviceCall({\n    url: process.env.REACT_APP_SERVICES_RHSM_INVENTORY_GUESTS.replace('{0}', id),\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 750\n * @api {get} /api/rhsm-subscriptions/v1/instances/products/:product_id Get RHSM instances table/inventory data\n * @apiDescription Retrieve instances table/inventory data.\n *\n * Reference [RHSM for instances table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"inventory_id\": \"d6214a0b-b344-4778-831c-d53dcacb2da3\",\n *           \"subscription_manager_id\": \"adafd9d5-5b00-42fa-a6c9-75801d45cc6d\",\n *           \"display_name\": \"rhv.example.com\",\n *           \"measurements\": [\n *              42,\n *              0.000003563,\n *              1\n *           ],\n *           \"last_seen\": \"2020-04-01T00:00:00Z\"\n *         },\n *         {\n *           \"inventory_id\": \"XXXXXX-b344-4778-831c-XXXXXXXX\",\n *           \"subscription_manager_id\": \"XXXXXX-5b00-42fa-XXXX-75801d45cc6d\",\n *           \"display_name\": \"dolor.example.com\",\n *           \"measurements\": [\n *              20,\n *              null,\n *              1000\n *           ],\n *           \"last_seen\": \"2020-04-02T00:00:00Z\"\n *         },\n *         {\n *           \"inventory_id\": \"BBBBB-b344-4778-831c-BBBBBBB\",\n *           \"subscription_manager_id\": \"BBBBB-5b00-42fa-BBBBB-75801d45cc6d\",\n *           \"display_name\": \"lorem.example.com\",\n *           \"measurements\": [\n *              4000,\n *              10000.0000345678,\n *              3000\n *           ],\n *           \"last_seen\": \"2020-04-03T00:00:00Z\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3,\n *         \"measurements\": [\n *           \"Instance-hours\",\n *           \"Storage-gibibytes\",\n *           \"Transfer-gibibytes\"\n *         ],\n *         \"product\": \"RHEL\",\n *         \"service_level\": \"Premium\",\n *         \"usage\": \"Production\"\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API instances data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getInstancesInventory = (id, params = {}, options = {}) => {\n  const {\n    cache = true,\n    cancel = true,\n    cancelId,\n    schema = [rhsmSchemas.instances, rhsmSchemas.errors],\n    transform = [rhsmTranformers.instances]\n  } = options;\n\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_INSTANCES}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId,\n    schema,\n    transform\n  });\n};\n\n/**\n * @apiMock {DelayResponse} 250\n * @api {get} /api/rhsm-subscriptions/v1/subscriptions/products/:product_id Get RHSM subscriptions table/inventory data\n * @apiDescription Retrieve subscriptions table/inventory data.\n *\n * Reference [RHSM for subscriptions table/inventory](https://github.com/RedHatInsights/rhsm-subscriptions/blob/main/api/rhsm-subscriptions-api-spec.yaml)\n *\n * @apiSuccessExample {json} Success-Response:\n *     HTTP/1.1 200 OK\n *     {\n *       \"data\" : [\n *         {\n *           \"sku\": \"RH00011\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium (Physical and 4 Virtual Nodes)(L3 Only)\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" },\n *              { \"id\": \"ipsum\", \"number\": \"1234567890\" },\n *              { \"id\": \"lorem\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 3,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\"\n *         },\n *         {\n *           \"sku\": \"RH00010\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server\",\n *           \"service_level\": \"Self-Support\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [],\n *           \"next_event_date\": \"2020-04-02T00:00:00Z\",\n *           \"next_event_type\": \"Subscription Begin\",\n *           \"quantity\": 15,\n *           \"physical_capacity\": 1,\n *           \"virtual_capacity\": 1,\n *           \"total_capacity\": 2,\n *           \"uom\": \"Sockets\"\n *         },\n *         {\n *           \"sku\": \"RH00009\",\n *           \"product_name\": \"Red Hat Enterprise Linux Server, Premium\",\n *           \"service_level\": \"Premium\",\n *           \"usage\": \"Production\",\n *           \"subscriptions\": [\n *              { \"id\": \"1234567890\", \"number\": \"1234567890\" }\n *           ],\n *           \"next_event_date\": \"2020-04-01T00:00:00Z\",\n *           \"next_event_type\": \"Subscription End\",\n *           \"quantity\": 3000,\n *           \"physical_capacity\": 2,\n *           \"virtual_capacity\": 2,\n *           \"total_capacity\": 4,\n *           \"uom\": \"Cores\"\n *         }\n *       ],\n *       \"links\": {},\n *       \"meta\": {\n *         \"count\": 3\n *       }\n *     }\n *\n * @apiError {Array} errors\n * @apiErrorExample {json} Error-Response:\n *     HTTP/1.1 500 Internal Server Error\n *     {\n *        \"errors\": [\n *          {\n *            \"status\": \"string\",\n *            \"code\": \"string\",\n *            \"title\": \"string\",\n *            \"detail\": \"string\"\n *          }\n *        ]\n *     }\n */\n/**\n * Get RHSM API subscriptions data.\n *\n * @param {string} id Product ID\n * @param {object} params Query/search params\n * @param {object} options\n * @param {boolean} options.cancel\n * @param {string} options.cancelId\n * @returns {Promise<*>}\n */\nconst getSubscriptionsInventory = (id, params = {}, options = {}) => {\n  const { cache = true, cancel = true, cancelId } = options;\n  return serviceCall({\n    url: `${process.env.REACT_APP_SERVICES_RHSM_INVENTORY_SUBSCRIPTIONS}${id}`,\n    params,\n    cache,\n    cancel,\n    cancelId\n  });\n};\n\nconst rhsmServices = {\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n\n/**\n * Expose services to the browser's developer console.\n */\nhelpers.browserExpose({ rhsmServices });\n\nexport {\n  rhsmServices as default,\n  rhsmServices,\n  getApiVersion,\n  getGraphCapacity,\n  getGraphReports,\n  getGraphTally,\n  getHostsInventory,\n  getHostsInventoryGuests,\n  getInstancesInventory,\n  getSubscriptionsInventory\n};\n","import { platformApiTypes } from './platformApiTypes';\nimport { rhsmApiTypes } from './rhsmApiTypes';\n\nconst apiTypes = {\n  platformApi: platformApiTypes,\n  rhsmApi: rhsmApiTypes\n};\n\nexport { apiTypes as default, apiTypes, platformApiTypes, rhsmApiTypes };\n","/**\n * Platform response for appNavClick.\n *\n * @type {{ACTIVE_APP: string}}\n */\nconst PLATFORM_API_RESPONSE_NAV_TYPES = {\n  ACTIVE_APP: 'activeApp'\n};\n\n/**\n * Platform response entitlements type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS = 'entitlements';\n\n/**\n * Platform response of ENTITLEMENTS type values.\n * Schema/map of expected response entitlement types.\n *\n * @type {{ENTITLED: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES = {\n  ENTITLED: 'is_entitled'\n};\n\n/**\n * Platform response identity type.\n *\n * @type {string}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY = 'identity';\n\n/**\n * Platform response of IDENTITY type values.\n * Schema/map of expected response identity types.\n *\n * @type {{USER: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES = {\n  USER: 'user'\n};\n\n/**\n * Platform response of IDENTITY USER type values.\n * Schema/map of expected response identity user types.\n *\n * @type {{ORG_ADMIN: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES = {\n  ORG_ADMIN: 'is_org_admin'\n};\n\n/**\n * Platform response of USER PERMISSION type values.\n * Schema/map of expected response identity user permission types.\n *\n * @type {{PERMISSION: string, RESOURCE_DEFS: string}}\n */\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES = {\n  PERMISSION: 'permission',\n  RESOURCE_DEFS: 'resourceDefinitions'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES = {\n  SUBSCRIPTIONS: process.env.REACT_APP_UI_NAME\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES = {\n  ALL: '*'\n};\n\nconst PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES = {\n  ALL: '*',\n  READ: 'read',\n  WRITE: 'write'\n};\n\n/**\n * Platform API types.\n *\n * @type {{PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES: {USER: string},\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS: string, PLATFORM_API_RESPONSE_USER_IDENTITY: string,\n *     PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES: {ENTITLED: string},\n *     PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES: {ORG_ADMIN: string}}}\n */\nconst platformApiTypes = {\n  PLATFORM_API_RESPONSE_NAV_TYPES,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n\nexport {\n  platformApiTypes as default,\n  platformApiTypes,\n  PLATFORM_API_RESPONSE_NAV_TYPES,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS,\n  PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES,\n  PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES,\n  PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES\n};\n","import { rhsmConstants } from '../services/rhsm/rhsmConstants';\n\n/**\n * RHSM response Error DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA = 'errors';\n\n/**\n * RHSM response Error DATA types.\n * Schema/map of expected Error data response properties.\n *\n * @type {{CODE: string, DETAIL: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_TYPES = {\n  CODE: 'code',\n  DETAIL: 'detail'\n};\n\n/**\n * RHSM response Error DATA CODE types.\n *\n * @type {{GENERIC: string, OPTIN: string}}\n */\nconst RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES = {\n  ...rhsmConstants.RHSM_API_RESPONSE_ERROR_CODE_TYPES\n};\n\n/**\n * RHSM response links type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS = 'links';\n\n/**\n * RHSM response LINKS type.\n * Schema/map of expected inventory LINKS response properties.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_LINKS_TYPES = {\n  FIRST: 'first',\n  LAST: 'last',\n  PREVIOUS: 'previous',\n  NEXT: 'next'\n};\n\n/**\n * RHSM response meta type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_META = 'meta';\n\n/**\n * RHSM response META types.\n * Schema/map of expected META response properties.\n *\n * @type {{COUNT: string, TOTAL_INSTANCE_HOURS: string, TOTAL_CORE_HOURS: string}}\n */\nconst RHSM_API_RESPONSE_META_TYPES = {\n  COUNT: 'count',\n  TOTAL_CORE_HOURS: 'total_core_hours',\n  TOTAL_INSTANCE_HOURS: 'total_instance_hours'\n};\n\n/**\n * RHSM response data type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_DATA = 'data';\n\n/**\n * RHSM response Capacity DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA = RHSM_API_RESPONSE_DATA;\n\n/**\n * RHSM response Capacity DATA types.\n * Schema/map of expected Capacity data response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string, PHYSICAL_SOCKETS: string,\n *     HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string}}\n */\nconst RHSM_API_RESPONSE_CAPACITY_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_INFINITE: 'has_infinite_quantity'\n};\n\n/**\n * RHSM response inventory DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA = RHSM_API_RESPONSE_DATA;\n\n/**\n * RHSM response inventory DATA types.\n * Schema/map of expected inventory DATA response properties.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, SUBSCRIPTION_ID: string,\n *     INVENTORY_ID: string, MEASUREMENT: string, ID: string, GUESTS: string, CLOUD_PROVIDER: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_DATA_TYPES = {\n  CLOUD_PROVIDER: 'cloud_provider',\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  GUESTS: 'number_of_guests',\n  HARDWARE: 'hardware_type',\n  ID: 'insights_id',\n  INVENTORY_ID: 'inventory_id',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets',\n  SUBSCRIPTION_ID: 'subscription_manager_id'\n};\n\n/**\n * RHSM response inventory guests DATA types.\n * Schema/map of expected inventory guests DATA response properties.\n *\n * @type {{SUBSCRIPTION_ID: string, ID: string, NAME: string, LAST_SEEN: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES = {\n  ID: 'insights_id',\n  NAME: 'display_name',\n  SUBSCRIPTION_ID: 'subscription_manager_id',\n  LAST_SEEN: 'last_seen'\n};\n\n/**\n * RHSM response subscriptions inventory DATA types.\n *\n * @type {{UOM: string, SUBSCRIPTIONS: string, PHYSICAL_CAPACITY: string, USAGE: string,\n *     QUANTITY: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string, VIRTUAL_CAPACITY: string,\n *     TOTAL_CAPACITY: string, SKU: string, PRODUCT_NAME: string, SERVICE_LEVEL: string}}\n */\nconst RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES = {\n  SKU: 'sku',\n  PRODUCT_NAME: 'product_name',\n  SERVICE_LEVEL: 'service_level',\n  USAGE: 'usage',\n  SUBSCRIPTIONS: 'subscriptions',\n  NEXT_EVENT_DATE: 'next_event_date',\n  NEXT_EVENT_TYPE: 'next_event_type',\n  QUANTITY: 'quantity',\n  PHYSICAL_CAPACITY: 'physical_capacity',\n  VIRTUAL_CAPACITY: 'virtual_capacity',\n  TOTAL_CAPACITY: 'total_capacity',\n  UOM: 'uom'\n};\n\n/**\n * RHSM response Reporting/Tally DATA type.\n *\n * @type {string}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA = RHSM_API_RESPONSE_DATA;\n\n/**\n * RHSM response Reporting/Tally DATA types.\n * Schema/map of expected Reporting/Tally DATA response properties.\n *\n * @type {{HYPERVISOR_SOCKETS: string, CORES: string, INSTANCE_HOURS: string, SOCKETS: string, CLOUD_CORES: string,\n *     HAS_DATA: string, PHYSICAL_SOCKETS: string, PHYSICAL_CORES: string, CLOUD_INSTANCES: string, DATE: string,\n *     CORE_HOURS: string, CLOUD_SOCKETS: string, HAS_CLOUDIGRADE_DATA: string, HAS_CLOUDIGRADE_MISMATCH: string,\n *     HYPERVISOR_CORES: string}}\n */\nconst RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES = {\n  CLOUD_CORES: 'cloud_cores',\n  CLOUD_INSTANCES: 'cloud_instance_count',\n  CLOUD_SOCKETS: 'cloud_sockets',\n  CORE_HOURS: 'core_hours',\n  CORES: 'cores',\n  DATE: 'date',\n  HYPERVISOR_CORES: 'hypervisor_cores',\n  HYPERVISOR_SOCKETS: 'hypervisor_sockets',\n  INSTANCE_HOURS: 'instance_hours',\n  PHYSICAL_CORES: 'physical_cores',\n  PHYSICAL_SOCKETS: 'physical_sockets',\n  SOCKETS: 'sockets',\n  HAS_CLOUDIGRADE_DATA: 'has_cloudigrade_data',\n  HAS_CLOUDIGRADE_MISMATCH: 'has_cloudigrade_mismatch',\n  HAS_DATA: 'has_data'\n};\n\n/**\n * RHSM product id type values.\n *\n * @type {{RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string, RHEL_WORKSTATION: string,\n *     RHOSAK: string, RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string, SATELLITE_SERVER: string,\n *     OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string, SATELLITE_CAPSULE: string,\n *     RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string}}\n */\nconst RHSM_API_PATH_ID_TYPES = {\n  ...rhsmConstants.RHSM_API_PATH_PRODUCT_TYPES\n};\n\n/**\n * RHSM API query/search parameter of GRANULARITY type values.\n * Schema/map of expected query/search parameter granularity types.\n *\n * @type {{WEEKLY: string, QUARTERLY: string, DAILY: string, MONTHLY: string}}\n */\nconst RHSM_API_QUERY_GRANULARITY_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_GRANULARITY_TYPES\n};\n\n/**\n * ToDo: Clean up sort params since they're hosts API specific.\n * Hosts is being deprecated in favor of instances API. Instances sort params\n * can be found in /services/rhsm/rhsmConstants.js\n */\n/**\n * RHSM API query/search parameter SORT type values for HOSTS.\n *\n * @type {{CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string, MEASUREMENT: string,\n *     LAST_SEEN: string, NAME: string}}\n */\nconst RHSM_API_QUERY_SORT_TYPES = {\n  CORES: 'cores',\n  CORE_HOURS: 'core_hours',\n  HARDWARE: 'hardware_type',\n  INSTANCE_HOURS: 'instance_hours',\n  LAST_SEEN: 'last_seen',\n  MEASUREMENT: 'measurement_type',\n  NAME: 'display_name',\n  SOCKETS: 'sockets'\n};\n\n/**\n * RHSM API query/search parameter of EVENT type values for Subscriptions.\n *\n * @type {{EVENT_START: string, EVENT_END: string}}\n */\nconst RHSM_API_QUERY_SUBSCRIPTIONS_EVENT_TYPES = {\n  EVENT_START: 'Subscription Start',\n  EVENT_END: 'Subscription End'\n};\n\n/**\n * RHSM API query/search parameter SORT type values for SUBSCRIPTIONS.\n *\n * @type {{QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string, SKU: string,\n *     SERVICE_LEVEL: string}}\n */\nconst RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES = {\n  NEXT_EVENT_DATE: 'next_event_date',\n  NEXT_EVENT_TYPE: 'next_event_type',\n  QUANTITY: 'quantity',\n  SKU: 'sku',\n  SERVICE_LEVEL: 'service_level',\n  USAGE: 'usage'\n};\n\n/**\n * RHSM API query/search parameter SORT DIRECTION type values.\n *\n * @type {{ASCENDING: string, DESCENDING: string}}\n */\nconst RHSM_API_QUERY_SORT_DIRECTION_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES\n};\n\n/**\n * RHSM API query/search parameter SLA type values.\n *\n * @type {{PREMIUM: string, SELF: string, NONE: string, STANDARD: string}}\n */\nconst RHSM_API_QUERY_SLA_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_SLA_TYPES\n};\n\n/**\n * RHSM API query/search parameter UOM type values.\n *\n * @type {{CORES: string, SOCKETS: string}}\n */\nconst RHSM_API_QUERY_UOM_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_UOM_TYPES\n};\n\n/**\n * RHSM API query/search parameter USAGE type values.\n *\n * @type {{UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string}}\n */\nconst RHSM_API_QUERY_USAGE_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_USAGE_TYPES\n};\n\n/**\n * RHSM API query/search parameter OPTIN type values.\n *\n * @type {{TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_SET_OPTIN_TYPES = {\n  CONDUIT_SYNC: 'enable_conduit_sync',\n  TALLY_REPORT: 'enable_tally_reporting',\n  TALLY_SYNC: 'enable_tally_sync'\n};\n\n/**\n * RHSM API query/search parameter CAPACITY type values.\n *\n * @type {{GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string, START_DATE: string}}\n */\nconst RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES\n};\n\n/**\n * RHSM API query/search parameter INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES\n};\n\n/**\n * RHSM API query/search parameter GUESTS INVENTORY type values.\n *\n * @type {{OFFSET: string, LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES = {\n  LIMIT: 'limit',\n  OFFSET: 'offset'\n};\n\n/**\n * RHSM API query/search parameter SUBSCRIPTIONS INVENTORY type values.\n *\n * @type {{UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string, SLA: string,\n *     LIMIT: string}}\n */\nconst RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES = {\n  ...rhsmConstants.RHSM_API_QUERY_SET_INVENTORY_TYPES\n};\n\n/**\n * RHSM API query/search parameter values.\n *\n * @type {{GRANULARITY: string, TALLY_SYNC: string, DIRECTION: string, END_DATE: string,\n *     SLA: string, START_DATE: string, LIMIT: string, UOM: string, TALLY_REPORT: string,\n *     USAGE: string, SORT: string, OFFSET: string, CONDUIT_SYNC: string}}\n */\nconst RHSM_API_QUERY_TYPES = {\n  ...RHSM_API_QUERY_SET_OPTIN_TYPES,\n  ...RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  ...RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\n/**\n * RHSM API types.\n *\n * @type {{RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string,\n *     OFFSET: string, SLA: string, LIMIT: string}, RHSM_API_RESPONSE_DATA: string,\n *     RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES: {UOM: string, SUBSCRIPTIONS: string, PHYSICAL_CAPACITY: string,\n *     USAGE: string, QUANTITY: string, NEXT_EVENT_TYPE: string, NEXT_EVENT_DATE: string, VIRTUAL_CAPACITY: string,\n *     TOTAL_CAPACITY: string, SKU: string, PRODUCT_NAME: string, SERVICE_LEVEL: string},\n *     RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES: {GENERIC: string, OPTIN: string}, RHSM_API_RESPONSE_INVENTORY_DATA: string,\n *     RHSM_API_RESPONSE_CAPACITY_DATA: string, RHSM_API_RESPONSE_ERROR_DATA_TYPES: {CODE: string, DETAIL: string},\n *     RHSM_API_RESPONSE_CAPACITY_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, DATE: string, SOCKETS: string,\n *     PHYSICAL_SOCKETS: string, HYPERVISOR_CORES: string, HAS_INFINITE: string, PHYSICAL_CORES: string},\n *     RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES: {QUANTITY: string, USAGE: string, NEXT_EVENT_TYPE: string,\n *     NEXT_EVENT_DATE: string, SKU: string, SERVICE_LEVEL: string}, RHSM_API_RESPONSE_META_TYPES: {COUNT: string,\n *     TOTAL_INSTANCE_HOURS: string, TOTAL_CORE_HOURS: string}, RHSM_API_QUERY_GRANULARITY_TYPES: {WEEKLY: string,\n *     QUARTERLY: string, DAILY: string, MONTHLY: string}, RHSM_API_QUERY_SORT_DIRECTION_TYPES: {ASCENDING: string,\n *     DESCENDING: string}, RHSM_API_RESPONSE_PRODUCTS_DATA: string,\n *     RHSM_API_QUERY_SUBSCRIPTIONS_EVENT_TYPES: {EVENT_START: string, EVENT_END: string},\n *     RHSM_API_QUERY_TYPES: {GRANULARITY: string, TALLY_SYNC: string, DIRECTION: string, END_DATE: string, SLA: string,\n *     START_DATE: string, LIMIT: string, UOM: string, TALLY_REPORT: string, USAGE: string, SORT: string, OFFSET: string,\n *     CONDUIT_SYNC: string}, RHSM_API_RESPONSE_LINKS: string, RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES: {OFFSET: string,\n *     LIMIT: string}, RHSM_API_PATH_ID_TYPES: {RHEL_ARM: string, OPENSHIFT_METRICS: string, SATELLITE: string,\n *     RHEL_WORKSTATION: string, RHOSAK: string, RHEL_COMPUTE_NODE: string, RHEL_X86: string, OPENSHIFT: string,\n *     SATELLITE_SERVER: string, OPENSHIFT_DEDICATED_METRICS: string, RHEL_DESKTOP: string, RHEL: string,\n *     SATELLITE_CAPSULE: string, RHEL_SERVER: string, RHEL_IBM_Z: string, RHEL_IBM_POWER: string},\n *     RHSM_API_QUERY_SET_OPTIN_TYPES: {TALLY_SYNC: string, TALLY_REPORT: string, CONDUIT_SYNC: string},\n *     RHSM_API_QUERY_USAGE_TYPES: {UNSPECIFIED: string, DISASTER: string, DEVELOPMENT: string, PRODUCTION: string},\n *     RHSM_API_QUERY_SLA_TYPES: {PREMIUM: string, SELF: string, NONE: string, STANDARD: string},\n *     RHSM_API_QUERY_SET_INVENTORY_TYPES: {UOM: string, USAGE: string, DIRECTION: string, SORT: string, OFFSET: string,\n *     SLA: string, LIMIT: string}, RHSM_API_QUERY_SORT_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string,\n *     SOCKETS: string, MEASUREMENT: string, LAST_SEEN: string, NAME: string},\n *     RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES: {HYPERVISOR_SOCKETS: string, CORES: string, INSTANCE_HOURS: string,\n *     SOCKETS: string, CLOUD_CORES: string, HAS_DATA: string, PHYSICAL_SOCKETS: string, PHYSICAL_CORES: string,\n *     CLOUD_INSTANCES: string, DATE: string, CORE_HOURS: string, CLOUD_SOCKETS: string, HAS_CLOUDIGRADE_DATA: string,\n *     HAS_CLOUDIGRADE_MISMATCH: string, HYPERVISOR_CORES: string}, RHSM_API_QUERY_UOM_TYPES: {CORES: string,\n *     SOCKETS: string}, RHSM_API_RESPONSE_LINKS_TYPES: string,\n *     RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES: {SUBSCRIPTION_ID: string, ID: string, NAME: string,\n *     LAST_SEEN: string}, RHSM_API_RESPONSE_ERROR_DATA: string, RHSM_API_RESPONSE_META: string,\n *     RHSM_API_RESPONSE_INVENTORY_DATA_TYPES: {CORES: string, CORE_HOURS: string, HARDWARE: string, SOCKETS: string,\n *     SUBSCRIPTION_ID: string, INVENTORY_ID: string, MEASUREMENT: string, ID: string, GUESTS: string,\n *     CLOUD_PROVIDER: string, LAST_SEEN: string, NAME: string},\n *     RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES: {GRANULARITY: string, USAGE: string, END_DATE: string, SLA: string,\n *     START_DATE: string}}}\n */\nconst rhsmApiTypes = {\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_EVENT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n\nexport {\n  rhsmApiTypes as default,\n  rhsmApiTypes,\n  RHSM_API_RESPONSE_ERROR_DATA,\n  RHSM_API_RESPONSE_ERROR_DATA_TYPES,\n  RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES,\n  RHSM_API_RESPONSE_LINKS,\n  RHSM_API_RESPONSE_LINKS_TYPES,\n  RHSM_API_RESPONSE_META,\n  RHSM_API_RESPONSE_META_TYPES,\n  RHSM_API_RESPONSE_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA,\n  RHSM_API_RESPONSE_CAPACITY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_DATA,\n  RHSM_API_RESPONSE_INVENTORY_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES,\n  RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES,\n  RHSM_API_RESPONSE_PRODUCTS_DATA,\n  RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES,\n  RHSM_API_PATH_ID_TYPES,\n  RHSM_API_QUERY_GRANULARITY_TYPES,\n  RHSM_API_QUERY_SORT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_EVENT_TYPES,\n  RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES,\n  RHSM_API_QUERY_SORT_DIRECTION_TYPES,\n  RHSM_API_QUERY_SLA_TYPES,\n  RHSM_API_QUERY_UOM_TYPES,\n  RHSM_API_QUERY_USAGE_TYPES,\n  RHSM_API_QUERY_TYPES,\n  RHSM_API_QUERY_SET_OPTIN_TYPES,\n  RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES,\n  RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES\n};\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var map = {\n\t\"./authentication/authentication.js\": [\n\t\t67719\n\t],\n\t\"./bannerMessages/bannerMessages.js\": [\n\t\t87585,\n\t\t7585\n\t],\n\t\"./chart/chart.js\": [\n\t\t60930,\n\t\t361,\n\t\t8683,\n\t\t4569,\n\t\t930\n\t],\n\t\"./chart/chartAxisLabel.js\": [\n\t\t76395,\n\t\t6395\n\t],\n\t\"./chart/chartContext.js\": [\n\t\t98326,\n\t\t8326\n\t],\n\t\"./chart/chartElements.js\": [\n\t\t54096,\n\t\t361,\n\t\t8683,\n\t\t4569,\n\t\t4096\n\t],\n\t\"./chart/chartHelpers.js\": [\n\t\t61026,\n\t\t361,\n\t\t1026\n\t],\n\t\"./chart/chartIcon.js\": [\n\t\t1138,\n\t\t1138\n\t],\n\t\"./chart/chartLegend.js\": [\n\t\t52902,\n\t\t361,\n\t\t4554\n\t],\n\t\"./chart/chartTooltip.js\": [\n\t\t78213,\n\t\t8213\n\t],\n\t\"./form/checkbox.js\": [\n\t\t34467,\n\t\t2355,\n\t\t7235,\n\t\t1302\n\t],\n\t\"./form/formHelpers.js\": [\n\t\t44044,\n\t\t4044\n\t],\n\t\"./form/formState.js\": [\n\t\t90384,\n\t\t361,\n\t\t384\n\t],\n\t\"./form/select.js\": [\n\t\t49844,\n\t\t361,\n\t\t9844\n\t],\n\t\"./form/textInput.js\": [\n\t\t18710,\n\t\t8710\n\t],\n\t\"./graphCard/graphCard.deprecated.js\": [\n\t\t28341,\n\t\t361,\n\t\t8683,\n\t\t4569,\n\t\t930,\n\t\t8341\n\t],\n\t\"./graphCard/graphCard.js\": [\n\t\t10608,\n\t\t361,\n\t\t8683,\n\t\t4569,\n\t\t930,\n\t\t5876,\n\t\t1799,\n\t\t608\n\t],\n\t\"./graphCard/graphCardChart.deprecated.js\": [\n\t\t89270,\n\t\t361,\n\t\t8683,\n\t\t4569,\n\t\t930,\n\t\t9270\n\t],\n\t\"./graphCard/graphCardChart.js\": [\n\t\t91799,\n\t\t361,\n\t\t8683,\n\t\t4569,\n\t\t930,\n\t\t1799,\n\t\t1858\n\t],\n\t\"./graphCard/graphCardChartLegend.js\": [\n\t\t64418,\n\t\t4418\n\t],\n\t\"./graphCard/graphCardChartTitleTooltip.js\": [\n\t\t99171,\n\t\t939\n\t],\n\t\"./graphCard/graphCardChartTooltip.js\": [\n\t\t44024,\n\t\t4024\n\t],\n\t\"./graphCard/graphCardContext.js\": [\n\t\t25394,\n\t\t5394\n\t],\n\t\"./graphCard/graphCardHelpers.js\": [\n\t\t78139,\n\t\t8139\n\t],\n\t\"./graphCard/graphCardMetric.js\": [\n\t\t49877,\n\t\t361,\n\t\t8683,\n\t\t4569,\n\t\t930,\n\t\t5876,\n\t\t1799,\n\t\t9877\n\t],\n\t\"./graphCard/graphCardMetricTotals.js\": [\n\t\t29407,\n\t\t361,\n\t\t5876,\n\t\t6873\n\t],\n\t\"./graphCard/graphCardMetrics.js\": [\n\t\t11014,\n\t\t361,\n\t\t8683,\n\t\t4569,\n\t\t930,\n\t\t1799,\n\t\t1014\n\t],\n\t\"./guestsList/guestsList.js\": [\n\t\t63056,\n\t\t3056\n\t],\n\t\"./i18n/i18n.js\": [\n\t\t83109\n\t],\n\t\"./inventoryList/inventoryList.deprecated.js\": [\n\t\t11001,\n\t\t4812,\n\t\t3056,\n\t\t2902,\n\t\t9629\n\t],\n\t\"./inventoryList/inventoryList.js\": [\n\t\t86876,\n\t\t4812,\n\t\t3056,\n\t\t2739\n\t],\n\t\"./inventoryList/inventoryListHelpers.js\": [\n\t\t44822,\n\t\t4822\n\t],\n\t\"./inventorySubscriptions/inventorySubscriptions.js\": [\n\t\t47493,\n\t\t4812,\n\t\t8244\n\t],\n\t\"./inventoryTabs/inventoryTab.js\": [\n\t\t80931,\n\t\t931\n\t],\n\t\"./inventoryTabs/inventoryTabs.js\": [\n\t\t69051,\n\t\t9051\n\t],\n\t\"./loader/loader.js\": [\n\t\t1797\n\t],\n\t\"./messageView/messageView.js\": [\n\t\t79719\n\t],\n\t\"./minHeight/minHeight.js\": [\n\t\t91339,\n\t\t1339\n\t],\n\t\"./optinView/optinView.js\": [\n\t\t78255,\n\t\t8255\n\t],\n\t\"./pageLayout/pageColumns.js\": [\n\t\t5937\n\t],\n\t\"./pageLayout/pageHeader.js\": [\n\t\t58816\n\t],\n\t\"./pageLayout/pageLayout.js\": [\n\t\t52422\n\t],\n\t\"./pageLayout/pageMessages.js\": [\n\t\t54803\n\t],\n\t\"./pageLayout/pageSection.js\": [\n\t\t99781\n\t],\n\t\"./pageLayout/pageToolbar.js\": [\n\t\t89484\n\t],\n\t\"./pagination/pagination.js\": [\n\t\t68900,\n\t\t8900\n\t],\n\t\"./pagination/paginationHelpers.js\": [\n\t\t65020,\n\t\t5020\n\t],\n\t\"./productView/productView.js\": [\n\t\t29175,\n\t\t361,\n\t\t8683,\n\t\t4569,\n\t\t4812,\n\t\t930,\n\t\t5876,\n\t\t1799,\n\t\t136,\n\t\t3056,\n\t\t2902,\n\t\t6745,\n\t\t9175,\n\t\t5560\n\t],\n\t\"./productView/productViewContext.js\": [\n\t\t51858,\n\t\t9942\n\t],\n\t\"./productView/productViewMissing.js\": [\n\t\t91233,\n\t\t1233\n\t],\n\t\"./productView/productViewOpenShiftContainer.js\": [\n\t\t81114,\n\t\t361,\n\t\t8683,\n\t\t4569,\n\t\t4812,\n\t\t930,\n\t\t5876,\n\t\t136,\n\t\t3056,\n\t\t2902,\n\t\t6745,\n\t\t2621\n\t],\n\t\"./productView/productViewOpenShiftDedicated.js\": [\n\t\t84944,\n\t\t361,\n\t\t8683,\n\t\t4569,\n\t\t4812,\n\t\t930,\n\t\t5876,\n\t\t1799,\n\t\t136,\n\t\t3056,\n\t\t2902,\n\t\t6745,\n\t\t9175,\n\t\t5979\n\t],\n\t\"./router/index.js\": [\n\t\t94976\n\t],\n\t\"./router/redirect.js\": [\n\t\t57304\n\t],\n\t\"./router/router.js\": [\n\t\t27097\n\t],\n\t\"./router/routerContext.js\": [\n\t\t43301\n\t],\n\t\"./router/routerHelpers.js\": [\n\t\t97712\n\t],\n\t\"./table/table.js\": [\n\t\t78697\n\t],\n\t\"./table/tableEmpty.js\": [\n\t\t30817\n\t],\n\t\"./table/tableSkeleton.js\": [\n\t\t62540\n\t],\n\t\"./tabs/tabs.js\": [\n\t\t70031,\n\t\t31\n\t],\n\t\"./toolbar/toolbar.js\": [\n\t\t92227,\n\t\t361,\n\t\t5876,\n\t\t136,\n\t\t9297\n\t],\n\t\"./toolbar/toolbarContext.js\": [\n\t\t83280,\n\t\t361,\n\t\t5876,\n\t\t136,\n\t\t8232\n\t],\n\t\"./toolbar/toolbarFieldDisplayName.js\": [\n\t\t89517,\n\t\t9517\n\t],\n\t\"./toolbar/toolbarFieldGranularity.js\": [\n\t\t2738,\n\t\t361,\n\t\t2738\n\t],\n\t\"./toolbar/toolbarFieldRangedMonthly.js\": [\n\t\t65876,\n\t\t361,\n\t\t5876,\n\t\t998\n\t],\n\t\"./toolbar/toolbarFieldSelectCategory.js\": [\n\t\t70136,\n\t\t361,\n\t\t5876,\n\t\t136,\n\t\t7891\n\t],\n\t\"./toolbar/toolbarFieldSla.js\": [\n\t\t33267,\n\t\t361,\n\t\t3267\n\t],\n\t\"./toolbar/toolbarFieldUom.js\": [\n\t\t74097,\n\t\t361,\n\t\t4097\n\t],\n\t\"./toolbar/toolbarFieldUsage.js\": [\n\t\t49928,\n\t\t361,\n\t\t9928\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 58908;\nmodule.exports = webpackAsyncContext;"],"names":["module","exports","App","getLocale","useAliasDispatch","useDispatch","useAliasSelector","useSelector","dispatch","locale","user","session","value","useMount","I18n","NotificationsPortal","Router","defaultProps","reduxActions","storeHooks","noop","Function","prototype","noopPromise","Promise","resolve","PROD_MODE","process","UI_WINDOW_ID","helpers","browserExpose","obj","options","limit","id","window","generateId","prefix","Math","ceil","random","isDate","date","Object","toString","call","isPromise","test","noopTranslate","key","components","updatedKey","Array","isArray","updatedValue","keys","length","JSON","stringify","updatedComponents","numberDisplay","Number","isNaN","numbro","DEV_MODE","REVIEW_MODE","TEST_MODE","UI_DEPLOY_PATH_PREFIX","UI_DISABLED","UI_DISABLED_GRAPH","UI_DISABLED_TABLE","UI_DISABLED_TABLE_HOSTS","UI_DISABLED_TABLE_INSTANCES","UI_DISABLED_TABLE_SUBSCRIPTIONS","UI_DISABLED_TOOLBAR","UI_DISPLAY_NAME","UI_DISPLAY_CONFIG_NAME","UI_DISPLAY_START_NAME","UI_LINK_CONTACT_US","UI_LINK_LEARN_MORE","UI_LINK_REPORT_ACCURACY_RECOMMENDATIONS","UI_LOCALE_DEFAULT","UI_LOCALE_DEFAULT_DESC","UI_LOGGER_ID","UI_LOGGER_FILE","UI_NAME","UI_PATH","UI_VERSION","getCurrentDate","moment","toDate","REACT_APP_DEBUG_DEFAULT_DATETIME","setRangedDateTime","subtract","measurement","endOfMeasurement","startDate","startOf","endDate","endOf","currentDateTime","defaultDateTime","weeklyDateTime","monthlyDateTime","quarterlyDateTime","rangedYearDateTime","timestampMonthFormats","long","yearLong","short","yearShort","timestampQuarterFormats","dateHelpers","getRangedMonthDateTime","month","currentYear","parseInt","year","keyDateTimeRanges","listDateTimeRanges","startDateUpdated","endDateUpdated","format","dateTime","titleYear","title","titleIndex","isNextYear","_title","toLowerCase","add","translate","context","push","reverse","isCurrent","current","undefined","getRangedDateTime","granularity","GRANULARITY_TYPES","timestampDayFormats","timestampTimeFormats","timeLong","yearTimeLong","timeShort","yearTimeShort","timestampUTCTimeFormats","downloadData","data","fileName","fileType","reject","document","navigator","URL","blob","Blob","type","msSaveBlob","anchorTag","createElement","href","createObjectURL","style","display","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","error","debugLog","sessionStorage","replace","parse","getItem","Error","message","Authentication","appName","authorizeUser","children","hideGlobalFilter","initializeChrome","isDisabled","onNavigation","setAppName","t","useAliasHistory","useHistory","useState","unregister","setUnregister","history","errorCodes","pending","httpStatus","status","isAuthorized","authorized","event","navId","useUnmount","description","pageTitle","icon","BinocularsIcon","includes","rhsmApiTypes","Redirect","route","routerHelpers","serviceName","routerHooks","makeMapStateToProps","reduxSelectors","ConnectedAuthentication","connect","translateKey","values","updatedValues","updatedTranslateKey","filter","join","i18next","i18nKey","translateComponent","Component","withTranslation","props","i18n","displayName","fallbackLng","loadPath","initialized","setInitialized","XHR","use","initReactI18next","init","backend","lng","debug","ns","defaultNS","react","useSuspense","useEffect","e","Loader","skeletonProps","tableProps","variant","className","size","SkeletonSize","TableSkeleton","PageLayout","PageHeader","MessageView","PageSection","EmptyState","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","EmptyStateBody","PageColumns","Flex","alignItems","sm","spaceItems","React","child","map","FlexItem","grow","includeTour","productLabel","justifyContent","Button","isInline","color","component","ExternalLinkAltIcon","iconPosition","target","PageMessages","PageToolbar","padding","default","hash","search","forcePath","isForced","routes","url","baseName","pathName","matchedRoutePath","path","matchedRoute","location","updatedRoutes","setUpdatedRoutes","redirectDefault","setRedirectDefault","activateOnErrorRoute","find","activateOnError","all","item","disabled","View","Route","exact","strict","render","routeProps","routeConfig","URLSearchParams","decodeURIComponent","parsedSearch","Set","param","forEach","v","split","updatedLocation","routeDetail","errorRoute","routeItem","RouterContext","results","redirect","fallback","Switch","to","DEFAULT_CONTEXT","useRouterContext","useContext","useRouteDetail","useAliasRouterContext","platformLandingRedirect","platformModalRedirect","dynamicBaseName","pathname","applicationName","dynamicBasePath","basePath","generateProductGroups","config","routesConfig","productGroups","pathParameter","productParameter","index","generateRoutes","getErrorRoute","getRouteConfigByPath","basePathDirs","str","configs","allConfigs","configsById","allConfigsById","findConfig","dir","configPath","aliases","configItem","updatedConfigItem","RegExp","decodedDir","decodeURI","firstMatch","getRouteConfig","navRouteItem","returnDefault","routeHref","viewParameter","importView","p","Table","state","isCollapsible","isSortable","sortBy","updatedColumnHeaders","updatedRows","onCollapse","isOpen","fullWidth","cells","expandedContent","setState","onSort","direction","updatedIndex","i","label","column","header","this","setRowData","prevProps","columnHeaders","rows","customizer","valueA","valueB","_isEqualWith","updatedSort","isExpanded","rowObj","parent","cell","settings","columnHeader","sortActive","sortDirection","tempColumnHeader","transforms","sortable","SortByDirection","ariaLabel","borders","isHeader","summary","pfTableProps","emptyTable","TableEmpty","SearchIcon","TableHeader","TableBody","Grid","GridItem","span","renderTable","tableHeading","colCount","colWidth","rowCount","updatedHeader","cellWidth","updatedRowCount","productGroup","RHSM_API_PATH_ID_TYPES","productId","viewId","query","RHSM_API_QUERY_TYPES","RHSM_API_QUERY_UOM_TYPES","toISOString","graphTallyQuery","inventoryHostsQuery","RHSM_API_QUERY_SORT_TYPES","SORT_DIRECTION_TYPES","inventorySubscriptionsQuery","RHSM_API_QUERY_SUBSCRIPTIONS_SORT_TYPES","initialGraphFilters","fill","chartColorBlueLight","stroke","chartColorBlueDark","chartColorCyanLight","chartColorCyanDark","chartColorPurpleLight","chartColorPurpleDark","chartType","initialGuestsFilters","inventoryId","inventory","lastSeen","DateFormat","initialInventoryFilters","numberOfGuests","updatedDisplayName","count","cloudProvider","measurementType","isWrappable","initialInventorySettings","initialSubscriptionsInventoryFilters","uom","nextEventDate","initialToolbarFilters","selected","productContextFilterUom","initialOption","isOptional","initialGraphSettings","actionDisplay","displayContent","totalCoreHours","meta","total","average","mantissa","trimMantissa","lowPrecision","toUpperCase","coreHours","parseFloat","toFixed","isStacked","yAxisUseDataSet","instanceHours","RHSM_API_PATH_PRODUCT_TYPES","RHSM_API_QUERY_SET_TYPES","RHSM_API_QUERY_INVENTORY_SORT_TYPES","RHSM_API_PATH_METRIC_TYPES","isStandalone","yAxisChartLabel","isCardTitleDescription","xAxisChartLabel","yAxisTickFormat","tick","INVENTORY_TYPES","rhelConfig","productConfig","isSearchable","openshiftContainerConfig","openshiftMetricsConfig","openshiftDedicatedConfig","rhosakConfig","satelliteProductConfig","isSetAppNav","useHistoryRRD","pathLocation","historyState","useLocation","useParams","useRouteMatch","apiQueries","parseRhsmQuery","queries","inventoryGuestsQuery","updatedGraphTallyQuery","reduxHelpers","updatedInventoryGuestsQuery","updatedInventoryHostsQuery","updatedInventorySubscriptionsQuery","toolbarQuery","FULFILLED_ACTION","base","PENDING_ACTION","REJECTED_ACTION","setResponseSchemas","schemas","initialValue","schema","generated","getSingleResponseFromResultArray","updatedResults","payload","response","updatedResultsMessage","firstErrorResponse","_get","firstSuccessResponse","getMessageFromResults","statusResponse","statusText","messageResponse","dataResponse","formattedStatus","trim","_isPlainObject","getDateFromResults","getStatusFromResults","setStateProp","prop","initialState","reset","console","warn","singlePromiseDataResponseFromArray","HTTP_STATUS_RANGE","setApiQuery","setNormalizedResponse","parsedResponses","responses","customResponseEntry","customResponseValue","keyPrefix","keyCase","updatedData","generatedSchema","parsedResponse","dataObj","keyCaseType","customEntry","customValue","update","updatedDataObj","generatedData","entries","casedDataObjKey","dataObjKey","dataObjValue","_camelCase","_snakeCase","val","isInteger","generatedPromiseActionReducer","types","action","expandedTypes","subVal","ref","whichType","expandMetaTypes","updatedMeta","fromEntries","baseState","errorMessage","fulfilled","setId","errorResponse","cancelled","getDataFromResults","reactReduxHooks","shallowEqual","dispatchEvent","store","selector","equality","useReactReduxSelector","useSelectors","selectors","multiSelector","createSelector","rhsmActionsHooks","useGetMessageReports","rhsmTypes","rhsmServices","cancelId","notifications","reactRedux","rhsmActions","rhsmSelectors","useAppMessages","useAliasRouteDetail","result","platformActions","addNotification","RcsAddNotification","removeNotification","RcsRemoveNotification","clearNotifications","RcsClearNotifications","isHidden","platformTypes","platformServices","callback","name","setAppNav","secondaryNav","getGraphReportsCapacity","getGraphTally","idMetric","multiMetric","multiDispatch","metric","getHostsInventory","getHostsInventoryGuests","getInstancesInventory","getMessageReports","getSubscriptionsInventory","userServices","updatedPermissions","permissions","getUser","userData","app","getUserPermissions","allPermissions","userPermissions","flat","emulatedErrorResponse","defaultLocale","Cookies","LocaleCode","logoutUser","deleteAccountOptIn","serviceCall","method","getAccountOptIn","cancel","updateAccountOptIn","params","actions","platform","rhsm","userTypes","rejected","dismissable","autoDismiss","legend","reportCapacity","tally","graphReducer","graphTypes","hostsInventory","hostsGuests","instancesInventory","subscriptionsInventory","tabs","inventoryReducer","inventoryTypes","report","messagesReducer","filters","toolbarReducer","reduxTypes","activeFilters","currentFilter","optin","userReducer","appTypes","actionStatus","viewReducer","updateResetQueries","queryIds","updatedQuery","queryId","productQuery","updateClearQueries","clearFilters","reducers","graph","messages","toolbar","view","reduxReducers","combineReducers","selectorCache","appMessages","cloudigradeMismatch","cache","assign","reportData","appMessagesSelectors","makeAppMessages","createSelectorCreator","defaultMemoize","_isEqual","createDeepEqualSelector","rest","updatedSession","admin","entitled","responsePermissions","platformApiTypes","APP_TYPES","permission","definitions","resource","operation","resources","RESOURCE_TYPES","OPERATION_TYPES","resourcePermissions","res","op","userSessionSelectors","userSession","makeUserSession","responseData","metaId","updatedResponseData","listData","Date","updatedListData","guestsListSelectors","guestsList","makeGuestsList","LruCache","maxAge","max","stale","updateAgeOnGet","metaQuery","graphData","responseMetaQuery","get","capacity","reportMeta","capacityData","graphDataKey","tallySchema","capacitySchema","customReportValue","presetData","hasData","hasCloudigradeData","hasCloudigradeMismatch","customCapacityValue","x","y","hasInfinite","generateGraphData","graphDataObj","graphDataObjKey","generatedY","casedGraphDataObjKey","updatedItem","updatedReportMeta","set","graphCardSelectors","graphCard","makeGraphCard","itemCount","listMeta","customInventoryValue","updatedListMeta","inventoryListSelectors","inventoryList","makeInventoryList","instancesListSelectors","instancesList","makeInstancesList","subscriptionsList","makeSubscriptionsList","userSelectors","recordAction","items","parsedItems","slice","getActions","priorItem","updatedAction","removeUserIdentity","updatedPayload","sanitizeData","headers","sanitizeActionHeaders","actionObj","diff","timestamp","now","setItem","browser","userAgent","toLocaleString","notificationsOptions","dispatchDefaultFailure","pendingSuffix","fulfilledSuffix","rejectedSuffix","dismissDelay","errorTitleKey","errorDescriptionKey","reduxMiddleware","thunkMiddleware","statusSuffix","rangeSuffix","rangeFiller","statusDelimiter","dispatchRange","statusRange","dispatchStatus","next","payloadConfig","range","floor","statusMiddleware","a","promiseMiddleware","actionRecordMiddleware","version","notificationsMiddleware","createStore","applyMiddleware","STATUS_4XX","STATUS_5XX","SET_GRAPH_LEGEND","SET_INVENTORY_TAB","PLATFORM_ADD_NOTIFICATION","ADD_NOTIFICATION","PLATFORM_REMOVE_NOTIFICATION","REMOVE_NOTIFICATION","PLATFORM_CLEAR_NOTIFICATIONS","CLEAR_NOTIFICATIONS","PLATFORM_GLOBAL_FILTER_HIDE","PLATFORM_INIT","PLATFORM_APP_NAME","PLATFORM_ON_NAV","PLATFORM_SET_NAV","queryTypes","SET_QUERY_CLEAR","SET_QUERY_CLEAR_INVENTORY_LIST","SET_QUERY_RESET_INVENTORY_LIST","SET_QUERY_RHSM_TYPES","SET_QUERY_RHSM_HOSTS_INVENTORY_TYPES","SET_QUERY_RHSM_SUBSCRIPTIONS_INVENTORY_TYPES","DELETE_USER_OPTIN","GET_USER_OPTIN","UPDATE_USER_OPTIN","USER_AUTH","USER_LOCALE","USER_LOGOUT","SET_ACTIVE_FILTERS","SET_FILTER_TYPE","GET_GRAPH_REPORT_CAPACITY_RHSM","GET_GRAPH_TALLY_RHSM","GET_HOSTS_INVENTORY_RHSM","GET_HOSTS_INVENTORY_GUESTS_RHSM","GET_INSTANCES_INVENTORY_RHSM","GET_MESSAGE_REPORTS_RHSM","GET_SUBSCRIPTIONS_INVENTORY_RHSM","camelCase","updatedObj","schemaResponse","casing","convert","validate","details","serviceHelpers","passDataToCallback","serviceConfig","passedConfig","timeout","cancelTokens","responseCache","updatedConfig","cacheResponse","responseTransformers","cancelledMessage","axiosInstance","axios","sortedParams","sort","b","localeCompare","cacheId","cancelTokensId","CancelToken","cancelToken","token","cachedResponse","adapter","adapterConfig","transform","successTransform","errorTransform","transformers","updatedResponse","interceptors","insights","_set","REACT_APP_DEBUG_ORG_ADMIN","chrome","auth","USER_PERMISSION_TYPES","REACT_APP_DEBUG_PERMISSION_APP_ONE","REACT_APP_DEBUG_PERMISSION_APP_TWO","on","identifyApp","appNavClick","parentId","RHEL","RHEL_COMPUTE_NODE","RHEL_DESKTOP","RHEL_SERVER","RHEL_WORKSTATION","RHEL_ARM","RHEL_IBM_POWER","RHEL_IBM_Z","RHEL_X86","RHOSAK","OPENSHIFT","OPENSHIFT_METRICS","OPENSHIFT_DEDICATED_METRICS","SATELLITE","SATELLITE_CAPSULE","SATELLITE_SERVER","CORES","SOCKETS","CORE_SECONDS","INSTANCE_HOURS","STORAGE_GIBIBYTES","TRANSFER_GIBIBYTES","RHSM_API_RESPONSE_META_TYPES","COUNT","PRODUCT","RHSM_API_RESPONSE_INSTANCES_DATA_TYPES","DISPLAY_NAME","INVENTORY_ID","LAST_SEEN","MEASUREMENTS","SUBSCRIPTION_MANAGER_ID","RHSM_API_RESPONSE_INSTANCES_META_TYPES","RHSM_API_RESPONSE_TALLY_DATA_TYPES","DATE","VALUE","HAS_DATA","RHSM_API_RESPONSE_TALLY_META_TYPES","HAS_CLOUDIGRADE_DATA","HAS_CLOUDIGRADE_MISMATCH","METRIC_ID","TOTAL_MONTHLY","RHSM_API_RESPONSE_GRANULARITY_TYPES","DAILY","WEEKLY","MONTHLY","QUARTERLY","RHSM_API_RESPONSE_SLA_TYPES","PREMIUM","STANDARD","SELF","NONE","RHSM_API_RESPONSE_UOM_TYPES","RHSM_API_RESPONSE_USAGE_TYPES","PRODUCTION","DEVELOPMENT","DISASTER","UNSPECIFIED","RHSM_API_QUERY_GRANULARITY_TYPES","NAME","RHSM_API_QUERY_INVENTORY_SORT_DIRECTION_TYPES","ASCENDING","DESCENDING","RHSM_API_QUERY_SLA_TYPES","RHSM_API_QUERY_USAGE_TYPES","RHSM_API_QUERY_SET_INVENTORY_TYPES","DIRECTION","END_DATE","LIMIT","OFFSET","SLA","SORT","START_DATE","UOM","USAGE","RHSM_API_QUERY_SET_TALLY_CAPACITY_TYPES","GRANULARITY","rhsmConstants","RHSM_API_RESPONSE_DATA","RHSM_API_RESPONSE_META","RHSM_API_RESPONSE_ERROR_CODE_TYPES","GENERIC","OPTIN","Joi","JoiBase","JoiDate","errorItem","object","code","string","detail","unknown","errorResponseSchema","errors","array","linksSchema","metaResponseSchema","number","integer","product","valid","instancesMetaSchema","measurements","instancesItem","inventory_id","optional","allow","display_name","subscription_manager_id","last_seen","utc","instancesResponseSchema","links","tallyItem","has_data","tallyMetaSchema","has_cloudigrade_data","has_cloudigrade_mismatch","metric_id","total_monthly","tallyResponseSchema","rhsmSchemas","instances","rhsmTranformers","metaMeasurements","INSTANCES_META_TYPES","INSTANCES_DATA_TYPES","currentDay","TALLY_DATA_TYPES","isCurrentDate","TALLY_META_TYPES","metricId","totalMonthlyDate","totalMonthlyHasData","totalMonthlyValue","getApiVersion","getGraphCapacity","getGraphReports","updatedId","PLATFORM_API_RESPONSE_USER_PERMISSION_TYPES","PERMISSION","RESOURCE_DEFS","PLATFORM_API_RESPONSE_USER_PERMISSION_APP_TYPES","SUBSCRIPTIONS","PLATFORM_API_RESPONSE_USER_PERMISSION_RESOURCE_TYPES","ALL","PLATFORM_API_RESPONSE_USER_PERMISSION_OPERATION_TYPES","READ","WRITE","PLATFORM_API_RESPONSE_NAV_TYPES","ACTIVE_APP","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS","PLATFORM_API_RESPONSE_USER_ENTITLEMENTS_APP_TYPES","ENTITLED","PLATFORM_API_RESPONSE_USER_IDENTITY","PLATFORM_API_RESPONSE_USER_IDENTITY_TYPES","USER","PLATFORM_API_RESPONSE_USER_IDENTITY_USER_TYPES","ORG_ADMIN","RHSM_API_RESPONSE_ERROR_DATA_CODE_TYPES","CORE_HOURS","HARDWARE","MEASUREMENT","NEXT_EVENT_DATE","NEXT_EVENT_TYPE","QUANTITY","SKU","SERVICE_LEVEL","RHSM_API_QUERY_SORT_DIRECTION_TYPES","RHSM_API_QUERY_SET_OPTIN_TYPES","CONDUIT_SYNC","TALLY_REPORT","TALLY_SYNC","RHSM_API_QUERY_SET_REPORT_CAPACITY_TYPES","RHSM_API_QUERY_SET_INVENTORY_GUESTS_TYPES","RHSM_API_QUERY_SET_INVENTORY_SUBSCRIPTIONS_TYPES","RHSM_API_RESPONSE_ERROR_DATA","RHSM_API_RESPONSE_ERROR_DATA_TYPES","CODE","DETAIL","RHSM_API_RESPONSE_LINKS","RHSM_API_RESPONSE_LINKS_TYPES","FIRST","LAST","PREVIOUS","NEXT","TOTAL_CORE_HOURS","TOTAL_INSTANCE_HOURS","RHSM_API_RESPONSE_CAPACITY_DATA","RHSM_API_RESPONSE_CAPACITY_DATA_TYPES","CLOUD_CORES","CLOUD_INSTANCES","CLOUD_SOCKETS","HYPERVISOR_CORES","HYPERVISOR_SOCKETS","PHYSICAL_CORES","PHYSICAL_SOCKETS","HAS_INFINITE","RHSM_API_RESPONSE_INVENTORY_DATA","RHSM_API_RESPONSE_INVENTORY_DATA_TYPES","CLOUD_PROVIDER","GUESTS","ID","SUBSCRIPTION_ID","RHSM_API_RESPONSE_INVENTORY_GUESTS_DATA_TYPES","RHSM_API_RESPONSE_INVENTORY_SUBSCRIPTIONS_DATA_TYPES","PRODUCT_NAME","PHYSICAL_CAPACITY","VIRTUAL_CAPACITY","TOTAL_CAPACITY","RHSM_API_RESPONSE_PRODUCTS_DATA","RHSM_API_RESPONSE_PRODUCTS_DATA_TYPES","RHSM_API_QUERY_SUBSCRIPTIONS_EVENT_TYPES","EVENT_START","EVENT_END","webpackContext","req","webpackContextResolve","__webpack_require__","o","webpackAsyncContext","then","ids"],"sourceRoot":""}